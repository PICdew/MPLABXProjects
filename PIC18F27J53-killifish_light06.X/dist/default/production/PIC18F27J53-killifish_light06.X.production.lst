

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Jan 12 20:52:39 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   113                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   114                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   115                           	dabs	1,0xD00,48,_BDT
   116                           	dabs	1,0xD38,8,_CtrlTrfData
   117                           	dabs	1,0xD30,8,_SetupPkt
   118  0000                     
   119                           	psect	idataBANK0
   120  001004                     __pidataBANK0:
   121                           	opt stack 0
   122                           
   123                           ;initializer for epoch_to_caltime@month_cache
   124  001004  01                 	db	1
   125                           
   126                           	psect	idataBANK1
   127  014746                     __pidataBANK1:
   128                           	opt stack 0
   129                           
   130                           ;initializer for I2C_LCD_SetCursor@F8685
   131  014746  00                 	db	0
   132  014747  40                 	db	64
   133                           
   134                           ;initializer for ST7032_cursor@F8640
   135  014748  00                 	db	0
   136  014749  40                 	db	64
   137                           
   138                           	psect	mediumconst
   139  00FD02                     __pmediumconst:
   140                           	opt stack 0
   141  00FD02  00                 	db	0
   142  00FD03                     _dpowers:
   143                           	opt stack 0
   144  00FD03  0001               	dw	1
   145  00FD05  000A               	dw	10
   146  00FD07  0064               	dw	100
   147  00FD09  03E8               	dw	1000
   148  00FD0B  2710               	dw	10000
   149  00FD0D                     __end_of_dpowers:
   150                           	opt stack 0
   151  00FD0D                     _USB_SD_Ptr:
   152                           	opt stack 0
   153  00FD0D  EE                 	db	low _sd000
   154  00FD0E  FD                 	db	high _sd000
   155  00FD0F  58                 	db	low _sd001
   156  00FD10  FD                 	db	high _sd001
   157  00FD11  8C                 	db	low _sd002
   158  00FD12  FD                 	db	high _sd002
   159  00FD13                     __end_of_USB_SD_Ptr:
   160                           	opt stack 0
   161  00FD13                     _USB_CD_Ptr:
   162                           	opt stack 0
   163  00FD13  15                 	db	low _configDescriptor1
   164  00FD14  FD                 	db	high _configDescriptor1
   165  00FD15                     __end_of_USB_CD_Ptr:
   166                           	opt stack 0
   167  00FD15                     _configDescriptor1:
   168                           	opt stack 0
   169  00FD15  09                 	db	9
   170  00FD16  02                 	db	2
   171  00FD17  43                 	db	67
   172  00FD18  00                 	db	0
   173  00FD19  02                 	db	2
   174  00FD1A  01                 	db	1
   175  00FD1B  00                 	db	0
   176  00FD1C  C0                 	db	192
   177  00FD1D  32                 	db	50
   178  00FD1E  09                 	db	9
   179  00FD1F  04                 	db	4
   180  00FD20  00                 	db	0
   181  00FD21  00                 	db	0
   182  00FD22  01                 	db	1
   183  00FD23  02                 	db	2
   184  00FD24  02                 	db	2
   185  00FD25  01                 	db	1
   186  00FD26  00                 	db	0
   187  00FD27  05                 	db	5
   188  00FD28  24                 	db	36
   189  00FD29  00                 	db	0
   190  00FD2A  10                 	db	16
   191  00FD2B  01                 	db	1
   192  00FD2C  04                 	db	4
   193  00FD2D  24                 	db	36
   194  00FD2E  02                 	db	2
   195  00FD2F  02                 	db	2
   196  00FD30  05                 	db	5
   197  00FD31  24                 	db	36
   198  00FD32  06                 	db	6
   199  00FD33  00                 	db	0
   200  00FD34  01                 	db	1
   201  00FD35  05                 	db	5
   202  00FD36  24                 	db	36
   203  00FD37  01                 	db	1
   204  00FD38  00                 	db	0
   205  00FD39  01                 	db	1
   206  00FD3A  07                 	db	7
   207  00FD3B  05                 	db	5
   208  00FD3C  81                 	db	129
   209  00FD3D  03                 	db	3
   210  00FD3E  08                 	db	8
   211  00FD3F  00                 	db	0
   212  00FD40  02                 	db	2
   213  00FD41  09                 	db	9
   214  00FD42  04                 	db	4
   215  00FD43  01                 	db	1
   216  00FD44  00                 	db	0
   217  00FD45  02                 	db	2
   218  00FD46  0A                 	db	10
   219  00FD47  00                 	db	0
   220  00FD48  00                 	db	0
   221  00FD49  00                 	db	0
   222  00FD4A  07                 	db	7
   223  00FD4B  05                 	db	5
   224  00FD4C  02                 	db	2
   225  00FD4D  02                 	db	2
   226  00FD4E  40                 	db	64
   227  00FD4F  00                 	db	0
   228  00FD50  00                 	db	0
   229  00FD51  07                 	db	7
   230  00FD52  05                 	db	5
   231  00FD53  82                 	db	130
   232  00FD54  02                 	db	2
   233  00FD55  40                 	db	64
   234  00FD56  00                 	db	0
   235  00FD57  00                 	db	0
   236  00FD58                     __end_of_configDescriptor1:
   237                           	opt stack 0
   238  00FD58                     _sd001:
   239                           	opt stack 0
   240  00FD58  34                 	db	52
   241  00FD59  03                 	db	3
   242  00FD5A  004D               	dw	77
   243  00FD5C  0069               	dw	105
   244  00FD5E  0063               	dw	99
   245  00FD60  0072               	dw	114
   246  00FD62  006F               	dw	111
   247  00FD64  0063               	dw	99
   248  00FD66  0068               	dw	104
   249  00FD68  0069               	dw	105
   250  00FD6A  0070               	dw	112
   251  00FD6C  0020               	dw	32
   252  00FD6E  0054               	dw	84
   253  00FD70  0065               	dw	101
   254  00FD72  0063               	dw	99
   255  00FD74  0068               	dw	104
   256  00FD76  006E               	dw	110
   257  00FD78  006F               	dw	111
   258  00FD7A  006C               	dw	108
   259  00FD7C  006F               	dw	111
   260  00FD7E  0067               	dw	103
   261  00FD80  0079               	dw	121
   262  00FD82  0020               	dw	32
   263  00FD84  0049               	dw	73
   264  00FD86  006E               	dw	110
   265  00FD88  0063               	dw	99
   266  00FD8A  002E               	dw	46
   267  00FD8C                     __end_of_sd001:
   268                           	opt stack 0
   269  00FD8C                     _sd002:
   270                           	opt stack 0
   271  00FD8C  34                 	db	52
   272  00FD8D  03                 	db	3
   273  00FD8E  0043               	dw	67
   274  00FD90  0044               	dw	68
   275  00FD92  0043               	dw	67
   276  00FD94  0020               	dw	32
   277  00FD96  0052               	dw	82
   278  00FD98  0053               	dw	83
   279  00FD9A  002D               	dw	45
   280  00FD9C  0032               	dw	50
   281  00FD9E  0033               	dw	51
   282  00FDA0  0032               	dw	50
   283  00FDA2  0020               	dw	32
   284  00FDA4  0045               	dw	69
   285  00FDA6  006D               	dw	109
   286  00FDA8  0075               	dw	117
   287  00FDAA  006C               	dw	108
   288  00FDAC  0061               	dw	97
   289  00FDAE  0074               	dw	116
   290  00FDB0  0069               	dw	105
   291  00FDB2  006F               	dw	111
   292  00FDB4  006E               	dw	110
   293  00FDB6  0020               	dw	32
   294  00FDB8  0044               	dw	68
   295  00FDBA  0065               	dw	101
   296  00FDBC  006D               	dw	109
   297  00FDBE  006F               	dw	111
   298  00FDC0                     __end_of_sd002:
   299                           	opt stack 0
   300  00FDC0                     _weekday_3char:
   301                           	opt stack 0
   302  00FDC0  53                 	db	83
   303  00FDC1  55                 	db	85
   304  00FDC2  4E                 	db	78
   305  00FDC3  00                 	db	0
   306  00FDC4  4D                 	db	77
   307  00FDC5  4F                 	db	79
   308  00FDC6  4E                 	db	78
   309  00FDC7  00                 	db	0
   310  00FDC8  54                 	db	84
   311  00FDC9  55                 	db	85
   312  00FDCA  45                 	db	69
   313  00FDCB  00                 	db	0
   314  00FDCC  57                 	db	87
   315  00FDCD  45                 	db	69
   316  00FDCE  44                 	db	68
   317  00FDCF  00                 	db	0
   318  00FDD0  54                 	db	84
   319  00FDD1  48                 	db	72
   320  00FDD2  55                 	db	85
   321  00FDD3  00                 	db	0
   322  00FDD4  46                 	db	70
   323  00FDD5  52                 	db	82
   324  00FDD6  49                 	db	73
   325  00FDD7  00                 	db	0
   326  00FDD8  53                 	db	83
   327  00FDD9  41                 	db	65
   328  00FDDA  54                 	db	84
   329  00FDDB  00                 	db	0
   330  00FDDC                     __end_of_weekday_3char:
   331                           	opt stack 0
   332  00FDDC                     _device_dsc:
   333                           	opt stack 0
   334  00FDDC  12                 	db	18
   335  00FDDD  01                 	db	1
   336  00FDDE  0200               	dw	512
   337  00FDE0  02                 	db	2
   338  00FDE1  00                 	db	0
   339  00FDE2  00                 	db	0
   340  00FDE3  08                 	db	8
   341  00FDE4  04D8               	dw	1240
   342  00FDE6  000A               	dw	10
   343  00FDE8  0100               	dw	256
   344  00FDEA  01                 	db	1
   345  00FDEB  02                 	db	2
   346  00FDEC  00                 	db	0
   347  00FDED  01                 	db	1
   348  00FDEE                     __end_of_device_dsc:
   349                           	opt stack 0
   350  00FDEE                     _sd000:
   351                           	opt stack 0
   352  00FDEE  04                 	db	4
   353  00FDEF  03                 	db	3
   354  00FDF0  0409               	dw	1033
   355  00FDF2                     __end_of_sd000:
   356                           	opt stack 0
   357  0000                     _PPSCONbits	set	3775
   358  0000                     _RPOR3	set	3779
   359  0000                     _RPOR4	set	3780
   360  0000                     _RPOR5	set	3781
   361  0000                     _ANCON0	set	3912
   362  0000                     _ANCON1	set	3913
   363  0000                     _CCP3CONbits	set	3861
   364  0000                     _CCP4CONbits	set	3858
   365  0000                     _CCPR3L	set	3862
   366  0000                     _CCPR3Lbits	set	3862
   367  0000                     _CCPR4L	set	3859
   368  0000                     _CCPR4Lbits	set	3859
   369  0000                     _CCPTMRS0bits	set	3922
   370  0000                     _CCPTMRS1bits	set	3921
   371  0000                     _PADCFG1bits	set	3900
   372  0000                     _RTCCAL	set	3902
   373  0000                     _RTCCFGbits	set	3903
   374  0000                     _RTCVALH	set	3899
   375  0000                     _RTCVALL	set	3898
   376  0000                     _T5CONbits	set	3874
   377  0000                     _UADDR	set	3896
   378  0000                     _UCFG	set	3897
   379  0000                     _UEIE	set	3895
   380  0000                     _UEP0bits	set	3878
   381  0000                     _UIE	set	3894
   382  0000                     _UIEbits	set	3894
   383  0000                     _UEP0	set	3878
   384  0000                     _UEP1	set	3879
   385  0000                     _ADRES	set	4035
   386  0000                     _ADCON0bits	set	4034
   387  0000                     _ADCON1bits	set	4033
   388  0000                     _BAUDCON1bits	set	3966
   389  0000                     _CCP1CONbits	set	4026
   390  0000                     _CCP2CONbits	set	4020
   391  0000                     _CCPR1L	set	4027
   392  0000                     _CCPR1Lbits	set	4027
   393  0000                     _CCPR2L	set	4021
   394  0000                     _CCPR2Lbits	set	4021
   395  0000                     _CTMUCONH	set	4019
   396  0000                     _CTMUCONHbits	set	4019
   397  0000                     _CTMUCONL	set	4018
   398  0000                     _CTMUCONLbits	set	4018
   399  0000                     _CTMUICON	set	4017
   400  0000                     _EECON2	set	4007
   401  0000                     _INTCON2bits	set	4081
   402  0000                     _INTCONbits	set	4082
   403  0000                     _IPR1bits	set	3999
   404  0000                     _IPR2bits	set	4002
   405  0000                     _IPR5bits	set	3993
   406  0000                     _LATBbits	set	3978
   407  0000                     _OSCCONbits	set	4051
   408  0000                     _OSCTUNEbits	set	3995
   409  0000                     _PIE1bits	set	3997
   410  0000                     _PIE2bits	set	4000
   411  0000                     _PIE5bits	set	3985
   412  0000                     _PIR1bits	set	3998
   413  0000                     _PIR2bits	set	4001
   414  0000                     _PIR5bits	set	3992
   415  0000                     _PORTAbits	set	3968
   416  0000                     _PR2	set	4043
   417  0000                     _RCONbits	set	4048
   418  0000                     _RCREG1	set	4015
   419  0000                     _RCSTA1bits	set	4012
   420  0000                     _SPBRG1	set	4016
   421  0000                     _SPBRGH1	set	3967
   422  0000                     _SSP1ADD	set	4040
   423  0000                     _SSP1BUF	set	4041
   424  0000                     _SSP1CON1	set	4038
   425  0000                     _SSP1CON1bits	set	4038
   426  0000                     _SSP1CON2	set	4037
   427  0000                     _SSP1CON2bits	set	4037
   428  0000                     _SSP1STAT	set	4039
   429  0000                     _SSP1STATbits	set	4039
   430  0000                     _SSPBUF	set	4041
   431  0000                     _T0CONbits	set	4053
   432  0000                     _T1CONbits	set	4045
   433  0000                     _T2CONbits	set	4042
   434  0000                     _T3CONbits	set	3961
   435  0000                     _TMR1H	set	4047
   436  0000                     _TRISA	set	3986
   437  0000                     _TRISB	set	3987
   438  0000                     _TRISC	set	3988
   439  0000                     _TXREG1	set	4014
   440  0000                     _TXSTA1bits	set	4013
   441  0000                     _UCON	set	3941
   442  0000                     _UCONbits	set	3941
   443  0000                     _UEIR	set	3939
   444  0000                     _UIR	set	3938
   445  0000                     _UIRbits	set	3938
   446  0000                     _USTAT	set	3940
   447  0000                     _BCL1IF	set	32011
   448  0000                     _LATB2	set	31826
   449  0000                     _SSP1IF	set	31987
   450  00FDF2                     STR_43:
   451                           
   452                           ; BSR set to: 0
   453  00FDF2  09                 	db	9
   454  00FDF3  2A                 	db	42
   455  00FDF4  2A                 	db	42
   456  00FDF5  2A                 	db	42
   457  00FDF6  2A                 	db	42
   458  00FDF7  2A                 	db	42
   459  00FDF8  2A                 	db	42
   460  00FDF9  2A                 	db	42
   461  00FDFA  2A                 	db	42
   462  00FDFB  2A                 	db	42
   463  00FDFC  2A                 	db	42
   464  00FDFD  2A                 	db	42
   465  00FDFE  2A                 	db	42
   466  00FDFF  2A                 	db	42
   467  00FE00  2A                 	db	42
   468  00FE01  2A                 	db	42
   469  00FE02  2A                 	db	42
   470  00FE03  2A                 	db	42
   471  00FE04  2A                 	db	42
   472  00FE05  2A                 	db	42
   473  00FE06  2A                 	db	42
   474  00FE07  2A                 	db	42
   475  00FE08  2A                 	db	42
   476  00FE09  2A                 	db	42
   477  00FE0A  2A                 	db	42
   478  00FE0B  2A                 	db	42
   479  00FE0C  2A                 	db	42
   480  00FE0D  0A                 	db	10
   481  00FE0E  09                 	db	9
   482  00FE0F  2A                 	db	42
   483  00FE10  2A                 	db	42
   484  00FE11  2A                 	db	42
   485  00FE12  2A                 	db	42
   486  00FE13  20                 	db	32
   487  00FE14  4B                 	db	75	;'K'
   488  00FE15  69                 	db	105	;'i'
   489  00FE16  6C                 	db	108	;'l'
   490  00FE17  6C                 	db	108	;'l'
   491  00FE18  69                 	db	105	;'i'
   492  00FE19  66                 	db	102	;'f'
   493  00FE1A  69                 	db	105	;'i'
   494  00FE1B  73                 	db	115	;'s'
   495  00FE1C  68                 	db	104	;'h'
   496  00FE1D  20                 	db	32
   497  00FE1E  4C                 	db	76	;'L'
   498  00FE1F  69                 	db	105	;'i'
   499  00FE20  67                 	db	103	;'g'
   500  00FE21  68                 	db	104	;'h'
   501  00FE22  74                 	db	116	;'t'
   502  00FE23  20                 	db	32
   503  00FE24  20                 	db	32
   504  00FE25  2A                 	db	42
   505  00FE26  2A                 	db	42
   506  00FE27  2A                 	db	42
   507  00FE28  2A                 	db	42
   508  00FE29  0A                 	db	10
   509  00FE2A  09                 	db	9
   510  00FE2B  2A                 	db	42
   511  00FE2C  2A                 	db	42
   512  00FE2D  2A                 	db	42
   513  00FE2E  2A                 	db	42
   514  00FE2F  20                 	db	32
   515  00FE30  4D                 	db	77	;'M'
   516  00FE31  61                 	db	97	;'a'
   517  00FE32  64                 	db	100	;'d'
   518  00FE33  65                 	db	101	;'e'
   519  00FE34  20                 	db	32
   520  00FE35  62                 	db	98	;'b'
   521  00FE36  79                 	db	121	;'y'
   522  00FE37  20                 	db	32
   523  00FE38  40                 	db	64	;'@'
   524  00FE39  52                 	db	82	;'R'
   525  00FE3A  79                 	db	121	;'y'
   526  00FE3B  6F                 	db	111	;'o'
   527  00FE3C  6B                 	db	107	;'k'
   528  00FE3D  65                 	db	101	;'e'
   529  00FE3E  72                 	db	114	;'r'
   530  00FE3F  69                 	db	105	;'i'
   531  00FE40  20                 	db	32
   532  00FE41  2A                 	db	42
   533  00FE42  2A                 	db	42
   534  00FE43  2A                 	db	42
   535  00FE44  2A                 	db	42
   536  00FE45  0A                 	db	10
   537  00FE46  09                 	db	9
   538  00FE47  2A                 	db	42
   539  00FE48  2A                 	db	42
   540  00FE49  2A                 	db	42
   541  00FE4A  2A                 	db	42
   542  00FE4B  2A                 	db	42
   543  00FE4C  2A                 	db	42
   544  00FE4D  2A                 	db	42
   545  00FE4E  2A                 	db	42
   546  00FE4F  2A                 	db	42
   547  00FE50  2A                 	db	42
   548  00FE51  2A                 	db	42
   549  00FE52  2A                 	db	42
   550  00FE53  2A                 	db	42
   551  00FE54  2A                 	db	42
   552  00FE55  2A                 	db	42
   553  00FE56  2A                 	db	42
   554  00FE57  2A                 	db	42
   555  00FE58  2A                 	db	42
   556  00FE59  2A                 	db	42
   557  00FE5A  2A                 	db	42
   558  00FE5B  2A                 	db	42
   559  00FE5C  2A                 	db	42
   560  00FE5D  2A                 	db	42
   561  00FE5E  2A                 	db	42
   562  00FE5F  2A                 	db	42
   563  00FE60  2A                 	db	42
   564  00FE61  0A                 	db	10
   565  00FE62  0A                 	db	10
   566  00FE63  09                 	db	9
   567  00FE64  63                 	db	99	;'c'
   568  00FE65  6F                 	db	111	;'o'
   569  00FE66  6D                 	db	109	;'m'
   570  00FE67  6D                 	db	109	;'m'
   571  00FE68  61                 	db	97	;'a'
   572  00FE69  6E                 	db	110	;'n'
   573  00FE6A  64                 	db	100	;'d'
   574  00FE6B  20                 	db	32
   575  00FE6C  09                 	db	9
   576  00FE6D  6F                 	db	111	;'o'
   577  00FE6E  70                 	db	112	;'p'
   578  00FE6F  65                 	db	101	;'e'
   579  00FE70  6C                 	db	108	;'l'
   580  00FE71  61                 	db	97	;'a'
   581  00FE72  6E                 	db	110	;'n'
   582  00FE73  64                 	db	100	;'d'
   583  00FE74  31                 	db	49	;'1'
   584  00FE75  09                 	db	9
   585  00FE76  6F                 	db	111	;'o'
   586  00FE77  70                 	db	112	;'p'
   587  00FE78  65                 	db	101	;'e'
   588  00FE79  6C                 	db	108	;'l'
   589  00FE7A  61                 	db	97	;'a'
   590  00FE7B  6E                 	db	110	;'n'
   591  00FE7C  64                 	db	100	;'d'
   592  00FE7D  32                 	db	50	;'2'
   593  00FE7E  0A                 	db	10
   594  00FE7F  0A                 	db	10
   595  00FE80  09                 	db	9
   596  00FE81  70                 	db	112	;'p'
   597  00FE82  72                 	db	114	;'r'
   598  00FE83  69                 	db	105	;'i'
   599  00FE84  6E                 	db	110	;'n'
   600  00FE85  74                 	db	116	;'t'
   601  00FE86  5F                 	db	95	;'_'
   602  00FE87  74                 	db	116	;'t'
   603  00FE88  69                 	db	105	;'i'
   604  00FE89  6D                 	db	109	;'m'
   605  00FE8A  65                 	db	101	;'e'
   606  00FE8B  28                 	db	40
   607  00FE8C  74                 	db	116	;'t'
   608  00FE8D  29                 	db	41
   609  00FE8E  0A                 	db	10
   610  00FE8F  09                 	db	9
   611  00FE90  61                 	db	97	;'a'
   612  00FE91  64                 	db	100	;'d'
   613  00FE92  6A                 	db	106	;'j'
   614  00FE93  75                 	db	117	;'u'
   615  00FE94  73                 	db	115	;'s'
   616  00FE95  74                 	db	116	;'t'
   617  00FE96  5F                 	db	95	;'_'
   618  00FE97  74                 	db	116	;'t'
   619  00FE98  69                 	db	105	;'i'
   620  00FE99  6D                 	db	109	;'m'
   621  00FE9A  65                 	db	101	;'e'
   622  00FE9B  28                 	db	40
   623  00FE9C  61                 	db	97	;'a'
   624  00FE9D  74                 	db	116	;'t'
   625  00FE9E  29                 	db	41
   626  00FE9F  20                 	db	32
   627  00FEA0  5B                 	db	91	;'['
   628  00FEA1  68                 	db	104	;'h'
   629  00FEA2  61                 	db	97	;'a'
   630  00FEA3  6E                 	db	110	;'n'
   631  00FEA4  64                 	db	100	;'d'
   632  00FEA5  3A                 	db	58	;':'
   633  00FEA6  79                 	db	121	;'y'
   634  00FEA7  2C                 	db	44
   635  00FEA8  4D                 	db	77	;'M'
   636  00FEA9  2C                 	db	44
   637  00FEAA  64                 	db	100	;'d'
   638  00FEAB  2C                 	db	44
   639  00FEAC  68                 	db	104	;'h'
   640  00FEAD  2C                 	db	44
   641  00FEAE  6D                 	db	109	;'m'
   642  00FEAF  2C                 	db	44
   643  00FEB0  73                 	db	115	;'s'
   644  00FEB1  5D                 	db	93	;']'
   645  00FEB2  20                 	db	32
   646  00FEB3  5B                 	db	91	;'['
   647  00FEB4  76                 	db	118	;'v'
   648  00FEB5  61                 	db	97	;'a'
   649  00FEB6  6C                 	db	108	;'l'
   650  00FEB7  75                 	db	117	;'u'
   651  00FEB8  65                 	db	101	;'e'
   652  00FEB9  28                 	db	40
   653  00FEBA  64                 	db	100	;'d'
   654  00FEBB  65                 	db	101	;'e'
   655  00FEBC  63                 	db	99	;'c'
   656  00FEBD  69                 	db	105	;'i'
   657  00FEBE  6D                 	db	109	;'m'
   658  00FEBF  61                 	db	97	;'a'
   659  00FEC0  6C                 	db	108	;'l'
   660  00FEC1  29                 	db	41
   661  00FEC2  5D                 	db	93	;']'
   662  00FEC3  0A                 	db	10
   663  00FEC4  09                 	db	9
   664  00FEC5  70                 	db	112	;'p'
   665  00FEC6  77                 	db	119	;'w'
   666  00FEC7  6D                 	db	109	;'m'
   667  00FEC8  20                 	db	32
   668  00FEC9  5B                 	db	91	;'['
   669  00FECA  63                 	db	99	;'c'
   670  00FECB  6F                 	db	111	;'o'
   671  00FECC  6C                 	db	108	;'l'
   672  00FECD  6F                 	db	111	;'o'
   673  00FECE  72                 	db	114	;'r'
   674  00FECF  3A                 	db	58	;':'
   675  00FED0  52                 	db	82	;'R'
   676  00FED1  2C                 	db	44
   677  00FED2  47                 	db	71	;'G'
   678  00FED3  2C                 	db	44
   679  00FED4  42                 	db	66	;'B'
   680  00FED5  2C                 	db	44
   681  00FED6  57                 	db	87	;'W'
   682  00FED7  5D                 	db	93	;']'
   683  00FED8  20                 	db	32
   684  00FED9  5B                 	db	91	;'['
   685  00FEDA  76                 	db	118	;'v'
   686  00FEDB  61                 	db	97	;'a'
   687  00FEDC  6C                 	db	108	;'l'
   688  00FEDD  75                 	db	117	;'u'
   689  00FEDE  65                 	db	101	;'e'
   690  00FEDF  28                 	db	40
   691  00FEE0  25                 	db	37
   692  00FEE1  29                 	db	41
   693  00FEE2  3A                 	db	58	;':'
   694  00FEE3  30                 	db	48	;'0'
   695  00FEE4  7E                 	db	126
   696  00FEE5  31                 	db	49	;'1'
   697  00FEE6  30                 	db	48	;'0'
   698  00FEE7  30                 	db	48	;'0'
   699  00FEE8  5D                 	db	93	;']'
   700  00FEE9  0A                 	db	10
   701  00FEEA  09                 	db	9
   702  00FEEB  70                 	db	112	;'p'
   703  00FEEC  77                 	db	119	;'w'
   704  00FEED  6D                 	db	109	;'m'
   705  00FEEE  20                 	db	32
   706  00FEEF  63                 	db	99	;'c'
   707  00FEF0  6C                 	db	108	;'l'
   708  00FEF1  65                 	db	101	;'e'
   709  00FEF2  61                 	db	97	;'a'
   710  00FEF3  72                 	db	114	;'r'
   711  00FEF4  0A                 	db	10
   712  00FEF5  09                 	db	9
   713  00FEF6  73                 	db	115	;'s'
   714  00FEF7  65                 	db	101	;'e'
   715  00FEF8  74                 	db	116	;'t'
   716  00FEF9  20                 	db	32
   717  00FEFA  74                 	db	116	;'t'
   718  00FEFB  69                 	db	105	;'i'
   719  00FEFC  6D                 	db	109	;'m'
   720  00FEFD  65                 	db	101	;'e'
   721  00FEFE  5F                 	db	95	;'_'
   722  00FEFF  73                 	db	115	;'s'
   723  00FF00  79                 	db	121	;'y'
   724  00FF01  6E                 	db	110	;'n'
   725  00FF02  63                 	db	99	;'c'
   726  00FF03  5F                 	db	95	;'_'
   727  00FF04  6D                 	db	109	;'m'
   728  00FF05  6F                 	db	111	;'o'
   729  00FF06  64                 	db	100	;'d'
   730  00FF07  65                 	db	101	;'e'
   731  00FF08  28                 	db	40
   732  00FF09  73                 	db	115	;'s'
   733  00FF0A  79                 	db	121	;'y'
   734  00FF0B  6E                 	db	110	;'n'
   735  00FF0C  63                 	db	99	;'c'
   736  00FF0D  29                 	db	41
   737  00FF0E  0A                 	db	10
   738  00FF0F  09                 	db	9
   739  00FF10  73                 	db	115	;'s'
   740  00FF11  65                 	db	101	;'e'
   741  00FF12  74                 	db	116	;'t'
   742  00FF13  20                 	db	32
   743  00FF14  41                 	db	65	;'A'
   744  00FF15  44                 	db	68	;'D'
   745  00FF16  43                 	db	67	;'C'
   746  00FF17  5F                 	db	95	;'_'
   747  00FF18  6D                 	db	109	;'m'
   748  00FF19  6F                 	db	111	;'o'
   749  00FF1A  64                 	db	100	;'d'
   750  00FF1B  65                 	db	101	;'e'
   751  00FF1C  28                 	db	40
   752  00FF1D  61                 	db	97	;'a'
   753  00FF1E  64                 	db	100	;'d'
   754  00FF1F  63                 	db	99	;'c'
   755  00FF20  29                 	db	41
   756  00FF21  0A                 	db	10
   757  00FF22  09                 	db	9
   758  00FF23  52                 	db	82	;'R'
   759  00FF24  45                 	db	69	;'E'
   760  00FF25  53                 	db	83	;'S'
   761  00FF26  45                 	db	69	;'E'
   762  00FF27  54                 	db	84	;'T'
   763  00FF28  28                 	db	40
   764  00FF29  29                 	db	41
   765  00FF2A  3B                 	db	59	;';'
   766  00FF2B  0A                 	db	10
   767  00FF2C  00                 	db	0
   768  00FF2D                     STR_23:
   769                           
   770                           ; BSR set to: 0
   771  00FF2D  09                 	db	9
   772  00FF2E  32                 	db	50	;'2'
   773  00FF2F  30                 	db	48	;'0'
   774  00FF30  25                 	db	37
   775  00FF31  30                 	db	48	;'0'
   776  00FF32  32                 	db	50	;'2'
   777  00FF33  64                 	db	100	;'d'
   778  00FF34  2F                 	db	47
   779  00FF35  25                 	db	37
   780  00FF36  30                 	db	48	;'0'
   781  00FF37  32                 	db	50	;'2'
   782  00FF38  64                 	db	100	;'d'
   783  00FF39  2F                 	db	47
   784  00FF3A  25                 	db	37
   785  00FF3B  30                 	db	48	;'0'
   786  00FF3C  32                 	db	50	;'2'
   787  00FF3D  64                 	db	100	;'d'
   788  00FF3E  28                 	db	40
   789  00FF3F  25                 	db	37
   790  00FF40  73                 	db	115	;'s'
   791  00FF41  29                 	db	41
   792  00FF42  25                 	db	37
   793  00FF43  30                 	db	48	;'0'
   794  00FF44  32                 	db	50	;'2'
   795  00FF45  64                 	db	100	;'d'
   796  00FF46  3A                 	db	58	;':'
   797  00FF47  25                 	db	37
   798  00FF48  30                 	db	48	;'0'
   799  00FF49  32                 	db	50	;'2'
   800  00FF4A  64                 	db	100	;'d'
   801  00FF4B  2D                 	db	45
   802  00FF4C  25                 	db	37
   803  00FF4D  30                 	db	48	;'0'
   804  00FF4E  32                 	db	50	;'2'
   805  00FF4F  64                 	db	100	;'d'
   806  00FF50  0A                 	db	10
   807  00FF51  00                 	db	0
   808  00FF52                     STR_28:
   809                           
   810                           ; BSR set to: 0
   811  00FF52  61                 	db	97	;'a'
   812  00FF53  64                 	db	100	;'d'
   813  00FF54  6A                 	db	106	;'j'
   814  00FF55  75                 	db	117	;'u'
   815  00FF56  73                 	db	115	;'s'
   816  00FF57  74                 	db	116	;'t'
   817  00FF58  5F                 	db	95	;'_'
   818  00FF59  74                 	db	116	;'t'
   819  00FF5A  69                 	db	105	;'i'
   820  00FF5B  6D                 	db	109	;'m'
   821  00FF5C  65                 	db	101	;'e'
   822  00FF5D  00                 	db	0
   823  00FF5E                     STR_25:
   824                           
   825                           ; BSR set to: 0
   826  00FF5E  70                 	db	112	;'p'
   827  00FF5F  72                 	db	114	;'r'
   828  00FF60  69                 	db	105	;'i'
   829  00FF61  6E                 	db	110	;'n'
   830  00FF62  74                 	db	116	;'t'
   831  00FF63  5F                 	db	95	;'_'
   832  00FF64  74                 	db	116	;'t'
   833  00FF65  69                 	db	105	;'i'
   834  00FF66  6D                 	db	109	;'m'
   835  00FF67  65                 	db	101	;'e'
   836  00FF68  00                 	db	0
   837  00FF69                     STR_44:
   838                           
   839                           ; BSR set to: 0
   840  00FF69  52                 	db	82	;'R'
   841  00FF6A  45                 	db	69	;'E'
   842  00FF6B  53                 	db	83	;'S'
   843  00FF6C  45                 	db	69	;'E'
   844  00FF6D  54                 	db	84	;'T'
   845  00FF6E  28                 	db	40
   846  00FF6F  29                 	db	41
   847  00FF70  3B                 	db	59	;';'
   848  00FF71  00                 	db	0
   849  00FF72                     STR_45:
   850                           
   851                           ; BSR set to: 0
   852  00FF72  62                 	db	98	;'b'
   853  00FF73  6F                 	db	111	;'o'
   854  00FF74  6F                 	db	111	;'o'
   855  00FF75  74                 	db	116	;'t'
   856  00FF76  6C                 	db	108	;'l'
   857  00FF77  6F                 	db	111	;'o'
   858  00FF78  61                 	db	97	;'a'
   859  00FF79  64                 	db	100	;'d'
   860  00FF7A  00                 	db	0
   861  00FF7B                     STR_15:
   862                           
   863                           ; BSR set to: 0
   864  00FF7B  20                 	db	32
   865  00FF7C  20                 	db	32
   866  00FF7D  20                 	db	32
   867  00FF7E  20                 	db	32
   868  00FF7F  20                 	db	32
   869  00FF80  20                 	db	32
   870  00FF81  20                 	db	32
   871  00FF82  20                 	db	32
   872  00FF83  00                 	db	0
   873  00FF84                     STR_24:
   874                           
   875                           ; BSR set to: 0
   876  00FF84  09                 	db	9
   877  00FF85  65                 	db	101	;'e'
   878  00FF86  72                 	db	114	;'r'
   879  00FF87  72                 	db	114	;'r'
   880  00FF88  6F                 	db	111	;'o'
   881  00FF89  72                 	db	114	;'r'
   882  00FF8A  0A                 	db	10
   883  00FF8B  00                 	db	0
   884  00FF8C                     STR_61:
   885                           
   886                           ; BSR set to: 0
   887  00FF8C  28                 	db	40
   888  00FF8D  6E                 	db	110	;'n'
   889  00FF8E  75                 	db	117	;'u'
   890  00FF8F  6C                 	db	108	;'l'
   891  00FF90  6C                 	db	108	;'l'
   892  00FF91  29                 	db	41
   893  00FF92  00                 	db	0
   894  00FF93                     STR_40:
   895                           
   896                           ; BSR set to: 0
   897  00FF93  73                 	db	115	;'s'
   898  00FF94  65                 	db	101	;'e'
   899  00FF95  63                 	db	99	;'c'
   900  00FF96  6F                 	db	111	;'o'
   901  00FF97  6E                 	db	110	;'n'
   902  00FF98  64                 	db	100	;'d'
   903  00FF99  00                 	db	0
   904  00FF9A                     STR_38:
   905                           
   906                           ; BSR set to: 0
   907  00FF9A  6D                 	db	109	;'m'
   908  00FF9B  69                 	db	105	;'i'
   909  00FF9C  6E                 	db	110	;'n'
   910  00FF9D  75                 	db	117	;'u'
   911  00FF9E  74                 	db	116	;'t'
   912  00FF9F  65                 	db	101	;'e'
   913  00FFA0  00                 	db	0
   914  00FFA1                     STR_60:
   915                           
   916                           ; BSR set to: 0
   917  00FFA1  63                 	db	99	;'c'
   918  00FFA2  6C                 	db	108	;'l'
   919  00FFA3  65                 	db	101	;'e'
   920  00FFA4  61                 	db	97	;'a'
   921  00FFA5  72                 	db	114	;'r'
   922  00FFA6  00                 	db	0
   923  00FFA7                     STR_32:
   924                           
   925                           ; BSR set to: 0
   926  00FFA7  6D                 	db	109	;'m'
   927  00FFA8  6F                 	db	111	;'o'
   928  00FFA9  6E                 	db	110	;'n'
   929  00FFAA  74                 	db	116	;'t'
   930  00FFAB  68                 	db	104	;'h'
   931  00FFAC  00                 	db	0
   932  00FFAD                     STR_47:
   933                           
   934                           ; BSR set to: 0
   935  00FFAD  73                 	db	115	;'s'
   936  00FFAE  79                 	db	121	;'y'
   937  00FFAF  6E                 	db	110	;'n'
   938  00FFB0  63                 	db	99	;'c'
   939  00FFB1  00                 	db	0
   940  00FFB2                     STR_41:
   941                           
   942                           ; BSR set to: 0
   943  00FFB2  68                 	db	104	;'h'
   944  00FFB3  65                 	db	101	;'e'
   945  00FFB4  6C                 	db	108	;'l'
   946  00FFB5  70                 	db	112	;'p'
   947  00FFB6  00                 	db	0
   948  00FFB7                     STR_30:
   949                           
   950                           ; BSR set to: 0
   951  00FFB7  79                 	db	121	;'y'
   952  00FFB8  65                 	db	101	;'e'
   953  00FFB9  61                 	db	97	;'a'
   954  00FFBA  72                 	db	114	;'r'
   955  00FFBB  00                 	db	0
   956  00FFBC                     STR_36:
   957                           
   958                           ; BSR set to: 0
   959  00FFBC  68                 	db	104	;'h'
   960  00FFBD  6F                 	db	111	;'o'
   961  00FFBE  75                 	db	117	;'u'
   962  00FFBF  72                 	db	114	;'r'
   963  00FFC0  00                 	db	0
   964  00FFC1                     STR_1:
   965                           
   966                           ; BSR set to: 0
   967  00FFC1  25                 	db	37
   968  00FFC2  30                 	db	48	;'0'
   969  00FFC3  32                 	db	50	;'2'
   970  00FFC4  64                 	db	100	;'d'
   971  00FFC5  00                 	db	0
   972  00FFC6                     STR_49:
   973                           
   974                           ; BSR set to: 0
   975  00FFC6  41                 	db	65	;'A'
   976  00FFC7  44                 	db	68	;'D'
   977  00FFC8  43                 	db	67	;'C'
   978  00FFC9  00                 	db	0
   979  00FFCA                     STR_51:
   980                           
   981                           ; BSR set to: 0
   982  00FFCA  50                 	db	80	;'P'
   983  00FFCB  57                 	db	87	;'W'
   984  00FFCC  4D                 	db	77	;'M'
   985  00FFCD  00                 	db	0
   986  00FFCE                     STR_48:
   987                           
   988                           ; BSR set to: 0
   989  00FFCE  61                 	db	97	;'a'
   990  00FFCF  64                 	db	100	;'d'
   991  00FFD0  63                 	db	99	;'c'
   992  00FFD1  00                 	db	0
   993  00FFD2                     STR_50:
   994                           
   995                           ; BSR set to: 0
   996  00FFD2  70                 	db	112	;'p'
   997  00FFD3  77                 	db	119	;'w'
   998  00FFD4  6D                 	db	109	;'m'
   999  00FFD5  00                 	db	0
  1000  00FFD6                     STR_46:
  1001                           
  1002                           ; BSR set to: 0
  1003  00FFD6  73                 	db	115	;'s'
  1004  00FFD7  65                 	db	101	;'e'
  1005  00FFD8  74                 	db	116	;'t'
  1006  00FFD9  00                 	db	0
  1007  00FFDA                     STR_19:
  1008                           
  1009                           ; BSR set to: 0
  1010  00FFDA  08                 	db	8
  1011  00FFDB  20                 	db	32
  1012  00FFDC  08                 	db	8
  1013  00FFDD  00                 	db	0
  1014  00FFDE                     STR_34:
  1015                           
  1016                           ; BSR set to: 0
  1017  00FFDE  64                 	db	100	;'d'
  1018  00FFDF  61                 	db	97	;'a'
  1019  00FFE0  79                 	db	121	;'y'
  1020  00FFE1  00                 	db	0
  1021  00FFE2                     STR_27:
  1022                           
  1023                           ; BSR set to: 0
  1024  00FFE2  61                 	db	97	;'a'
  1025  00FFE3  74                 	db	116	;'t'
  1026  00FFE4  00                 	db	0
  1027  00FFE5                     STR_42:
  1028                           
  1029                           ; BSR set to: 0
  1030  00FFE5  3F                 	db	63	;'?'
  1031  00FFE6  00                 	db	0
  1032  00FFE7                     STR_57:
  1033                           
  1034                           ; BSR set to: 0
  1035  00FFE7  42                 	db	66	;'B'
  1036  00FFE8  00                 	db	0
  1037  00FFE9                     STR_55:
  1038                           
  1039                           ; BSR set to: 0
  1040  00FFE9  47                 	db	71	;'G'
  1041  00FFEA  00                 	db	0
  1042  00FFEB                     STR_53:
  1043                           
  1044                           ; BSR set to: 0
  1045  00FFEB  52                 	db	82	;'R'
  1046  00FFEC  00                 	db	0
  1047  00FFED                     STR_59:
  1048                           
  1049                           ; BSR set to: 0
  1050  00FFED  57                 	db	87	;'W'
  1051  00FFEE  00                 	db	0
  1052  00FFEF                     STR_56:
  1053                           
  1054                           ; BSR set to: 0
  1055  00FFEF  62                 	db	98	;'b'
  1056  00FFF0  00                 	db	0
  1057  00FFF1                     STR_54:
  1058                           
  1059                           ; BSR set to: 0
  1060  00FFF1  67                 	db	103	;'g'
  1061  00FFF2  00                 	db	0
  1062  00FFF3                     STR_58:
  1063                           
  1064                           ; BSR set to: 0
  1065  00FFF3  77                 	db	119	;'w'
  1066  00FFF4  00                 	db	0
  1067  00FFF5                     STR_39:
  1068                           
  1069                           ; BSR set to: 0
  1070  00FFF5  73                 	db	115	;'s'
  1071  00FFF6  00                 	db	0
  1072  00FFF7                     
  1073                           ; BSR set to: 0
  1074  00FFF7  28                 	db	40
  1075  00FFF8  00                 	db	0
  1076  00FFF9                     STR_9:
  1077                           
  1078                           ; BSR set to: 0
  1079  00FFF9  2D                 	db	45
  1080  00FFFA  00                 	db	0
  1081  00FFFB                     STR_4:
  1082                           
  1083                           ; BSR set to: 0
  1084  00FFFB  2F                 	db	47
  1085  00FFFC  00                 	db	0
  1086  00FFFD                     STR_7:
  1087                           
  1088                           ; BSR set to: 0
  1089  00FFFD  3A                 	db	58	;':'
  1090  00FFFE  00                 	db	0
  1091  0000                     
  1092                           ; #config settings
  1093  00FFFF  00                 	db	0	; dummy byte at the end
  1094  0000                     
  1095                           	psect	cinit
  1096  013884                     __pcinit:
  1097                           	opt stack 0
  1098  013884                     start_initialization:
  1099                           	opt stack 0
  1100  013884                     __initialization:
  1101                           	opt stack 0
  1102                           
  1103                           ; Clear objects allocated to BIGRAMl (1500 bytes)
  1104  013884  EE05  F0FA         	lfsr	0,__pbssBIGRAMl
  1105  013888  EE15 F0DC          	lfsr	1,1500
  1106  01388C                     clear_0:
  1107  01388C  6AEE               	clrf	postinc0,c
  1108  01388E  50E5               	movf	postdec1,w,c
  1109  013890  50E1               	movf	fsr1l,w,c
  1110  013892  E1FC               	bnz	clear_0
  1111  013894  50E2               	movf	fsr1h,w,c
  1112  013896  E1FA               	bnz	clear_0
  1113                           
  1114                           ; Clear objects allocated to BANK5 (250 bytes)
  1115  013898  EE05  F000         	lfsr	0,__pbssBANK5
  1116  01389C  0EFA               	movlw	250
  1117  01389E                     clear_1:
  1118  01389E  6AEE               	clrf	postinc0,c
  1119  0138A0  06E8               	decf	wreg,f,c
  1120  0138A2  E1FD               	bnz	clear_1
  1121                           
  1122                           ; Clear objects allocated to BANK4 (200 bytes)
  1123  0138A4  EE04  F000         	lfsr	0,__pbssBANK4
  1124  0138A8  0EC8               	movlw	200
  1125  0138AA                     clear_2:
  1126  0138AA  6AEE               	clrf	postinc0,c
  1127  0138AC  06E8               	decf	wreg,f,c
  1128  0138AE  E1FD               	bnz	clear_2
  1129                           
  1130                           ; Clear objects allocated to BANK3 (128 bytes)
  1131  0138B0  EE03  F000         	lfsr	0,__pbssBANK3
  1132  0138B4  0E80               	movlw	128
  1133  0138B6                     clear_3:
  1134  0138B6  6AEE               	clrf	postinc0,c
  1135  0138B8  06E8               	decf	wreg,f,c
  1136  0138BA  E1FD               	bnz	clear_3
  1137                           
  1138                           ; Clear objects allocated to BANK2 (203 bytes)
  1139  0138BC  EE02  F000         	lfsr	0,__pbssBANK2
  1140  0138C0  0ECB               	movlw	203
  1141  0138C2                     clear_4:
  1142  0138C2  6AEE               	clrf	postinc0,c
  1143  0138C4  06E8               	decf	wreg,f,c
  1144  0138C6  E1FD               	bnz	clear_4
  1145                           
  1146                           ; Clear objects allocated to BANK1 (135 bytes)
  1147  0138C8  EE01  F000         	lfsr	0,__pbssBANK1
  1148  0138CC  0E87               	movlw	135
  1149  0138CE                     clear_5:
  1150  0138CE  6AEE               	clrf	postinc0,c
  1151  0138D0  06E8               	decf	wreg,f,c
  1152  0138D2  E1FD               	bnz	clear_5
  1153                           
  1154                           ; Clear objects allocated to BANK0 (42 bytes)
  1155  0138D4  EE00  F0D5         	lfsr	0,__pbssBANK0
  1156  0138D8  0E2A               	movlw	42
  1157  0138DA                     clear_6:
  1158  0138DA  6AEE               	clrf	postinc0,c
  1159  0138DC  06E8               	decf	wreg,f,c
  1160  0138DE  E1FD               	bnz	clear_6
  1161                           
  1162                           ; Clear objects allocated to COMRAM (45 bytes)
  1163  0138E0  EE00  F001         	lfsr	0,__pbssCOMRAM
  1164  0138E4  0E2D               	movlw	45
  1165  0138E6                     clear_7:
  1166  0138E6  6AEE               	clrf	postinc0,c
  1167  0138E8  06E8               	decf	wreg,f,c
  1168  0138EA  E1FD               	bnz	clear_7
  1169                           
  1170                           ; Initialize objects allocated to BANK1 (4 bytes)
  1171                           ; load TBLPTR registers with __pidataBANK1
  1172  0138EC  0E46               	movlw	low __pidataBANK1
  1173  0138EE  6EF6               	movwf	tblptrl,c
  1174  0138F0  0E47               	movlw	high __pidataBANK1
  1175  0138F2  6EF7               	movwf	tblptrh,c
  1176  0138F4  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1177  0138F6  6EF8               	movwf	tblptru,c
  1178  0138F8  EE01  F0F4         	lfsr	0,__pdataBANK1
  1179  0138FC  EE10 F004          	lfsr	1,4
  1180  013900                     copy_data0:
  1181  013900  0009               	tblrd		*+
  1182  013902  CFF5 FFEE          	movff	tablat,postinc0
  1183  013906  50E5               	movf	postdec1,w,c
  1184  013908  50E1               	movf	fsr1l,w,c
  1185  01390A  E1FA               	bnz	copy_data0
  1186                           
  1187                           ; Initialize objects allocated to BANK0 (1 bytes)
  1188                           ; load TBLPTR registers with __pidataBANK0
  1189  01390C  0E04               	movlw	low __pidataBANK0
  1190  01390E  6EF6               	movwf	tblptrl,c
  1191  013910  0E10               	movlw	high __pidataBANK0
  1192  013912  6EF7               	movwf	tblptrh,c
  1193  013914  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1194  013916  6EF8               	movwf	tblptru,c
  1195  013918  0009               	tblrd		*+	;fetch initializer
  1196  01391A  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1197  01391E                     end_of_initialization:
  1198                           	opt stack 0
  1199  01391E                     __end_of__initialization:
  1200                           	opt stack 0
  1201  01391E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1202  013920  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1203  013922  0100               	movlb	0
  1204  013924  EF9A  F0A1         	goto	_main	;jump to C main() function
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           postdec1	equ	0xFE5
  1212                           fsr1h	equ	0xFE2
  1213                           fsr1l	equ	0xFE1
  1214                           
  1215                           	psect	bssCOMRAM
  1216  000001                     __pbssCOMRAM:
  1217                           	opt stack 0
  1218  000001                     _outPipes:
  1219                           	opt stack 0
  1220  000001                     	ds	9
  1221  00000A                     _inPipes:
  1222                           	opt stack 0
  1223  00000A                     	ds	6
  1224  000010                     _pBDTEntryIn:
  1225                           	opt stack 0
  1226  000010                     	ds	6
  1227  000016                     _ep_data_in:
  1228                           	opt stack 0
  1229  000016                     	ds	3
  1230  000019                     _pBDTEntryEP0OutCurrent:
  1231                           	opt stack 0
  1232  000019                     	ds	2
  1233  00001B                     _pBDTEntryEP0OutNext:
  1234                           	opt stack 0
  1235  00001B                     	ds	2
  1236  00001D                     ST7032_task@st7032_state:
  1237                           	opt stack 0
  1238  00001D                     	ds	1
  1239  00001E                     _BothEP0OutUOWNsSet:
  1240                           	opt stack 0
  1241  00001E                     	ds	1
  1242  00001F                     _I2C_sent_flag:
  1243                           	opt stack 0
  1244  00001F                     	ds	1
  1245  000020                     _RemoteWakeup:
  1246                           	opt stack 0
  1247  000020                     	ds	1
  1248  000021                     _USBDeferINDataStagePackets:
  1249                           	opt stack 0
  1250  000021                     	ds	1
  1251  000022                     _USBDeferOUTDataStagePackets:
  1252                           	opt stack 0
  1253  000022                     	ds	1
  1254  000023                     _USBDeferStatusStagePacket:
  1255                           	opt stack 0
  1256  000023                     	ds	1
  1257  000024                     _USBDeviceState:
  1258                           	opt stack 0
  1259  000024                     	ds	1
  1260  000025                     _USBStatusStageEnabledFlag1:
  1261                           	opt stack 0
  1262  000025                     	ds	1
  1263  000026                     _USBStatusStageEnabledFlag2:
  1264                           	opt stack 0
  1265  000026                     	ds	1
  1266  000027                     _USBStatusStageTimeoutCounter:
  1267                           	opt stack 0
  1268  000027                     	ds	1
  1269  000028                     _cdc_trf_state:
  1270                           	opt stack 0
  1271  000028                     	ds	1
  1272  000029                     _controlTransferState:
  1273                           	opt stack 0
  1274  000029                     	ds	1
  1275  00002A                     _endpoint_number:
  1276                           	opt stack 0
  1277  00002A                     	ds	1
  1278  00002B                     _shortPacketStatus:
  1279                           	opt stack 0
  1280  00002B                     	ds	1
  1281  00002C                     _USBActiveConfiguration:
  1282                           	opt stack 0
  1283  00002C                     	ds	1
  1284  00002D                     _USTATcopy:
  1285                           	opt stack 0
  1286  00002D                     	ds	1
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           postdec1	equ	0xFE5
  1294                           fsr1h	equ	0xFE2
  1295                           fsr1l	equ	0xFE1
  1296                           
  1297                           	psect	bssBANK0
  1298  0000D5                     __pbssBANK0:
  1299                           	opt stack 0
  1300  0000D5                     _ep_data_out:
  1301                           	opt stack 0
  1302  0000D5                     	ds	3
  1303  0000D8                     _pCDCSrc:
  1304                           	opt stack 0
  1305  0000D8                     	ds	3
  1306  0000DB                     ST7032_task@wait:
  1307                           	opt stack 0
  1308  0000DB                     	ds	2
  1309  0000DD                     _CDCDataInHandle:
  1310                           	opt stack 0
  1311  0000DD                     	ds	2
  1312  0000DF                     _CDCDataOutHandle:
  1313                           	opt stack 0
  1314  0000DF                     	ds	2
  1315  0000E1                     _pDst:
  1316                           	opt stack 0
  1317  0000E1                     	ds	2
  1318  0000E3                     millis_timer@cnt:
  1319                           	opt stack 0
  1320  0000E3                     	ds	2
  1321  0000E5                     RTCC_task@prev_halfsec:
  1322                           	opt stack 0
  1323  0000E5                     	ds	1
  1324  0000E6                     _ADC_flag:
  1325                           	opt stack 0
  1326  0000E6                     	ds	1
  1327  0000E7                     _I2C_busy:
  1328                           	opt stack 0
  1329  0000E7                     	ds	1
  1330  0000E8                     _I2C_cfct_flag:
  1331                           	opt stack 0
  1332  0000E8                     	ds	1
  1333  0000E9                     _USBBusIsSuspended:
  1334                           	opt stack 0
  1335  0000E9                     	ds	1
  1336  0000EA                     _cdc_mem_type:
  1337                           	opt stack 0
  1338  0000EA                     	ds	1
  1339  0000EB                     _cdc_rx_len:
  1340                           	opt stack 0
  1341  0000EB                     	ds	1
  1342  0000EC                     _cdc_tx_len:
  1343                           	opt stack 0
  1344  0000EC                     	ds	1
  1345  0000ED                     _control_signal_bitmap:
  1346                           	opt stack 0
  1347  0000ED                     	ds	1
  1348  0000EE                     _light_mode:
  1349                           	opt stack 0
  1350  0000EE                     	ds	1
  1351  0000EF                     _st7032_state:
  1352                           	opt stack 0
  1353  0000EF                     	ds	1
  1354  0000F0                     _time_change_flag:
  1355                           	opt stack 0
  1356  0000F0                     	ds	1
  1357  0000F1                     epoch_to_caltime@year_cache:
  1358                           	opt stack 0
  1359  0000F1                     	ds	1
  1360  0000F2                     terminal_task@command_init:
  1361                           	opt stack 0
  1362  0000F2                     	ds	1
  1363  0000F3                     _lcd_tx:
  1364                           	opt stack 0
  1365  0000F3                     	ds	8
  1366  0000FB                     _USBAlternateInterface:
  1367                           	opt stack 0
  1368  0000FB                     	ds	2
  1369  0000FD                     light_task@_6082:
  1370                           	opt stack 0
  1371  0000FD                     	ds	1
  1372  0000FE                     light_task@n:
  1373                           	opt stack 0
  1374  0000FE                     	ds	1
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           postdec1	equ	0xFE5
  1382                           fsr1h	equ	0xFE2
  1383                           fsr1l	equ	0xFE1
  1384                           
  1385                           	psect	dataBANK0
  1386  0000FF                     __pdataBANK0:
  1387                           	opt stack 0
  1388  0000FF                     epoch_to_caltime@month_cache:
  1389                           	opt stack 0
  1390  0000FF                     	ds	1
  1391                           tblptru	equ	0xFF8
  1392                           tblptrh	equ	0xFF7
  1393                           tblptrl	equ	0xFF6
  1394                           tablat	equ	0xFF5
  1395                           postinc0	equ	0xFEE
  1396                           wreg	equ	0xFE8
  1397                           postdec1	equ	0xFE5
  1398                           fsr1h	equ	0xFE2
  1399                           fsr1l	equ	0xFE1
  1400                           
  1401                           	psect	bssBANK1
  1402  000100                     __pbssBANK1:
  1403                           	opt stack 0
  1404  000100                     _cdc_notice:
  1405                           	opt stack 0
  1406  000100                     	ds	10
  1407  00010A                     _pBDTEntryOut:
  1408                           	opt stack 0
  1409  00010A                     	ds	6
  1410  000110                     _BaudRateGen:
  1411                           	opt stack 0
  1412  000110                     	ds	4
  1413  000114                     _ms:
  1414                           	opt stack 0
  1415  000114                     	ds	4
  1416  000118                     _pCDCDst:
  1417                           	opt stack 0
  1418  000118                     	ds	3
  1419  00011B                     epoch_to_caltime@day_cache:
  1420                           	opt stack 0
  1421  00011B                     	ds	2
  1422  00011D                     terminal_task@op0:
  1423                           	opt stack 0
  1424  00011D                     	ds	25
  1425  000136                     _now:
  1426                           	opt stack 0
  1427  000136                     	ds	14
  1428  000144                     _dummy_encapsulated_cmd_response:
  1429                           	opt stack 0
  1430  000144                     	ds	8
  1431  00014C                     _uart_rx:
  1432                           	opt stack 0
  1433  00014C                     	ds	8
  1434  000154                     _uart_tx:
  1435                           	opt stack 0
  1436  000154                     	ds	8
  1437  00015C                     _usb_rx:
  1438                           	opt stack 0
  1439  00015C                     	ds	8
  1440  000164                     _usb_tx:
  1441                           	opt stack 0
  1442  000164                     	ds	8
  1443  00016C                     terminal_task@command:
  1444                           	opt stack 0
  1445  00016C                     	ds	8
  1446  000174                     _line_coding:
  1447                           	opt stack 0
  1448  000174                     	ds	7
  1449  00017B                     _sw_B:
  1450                           	opt stack 0
  1451  00017B                     	ds	4
  1452  00017F                     _sw_G:
  1453                           	opt stack 0
  1454  00017F                     	ds	4
  1455  000183                     _sw_R:
  1456                           	opt stack 0
  1457  000183                     	ds	4
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           postinc0	equ	0xFEE
  1463                           wreg	equ	0xFE8
  1464                           postdec1	equ	0xFE5
  1465                           fsr1h	equ	0xFE2
  1466                           fsr1l	equ	0xFE1
  1467                           
  1468                           	psect	dataBANK1
  1469  0001F4                     __pdataBANK1:
  1470                           	opt stack 0
  1471  0001F4                     I2C_LCD_SetCursor@F8685:
  1472                           	opt stack 0
  1473  0001F4                     	ds	2
  1474  0001F6                     ST7032_cursor@F8640:
  1475                           	opt stack 0
  1476  0001F6                     	ds	2
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           postinc0	equ	0xFEE
  1482                           wreg	equ	0xFE8
  1483                           postdec1	equ	0xFE5
  1484                           fsr1h	equ	0xFE2
  1485                           fsr1l	equ	0xFE1
  1486                           
  1487                           	psect	bssBANK2
  1488  000200                     __pbssBANK2:
  1489                           	opt stack 0
  1490  000200                     _cdc_data_rx:
  1491                           	opt stack 0
  1492  000200                     	ds	64
  1493  000240                     _cdc_data_tx:
  1494                           	opt stack 0
  1495  000240                     	ds	64
  1496  000280                     terminal_task@op1:
  1497                           	opt stack 0
  1498  000280                     	ds	25
  1499  000299                     terminal_task@op2:
  1500                           	opt stack 0
  1501  000299                     	ds	25
  1502  0002B2                     terminal_task@op3:
  1503                           	opt stack 0
  1504  0002B2                     	ds	25
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           postdec1	equ	0xFE5
  1512                           fsr1h	equ	0xFE2
  1513                           fsr1l	equ	0xFE1
  1514                           
  1515                           	psect	bssBANK3
  1516  000300                     __pbssBANK3:
  1517                           	opt stack 0
  1518  000300                     _readBuffer:
  1519                           	opt stack 0
  1520  000300                     	ds	64
  1521  000340                     _writeBuffer:
  1522                           	opt stack 0
  1523  000340                     	ds	64
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           tblptrl	equ	0xFF6
  1527                           tablat	equ	0xFF5
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           postdec1	equ	0xFE5
  1531                           fsr1h	equ	0xFE2
  1532                           fsr1l	equ	0xFE1
  1533                           
  1534                           	psect	bssBANK4
  1535  000400                     __pbssBANK4:
  1536                           	opt stack 0
  1537  000400                     ST7032_init@buf:
  1538                           	opt stack 0
  1539  000400                     	ds	200
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           postdec1	equ	0xFE5
  1547                           fsr1h	equ	0xFE2
  1548                           fsr1l	equ	0xFE1
  1549                           
  1550                           	psect	bssBANK5
  1551  000500                     __pbssBANK5:
  1552                           	opt stack 0
  1553  000500                     USB_CDC_buffer_init@rxbuf:
  1554                           	opt stack 0
  1555  000500                     	ds	250
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postdec1	equ	0xFE5
  1563                           fsr1h	equ	0xFE2
  1564                           fsr1l	equ	0xFE1
  1565                           
  1566                           	psect	bssBIGRAMl
  1567  0005FA                     __pbssBIGRAMl:
  1568                           	opt stack 0
  1569  0005FA                     USB_CDC_buffer_init@txbuf:
  1570                           	opt stack 0
  1571  0005FA                     	ds	1500
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           postdec1	equ	0xFE5
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           
  1582                           	psect	cstackBANK1
  1583  000187                     __pcstackBANK1:
  1584                           	opt stack 0
  1585  000187                     terminal_task@tx:
  1586                           	opt stack 0
  1587                           
  1588                           ; 2 bytes @ 0x0
  1589  000187                     	ds	2
  1590  000189                     terminal_task@rx:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0x2
  1594  000189                     	ds	2
  1595  00018B                     terminal_task@buf:
  1596                           	opt stack 0
  1597                           
  1598                           ; 100 bytes @ 0x4
  1599  00018B                     	ds	100
  1600  0001EF                     _terminal_task$6978:
  1601                           	opt stack 0
  1602                           
  1603                           ; 2 bytes @ 0x68
  1604  0001EF                     	ds	2
  1605  0001F1                     terminal_task@i_4621:
  1606                           	opt stack 0
  1607                           
  1608                           ; 1 bytes @ 0x6A
  1609  0001F1                     	ds	1
  1610  0001F2                     terminal_task@ascii:
  1611                           	opt stack 0
  1612                           
  1613                           ; 1 bytes @ 0x6B
  1614  0001F2                     	ds	1
  1615  0001F3                     terminal_task@i:
  1616                           	opt stack 0
  1617                           
  1618                           ; 1 bytes @ 0x6C
  1619  0001F3                     	ds	1
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           postdec1	equ	0xFE5
  1627                           fsr1h	equ	0xFE2
  1628                           fsr1l	equ	0xFE1
  1629                           
  1630                           	psect	cstackBANK0
  1631  000060                     __pcstackBANK0:
  1632                           	opt stack 0
  1633  000060                     ??_isdigit:
  1634  000060                     ??_timer0_init:
  1635  000060                     ??_timer3_init:
  1636  000060                     ??_x_to_d:
  1637  000060                     ?_strcmp:
  1638                           	opt stack 0
  1639  000060                     ?_USBTransferOnePacket:
  1640                           	opt stack 0
  1641  000060                     ?_ringbuf_num:
  1642                           	opt stack 0
  1643  000060                     ?___wmul:
  1644                           	opt stack 0
  1645  000060                     ?___awmod:
  1646                           	opt stack 0
  1647  000060                     ?___lldiv:
  1648                           	opt stack 0
  1649  000060                     ?___llmod:
  1650                           	opt stack 0
  1651  000060                     USBTransferOnePacket@dir:
  1652                           	opt stack 0
  1653  000060                     timer1_init@clock_select:
  1654                           	opt stack 0
  1655  000060                     ADC_init@p_ref:
  1656                           	opt stack 0
  1657  000060                     PWM_init@PR:
  1658                           	opt stack 0
  1659  000060                     putUSBUSART@data:
  1660                           	opt stack 0
  1661  000060                     ringbuf_init@rb:
  1662                           	opt stack 0
  1663  000060                     ringbuf_num@rb:
  1664                           	opt stack 0
  1665  000060                     ringbuf_delete@rb:
  1666                           	opt stack 0
  1667  000060                     ___wmul@multiplier:
  1668                           	opt stack 0
  1669  000060                     ___awmod@dividend:
  1670                           	opt stack 0
  1671  000060                     memset@p1:
  1672                           	opt stack 0
  1673  000060                     strcmp@s1:
  1674                           	opt stack 0
  1675  000060                     ___lldiv@dividend:
  1676                           	opt stack 0
  1677  000060                     ___llmod@dividend:
  1678                           	opt stack 0
  1679                           
  1680                           ; 4 bytes @ 0x0
  1681  000060                     	ds	1
  1682  000061                     ??_timer1_init:
  1683  000061                     timer0_init@prescaler:
  1684                           	opt stack 0
  1685  000061                     timer3_init@prescaler:
  1686                           	opt stack 0
  1687  000061                     x_to_d@hex:
  1688                           	opt stack 0
  1689  000061                     _isdigit$6372:
  1690                           	opt stack 0
  1691  000061                     USBTransferOnePacket@data:
  1692                           	opt stack 0
  1693                           
  1694                           ; 2 bytes @ 0x1
  1695  000061                     	ds	1
  1696  000062                     ??_ringbuf_num:
  1697  000062                     putUSBUSART@length:
  1698                           	opt stack 0
  1699  000062                     timer1_init@prescaler:
  1700                           	opt stack 0
  1701  000062                     isdigit@c:
  1702                           	opt stack 0
  1703  000062                     ringbuf_init@internal_buf:
  1704                           	opt stack 0
  1705  000062                     RTCC_to_caltime@tm:
  1706                           	opt stack 0
  1707  000062                     ___wmul@multiplicand:
  1708                           	opt stack 0
  1709  000062                     ___awmod@divisor:
  1710                           	opt stack 0
  1711  000062                     memset@c:
  1712                           	opt stack 0
  1713  000062                     strcmp@s2:
  1714                           	opt stack 0
  1715                           
  1716                           ; 2 bytes @ 0x2
  1717  000062                     	ds	1
  1718  000063                     USBTransferOnePacket@len:
  1719                           	opt stack 0
  1720                           
  1721                           ; 1 bytes @ 0x3
  1722  000063                     	ds	1
  1723  000064                     ??_strcmp:
  1724  000064                     USBTransferOnePacket@ep:
  1725                           	opt stack 0
  1726  000064                     RTCC_to_caltime@dumy:
  1727                           	opt stack 0
  1728  000064                     ___awmod@counter:
  1729                           	opt stack 0
  1730  000064                     ringbuf_init@bufsize:
  1731                           	opt stack 0
  1732  000064                     ___wmul@product:
  1733                           	opt stack 0
  1734  000064                     memset@n:
  1735                           	opt stack 0
  1736  000064                     ___lldiv@divisor:
  1737                           	opt stack 0
  1738  000064                     ___llmod@divisor:
  1739                           	opt stack 0
  1740                           
  1741                           ; 4 bytes @ 0x4
  1742  000064                     	ds	1
  1743  000065                     ___awmod@sign:
  1744                           	opt stack 0
  1745  000065                     strcmp@r:
  1746                           	opt stack 0
  1747  000065                     USBTransferOnePacket@handle:
  1748                           	opt stack 0
  1749                           
  1750                           ; 2 bytes @ 0x5
  1751  000065                     	ds	1
  1752  000066                     ?_atoi:
  1753                           	opt stack 0
  1754  000066                     ?___lwdiv:
  1755                           	opt stack 0
  1756  000066                     month_length@month:
  1757                           	opt stack 0
  1758  000066                     atoi@s:
  1759                           	opt stack 0
  1760  000066                     ___lwdiv@dividend:
  1761                           	opt stack 0
  1762  000066                     memset@p:
  1763                           	opt stack 0
  1764                           
  1765                           ; 2 bytes @ 0x6
  1766  000066                     	ds	1
  1767  000067                     ??_CDCTxService:
  1768  000067                     ??_month_length:
  1769  000067                     getsUSBUSART@buffer:
  1770                           	opt stack 0
  1771                           
  1772                           ; 2 bytes @ 0x7
  1773  000067                     	ds	1
  1774  000068                     ??_atoi:
  1775  000068                     USBDeviceInit@i:
  1776                           	opt stack 0
  1777  000068                     ___llmod@counter:
  1778                           	opt stack 0
  1779  000068                     _CDCTxService$2005:
  1780                           	opt stack 0
  1781  000068                     ringbuf_put@rb:
  1782                           	opt stack 0
  1783  000068                     ringbuf_pop@rb:
  1784                           	opt stack 0
  1785  000068                     ringbuf_backspace@rb:
  1786                           	opt stack 0
  1787  000068                     ___lwdiv@divisor:
  1788                           	opt stack 0
  1789  000068                     ___lldiv@quotient:
  1790                           	opt stack 0
  1791                           
  1792                           ; 4 bytes @ 0x8
  1793  000068                     	ds	1
  1794  000069                     getsUSBUSART@len:
  1795                           	opt stack 0
  1796                           
  1797                           ; 1 bytes @ 0x9
  1798  000069                     	ds	1
  1799  00006A                     ??_getsUSBUSART:
  1800  00006A                     ??_ringbuf_pop:
  1801  00006A                     ??_ringbuf_backspace:
  1802  00006A                     CDCTxService@i:
  1803                           	opt stack 0
  1804  00006A                     ringbuf_put@data:
  1805                           	opt stack 0
  1806  00006A                     atoi@sign:
  1807                           	opt stack 0
  1808  00006A                     ___lwdiv@counter:
  1809                           	opt stack 0
  1810                           
  1811                           ; 1 bytes @ 0xA
  1812  00006A                     	ds	1
  1813  00006B                     ??_ringbuf_put:
  1814  00006B                     CDCTxService@byte_to_send:
  1815                           	opt stack 0
  1816  00006B                     month_length@year:
  1817                           	opt stack 0
  1818  00006B                     _getsUSBUSART$1957:
  1819                           	opt stack 0
  1820  00006B                     atoi@a:
  1821                           	opt stack 0
  1822  00006B                     ___lwdiv@quotient:
  1823                           	opt stack 0
  1824                           
  1825                           ; 2 bytes @ 0xB
  1826  00006B                     	ds	1
  1827  00006C                     ___lldiv@counter:
  1828                           	opt stack 0
  1829  00006C                     USB_CDC_send@length:
  1830                           	opt stack 0
  1831                           
  1832                           ; 2 bytes @ 0xC
  1833  00006C                     	ds	1
  1834  00006D                     ?___awdiv:
  1835                           	opt stack 0
  1836  00006D                     ?___lwmod:
  1837                           	opt stack 0
  1838  00006D                     ?___lmul:
  1839                           	opt stack 0
  1840  00006D                     USB_CDC_get@numBytesRead:
  1841                           	opt stack 0
  1842  00006D                     ___awdiv@dividend:
  1843                           	opt stack 0
  1844  00006D                     ___lwmod@dividend:
  1845                           	opt stack 0
  1846  00006D                     ___lmul@multiplier:
  1847                           	opt stack 0
  1848                           
  1849                           ; 4 bytes @ 0xD
  1850  00006D                     	ds	1
  1851  00006E                     ringbuf_pop@ret:
  1852                           	opt stack 0
  1853                           
  1854                           ; 1 bytes @ 0xE
  1855  00006E                     	ds	1
  1856  00006F                     ??_USB_CDC_task:
  1857  00006F                     ringbuf_put_str@rb:
  1858                           	opt stack 0
  1859  00006F                     ___awdiv@divisor:
  1860                           	opt stack 0
  1861  00006F                     ___lwmod@divisor:
  1862                           	opt stack 0
  1863                           
  1864                           ; 2 bytes @ 0xF
  1865  00006F                     	ds	1
  1866  000070                     USB_CDC_task@i:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0x10
  1870  000070                     	ds	1
  1871  000071                     ___awdiv@counter:
  1872                           	opt stack 0
  1873  000071                     ___lwmod@counter:
  1874                           	opt stack 0
  1875  000071                     ringbuf_put_str@str:
  1876                           	opt stack 0
  1877  000071                     ___lmul@multiplicand:
  1878                           	opt stack 0
  1879                           
  1880                           ; 4 bytes @ 0x11
  1881  000071                     	ds	1
  1882  000072                     ?_sprintf:
  1883                           	opt stack 0
  1884  000072                     ___awdiv@sign:
  1885                           	opt stack 0
  1886  000072                     ringbuf_put_num@rb:
  1887                           	opt stack 0
  1888  000072                     USB_CDC_task@length:
  1889                           	opt stack 0
  1890  000072                     sprintf@sp:
  1891                           	opt stack 0
  1892                           
  1893                           ; 2 bytes @ 0x12
  1894  000072                     	ds	1
  1895  000073                     ___awdiv@quotient:
  1896                           	opt stack 0
  1897                           
  1898                           ; 2 bytes @ 0x13
  1899  000073                     	ds	1
  1900  000074                     ringbuf_put_num@value:
  1901                           	opt stack 0
  1902  000074                     sprintf@f:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x14
  1906  000074                     	ds	1
  1907  000075                     d_to_x@dec:
  1908                           	opt stack 0
  1909  000075                     PWM_set@value:
  1910                           	opt stack 0
  1911  000075                     ___lmul@product:
  1912                           	opt stack 0
  1913                           
  1914                           ; 4 bytes @ 0x15
  1915  000075                     	ds	1
  1916  000076                     ringbuf_put_num@digits:
  1917                           	opt stack 0
  1918  000076                     caltime_to_RTCC@tm:
  1919                           	opt stack 0
  1920                           
  1921                           ; 2 bytes @ 0x16
  1922  000076                     	ds	1
  1923  000077                     ??_PWM_set:
  1924  000077                     ringbuf_put_num@i:
  1925                           	opt stack 0
  1926                           
  1927                           ; 1 bytes @ 0x17
  1928  000077                     	ds	1
  1929  000078                     ringbuf_put_num@temp:
  1930                           	opt stack 0
  1931                           
  1932                           ; 2 bytes @ 0x18
  1933  000078                     	ds	1
  1934  000079                     ?_get_quot_rem:
  1935                           	opt stack 0
  1936  000079                     PWM_set@color:
  1937                           	opt stack 0
  1938  000079                     get_quot_rem@quot:
  1939                           	opt stack 0
  1940  000079                     caltime_to_epoch@tm:
  1941                           	opt stack 0
  1942                           
  1943                           ; 2 bytes @ 0x19
  1944  000079                     	ds	2
  1945  00007B                     ??_caltime_to_epoch:
  1946  00007B                     get_quot_rem@div:
  1947                           	opt stack 0
  1948                           
  1949                           ; 1 bytes @ 0x1B
  1950  00007B                     	ds	2
  1951  00007D                     get_quot_rem@num:
  1952                           	opt stack 0
  1953                           
  1954                           ; 4 bytes @ 0x1D
  1955  00007D                     	ds	2
  1956  00007F                     caltime_to_epoch@year:
  1957                           	opt stack 0
  1958                           
  1959                           ; 1 bytes @ 0x1F
  1960  00007F                     	ds	1
  1961  000080                     caltime_to_epoch@month_3722:
  1962                           	opt stack 0
  1963                           
  1964                           ; 1 bytes @ 0x20
  1965  000080                     	ds	1
  1966  000081                     epoch_to_caltime@tm:
  1967                           	opt stack 0
  1968  000081                     caltime_to_epoch@epoch:
  1969                           	opt stack 0
  1970                           
  1971                           ; 4 bytes @ 0x21
  1972  000081                     	ds	2
  1973  000083                     ??_epoch_to_caltime:
  1974                           
  1975                           ; 0 bytes @ 0x23
  1976  000083                     	ds	1
  1977  000084                     ??_sprintf:
  1978                           
  1979                           ; 0 bytes @ 0x24
  1980  000084                     	ds	1
  1981  000085                     caltime_to_epoch@month:
  1982                           	opt stack 0
  1983  000085                     epoch_to_caltime@day_since_epoch:
  1984                           	opt stack 0
  1985                           
  1986                           ; 2 bytes @ 0x25
  1987  000085                     	ds	1
  1988  000086                     RTCC_from_RTCC@tm:
  1989                           	opt stack 0
  1990                           
  1991                           ; 2 bytes @ 0x26
  1992  000086                     	ds	1
  1993  000087                     epoch_to_caltime@day:
  1994                           	opt stack 0
  1995                           
  1996                           ; 2 bytes @ 0x27
  1997  000087                     	ds	1
  1998  000088                     ??_light_task:
  1999  000088                     sprintf@prec:
  2000                           	opt stack 0
  2001                           
  2002                           ; 1 bytes @ 0x28
  2003  000088                     	ds	1
  2004  000089                     epoch_to_caltime@year:
  2005                           	opt stack 0
  2006  000089                     sprintf@ap:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x29
  2010  000089                     	ds	1
  2011  00008A                     epoch_to_caltime@month:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0x2A
  2015  00008A                     	ds	1
  2016  00008B                     sprintf@cp:
  2017                           	opt stack 0
  2018  00008B                     epoch_to_caltime@num:
  2019                           	opt stack 0
  2020                           
  2021                           ; 4 bytes @ 0x2B
  2022  00008B                     	ds	1
  2023  00008C                     light_task@value:
  2024                           	opt stack 0
  2025                           
  2026                           ; 1 bytes @ 0x2C
  2027  00008C                     	ds	1
  2028  00008D                     light_task@value_6083:
  2029                           	opt stack 0
  2030  00008D                     sprintf@val:
  2031                           	opt stack 0
  2032                           
  2033                           ; 2 bytes @ 0x2D
  2034  00008D                     	ds	1
  2035  00008E                     light_task@temp:
  2036                           	opt stack 0
  2037                           
  2038                           ; 4 bytes @ 0x2E
  2039  00008E                     	ds	1
  2040  00008F                     RTCC_from_caltime@tm:
  2041                           	opt stack 0
  2042  00008F                     RTCC_from_epoch@tm:
  2043                           	opt stack 0
  2044  00008F                     sprintf@len:
  2045                           	opt stack 0
  2046                           
  2047                           ; 2 bytes @ 0x2F
  2048  00008F                     	ds	2
  2049  000091                     sprintf@flag:
  2050                           	opt stack 0
  2051                           
  2052                           ; 1 bytes @ 0x31
  2053  000091                     	ds	1
  2054  000092                     light_task@i:
  2055                           	opt stack 0
  2056  000092                     sprintf@c:
  2057                           	opt stack 0
  2058                           
  2059                           ; 1 bytes @ 0x32
  2060  000092                     	ds	1
  2061  000093                     sprintf@width:
  2062                           	opt stack 0
  2063                           
  2064                           ; 2 bytes @ 0x33
  2065  000093                     	ds	2
  2066  000095                     print_time@tx:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x35
  2070  000095                     	ds	2
  2071  000097                     print_time@str:
  2072                           	opt stack 0
  2073                           
  2074                           ; 30 bytes @ 0x37
  2075  000097                     	ds	30
  2076  0000B5                     terminal_at_hand@tx:
  2077                           	opt stack 0
  2078                           
  2079                           ; 2 bytes @ 0x55
  2080  0000B5                     	ds	2
  2081  0000B7                     terminal_at_hand@hand:
  2082                           	opt stack 0
  2083                           
  2084                           ; 2 bytes @ 0x57
  2085  0000B7                     	ds	2
  2086  0000B9                     terminal_at_hand@min:
  2087                           	opt stack 0
  2088                           
  2089                           ; 1 bytes @ 0x59
  2090  0000B9                     	ds	1
  2091  0000BA                     terminal_at_hand@max:
  2092                           	opt stack 0
  2093                           
  2094                           ; 1 bytes @ 0x5A
  2095  0000BA                     	ds	1
  2096  0000BB                     terminal_at_hand@value:
  2097                           	opt stack 0
  2098                           
  2099                           ; 1 bytes @ 0x5B
  2100  0000BB                     	ds	1
  2101  0000BC                     terminal_time@tx:
  2102                           	opt stack 0
  2103                           
  2104                           ; 2 bytes @ 0x5C
  2105  0000BC                     	ds	2
  2106  0000BE                     terminal_time@op0:
  2107                           	opt stack 0
  2108                           
  2109                           ; 2 bytes @ 0x5E
  2110  0000BE                     	ds	2
  2111  0000C0                     terminal_time@op1:
  2112                           	opt stack 0
  2113                           
  2114                           ; 2 bytes @ 0x60
  2115  0000C0                     	ds	2
  2116  0000C2                     terminal_time@op2:
  2117                           	opt stack 0
  2118                           
  2119                           ; 2 bytes @ 0x62
  2120  0000C2                     	ds	2
  2121  0000C4                     _terminal_time$6979:
  2122                           	opt stack 0
  2123                           
  2124                           ; 1 bytes @ 0x64
  2125  0000C4                     	ds	1
  2126  0000C5                     terminal_operation@tx:
  2127                           	opt stack 0
  2128                           
  2129                           ; 2 bytes @ 0x65
  2130  0000C5                     	ds	2
  2131  0000C7                     terminal_operation@op0:
  2132                           	opt stack 0
  2133                           
  2134                           ; 2 bytes @ 0x67
  2135  0000C7                     	ds	2
  2136  0000C9                     terminal_operation@op1:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x69
  2140  0000C9                     	ds	2
  2141  0000CB                     terminal_operation@op2:
  2142                           	opt stack 0
  2143                           
  2144                           ; 2 bytes @ 0x6B
  2145  0000CB                     	ds	2
  2146  0000CD                     terminal_operation@op3:
  2147                           	opt stack 0
  2148                           
  2149                           ; 2 bytes @ 0x6D
  2150  0000CD                     	ds	2
  2151  0000CF                     _terminal_operation$6980:
  2152                           	opt stack 0
  2153                           
  2154                           ; 2 bytes @ 0x6F
  2155  0000CF                     	ds	2
  2156  0000D1                     _terminal_operation$6981:
  2157                           	opt stack 0
  2158                           
  2159                           ; 2 bytes @ 0x71
  2160  0000D1                     	ds	2
  2161  0000D3                     ??_terminal_task:
  2162                           
  2163                           ; 0 bytes @ 0x73
  2164  0000D3                     	ds	2
  2165  0000D5                     tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           postinc0	equ	0xFEE
  2170                           wreg	equ	0xFE8
  2171                           postdec1	equ	0xFE5
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           
  2175                           ; 0 bytes @ 0x75
  2176                           
  2177                           	psect	cstackCOMRAM
  2178  00002E                     __pcstackCOMRAM:
  2179                           	opt stack 0
  2180  00002E                     ??_USBStdGetDscHandler:
  2181  00002E                     ??_USBStdGetStatusHandler:
  2182  00002E                     ?i2_USBTransferOnePacket:
  2183                           	opt stack 0
  2184  00002E                     USBConfigureEndpoint@direction:
  2185                           	opt stack 0
  2186  00002E                     USBCtrlTrfTxService@byteToSend:
  2187                           	opt stack 0
  2188  00002E                     USBCtrlTrfRxService@i:
  2189                           	opt stack 0
  2190  00002E                     i2USBTransferOnePacket@dir:
  2191                           	opt stack 0
  2192  00002E                     button_timer_interrupt@bt:
  2193                           	opt stack 0
  2194  00002E                     i2memset@p1:
  2195                           	opt stack 0
  2196                           
  2197                           ; 2 bytes @ 0x0
  2198  00002E                     	ds	1
  2199  00002F                     ??_USBConfigureEndpoint:
  2200  00002F                     USBCtrlTrfRxService@byteToRead:
  2201                           	opt stack 0
  2202  00002F                     USBCtrlTrfInHandler@lastDTS:
  2203                           	opt stack 0
  2204  00002F                     USBStdGetStatusHandler@p:
  2205                           	opt stack 0
  2206  00002F                     i2USBTransferOnePacket@data:
  2207                           	opt stack 0
  2208                           
  2209                           ; 2 bytes @ 0x1
  2210  00002F                     	ds	1
  2211  000030                     button_timer_interrupt@sw_value:
  2212                           	opt stack 0
  2213  000030                     i2memset@c:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x2
  2217  000030                     	ds	1
  2218  000031                     i2USBTransferOnePacket@len:
  2219                           	opt stack 0
  2220                           
  2221                           ; 1 bytes @ 0x3
  2222  000031                     	ds	1
  2223  000032                     i2USBTransferOnePacket@ep:
  2224                           	opt stack 0
  2225  000032                     i2memset@n:
  2226                           	opt stack 0
  2227                           
  2228                           ; 2 bytes @ 0x4
  2229  000032                     	ds	1
  2230  000033                     USBConfigureEndpoint@EPNum:
  2231                           	opt stack 0
  2232  000033                     i2USBTransferOnePacket@handle:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x5
  2236  000033                     	ds	1
  2237  000034                     USBConfigureEndpoint@handle:
  2238                           	opt stack 0
  2239  000034                     i2memset@p:
  2240                           	opt stack 0
  2241                           
  2242                           ; 2 bytes @ 0x6
  2243  000034                     	ds	2
  2244  000036                     USBEnableEndpoint@options:
  2245                           	opt stack 0
  2246  000036                     i2USBDeviceInit@i:
  2247                           	opt stack 0
  2248                           
  2249                           ; 1 bytes @ 0x8
  2250  000036                     	ds	1
  2251  000037                     USBEnableEndpoint@p:
  2252                           	opt stack 0
  2253                           
  2254                           ; 2 bytes @ 0x9
  2255  000037                     	ds	2
  2256  000039                     USBEnableEndpoint@ep:
  2257                           	opt stack 0
  2258                           
  2259                           ; 1 bytes @ 0xB
  2260  000039                     	ds	1
  2261  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2262                           	opt stack 0
  2263                           
  2264                           ; 2 bytes @ 0xC
  2265  00003A                     	ds	2
  2266  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2267                           	opt stack 0
  2268                           
  2269                           ; 2 bytes @ 0xE
  2270  00003C                     	ds	2
  2271  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2272                           	opt stack 0
  2273                           
  2274                           ; 2 bytes @ 0x10
  2275  00003E                     	ds	2
  2276  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2277                           
  2278                           ; 0 bytes @ 0x12
  2279  000040                     	ds	2
  2280  000042                     ??_USBStdFeatureReqHandler:
  2281  000042                     USBStdSetCfgHandler@i:
  2282                           	opt stack 0
  2283                           
  2284                           ; 1 bytes @ 0x14
  2285  000042                     	ds	1
  2286  000043                     USBStdFeatureReqHandler@pUEP:
  2287                           	opt stack 0
  2288                           
  2289                           ; 2 bytes @ 0x15
  2290  000043                     	ds	2
  2291  000045                     USBStdFeatureReqHandler@current_ep_data:
  2292                           	opt stack 0
  2293                           
  2294                           ; 1 bytes @ 0x17
  2295  000045                     	ds	1
  2296  000046                     USBStdFeatureReqHandler@p:
  2297                           	opt stack 0
  2298                           
  2299                           ; 2 bytes @ 0x18
  2300  000046                     	ds	2
  2301  000048                     ??_USBCtrlEPService:
  2302  000048                     
  2303                           ; 0 bytes @ 0x1A
  2304  000048                     	ds	2
  2305  00004A                     USBCtrlEPService@setup_cnt:
  2306                           	opt stack 0
  2307                           
  2308                           ; 1 bytes @ 0x1C
  2309  00004A                     	ds	1
  2310  00004B                     USBDeviceTasks@i:
  2311                           	opt stack 0
  2312                           
  2313                           ; 1 bytes @ 0x1D
  2314  00004B                     	ds	1
  2315  00004C                     ??_ISR:
  2316                           
  2317                           ; 0 bytes @ 0x1E
  2318  00004C                     	ds	15
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           postdec1	equ	0xFE5
  2326                           fsr1h	equ	0xFE2
  2327                           fsr1l	equ	0xFE1
  2328                           
  2329 ;;
  2330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2331 ;;
  2332 ;; *************** function _main *****************
  2333 ;; Defined at:
  2334 ;;		line 304 in file "PIC18F27J53-killifish_light06.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  2  1674[None  ] int 
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels required when called:   21
  2354 ;; This function calls:
  2355 ;;		_RTCC_task
  2356 ;;		_USB_CDC_task
  2357 ;;		_light_task
  2358 ;;		_main_init
  2359 ;;		_terminal_task
  2360 ;; This function is called by:
  2361 ;;		Startup code after reset
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text0
  2366  014334                     __ptext0:
  2367                           	opt stack 0
  2368  014334                     _main:
  2369                           	opt stack 10
  2370                           
  2371                           ;PIC18F27J53-killifish_light06.c: 305: main_init();
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;incstack = 0
  2375  014334  EC51  F0A1         	call	_main_init	;wreg free
  2376  014338                     l10827:
  2377                           
  2378                           ;PIC18F27J53-killifish_light06.c: 308: INTCONbits.GIE = 0;
  2379  014338  9EF2               	bcf	intcon,7,c	;volatile
  2380                           
  2381                           ;PIC18F27J53-killifish_light06.c: 309: USB_CDC_task();
  2382  01433A  EC7E  F092         	call	_USB_CDC_task	;wreg free
  2383                           
  2384                           ;PIC18F27J53-killifish_light06.c: 310: INTCONbits.GIE = 1;
  2385  01433E  8EF2               	bsf	intcon,7,c	;volatile
  2386                           
  2387                           ;PIC18F27J53-killifish_light06.c: 312: INTCONbits.GIE = 0;
  2388  014340  9EF2               	bcf	intcon,7,c	;volatile
  2389                           
  2390                           ;PIC18F27J53-killifish_light06.c: 313: RTCC_task();
  2391  014342  ECB9  F0A1         	call	_RTCC_task	;wreg free
  2392                           
  2393                           ;PIC18F27J53-killifish_light06.c: 314: INTCONbits.GIE = 1;
  2394  014346  8EF2               	bsf	intcon,7,c	;volatile
  2395                           
  2396                           ;PIC18F27J53-killifish_light06.c: 316: INTCONbits.GIE = 0;
  2397  014348  9EF2               	bcf	intcon,7,c	;volatile
  2398                           
  2399                           ;PIC18F27J53-killifish_light06.c: 317: terminal_task(&usb_tx, &usb_rx);
  2400  01434A  0E64               	movlw	low _usb_tx
  2401  01434C  0101               	movlb	1	; () banked
  2402  01434E  6F87               	movwf	terminal_task@tx& (0+255),b
  2403  014350  0E01               	movlw	high _usb_tx
  2404  014352  0101               	movlb	1	; () banked
  2405  014354  6F88               	movwf	(terminal_task@tx+1)& (0+255),b
  2406  014356  0E5C               	movlw	low _usb_rx
  2407  014358  0101               	movlb	1	; () banked
  2408  01435A  6F89               	movwf	terminal_task@rx& (0+255),b
  2409  01435C  0E01               	movlw	high _usb_rx
  2410  01435E  0101               	movlb	1	; () banked
  2411  014360  6F8A               	movwf	(terminal_task@rx+1)& (0+255),b
  2412  014362  EC5A  F086         	call	_terminal_task	;wreg free
  2413                           
  2414                           ;PIC18F27J53-killifish_light06.c: 318: INTCONbits.GIE = 1;
  2415  014366  8EF2               	bsf	intcon,7,c	;volatile
  2416                           
  2417                           ;PIC18F27J53-killifish_light06.c: 320: INTCONbits.GIE = 0;
  2418  014368  9EF2               	bcf	intcon,7,c	;volatile
  2419                           
  2420                           ;PIC18F27J53-killifish_light06.c: 321: light_task();
  2421  01436A  ECDB  F08B         	call	_light_task	;wreg free
  2422                           
  2423                           ;PIC18F27J53-killifish_light06.c: 322: INTCONbits.GIE = 1;
  2424  01436E  8EF2               	bsf	intcon,7,c	;volatile
  2425  014370  D7E3               	goto	l10827
  2426  014372                     __end_of_main:
  2427                           	opt stack 0
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           intcon	equ	0xFF2
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postdec1	equ	0xFE5
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           
  2439 ;; *************** function _terminal_task *****************
  2440 ;; Defined at:
  2441 ;;		line 8 in file "../My_library/My_terminal.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2444 ;;		 -> usb_tx(8), 
  2445 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2446 ;;		 -> usb_rx(8), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  i               1  106[BANK1 ] unsigned char 
  2449 ;;  i               1  108[BANK1 ] unsigned char 
  2450 ;;  ascii           1  107[BANK1 ] unsigned char 
  2451 ;;  buf           100    4[BANK1 ] unsigned char [100]
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2461 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;      Totals:         0       2     109       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;Total ram usage:      111 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:   20
  2468 ;; This function calls:
  2469 ;;		_ringbuf_backspace
  2470 ;;		_ringbuf_delete
  2471 ;;		_ringbuf_init
  2472 ;;		_ringbuf_num
  2473 ;;		_ringbuf_pop
  2474 ;;		_ringbuf_put
  2475 ;;		_ringbuf_put_num
  2476 ;;		_ringbuf_put_str
  2477 ;;		_terminal_operation
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text1
  2484  010CB4                     __ptext1:
  2485                           	opt stack 0
  2486  010CB4                     _terminal_task:
  2487                           	opt stack 10
  2488                           
  2489                           ;My_terminal.c: 9: static ringbuf_t command;
  2490                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2491                           ;My_terminal.c: 11: if (command_init == 0) {
  2492                           
  2493                           ;incstack = 0
  2494  010CB4  0100               	movlb	0	; () banked
  2495  010CB6  51F2               	movf	terminal_task@command_init& (0+255),w,b
  2496  010CB8  0100               	movlb	0	; () banked
  2497  010CBA  A4D8               	btfss	status,2,c
  2498  010CBC  D016               	goto	l10337
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;My_terminal.c: 12: command_init = 1;
  2502  010CBE  0E01               	movlw	1
  2503  010CC0  0100               	movlb	0	; () banked
  2504  010CC2  6FF2               	movwf	terminal_task@command_init& (0+255),b
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;My_terminal.c: 13: char buf[100];
  2508                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2509  010CC4  0E6C               	movlw	low terminal_task@command
  2510  010CC6  0100               	movlb	0	; () banked
  2511  010CC8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2512  010CCA  0E01               	movlw	high terminal_task@command
  2513  010CCC  0100               	movlb	0	; () banked
  2514  010CCE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2515  010CD0  0E8B               	movlw	low terminal_task@buf
  2516  010CD2  0100               	movlb	0	; () banked
  2517  010CD4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2518  010CD6  0E01               	movlw	high terminal_task@buf
  2519  010CD8  0100               	movlb	0	; () banked
  2520  010CDA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2521  010CDC  0E00               	movlw	0
  2522  010CDE  0100               	movlb	0	; () banked
  2523  010CE0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2524  010CE2  0E64               	movlw	100
  2525  010CE4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2526  010CE6  ECD8  F0A0         	call	_ringbuf_init	;wreg free
  2527  010CEA                     l10337:
  2528                           
  2529                           ;My_terminal.c: 15: }
  2530                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2531  010CEA  C189  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2532  010CEE  C18A  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2533  010CF2  ECEA  F093         	call	_ringbuf_num	;wreg free
  2534  010CF6  0100               	movlb	0	; () banked
  2535  010CF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2536  010CFA  0100               	movlb	0	; () banked
  2537  010CFC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2538  010CFE  B4D8               	btfsc	status,2,c
  2539  010D00  0012               	return	
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2543  010D02  C189  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2544  010D06  C18A  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2545  010D0A  EC9B  F098         	call	_ringbuf_pop	;wreg free
  2546  010D0E  0101               	movlb	1	; () banked
  2547  010D10  6FF2               	movwf	terminal_task@ascii& (0+255),b
  2548                           
  2549                           ;My_terminal.c: 18: switch (ascii) {
  2550  010D12  D176               	goto	l10401
  2551  010D14                     l10341:
  2552                           
  2553                           ; BSR set to: 1
  2554                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2555  010D14  0E6C               	movlw	low terminal_task@command
  2556  010D16  0100               	movlb	0	; () banked
  2557  010D18  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2558  010D1A  0E01               	movlw	high terminal_task@command
  2559  010D1C  0100               	movlb	0	; () banked
  2560  010D1E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2561  010D20  0E00               	movlw	0
  2562  010D22  0100               	movlb	0	; () banked
  2563  010D24  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2564  010D26  EC61  F097         	call	_ringbuf_put	;wreg free
  2565                           
  2566                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2567  010D2A  C187  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2568  010D2E  C188  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2569  010D32  0E09               	movlw	9
  2570  010D34  0100               	movlb	0	; () banked
  2571  010D36  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2572  010D38  EC61  F097         	call	_ringbuf_put	;wreg free
  2573                           
  2574                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2575  010D3C  0E6C               	movlw	low terminal_task@command
  2576  010D3E  0100               	movlb	0	; () banked
  2577  010D40  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2578  010D42  0E01               	movlw	high terminal_task@command
  2579  010D44  0100               	movlb	0	; () banked
  2580  010D46  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2581  010D48  ECEA  F093         	call	_ringbuf_num	;wreg free
  2582  010D4C  0EFF               	movlw	255
  2583  010D4E  0100               	movlb	0	; () banked
  2584  010D50  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2585  010D52  0101               	movlb	1	; () banked
  2586  010D54  6FEF               	movwf	_terminal_task$6978& (0+255),b
  2587  010D56  0EFF               	movlw	255
  2588  010D58  0100               	movlb	0	; () banked
  2589  010D5A  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2590  010D5C  0101               	movlb	1	; () banked
  2591  010D5E  6FF0               	movwf	(_terminal_task$6978+1)& (0+255),b
  2592                           
  2593                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2594  010D60  C187  F072         	movff	terminal_task@tx,ringbuf_put_num@rb
  2595  010D64  C188  F073         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2596  010D68  C1EF  F074         	movff	_terminal_task$6978,ringbuf_put_num@value
  2597  010D6C  C1F0  F075         	movff	_terminal_task$6978+1,ringbuf_put_num@value+1
  2598  010D70  0E02               	movlw	2
  2599  010D72  0100               	movlb	0	; () banked
  2600  010D74  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  2601  010D76  EC55  F09E         	call	_ringbuf_put_num	;wreg free
  2602                           
  2603                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2604  010D7A  C187  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2605  010D7E  C188  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2606  010D82  0E0A               	movlw	10
  2607  010D84  0100               	movlb	0	; () banked
  2608  010D86  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2609  010D88  EC61  F097         	call	_ringbuf_put	;wreg free
  2610                           
  2611                           ;My_terminal.c: 24: static char op0[25];
  2612                           ;My_terminal.c: 25: static char op1[25];
  2613                           ;My_terminal.c: 26: static char op2[25];
  2614                           ;My_terminal.c: 27: static char op3[25];
  2615                           ;My_terminal.c: 28: uint8_t i;
  2616                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2617  010D8C  0E00               	movlw	0
  2618  010D8E  0101               	movlb	1	; () banked
  2619  010D90  6FF3               	movwf	terminal_task@i& (0+255),b
  2620  010D92  D002               	goto	l10347
  2621  010D94                     l10345:
  2622                           
  2623                           ; BSR set to: 1
  2624  010D94  0101               	movlb	1	; () banked
  2625  010D96  2BF3               	incf	terminal_task@i& (0+255),f,b
  2626  010D98                     l10347:
  2627                           
  2628                           ; BSR set to: 1
  2629  010D98  0E6C               	movlw	low terminal_task@command
  2630  010D9A  0100               	movlb	0	; () banked
  2631  010D9C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2632  010D9E  0E01               	movlw	high terminal_task@command
  2633  010DA0  0100               	movlb	0	; () banked
  2634  010DA2  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2635  010DA4  EC9B  F098         	call	_ringbuf_pop	;wreg free
  2636  010DA8  0100               	movlb	0	; () banked
  2637  010DAA  6FD3               	movwf	??_terminal_task& (0+255),b
  2638  010DAC  0101               	movlb	1	; () banked
  2639  010DAE  51F3               	movf	terminal_task@i& (0+255),w,b
  2640  010DB0  0D01               	mullw	1
  2641  010DB2  0E1D               	movlw	low terminal_task@op0
  2642  010DB4  24F3               	addwf	prodl,w,c
  2643  010DB6  6ED9               	movwf	fsr2l,c
  2644  010DB8  0E01               	movlw	high terminal_task@op0
  2645  010DBA  20F4               	addwfc	prodh,w,c
  2646  010DBC  6EDA               	movwf	fsr2h,c
  2647  010DBE  C0D3  FFDF         	movff	??_terminal_task,indf2
  2648  010DC2  50DF               	movf	indf2,w,c
  2649  010DC4  A4D8               	btfss	status,2,c
  2650  010DC6  D7E6               	goto	l10345
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;My_terminal.c: 30: op0[i] = '\0';
  2654                           
  2655                           ; BSR set to: 1
  2656  010DC8  0101               	movlb	1	; () banked
  2657  010DCA  51F3               	movf	terminal_task@i& (0+255),w,b
  2658  010DCC  0D01               	mullw	1
  2659  010DCE  0E1D               	movlw	low terminal_task@op0
  2660  010DD0  24F3               	addwf	prodl,w,c
  2661  010DD2  6ED9               	movwf	fsr2l,c
  2662  010DD4  0E01               	movlw	high terminal_task@op0
  2663  010DD6  20F4               	addwfc	prodh,w,c
  2664  010DD8  6EDA               	movwf	fsr2h,c
  2665  010DDA  0E00               	movlw	0
  2666  010DDC  6EDF               	movwf	indf2,c
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2670  010DDE  0E00               	movlw	0
  2671  010DE0  0101               	movlb	1	; () banked
  2672  010DE2  6FF3               	movwf	terminal_task@i& (0+255),b
  2673  010DE4  D002               	goto	l10355
  2674  010DE6                     l10353:
  2675                           
  2676                           ; BSR set to: 1
  2677  010DE6  0101               	movlb	1	; () banked
  2678  010DE8  2BF3               	incf	terminal_task@i& (0+255),f,b
  2679  010DEA                     l10355:
  2680                           
  2681                           ; BSR set to: 1
  2682  010DEA  0E6C               	movlw	low terminal_task@command
  2683  010DEC  0100               	movlb	0	; () banked
  2684  010DEE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2685  010DF0  0E01               	movlw	high terminal_task@command
  2686  010DF2  0100               	movlb	0	; () banked
  2687  010DF4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2688  010DF6  EC9B  F098         	call	_ringbuf_pop	;wreg free
  2689  010DFA  0100               	movlb	0	; () banked
  2690  010DFC  6FD3               	movwf	??_terminal_task& (0+255),b
  2691  010DFE  0101               	movlb	1	; () banked
  2692  010E00  51F3               	movf	terminal_task@i& (0+255),w,b
  2693  010E02  0D01               	mullw	1
  2694  010E04  0E80               	movlw	low terminal_task@op1
  2695  010E06  24F3               	addwf	prodl,w,c
  2696  010E08  6ED9               	movwf	fsr2l,c
  2697  010E0A  0E02               	movlw	high terminal_task@op1
  2698  010E0C  20F4               	addwfc	prodh,w,c
  2699  010E0E  6EDA               	movwf	fsr2h,c
  2700  010E10  C0D3  FFDF         	movff	??_terminal_task,indf2
  2701  010E14  50DF               	movf	indf2,w,c
  2702  010E16  A4D8               	btfss	status,2,c
  2703  010E18  D7E6               	goto	l10353
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;My_terminal.c: 32: op1[i] = '\0';
  2707                           
  2708                           ; BSR set to: 1
  2709  010E1A  0101               	movlb	1	; () banked
  2710  010E1C  51F3               	movf	terminal_task@i& (0+255),w,b
  2711  010E1E  0D01               	mullw	1
  2712  010E20  0E80               	movlw	low terminal_task@op1
  2713  010E22  24F3               	addwf	prodl,w,c
  2714  010E24  6ED9               	movwf	fsr2l,c
  2715  010E26  0E02               	movlw	high terminal_task@op1
  2716  010E28  20F4               	addwfc	prodh,w,c
  2717  010E2A  6EDA               	movwf	fsr2h,c
  2718  010E2C  0E00               	movlw	0
  2719  010E2E  6EDF               	movwf	indf2,c
  2720                           
  2721                           ; BSR set to: 1
  2722                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2723  010E30  0E00               	movlw	0
  2724  010E32  0101               	movlb	1	; () banked
  2725  010E34  6FF3               	movwf	terminal_task@i& (0+255),b
  2726  010E36  D002               	goto	l10363
  2727  010E38                     l10361:
  2728                           
  2729                           ; BSR set to: 1
  2730  010E38  0101               	movlb	1	; () banked
  2731  010E3A  2BF3               	incf	terminal_task@i& (0+255),f,b
  2732  010E3C                     l10363:
  2733                           
  2734                           ; BSR set to: 1
  2735  010E3C  0E6C               	movlw	low terminal_task@command
  2736  010E3E  0100               	movlb	0	; () banked
  2737  010E40  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2738  010E42  0E01               	movlw	high terminal_task@command
  2739  010E44  0100               	movlb	0	; () banked
  2740  010E46  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2741  010E48  EC9B  F098         	call	_ringbuf_pop	;wreg free
  2742  010E4C  0100               	movlb	0	; () banked
  2743  010E4E  6FD3               	movwf	??_terminal_task& (0+255),b
  2744  010E50  0101               	movlb	1	; () banked
  2745  010E52  51F3               	movf	terminal_task@i& (0+255),w,b
  2746  010E54  0D01               	mullw	1
  2747  010E56  0E99               	movlw	low terminal_task@op2
  2748  010E58  24F3               	addwf	prodl,w,c
  2749  010E5A  6ED9               	movwf	fsr2l,c
  2750  010E5C  0E02               	movlw	high terminal_task@op2
  2751  010E5E  20F4               	addwfc	prodh,w,c
  2752  010E60  6EDA               	movwf	fsr2h,c
  2753  010E62  C0D3  FFDF         	movff	??_terminal_task,indf2
  2754  010E66  50DF               	movf	indf2,w,c
  2755  010E68  A4D8               	btfss	status,2,c
  2756  010E6A  D7E6               	goto	l10361
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;My_terminal.c: 34: op2[i] = '\0';
  2760                           
  2761                           ; BSR set to: 1
  2762  010E6C  0101               	movlb	1	; () banked
  2763  010E6E  51F3               	movf	terminal_task@i& (0+255),w,b
  2764  010E70  0D01               	mullw	1
  2765  010E72  0E99               	movlw	low terminal_task@op2
  2766  010E74  24F3               	addwf	prodl,w,c
  2767  010E76  6ED9               	movwf	fsr2l,c
  2768  010E78  0E02               	movlw	high terminal_task@op2
  2769  010E7A  20F4               	addwfc	prodh,w,c
  2770  010E7C  6EDA               	movwf	fsr2h,c
  2771  010E7E  0E00               	movlw	0
  2772  010E80  6EDF               	movwf	indf2,c
  2773                           
  2774                           ; BSR set to: 1
  2775                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2776  010E82  0E00               	movlw	0
  2777  010E84  0101               	movlb	1	; () banked
  2778  010E86  6FF3               	movwf	terminal_task@i& (0+255),b
  2779  010E88  D002               	goto	l10371
  2780  010E8A                     l10369:
  2781                           
  2782                           ; BSR set to: 1
  2783  010E8A  0101               	movlb	1	; () banked
  2784  010E8C  2BF3               	incf	terminal_task@i& (0+255),f,b
  2785  010E8E                     l10371:
  2786                           
  2787                           ; BSR set to: 1
  2788  010E8E  0E6C               	movlw	low terminal_task@command
  2789  010E90  0100               	movlb	0	; () banked
  2790  010E92  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2791  010E94  0E01               	movlw	high terminal_task@command
  2792  010E96  0100               	movlb	0	; () banked
  2793  010E98  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2794  010E9A  EC9B  F098         	call	_ringbuf_pop	;wreg free
  2795  010E9E  0100               	movlb	0	; () banked
  2796  010EA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2797  010EA2  0101               	movlb	1	; () banked
  2798  010EA4  51F3               	movf	terminal_task@i& (0+255),w,b
  2799  010EA6  0D01               	mullw	1
  2800  010EA8  0EB2               	movlw	low terminal_task@op3
  2801  010EAA  24F3               	addwf	prodl,w,c
  2802  010EAC  6ED9               	movwf	fsr2l,c
  2803  010EAE  0E02               	movlw	high terminal_task@op3
  2804  010EB0  20F4               	addwfc	prodh,w,c
  2805  010EB2  6EDA               	movwf	fsr2h,c
  2806  010EB4  C0D3  FFDF         	movff	??_terminal_task,indf2
  2807  010EB8  50DF               	movf	indf2,w,c
  2808  010EBA  A4D8               	btfss	status,2,c
  2809  010EBC  D7E6               	goto	l10369
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;My_terminal.c: 36: op3[i] = '\0';
  2813                           
  2814                           ; BSR set to: 1
  2815  010EBE  0101               	movlb	1	; () banked
  2816  010EC0  51F3               	movf	terminal_task@i& (0+255),w,b
  2817  010EC2  0D01               	mullw	1
  2818  010EC4  0EB2               	movlw	low terminal_task@op3
  2819  010EC6  24F3               	addwf	prodl,w,c
  2820  010EC8  6ED9               	movwf	fsr2l,c
  2821  010ECA  0E02               	movlw	high terminal_task@op3
  2822  010ECC  20F4               	addwfc	prodh,w,c
  2823  010ECE  6EDA               	movwf	fsr2h,c
  2824  010ED0  0E00               	movlw	0
  2825  010ED2  6EDF               	movwf	indf2,c
  2826                           
  2827                           ; BSR set to: 1
  2828                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2829  010ED4  C187  F0C5         	movff	terminal_task@tx,terminal_operation@tx
  2830  010ED8  C188  F0C6         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2831  010EDC  0E1D               	movlw	low terminal_task@op0
  2832  010EDE  0100               	movlb	0	; () banked
  2833  010EE0  6FC7               	movwf	terminal_operation@op0& (0+255),b
  2834  010EE2  0E01               	movlw	high terminal_task@op0
  2835  010EE4  0100               	movlb	0	; () banked
  2836  010EE6  6FC8               	movwf	(terminal_operation@op0+1)& (0+255),b
  2837  010EE8  0E80               	movlw	low terminal_task@op1
  2838  010EEA  0100               	movlb	0	; () banked
  2839  010EEC  6FC9               	movwf	terminal_operation@op1& (0+255),b
  2840  010EEE  0E02               	movlw	high terminal_task@op1
  2841  010EF0  0100               	movlb	0	; () banked
  2842  010EF2  6FCA               	movwf	(terminal_operation@op1+1)& (0+255),b
  2843  010EF4  0E99               	movlw	low terminal_task@op2
  2844  010EF6  0100               	movlb	0	; () banked
  2845  010EF8  6FCB               	movwf	terminal_operation@op2& (0+255),b
  2846  010EFA  0E02               	movlw	high terminal_task@op2
  2847  010EFC  0100               	movlb	0	; () banked
  2848  010EFE  6FCC               	movwf	(terminal_operation@op2+1)& (0+255),b
  2849  010F00  0EB2               	movlw	low terminal_task@op3
  2850  010F02  0100               	movlb	0	; () banked
  2851  010F04  6FCD               	movwf	terminal_operation@op3& (0+255),b
  2852  010F06  0E02               	movlw	high terminal_task@op3
  2853  010F08  0100               	movlb	0	; () banked
  2854  010F0A  6FCE               	movwf	(terminal_operation@op3+1)& (0+255),b
  2855  010F0C  EC00  F080         	call	_terminal_operation	;wreg free
  2856                           
  2857                           ;My_terminal.c: 38: break;
  2858  010F10  0012               	return	
  2859  010F12                     l10377:
  2860                           
  2861                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2862  010F12  0E6C               	movlw	low terminal_task@command
  2863  010F14  0100               	movlb	0	; () banked
  2864  010F16  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2865  010F18  0E01               	movlw	high terminal_task@command
  2866  010F1A  0100               	movlb	0	; () banked
  2867  010F1C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2868  010F1E  0E00               	movlw	0
  2869  010F20  0100               	movlb	0	; () banked
  2870  010F22  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2871  010F24  EC61  F097         	call	_ringbuf_put	;wreg free
  2872                           
  2873                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2874  010F28  C187  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2875  010F2C  C188  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2876  010F30  0E20               	movlw	32
  2877  010F32  0100               	movlb	0	; () banked
  2878  010F34  6F6A               	movwf	ringbuf_put@data& (0+255),b
  2879  010F36  EC61  F097         	call	_ringbuf_put	;wreg free
  2880                           
  2881                           ;My_terminal.c: 42: break;
  2882  010F3A  0012               	return	
  2883  010F3C                     l10379:
  2884                           
  2885                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2886  010F3C  0E6C               	movlw	low terminal_task@command
  2887  010F3E  0100               	movlb	0	; () banked
  2888  010F40  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2889  010F42  0E01               	movlw	high terminal_task@command
  2890  010F44  0100               	movlb	0	; () banked
  2891  010F46  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2892  010F48  ECC8  F09D         	call	_ringbuf_backspace	;wreg free
  2893                           
  2894                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2895  010F4C  C187  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2896  010F50  C188  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2897  010F54  0EDA               	movlw	low STR_19
  2898  010F56  0100               	movlb	0	; () banked
  2899  010F58  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2900  010F5A  0EFF               	movlw	high STR_19
  2901  010F5C  0100               	movlb	0	; () banked
  2902  010F5E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2903  010F60  ECBA  F09F         	call	_ringbuf_put_str	;wreg free
  2904                           
  2905                           ;My_terminal.c: 46: break;
  2906  010F64  0012               	return	
  2907  010F66                     l10383:
  2908                           
  2909                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2910  010F66  0E00               	movlw	0
  2911  010F68  0101               	movlb	1	; () banked
  2912  010F6A  6FF1               	movwf	terminal_task@i_4621& (0+255),b
  2913  010F6C  D00E               	goto	l10389
  2914  010F6E                     l10385:
  2915  010F6E  C187  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2916  010F72  C188  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2917  010F76  0EDA               	movlw	low STR_19
  2918  010F78  0100               	movlb	0	; () banked
  2919  010F7A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2920  010F7C  0EFF               	movlw	high STR_19
  2921  010F7E  0100               	movlb	0	; () banked
  2922  010F80  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2923  010F82  ECBA  F09F         	call	_ringbuf_put_str	;wreg free
  2924  010F86  0101               	movlb	1	; () banked
  2925  010F88  2BF1               	incf	terminal_task@i_4621& (0+255),f,b
  2926  010F8A                     l10389:
  2927                           
  2928                           ; BSR set to: 1
  2929  010F8A  0E6C               	movlw	low terminal_task@command
  2930  010F8C  0100               	movlb	0	; () banked
  2931  010F8E  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2932  010F90  0E01               	movlw	high terminal_task@command
  2933  010F92  0100               	movlb	0	; () banked
  2934  010F94  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2935  010F96  ECEA  F093         	call	_ringbuf_num	;wreg free
  2936  010F9A  0101               	movlb	1	; () banked
  2937  010F9C  51F1               	movf	terminal_task@i_4621& (0+255),w,b
  2938  010F9E  0100               	movlb	0	; () banked
  2939  010FA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2940  010FA2  6BD4               	clrf	(??_terminal_task+1)& (0+255),b
  2941  010FA4  0100               	movlb	0	; () banked
  2942  010FA6  5160               	movf	?_ringbuf_num& (0+255),w,b
  2943  010FA8  0100               	movlb	0	; () banked
  2944  010FAA  5DD3               	subwf	??_terminal_task& (0+255),w,b
  2945  010FAC  0100               	movlb	0	; () banked
  2946  010FAE  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2947  010FB0  0100               	movlb	0	; () banked
  2948  010FB2  59D4               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2949  010FB4  A0D8               	btfss	status,0,c
  2950  010FB6  D7DB               	goto	l10385
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2954                           
  2955                           ; BSR set to: 0
  2956  010FB8  0E6C               	movlw	low terminal_task@command
  2957  010FBA  0100               	movlb	0	; () banked
  2958  010FBC  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2959  010FBE  0E01               	movlw	high terminal_task@command
  2960  010FC0  0100               	movlb	0	; () banked
  2961  010FC2  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2962  010FC4  EC24  F0A3         	call	_ringbuf_delete	;wreg free
  2963                           
  2964                           ;My_terminal.c: 50: break;
  2965  010FC8  0012               	return	
  2966  010FCA                     l10393:
  2967                           
  2968                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2969  010FCA  0E1F               	movlw	31
  2970  010FCC  0101               	movlb	1	; () banked
  2971  010FCE  65F2               	cpfsgt	terminal_task@ascii& (0+255),b
  2972  010FD0  0012               	return	
  2973                           
  2974                           ; BSR set to: 1
  2975  010FD2  0E7F               	movlw	127
  2976  010FD4  0101               	movlb	1	; () banked
  2977  010FD6  61F2               	cpfslt	terminal_task@ascii& (0+255),b
  2978  010FD8  0012               	return	
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2982  010FDA  0E6C               	movlw	low terminal_task@command
  2983  010FDC  0100               	movlb	0	; () banked
  2984  010FDE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2985  010FE0  0E01               	movlw	high terminal_task@command
  2986  010FE2  0100               	movlb	0	; () banked
  2987  010FE4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2988  010FE6  C1F2  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  2989  010FEA  EC61  F097         	call	_ringbuf_put	;wreg free
  2990                           
  2991                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2992  010FEE  C187  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2993  010FF2  C188  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2994  010FF6  C1F2  F06A         	movff	terminal_task@ascii,ringbuf_put@data
  2995  010FFA  EC61  F097         	call	_ringbuf_put	;wreg free
  2996                           
  2997                           ;My_terminal.c: 57: }
  2998                           
  2999                           ;My_terminal.c: 55: }
  3000                           ;My_terminal.c: 56: break;
  3001  010FFE  0012               	return	
  3002  011000                     l10401:
  3003  011000  0101               	movlb	1	; () banked
  3004  011002  51F2               	movf	terminal_task@ascii& (0+255),w,b
  3005                           
  3006                           ; Switch size 1, requested type "space"
  3007                           ; Number of cases is 4, Range of values is 8 to 127
  3008                           ; switch strategies available:
  3009                           ; Name         Instructions Cycles
  3010                           ; simple_byte           13     7 (average)
  3011                           ;	Chosen strategy is simple_byte
  3012  011004  0A08               	xorlw	8	; case 8
  3013  011006  B4D8               	btfsc	status,2,c
  3014  011008  D799               	goto	l10379
  3015  01100A  0A05               	xorlw	5	; case 13
  3016  01100C  B4D8               	btfsc	status,2,c
  3017  01100E  D682               	goto	l10341
  3018  011010  0A2D               	xorlw	45	; case 32
  3019  011012  B4D8               	btfsc	status,2,c
  3020  011014  D77E               	goto	l10377
  3021  011016  0A5F               	xorlw	95	; case 127
  3022  011018  B4D8               	btfsc	status,2,c
  3023  01101A  D7A5               	goto	l10383
  3024  01101C  D7D6               	goto	l10393
  3025  01101E                     __end_of_terminal_task:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           intcon	equ	0xFF2
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           postdec1	equ	0xFE5
  3037                           fsr1h	equ	0xFE2
  3038                           fsr1l	equ	0xFE1
  3039                           indf2	equ	0xFDF
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           
  3044 ;; *************** function _terminal_operation *****************
  3045 ;; Defined at:
  3046 ;;		line 170 in file "PIC18F27J53-killifish_light06.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  tx              2  101[BANK0 ] PTR struct ringbuf
  3049 ;;		 -> usb_tx(8), 
  3050 ;;  op0             2  103[BANK0 ] PTR unsigned char 
  3051 ;;		 -> terminal_task@op0(25), 
  3052 ;;  op1             2  105[BANK0 ] PTR unsigned char 
  3053 ;;		 -> terminal_task@op1(25), 
  3054 ;;  op2             2  107[BANK0 ] PTR unsigned char 
  3055 ;;		 -> terminal_task@op2(25), 
  3056 ;;  op3             2  109[BANK0 ] PTR unsigned char 
  3057 ;;		 -> terminal_task@op3(25), 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;		None               void
  3062 ;; Registers used:
  3063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3069 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;Total ram usage:       14 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:   19
  3076 ;; This function calls:
  3077 ;;		_PWM_set
  3078 ;;		___awdiv
  3079 ;;		___wmul
  3080 ;;		_atoi
  3081 ;;		_ringbuf_put_str
  3082 ;;		_strcmp
  3083 ;;		_terminal_time
  3084 ;; This function is called by:
  3085 ;;		_terminal_task
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text2
  3090  010000                     __ptext2:
  3091                           	opt stack 0
  3092  010000                     _terminal_operation:
  3093                           	opt stack 10
  3094                           
  3095                           ;PIC18F27J53-killifish_light06.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  3096                           
  3097                           ;incstack = 0
  3098  010000  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3099  010004  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3100  010008  0EB2               	movlw	low STR_41
  3101  01000A  0100               	movlb	0	; () banked
  3102  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  3103  01000E  0EFF               	movlw	high STR_41
  3104  010010  0100               	movlb	0	; () banked
  3105  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3106  010014  EC4E  F0A0         	call	_strcmp	;wreg free
  3107  010018  0100               	movlb	0	; () banked
  3108  01001A  5160               	movf	?_strcmp& (0+255),w,b
  3109  01001C  0100               	movlb	0	; () banked
  3110  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3111  010020  B4D8               	btfsc	status,2,c
  3112  010022  D012               	goto	l10043
  3113                           
  3114                           ; BSR set to: 0
  3115  010024  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3116  010028  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3117  01002C  0EE5               	movlw	low STR_42
  3118  01002E  0100               	movlb	0	; () banked
  3119  010030  6F62               	movwf	strcmp@s2& (0+255),b
  3120  010032  0EFF               	movlw	high STR_42
  3121  010034  0100               	movlb	0	; () banked
  3122  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3123  010038  EC4E  F0A0         	call	_strcmp	;wreg free
  3124  01003C  0100               	movlb	0	; () banked
  3125  01003E  5160               	movf	?_strcmp& (0+255),w,b
  3126  010040  0100               	movlb	0	; () banked
  3127  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3128  010044  A4D8               	btfss	status,2,c
  3129  010046  D00C               	goto	l10045
  3130  010048                     l10043:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;PIC18F27J53-killifish_light06.c: 172: ringbuf_put_str(tx,
  3134                           ;PIC18F27J53-killifish_light06.c: 173: "\t**************************\n"
  3135                           ;PIC18F27J53-killifish_light06.c: 174: "\t**** Killifish Light  ****\n"
  3136                           ;PIC18F27J53-killifish_light06.c: 175: "\t**** Made by @Ryokeri ****\n"
  3137                           ;PIC18F27J53-killifish_light06.c: 176: "\t**************************\n\n"
  3138                           ;PIC18F27J53-killifish_light06.c: 177: "\tcommand \topeland1\topeland2\n\n"
  3139                           ;PIC18F27J53-killifish_light06.c: 178: "\tprint_time(t)\n"
  3140                           ;PIC18F27J53-killifish_light06.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3141  010048  C0C5  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  3142  01004C  C0C6  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3143  010050  0EF2               	movlw	low STR_43
  3144  010052  0100               	movlb	0	; () banked
  3145  010054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3146  010056  0EFD               	movlw	high STR_43
  3147  010058  0100               	movlb	0	; () banked
  3148  01005A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3149  01005C  ECBA  F09F         	call	_ringbuf_put_str	;wreg free
  3150  010060                     l10045:
  3151                           
  3152                           ;PIC18F27J53-killifish_light06.c: 186: }
  3153                           ;PIC18F27J53-killifish_light06.c: 187: terminal_time(tx, op0, op1, op2);
  3154  010060  C0C5  F0BC         	movff	terminal_operation@tx,terminal_time@tx
  3155  010064  C0C6  F0BD         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3156  010068  C0C7  F0BE         	movff	terminal_operation@op0,terminal_time@op0
  3157  01006C  C0C8  F0BF         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3158  010070  C0C9  F0C0         	movff	terminal_operation@op1,terminal_time@op1
  3159  010074  C0CA  F0C1         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3160  010078  C0CB  F0C2         	movff	terminal_operation@op2,terminal_time@op2
  3161  01007C  C0CC  F0C3         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3162  010080  EC84  F084         	call	_terminal_time	;wreg free
  3163                           
  3164                           ;PIC18F27J53-killifish_light06.c: 188: if (!strcmp(op0, "RESET();")) {
  3165  010084  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3166  010088  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3167  01008C  0E69               	movlw	low STR_44
  3168  01008E  0100               	movlb	0	; () banked
  3169  010090  6F62               	movwf	strcmp@s2& (0+255),b
  3170  010092  0EFF               	movlw	high STR_44
  3171  010094  0100               	movlb	0	; () banked
  3172  010096  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3173  010098  EC4E  F0A0         	call	_strcmp	;wreg free
  3174  01009C  0100               	movlb	0	; () banked
  3175  01009E  5160               	movf	?_strcmp& (0+255),w,b
  3176  0100A0  0100               	movlb	0	; () banked
  3177  0100A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3178  0100A4  B4D8               	btfsc	status,2,c
  3179                           
  3180                           ; BSR set to: 0
  3181  0100A6  00FF               	reset		;# 
  3182                           
  3183                           ;PIC18F27J53-killifish_light06.c: 190: }
  3184                           ;PIC18F27J53-killifish_light06.c: 191: if (!strcmp(op0, "bootload")) {
  3185  0100A8  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3186  0100AC  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3187  0100B0  0E72               	movlw	low STR_45
  3188  0100B2  0100               	movlb	0	; () banked
  3189  0100B4  6F62               	movwf	strcmp@s2& (0+255),b
  3190  0100B6  0EFF               	movlw	high STR_45
  3191  0100B8  0100               	movlb	0	; () banked
  3192  0100BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3193  0100BC  EC4E  F0A0         	call	_strcmp	;wreg free
  3194  0100C0  0100               	movlb	0	; () banked
  3195  0100C2  5160               	movf	?_strcmp& (0+255),w,b
  3196  0100C4  0100               	movlb	0	; () banked
  3197  0100C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3198  0100C8  B4D8               	btfsc	status,2,c
  3199                           
  3200                           ; BSR set to: 0
  3201  0100CA  EF0E F000          	goto	28	;# 
  3202                           
  3203                           ;PIC18F27J53-killifish_light06.c: 193: }
  3204                           ;PIC18F27J53-killifish_light06.c: 194: if (!strcmp(op0, "set")) {
  3205  0100CE  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3206  0100D2  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3207  0100D6  0ED6               	movlw	low STR_46
  3208  0100D8  0100               	movlb	0	; () banked
  3209  0100DA  6F62               	movwf	strcmp@s2& (0+255),b
  3210  0100DC  0EFF               	movlw	high STR_46
  3211  0100DE  0100               	movlb	0	; () banked
  3212  0100E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3213  0100E2  EC4E  F0A0         	call	_strcmp	;wreg free
  3214  0100E6  0100               	movlb	0	; () banked
  3215  0100E8  5160               	movf	?_strcmp& (0+255),w,b
  3216  0100EA  0100               	movlb	0	; () banked
  3217  0100EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3218  0100EE  A4D8               	btfss	status,2,c
  3219  0100F0  D03C               	goto	l10067
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;PIC18F27J53-killifish_light06.c: 195: if (!strcmp(op1, "sync")) {
  3223  0100F2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3224  0100F6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3225  0100FA  0EAD               	movlw	low STR_47
  3226  0100FC  0100               	movlb	0	; () banked
  3227  0100FE  6F62               	movwf	strcmp@s2& (0+255),b
  3228  010100  0EFF               	movlw	high STR_47
  3229  010102  0100               	movlb	0	; () banked
  3230  010104  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3231  010106  EC4E  F0A0         	call	_strcmp	;wreg free
  3232  01010A  0100               	movlb	0	; () banked
  3233  01010C  5160               	movf	?_strcmp& (0+255),w,b
  3234  01010E  0100               	movlb	0	; () banked
  3235  010110  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3236  010112  A4D8               	btfss	status,2,c
  3237  010114  D003               	goto	l10061
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;PIC18F27J53-killifish_light06.c: 196: light_mode = TIME_SYNC_mode;
  3241  010116  0E00               	movlw	0
  3242  010118  0100               	movlb	0	; () banked
  3243  01011A  6FEE               	movwf	_light_mode& (0+255),b
  3244  01011C                     l10061:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;PIC18F27J53-killifish_light06.c: 197: }
  3248                           ;PIC18F27J53-killifish_light06.c: 198: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3249  01011C  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3250  010120  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3251  010124  0ECE               	movlw	low STR_48
  3252  010126  0100               	movlb	0	; () banked
  3253  010128  6F62               	movwf	strcmp@s2& (0+255),b
  3254  01012A  0EFF               	movlw	high STR_48
  3255  01012C  0100               	movlb	0	; () banked
  3256  01012E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3257  010130  EC4E  F0A0         	call	_strcmp	;wreg free
  3258  010134  0100               	movlb	0	; () banked
  3259  010136  5160               	movf	?_strcmp& (0+255),w,b
  3260  010138  0100               	movlb	0	; () banked
  3261  01013A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3262  01013C  B4D8               	btfsc	status,2,c
  3263  01013E  D012               	goto	l10065
  3264                           
  3265                           ; BSR set to: 0
  3266  010140  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3267  010144  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3268  010148  0EC6               	movlw	low STR_49
  3269  01014A  0100               	movlb	0	; () banked
  3270  01014C  6F62               	movwf	strcmp@s2& (0+255),b
  3271  01014E  0EFF               	movlw	high STR_49
  3272  010150  0100               	movlb	0	; () banked
  3273  010152  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3274  010154  EC4E  F0A0         	call	_strcmp	;wreg free
  3275  010158  0100               	movlb	0	; () banked
  3276  01015A  5160               	movf	?_strcmp& (0+255),w,b
  3277  01015C  0100               	movlb	0	; () banked
  3278  01015E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3279  010160  A4D8               	btfss	status,2,c
  3280  010162  D003               	goto	l10067
  3281  010164                     l10065:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;PIC18F27J53-killifish_light06.c: 199: light_mode = ADC_mode;
  3285  010164  0E01               	movlw	1
  3286  010166  0100               	movlb	0	; () banked
  3287  010168  6FEE               	movwf	_light_mode& (0+255),b
  3288  01016A                     l10067:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;PIC18F27J53-killifish_light06.c: 200: }
  3292                           ;PIC18F27J53-killifish_light06.c: 201: }
  3293                           ;PIC18F27J53-killifish_light06.c: 202: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3294  01016A  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3295  01016E  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3296  010172  0ED2               	movlw	low STR_50
  3297  010174  0100               	movlb	0	; () banked
  3298  010176  6F62               	movwf	strcmp@s2& (0+255),b
  3299  010178  0EFF               	movlw	high STR_50
  3300  01017A  0100               	movlb	0	; () banked
  3301  01017C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3302  01017E  EC4E  F0A0         	call	_strcmp	;wreg free
  3303  010182  0100               	movlb	0	; () banked
  3304  010184  5160               	movf	?_strcmp& (0+255),w,b
  3305  010186  0100               	movlb	0	; () banked
  3306  010188  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3307  01018A  B4D8               	btfsc	status,2,c
  3308  01018C  D012               	goto	l10071
  3309                           
  3310                           ; BSR set to: 0
  3311  01018E  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3312  010192  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3313  010196  0ECA               	movlw	low STR_51
  3314  010198  0100               	movlb	0	; () banked
  3315  01019A  6F62               	movwf	strcmp@s2& (0+255),b
  3316  01019C  0EFF               	movlw	high STR_51
  3317  01019E  0100               	movlb	0	; () banked
  3318  0101A0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3319  0101A2  EC4E  F0A0         	call	_strcmp	;wreg free
  3320  0101A6  0100               	movlb	0	; () banked
  3321  0101A8  5160               	movf	?_strcmp& (0+255),w,b
  3322  0101AA  0100               	movlb	0	; () banked
  3323  0101AC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3324  0101AE  A4D8               	btfss	status,2,c
  3325  0101B0  0012               	return	
  3326  0101B2                     l10071:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;PIC18F27J53-killifish_light06.c: 203: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3330  0101B2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3331  0101B6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3332  0101BA  0EA5               	movlw	low (STR_60+4)
  3333  0101BC  0100               	movlb	0	; () banked
  3334  0101BE  6F62               	movwf	strcmp@s2& (0+255),b
  3335  0101C0  0EFF               	movlw	high (STR_60+4)
  3336  0101C2  0100               	movlb	0	; () banked
  3337  0101C4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3338  0101C6  EC4E  F0A0         	call	_strcmp	;wreg free
  3339  0101CA  0100               	movlb	0	; () banked
  3340  0101CC  5160               	movf	?_strcmp& (0+255),w,b
  3341  0101CE  0100               	movlb	0	; () banked
  3342  0101D0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3343  0101D2  B4D8               	btfsc	status,2,c
  3344  0101D4  D012               	goto	l10075
  3345                           
  3346                           ; BSR set to: 0
  3347  0101D6  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3348  0101DA  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3349  0101DE  0EEB               	movlw	low STR_53
  3350  0101E0  0100               	movlb	0	; () banked
  3351  0101E2  6F62               	movwf	strcmp@s2& (0+255),b
  3352  0101E4  0EFF               	movlw	high STR_53
  3353  0101E6  0100               	movlb	0	; () banked
  3354  0101E8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3355  0101EA  EC4E  F0A0         	call	_strcmp	;wreg free
  3356  0101EE  0100               	movlb	0	; () banked
  3357  0101F0  5160               	movf	?_strcmp& (0+255),w,b
  3358  0101F2  0100               	movlb	0	; () banked
  3359  0101F4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3360  0101F6  A4D8               	btfss	status,2,c
  3361  0101F8  D02E               	goto	l10083
  3362  0101FA                     l10075:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;PIC18F27J53-killifish_light06.c: 204: light_mode = COMMAND_mode;
  3366  0101FA  0E02               	movlw	2
  3367  0101FC  0100               	movlb	0	; () banked
  3368  0101FE  6FEE               	movwf	_light_mode& (0+255),b
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3372  010200  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3373  010204  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3374  010208  ECF9  F092         	call	_atoi	;wreg free
  3375  01020C  C066  F0CF         	movff	?_atoi,_terminal_operation$6980
  3376  010210  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6980+1
  3377                           
  3378                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3379  010214  C0CF  F060         	movff	_terminal_operation$6980,___wmul@multiplier
  3380  010218  C0D0  F061         	movff	_terminal_operation$6980+1,___wmul@multiplier+1
  3381  01021C  0E00               	movlw	0
  3382  01021E  0100               	movlb	0	; () banked
  3383  010220  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3384  010222  0EFA               	movlw	250
  3385  010224  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3386  010226  EC2E  F0A2         	call	___wmul	;wreg free
  3387  01022A  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3388  01022E  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3389  010232  0E00               	movlw	0
  3390  010234  0100               	movlb	0	; () banked
  3391  010236  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3392  010238  0E64               	movlw	100
  3393  01023A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3394  01023C  EC62  F099         	call	___awdiv	;wreg free
  3395  010240  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6981
  3396  010244  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6981+1
  3397                           
  3398                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3399  010248  C0D1  F075         	movff	_terminal_operation$6981,PWM_set@value
  3400  01024C  C0D2  F076         	movff	_terminal_operation$6981+1,PWM_set@value+1
  3401  010250  0E00               	movlw	0
  3402  010252  ECE0  F08D         	call	_PWM_set
  3403  010256                     l10083:
  3404                           
  3405                           ;PIC18F27J53-killifish_light06.c: 206: }
  3406                           ;PIC18F27J53-killifish_light06.c: 207: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3407  010256  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3408  01025A  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3409  01025E  0EF1               	movlw	low STR_54
  3410  010260  0100               	movlb	0	; () banked
  3411  010262  6F62               	movwf	strcmp@s2& (0+255),b
  3412  010264  0EFF               	movlw	high STR_54
  3413  010266  0100               	movlb	0	; () banked
  3414  010268  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3415  01026A  EC4E  F0A0         	call	_strcmp	;wreg free
  3416  01026E  0100               	movlb	0	; () banked
  3417  010270  5160               	movf	?_strcmp& (0+255),w,b
  3418  010272  0100               	movlb	0	; () banked
  3419  010274  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3420  010276  B4D8               	btfsc	status,2,c
  3421  010278  D012               	goto	l10087
  3422                           
  3423                           ; BSR set to: 0
  3424  01027A  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3425  01027E  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3426  010282  0EE9               	movlw	low STR_55
  3427  010284  0100               	movlb	0	; () banked
  3428  010286  6F62               	movwf	strcmp@s2& (0+255),b
  3429  010288  0EFF               	movlw	high STR_55
  3430  01028A  0100               	movlb	0	; () banked
  3431  01028C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3432  01028E  EC4E  F0A0         	call	_strcmp	;wreg free
  3433  010292  0100               	movlb	0	; () banked
  3434  010294  5160               	movf	?_strcmp& (0+255),w,b
  3435  010296  0100               	movlb	0	; () banked
  3436  010298  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3437  01029A  A4D8               	btfss	status,2,c
  3438  01029C  D02E               	goto	l10095
  3439  01029E                     l10087:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;PIC18F27J53-killifish_light06.c: 208: light_mode = COMMAND_mode;
  3443  01029E  0E02               	movlw	2
  3444  0102A0  0100               	movlb	0	; () banked
  3445  0102A2  6FEE               	movwf	_light_mode& (0+255),b
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3449  0102A4  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3450  0102A8  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3451  0102AC  ECF9  F092         	call	_atoi	;wreg free
  3452  0102B0  C066  F0CF         	movff	?_atoi,_terminal_operation$6980
  3453  0102B4  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6980+1
  3454                           
  3455                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3456  0102B8  C0CF  F060         	movff	_terminal_operation$6980,___wmul@multiplier
  3457  0102BC  C0D0  F061         	movff	_terminal_operation$6980+1,___wmul@multiplier+1
  3458  0102C0  0E00               	movlw	0
  3459  0102C2  0100               	movlb	0	; () banked
  3460  0102C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3461  0102C6  0EFA               	movlw	250
  3462  0102C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3463  0102CA  EC2E  F0A2         	call	___wmul	;wreg free
  3464  0102CE  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3465  0102D2  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3466  0102D6  0E00               	movlw	0
  3467  0102D8  0100               	movlb	0	; () banked
  3468  0102DA  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3469  0102DC  0E64               	movlw	100
  3470  0102DE  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3471  0102E0  EC62  F099         	call	___awdiv	;wreg free
  3472  0102E4  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6981
  3473  0102E8  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6981+1
  3474                           
  3475                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3476  0102EC  C0D1  F075         	movff	_terminal_operation$6981,PWM_set@value
  3477  0102F0  C0D2  F076         	movff	_terminal_operation$6981+1,PWM_set@value+1
  3478  0102F4  0E01               	movlw	1
  3479  0102F6  ECE0  F08D         	call	_PWM_set
  3480  0102FA                     l10095:
  3481                           
  3482                           ;PIC18F27J53-killifish_light06.c: 210: }
  3483                           ;PIC18F27J53-killifish_light06.c: 211: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3484  0102FA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3485  0102FE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3486  010302  0EEF               	movlw	low STR_56
  3487  010304  0100               	movlb	0	; () banked
  3488  010306  6F62               	movwf	strcmp@s2& (0+255),b
  3489  010308  0EFF               	movlw	high STR_56
  3490  01030A  0100               	movlb	0	; () banked
  3491  01030C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3492  01030E  EC4E  F0A0         	call	_strcmp	;wreg free
  3493  010312  0100               	movlb	0	; () banked
  3494  010314  5160               	movf	?_strcmp& (0+255),w,b
  3495  010316  0100               	movlb	0	; () banked
  3496  010318  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3497  01031A  B4D8               	btfsc	status,2,c
  3498  01031C  D012               	goto	l10099
  3499                           
  3500                           ; BSR set to: 0
  3501  01031E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3502  010322  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3503  010326  0EE7               	movlw	low STR_57
  3504  010328  0100               	movlb	0	; () banked
  3505  01032A  6F62               	movwf	strcmp@s2& (0+255),b
  3506  01032C  0EFF               	movlw	high STR_57
  3507  01032E  0100               	movlb	0	; () banked
  3508  010330  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3509  010332  EC4E  F0A0         	call	_strcmp	;wreg free
  3510  010336  0100               	movlb	0	; () banked
  3511  010338  5160               	movf	?_strcmp& (0+255),w,b
  3512  01033A  0100               	movlb	0	; () banked
  3513  01033C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3514  01033E  A4D8               	btfss	status,2,c
  3515  010340  D02E               	goto	l10107
  3516  010342                     l10099:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;PIC18F27J53-killifish_light06.c: 212: light_mode = COMMAND_mode;
  3520  010342  0E02               	movlw	2
  3521  010344  0100               	movlb	0	; () banked
  3522  010346  6FEE               	movwf	_light_mode& (0+255),b
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3526  010348  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3527  01034C  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3528  010350  ECF9  F092         	call	_atoi	;wreg free
  3529  010354  C066  F0CF         	movff	?_atoi,_terminal_operation$6980
  3530  010358  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6980+1
  3531                           
  3532                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3533  01035C  C0CF  F060         	movff	_terminal_operation$6980,___wmul@multiplier
  3534  010360  C0D0  F061         	movff	_terminal_operation$6980+1,___wmul@multiplier+1
  3535  010364  0E00               	movlw	0
  3536  010366  0100               	movlb	0	; () banked
  3537  010368  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3538  01036A  0EFA               	movlw	250
  3539  01036C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3540  01036E  EC2E  F0A2         	call	___wmul	;wreg free
  3541  010372  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3542  010376  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3543  01037A  0E00               	movlw	0
  3544  01037C  0100               	movlb	0	; () banked
  3545  01037E  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3546  010380  0E64               	movlw	100
  3547  010382  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3548  010384  EC62  F099         	call	___awdiv	;wreg free
  3549  010388  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6981
  3550  01038C  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6981+1
  3551                           
  3552                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3553  010390  C0D1  F075         	movff	_terminal_operation$6981,PWM_set@value
  3554  010394  C0D2  F076         	movff	_terminal_operation$6981+1,PWM_set@value+1
  3555  010398  0E02               	movlw	2
  3556  01039A  ECE0  F08D         	call	_PWM_set
  3557  01039E                     l10107:
  3558                           
  3559                           ;PIC18F27J53-killifish_light06.c: 214: }
  3560                           ;PIC18F27J53-killifish_light06.c: 215: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3561  01039E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3562  0103A2  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3563  0103A6  0EF3               	movlw	low STR_58
  3564  0103A8  0100               	movlb	0	; () banked
  3565  0103AA  6F62               	movwf	strcmp@s2& (0+255),b
  3566  0103AC  0EFF               	movlw	high STR_58
  3567  0103AE  0100               	movlb	0	; () banked
  3568  0103B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3569  0103B2  EC4E  F0A0         	call	_strcmp	;wreg free
  3570  0103B6  0100               	movlb	0	; () banked
  3571  0103B8  5160               	movf	?_strcmp& (0+255),w,b
  3572  0103BA  0100               	movlb	0	; () banked
  3573  0103BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3574  0103BE  B4D8               	btfsc	status,2,c
  3575  0103C0  D012               	goto	l10111
  3576                           
  3577                           ; BSR set to: 0
  3578  0103C2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3579  0103C6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3580  0103CA  0EED               	movlw	low STR_59
  3581  0103CC  0100               	movlb	0	; () banked
  3582  0103CE  6F62               	movwf	strcmp@s2& (0+255),b
  3583  0103D0  0EFF               	movlw	high STR_59
  3584  0103D2  0100               	movlb	0	; () banked
  3585  0103D4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3586  0103D6  EC4E  F0A0         	call	_strcmp	;wreg free
  3587  0103DA  0100               	movlb	0	; () banked
  3588  0103DC  5160               	movf	?_strcmp& (0+255),w,b
  3589  0103DE  0100               	movlb	0	; () banked
  3590  0103E0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3591  0103E2  A4D8               	btfss	status,2,c
  3592  0103E4  D02E               	goto	l10119
  3593  0103E6                     l10111:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;PIC18F27J53-killifish_light06.c: 216: light_mode = COMMAND_mode;
  3597  0103E6  0E02               	movlw	2
  3598  0103E8  0100               	movlb	0	; () banked
  3599  0103EA  6FEE               	movwf	_light_mode& (0+255),b
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3603  0103EC  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3604  0103F0  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3605  0103F4  ECF9  F092         	call	_atoi	;wreg free
  3606  0103F8  C066  F0CF         	movff	?_atoi,_terminal_operation$6980
  3607  0103FC  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6980+1
  3608                           
  3609                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3610  010400  C0CF  F060         	movff	_terminal_operation$6980,___wmul@multiplier
  3611  010404  C0D0  F061         	movff	_terminal_operation$6980+1,___wmul@multiplier+1
  3612  010408  0E00               	movlw	0
  3613  01040A  0100               	movlb	0	; () banked
  3614  01040C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3615  01040E  0EFA               	movlw	250
  3616  010410  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3617  010412  EC2E  F0A2         	call	___wmul	;wreg free
  3618  010416  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3619  01041A  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3620  01041E  0E00               	movlw	0
  3621  010420  0100               	movlb	0	; () banked
  3622  010422  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3623  010424  0E64               	movlw	100
  3624  010426  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3625  010428  EC62  F099         	call	___awdiv	;wreg free
  3626  01042C  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6981
  3627  010430  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6981+1
  3628                           
  3629                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3630  010434  C0D1  F075         	movff	_terminal_operation$6981,PWM_set@value
  3631  010438  C0D2  F076         	movff	_terminal_operation$6981+1,PWM_set@value+1
  3632  01043C  0E03               	movlw	3
  3633  01043E  ECE0  F08D         	call	_PWM_set
  3634  010442                     l10119:
  3635                           
  3636                           ;PIC18F27J53-killifish_light06.c: 218: }
  3637                           ;PIC18F27J53-killifish_light06.c: 219: if (!strcmp(op1, "clear")) {
  3638  010442  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3639  010446  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3640  01044A  0EA1               	movlw	low STR_60
  3641  01044C  0100               	movlb	0	; () banked
  3642  01044E  6F62               	movwf	strcmp@s2& (0+255),b
  3643  010450  0EFF               	movlw	high STR_60
  3644  010452  0100               	movlb	0	; () banked
  3645  010454  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3646  010456  EC4E  F0A0         	call	_strcmp	;wreg free
  3647  01045A  0100               	movlb	0	; () banked
  3648  01045C  5160               	movf	?_strcmp& (0+255),w,b
  3649  01045E  0100               	movlb	0	; () banked
  3650  010460  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3651  010462  A4D8               	btfss	status,2,c
  3652  010464  0012               	return	
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;PIC18F27J53-killifish_light06.c: 220: light_mode = COMMAND_mode;
  3656  010466  0E02               	movlw	2
  3657  010468  0100               	movlb	0	; () banked
  3658  01046A  6FEE               	movwf	_light_mode& (0+255),b
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;PIC18F27J53-killifish_light06.c: 221: PWM_set(0, 0);
  3662  01046C  0E00               	movlw	0
  3663  01046E  0100               	movlb	0	; () banked
  3664  010470  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3665  010472  0E00               	movlw	0
  3666  010474  6F75               	movwf	PWM_set@value& (0+255),b
  3667  010476  0E00               	movlw	0
  3668  010478  ECE0  F08D         	call	_PWM_set
  3669                           
  3670                           ;PIC18F27J53-killifish_light06.c: 222: PWM_set(1, 0);
  3671  01047C  0E00               	movlw	0
  3672  01047E  0100               	movlb	0	; () banked
  3673  010480  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3674  010482  0E00               	movlw	0
  3675  010484  6F75               	movwf	PWM_set@value& (0+255),b
  3676  010486  0E01               	movlw	1
  3677  010488  ECE0  F08D         	call	_PWM_set
  3678                           
  3679                           ;PIC18F27J53-killifish_light06.c: 223: PWM_set(2, 0);
  3680  01048C  0E00               	movlw	0
  3681  01048E  0100               	movlb	0	; () banked
  3682  010490  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3683  010492  0E00               	movlw	0
  3684  010494  6F75               	movwf	PWM_set@value& (0+255),b
  3685  010496  0E02               	movlw	2
  3686  010498  ECE0  F08D         	call	_PWM_set
  3687                           
  3688                           ;PIC18F27J53-killifish_light06.c: 224: PWM_set(3, 0);
  3689  01049C  0E00               	movlw	0
  3690  01049E  0100               	movlb	0	; () banked
  3691  0104A0  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3692  0104A2  0E00               	movlw	0
  3693  0104A4  6F75               	movwf	PWM_set@value& (0+255),b
  3694  0104A6  0E03               	movlw	3
  3695  0104A8  ECE0  F08D         	call	_PWM_set
  3696  0104AC  0012               	return	
  3697  0104AE                     __end_of_terminal_operation:
  3698                           	opt stack 0
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           postdec1	equ	0xFE5
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           
  3716 ;; *************** function _terminal_time *****************
  3717 ;; Defined at:
  3718 ;;		line 93 in file "../My_library/My_terminal.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  tx              2   92[BANK0 ] PTR struct ringbuf
  3721 ;;		 -> usb_tx(8), 
  3722 ;;  op0             2   94[BANK0 ] PTR unsigned char 
  3723 ;;		 -> terminal_task@op0(25), 
  3724 ;;  op1             2   96[BANK0 ] PTR unsigned char 
  3725 ;;		 -> terminal_task@op1(25), 
  3726 ;;  op2             2   98[BANK0 ] PTR unsigned char 
  3727 ;;		 -> terminal_task@op2(25), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;		None               void
  3732 ;; Registers used:
  3733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3739 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3742 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3743 ;;Total ram usage:        9 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:   18
  3746 ;; This function calls:
  3747 ;;		_atoi
  3748 ;;		_month_length
  3749 ;;		_print_time
  3750 ;;		_strcmp
  3751 ;;		_terminal_at_hand
  3752 ;; This function is called by:
  3753 ;;		_terminal_operation
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text3
  3758  010908                     __ptext3:
  3759                           	opt stack 0
  3760  010908                     _terminal_time:
  3761                           	opt stack 10
  3762                           
  3763                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3764                           
  3765                           ;incstack = 0
  3766  010908  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3767  01090C  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3768  010910  0E5E               	movlw	low STR_25
  3769  010912  0100               	movlb	0	; () banked
  3770  010914  6F62               	movwf	strcmp@s2& (0+255),b
  3771  010916  0EFF               	movlw	high STR_25
  3772  010918  0100               	movlb	0	; () banked
  3773  01091A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3774  01091C  EC4E  F0A0         	call	_strcmp	;wreg free
  3775  010920  0100               	movlb	0	; () banked
  3776  010922  5160               	movf	?_strcmp& (0+255),w,b
  3777  010924  0100               	movlb	0	; () banked
  3778  010926  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3779  010928  B4D8               	btfsc	status,2,c
  3780  01092A  D012               	goto	l9811
  3781                           
  3782                           ; BSR set to: 0
  3783  01092C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3784  010930  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3785  010934  0EE3               	movlw	low (STR_27+1)
  3786  010936  0100               	movlb	0	; () banked
  3787  010938  6F62               	movwf	strcmp@s2& (0+255),b
  3788  01093A  0EFF               	movlw	high (STR_27+1)
  3789  01093C  0100               	movlb	0	; () banked
  3790  01093E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3791  010940  EC4E  F0A0         	call	_strcmp	;wreg free
  3792  010944  0100               	movlb	0	; () banked
  3793  010946  5160               	movf	?_strcmp& (0+255),w,b
  3794  010948  0100               	movlb	0	; () banked
  3795  01094A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3796  01094C  A4D8               	btfss	status,2,c
  3797  01094E  D006               	goto	l9813
  3798  010950                     l9811:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;My_terminal.c: 95: print_time(tx);
  3802  010950  C0BC  F095         	movff	terminal_time@tx,print_time@tx
  3803  010954  C0BD  F096         	movff	terminal_time@tx+1,print_time@tx+1
  3804  010958  EC0F  F09E         	call	_print_time	;wreg free
  3805  01095C                     l9813:
  3806                           
  3807                           ;My_terminal.c: 96: }
  3808                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3809  01095C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3810  010960  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3811  010964  0EE2               	movlw	low STR_27
  3812  010966  0100               	movlb	0	; () banked
  3813  010968  6F62               	movwf	strcmp@s2& (0+255),b
  3814  01096A  0EFF               	movlw	high STR_27
  3815  01096C  0100               	movlb	0	; () banked
  3816  01096E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3817  010970  EC4E  F0A0         	call	_strcmp	;wreg free
  3818  010974  0100               	movlb	0	; () banked
  3819  010976  5160               	movf	?_strcmp& (0+255),w,b
  3820  010978  0100               	movlb	0	; () banked
  3821  01097A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3822  01097C  B4D8               	btfsc	status,2,c
  3823  01097E  D012               	goto	l9817
  3824                           
  3825                           ; BSR set to: 0
  3826  010980  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3827  010984  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3828  010988  0E52               	movlw	low STR_28
  3829  01098A  0100               	movlb	0	; () banked
  3830  01098C  6F62               	movwf	strcmp@s2& (0+255),b
  3831  01098E  0EFF               	movlw	high STR_28
  3832  010990  0100               	movlb	0	; () banked
  3833  010992  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3834  010994  EC4E  F0A0         	call	_strcmp	;wreg free
  3835  010998  0100               	movlb	0	; () banked
  3836  01099A  5160               	movf	?_strcmp& (0+255),w,b
  3837  01099C  0100               	movlb	0	; () banked
  3838  01099E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3839  0109A0  A4D8               	btfss	status,2,c
  3840  0109A2  0012               	return	
  3841  0109A4                     l9817:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3845  0109A4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3846  0109A8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3847  0109AC  0EE0               	movlw	low (STR_34+2)
  3848  0109AE  0100               	movlb	0	; () banked
  3849  0109B0  6F62               	movwf	strcmp@s2& (0+255),b
  3850  0109B2  0EFF               	movlw	high (STR_34+2)
  3851  0109B4  0100               	movlb	0	; () banked
  3852  0109B6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3853  0109B8  EC4E  F0A0         	call	_strcmp	;wreg free
  3854  0109BC  0100               	movlb	0	; () banked
  3855  0109BE  5160               	movf	?_strcmp& (0+255),w,b
  3856  0109C0  0100               	movlb	0	; () banked
  3857  0109C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3858  0109C4  B4D8               	btfsc	status,2,c
  3859  0109C6  D012               	goto	l9821
  3860                           
  3861                           ; BSR set to: 0
  3862  0109C8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3863  0109CC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3864  0109D0  0EB7               	movlw	low STR_30
  3865  0109D2  0100               	movlb	0	; () banked
  3866  0109D4  6F62               	movwf	strcmp@s2& (0+255),b
  3867  0109D6  0EFF               	movlw	high STR_30
  3868  0109D8  0100               	movlb	0	; () banked
  3869  0109DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3870  0109DC  EC4E  F0A0         	call	_strcmp	;wreg free
  3871  0109E0  0100               	movlb	0	; () banked
  3872  0109E2  5160               	movf	?_strcmp& (0+255),w,b
  3873  0109E4  0100               	movlb	0	; () banked
  3874  0109E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3875  0109E8  A4D8               	btfss	status,2,c
  3876  0109EA  D01C               	goto	l9823
  3877  0109EC                     l9821:
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3881  0109EC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3882  0109F0  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3883  0109F4  0E40               	movlw	low (_now+10)
  3884  0109F6  0100               	movlb	0	; () banked
  3885  0109F8  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3886  0109FA  0E01               	movlw	high (_now+10)
  3887  0109FC  0100               	movlb	0	; () banked
  3888  0109FE  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3889  010A00  0E00               	movlw	0
  3890  010A02  0100               	movlb	0	; () banked
  3891  010A04  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3892  010A06  0E63               	movlw	99
  3893  010A08  0100               	movlb	0	; () banked
  3894  010A0A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3895  010A0C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3896  010A10  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3897  010A14  ECF9  F092         	call	_atoi	;wreg free
  3898  010A18  0100               	movlb	0	; () banked
  3899  010A1A  5166               	movf	?_atoi& (0+255),w,b
  3900  010A1C  0100               	movlb	0	; () banked
  3901  010A1E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3902  010A20  ECEC  F09F         	call	_terminal_at_hand	;wreg free
  3903  010A24                     l9823:
  3904                           
  3905                           ;My_terminal.c: 100: }
  3906                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3907  010A24  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3908  010A28  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3909  010A2C  0ECC               	movlw	low (STR_51+2)
  3910  010A2E  0100               	movlb	0	; () banked
  3911  010A30  6F62               	movwf	strcmp@s2& (0+255),b
  3912  010A32  0EFF               	movlw	high (STR_51+2)
  3913  010A34  0100               	movlb	0	; () banked
  3914  010A36  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3915  010A38  EC4E  F0A0         	call	_strcmp	;wreg free
  3916  010A3C  0100               	movlb	0	; () banked
  3917  010A3E  5160               	movf	?_strcmp& (0+255),w,b
  3918  010A40  0100               	movlb	0	; () banked
  3919  010A42  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3920  010A44  B4D8               	btfsc	status,2,c
  3921  010A46  D012               	goto	l9827
  3922                           
  3923                           ; BSR set to: 0
  3924  010A48  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3925  010A4C  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3926  010A50  0EA7               	movlw	low STR_32
  3927  010A52  0100               	movlb	0	; () banked
  3928  010A54  6F62               	movwf	strcmp@s2& (0+255),b
  3929  010A56  0EFF               	movlw	high STR_32
  3930  010A58  0100               	movlb	0	; () banked
  3931  010A5A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3932  010A5C  EC4E  F0A0         	call	_strcmp	;wreg free
  3933  010A60  0100               	movlb	0	; () banked
  3934  010A62  5160               	movf	?_strcmp& (0+255),w,b
  3935  010A64  0100               	movlb	0	; () banked
  3936  010A66  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3937  010A68  A4D8               	btfss	status,2,c
  3938  010A6A  D01C               	goto	l9829
  3939  010A6C                     l9827:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3943  010A6C  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3944  010A70  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3945  010A74  0E3F               	movlw	low (_now+9)
  3946  010A76  0100               	movlb	0	; () banked
  3947  010A78  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3948  010A7A  0E01               	movlw	high (_now+9)
  3949  010A7C  0100               	movlb	0	; () banked
  3950  010A7E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3951  010A80  0E01               	movlw	1
  3952  010A82  0100               	movlb	0	; () banked
  3953  010A84  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3954  010A86  0E0C               	movlw	12
  3955  010A88  0100               	movlb	0	; () banked
  3956  010A8A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3957  010A8C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3958  010A90  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3959  010A94  ECF9  F092         	call	_atoi	;wreg free
  3960  010A98  0100               	movlb	0	; () banked
  3961  010A9A  5166               	movf	?_atoi& (0+255),w,b
  3962  010A9C  0100               	movlb	0	; () banked
  3963  010A9E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3964  010AA0  ECEC  F09F         	call	_terminal_at_hand	;wreg free
  3965  010AA4                     l9829:
  3966                           
  3967                           ;My_terminal.c: 103: }
  3968                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3969  010AA4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3970  010AA8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3971  010AAC  0EC4               	movlw	low (STR_1+3)
  3972  010AAE  0100               	movlb	0	; () banked
  3973  010AB0  6F62               	movwf	strcmp@s2& (0+255),b
  3974  010AB2  0EFF               	movlw	high (STR_1+3)
  3975  010AB4  0100               	movlb	0	; () banked
  3976  010AB6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3977  010AB8  EC4E  F0A0         	call	_strcmp	;wreg free
  3978  010ABC  0100               	movlb	0	; () banked
  3979  010ABE  5160               	movf	?_strcmp& (0+255),w,b
  3980  010AC0  0100               	movlb	0	; () banked
  3981  010AC2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3982  010AC4  B4D8               	btfsc	status,2,c
  3983  010AC6  D012               	goto	l9833
  3984                           
  3985                           ; BSR set to: 0
  3986  010AC8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3987  010ACC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3988  010AD0  0EDE               	movlw	low STR_34
  3989  010AD2  0100               	movlb	0	; () banked
  3990  010AD4  6F62               	movwf	strcmp@s2& (0+255),b
  3991  010AD6  0EFF               	movlw	high STR_34
  3992  010AD8  0100               	movlb	0	; () banked
  3993  010ADA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3994  010ADC  EC4E  F0A0         	call	_strcmp	;wreg free
  3995  010AE0  0100               	movlb	0	; () banked
  3996  010AE2  5160               	movf	?_strcmp& (0+255),w,b
  3997  010AE4  0100               	movlb	0	; () banked
  3998  010AE6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3999  010AE8  A4D8               	btfss	status,2,c
  4000  010AEA  D023               	goto	l9837
  4001  010AEC                     l9833:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4005  010AEC  C13F  F066         	movff	_now+9,month_length@month
  4006  010AF0  0101               	movlb	1	; () banked
  4007  010AF2  5140               	movf	(_now+10)& (0+255),w,b
  4008  010AF4  ECD6  F094         	call	_month_length
  4009  010AF8  0100               	movlb	0	; () banked
  4010  010AFA  6FC4               	movwf	_terminal_time$6979& (0+255),b
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  4014  010AFC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4015  010B00  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4016  010B04  0E3E               	movlw	low (_now+8)
  4017  010B06  0100               	movlb	0	; () banked
  4018  010B08  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4019  010B0A  0E01               	movlw	high (_now+8)
  4020  010B0C  0100               	movlb	0	; () banked
  4021  010B0E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4022  010B10  0E01               	movlw	1
  4023  010B12  0100               	movlb	0	; () banked
  4024  010B14  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4025  010B16  C0C4  F0BA         	movff	_terminal_time$6979,terminal_at_hand@max
  4026  010B1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4027  010B1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4028  010B22  ECF9  F092         	call	_atoi	;wreg free
  4029  010B26  0100               	movlb	0	; () banked
  4030  010B28  5166               	movf	?_atoi& (0+255),w,b
  4031  010B2A  0100               	movlb	0	; () banked
  4032  010B2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4033  010B2E  ECEC  F09F         	call	_terminal_at_hand	;wreg free
  4034  010B32                     l9837:
  4035                           
  4036                           ;My_terminal.c: 106: }
  4037                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4038  010B32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4039  010B36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4040  010B3A  0EAB               	movlw	low (STR_32+4)
  4041  010B3C  0100               	movlb	0	; () banked
  4042  010B3E  6F62               	movwf	strcmp@s2& (0+255),b
  4043  010B40  0EFF               	movlw	high (STR_32+4)
  4044  010B42  0100               	movlb	0	; () banked
  4045  010B44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4046  010B46  EC4E  F0A0         	call	_strcmp	;wreg free
  4047  010B4A  0100               	movlb	0	; () banked
  4048  010B4C  5160               	movf	?_strcmp& (0+255),w,b
  4049  010B4E  0100               	movlb	0	; () banked
  4050  010B50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4051  010B52  B4D8               	btfsc	status,2,c
  4052  010B54  D012               	goto	l9841
  4053                           
  4054                           ; BSR set to: 0
  4055  010B56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4056  010B5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4057  010B5E  0EBC               	movlw	low STR_36
  4058  010B60  0100               	movlb	0	; () banked
  4059  010B62  6F62               	movwf	strcmp@s2& (0+255),b
  4060  010B64  0EFF               	movlw	high STR_36
  4061  010B66  0100               	movlb	0	; () banked
  4062  010B68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4063  010B6A  EC4E  F0A0         	call	_strcmp	;wreg free
  4064  010B6E  0100               	movlb	0	; () banked
  4065  010B70  5160               	movf	?_strcmp& (0+255),w,b
  4066  010B72  0100               	movlb	0	; () banked
  4067  010B74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4068  010B76  A4D8               	btfss	status,2,c
  4069  010B78  D01C               	goto	l9843
  4070  010B7A                     l9841:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4074  010B7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4075  010B7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4076  010B82  0E3C               	movlw	low (_now+6)
  4077  010B84  0100               	movlb	0	; () banked
  4078  010B86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4079  010B88  0E01               	movlw	high (_now+6)
  4080  010B8A  0100               	movlb	0	; () banked
  4081  010B8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4082  010B8E  0E00               	movlw	0
  4083  010B90  0100               	movlb	0	; () banked
  4084  010B92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4085  010B94  0E17               	movlw	23
  4086  010B96  0100               	movlb	0	; () banked
  4087  010B98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4088  010B9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4089  010B9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4090  010BA2  ECF9  F092         	call	_atoi	;wreg free
  4091  010BA6  0100               	movlb	0	; () banked
  4092  010BA8  5166               	movf	?_atoi& (0+255),w,b
  4093  010BAA  0100               	movlb	0	; () banked
  4094  010BAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4095  010BAE  ECEC  F09F         	call	_terminal_at_hand	;wreg free
  4096  010BB2                     l9843:
  4097                           
  4098                           ;My_terminal.c: 109: }
  4099                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4100  010BB2  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4101  010BB6  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4102  010BBA  0ED4               	movlw	low (STR_50+2)
  4103  010BBC  0100               	movlb	0	; () banked
  4104  010BBE  6F62               	movwf	strcmp@s2& (0+255),b
  4105  010BC0  0EFF               	movlw	high (STR_50+2)
  4106  010BC2  0100               	movlb	0	; () banked
  4107  010BC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4108  010BC6  EC4E  F0A0         	call	_strcmp	;wreg free
  4109  010BCA  0100               	movlb	0	; () banked
  4110  010BCC  5160               	movf	?_strcmp& (0+255),w,b
  4111  010BCE  0100               	movlb	0	; () banked
  4112  010BD0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4113  010BD2  B4D8               	btfsc	status,2,c
  4114  010BD4  D012               	goto	l9847
  4115                           
  4116                           ; BSR set to: 0
  4117  010BD6  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4118  010BDA  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4119  010BDE  0E9A               	movlw	low STR_38
  4120  010BE0  0100               	movlb	0	; () banked
  4121  010BE2  6F62               	movwf	strcmp@s2& (0+255),b
  4122  010BE4  0EFF               	movlw	high STR_38
  4123  010BE6  0100               	movlb	0	; () banked
  4124  010BE8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4125  010BEA  EC4E  F0A0         	call	_strcmp	;wreg free
  4126  010BEE  0100               	movlb	0	; () banked
  4127  010BF0  5160               	movf	?_strcmp& (0+255),w,b
  4128  010BF2  0100               	movlb	0	; () banked
  4129  010BF4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4130  010BF6  A4D8               	btfss	status,2,c
  4131  010BF8  D01C               	goto	l9849
  4132  010BFA                     l9847:
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4136  010BFA  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4137  010BFE  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4138  010C02  0E3B               	movlw	low (_now+5)
  4139  010C04  0100               	movlb	0	; () banked
  4140  010C06  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4141  010C08  0E01               	movlw	high (_now+5)
  4142  010C0A  0100               	movlb	0	; () banked
  4143  010C0C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4144  010C0E  0E00               	movlw	0
  4145  010C10  0100               	movlb	0	; () banked
  4146  010C12  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4147  010C14  0E3B               	movlw	59
  4148  010C16  0100               	movlb	0	; () banked
  4149  010C18  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4150  010C1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4151  010C1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4152  010C22  ECF9  F092         	call	_atoi	;wreg free
  4153  010C26  0100               	movlb	0	; () banked
  4154  010C28  5166               	movf	?_atoi& (0+255),w,b
  4155  010C2A  0100               	movlb	0	; () banked
  4156  010C2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4157  010C2E  ECEC  F09F         	call	_terminal_at_hand	;wreg free
  4158  010C32                     l9849:
  4159                           
  4160                           ;My_terminal.c: 112: }
  4161                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4162  010C32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4163  010C36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4164  010C3A  0EF5               	movlw	low STR_39
  4165  010C3C  0100               	movlb	0	; () banked
  4166  010C3E  6F62               	movwf	strcmp@s2& (0+255),b
  4167  010C40  0EFF               	movlw	high STR_39
  4168  010C42  0100               	movlb	0	; () banked
  4169  010C44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4170  010C46  EC4E  F0A0         	call	_strcmp	;wreg free
  4171  010C4A  0100               	movlb	0	; () banked
  4172  010C4C  5160               	movf	?_strcmp& (0+255),w,b
  4173  010C4E  0100               	movlb	0	; () banked
  4174  010C50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4175  010C52  B4D8               	btfsc	status,2,c
  4176  010C54  D012               	goto	l9853
  4177                           
  4178                           ; BSR set to: 0
  4179  010C56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4180  010C5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4181  010C5E  0E93               	movlw	low STR_40
  4182  010C60  0100               	movlb	0	; () banked
  4183  010C62  6F62               	movwf	strcmp@s2& (0+255),b
  4184  010C64  0EFF               	movlw	high STR_40
  4185  010C66  0100               	movlb	0	; () banked
  4186  010C68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4187  010C6A  EC4E  F0A0         	call	_strcmp	;wreg free
  4188  010C6E  0100               	movlb	0	; () banked
  4189  010C70  5160               	movf	?_strcmp& (0+255),w,b
  4190  010C72  0100               	movlb	0	; () banked
  4191  010C74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4192  010C76  A4D8               	btfss	status,2,c
  4193  010C78  0012               	return	
  4194  010C7A                     l9853:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4198  010C7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4199  010C7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4200  010C82  0E3A               	movlw	low (_now+4)
  4201  010C84  0100               	movlb	0	; () banked
  4202  010C86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4203  010C88  0E01               	movlw	high (_now+4)
  4204  010C8A  0100               	movlb	0	; () banked
  4205  010C8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4206  010C8E  0E00               	movlw	0
  4207  010C90  0100               	movlb	0	; () banked
  4208  010C92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4209  010C94  0E3B               	movlw	59
  4210  010C96  0100               	movlb	0	; () banked
  4211  010C98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4212  010C9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4213  010C9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4214  010CA2  ECF9  F092         	call	_atoi	;wreg free
  4215  010CA6  0100               	movlb	0	; () banked
  4216  010CA8  5166               	movf	?_atoi& (0+255),w,b
  4217  010CAA  0100               	movlb	0	; () banked
  4218  010CAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4219  010CAE  ECEC  F09F         	call	_terminal_at_hand	;wreg free
  4220  010CB2  0012               	return	
  4221  010CB4                     __end_of_terminal_time:
  4222                           	opt stack 0
  4223                           tblptru	equ	0xFF8
  4224                           tblptrh	equ	0xFF7
  4225                           tblptrl	equ	0xFF6
  4226                           tablat	equ	0xFF5
  4227                           prodh	equ	0xFF4
  4228                           prodl	equ	0xFF3
  4229                           intcon	equ	0xFF2
  4230                           postinc0	equ	0xFEE
  4231                           wreg	equ	0xFE8
  4232                           postdec1	equ	0xFE5
  4233                           fsr1h	equ	0xFE2
  4234                           fsr1l	equ	0xFE1
  4235                           indf2	equ	0xFDF
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8
  4239                           
  4240 ;; *************** function _terminal_at_hand *****************
  4241 ;; Defined at:
  4242 ;;		line 82 in file "../My_library/My_terminal.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4245 ;;		 -> usb_tx(8), 
  4246 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4247 ;;		 -> now(14), 
  4248 ;;  min             1   89[BANK0 ] unsigned char 
  4249 ;;  max             1   90[BANK0 ] unsigned char 
  4250 ;;  value           1   91[BANK0 ] unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4262 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;Total ram usage:        7 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:   17
  4269 ;; This function calls:
  4270 ;;		_RTCC_from_caltime
  4271 ;;		_print_time
  4272 ;;		_ringbuf_put_str
  4273 ;; This function is called by:
  4274 ;;		_terminal_time
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text4
  4279  013FD8                     __ptext4:
  4280                           	opt stack 0
  4281  013FD8                     _terminal_at_hand:
  4282                           	opt stack 10
  4283                           
  4284                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4285                           
  4286                           ;incstack = 0
  4287  013FD8  0100               	movlb	0	; () banked
  4288  013FDA  51B9               	movf	terminal_at_hand@min& (0+255),w,b
  4289  013FDC  0100               	movlb	0	; () banked
  4290  013FDE  5DBB               	subwf	terminal_at_hand@value& (0+255),w,b
  4291  013FE0  A0D8               	btfss	status,0,c
  4292  013FE2  D01E               	goto	l9567
  4293                           
  4294                           ; BSR set to: 0
  4295  013FE4  0100               	movlb	0	; () banked
  4296  013FE6  51BB               	movf	terminal_at_hand@value& (0+255),w,b
  4297  013FE8  0100               	movlb	0	; () banked
  4298  013FEA  5DBA               	subwf	terminal_at_hand@max& (0+255),w,b
  4299  013FEC  A0D8               	btfss	status,0,c
  4300  013FEE  D018               	goto	l9567
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;My_terminal.c: 84: *hand = value;
  4304  013FF0  C0B7  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4305  013FF4  C0B8  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4306  013FF8  C0BB  FFDF         	movff	terminal_at_hand@value,indf2
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4310  013FFC  0E36               	movlw	low _now
  4311  013FFE  0100               	movlb	0	; () banked
  4312  014000  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4313  014002  0E01               	movlw	high _now
  4314  014004  0100               	movlb	0	; () banked
  4315  014006  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4316  014008  EC11  F0A3         	call	_RTCC_from_caltime	;wreg free
  4317                           
  4318                           ;My_terminal.c: 86: time_change_flag = 1;
  4319  01400C  0E01               	movlw	1
  4320  01400E  0100               	movlb	0	; () banked
  4321  014010  6FF0               	movwf	_time_change_flag& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;My_terminal.c: 87: print_time(tx);
  4325  014012  C0B5  F095         	movff	terminal_at_hand@tx,print_time@tx
  4326  014016  C0B6  F096         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4327  01401A  EC0F  F09E         	call	_print_time	;wreg free
  4328                           
  4329                           ;My_terminal.c: 88: } else {
  4330  01401E  0012               	return	
  4331  014020                     l9567:
  4332                           
  4333                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4334  014020  C0B5  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4335  014024  C0B6  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4336  014028  0E84               	movlw	low STR_24
  4337  01402A  0100               	movlb	0	; () banked
  4338  01402C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4339  01402E  0EFF               	movlw	high STR_24
  4340  014030  0100               	movlb	0	; () banked
  4341  014032  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4342  014034  ECBA  F09F         	call	_ringbuf_put_str	;wreg free
  4343  014038  0012               	return	
  4344  01403A                     __end_of_terminal_at_hand:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           wreg	equ	0xFE8
  4355                           postdec1	equ	0xFE5
  4356                           fsr1h	equ	0xFE2
  4357                           fsr1l	equ	0xFE1
  4358                           indf2	equ	0xFDF
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8
  4362                           
  4363 ;; *************** function _print_time *****************
  4364 ;; Defined at:
  4365 ;;		line 68 in file "../My_library/My_terminal.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4368 ;;		 -> usb_tx(8), 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  str            30   55[BANK0 ] unsigned char [30]
  4371 ;; Return value:  Size  Location     Type
  4372 ;;		None               void
  4373 ;; Registers used:
  4374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4381 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4383 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;Total ram usage:       32 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:   16
  4387 ;; This function calls:
  4388 ;;		_RTCC_from_RTCC
  4389 ;;		_ringbuf_put_str
  4390 ;;		_sprintf
  4391 ;; This function is called by:
  4392 ;;		_terminal_at_hand
  4393 ;;		_terminal_time
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text5
  4398  013C1E                     __ptext5:
  4399                           	opt stack 0
  4400  013C1E                     _print_time:
  4401                           	opt stack 10
  4402                           
  4403                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4404                           
  4405                           ;incstack = 0
  4406  013C1E  0E36               	movlw	low _now
  4407  013C20  0100               	movlb	0	; () banked
  4408  013C22  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4409  013C24  0E01               	movlw	high _now
  4410  013C26  0100               	movlb	0	; () banked
  4411  013C28  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4412  013C2A  EC85  F0A3         	call	_RTCC_from_RTCC	;wreg free
  4413                           
  4414                           ;My_terminal.c: 70: char str[30];
  4415                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4416                           ;My_terminal.c: 72: now.YY,
  4417                           ;My_terminal.c: 73: now.MM,
  4418                           ;My_terminal.c: 74: now.DD,
  4419                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4420                           ;My_terminal.c: 76: now.hh,
  4421                           ;My_terminal.c: 77: now.mm,
  4422                           ;My_terminal.c: 78: now.ss);
  4423  013C2E  0E97               	movlw	low print_time@str
  4424  013C30  0100               	movlb	0	; () banked
  4425  013C32  6F72               	movwf	sprintf@sp& (0+255),b
  4426  013C34  0E00               	movlw	high print_time@str
  4427  013C36  0100               	movlb	0	; () banked
  4428  013C38  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4429  013C3A  0E2D               	movlw	low STR_23
  4430  013C3C  0100               	movlb	0	; () banked
  4431  013C3E  6F74               	movwf	sprintf@f& (0+255),b
  4432  013C40  0EFF               	movlw	high STR_23
  4433  013C42  0100               	movlb	0	; () banked
  4434  013C44  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4435  013C46  C140  F076         	movff	_now+10,?_sprintf+4
  4436  013C4A  0100               	movlb	0	; () banked
  4437  013C4C  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4438  013C4E  C13F  F078         	movff	_now+9,?_sprintf+6
  4439  013C52  0100               	movlb	0	; () banked
  4440  013C54  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4441  013C56  C13E  F07A         	movff	_now+8,?_sprintf+8
  4442  013C5A  0100               	movlb	0	; () banked
  4443  013C5C  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4444  013C5E  0101               	movlb	1	; () banked
  4445  013C60  513D               	movf	(_now+7)& (0+255),w,b
  4446  013C62  0D04               	mullw	4
  4447  013C64  0EC0               	movlw	low _weekday_3char
  4448  013C66  24F3               	addwf	prodl,w,c
  4449  013C68  0100               	movlb	0	; () banked
  4450  013C6A  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4451  013C6C  0EFD               	movlw	high _weekday_3char
  4452  013C6E  20F4               	addwfc	prodh,w,c
  4453  013C70  0100               	movlb	0	; () banked
  4454  013C72  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4455  013C74  C13C  F07E         	movff	_now+6,?_sprintf+12
  4456  013C78  0100               	movlb	0	; () banked
  4457  013C7A  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4458  013C7C  C13B  F080         	movff	_now+5,?_sprintf+14
  4459  013C80  0100               	movlb	0	; () banked
  4460  013C82  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4461  013C84  C13A  F082         	movff	_now+4,?_sprintf+16
  4462  013C88  0100               	movlb	0	; () banked
  4463  013C8A  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4464  013C8C  EC57  F082         	call	_sprintf	;wreg free
  4465                           
  4466                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4467  013C90  C095  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4468  013C94  C096  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4469  013C98  0E97               	movlw	low print_time@str
  4470  013C9A  0100               	movlb	0	; () banked
  4471  013C9C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4472  013C9E  0E00               	movlw	high print_time@str
  4473  013CA0  0100               	movlb	0	; () banked
  4474  013CA2  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4475  013CA4  ECBA  F09F         	call	_ringbuf_put_str	;wreg free
  4476  013CA8  0012               	return		;funcret
  4477  013CAA                     __end_of_print_time:
  4478                           	opt stack 0
  4479                           tblptru	equ	0xFF8
  4480                           tblptrh	equ	0xFF7
  4481                           tblptrl	equ	0xFF6
  4482                           tablat	equ	0xFF5
  4483                           prodh	equ	0xFF4
  4484                           prodl	equ	0xFF3
  4485                           intcon	equ	0xFF2
  4486                           postinc0	equ	0xFEE
  4487                           wreg	equ	0xFE8
  4488                           postdec1	equ	0xFE5
  4489                           fsr1h	equ	0xFE2
  4490                           fsr1l	equ	0xFE1
  4491                           indf2	equ	0xFDF
  4492                           fsr2h	equ	0xFDA
  4493                           fsr2l	equ	0xFD9
  4494                           status	equ	0xFD8
  4495                           
  4496 ;; *************** function _sprintf *****************
  4497 ;; Defined at:
  4498 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4501 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4502 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4503 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  tmpval          4    0        struct .
  4506 ;;  width           2   51[BANK0 ] int 
  4507 ;;  len             2   47[BANK0 ] unsigned int 
  4508 ;;  val             2   45[BANK0 ] unsigned int 
  4509 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4510 ;;		 -> STR_61(7), weekday_3char(28), 
  4511 ;;  ap              2   41[BANK0 ] PTR void [1]
  4512 ;;		 -> ?_sprintf(2), 
  4513 ;;  c               1   50[BANK0 ] char 
  4514 ;;  flag            1   49[BANK0 ] unsigned char 
  4515 ;;  prec            1   40[BANK0 ] char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  2   18[BANK0 ] int 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4525 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4526 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;Total ram usage:       35 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:   13
  4532 ;; This function calls:
  4533 ;;		___lwdiv
  4534 ;;		___lwmod
  4535 ;;		___wmul
  4536 ;;		_isdigit
  4537 ;; This function is called by:
  4538 ;;		_print_time
  4539 ;;		_display_dec
  4540 ;;		_print_time_dec
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text6
  4545  0104AE                     __ptext6:
  4546                           	opt stack 0
  4547  0104AE                     _sprintf:
  4548                           	opt stack 12
  4549                           
  4550                           ;doprnt.c: 494: va_list ap;
  4551                           ;doprnt.c: 499: signed char c;
  4552                           ;doprnt.c: 501: int width;
  4553                           ;doprnt.c: 506: signed char prec;
  4554                           ;doprnt.c: 508: unsigned char flag;
  4555                           ;doprnt.c: 523: union {
  4556                           ;doprnt.c: 524: unsigned long vd;
  4557                           ;doprnt.c: 525: double integ;
  4558                           ;doprnt.c: 526: } tmpval;
  4559                           ;doprnt.c: 528: unsigned int val;
  4560                           ;doprnt.c: 529: unsigned len;
  4561                           ;doprnt.c: 530: const char * cp;
  4562                           ;doprnt.c: 533: *ap = __va_start();
  4563                           
  4564                           ;incstack = 0
  4565  0104AE  0E76               	movlw	low (?_sprintf+4)
  4566  0104B0  0100               	movlb	0	; () banked
  4567  0104B2  6F89               	movwf	sprintf@ap& (0+255),b
  4568  0104B4  0E00               	movlw	high (?_sprintf+4)
  4569  0104B6  0100               	movlb	0	; () banked
  4570  0104B8  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4571                           
  4572                           ;doprnt.c: 536: while(c = *f++) {
  4573  0104BA  D20F               	goto	l9493
  4574  0104BC                     l9353:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;doprnt.c: 538: if(c != '%')
  4578  0104BC  0E25               	movlw	37
  4579  0104BE  0100               	movlb	0	; () banked
  4580  0104C0  1992               	xorwf	sprintf@c& (0+255),w,b
  4581  0104C2  B4D8               	btfsc	status,2,c
  4582  0104C4  D00A               	goto	l9359
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;doprnt.c: 540: {
  4586                           ;doprnt.c: 541: ((*sp++ = (c)));
  4587  0104C6  C072  FFD9         	movff	sprintf@sp,fsr2l
  4588  0104CA  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4589  0104CE  C092  FFDF         	movff	sprintf@c,indf2
  4590                           
  4591                           ; BSR set to: 0
  4592  0104D2  0100               	movlb	0	; () banked
  4593  0104D4  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4594  0104D6  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4595                           
  4596                           ;doprnt.c: 542: continue;
  4597  0104D8  D200               	goto	l9493
  4598  0104DA                     l9359:
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;doprnt.c: 543: }
  4602                           ;doprnt.c: 546: width = 0;
  4603  0104DA  0E00               	movlw	0
  4604  0104DC  0100               	movlb	0	; () banked
  4605  0104DE  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4606  0104E0  0E00               	movlw	0
  4607  0104E2  6F93               	movwf	sprintf@width& (0+255),b
  4608                           
  4609                           ;doprnt.c: 548: flag = 0;
  4610  0104E4  0E00               	movlw	0
  4611  0104E6  0100               	movlb	0	; () banked
  4612  0104E8  6F91               	movwf	sprintf@flag& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;doprnt.c: 551: switch(*f) {
  4616                           
  4617                           ;doprnt.c: 550: for(;;) {
  4618  0104EA  D005               	goto	l9365
  4619  0104EC                     l9361:
  4620                           
  4621                           ;doprnt.c: 580: flag |= 0x04;
  4622  0104EC  0100               	movlb	0	; () banked
  4623  0104EE  8591               	bsf	sprintf@flag& (0+255),2,b
  4624                           
  4625                           ;doprnt.c: 581: f++;
  4626  0104F0  0100               	movlb	0	; () banked
  4627  0104F2  4B74               	infsnz	sprintf@f& (0+255),f,b
  4628  0104F4  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4629  0104F6                     l9365:
  4630  0104F6  C074  FFF6         	movff	sprintf@f,tblptrl
  4631  0104FA  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4632  0104FE                     	if	0	;tblptru may be non-zero
  4633  0104FE                     	endif
  4634  0104FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4635  0104FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4636  010500  6EF8               	movwf	tblptru,c
  4637  010502                     	endif
  4638  010502  0008               	tblrd		*
  4639  010504  50F5               	movf	tablat,w,c
  4640                           
  4641                           ; Switch size 1, requested type "space"
  4642                           ; Number of cases is 1, Range of values is 48 to 48
  4643                           ; switch strategies available:
  4644                           ; Name         Instructions Cycles
  4645                           ; simple_byte            4     3 (average)
  4646                           ;	Chosen strategy is simple_byte
  4647  010506  0A30               	xorlw	48	; case 48
  4648  010508  B4D8               	btfsc	status,2,c
  4649  01050A  D7F0               	goto	l9361
  4650                           
  4651                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4652                           
  4653                           ;doprnt.c: 586: }
  4654                           
  4655                           ;doprnt.c: 585: break;
  4656  01050C  C074  FFF6         	movff	sprintf@f,tblptrl
  4657  010510  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4658  010514                     	if	0	;tblptru may be non-zero
  4659  010514                     	endif
  4660  010514                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4661  010514  0E00               	movlw	low (__mediumconst shr (0+16))
  4662  010516  6EF8               	movwf	tblptru,c
  4663  010518                     	endif
  4664  010518  0008               	tblrd		*
  4665  01051A  50F5               	movf	tablat,w,c
  4666  01051C  ECBE  F0A2         	call	_isdigit
  4667  010520  A0D8               	btfss	status,0,c
  4668  010522  D0CB               	goto	l9415
  4669                           
  4670                           ;doprnt.c: 598: width = 0;
  4671  010524  0E00               	movlw	0
  4672  010526  0100               	movlb	0	; () banked
  4673  010528  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4674  01052A  0E00               	movlw	0
  4675  01052C  6F93               	movwf	sprintf@width& (0+255),b
  4676  01052E                     l9371:
  4677                           
  4678                           ;doprnt.c: 600: width *= 10;
  4679  01052E  C093  F060         	movff	sprintf@width,___wmul@multiplier
  4680  010532  C094  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4681  010536  0E00               	movlw	0
  4682  010538  0100               	movlb	0	; () banked
  4683  01053A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4684  01053C  0E0A               	movlw	10
  4685  01053E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4686  010540  EC2E  F0A2         	call	___wmul	;wreg free
  4687  010544  C060  F093         	movff	?___wmul,sprintf@width
  4688  010548  C061  F094         	movff	?___wmul+1,sprintf@width+1
  4689                           
  4690                           ;doprnt.c: 601: width += *f++ - '0';
  4691  01054C  0ED0               	movlw	208
  4692  01054E  0100               	movlb	0	; () banked
  4693  010550  6F84               	movwf	??_sprintf& (0+255),b
  4694  010552  0EFF               	movlw	255
  4695  010554  0100               	movlb	0	; () banked
  4696  010556  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4697  010558  C074  FFF6         	movff	sprintf@f,tblptrl
  4698  01055C  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4699  010560                     	if	0	;tblptru may be non-zero
  4700  010560                     	endif
  4701  010560                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4702  010560  0E00               	movlw	low (__mediumconst shr (0+16))
  4703  010562  6EF8               	movwf	tblptru,c
  4704  010564                     	endif
  4705  010564  0008               	tblrd		*
  4706  010566  50F5               	movf	tablat,w,c
  4707  010568  0100               	movlb	0	; () banked
  4708  01056A  6F86               	movwf	(??_sprintf+2)& (0+255),b
  4709  01056C  6B87               	clrf	(??_sprintf+3)& (0+255),b
  4710  01056E  0100               	movlb	0	; () banked
  4711  010570  5184               	movf	??_sprintf& (0+255),w,b
  4712  010572  0100               	movlb	0	; () banked
  4713  010574  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  4714  010576  0100               	movlb	0	; () banked
  4715  010578  5185               	movf	(??_sprintf+1)& (0+255),w,b
  4716  01057A  0100               	movlb	0	; () banked
  4717  01057C  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  4718  01057E  0100               	movlb	0	; () banked
  4719  010580  5186               	movf	(??_sprintf+2)& (0+255),w,b
  4720  010582  0100               	movlb	0	; () banked
  4721  010584  2793               	addwf	sprintf@width& (0+255),f,b
  4722  010586  0100               	movlb	0	; () banked
  4723  010588  5187               	movf	(??_sprintf+3)& (0+255),w,b
  4724  01058A  0100               	movlb	0	; () banked
  4725  01058C  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  4726                           
  4727                           ; BSR set to: 0
  4728  01058E  0100               	movlb	0	; () banked
  4729  010590  4B74               	infsnz	sprintf@f& (0+255),f,b
  4730  010592  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4734  010594  C074  FFF6         	movff	sprintf@f,tblptrl
  4735  010598  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4736  01059C                     	if	0	;tblptru may be non-zero
  4737  01059C                     	endif
  4738  01059C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4739  01059C  0E00               	movlw	low (__mediumconst shr (0+16))
  4740  01059E  6EF8               	movwf	tblptru,c
  4741  0105A0                     	endif
  4742  0105A0  0008               	tblrd		*
  4743  0105A2  50F5               	movf	tablat,w,c
  4744  0105A4  ECBE  F0A2         	call	_isdigit
  4745  0105A8  A0D8               	btfss	status,0,c
  4746  0105AA  D087               	goto	l9415
  4747  0105AC  D7C0               	goto	l9371
  4748  0105AE                     l9379:
  4749                           
  4750                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4751  0105AE  C089  FFD9         	movff	sprintf@ap,fsr2l
  4752  0105B2  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4753  0105B6  CFDE F08B          	movff	postinc2,sprintf@cp
  4754  0105BA  CFDD F08C          	movff	postdec2,sprintf@cp+1
  4755  0105BE  0E02               	movlw	2
  4756  0105C0  0100               	movlb	0	; () banked
  4757  0105C2  2789               	addwf	sprintf@ap& (0+255),f,b
  4758  0105C4  0E00               	movlw	0
  4759  0105C6  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;doprnt.c: 740: if(!cp)
  4763  0105C8  0100               	movlb	0	; () banked
  4764  0105CA  518B               	movf	sprintf@cp& (0+255),w,b
  4765  0105CC  0100               	movlb	0	; () banked
  4766  0105CE  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4767  0105D0  A4D8               	btfss	status,2,c
  4768  0105D2  D006               	goto	l9387
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;doprnt.c: 741: cp = "(null)";
  4772  0105D4  0E8C               	movlw	low STR_61
  4773  0105D6  0100               	movlb	0	; () banked
  4774  0105D8  6F8B               	movwf	sprintf@cp& (0+255),b
  4775  0105DA  0EFF               	movlw	high STR_61
  4776  0105DC  0100               	movlb	0	; () banked
  4777  0105DE  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  4778  0105E0                     l9387:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;doprnt.c: 745: len = 0;
  4782  0105E0  0E00               	movlw	0
  4783  0105E2  0100               	movlb	0	; () banked
  4784  0105E4  6F90               	movwf	(sprintf@len+1)& (0+255),b
  4785  0105E6  0E00               	movlw	0
  4786  0105E8  6F8F               	movwf	sprintf@len& (0+255),b
  4787                           
  4788                           ;doprnt.c: 746: while(cp[len])
  4789  0105EA  D003               	goto	l9391
  4790  0105EC                     l9389:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;doprnt.c: 747: len++;
  4794  0105EC  0100               	movlb	0	; () banked
  4795  0105EE  4B8F               	infsnz	sprintf@len& (0+255),f,b
  4796  0105F0  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  4797  0105F2                     l9391:
  4798                           
  4799                           ; BSR set to: 0
  4800  0105F2  0100               	movlb	0	; () banked
  4801  0105F4  518F               	movf	sprintf@len& (0+255),w,b
  4802  0105F6  0100               	movlb	0	; () banked
  4803  0105F8  258B               	addwf	sprintf@cp& (0+255),w,b
  4804  0105FA  0100               	movlb	0	; () banked
  4805  0105FC  6F84               	movwf	??_sprintf& (0+255),b
  4806  0105FE  0100               	movlb	0	; () banked
  4807  010600  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4808  010602  0100               	movlb	0	; () banked
  4809  010604  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4810  010606  0100               	movlb	0	; () banked
  4811  010608  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4812  01060A  C084  FFF6         	movff	??_sprintf,tblptrl
  4813  01060E  C085  FFF7         	movff	??_sprintf+1,tblptrh
  4814  010612                     	if	0	;tblptru may be non-zero
  4815  010612                     	endif
  4816  010612                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4817  010612  0E00               	movlw	low (__mediumconst shr (0+16))
  4818  010614  6EF8               	movwf	tblptru,c
  4819  010616                     	endif
  4820  010616  0008               	tblrd		*
  4821  010618  50F5               	movf	tablat,w,c
  4822  01061A  0900               	iorlw	0
  4823  01061C  A4D8               	btfss	status,2,c
  4824  01061E  D7E6               	goto	l9389
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;doprnt.c: 757: if(width > len)
  4828                           
  4829                           ; BSR set to: 0
  4830  010620  0100               	movlb	0	; () banked
  4831  010622  5193               	movf	sprintf@width& (0+255),w,b
  4832  010624  0100               	movlb	0	; () banked
  4833  010626  5D8F               	subwf	sprintf@len& (0+255),w,b
  4834  010628  0100               	movlb	0	; () banked
  4835  01062A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  4836  01062C  0100               	movlb	0	; () banked
  4837  01062E  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  4838  010630  B0D8               	btfsc	status,0,c
  4839  010632  D009               	goto	l9397
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;doprnt.c: 758: width -= len;
  4843  010634  0100               	movlb	0	; () banked
  4844  010636  518F               	movf	sprintf@len& (0+255),w,b
  4845  010638  0100               	movlb	0	; () banked
  4846  01063A  5F93               	subwf	sprintf@width& (0+255),f,b
  4847  01063C  0100               	movlb	0	; () banked
  4848  01063E  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4849  010640  0100               	movlb	0	; () banked
  4850  010642  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  4851  010644  D00F               	goto	l9403
  4852  010646                     l9397:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;doprnt.c: 759: else
  4856                           ;doprnt.c: 760: width = 0;
  4857  010646  0E00               	movlw	0
  4858  010648  0100               	movlb	0	; () banked
  4859  01064A  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4860  01064C  0E00               	movlw	0
  4861  01064E  6F93               	movwf	sprintf@width& (0+255),b
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;doprnt.c: 764: while(width--)
  4865  010650  D009               	goto	l9403
  4866  010652                     l9399:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4870  010652  C072  FFD9         	movff	sprintf@sp,fsr2l
  4871  010656  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4872  01065A  0E20               	movlw	32
  4873  01065C  6EDF               	movwf	indf2,c
  4874                           
  4875                           ; BSR set to: 0
  4876  01065E  0100               	movlb	0	; () banked
  4877  010660  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4878  010662  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4879  010664                     l9403:
  4880                           
  4881                           ; BSR set to: 0
  4882  010664  0100               	movlb	0	; () banked
  4883  010666  0793               	decf	sprintf@width& (0+255),f,b
  4884  010668  A0D8               	btfss	status,0,c
  4885  01066A  0794               	decf	(sprintf@width+1)& (0+255),f,b
  4886  01066C  0100               	movlb	0	; () banked
  4887  01066E  2993               	incf	sprintf@width& (0+255),w,b
  4888  010670  E1F0               	bnz	l9399
  4889  010672  0100               	movlb	0	; () banked
  4890  010674  2994               	incf	(sprintf@width+1)& (0+255),w,b
  4891  010676  B4D8               	btfsc	status,2,c
  4892  010678  D014               	goto	l9411
  4893  01067A  D7EB               	goto	l9399
  4894  01067C                     l9405:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4898  01067C  C08B  FFF6         	movff	sprintf@cp,tblptrl
  4899  010680  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  4900  010684                     	if	0	;tblptru may be non-zero
  4901  010684                     	endif
  4902  010684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4903  010684  0E00               	movlw	low (__mediumconst shr (0+16))
  4904  010686  6EF8               	movwf	tblptru,c
  4905  010688                     	endif
  4906  010688  C072  FFD9         	movff	sprintf@sp,fsr2l
  4907  01068C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4908  010690  0008               	tblrd		*
  4909  010692  CFF5 FFDF          	movff	tablat,indf2
  4910                           
  4911                           ; BSR set to: 0
  4912  010696  0100               	movlb	0	; () banked
  4913  010698  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  4914  01069A  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  4915                           
  4916                           ; BSR set to: 0
  4917  01069C  0100               	movlb	0	; () banked
  4918  01069E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4919  0106A0  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4920  0106A2                     l9411:
  4921                           
  4922                           ; BSR set to: 0
  4923  0106A2  0100               	movlb	0	; () banked
  4924  0106A4  078F               	decf	sprintf@len& (0+255),f,b
  4925  0106A6  A0D8               	btfss	status,0,c
  4926  0106A8  0790               	decf	(sprintf@len+1)& (0+255),f,b
  4927  0106AA  0100               	movlb	0	; () banked
  4928  0106AC  298F               	incf	sprintf@len& (0+255),w,b
  4929  0106AE  E1E6               	bnz	l9405
  4930  0106B0  0100               	movlb	0	; () banked
  4931  0106B2  2990               	incf	(sprintf@len+1)& (0+255),w,b
  4932  0106B4  B4D8               	btfsc	status,2,c
  4933  0106B6  D111               	goto	l9493
  4934  0106B8  D7E1               	goto	l9405
  4935  0106BA                     l9415:
  4936  0106BA  C074  FFF6         	movff	sprintf@f,tblptrl
  4937  0106BE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4938  0106C2  0100               	movlb	0	; () banked
  4939  0106C4  4B74               	infsnz	sprintf@f& (0+255),f,b
  4940  0106C6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4941  0106C8                     	if	0	;tblptru may be non-zero
  4942  0106C8                     	endif
  4943  0106C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4944  0106C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4945  0106CA  6EF8               	movwf	tblptru,c
  4946  0106CC                     	endif
  4947  0106CC  0008               	tblrd		*
  4948  0106CE  CFF5 F092          	movff	tablat,sprintf@c
  4949  0106D2  0100               	movlb	0	; () banked
  4950  0106D4  5192               	movf	sprintf@c& (0+255),w,b
  4951                           
  4952                           ; Switch size 1, requested type "space"
  4953                           ; Number of cases is 4, Range of values is 0 to 115
  4954                           ; switch strategies available:
  4955                           ; Name         Instructions Cycles
  4956                           ; simple_byte           13     7 (average)
  4957                           ;	Chosen strategy is simple_byte
  4958  0106D6  0A00               	xorlw	0	; case 0
  4959  0106D8  B4D8               	btfsc	status,2,c
  4960  0106DA  D10F               	goto	l9495
  4961  0106DC  0A64               	xorlw	100	; case 100
  4962  0106DE  B4D8               	btfsc	status,2,c
  4963  0106E0  D007               	goto	l9417
  4964  0106E2  0A0D               	xorlw	13	; case 105
  4965  0106E4  B4D8               	btfsc	status,2,c
  4966  0106E6  D004               	goto	l9417
  4967  0106E8  0A1A               	xorlw	26	; case 115
  4968  0106EA  B4D8               	btfsc	status,2,c
  4969  0106EC  D760               	goto	l9379
  4970  0106EE  D0F5               	goto	l9493
  4971  0106F0                     l9417:
  4972                           
  4973                           ;doprnt.c: 1253: {
  4974                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4975  0106F0  C089  FFD9         	movff	sprintf@ap,fsr2l
  4976  0106F4  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4977  0106F8  CFDE F08D          	movff	postinc2,sprintf@val
  4978  0106FC  CFDD F08E          	movff	postdec2,sprintf@val+1
  4979  010700  0E02               	movlw	2
  4980  010702  0100               	movlb	0	; () banked
  4981  010704  2789               	addwf	sprintf@ap& (0+255),f,b
  4982  010706  0E00               	movlw	0
  4983  010708  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;doprnt.c: 1261: if((int)val < 0) {
  4987  01070A  0100               	movlb	0	; () banked
  4988  01070C  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  4989  01070E  D008               	goto	l9427
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;doprnt.c: 1262: flag |= 0x03;
  4993  010710  0E03               	movlw	3
  4994  010712  0100               	movlb	0	; () banked
  4995  010714  1391               	iorwf	sprintf@flag& (0+255),f,b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;doprnt.c: 1263: val = -val;
  4999  010716  0100               	movlb	0	; () banked
  5000  010718  6D8D               	negf	sprintf@val& (0+255),b
  5001  01071A  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  5002  01071C  B0D8               	btfsc	status,0,c
  5003  01071E  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  5004  010720                     l9427:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;doprnt.c: 1264: }
  5008                           ;doprnt.c: 1266: }
  5009                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5010  010720  0E01               	movlw	1
  5011  010722  0100               	movlb	0	; () banked
  5012  010724  6F92               	movwf	sprintf@c& (0+255),b
  5013  010726                     l9429:
  5014                           
  5015                           ; BSR set to: 0
  5016  010726  0E05               	movlw	5
  5017  010728  0100               	movlb	0	; () banked
  5018  01072A  1992               	xorwf	sprintf@c& (0+255),w,b
  5019  01072C  B4D8               	btfsc	status,2,c
  5020  01072E  D019               	goto	l9441
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;doprnt.c: 1306: if(val < dpowers[c])
  5024                           
  5025                           ; BSR set to: 0
  5026                           
  5027                           ; BSR set to: 0
  5028  010730  0100               	movlb	0	; () banked
  5029  010732  5192               	movf	sprintf@c& (0+255),w,b
  5030  010734  0D02               	mullw	2
  5031  010736  0E03               	movlw	low _dpowers
  5032  010738  24F3               	addwf	prodl,w,c
  5033  01073A  6EF6               	movwf	tblptrl,c
  5034  01073C  0EFD               	movlw	high _dpowers
  5035  01073E  20F4               	addwfc	prodh,w,c
  5036  010740  6EF7               	movwf	tblptrh,c
  5037  010742                     	if	1	;There are 3 active tblptr bytes
  5038  010742  6AF8               	clrf	tblptru,c
  5039  010744  0E00               	movlw	low (__mediumconst shr (0+16))
  5040  010746  22F8               	addwfc	tblptru,f,c
  5041  010748                     	endif
  5042  010748  0009               	tblrd		*+
  5043  01074A  50F5               	movf	tablat,w,c
  5044  01074C  0100               	movlb	0	; () banked
  5045  01074E  5D8D               	subwf	sprintf@val& (0+255),w,b
  5046  010750  0009               	tblrd		*+
  5047  010752  50F5               	movf	tablat,w,c
  5048  010754  0100               	movlb	0	; () banked
  5049  010756  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5050  010758  A0D8               	btfss	status,0,c
  5051  01075A  D003               	goto	l9441
  5052                           
  5053                           ; BSR set to: 0
  5054                           
  5055                           ; BSR set to: 0
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;doprnt.c: 1307: break;
  5059  01075C  0100               	movlb	0	; () banked
  5060  01075E  2B92               	incf	sprintf@c& (0+255),f,b
  5061  010760  D7E2               	goto	l9429
  5062  010762                     l9441:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5066  010762  0100               	movlb	0	; () banked
  5067  010764  5193               	movf	sprintf@width& (0+255),w,b
  5068  010766  0100               	movlb	0	; () banked
  5069  010768  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5070  01076A  B4D8               	btfsc	status,2,c
  5071  01076C  D00B               	goto	l9447
  5072                           
  5073                           ; BSR set to: 0
  5074  01076E  C091  F084         	movff	sprintf@flag,??_sprintf
  5075  010772  0E03               	movlw	3
  5076  010774  0100               	movlb	0	; () banked
  5077  010776  1784               	andwf	??_sprintf& (0+255),f,b
  5078  010778  B4D8               	btfsc	status,2,c
  5079  01077A  D004               	goto	l9447
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;doprnt.c: 1346: width--;
  5083  01077C  0100               	movlb	0	; () banked
  5084  01077E  0793               	decf	sprintf@width& (0+255),f,b
  5085  010780  A0D8               	btfss	status,0,c
  5086  010782  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5087  010784                     l9447:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;doprnt.c: 1381: if(width > c)
  5091  010784  0E80               	movlw	128
  5092  010786  0100               	movlb	0	; () banked
  5093  010788  BF92               	btfsc	sprintf@c& (0+255),7,b
  5094  01078A  0E7F               	movlw	127
  5095  01078C  0100               	movlb	0	; () banked
  5096  01078E  6F84               	movwf	??_sprintf& (0+255),b
  5097  010790  0100               	movlb	0	; () banked
  5098  010792  5193               	movf	sprintf@width& (0+255),w,b
  5099  010794  0100               	movlb	0	; () banked
  5100  010796  5D92               	subwf	sprintf@c& (0+255),w,b
  5101  010798  0100               	movlb	0	; () banked
  5102  01079A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5103  01079C  0A80               	xorlw	128
  5104  01079E  0100               	movlb	0	; () banked
  5105  0107A0  5984               	subwfb	??_sprintf& (0+255),w,b
  5106  0107A2  B0D8               	btfsc	status,0,c
  5107  0107A4  D00B               	goto	l9451
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;doprnt.c: 1382: width -= c;
  5111  0107A6  0100               	movlb	0	; () banked
  5112  0107A8  5192               	movf	sprintf@c& (0+255),w,b
  5113  0107AA  0100               	movlb	0	; () banked
  5114  0107AC  5F93               	subwf	sprintf@width& (0+255),f,b
  5115  0107AE  0E00               	movlw	0
  5116  0107B0  0100               	movlb	0	; () banked
  5117  0107B2  BF92               	btfsc	sprintf@c& (0+255),7,b
  5118  0107B4  0EFF               	movlw	255
  5119  0107B6  0100               	movlb	0	; () banked
  5120  0107B8  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5121  0107BA  D005               	goto	l9453
  5122  0107BC                     l9451:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;doprnt.c: 1383: else
  5126                           ;doprnt.c: 1384: width = 0;
  5127  0107BC  0E00               	movlw	0
  5128  0107BE  0100               	movlb	0	; () banked
  5129  0107C0  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5130  0107C2  0E00               	movlw	0
  5131  0107C4  6F93               	movwf	sprintf@width& (0+255),b
  5132  0107C6                     l9453:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;doprnt.c: 1387: if(flag & 0x04) {
  5136  0107C6  0100               	movlb	0	; () banked
  5137  0107C8  A591               	btfss	sprintf@flag& (0+255),2,b
  5138  0107CA  D024               	goto	l9469
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;doprnt.c: 1392: if(flag & 0x03)
  5142  0107CC  C091  F084         	movff	sprintf@flag,??_sprintf
  5143  0107D0  0E03               	movlw	3
  5144  0107D2  0100               	movlb	0	; () banked
  5145  0107D4  1784               	andwf	??_sprintf& (0+255),f,b
  5146  0107D6  B4D8               	btfsc	status,2,c
  5147  0107D8  D009               	goto	l9461
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5151  0107DA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5152  0107DE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5153  0107E2  0E2D               	movlw	45
  5154  0107E4  6EDF               	movwf	indf2,c
  5155                           
  5156                           ; BSR set to: 0
  5157  0107E6  0100               	movlb	0	; () banked
  5158  0107E8  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5159  0107EA  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5160  0107EC                     l9461:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;doprnt.c: 1415: if(width)
  5164  0107EC  0100               	movlb	0	; () banked
  5165  0107EE  5193               	movf	sprintf@width& (0+255),w,b
  5166  0107F0  0100               	movlb	0	; () banked
  5167  0107F2  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5168  0107F4  B4D8               	btfsc	status,2,c
  5169  0107F6  D037               	goto	l9483
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5173                           
  5174                           ; BSR set to: 0
  5175                           
  5176                           ;doprnt.c: 1416: do
  5177  0107F8  C072  FFD9         	movff	sprintf@sp,fsr2l
  5178  0107FC  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5179  010800  0E30               	movlw	48
  5180  010802  6EDF               	movwf	indf2,c
  5181                           
  5182                           ; BSR set to: 0
  5183  010804  0100               	movlb	0	; () banked
  5184  010806  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5185  010808  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;doprnt.c: 1418: while(--width);
  5189  01080A  0100               	movlb	0	; () banked
  5190  01080C  0793               	decf	sprintf@width& (0+255),f,b
  5191  01080E  A0D8               	btfss	status,0,c
  5192  010810  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5193  010812  D7EC               	goto	l9461
  5194  010814                     l9469:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;doprnt.c: 1422: {
  5198                           ;doprnt.c: 1424: if(width
  5199                           ;doprnt.c: 1428: )
  5200  010814  0100               	movlb	0	; () banked
  5201  010816  5193               	movf	sprintf@width& (0+255),w,b
  5202  010818  0100               	movlb	0	; () banked
  5203  01081A  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5204  01081C  B4D8               	btfsc	status,2,c
  5205  01081E  D013               	goto	l9477
  5206  010820                     l9471:
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5210  010820  C072  FFD9         	movff	sprintf@sp,fsr2l
  5211  010824  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5212  010828  0E20               	movlw	32
  5213  01082A  6EDF               	movwf	indf2,c
  5214                           
  5215                           ; BSR set to: 0
  5216  01082C  0100               	movlb	0	; () banked
  5217  01082E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5218  010830  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;doprnt.c: 1431: while(--width);
  5222  010832  0100               	movlb	0	; () banked
  5223  010834  0793               	decf	sprintf@width& (0+255),f,b
  5224  010836  A0D8               	btfss	status,0,c
  5225  010838  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5226  01083A  0100               	movlb	0	; () banked
  5227  01083C  5193               	movf	sprintf@width& (0+255),w,b
  5228  01083E  0100               	movlb	0	; () banked
  5229  010840  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5230  010842  A4D8               	btfss	status,2,c
  5231  010844  D7ED               	goto	l9471
  5232  010846                     l9477:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;doprnt.c: 1438: if(flag & 0x03)
  5236  010846  C091  F084         	movff	sprintf@flag,??_sprintf
  5237  01084A  0E03               	movlw	3
  5238  01084C  0100               	movlb	0	; () banked
  5239  01084E  1784               	andwf	??_sprintf& (0+255),f,b
  5240  010850  B4D8               	btfsc	status,2,c
  5241  010852  D009               	goto	l9483
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5245  010854  C072  FFD9         	movff	sprintf@sp,fsr2l
  5246  010858  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5247  01085C  0E2D               	movlw	45
  5248  01085E  6EDF               	movwf	indf2,c
  5249                           
  5250                           ; BSR set to: 0
  5251  010860  0100               	movlb	0	; () banked
  5252  010862  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5253  010864  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5254  010866                     l9483:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;doprnt.c: 1469: }
  5258                           ;doprnt.c: 1472: prec = c;
  5259  010866  C092  F088         	movff	sprintf@c,sprintf@prec
  5260                           
  5261                           ;doprnt.c: 1474: while(prec--) {
  5262  01086A  D031               	goto	l9491
  5263  01086C                     l9485:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;doprnt.c: 1478: {
  5267                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5268  01086C  0100               	movlb	0	; () banked
  5269  01086E  5188               	movf	sprintf@prec& (0+255),w,b
  5270  010870  0D02               	mullw	2
  5271  010872  0E03               	movlw	low _dpowers
  5272  010874  24F3               	addwf	prodl,w,c
  5273  010876  6EF6               	movwf	tblptrl,c
  5274  010878  0EFD               	movlw	high _dpowers
  5275  01087A  20F4               	addwfc	prodh,w,c
  5276  01087C  6EF7               	movwf	tblptrh,c
  5277  01087E                     	if	1	;There are 3 active tblptr bytes
  5278  01087E  6AF8               	clrf	tblptru,c
  5279  010880  0E00               	movlw	low (__mediumconst shr (0+16))
  5280  010882  22F8               	addwfc	tblptru,f,c
  5281  010884                     	endif
  5282  010884  0009               	tblrd		*+
  5283  010886  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5284  01088A  000A               	tblrd		*-
  5285  01088C  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5286  010890  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5287  010894  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5288  010898  ECD7  F09E         	call	___lwdiv	;wreg free
  5289  01089C  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5290  0108A0  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5291  0108A4  0E00               	movlw	0
  5292  0108A6  0100               	movlb	0	; () banked
  5293  0108A8  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5294  0108AA  0E0A               	movlw	10
  5295  0108AC  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5296  0108AE  EC1D  F0A0         	call	___lwmod	;wreg free
  5297  0108B2  0100               	movlb	0	; () banked
  5298  0108B4  516D               	movf	?___lwmod& (0+255),w,b
  5299  0108B6  0F30               	addlw	48
  5300  0108B8  0100               	movlb	0	; () banked
  5301  0108BA  6F92               	movwf	sprintf@c& (0+255),b
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;doprnt.c: 1523: }
  5305                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5306  0108BC  C072  FFD9         	movff	sprintf@sp,fsr2l
  5307  0108C0  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5308  0108C4  C092  FFDF         	movff	sprintf@c,indf2
  5309                           
  5310                           ; BSR set to: 0
  5311  0108C8  0100               	movlb	0	; () banked
  5312  0108CA  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5313  0108CC  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5314  0108CE                     l9491:
  5315                           
  5316                           ; BSR set to: 0
  5317  0108CE  0100               	movlb	0	; () banked
  5318  0108D0  0788               	decf	sprintf@prec& (0+255),f,b
  5319  0108D2  0100               	movlb	0	; () banked
  5320  0108D4  2988               	incf	sprintf@prec& (0+255),w,b
  5321  0108D6  A4D8               	btfss	status,2,c
  5322  0108D8  D7C9               	goto	l9485
  5323  0108DA                     l9493:
  5324                           
  5325                           ; BSR set to: 0
  5326  0108DA  C074  FFF6         	movff	sprintf@f,tblptrl
  5327  0108DE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5328  0108E2  0100               	movlb	0	; () banked
  5329  0108E4  4B74               	infsnz	sprintf@f& (0+255),f,b
  5330  0108E6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5331  0108E8                     	if	0	;tblptru may be non-zero
  5332  0108E8                     	endif
  5333  0108E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5334  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5335  0108EA  6EF8               	movwf	tblptru,c
  5336  0108EC                     	endif
  5337  0108EC  0008               	tblrd		*
  5338  0108EE  CFF5 F092          	movff	tablat,sprintf@c
  5339  0108F2  0100               	movlb	0	; () banked
  5340  0108F4  5192               	movf	sprintf@c& (0+255),w,b
  5341  0108F6  A4D8               	btfss	status,2,c
  5342  0108F8  D5E1               	goto	l9353
  5343  0108FA                     l9495:
  5344                           
  5345                           ;doprnt.c: 1538: *sp = 0;
  5346  0108FA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5347  0108FE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5348  010902  0E00               	movlw	0
  5349  010904  6EDF               	movwf	indf2,c
  5350  010906  0012               	return	
  5351  010908                     __end_of_sprintf:
  5352                           	opt stack 0
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           prodh	equ	0xFF4
  5358                           prodl	equ	0xFF3
  5359                           intcon	equ	0xFF2
  5360                           postinc0	equ	0xFEE
  5361                           wreg	equ	0xFE8
  5362                           postdec1	equ	0xFE5
  5363                           fsr1h	equ	0xFE2
  5364                           fsr1l	equ	0xFE1
  5365                           indf2	equ	0xFDF
  5366                           postinc2	equ	0xFDE
  5367                           postdec2	equ	0xFDD
  5368                           fsr2h	equ	0xFDA
  5369                           fsr2l	equ	0xFD9
  5370                           status	equ	0xFD8
  5371                           
  5372 ;; *************** function _ringbuf_put_str *****************
  5373 ;; Defined at:
  5374 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5377 ;;		 -> usb_tx(8), 
  5378 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5379 ;;		 -> STR_43(315), STR_24(8), print_time@str(30), STR_22(3), 
  5380 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;		None               void
  5385 ;; Registers used:
  5386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5392 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5396 ;;Total ram usage:        4 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:   14
  5399 ;; This function calls:
  5400 ;;		_ringbuf_put
  5401 ;; This function is called by:
  5402 ;;		_terminal_task
  5403 ;;		_print_time
  5404 ;;		_terminal_at_hand
  5405 ;;		_terminal_operation
  5406 ;;		_print_time_dec
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text7
  5411  013F74                     __ptext7:
  5412                           	opt stack 0
  5413  013F74                     _ringbuf_put_str:
  5414                           	opt stack 12
  5415                           
  5416                           ;My_ringbuf.c: 40: while (*str) {
  5417                           
  5418                           ;incstack = 0
  5419  013F74  D01C               	goto	l9265
  5420  013F76                     l9261:
  5421                           
  5422                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5423  013F76  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5424  013F7A  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5425  013F7E  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5426  013F82  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5427  013F86  0E00               	movlw	low (__mediumconst shr (0+16))
  5428  013F88  6EF8               	movwf	tblptru,c
  5429  013F8A  0E0E               	movlw	(high __ramtop+-1)
  5430  013F8C  64F7               	cpfsgt	tblptrh,c
  5431  013F8E  D003               	bra	u9087
  5432  013F90  0008               	tblrd		*
  5433  013F92  50F5               	movf	tablat,w,c
  5434  013F94  D005               	bra	u9080
  5435  013F96                     u9087:
  5436  013F96  CFF6 FFE9          	movff	tblptrl,fsr0l
  5437  013F9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5438  013F9E  50EF               	movf	indf0,w,c
  5439  013FA0                     u9080:
  5440  013FA0  0100               	movlb	0	; () banked
  5441  013FA2  6F6A               	movwf	ringbuf_put@data& (0+255),b
  5442  013FA4  EC61  F097         	call	_ringbuf_put	;wreg free
  5443  013FA8  0100               	movlb	0	; () banked
  5444  013FAA  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5445  013FAC  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5446  013FAE                     l9265:
  5447  013FAE  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5448  013FB2  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5449  013FB6  0E00               	movlw	low (__mediumconst shr (0+16))
  5450  013FB8  6EF8               	movwf	tblptru,c
  5451  013FBA  0E0E               	movlw	(high __ramtop+-1)
  5452  013FBC  64F7               	cpfsgt	tblptrh,c
  5453  013FBE  D003               	bra	u9097
  5454  013FC0  0008               	tblrd		*
  5455  013FC2  50F5               	movf	tablat,w,c
  5456  013FC4  D005               	bra	u9090
  5457  013FC6                     u9097:
  5458  013FC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5459  013FCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5460  013FCE  50EF               	movf	indf0,w,c
  5461  013FD0                     u9090:
  5462  013FD0  0900               	iorlw	0
  5463  013FD2  B4D8               	btfsc	status,2,c
  5464  013FD4  0012               	return	
  5465  013FD6  D7CF               	goto	l9261
  5466  013FD8                     __end_of_ringbuf_put_str:
  5467                           	opt stack 0
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           indf0	equ	0xFEF
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           postdec1	equ	0xFE5
  5481                           fsr1h	equ	0xFE2
  5482                           fsr1l	equ	0xFE1
  5483                           indf2	equ	0xFDF
  5484                           postinc2	equ	0xFDE
  5485                           postdec2	equ	0xFDD
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _RTCC_from_caltime *****************
  5491 ;; Defined at:
  5492 ;;		line 204 in file "../My_library/My_RTCC.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  tm              2   47[BANK0 ] PTR struct .
  5495 ;;		 -> now(14), 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;		None               void
  5500 ;; Registers used:
  5501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5511 ;;Total ram usage:        2 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:   15
  5514 ;; This function calls:
  5515 ;;		_caltime_to_RTCC
  5516 ;;		_caltime_to_epoch
  5517 ;;		_epoch_to_caltime
  5518 ;; This function is called by:
  5519 ;;		_terminal_at_hand
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text8
  5524  014622                     __ptext8:
  5525                           	opt stack 0
  5526  014622                     _RTCC_from_caltime:
  5527                           	opt stack 11
  5528                           
  5529                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5530                           
  5531                           ;incstack = 0
  5532  014622  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5533  014626  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5534  01462A  EC0F  F088         	call	_caltime_to_epoch	;wreg free
  5535                           
  5536                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5537  01462E  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5538  014632  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5539  014636  ECE7  F08C         	call	_epoch_to_caltime	;wreg free
  5540                           
  5541                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5542  01463A  C08F  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5543  01463E  C090  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5544  014642  EC8C  F096         	call	_caltime_to_RTCC	;wreg free
  5545  014646  0012               	return		;funcret
  5546  014648                     __end_of_RTCC_from_caltime:
  5547                           	opt stack 0
  5548                           tblptru	equ	0xFF8
  5549                           tblptrh	equ	0xFF7
  5550                           tblptrl	equ	0xFF6
  5551                           tablat	equ	0xFF5
  5552                           prodh	equ	0xFF4
  5553                           prodl	equ	0xFF3
  5554                           intcon	equ	0xFF2
  5555                           indf0	equ	0xFEF
  5556                           postinc0	equ	0xFEE
  5557                           fsr0h	equ	0xFEA
  5558                           fsr0l	equ	0xFE9
  5559                           wreg	equ	0xFE8
  5560                           postdec1	equ	0xFE5
  5561                           fsr1h	equ	0xFE2
  5562                           fsr1l	equ	0xFE1
  5563                           indf2	equ	0xFDF
  5564                           postinc2	equ	0xFDE
  5565                           postdec2	equ	0xFDD
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _strcmp *****************
  5571 ;; Defined at:
  5572 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5575 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5576 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5577 ;;		 -> STR_60(6), STR_59(2), STR_58(2), STR_57(2), 
  5578 ;;		 -> STR_56(2), STR_55(2), STR_54(2), STR_53(2), 
  5579 ;;		 -> STR_52(2), STR_51(4), STR_50(4), STR_49(4), 
  5580 ;;		 -> STR_48(4), STR_47(5), STR_46(4), STR_45(9), 
  5581 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5582 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5583 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5584 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5585 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  r               1    5[BANK0 ] char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    0[BANK0 ] int 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5597 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;Total ram usage:        6 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:   12
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_terminal_time
  5608 ;;		_terminal_operation
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text9
  5613  01409C                     __ptext9:
  5614                           	opt stack 0
  5615  01409C                     _strcmp:
  5616                           	opt stack 15
  5617                           
  5618                           ;incstack = 0
  5619  01409C  D006               	goto	l9573
  5620  01409E                     l9571:
  5621  01409E  0100               	movlb	0	; () banked
  5622  0140A0  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5623  0140A2  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5624  0140A4  0100               	movlb	0	; () banked
  5625  0140A6  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5626  0140A8  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5627  0140AA                     l9573:
  5628  0140AA  C060  FFD9         	movff	strcmp@s1,fsr2l
  5629  0140AE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5630  0140B2  50DF               	movf	indf2,w,c
  5631  0140B4  0100               	movlb	0	; () banked
  5632  0140B6  6F64               	movwf	??_strcmp& (0+255),b
  5633  0140B8  C062  FFF6         	movff	strcmp@s2,tblptrl
  5634  0140BC  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5635  0140C0                     	if	0	;tblptru may be non-zero
  5636  0140C0                     	endif
  5637  0140C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5638  0140C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5639  0140C2  6EF8               	movwf	tblptru,c
  5640  0140C4                     	endif
  5641  0140C4  0008               	tblrd		*
  5642  0140C6  50F5               	movf	tablat,w,c
  5643  0140C8  0800               	sublw	0
  5644  0140CA  0100               	movlb	0	; () banked
  5645  0140CC  2564               	addwf	??_strcmp& (0+255),w,b
  5646  0140CE  0100               	movlb	0	; () banked
  5647  0140D0  6F65               	movwf	strcmp@r& (0+255),b
  5648  0140D2  0100               	movlb	0	; () banked
  5649  0140D4  5165               	movf	strcmp@r& (0+255),w,b
  5650  0140D6  A4D8               	btfss	status,2,c
  5651  0140D8  D007               	goto	l9577
  5652                           
  5653                           ; BSR set to: 0
  5654  0140DA  C060  FFD9         	movff	strcmp@s1,fsr2l
  5655  0140DE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5656  0140E2  50DF               	movf	indf2,w,c
  5657  0140E4  A4D8               	btfss	status,2,c
  5658  0140E6  D7DB               	goto	l9571
  5659  0140E8                     l9577:
  5660                           
  5661                           ; BSR set to: 0
  5662  0140E8  0100               	movlb	0	; () banked
  5663  0140EA  5165               	movf	strcmp@r& (0+255),w,b
  5664  0140EC  0100               	movlb	0	; () banked
  5665  0140EE  6F60               	movwf	?_strcmp& (0+255),b
  5666  0140F0  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5667  0140F2  BF60               	btfsc	?_strcmp& (0+255),7,b
  5668  0140F4  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5669  0140F6  0012               	return	
  5670  0140F8                     __end_of_strcmp:
  5671                           	opt stack 0
  5672                           tblptru	equ	0xFF8
  5673                           tblptrh	equ	0xFF7
  5674                           tblptrl	equ	0xFF6
  5675                           tablat	equ	0xFF5
  5676                           prodh	equ	0xFF4
  5677                           prodl	equ	0xFF3
  5678                           intcon	equ	0xFF2
  5679                           indf0	equ	0xFEF
  5680                           postinc0	equ	0xFEE
  5681                           fsr0h	equ	0xFEA
  5682                           fsr0l	equ	0xFE9
  5683                           wreg	equ	0xFE8
  5684                           postdec1	equ	0xFE5
  5685                           fsr1h	equ	0xFE2
  5686                           fsr1l	equ	0xFE1
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function _atoi *****************
  5695 ;; Defined at:
  5696 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5699 ;;		 -> terminal_task@op2(25), 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  a               2   11[BANK0 ] int 
  5702 ;;  sign            1   10[BANK0 ] unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  2    6[BANK0 ] int 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5715 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;Total ram usage:        7 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:   13
  5719 ;; This function calls:
  5720 ;;		___wmul
  5721 ;;		_isdigit
  5722 ;; This function is called by:
  5723 ;;		_terminal_time
  5724 ;;		_terminal_operation
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text10
  5729  0125F2                     __ptext10:
  5730                           	opt stack 0
  5731  0125F2                     _atoi:
  5732                           	opt stack 14
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;incstack = 0
  5736  0125F2  D003               	goto	l9585
  5737  0125F4                     l9583:
  5738  0125F4  0100               	movlb	0	; () banked
  5739  0125F6  4B66               	infsnz	atoi@s& (0+255),f,b
  5740  0125F8  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5741  0125FA                     l9585:
  5742  0125FA  C066  FFD9         	movff	atoi@s,fsr2l
  5743  0125FE  C067  FFDA         	movff	atoi@s+1,fsr2h
  5744  012602  0E20               	movlw	32
  5745  012604  18DE               	xorwf	postinc2,w,c
  5746  012606  B4D8               	btfsc	status,2,c
  5747  012608  D7F5               	goto	l9583
  5748  01260A  C066  FFD9         	movff	atoi@s,fsr2l
  5749  01260E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5750  012612  0E09               	movlw	9
  5751  012614  18DE               	xorwf	postinc2,w,c
  5752  012616  B4D8               	btfsc	status,2,c
  5753  012618  D7ED               	goto	l9583
  5754  01261A  0E00               	movlw	0
  5755  01261C  0100               	movlb	0	; () banked
  5756  01261E  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5757  012620  0E00               	movlw	0
  5758  012622  6F6B               	movwf	atoi@a& (0+255),b
  5759  012624  0E00               	movlw	0
  5760  012626  0100               	movlb	0	; () banked
  5761  012628  6F6A               	movwf	atoi@sign& (0+255),b
  5762                           
  5763                           ; BSR set to: 0
  5764  01262A  C066  FFD9         	movff	atoi@s,fsr2l
  5765  01262E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5766  012632  0E2D               	movlw	45
  5767  012634  18DE               	xorwf	postinc2,w,c
  5768  012636  A4D8               	btfss	status,2,c
  5769  012638  D003               	goto	l9595
  5770                           
  5771                           ; BSR set to: 0
  5772  01263A  0100               	movlb	0	; () banked
  5773  01263C  2B6A               	incf	atoi@sign& (0+255),f,b
  5774  01263E  D02E               	goto	l9601
  5775  012640                     l9595:
  5776                           
  5777                           ; BSR set to: 0
  5778  012640  C066  FFD9         	movff	atoi@s,fsr2l
  5779  012644  C067  FFDA         	movff	atoi@s+1,fsr2h
  5780  012648  0E2B               	movlw	43
  5781  01264A  18DE               	xorwf	postinc2,w,c
  5782  01264C  A4D8               	btfss	status,2,c
  5783  01264E  D029               	goto	l9603
  5784  012650  D025               	goto	l9601
  5785  012652                     l9599:
  5786  012652  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5787  012656  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5788  01265A  0E00               	movlw	0
  5789  01265C  0100               	movlb	0	; () banked
  5790  01265E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5791  012660  0E0A               	movlw	10
  5792  012662  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5793  012664  EC2E  F0A2         	call	___wmul	;wreg free
  5794  012668  C066  FFD9         	movff	atoi@s,fsr2l
  5795  01266C  C067  FFDA         	movff	atoi@s+1,fsr2h
  5796  012670  50DF               	movf	indf2,w,c
  5797  012672  0100               	movlb	0	; () banked
  5798  012674  6F68               	movwf	??_atoi& (0+255),b
  5799  012676  6B69               	clrf	(??_atoi+1)& (0+255),b
  5800  012678  0100               	movlb	0	; () banked
  5801  01267A  5160               	movf	?___wmul& (0+255),w,b
  5802  01267C  0100               	movlb	0	; () banked
  5803  01267E  2768               	addwf	??_atoi& (0+255),f,b
  5804  012680  0100               	movlb	0	; () banked
  5805  012682  5161               	movf	(?___wmul+1)& (0+255),w,b
  5806  012684  0100               	movlb	0	; () banked
  5807  012686  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5808  012688  0ED0               	movlw	208
  5809  01268A  0100               	movlb	0	; () banked
  5810  01268C  2568               	addwf	??_atoi& (0+255),w,b
  5811  01268E  0100               	movlb	0	; () banked
  5812  012690  6F6B               	movwf	atoi@a& (0+255),b
  5813  012692  0EFF               	movlw	255
  5814  012694  0100               	movlb	0	; () banked
  5815  012696  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5816  012698  0100               	movlb	0	; () banked
  5817  01269A  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5818  01269C                     l9601:
  5819                           
  5820                           ; BSR set to: 0
  5821  01269C  0100               	movlb	0	; () banked
  5822  01269E  4B66               	infsnz	atoi@s& (0+255),f,b
  5823  0126A0  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5824  0126A2                     l9603:
  5825                           
  5826                           ; BSR set to: 0
  5827  0126A2  C066  FFD9         	movff	atoi@s,fsr2l
  5828  0126A6  C067  FFDA         	movff	atoi@s+1,fsr2h
  5829  0126AA  50DF               	movf	indf2,w,c
  5830  0126AC  ECBE  F0A2         	call	_isdigit
  5831  0126B0  B0D8               	btfsc	status,0,c
  5832  0126B2  D7CF               	goto	l9599
  5833  0126B4  0100               	movlb	0	; () banked
  5834  0126B6  516A               	movf	atoi@sign& (0+255),w,b
  5835  0126B8  0100               	movlb	0	; () banked
  5836  0126BA  B4D8               	btfsc	status,2,c
  5837  0126BC  D00E               	goto	l1915
  5838                           
  5839                           ; BSR set to: 0
  5840  0126BE  C06B  F068         	movff	atoi@a,??_atoi
  5841  0126C2  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5842  0126C6  0100               	movlb	0	; () banked
  5843  0126C8  1F68               	comf	??_atoi& (0+255),f,b
  5844  0126CA  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5845  0126CC  4B68               	infsnz	??_atoi& (0+255),f,b
  5846  0126CE  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5847  0126D0  C068  F066         	movff	??_atoi,?_atoi
  5848  0126D4  C069  F067         	movff	??_atoi+1,?_atoi+1
  5849  0126D8  0012               	return	
  5850  0126DA                     l1915:
  5851                           
  5852                           ; BSR set to: 0
  5853  0126DA  C06B  F066         	movff	atoi@a,?_atoi
  5854  0126DE  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5855                           
  5856                           ; BSR set to: 0
  5857  0126E2  0012               	return		;funcret
  5858  0126E4                     __end_of_atoi:
  5859                           	opt stack 0
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           prodh	equ	0xFF4
  5865                           prodl	equ	0xFF3
  5866                           intcon	equ	0xFF2
  5867                           indf0	equ	0xFEF
  5868                           postinc0	equ	0xFEE
  5869                           fsr0h	equ	0xFEA
  5870                           fsr0l	equ	0xFE9
  5871                           wreg	equ	0xFE8
  5872                           postdec1	equ	0xFE5
  5873                           fsr1h	equ	0xFE2
  5874                           fsr1l	equ	0xFE1
  5875                           indf2	equ	0xFDF
  5876                           postinc2	equ	0xFDE
  5877                           postdec2	equ	0xFDD
  5878                           fsr2h	equ	0xFDA
  5879                           fsr2l	equ	0xFD9
  5880                           status	equ	0xFD8
  5881                           
  5882 ;; *************** function _isdigit *****************
  5883 ;; Defined at:
  5884 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  c               1    wreg     unsigned char 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  c               1    2[BANK0 ] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;		None               void
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5901 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;Total ram usage:        3 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:   12
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_sprintf
  5909 ;;		_atoi
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text11
  5914  01457C                     __ptext11:
  5915                           	opt stack 0
  5916  01457C                     _isdigit:
  5917                           	opt stack 12
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;incstack = 0
  5921                           ;isdigit@c stored from wreg
  5922  01457C  0100               	movlb	0	; () banked
  5923  01457E  6F62               	movwf	isdigit@c& (0+255),b
  5924  014580  0E00               	movlw	0
  5925  014582  0100               	movlb	0	; () banked
  5926  014584  6F61               	movwf	_isdigit$6372& (0+255),b
  5927                           
  5928                           ; BSR set to: 0
  5929  014586  0E3A               	movlw	58
  5930  014588  0100               	movlb	0	; () banked
  5931  01458A  6162               	cpfslt	isdigit@c& (0+255),b
  5932  01458C  D007               	goto	l9211
  5933                           
  5934                           ; BSR set to: 0
  5935  01458E  0E2F               	movlw	47
  5936  014590  0100               	movlb	0	; () banked
  5937  014592  6562               	cpfsgt	isdigit@c& (0+255),b
  5938  014594  D003               	goto	l9211
  5939                           
  5940                           ; BSR set to: 0
  5941  014596  0E01               	movlw	1
  5942  014598  0100               	movlb	0	; () banked
  5943  01459A  6F61               	movwf	_isdigit$6372& (0+255),b
  5944  01459C                     l9211:
  5945                           
  5946                           ; BSR set to: 0
  5947  01459C  C061  F060         	movff	_isdigit$6372,??_isdigit
  5948  0145A0  0100               	movlb	0	; () banked
  5949  0145A2  3160               	rrcf	??_isdigit& (0+255),w,b
  5950  0145A4  0012               	return	
  5951  0145A6                     __end_of_isdigit:
  5952                           	opt stack 0
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           prodh	equ	0xFF4
  5958                           prodl	equ	0xFF3
  5959                           intcon	equ	0xFF2
  5960                           indf0	equ	0xFEF
  5961                           postinc0	equ	0xFEE
  5962                           fsr0h	equ	0xFEA
  5963                           fsr0l	equ	0xFE9
  5964                           wreg	equ	0xFE8
  5965                           postdec1	equ	0xFE5
  5966                           fsr1h	equ	0xFE2
  5967                           fsr1l	equ	0xFE1
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function _ringbuf_put_num *****************
  5976 ;; Defined at:
  5977 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  5980 ;;		 -> usb_tx(8), 
  5981 ;;  value           2   20[BANK0 ] const unsigned int 
  5982 ;;  digits          1   22[BANK0 ] unsigned char 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  i               1   23[BANK0 ] unsigned char 
  5985 ;;  temp            2   24[BANK0 ] unsigned int 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;		None               void
  5988 ;; Registers used:
  5989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5995 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;Total ram usage:        8 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:   14
  6002 ;; This function calls:
  6003 ;;		___lwdiv
  6004 ;;		___lwmod
  6005 ;;		_ringbuf_put
  6006 ;; This function is called by:
  6007 ;;		_terminal_task
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text12
  6012  013CAA                     __ptext12:
  6013                           	opt stack 0
  6014  013CAA                     _ringbuf_put_num:
  6015                           	opt stack 15
  6016                           
  6017                           ;My_ringbuf.c: 29: while (digits--) {
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;incstack = 0
  6021  013CAA  D039               	goto	l9981
  6022  013CAC                     l851:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;My_ringbuf.c: 30: uint16_t temp = value;
  6026  013CAC  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  6027  013CB0  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  6031  013CB4  0E00               	movlw	0
  6032  013CB6  0100               	movlb	0	; () banked
  6033  013CB8  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  6034  013CBA  D011               	goto	l9975
  6035  013CBC                     l9971:
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;My_ringbuf.c: 32: temp /= 10;
  6039  013CBC  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  6040  013CC0  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  6041  013CC4  0E00               	movlw	0
  6042  013CC6  0100               	movlb	0	; () banked
  6043  013CC8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6044  013CCA  0E0A               	movlw	10
  6045  013CCC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6046  013CCE  ECD7  F09E         	call	___lwdiv	;wreg free
  6047  013CD2  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  6048  013CD6  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  6049  013CDA  0100               	movlb	0	; () banked
  6050  013CDC  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  6051  013CDE                     l9975:
  6052                           
  6053                           ; BSR set to: 0
  6054  013CDE  0100               	movlb	0	; () banked
  6055  013CE0  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  6056  013CE2  0100               	movlb	0	; () banked
  6057  013CE4  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  6058  013CE6  A0D8               	btfss	status,0,c
  6059  013CE8  D7E9               	goto	l9971
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;My_ringbuf.c: 33: }
  6063                           ;My_ringbuf.c: 34: temp %= 10;
  6064                           
  6065                           ; BSR set to: 0
  6066  013CEA  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  6067  013CEE  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  6068  013CF2  0E00               	movlw	0
  6069  013CF4  0100               	movlb	0	; () banked
  6070  013CF6  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  6071  013CF8  0E0A               	movlw	10
  6072  013CFA  6F6F               	movwf	___lwmod@divisor& (0+255),b
  6073  013CFC  EC1D  F0A0         	call	___lwmod	;wreg free
  6074  013D00  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  6075  013D04  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  6076                           
  6077                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  6078  013D08  C072  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  6079  013D0C  C073  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  6080  013D10  0100               	movlb	0	; () banked
  6081  013D12  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  6082  013D14  0F30               	addlw	48
  6083  013D16  0100               	movlb	0	; () banked
  6084  013D18  6F6A               	movwf	ringbuf_put@data& (0+255),b
  6085  013D1A  EC61  F097         	call	_ringbuf_put	;wreg free
  6086  013D1E                     l9981:
  6087  013D1E  0100               	movlb	0	; () banked
  6088  013D20  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  6089  013D22  0100               	movlb	0	; () banked
  6090  013D24  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  6091  013D26  B4D8               	btfsc	status,2,c
  6092  013D28  0012               	return	
  6093  013D2A  D7C0               	goto	l851
  6094  013D2C                     __end_of_ringbuf_put_num:
  6095                           	opt stack 0
  6096                           tblptru	equ	0xFF8
  6097                           tblptrh	equ	0xFF7
  6098                           tblptrl	equ	0xFF6
  6099                           tablat	equ	0xFF5
  6100                           prodh	equ	0xFF4
  6101                           prodl	equ	0xFF3
  6102                           intcon	equ	0xFF2
  6103                           indf0	equ	0xFEF
  6104                           postinc0	equ	0xFEE
  6105                           fsr0h	equ	0xFEA
  6106                           fsr0l	equ	0xFE9
  6107                           wreg	equ	0xFE8
  6108                           postdec1	equ	0xFE5
  6109                           fsr1h	equ	0xFE2
  6110                           fsr1l	equ	0xFE1
  6111                           indf2	equ	0xFDF
  6112                           postinc2	equ	0xFDE
  6113                           postdec2	equ	0xFDD
  6114                           fsr2h	equ	0xFDA
  6115                           fsr2l	equ	0xFD9
  6116                           status	equ	0xFD8
  6117                           
  6118 ;; *************** function ___lwmod *****************
  6119 ;; Defined at:
  6120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  dividend        2   13[BANK0 ] unsigned int 
  6123 ;;  divisor         2   15[BANK0 ] unsigned int 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  counter         1   17[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2   13[BANK0 ] unsigned int 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;Total ram usage:        5 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:   12
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_ringbuf_put_num
  6146 ;;		_sprintf
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text13
  6151  01403A                     __ptext13:
  6152                           	opt stack 0
  6153  01403A                     ___lwmod:
  6154                           	opt stack 12
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;incstack = 0
  6158  01403A  0100               	movlb	0	; () banked
  6159  01403C  516F               	movf	___lwmod@divisor& (0+255),w,b
  6160  01403E  0100               	movlb	0	; () banked
  6161  014040  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6162  014042  B4D8               	btfsc	status,2,c
  6163  014044  D026               	goto	l2175
  6164                           
  6165                           ; BSR set to: 0
  6166  014046  0E01               	movlw	1
  6167  014048  0100               	movlb	0	; () banked
  6168  01404A  6F71               	movwf	___lwmod@counter& (0+255),b
  6169  01404C  D006               	goto	l9249
  6170  01404E                     l9247:
  6171                           
  6172                           ; BSR set to: 0
  6173  01404E  0100               	movlb	0	; () banked
  6174  014050  90D8               	bcf	status,0,c
  6175  014052  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6176  014054  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6177  014056  0100               	movlb	0	; () banked
  6178  014058  2B71               	incf	___lwmod@counter& (0+255),f,b
  6179  01405A                     l9249:
  6180                           
  6181                           ; BSR set to: 0
  6182  01405A  0100               	movlb	0	; () banked
  6183  01405C  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6184  01405E  D7F7               	goto	l9247
  6185  014060                     l9251:
  6186                           
  6187                           ; BSR set to: 0
  6188  014060  0100               	movlb	0	; () banked
  6189  014062  516F               	movf	___lwmod@divisor& (0+255),w,b
  6190  014064  0100               	movlb	0	; () banked
  6191  014066  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6192  014068  0100               	movlb	0	; () banked
  6193  01406A  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6194  01406C  0100               	movlb	0	; () banked
  6195  01406E  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6196  014070  A0D8               	btfss	status,0,c
  6197  014072  D008               	goto	l9255
  6198                           
  6199                           ; BSR set to: 0
  6200  014074  0100               	movlb	0	; () banked
  6201  014076  516F               	movf	___lwmod@divisor& (0+255),w,b
  6202  014078  0100               	movlb	0	; () banked
  6203  01407A  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6204  01407C  0100               	movlb	0	; () banked
  6205  01407E  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6206  014080  0100               	movlb	0	; () banked
  6207  014082  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6208  014084                     l9255:
  6209                           
  6210                           ; BSR set to: 0
  6211  014084  0100               	movlb	0	; () banked
  6212  014086  90D8               	bcf	status,0,c
  6213  014088  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6214  01408A  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6215                           
  6216                           ; BSR set to: 0
  6217  01408C  0100               	movlb	0	; () banked
  6218  01408E  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  6219  014090  D7E7               	goto	l9251
  6220  014092                     l2175:
  6221                           
  6222                           ; BSR set to: 0
  6223  014092  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6224  014096  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6225                           
  6226                           ; BSR set to: 0
  6227  01409A  0012               	return		;funcret
  6228  01409C                     __end_of___lwmod:
  6229                           	opt stack 0
  6230                           tblptru	equ	0xFF8
  6231                           tblptrh	equ	0xFF7
  6232                           tblptrl	equ	0xFF6
  6233                           tablat	equ	0xFF5
  6234                           prodh	equ	0xFF4
  6235                           prodl	equ	0xFF3
  6236                           intcon	equ	0xFF2
  6237                           indf0	equ	0xFEF
  6238                           postinc0	equ	0xFEE
  6239                           fsr0h	equ	0xFEA
  6240                           fsr0l	equ	0xFE9
  6241                           wreg	equ	0xFE8
  6242                           postdec1	equ	0xFE5
  6243                           fsr1h	equ	0xFE2
  6244                           fsr1l	equ	0xFE1
  6245                           indf2	equ	0xFDF
  6246                           postinc2	equ	0xFDE
  6247                           postdec2	equ	0xFDD
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252 ;; *************** function _ringbuf_delete *****************
  6253 ;; Defined at:
  6254 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6257 ;;		 -> terminal_task@command(8), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;		None               void
  6262 ;; Registers used:
  6263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;Total ram usage:        2 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:   12
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_terminal_task
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text14
  6284  014648                     __ptext14:
  6285                           	opt stack 0
  6286  014648                     _ringbuf_delete:
  6287                           	opt stack 17
  6288                           
  6289                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;incstack = 0
  6293  014648  0100               	movlb	0	; () banked
  6294  01464A  EE20 F006          	lfsr	2,6
  6295  01464E  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6296  014650  26D9               	addwf	fsr2l,f,c
  6297  014652  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6298  014654  22DA               	addwfc	fsr2h,f,c
  6299  014656  0100               	movlb	0	; () banked
  6300  014658  EE10 F004          	lfsr	1,4
  6301  01465C  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6302  01465E  26E1               	addwf	fsr1l,f,c
  6303  014660  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6304  014662  22E2               	addwfc	fsr1h,f,c
  6305  014664  CFDE FFE6          	movff	postinc2,postinc1
  6306  014668  CFDD FFE5          	movff	postdec2,postdec1
  6307                           
  6308                           ; BSR set to: 0
  6309  01466C  0012               	return		;funcret
  6310  01466E                     __end_of_ringbuf_delete:
  6311                           	opt stack 0
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           indf0	equ	0xFEF
  6320                           postinc0	equ	0xFEE
  6321                           fsr0h	equ	0xFEA
  6322                           fsr0l	equ	0xFE9
  6323                           wreg	equ	0xFE8
  6324                           postinc1	equ	0xFE6
  6325                           postdec1	equ	0xFE5
  6326                           fsr1h	equ	0xFE2
  6327                           fsr1l	equ	0xFE1
  6328                           indf2	equ	0xFDF
  6329                           postinc2	equ	0xFDE
  6330                           postdec2	equ	0xFDD
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _ringbuf_backspace *****************
  6336 ;; Defined at:
  6337 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6340 ;;		 -> terminal_task@command(8), 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6352 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;Total ram usage:        6 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:   13
  6359 ;; This function calls:
  6360 ;;		_ringbuf_num
  6361 ;; This function is called by:
  6362 ;;		_terminal_task
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text15
  6367  013B90                     __ptext15:
  6368                           	opt stack 0
  6369  013B90                     _ringbuf_backspace:
  6370                           	opt stack 16
  6371                           
  6372                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;incstack = 0
  6376  013B90  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6377  013B94  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6378  013B98  ECEA  F093         	call	_ringbuf_num	;wreg free
  6379  013B9C  0100               	movlb	0	; () banked
  6380  013B9E  5160               	movf	?_ringbuf_num& (0+255),w,b
  6381  013BA0  0100               	movlb	0	; () banked
  6382  013BA2  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6383  013BA4  B4D8               	btfsc	status,2,c
  6384  013BA6  0012               	return	
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6388  013BA8  0100               	movlb	0	; () banked
  6389  013BAA  EE20 F004          	lfsr	2,4
  6390  013BAE  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6391  013BB0  26D9               	addwf	fsr2l,f,c
  6392  013BB2  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6393  013BB4  22DA               	addwfc	fsr2h,f,c
  6394  013BB6  50DE               	movf	postinc2,w,c
  6395  013BB8  10DE               	iorwf	postinc2,w,c
  6396  013BBA  B4D8               	btfsc	status,2,c
  6397  013BBC  D00B               	goto	l10009
  6398                           
  6399                           ; BSR set to: 0
  6400  013BBE  0100               	movlb	0	; () banked
  6401  013BC0  EE20 F004          	lfsr	2,4
  6402  013BC4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6403  013BC6  26D9               	addwf	fsr2l,f,c
  6404  013BC8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6405  013BCA  22DA               	addwfc	fsr2h,f,c
  6406  013BCC  06DE               	decf	postinc2,f,c
  6407  013BCE  0E00               	movlw	0
  6408  013BD0  5ADD               	subwfb	postdec2,f,c
  6409  013BD2  0012               	return	
  6410  013BD4                     l10009:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6414  013BD4  0EFF               	movlw	255
  6415  013BD6  0100               	movlb	0	; () banked
  6416  013BD8  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6417  013BDA  0EFF               	movlw	255
  6418  013BDC  0100               	movlb	0	; () banked
  6419  013BDE  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6420  013BE0  0100               	movlb	0	; () banked
  6421  013BE2  EE20 F002          	lfsr	2,2
  6422  013BE6  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6423  013BE8  26D9               	addwf	fsr2l,f,c
  6424  013BEA  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6425  013BEC  22DA               	addwfc	fsr2h,f,c
  6426  013BEE  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6427  013BF2  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6428  013BF6  0100               	movlb	0	; () banked
  6429  013BF8  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6430  013BFA  0100               	movlb	0	; () banked
  6431  013BFC  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6432  013BFE  0100               	movlb	0	; () banked
  6433  013C00  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6434  013C02  0100               	movlb	0	; () banked
  6435  013C04  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6436  013C06  0100               	movlb	0	; () banked
  6437  013C08  EE20 F004          	lfsr	2,4
  6438  013C0C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6439  013C0E  26D9               	addwf	fsr2l,f,c
  6440  013C10  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6441  013C12  22DA               	addwfc	fsr2h,f,c
  6442  013C14  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6443  013C18  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6444                           
  6445                           ; BSR set to: 0
  6446  013C1C  0012               	return	
  6447  013C1E                     __end_of_ringbuf_backspace:
  6448                           	opt stack 0
  6449                           tblptru	equ	0xFF8
  6450                           tblptrh	equ	0xFF7
  6451                           tblptrl	equ	0xFF6
  6452                           tablat	equ	0xFF5
  6453                           prodh	equ	0xFF4
  6454                           prodl	equ	0xFF3
  6455                           intcon	equ	0xFF2
  6456                           indf0	equ	0xFEF
  6457                           postinc0	equ	0xFEE
  6458                           fsr0h	equ	0xFEA
  6459                           fsr0l	equ	0xFE9
  6460                           wreg	equ	0xFE8
  6461                           postinc1	equ	0xFE6
  6462                           postdec1	equ	0xFE5
  6463                           fsr1h	equ	0xFE2
  6464                           fsr1l	equ	0xFE1
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _main_init *****************
  6473 ;; Defined at:
  6474 ;;		line 285 in file "PIC18F27J53-killifish_light06.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;		None               void
  6481 ;; Registers used:
  6482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:   17
  6495 ;; This function calls:
  6496 ;;		_ADC_init
  6497 ;;		_OSC_init
  6498 ;;		_PWM_init
  6499 ;;		_RTCC_init
  6500 ;;		_USB_CDC_init
  6501 ;;		_timer0_init
  6502 ;;		_timer1_init
  6503 ;;		_timer3_init
  6504 ;; This function is called by:
  6505 ;;		_main
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text16
  6510  0142A2                     __ptext16:
  6511                           	opt stack 0
  6512  0142A2                     _main_init:
  6513                           	opt stack 13
  6514                           
  6515                           ;PIC18F27J53-killifish_light06.c: 286: OSC_init();
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;incstack = 0
  6519  0142A2  EC99  F0A3         	call	_OSC_init	;wreg free
  6520                           
  6521                           ;PIC18F27J53-killifish_light06.c: 287: TRISA = 0b11100111;
  6522  0142A6  0EE7               	movlw	231
  6523  0142A8  6E92               	movwf	3986,c	;volatile
  6524                           
  6525                           ;PIC18F27J53-killifish_light06.c: 288: TRISB = 0b00000000;
  6526  0142AA  0E00               	movlw	0
  6527  0142AC  6E93               	movwf	3987,c	;volatile
  6528                           
  6529                           ;PIC18F27J53-killifish_light06.c: 289: TRISC = 0b10111010;
  6530  0142AE  0EBA               	movlw	186
  6531  0142B0  6E94               	movwf	3988,c	;volatile
  6532                           
  6533                           ;PIC18F27J53-killifish_light06.c: 290: ANCON0 = 0b11111000;
  6534  0142B2  0EF8               	movlw	248
  6535  0142B4  010F               	movlb	15	; () banked
  6536  0142B6  6F48               	movwf	72,b	;volatile
  6537                           
  6538                           ; BSR set to: 15
  6539                           ;PIC18F27J53-killifish_light06.c: 291: ANCON1 = 0b00011111;
  6540  0142B8  0E1F               	movlw	31
  6541  0142BA  010F               	movlb	15	; () banked
  6542  0142BC  6F49               	movwf	73,b	;volatile
  6543                           
  6544                           ; BSR set to: 15
  6545                           ;PIC18F27J53-killifish_light06.c: 292: INTCON2bits.RBPU = 0;
  6546  0142BE  9EF1               	bcf	intcon2,7,c	;volatile
  6547                           
  6548                           ; BSR set to: 15
  6549                           ;PIC18F27J53-killifish_light06.c: 294: timer0_init(8);
  6550  0142C0  0E08               	movlw	8
  6551  0142C2  ECF5  F0A1         	call	_timer0_init
  6552                           
  6553                           ;PIC18F27J53-killifish_light06.c: 295: timer1_init(0, 2);
  6554  0142C6  0E02               	movlw	2
  6555  0142C8  0100               	movlb	0	; () banked
  6556  0142CA  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6557  0142CC  0E00               	movlw	0
  6558  0142CE  EC02  F0A1         	call	_timer1_init
  6559                           
  6560                           ;PIC18F27J53-killifish_light06.c: 296: timer3_init(2);
  6561  0142D2  0E02               	movlw	2
  6562  0142D4  EC7C  F0A2         	call	_timer3_init
  6563                           
  6564                           ;PIC18F27J53-killifish_light06.c: 297: ADC_init(0);
  6565  0142D8  0E00               	movlw	0
  6566  0142DA  EC48  F0A3         	call	_ADC_init
  6567                           
  6568                           ;PIC18F27J53-killifish_light06.c: 298: RTCC_init();
  6569  0142DE  EC85  F09F         	call	_RTCC_init	;wreg free
  6570                           
  6571                           ;PIC18F27J53-killifish_light06.c: 299: PWM_init(250);
  6572  0142E2  0EFA               	movlw	250
  6573  0142E4  ECC1  F099         	call	_PWM_init
  6574                           
  6575                           ;PIC18F27J53-killifish_light06.c: 301: USB_CDC_init();
  6576  0142E8  EC92  F0A3         	call	_USB_CDC_init	;wreg free
  6577  0142EC  0012               	return		;funcret
  6578  0142EE                     __end_of_main_init:
  6579                           	opt stack 0
  6580                           tblptru	equ	0xFF8
  6581                           tblptrh	equ	0xFF7
  6582                           tblptrl	equ	0xFF6
  6583                           tablat	equ	0xFF5
  6584                           prodh	equ	0xFF4
  6585                           prodl	equ	0xFF3
  6586                           intcon	equ	0xFF2
  6587                           intcon2	equ	0xFF1
  6588                           indf0	equ	0xFEF
  6589                           postinc0	equ	0xFEE
  6590                           fsr0h	equ	0xFEA
  6591                           fsr0l	equ	0xFE9
  6592                           wreg	equ	0xFE8
  6593                           postinc1	equ	0xFE6
  6594                           postdec1	equ	0xFE5
  6595                           fsr1h	equ	0xFE2
  6596                           fsr1l	equ	0xFE1
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _timer3_init *****************
  6605 ;; Defined at:
  6606 ;;		line 101 in file "../My_library/My_PIC.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  prescaler       1    wreg     unsigned char 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;		None               void
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6624 ;;Total ram usage:        2 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:   12
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_main_init
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           	psect	text17
  6635  0144F8                     __ptext17:
  6636                           	opt stack 0
  6637  0144F8                     _timer3_init:
  6638                           	opt stack 17
  6639                           
  6640                           ;incstack = 0
  6641                           ;timer3_init@prescaler stored from wreg
  6642  0144F8  0100               	movlb	0	; () banked
  6643  0144FA  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6644                           
  6645                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6646  0144FC  0E3F               	movlw	-193
  6647  0144FE  1679               	andwf	3961,f,c	;volatile
  6648                           
  6649                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6650  014500  9679               	bcf	3961,3,c	;volatile
  6651                           
  6652                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6653  014502  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6654  014506  0100               	movlb	0	; () banked
  6655  014508  3B60               	swapf	??_timer3_init& (0+255),f,b
  6656  01450A  5079               	movf	3961,w,c	;volatile
  6657  01450C  0100               	movlb	0	; () banked
  6658  01450E  1960               	xorwf	??_timer3_init& (0+255),w,b
  6659  014510  0BCF               	andlw	-49
  6660  014512  1960               	xorwf	??_timer3_init& (0+255),w,b
  6661  014514  6E79               	movwf	3961,c	;volatile
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6665  014516  9E79               	bcf	3961,7,c	;volatile
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6669  014518  8079               	bsf	3961,0,c	;volatile
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6673  01451A  92A2               	bcf	4002,1,c	;volatile
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6677  01451C  92A1               	bcf	4001,1,c	;volatile
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6681  01451E  82A0               	bsf	4000,1,c	;volatile
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6685  014520  8CF2               	bsf	intcon,6,c	;volatile
  6686                           
  6687                           ; BSR set to: 0
  6688  014522  0012               	return		;funcret
  6689  014524                     __end_of_timer3_init:
  6690                           	opt stack 0
  6691                           tblptru	equ	0xFF8
  6692                           tblptrh	equ	0xFF7
  6693                           tblptrl	equ	0xFF6
  6694                           tablat	equ	0xFF5
  6695                           prodh	equ	0xFF4
  6696                           prodl	equ	0xFF3
  6697                           intcon	equ	0xFF2
  6698                           intcon2	equ	0xFF1
  6699                           indf0	equ	0xFEF
  6700                           postinc0	equ	0xFEE
  6701                           fsr0h	equ	0xFEA
  6702                           fsr0l	equ	0xFE9
  6703                           wreg	equ	0xFE8
  6704                           postinc1	equ	0xFE6
  6705                           postdec1	equ	0xFE5
  6706                           fsr1h	equ	0xFE2
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _timer1_init *****************
  6716 ;; Defined at:
  6717 ;;		line 70 in file "../My_library/My_PIC.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  prescaler       1    wreg     unsigned char 
  6720 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;		None               void
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6732 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6735 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6736 ;;Total ram usage:        3 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:   12
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_main_init
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text18
  6747  014204                     __ptext18:
  6748                           	opt stack 0
  6749  014204                     _timer1_init:
  6750                           	opt stack 17
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;incstack = 0
  6754                           ;timer1_init@prescaler stored from wreg
  6755  014204  0100               	movlb	0	; () banked
  6756  014206  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6757                           
  6758                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6759  014208  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6760  01420C  0100               	movlb	0	; () banked
  6761  01420E  3B61               	swapf	??_timer1_init& (0+255),f,b
  6762  014210  4761               	rlncf	??_timer1_init& (0+255),f,b
  6763  014212  4761               	rlncf	??_timer1_init& (0+255),f,b
  6764  014214  50CD               	movf	4045,w,c	;volatile
  6765  014216  0100               	movlb	0	; () banked
  6766  014218  1961               	xorwf	??_timer1_init& (0+255),w,b
  6767  01421A  0B3F               	andlw	-193
  6768  01421C  1961               	xorwf	??_timer1_init& (0+255),w,b
  6769  01421E  6ECD               	movwf	4045,c	;volatile
  6770                           
  6771                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6772  014220  0E02               	movlw	2
  6773  014222  0100               	movlb	0	; () banked
  6774  014224  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6775  014226  A4D8               	btfss	status,2,c
  6776  014228  D002               	goto	l787
  6777                           
  6778                           ; BSR set to: 0
  6779  01422A  86CD               	bsf	4045,3,c	;volatile
  6780  01422C  D001               	goto	l9923
  6781  01422E                     l787:
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6785  01422E  96CD               	bcf	4045,3,c	;volatile
  6786  014230                     l9923:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6790  014230  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6791  014234  0100               	movlb	0	; () banked
  6792  014236  3B61               	swapf	??_timer1_init& (0+255),f,b
  6793  014238  50CD               	movf	4045,w,c	;volatile
  6794  01423A  0100               	movlb	0	; () banked
  6795  01423C  1961               	xorwf	??_timer1_init& (0+255),w,b
  6796  01423E  0BCF               	andlw	-49
  6797  014240  1961               	xorwf	??_timer1_init& (0+255),w,b
  6798  014242  6ECD               	movwf	4045,c	;volatile
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6802  014244  84CD               	bsf	4045,2,c	;volatile
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6806  014246  92CD               	bcf	4045,1,c	;volatile
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6810  014248  80CD               	bsf	4045,0,c	;volatile
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6814  01424A  909F               	bcf	3999,0,c	;volatile
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6818  01424C  909E               	bcf	3998,0,c	;volatile
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6822  01424E  809D               	bsf	3997,0,c	;volatile
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6826  014250  8CF2               	bsf	intcon,6,c	;volatile
  6827                           
  6828                           ; BSR set to: 0
  6829  014252  0012               	return		;funcret
  6830  014254                     __end_of_timer1_init:
  6831                           	opt stack 0
  6832                           tblptru	equ	0xFF8
  6833                           tblptrh	equ	0xFF7
  6834                           tblptrl	equ	0xFF6
  6835                           tablat	equ	0xFF5
  6836                           prodh	equ	0xFF4
  6837                           prodl	equ	0xFF3
  6838                           intcon	equ	0xFF2
  6839                           intcon2	equ	0xFF1
  6840                           indf0	equ	0xFEF
  6841                           postinc0	equ	0xFEE
  6842                           fsr0h	equ	0xFEA
  6843                           fsr0l	equ	0xFE9
  6844                           wreg	equ	0xFE8
  6845                           postinc1	equ	0xFE6
  6846                           postdec1	equ	0xFE5
  6847                           fsr1h	equ	0xFE2
  6848                           fsr1l	equ	0xFE1
  6849                           indf2	equ	0xFDF
  6850                           postinc2	equ	0xFDE
  6851                           postdec2	equ	0xFDD
  6852                           fsr2h	equ	0xFDA
  6853                           fsr2l	equ	0xFD9
  6854                           status	equ	0xFD8
  6855                           
  6856 ;; *************** function _timer0_init *****************
  6857 ;; Defined at:
  6858 ;;		line 34 in file "../My_library/My_PIC.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  prescaler       1    wreg     unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;		None               void
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6873 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6876 ;;Total ram usage:        2 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:   12
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_main_init
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text19
  6887  0143EA                     __ptext19:
  6888                           	opt stack 0
  6889  0143EA                     _timer0_init:
  6890                           	opt stack 17
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;incstack = 0
  6894                           ;timer0_init@prescaler stored from wreg
  6895  0143EA  0100               	movlb	0	; () banked
  6896  0143EC  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6897                           
  6898                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  6899  0143EE  8ED5               	bsf	4053,7,c	;volatile
  6900                           
  6901                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  6902  0143F0  8CD5               	bsf	4053,6,c	;volatile
  6903                           
  6904                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  6905  0143F2  9AD5               	bcf	4053,5,c	;volatile
  6906                           
  6907                           ;My_PIC.c: 38: if (prescaler == 0) {
  6908  0143F4  0100               	movlb	0	; () banked
  6909  0143F6  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6910  0143F8  0100               	movlb	0	; () banked
  6911  0143FA  A4D8               	btfss	status,2,c
  6912  0143FC  D002               	goto	l782
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  6916  0143FE  86D5               	bsf	4053,3,c	;volatile
  6917                           
  6918                           ;My_PIC.c: 40: } else {
  6919  014400  D00C               	goto	l9911
  6920  014402                     l782:
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  6924  014402  96D5               	bcf	4053,3,c	;volatile
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  6928  014404  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6929  014408  0EFF               	movlw	255
  6930  01440A  0100               	movlb	0	; () banked
  6931  01440C  2760               	addwf	??_timer0_init& (0+255),f,b
  6932  01440E  50D5               	movf	4053,w,c	;volatile
  6933  014410  0100               	movlb	0	; () banked
  6934  014412  1960               	xorwf	??_timer0_init& (0+255),w,b
  6935  014414  0BF8               	andlw	-8
  6936  014416  1960               	xorwf	??_timer0_init& (0+255),w,b
  6937  014418  6ED5               	movwf	4053,c	;volatile
  6938  01441A                     l9911:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;My_PIC.c: 43: }
  6942                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  6943  01441A  8AF2               	bsf	intcon,5,c	;volatile
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  6947  01441C  94F2               	bcf	intcon,2,c	;volatile
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  6951  01441E  94F1               	bcf	intcon2,2,c	;volatile
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  6955  014420  8CF2               	bsf	intcon,6,c	;volatile
  6956                           
  6957                           ; BSR set to: 0
  6958  014422  0012               	return		;funcret
  6959  014424                     __end_of_timer0_init:
  6960                           	opt stack 0
  6961                           tblptru	equ	0xFF8
  6962                           tblptrh	equ	0xFF7
  6963                           tblptrl	equ	0xFF6
  6964                           tablat	equ	0xFF5
  6965                           prodh	equ	0xFF4
  6966                           prodl	equ	0xFF3
  6967                           intcon	equ	0xFF2
  6968                           intcon2	equ	0xFF1
  6969                           indf0	equ	0xFEF
  6970                           postinc0	equ	0xFEE
  6971                           fsr0h	equ	0xFEA
  6972                           fsr0l	equ	0xFE9
  6973                           wreg	equ	0xFE8
  6974                           postinc1	equ	0xFE6
  6975                           postdec1	equ	0xFE5
  6976                           fsr1h	equ	0xFE2
  6977                           fsr1l	equ	0xFE1
  6978                           indf2	equ	0xFDF
  6979                           postinc2	equ	0xFDE
  6980                           postdec2	equ	0xFDD
  6981                           fsr2h	equ	0xFDA
  6982                           fsr2l	equ	0xFD9
  6983                           status	equ	0xFD8
  6984                           
  6985 ;; *************** function _USB_CDC_init *****************
  6986 ;; Defined at:
  6987 ;;		line 20 in file "../My_library/My_usb_cdc.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;		None               void
  6994 ;; Registers used:
  6995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:   14
  7008 ;; This function calls:
  7009 ;;		_USBDeviceAttach
  7010 ;;		_USBDeviceInit
  7011 ;;		_USB_CDC_buffer_init
  7012 ;; This function is called by:
  7013 ;;		_main_init
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text20
  7018  014724                     __ptext20:
  7019                           	opt stack 0
  7020  014724                     _USB_CDC_init:
  7021                           	opt stack 15
  7022                           
  7023                           ;My_usb_cdc.c: 21: USBDeviceInit();
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;incstack = 0
  7027  014724  EC71  F08F         	call	_USBDeviceInit	;wreg free
  7028                           
  7029                           ;My_usb_cdc.c: 22: USBDeviceAttach();
  7030  014728  EC12  F0A2         	call	_USBDeviceAttach	;wreg free
  7031                           
  7032                           ;My_usb_cdc.c: 23: USB_CDC_buffer_init();
  7033  01472C  EC2A  F0A1         	call	_USB_CDC_buffer_init	;wreg free
  7034  014730  0012               	return		;funcret
  7035  014732                     __end_of_USB_CDC_init:
  7036                           	opt stack 0
  7037                           tblptru	equ	0xFF8
  7038                           tblptrh	equ	0xFF7
  7039                           tblptrl	equ	0xFF6
  7040                           tablat	equ	0xFF5
  7041                           prodh	equ	0xFF4
  7042                           prodl	equ	0xFF3
  7043                           intcon	equ	0xFF2
  7044                           intcon2	equ	0xFF1
  7045                           indf0	equ	0xFEF
  7046                           postinc0	equ	0xFEE
  7047                           fsr0h	equ	0xFEA
  7048                           fsr0l	equ	0xFE9
  7049                           wreg	equ	0xFE8
  7050                           postinc1	equ	0xFE6
  7051                           postdec1	equ	0xFE5
  7052                           fsr1h	equ	0xFE2
  7053                           fsr1l	equ	0xFE1
  7054                           indf2	equ	0xFDF
  7055                           postinc2	equ	0xFDE
  7056                           postdec2	equ	0xFDD
  7057                           fsr2h	equ	0xFDA
  7058                           fsr2l	equ	0xFD9
  7059                           status	equ	0xFD8
  7060                           
  7061 ;; *************** function _USB_CDC_buffer_init *****************
  7062 ;; Defined at:
  7063 ;;		line 26 in file "../My_library/My_usb_cdc.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;		None               void
  7070 ;; Registers used:
  7071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; Hardware stack levels required when called:   13
  7084 ;; This function calls:
  7085 ;;		_ringbuf_init
  7086 ;; This function is called by:
  7087 ;;		_USB_CDC_init
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text21
  7092  014254                     __ptext21:
  7093                           	opt stack 0
  7094  014254                     _USB_CDC_buffer_init:
  7095                           	opt stack 15
  7096                           
  7097                           ;My_usb_cdc.c: 27: static uint8_t rxbuf[250];
  7098                           ;My_usb_cdc.c: 28: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  7099                           
  7100                           ;incstack = 0
  7101  014254  0E5C               	movlw	low _usb_rx
  7102  014256  0100               	movlb	0	; () banked
  7103  014258  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7104  01425A  0E01               	movlw	high _usb_rx
  7105  01425C  0100               	movlb	0	; () banked
  7106  01425E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7107  014260  0E00               	movlw	low USB_CDC_buffer_init@rxbuf
  7108  014262  0100               	movlb	0	; () banked
  7109  014264  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7110  014266  0E05               	movlw	high USB_CDC_buffer_init@rxbuf
  7111  014268  0100               	movlb	0	; () banked
  7112  01426A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7113  01426C  0E00               	movlw	0
  7114  01426E  0100               	movlb	0	; () banked
  7115  014270  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7116  014272  0EFA               	movlw	250
  7117  014274  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7118  014276  ECD8  F0A0         	call	_ringbuf_init	;wreg free
  7119                           
  7120                           ;My_usb_cdc.c: 29: static uint8_t txbuf[1500];
  7121                           ;My_usb_cdc.c: 30: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  7122  01427A  0E64               	movlw	low _usb_tx
  7123  01427C  0100               	movlb	0	; () banked
  7124  01427E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  7125  014280  0E01               	movlw	high _usb_tx
  7126  014282  0100               	movlb	0	; () banked
  7127  014284  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  7128  014286  0EFA               	movlw	low USB_CDC_buffer_init@txbuf
  7129  014288  0100               	movlb	0	; () banked
  7130  01428A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  7131  01428C  0E05               	movlw	high USB_CDC_buffer_init@txbuf
  7132  01428E  0100               	movlb	0	; () banked
  7133  014290  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  7134  014292  0E05               	movlw	5
  7135  014294  0100               	movlb	0	; () banked
  7136  014296  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  7137  014298  0EDC               	movlw	220
  7138  01429A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  7139  01429C  ECD8  F0A0         	call	_ringbuf_init	;wreg free
  7140  0142A0  0012               	return		;funcret
  7141  0142A2                     __end_of_USB_CDC_buffer_init:
  7142                           	opt stack 0
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           indf0	equ	0xFEF
  7152                           postinc0	equ	0xFEE
  7153                           fsr0h	equ	0xFEA
  7154                           fsr0l	equ	0xFE9
  7155                           wreg	equ	0xFE8
  7156                           postinc1	equ	0xFE6
  7157                           postdec1	equ	0xFE5
  7158                           fsr1h	equ	0xFE2
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           postinc2	equ	0xFDE
  7162                           postdec2	equ	0xFDD
  7163                           fsr2h	equ	0xFDA
  7164                           fsr2l	equ	0xFD9
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _ringbuf_init *****************
  7168 ;; Defined at:
  7169 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7172 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), lcd_tx(8), 
  7173 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7174 ;;		 -> USB_CDC_buffer_init@txbuf(1500), USB_CDC_buffer_init@rxbuf(250), terminal_task@buf(100), ST7032_init@buf(200), 
  7175 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;		None               void
  7180 ;; Registers used:
  7181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7190 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7191 ;;Total ram usage:        6 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:   12
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_terminal_task
  7198 ;;		_USB_CDC_buffer_init
  7199 ;;		_ST7032_init
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text22
  7204  0141B0                     __ptext22:
  7205                           	opt stack 0
  7206  0141B0                     _ringbuf_init:
  7207                           	opt stack 17
  7208                           
  7209                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7210                           
  7211                           ;incstack = 0
  7212  0141B0  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7213  0141B4  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7214  0141B8  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7215  0141BC  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7216                           
  7217                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7218  0141C0  0100               	movlb	0	; () banked
  7219  0141C2  EE20 F002          	lfsr	2,2
  7220  0141C6  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7221  0141C8  26D9               	addwf	fsr2l,f,c
  7222  0141CA  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7223  0141CC  22DA               	addwfc	fsr2h,f,c
  7224  0141CE  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7225  0141D2  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;My_ringbuf.c: 8: rb->head = 0;
  7229  0141D6  0100               	movlb	0	; () banked
  7230  0141D8  EE20 F004          	lfsr	2,4
  7231  0141DC  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7232  0141DE  26D9               	addwf	fsr2l,f,c
  7233  0141E0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7234  0141E2  22DA               	addwfc	fsr2h,f,c
  7235  0141E4  0E00               	movlw	0
  7236  0141E6  6EDE               	movwf	postinc2,c
  7237  0141E8  0E00               	movlw	0
  7238  0141EA  6EDD               	movwf	postdec2,c
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;My_ringbuf.c: 9: rb->tail = 0;
  7242  0141EC  0100               	movlb	0	; () banked
  7243  0141EE  EE20 F006          	lfsr	2,6
  7244  0141F2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7245  0141F4  26D9               	addwf	fsr2l,f,c
  7246  0141F6  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7247  0141F8  22DA               	addwfc	fsr2h,f,c
  7248  0141FA  0E00               	movlw	0
  7249  0141FC  6EDE               	movwf	postinc2,c
  7250  0141FE  0E00               	movlw	0
  7251  014200  6EDD               	movwf	postdec2,c
  7252                           
  7253                           ; BSR set to: 0
  7254  014202  0012               	return		;funcret
  7255  014204                     __end_of_ringbuf_init:
  7256                           	opt stack 0
  7257                           tblptru	equ	0xFF8
  7258                           tblptrh	equ	0xFF7
  7259                           tblptrl	equ	0xFF6
  7260                           tablat	equ	0xFF5
  7261                           prodh	equ	0xFF4
  7262                           prodl	equ	0xFF3
  7263                           intcon	equ	0xFF2
  7264                           intcon2	equ	0xFF1
  7265                           indf0	equ	0xFEF
  7266                           postinc0	equ	0xFEE
  7267                           fsr0h	equ	0xFEA
  7268                           fsr0l	equ	0xFE9
  7269                           wreg	equ	0xFE8
  7270                           postinc1	equ	0xFE6
  7271                           postdec1	equ	0xFE5
  7272                           fsr1h	equ	0xFE2
  7273                           fsr1l	equ	0xFE1
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _USBDeviceInit *****************
  7282 ;; Defined at:
  7283 ;;		line 299 in file "../My_library/usb/usb_device.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  i               1    8[BANK0 ] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;		None               void
  7290 ;; Registers used:
  7291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;Total ram usage:        1 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:   13
  7304 ;; This function calls:
  7305 ;;		_memset
  7306 ;; This function is called by:
  7307 ;;		_USB_CDC_init
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text23
  7312  011EE2                     __ptext23:
  7313                           	opt stack 0
  7314  011EE2                     _USBDeviceInit:
  7315                           	opt stack 15
  7316                           
  7317                           ;usb_device.c: 301: uint8_t i;
  7318                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;incstack = 0
  7322  011EE2  98A0               	bcf	4000,4,c	;volatile
  7323                           
  7324                           ;usb_device.c: 306: {UEIR = 0;};
  7325  011EE4  0E00               	movlw	0
  7326  011EE6  6E63               	movwf	3939,c	;volatile
  7327                           
  7328                           ;usb_device.c: 309: {UIR = 0;};
  7329  011EE8  0E00               	movlw	0
  7330  011EEA  6E62               	movwf	3938,c	;volatile
  7331                           
  7332                           ;usb_device.c: 312: UEP0 = 0;
  7333  011EEC  0E00               	movlw	0
  7334  011EEE  010F               	movlb	15	; () banked
  7335  011EF0  6F26               	movwf	38,b	;volatile
  7336                           
  7337                           ; BSR set to: 15
  7338                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  7339  011EF2  0E27               	movlw	39
  7340  011EF4  0100               	movlb	0	; () banked
  7341  011EF6  6F60               	movwf	memset@p1& (0+255),b
  7342  011EF8  0E0F               	movlw	15
  7343  011EFA  0100               	movlb	0	; () banked
  7344  011EFC  6F61               	movwf	(memset@p1+1)& (0+255),b
  7345  011EFE  0E00               	movlw	0
  7346  011F00  0100               	movlb	0	; () banked
  7347  011F02  6F63               	movwf	(memset@c+1)& (0+255),b
  7348  011F04  0E00               	movlw	0
  7349  011F06  6F62               	movwf	memset@c& (0+255),b
  7350  011F08  0E00               	movlw	0
  7351  011F0A  0100               	movlb	0	; () banked
  7352  011F0C  6F65               	movwf	(memset@n+1)& (0+255),b
  7353  011F0E  0E02               	movlw	2
  7354  011F10  6F64               	movwf	memset@n& (0+255),b
  7355  011F12  EC49  F0A2         	call	_memset	;wreg free
  7356                           
  7357                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7358  011F16  0E16               	movlw	22
  7359  011F18  010F               	movlb	15	; () banked
  7360  011F1A  6F39               	movwf	57,b	;volatile
  7361                           
  7362                           ; BSR set to: 15
  7363  011F1C  0E9F               	movlw	159
  7364  011F1E  010F               	movlb	15	; () banked
  7365  011F20  6F37               	movwf	55,b	;volatile
  7366                           
  7367                           ; BSR set to: 15
  7368  011F22  0E7B               	movlw	123
  7369  011F24  010F               	movlb	15	; () banked
  7370  011F26  6F36               	movwf	54,b	;volatile
  7371                           
  7372                           ; BSR set to: 15
  7373                           ;usb_device.c: 319: ;
  7374                           ;usb_device.c: 322: ;
  7375                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  7376  011F28  0E00               	movlw	0
  7377  011F2A  0100               	movlb	0	; () banked
  7378  011F2C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7379  011F2E                     l9623:
  7380                           
  7381                           ; BSR set to: 0
  7382  011F2E  0E0B               	movlw	11
  7383  011F30  0100               	movlb	0	; () banked
  7384  011F32  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7385  011F34  D001               	goto	l9627
  7386  011F36  D010               	goto	l146
  7387  011F38                     l9627:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;usb_device.c: 326: {
  7391                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  7392  011F38  0100               	movlb	0	; () banked
  7393  011F3A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7394  011F3C  0D04               	mullw	4
  7395  011F3E  0E00               	movlw	0
  7396  011F40  24F3               	addwf	prodl,w,c
  7397  011F42  6ED9               	movwf	fsr2l,c
  7398  011F44  0E0D               	movlw	13
  7399  011F46  20F4               	addwfc	prodh,w,c
  7400  011F48  6EDA               	movwf	fsr2h,c
  7401  011F4A  6ADE               	clrf	postinc2,c
  7402  011F4C  6ADE               	clrf	postinc2,c
  7403  011F4E  6ADE               	clrf	postinc2,c
  7404  011F50  6ADD               	clrf	postdec2,c
  7405                           
  7406                           ; BSR set to: 0
  7407  011F52  0100               	movlb	0	; () banked
  7408  011F54  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7409  011F56  D7EB               	goto	l9623
  7410  011F58                     l146:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;usb_device.c: 328: }
  7414                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  7415  011F58  8C65               	bsf	3941,6,c	;volatile
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;usb_device.c: 334: UADDR = 0x00;
  7419  011F5A  0E00               	movlw	0
  7420  011F5C  010F               	movlb	15	; () banked
  7421  011F5E  6F38               	movwf	56,b	;volatile
  7422                           
  7423                           ; BSR set to: 15
  7424                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  7425  011F60  9865               	bcf	3941,4,c	;volatile
  7426                           
  7427                           ; BSR set to: 15
  7428                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  7429  011F62  9C65               	bcf	3941,6,c	;volatile
  7430                           
  7431                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
  7432  011F64  D009               	goto	l9647
  7433  011F66                     l9639:
  7434                           
  7435                           ;usb_device.c: 344: {
  7436                           ;usb_device.c: 345: (UIR &= 0xF7);
  7437  011F66  9662               	bcf	3938,3,c	;volatile
  7438                           
  7439                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  7440  011F68  0E00               	movlw	0
  7441  011F6A  6E0D               	movwf	_inPipes+3,c	;volatile
  7442                           
  7443                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  7444  011F6C  0E00               	movlw	0
  7445  011F6E  6E04               	movwf	_outPipes+3,c	;volatile
  7446                           
  7447                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  7448  011F70  0E00               	movlw	0
  7449  011F72  6E06               	movwf	_outPipes+5,c	;volatile
  7450  011F74  0E00               	movlw	0
  7451  011F76  6E05               	movwf	_outPipes+4,c	;volatile
  7452  011F78                     l9647:
  7453  011F78  B662               	btfsc	3938,3,c	;volatile
  7454  011F7A  D7F5               	goto	l9639
  7455                           
  7456                           ;usb_device.c: 350: }
  7457                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  7458  011F7C  0E01               	movlw	1
  7459  011F7E  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7460                           
  7461                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  7462  011F80  0E01               	movlw	1
  7463  011F82  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7464                           
  7465                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  7466  011F84  0E00               	movlw	0
  7467  011F86  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7468                           
  7469                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  7470  011F88  0E00               	movlw	0
  7471  011F8A  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7472                           
  7473                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  7474  011F8C  0E00               	movlw	0
  7475  011F8E  0100               	movlb	0	; () banked
  7476  011F90  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7477                           
  7478                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  7479  011F92  0E00               	movlw	0
  7480  011F94  0100               	movlb	0	; () banked
  7481  011F96  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7482  011F98                     l9651:
  7483                           
  7484                           ; BSR set to: 0
  7485  011F98  0E02               	movlw	2
  7486  011F9A  0100               	movlb	0	; () banked
  7487  011F9C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7488  011F9E  D001               	goto	l9655
  7489  011FA0  D033               	goto	l9661
  7490  011FA2                     l9655:
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;usb_device.c: 364: {
  7494                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  7495  011FA2  0100               	movlb	0	; () banked
  7496  011FA4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7497  011FA6  0D02               	mullw	2
  7498  011FA8  0E10               	movlw	low _pBDTEntryIn
  7499  011FAA  24F3               	addwf	prodl,w,c
  7500  011FAC  6ED9               	movwf	fsr2l,c
  7501  011FAE  0E00               	movlw	high _pBDTEntryIn
  7502  011FB0  20F4               	addwfc	prodh,w,c
  7503  011FB2  6EDA               	movwf	fsr2h,c
  7504  011FB4  0E00               	movlw	0
  7505  011FB6  6EDE               	movwf	postinc2,c
  7506  011FB8  0E00               	movlw	0
  7507  011FBA  6EDD               	movwf	postdec2,c
  7508                           
  7509                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  7510  011FBC  0100               	movlb	0	; () banked
  7511  011FBE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7512  011FC0  0D02               	mullw	2
  7513  011FC2  0E0A               	movlw	low _pBDTEntryOut
  7514  011FC4  24F3               	addwf	prodl,w,c
  7515  011FC6  6ED9               	movwf	fsr2l,c
  7516  011FC8  0E01               	movlw	high _pBDTEntryOut
  7517  011FCA  20F4               	addwfc	prodh,w,c
  7518  011FCC  6EDA               	movwf	fsr2h,c
  7519  011FCE  0E00               	movlw	0
  7520  011FD0  6EDE               	movwf	postinc2,c
  7521  011FD2  0E00               	movlw	0
  7522  011FD4  6EDD               	movwf	postdec2,c
  7523                           
  7524                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  7525  011FD6  0100               	movlb	0	; () banked
  7526  011FD8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7527  011FDA  0D01               	mullw	1
  7528  011FDC  0E16               	movlw	low _ep_data_in
  7529  011FDE  24F3               	addwf	prodl,w,c
  7530  011FE0  6ED9               	movwf	fsr2l,c
  7531  011FE2  0E00               	movlw	high _ep_data_in
  7532  011FE4  20F4               	addwfc	prodh,w,c
  7533  011FE6  6EDA               	movwf	fsr2h,c
  7534  011FE8  0E00               	movlw	0
  7535  011FEA  6EDF               	movwf	indf2,c
  7536                           
  7537                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  7538  011FEC  0100               	movlb	0	; () banked
  7539  011FEE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7540  011FF0  0D01               	mullw	1
  7541  011FF2  0ED5               	movlw	low _ep_data_out
  7542  011FF4  24F3               	addwf	prodl,w,c
  7543  011FF6  6ED9               	movwf	fsr2l,c
  7544  011FF8  0E00               	movlw	high _ep_data_out
  7545  011FFA  20F4               	addwfc	prodh,w,c
  7546  011FFC  6EDA               	movwf	fsr2h,c
  7547  011FFE  0E00               	movlw	0
  7548  012000  6EDF               	movwf	indf2,c
  7549                           
  7550                           ; BSR set to: 0
  7551  012002  0100               	movlb	0	; () banked
  7552  012004  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7553  012006  D7C8               	goto	l9651
  7554  012008                     l9661:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;usb_device.c: 369: }
  7558                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7559  012008  0E08               	movlw	8
  7560  01200A  6E10               	movwf	_pBDTEntryIn,c
  7561  01200C  0E0D               	movlw	13
  7562  01200E  6E11               	movwf	_pBDTEntryIn+1,c
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  7566  012010  0E16               	movlw	22
  7567  012012  010F               	movlb	15	; () banked
  7568  012014  6F26               	movwf	38,b	;volatile
  7569                           
  7570                           ; BSR set to: 15
  7571                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7572  012016  0E0D               	movlw	13
  7573  012018  010D               	movlb	13	; () banked
  7574  01201A  6F03               	movwf	3,b	;volatile
  7575  01201C  0E30               	movlw	48
  7576  01201E  6F02               	movwf	2,b	;volatile
  7577                           
  7578                           ; BSR set to: 13
  7579                           ;usb_device.c: 377: BDT[0].CNT = 8;
  7580  012020  0E08               	movlw	8
  7581  012022  010D               	movlb	13	; () banked
  7582  012024  6F01               	movwf	1,b	;volatile
  7583                           
  7584                           ; BSR set to: 13
  7585                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  7586  012026  0E04               	movlw	4
  7587  012028  010D               	movlb	13	; () banked
  7588  01202A  6F00               	movwf	0,b	;volatile
  7589                           
  7590                           ; BSR set to: 13
  7591                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  7592  01202C  010D               	movlb	13	; () banked
  7593  01202E  8F00               	bsf	0,7,b	;volatile
  7594                           
  7595                           ; BSR set to: 13
  7596                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  7597  012030  0E00               	movlw	0
  7598  012032  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  7599                           
  7600                           ; BSR set to: 13
  7601                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
  7602  012034  0E00               	movlw	0
  7603  012036  6E24               	movwf	_USBDeviceState,c	;volatile
  7604                           
  7605                           ; BSR set to: 13
  7606  012038  0012               	return		;funcret
  7607  01203A                     __end_of_USBDeviceInit:
  7608                           	opt stack 0
  7609                           tblptru	equ	0xFF8
  7610                           tblptrh	equ	0xFF7
  7611                           tblptrl	equ	0xFF6
  7612                           tablat	equ	0xFF5
  7613                           prodh	equ	0xFF4
  7614                           prodl	equ	0xFF3
  7615                           intcon	equ	0xFF2
  7616                           intcon2	equ	0xFF1
  7617                           indf0	equ	0xFEF
  7618                           postinc0	equ	0xFEE
  7619                           fsr0h	equ	0xFEA
  7620                           fsr0l	equ	0xFE9
  7621                           wreg	equ	0xFE8
  7622                           postinc1	equ	0xFE6
  7623                           postdec1	equ	0xFE5
  7624                           fsr1h	equ	0xFE2
  7625                           fsr1l	equ	0xFE1
  7626                           indf2	equ	0xFDF
  7627                           postinc2	equ	0xFDE
  7628                           postdec2	equ	0xFDD
  7629                           fsr2h	equ	0xFDA
  7630                           fsr2l	equ	0xFD9
  7631                           status	equ	0xFD8
  7632                           
  7633 ;; *************** function _memset *****************
  7634 ;; Defined at:
  7635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  p1              2    0[BANK0 ] PTR void 
  7638 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7639 ;;  c               2    2[BANK0 ] int 
  7640 ;;  n               2    4[BANK0 ] unsigned int 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7643 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  2    0[BANK0 ] PTR void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7653 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7657 ;;Total ram usage:        8 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:   12
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_USBDeviceInit
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text24
  7668  014492                     __ptext24:
  7669                           	opt stack 0
  7670  014492                     _memset:
  7671                           	opt stack 15
  7672                           
  7673                           ; BSR set to: 13
  7674                           ;incstack = 0
  7675  014492  C060  F066         	movff	memset@p1,memset@p
  7676  014496  C061  F067         	movff	memset@p1+1,memset@p+1
  7677  01449A  D009               	goto	l9515
  7678  01449C                     l9511:
  7679  01449C  C066  FFD9         	movff	memset@p,fsr2l
  7680  0144A0  C067  FFDA         	movff	memset@p+1,fsr2h
  7681  0144A4  C062  FFDF         	movff	memset@c,indf2
  7682  0144A8  0100               	movlb	0	; () banked
  7683  0144AA  4B66               	infsnz	memset@p& (0+255),f,b
  7684  0144AC  2B67               	incf	(memset@p+1)& (0+255),f,b
  7685  0144AE                     l9515:
  7686  0144AE  0100               	movlb	0	; () banked
  7687  0144B0  0764               	decf	memset@n& (0+255),f,b
  7688  0144B2  A0D8               	btfss	status,0,c
  7689  0144B4  0765               	decf	(memset@n+1)& (0+255),f,b
  7690  0144B6  0100               	movlb	0	; () banked
  7691  0144B8  2964               	incf	memset@n& (0+255),w,b
  7692  0144BA  E1F0               	bnz	l9511
  7693  0144BC  0100               	movlb	0	; () banked
  7694  0144BE  2965               	incf	(memset@n+1)& (0+255),w,b
  7695  0144C0  B4D8               	btfsc	status,2,c
  7696  0144C2  0012               	return	
  7697  0144C4  D7EB               	goto	l9511
  7698  0144C6                     __end_of_memset:
  7699                           	opt stack 0
  7700                           tblptru	equ	0xFF8
  7701                           tblptrh	equ	0xFF7
  7702                           tblptrl	equ	0xFF6
  7703                           tablat	equ	0xFF5
  7704                           prodh	equ	0xFF4
  7705                           prodl	equ	0xFF3
  7706                           intcon	equ	0xFF2
  7707                           intcon2	equ	0xFF1
  7708                           indf0	equ	0xFEF
  7709                           postinc0	equ	0xFEE
  7710                           fsr0h	equ	0xFEA
  7711                           fsr0l	equ	0xFE9
  7712                           wreg	equ	0xFE8
  7713                           postinc1	equ	0xFE6
  7714                           postdec1	equ	0xFE5
  7715                           fsr1h	equ	0xFE2
  7716                           fsr1l	equ	0xFE1
  7717                           indf2	equ	0xFDF
  7718                           postinc2	equ	0xFDE
  7719                           postdec2	equ	0xFDD
  7720                           fsr2h	equ	0xFDA
  7721                           fsr2l	equ	0xFD9
  7722                           status	equ	0xFD8
  7723                           
  7724 ;; *************** function _USBDeviceAttach *****************
  7725 ;; Defined at:
  7726 ;;		line 1353 in file "../My_library/usb/usb_device.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;		None               void
  7733 ;; Registers used:
  7734 ;;		wreg, status,2
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;Total ram usage:        0 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:   12
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_USB_CDC_init
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text25
  7755  014424                     __ptext25:
  7756                           	opt stack 0
  7757  014424                     _USBDeviceAttach:
  7758                           	opt stack 16
  7759                           
  7760                           ;usb_device.c: 1357: {
  7761                           ;usb_device.c: 1358: if(1 == 1)
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;incstack = 0
  7765  014424  5024               	movf	_USBDeviceState,w,c	;volatile
  7766  014426  A4D8               	btfss	status,2,c
  7767  014428  0012               	return	
  7768                           
  7769                           ;usb_device.c: 1359: {
  7770                           ;usb_device.c: 1361: UCON = 0;
  7771  01442A  0E00               	movlw	0
  7772  01442C  6E65               	movwf	3941,c	;volatile
  7773                           
  7774                           ;usb_device.c: 1364: UIE = 0;
  7775  01442E  0E00               	movlw	0
  7776  014430  010F               	movlb	15	; () banked
  7777  014432  6F36               	movwf	54,b	;volatile
  7778                           
  7779                           ;usb_device.c: 1368: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7780  014434  0E16               	movlw	22
  7781  014436  010F               	movlb	15	; () banked
  7782  014438  6F39               	movwf	57,b	;volatile
  7783  01443A  0E9F               	movlw	159
  7784  01443C  010F               	movlb	15	; () banked
  7785  01443E  6F37               	movwf	55,b	;volatile
  7786  014440  0E7B               	movlw	123
  7787  014442  010F               	movlb	15	; () banked
  7788  014444  6F36               	movwf	54,b	;volatile
  7789                           
  7790                           ; BSR set to: 15
  7791                           ;usb_device.c: 1370: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7792  014446  8ED0               	bsf	4048,7,c	;volatile
  7793                           
  7794                           ; BSR set to: 15
  7795  014448  88A2               	bsf	4002,4,c	;volatile
  7796                           
  7797                           ; BSR set to: 15
  7798  01444A  88A0               	bsf	4000,4,c	;volatile
  7799                           
  7800                           ; BSR set to: 15
  7801  01444C  8EF2               	bsf	intcon,7,c	;volatile
  7802                           
  7803                           ;usb_device.c: 1373: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7804  01444E  D001               	goto	l207
  7805  014450                     l208:
  7806  014450  8665               	bsf	3941,3,c	;volatile
  7807  014452                     l207:
  7808  014452  A665               	btfss	3941,3,c	;volatile
  7809  014454  D7FD               	goto	l208
  7810                           
  7811                           ;usb_device.c: 1376: USBDeviceState = ATTACHED_STATE;
  7812  014456  0E01               	movlw	1
  7813  014458  6E24               	movwf	_USBDeviceState,c	;volatile
  7814  01445A  0012               	return	
  7815  01445C                     __end_of_USBDeviceAttach:
  7816                           	opt stack 0
  7817                           tblptru	equ	0xFF8
  7818                           tblptrh	equ	0xFF7
  7819                           tblptrl	equ	0xFF6
  7820                           tablat	equ	0xFF5
  7821                           prodh	equ	0xFF4
  7822                           prodl	equ	0xFF3
  7823                           intcon	equ	0xFF2
  7824                           intcon2	equ	0xFF1
  7825                           indf0	equ	0xFEF
  7826                           postinc0	equ	0xFEE
  7827                           fsr0h	equ	0xFEA
  7828                           fsr0l	equ	0xFE9
  7829                           wreg	equ	0xFE8
  7830                           postinc1	equ	0xFE6
  7831                           postdec1	equ	0xFE5
  7832                           fsr1h	equ	0xFE2
  7833                           fsr1l	equ	0xFE1
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _RTCC_init *****************
  7842 ;; Defined at:
  7843 ;;		line 22 in file "../My_library/My_RTCC.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;		None
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;		None               void
  7850 ;; Registers used:
  7851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7861 ;;Total ram usage:        0 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:   16
  7864 ;; This function calls:
  7865 ;;		_RTCC_from_RTCC
  7866 ;;		_RTCC_from_epoch
  7867 ;; This function is called by:
  7868 ;;		_main_init
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872                           	psect	text26
  7873  013F0A                     __ptext26:
  7874                           	opt stack 0
  7875  013F0A                     _RTCC_init:
  7876                           	opt stack 13
  7877                           
  7878                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7879                           
  7880                           ;incstack = 0
  7881  013F0A  010F               	movlb	15	; () banked
  7882  013F0C  8B3F               	bsf	63,5,b	;volatile
  7883                           
  7884                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7885  013F0E  010F               	movlb	15	; () banked
  7886  013F10  BB3F               	btfsc	63,5,b	;volatile
  7887  013F12  D006               	goto	l10019
  7888                           
  7889                           ; BSR set to: 15
  7890                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7891  013F14  0E55               	movlw	85
  7892  013F16  6EA7               	movwf	4007,c	;volatile
  7893                           
  7894                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7895  013F18  0EAA               	movlw	170
  7896  013F1A  6EA7               	movwf	4007,c	;volatile
  7897                           
  7898                           ; BSR set to: 15
  7899                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7900  013F1C  010F               	movlb	15	; () banked
  7901  013F1E  8B3F               	bsf	63,5,b	;volatile
  7902  013F20                     l10019:
  7903                           
  7904                           ; BSR set to: 15
  7905                           ;My_RTCC.c: 28: }
  7906                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7907  013F20  010F               	movlb	15	; () banked
  7908  013F22  8F3F               	bsf	63,7,b	;volatile
  7909                           
  7910                           ; BSR set to: 15
  7911                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7912  013F24  010F               	movlb	15	; () banked
  7913  013F26  953F               	bcf	63,2,b	;volatile
  7914                           
  7915                           ; BSR set to: 15
  7916                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7917  013F28  010F               	movlb	15	; () banked
  7918  013F2A  833C               	bsf	60,1,b	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7922  013F2C  010F               	movlb	15	; () banked
  7923  013F2E  853C               	bsf	60,2,b	;volatile
  7924                           
  7925                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7926  013F30  0E00               	movlw	0
  7927  013F32  010F               	movlb	15	; () banked
  7928  013F34  6F3E               	movwf	62,b	;volatile
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7932  013F36  86CD               	bsf	4045,3,c	;volatile
  7933                           
  7934                           ; BSR set to: 15
  7935                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  7936  013F38  0E36               	movlw	low _now
  7937  013F3A  0100               	movlb	0	; () banked
  7938  013F3C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7939  013F3E  0E01               	movlw	high _now
  7940  013F40  0100               	movlb	0	; () banked
  7941  013F42  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7942  013F44  EC85  F0A3         	call	_RTCC_from_RTCC	;wreg free
  7943                           
  7944                           ;My_RTCC.c: 37: if (now.DD == 0) {
  7945  013F48  0101               	movlb	1	; () banked
  7946  013F4A  513E               	movf	(_now+8)& (0+255),w,b
  7947  013F4C  A4D8               	btfss	status,2,c
  7948  013F4E  0012               	return	
  7949                           
  7950                           ; BSR set to: 1
  7951                           ;My_RTCC.c: 38: now.epoch = 0;
  7952  013F50  0E00               	movlw	0
  7953  013F52  0101               	movlb	1	; () banked
  7954  013F54  6F36               	movwf	_now& (0+255),b
  7955  013F56  0E00               	movlw	0
  7956  013F58  6F37               	movwf	(_now+1)& (0+255),b
  7957  013F5A  0E00               	movlw	0
  7958  013F5C  6F38               	movwf	(_now+2)& (0+255),b
  7959  013F5E  0E00               	movlw	0
  7960  013F60  6F39               	movwf	(_now+3)& (0+255),b
  7961                           
  7962                           ; BSR set to: 1
  7963                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  7964  013F62  0E36               	movlw	low _now
  7965  013F64  0100               	movlb	0	; () banked
  7966  013F66  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7967  013F68  0E01               	movlw	high _now
  7968  013F6A  0100               	movlb	0	; () banked
  7969  013F6C  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7970  013F6E  EC78  F0A3         	call	_RTCC_from_epoch	;wreg free
  7971  013F72  0012               	return	
  7972  013F74                     __end_of_RTCC_init:
  7973                           	opt stack 0
  7974                           tblptru	equ	0xFF8
  7975                           tblptrh	equ	0xFF7
  7976                           tblptrl	equ	0xFF6
  7977                           tablat	equ	0xFF5
  7978                           prodh	equ	0xFF4
  7979                           prodl	equ	0xFF3
  7980                           intcon	equ	0xFF2
  7981                           intcon2	equ	0xFF1
  7982                           indf0	equ	0xFEF
  7983                           postinc0	equ	0xFEE
  7984                           fsr0h	equ	0xFEA
  7985                           fsr0l	equ	0xFE9
  7986                           wreg	equ	0xFE8
  7987                           postinc1	equ	0xFE6
  7988                           postdec1	equ	0xFE5
  7989                           fsr1h	equ	0xFE2
  7990                           fsr1l	equ	0xFE1
  7991                           indf2	equ	0xFDF
  7992                           postinc2	equ	0xFDE
  7993                           postdec2	equ	0xFDD
  7994                           fsr2h	equ	0xFDA
  7995                           fsr2l	equ	0xFD9
  7996                           status	equ	0xFD8
  7997                           
  7998 ;; *************** function _RTCC_from_epoch *****************
  7999 ;; Defined at:
  8000 ;;		line 210 in file "../My_library/My_RTCC.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  tm              2   47[BANK0 ] PTR struct .
  8003 ;;		 -> now(14), 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;		None
  8006 ;; Return value:  Size  Location     Type
  8007 ;;		None               void
  8008 ;; Registers used:
  8009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8019 ;;Total ram usage:        2 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:   15
  8022 ;; This function calls:
  8023 ;;		_caltime_to_RTCC
  8024 ;;		_epoch_to_caltime
  8025 ;; This function is called by:
  8026 ;;		_RTCC_init
  8027 ;;		_RTCC_adjust_time_inc
  8028 ;;		_RTCC_adjust_time_dec
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text27
  8033  0146F0                     __ptext27:
  8034                           	opt stack 0
  8035  0146F0                     _RTCC_from_epoch:
  8036                           	opt stack 13
  8037                           
  8038                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  8039                           
  8040                           ;incstack = 0
  8041  0146F0  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  8042  0146F4  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  8043  0146F8  ECE7  F08C         	call	_epoch_to_caltime	;wreg free
  8044                           
  8045                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  8046  0146FC  C08F  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  8047  014700  C090  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  8048  014704  EC8C  F096         	call	_caltime_to_RTCC	;wreg free
  8049  014708  0012               	return		;funcret
  8050  01470A                     __end_of_RTCC_from_epoch:
  8051                           	opt stack 0
  8052                           tblptru	equ	0xFF8
  8053                           tblptrh	equ	0xFF7
  8054                           tblptrl	equ	0xFF6
  8055                           tablat	equ	0xFF5
  8056                           prodh	equ	0xFF4
  8057                           prodl	equ	0xFF3
  8058                           intcon	equ	0xFF2
  8059                           intcon2	equ	0xFF1
  8060                           indf0	equ	0xFEF
  8061                           postinc0	equ	0xFEE
  8062                           fsr0h	equ	0xFEA
  8063                           fsr0l	equ	0xFE9
  8064                           wreg	equ	0xFE8
  8065                           postinc1	equ	0xFE6
  8066                           postdec1	equ	0xFE5
  8067                           fsr1h	equ	0xFE2
  8068                           fsr1l	equ	0xFE1
  8069                           indf2	equ	0xFDF
  8070                           postinc2	equ	0xFDE
  8071                           postdec2	equ	0xFDD
  8072                           fsr2h	equ	0xFDA
  8073                           fsr2l	equ	0xFD9
  8074                           status	equ	0xFD8
  8075                           
  8076 ;; *************** function _epoch_to_caltime *****************
  8077 ;; Defined at:
  8078 ;;		line 125 in file "../My_library/My_RTCC.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  tm              2   33[BANK0 ] PTR struct .
  8081 ;;		 -> now(14), 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  num             4   43[BANK0 ] unsigned long 
  8084 ;;  day             2   39[BANK0 ] unsigned int 
  8085 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  8086 ;;  month           1   42[BANK0 ] unsigned char 
  8087 ;;  year            1   41[BANK0 ] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;		None               void
  8090 ;; Registers used:
  8091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8098 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8100 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;Total ram usage:       14 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:   14
  8104 ;; This function calls:
  8105 ;;		_get_quot_rem
  8106 ;;		_month_length
  8107 ;; This function is called by:
  8108 ;;		_RTCC_from_caltime
  8109 ;;		_RTCC_from_epoch
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text28
  8114  0119CE                     __ptext28:
  8115                           	opt stack 0
  8116  0119CE                     _epoch_to_caltime:
  8117                           	opt stack 11
  8118                           
  8119                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  8120                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  8121                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  8122                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  8123                           ;My_RTCC.c: 132: uint16_t day;
  8124                           ;My_RTCC.c: 133: uint8_t year = 0;
  8125                           
  8126                           ;incstack = 0
  8127  0119CE  0E00               	movlw	0
  8128  0119D0  0100               	movlb	0	; () banked
  8129  0119D2  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8130                           
  8131                           ;My_RTCC.c: 134: uint8_t month = 1;
  8132  0119D4  0E01               	movlw	1
  8133  0119D6  0100               	movlb	0	; () banked
  8134  0119D8  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8135                           
  8136                           ; BSR set to: 0
  8137                           ;My_RTCC.c: 135: epoch_t num;
  8138                           ;My_RTCC.c: 137: num = tm->epoch;
  8139  0119DA  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8140  0119DE  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8141  0119E2  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  8142  0119E6  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  8143  0119EA  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  8144  0119EE  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  8148  0119F2  0E8B               	movlw	low epoch_to_caltime@num
  8149  0119F4  0100               	movlb	0	; () banked
  8150  0119F6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8151  0119F8  0E00               	movlw	high epoch_to_caltime@num
  8152  0119FA  0100               	movlb	0	; () banked
  8153  0119FC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8154  0119FE  0E3C               	movlw	60
  8155  011A00  0100               	movlb	0	; () banked
  8156  011A02  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8157  011A04  ECF7  F096         	call	_get_quot_rem	;wreg free
  8158  011A08  0100               	movlb	0	; () banked
  8159  011A0A  EE20 F004          	lfsr	2,4
  8160  011A0E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8161  011A10  26D9               	addwf	fsr2l,f,c
  8162  011A12  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8163  011A14  22DA               	addwfc	fsr2h,f,c
  8164  011A16  0100               	movlb	0	; () banked
  8165  011A18  C079  FFDF         	movff	?_get_quot_rem,indf2
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  8169  011A1C  0E8B               	movlw	low epoch_to_caltime@num
  8170  011A1E  0100               	movlb	0	; () banked
  8171  011A20  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8172  011A22  0E00               	movlw	high epoch_to_caltime@num
  8173  011A24  0100               	movlb	0	; () banked
  8174  011A26  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8175  011A28  0E3C               	movlw	60
  8176  011A2A  0100               	movlb	0	; () banked
  8177  011A2C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8178  011A2E  ECF7  F096         	call	_get_quot_rem	;wreg free
  8179  011A32  0100               	movlb	0	; () banked
  8180  011A34  EE20 F005          	lfsr	2,5
  8181  011A38  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8182  011A3A  26D9               	addwf	fsr2l,f,c
  8183  011A3C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8184  011A3E  22DA               	addwfc	fsr2h,f,c
  8185  011A40  0100               	movlb	0	; () banked
  8186  011A42  C079  FFDF         	movff	?_get_quot_rem,indf2
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  8190  011A46  0E8B               	movlw	low epoch_to_caltime@num
  8191  011A48  0100               	movlb	0	; () banked
  8192  011A4A  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8193  011A4C  0E00               	movlw	high epoch_to_caltime@num
  8194  011A4E  0100               	movlb	0	; () banked
  8195  011A50  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8196  011A52  0E18               	movlw	24
  8197  011A54  0100               	movlb	0	; () banked
  8198  011A56  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8199  011A58  ECF7  F096         	call	_get_quot_rem	;wreg free
  8200  011A5C  0100               	movlb	0	; () banked
  8201  011A5E  EE20 F006          	lfsr	2,6
  8202  011A62  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8203  011A64  26D9               	addwf	fsr2l,f,c
  8204  011A66  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8205  011A68  22DA               	addwfc	fsr2h,f,c
  8206  011A6A  0100               	movlb	0	; () banked
  8207  011A6C  C079  FFDF         	movff	?_get_quot_rem,indf2
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;My_RTCC.c: 141: day = num;
  8211  011A70  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8212  011A74  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;My_RTCC.c: 142: day_since_epoch = day;
  8216  011A78  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8217  011A7C  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;My_RTCC.c: 144: num += 6;
  8221  011A80  0E06               	movlw	6
  8222  011A82  0100               	movlb	0	; () banked
  8223  011A84  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  8224  011A86  0E00               	movlw	0
  8225  011A88  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8226  011A8A  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8227  011A8C  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  8231  011A8E  0E8B               	movlw	low epoch_to_caltime@num
  8232  011A90  0100               	movlb	0	; () banked
  8233  011A92  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8234  011A94  0E00               	movlw	high epoch_to_caltime@num
  8235  011A96  0100               	movlb	0	; () banked
  8236  011A98  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8237  011A9A  0E07               	movlw	7
  8238  011A9C  0100               	movlb	0	; () banked
  8239  011A9E  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8240  011AA0  ECF7  F096         	call	_get_quot_rem	;wreg free
  8241  011AA4  0100               	movlb	0	; () banked
  8242  011AA6  EE20 F007          	lfsr	2,7
  8243  011AAA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8244  011AAC  26D9               	addwf	fsr2l,f,c
  8245  011AAE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8246  011AB0  22DA               	addwfc	fsr2h,f,c
  8247  011AB2  0100               	movlb	0	; () banked
  8248  011AB4  C079  FFDF         	movff	?_get_quot_rem,indf2
  8249                           
  8250                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  8251  011AB8  D03F               	goto	l9339
  8252  011ABA                     l951:
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;My_RTCC.c: 155: LATB2 = 1;
  8256  011ABA  848A               	bsf	3978,2,c	;volatile
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  8260  011ABC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8261  011AC0  0100               	movlb	0	; () banked
  8262  011AC2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8263  011AC4  ECD6  F094         	call	_month_length
  8264  011AC8  0100               	movlb	0	; () banked
  8265  011ACA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8266  011ACC  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8267  011ACE  0100               	movlb	0	; () banked
  8268  011AD0  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8269  011AD2  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8270  011AD4  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8271  011AD6  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8272  011AD8  0100               	movlb	0	; () banked
  8273  011ADA  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  8274  011ADC  0100               	movlb	0	; () banked
  8275  011ADE  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8276  011AE0  0100               	movlb	0	; () banked
  8277  011AE2  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  8278  011AE4  0100               	movlb	0	; () banked
  8279  011AE6  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8280  011AE8  0100               	movlb	0	; () banked
  8281  011AEA  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8282  011AEC  0100               	movlb	0	; () banked
  8283  011AEE  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;My_RTCC.c: 157: if (month == 12) {
  8287  011AF0  0E0C               	movlw	12
  8288  011AF2  0100               	movlb	0	; () banked
  8289  011AF4  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8290  011AF6  A4D8               	btfss	status,2,c
  8291  011AF8  D019               	goto	l9333
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;My_RTCC.c: 158: month = 1;
  8295  011AFA  0E01               	movlw	1
  8296  011AFC  0100               	movlb	0	; () banked
  8297  011AFE  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;My_RTCC.c: 159: year++;
  8301  011B00  0100               	movlb	0	; () banked
  8302  011B02  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;My_RTCC.c: 161: if (year >= 100) {
  8306  011B04  0E63               	movlw	99
  8307  011B06  0100               	movlb	0	; () banked
  8308  011B08  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8309  011B0A  D012               	goto	l9335
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  8313  011B0C  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8314  011B10  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8315  011B14  0E80               	movlw	128
  8316  011B16  5EDE               	subwf	postinc2,f,c
  8317  011B18  0E13               	movlw	19
  8318  011B1A  5ADE               	subwfb	postinc2,f,c
  8319  011B1C  0E19               	movlw	25
  8320  011B1E  5ADE               	subwfb	postinc2,f,c
  8321  011B20  0EBC               	movlw	188
  8322  011B22  5ADE               	subwfb	postinc2,f,c
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;My_RTCC.c: 163: year = 0;
  8326  011B24  0E00               	movlw	0
  8327  011B26  0100               	movlb	0	; () banked
  8328  011B28  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;My_RTCC.c: 164: }
  8332                           ;My_RTCC.c: 165: } else {
  8333  011B2A  D002               	goto	l9335
  8334  011B2C                     l9333:
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;My_RTCC.c: 166: month++;
  8338  011B2C  0100               	movlb	0	; () banked
  8339  011B2E  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  8340  011B30                     l9335:
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;My_RTCC.c: 167: }
  8344                           ;My_RTCC.c: 168: month_cache = month;
  8345  011B30  C08A  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;My_RTCC.c: 169: year_cache = year;
  8349  011B34  C089  F0F1         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8350  011B38                     l9339:
  8351                           
  8352                           ; BSR set to: 0
  8353  011B38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8354  011B3C  0100               	movlb	0	; () banked
  8355  011B3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8356  011B40  ECD6  F094         	call	_month_length
  8357  011B44  0100               	movlb	0	; () banked
  8358  011B46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8359  011B48  0100               	movlb	0	; () banked
  8360  011B4A  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  8361  011B4C  0100               	movlb	0	; () banked
  8362  011B4E  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  8363  011B50  0E00               	movlw	0
  8364  011B52  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8365  011B54  B0D8               	btfsc	status,0,c
  8366  011B56  D7B1               	goto	l951
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;My_RTCC.c: 170: }
  8370                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  8371                           
  8372                           ; BSR set to: 0
  8373  011B58  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8374  011B5C  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8375  011B60  0100               	movlb	0	; () banked
  8376  011B62  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8377  011B64  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8378  011B66  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8379  011B68  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8380  011B6A  0100               	movlb	0	; () banked
  8381  011B6C  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8382  011B6E  0100               	movlb	0	; () banked
  8383  011B70  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8384  011B72  0101               	movlb	1	; () banked
  8385  011B74  6F1B               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8386  011B76  0100               	movlb	0	; () banked
  8387  011B78  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8388  011B7A  0100               	movlb	0	; () banked
  8389  011B7C  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8390  011B7E  0101               	movlb	1	; () banked
  8391  011B80  6F1C               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8392                           
  8393                           ; BSR set to: 1
  8394                           ;My_RTCC.c: 172: day++;
  8395  011B82  0100               	movlb	0	; () banked
  8396  011B84  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8397  011B86  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;My_RTCC.c: 174: tm->YY = year;
  8401  011B88  0100               	movlb	0	; () banked
  8402  011B8A  EE20 F00A          	lfsr	2,10
  8403  011B8E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8404  011B90  26D9               	addwf	fsr2l,f,c
  8405  011B92  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8406  011B94  22DA               	addwfc	fsr2h,f,c
  8407  011B96  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;My_RTCC.c: 175: tm->MM = month;
  8411  011B9A  0100               	movlb	0	; () banked
  8412  011B9C  EE20 F009          	lfsr	2,9
  8413  011BA0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8414  011BA2  26D9               	addwf	fsr2l,f,c
  8415  011BA4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8416  011BA6  22DA               	addwfc	fsr2h,f,c
  8417  011BA8  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;My_RTCC.c: 176: tm->DD = day;
  8421  011BAC  0100               	movlb	0	; () banked
  8422  011BAE  EE20 F008          	lfsr	2,8
  8423  011BB2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8424  011BB4  26D9               	addwf	fsr2l,f,c
  8425  011BB6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8426  011BB8  22DA               	addwfc	fsr2h,f,c
  8427  011BBA  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8428                           
  8429                           ; BSR set to: 0
  8430  011BBE  0012               	return		;funcret
  8431  011BC0                     __end_of_epoch_to_caltime:
  8432                           	opt stack 0
  8433                           tblptru	equ	0xFF8
  8434                           tblptrh	equ	0xFF7
  8435                           tblptrl	equ	0xFF6
  8436                           tablat	equ	0xFF5
  8437                           prodh	equ	0xFF4
  8438                           prodl	equ	0xFF3
  8439                           intcon	equ	0xFF2
  8440                           intcon2	equ	0xFF1
  8441                           indf0	equ	0xFEF
  8442                           postinc0	equ	0xFEE
  8443                           fsr0h	equ	0xFEA
  8444                           fsr0l	equ	0xFE9
  8445                           wreg	equ	0xFE8
  8446                           postinc1	equ	0xFE6
  8447                           postdec1	equ	0xFE5
  8448                           fsr1h	equ	0xFE2
  8449                           fsr1l	equ	0xFE1
  8450                           indf2	equ	0xFDF
  8451                           postinc2	equ	0xFDE
  8452                           postdec2	equ	0xFDD
  8453                           fsr2h	equ	0xFDA
  8454                           fsr2l	equ	0xFD9
  8455                           status	equ	0xFD8
  8456                           
  8457 ;; *************** function _get_quot_rem *****************
  8458 ;; Defined at:
  8459 ;;		line 80 in file "../My_library/My_RTCC.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8462 ;;		 -> epoch_to_caltime@num(4), 
  8463 ;;  div             1   27[BANK0 ] unsigned char 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  num             4   29[BANK0 ] unsigned long 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  4   25[BANK0 ] unsigned long 
  8468 ;; Registers used:
  8469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8476 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;Total ram usage:        8 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:   13
  8482 ;; This function calls:
  8483 ;;		___lldiv
  8484 ;;		___lmul
  8485 ;; This function is called by:
  8486 ;;		_epoch_to_caltime
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text29
  8491  012DEE                     __ptext29:
  8492                           	opt stack 0
  8493  012DEE                     _get_quot_rem:
  8494                           	opt stack 11
  8495                           
  8496                           ;My_RTCC.c: 83: epoch_t num = *quot;
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;incstack = 0
  8500  012DEE  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8501  012DF2  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8502  012DF6  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8503  012DFA  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8504  012DFE  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8505  012E02  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8506                           
  8507                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  8508  012E06  0100               	movlb	0	; () banked
  8509  012E08  517B               	movf	get_quot_rem@div& (0+255),w,b
  8510  012E0A  0100               	movlb	0	; () banked
  8511  012E0C  6F64               	movwf	___lldiv@divisor& (0+255),b
  8512  012E0E  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8513  012E10  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8514  012E12  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8515  012E14  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8516  012E18  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8517  012E1C  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8518  012E20  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8519  012E24  EC1F  F09A         	call	___lldiv	;wreg free
  8520  012E28  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8521  012E2C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8522  012E30  0100               	movlb	0	; () banked
  8523  012E32  C060  FFDE         	movff	?___lldiv,postinc2
  8524  012E36  0100               	movlb	0	; () banked
  8525  012E38  C061  FFDE         	movff	?___lldiv+1,postinc2
  8526  012E3C  0100               	movlb	0	; () banked
  8527  012E3E  C062  FFDE         	movff	?___lldiv+2,postinc2
  8528  012E42  0100               	movlb	0	; () banked
  8529  012E44  C063  FFDD         	movff	?___lldiv+3,postdec2
  8530  012E48  52DD               	movf	postdec2,f,c
  8531  012E4A  52DD               	movf	postdec2,f,c
  8532  012E4C  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8533  012E50  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8534  012E54  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8535  012E58  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8536  012E5C  0100               	movlb	0	; () banked
  8537  012E5E  517B               	movf	get_quot_rem@div& (0+255),w,b
  8538  012E60  0100               	movlb	0	; () banked
  8539  012E62  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8540  012E64  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8541  012E66  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8542  012E68  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8543  012E6A  EC13  F09F         	call	___lmul	;wreg free
  8544  012E6E  0100               	movlb	0	; () banked
  8545  012E70  1F6D               	comf	?___lmul& (0+255),f,b
  8546  012E72  0100               	movlb	0	; () banked
  8547  012E74  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8548  012E76  0100               	movlb	0	; () banked
  8549  012E78  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8550  012E7A  0100               	movlb	0	; () banked
  8551  012E7C  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8552  012E7E  0100               	movlb	0	; () banked
  8553  012E80  2B6D               	incf	?___lmul& (0+255),f,b
  8554  012E82  0E00               	movlw	0
  8555  012E84  0100               	movlb	0	; () banked
  8556  012E86  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8557  012E88  0100               	movlb	0	; () banked
  8558  012E8A  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8559  012E8C  0100               	movlb	0	; () banked
  8560  012E8E  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8561  012E90  0100               	movlb	0	; () banked
  8562  012E92  517D               	movf	get_quot_rem@num& (0+255),w,b
  8563  012E94  0100               	movlb	0	; () banked
  8564  012E96  256D               	addwf	?___lmul& (0+255),w,b
  8565  012E98  0100               	movlb	0	; () banked
  8566  012E9A  6F79               	movwf	?_get_quot_rem& (0+255),b
  8567  012E9C  0100               	movlb	0	; () banked
  8568  012E9E  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8569  012EA0  0100               	movlb	0	; () banked
  8570  012EA2  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8571  012EA4  0100               	movlb	0	; () banked
  8572  012EA6  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8573  012EA8  0100               	movlb	0	; () banked
  8574  012EAA  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8575  012EAC  0100               	movlb	0	; () banked
  8576  012EAE  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8577  012EB0  0100               	movlb	0	; () banked
  8578  012EB2  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8579  012EB4  0100               	movlb	0	; () banked
  8580  012EB6  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8581  012EB8  0100               	movlb	0	; () banked
  8582  012EBA  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8583  012EBC  0100               	movlb	0	; () banked
  8584  012EBE  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8585  012EC0  0012               	return	
  8586  012EC2                     __end_of_get_quot_rem:
  8587                           	opt stack 0
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           intcon	equ	0xFF2
  8595                           intcon2	equ	0xFF1
  8596                           indf0	equ	0xFEF
  8597                           postinc0	equ	0xFEE
  8598                           fsr0h	equ	0xFEA
  8599                           fsr0l	equ	0xFE9
  8600                           wreg	equ	0xFE8
  8601                           postinc1	equ	0xFE6
  8602                           postdec1	equ	0xFE5
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           indf2	equ	0xFDF
  8606                           postinc2	equ	0xFDE
  8607                           postdec2	equ	0xFDD
  8608                           fsr2h	equ	0xFDA
  8609                           fsr2l	equ	0xFD9
  8610                           status	equ	0xFD8
  8611                           
  8612 ;; *************** function _caltime_to_RTCC *****************
  8613 ;; Defined at:
  8614 ;;		line 105 in file "../My_library/My_RTCC.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  tm              2   22[BANK0 ] PTR struct .
  8617 ;;		 -> now(14), 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;		None
  8620 ;; Return value:  Size  Location     Type
  8621 ;;		None               void
  8622 ;; Registers used:
  8623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8633 ;;Total ram usage:        2 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; Hardware stack levels required when called:   14
  8636 ;; This function calls:
  8637 ;;		_d_to_x
  8638 ;; This function is called by:
  8639 ;;		_RTCC_from_caltime
  8640 ;;		_RTCC_from_epoch
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text30
  8645  012D18                     __ptext30:
  8646                           	opt stack 0
  8647  012D18                     _caltime_to_RTCC:
  8648                           	opt stack 11
  8649  012D18                     l938:
  8650  012D18  010F               	movlb	15	; () banked
  8651  012D1A  B93F               	btfsc	63,4,b	;volatile
  8652  012D1C  D7FD               	goto	l938
  8653                           
  8654                           ; BSR set to: 15
  8655                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  8656  012D1E  010F               	movlb	15	; () banked
  8657  012D20  813F               	bsf	63,0,b	;volatile
  8658                           
  8659                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  8660  012D22  010F               	movlb	15	; () banked
  8661  012D24  833F               	bsf	63,1,b	;volatile
  8662                           
  8663                           ; BSR set to: 15
  8664                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  8665  012D26  0100               	movlb	0	; () banked
  8666  012D28  EE20 F00A          	lfsr	2,10
  8667  012D2C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8668  012D2E  26D9               	addwf	fsr2l,f,c
  8669  012D30  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8670  012D32  22DA               	addwfc	fsr2h,f,c
  8671  012D34  50DF               	movf	indf2,w,c
  8672  012D36  ECFD  F0A2         	call	_d_to_x
  8673  012D3A  010F               	movlb	15	; () banked
  8674  012D3C  6F3A               	movwf	58,b	;volatile
  8675                           
  8676                           ; BSR set to: 15
  8677                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  8678  012D3E  0E00               	movlw	0
  8679  012D40  010F               	movlb	15	; () banked
  8680  012D42  6F3B               	movwf	59,b	;volatile
  8681                           
  8682                           ; BSR set to: 15
  8683                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  8684  012D44  010F               	movlb	15	; () banked
  8685  012D46  913F               	bcf	63,0,b	;volatile
  8686                           
  8687                           ; BSR set to: 15
  8688                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  8689  012D48  010F               	movlb	15	; () banked
  8690  012D4A  833F               	bsf	63,1,b	;volatile
  8691                           
  8692                           ; BSR set to: 15
  8693                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  8694  012D4C  0100               	movlb	0	; () banked
  8695  012D4E  EE20 F008          	lfsr	2,8
  8696  012D52  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8697  012D54  26D9               	addwf	fsr2l,f,c
  8698  012D56  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8699  012D58  22DA               	addwfc	fsr2h,f,c
  8700  012D5A  50DF               	movf	indf2,w,c
  8701  012D5C  ECFD  F0A2         	call	_d_to_x
  8702  012D60  010F               	movlb	15	; () banked
  8703  012D62  6F3A               	movwf	58,b	;volatile
  8704                           
  8705                           ; BSR set to: 15
  8706                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  8707  012D64  0100               	movlb	0	; () banked
  8708  012D66  EE20 F009          	lfsr	2,9
  8709  012D6A  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8710  012D6C  26D9               	addwf	fsr2l,f,c
  8711  012D6E  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8712  012D70  22DA               	addwfc	fsr2h,f,c
  8713  012D72  50DF               	movf	indf2,w,c
  8714  012D74  ECFD  F0A2         	call	_d_to_x
  8715  012D78  010F               	movlb	15	; () banked
  8716  012D7A  6F3B               	movwf	59,b	;volatile
  8717                           
  8718                           ; BSR set to: 15
  8719                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  8720  012D7C  010F               	movlb	15	; () banked
  8721  012D7E  813F               	bsf	63,0,b	;volatile
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  8725  012D80  010F               	movlb	15	; () banked
  8726  012D82  933F               	bcf	63,1,b	;volatile
  8727                           
  8728                           ; BSR set to: 15
  8729                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  8730  012D84  0100               	movlb	0	; () banked
  8731  012D86  EE20 F006          	lfsr	2,6
  8732  012D8A  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8733  012D8C  26D9               	addwf	fsr2l,f,c
  8734  012D8E  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8735  012D90  22DA               	addwfc	fsr2h,f,c
  8736  012D92  50DF               	movf	indf2,w,c
  8737  012D94  ECFD  F0A2         	call	_d_to_x
  8738  012D98  010F               	movlb	15	; () banked
  8739  012D9A  6F3A               	movwf	58,b	;volatile
  8740                           
  8741                           ; BSR set to: 15
  8742                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  8743  012D9C  0100               	movlb	0	; () banked
  8744  012D9E  EE20 F007          	lfsr	2,7
  8745  012DA2  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8746  012DA4  26D9               	addwf	fsr2l,f,c
  8747  012DA6  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8748  012DA8  22DA               	addwfc	fsr2h,f,c
  8749  012DAA  50DF               	movf	indf2,w,c
  8750  012DAC  ECFD  F0A2         	call	_d_to_x
  8751  012DB0  010F               	movlb	15	; () banked
  8752  012DB2  6F3B               	movwf	59,b	;volatile
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  8756  012DB4  010F               	movlb	15	; () banked
  8757  012DB6  913F               	bcf	63,0,b	;volatile
  8758                           
  8759                           ; BSR set to: 15
  8760                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  8761  012DB8  010F               	movlb	15	; () banked
  8762  012DBA  933F               	bcf	63,1,b	;volatile
  8763                           
  8764                           ; BSR set to: 15
  8765                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  8766  012DBC  0100               	movlb	0	; () banked
  8767  012DBE  EE20 F004          	lfsr	2,4
  8768  012DC2  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8769  012DC4  26D9               	addwf	fsr2l,f,c
  8770  012DC6  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8771  012DC8  22DA               	addwfc	fsr2h,f,c
  8772  012DCA  50DF               	movf	indf2,w,c
  8773  012DCC  ECFD  F0A2         	call	_d_to_x
  8774  012DD0  010F               	movlb	15	; () banked
  8775  012DD2  6F3A               	movwf	58,b	;volatile
  8776                           
  8777                           ; BSR set to: 15
  8778                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  8779  012DD4  0100               	movlb	0	; () banked
  8780  012DD6  EE20 F005          	lfsr	2,5
  8781  012DDA  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8782  012DDC  26D9               	addwf	fsr2l,f,c
  8783  012DDE  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8784  012DE0  22DA               	addwfc	fsr2h,f,c
  8785  012DE2  50DF               	movf	indf2,w,c
  8786  012DE4  ECFD  F0A2         	call	_d_to_x
  8787  012DE8  010F               	movlb	15	; () banked
  8788  012DEA  6F3B               	movwf	59,b	;volatile
  8789                           
  8790                           ; BSR set to: 15
  8791  012DEC  0012               	return		;funcret
  8792  012DEE                     __end_of_caltime_to_RTCC:
  8793                           	opt stack 0
  8794                           tblptru	equ	0xFF8
  8795                           tblptrh	equ	0xFF7
  8796                           tblptrl	equ	0xFF6
  8797                           tablat	equ	0xFF5
  8798                           prodh	equ	0xFF4
  8799                           prodl	equ	0xFF3
  8800                           intcon	equ	0xFF2
  8801                           intcon2	equ	0xFF1
  8802                           indf0	equ	0xFEF
  8803                           postinc0	equ	0xFEE
  8804                           fsr0h	equ	0xFEA
  8805                           fsr0l	equ	0xFE9
  8806                           wreg	equ	0xFE8
  8807                           postinc1	equ	0xFE6
  8808                           postdec1	equ	0xFE5
  8809                           fsr1h	equ	0xFE2
  8810                           fsr1l	equ	0xFE1
  8811                           indf2	equ	0xFDF
  8812                           postinc2	equ	0xFDE
  8813                           postdec2	equ	0xFDD
  8814                           fsr2h	equ	0xFDA
  8815                           fsr2l	equ	0xFD9
  8816                           status	equ	0xFD8
  8817                           
  8818 ;; *************** function _d_to_x *****************
  8819 ;; Defined at:
  8820 ;;		line 45 in file "../My_library/My_RTCC.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  dec             1    wreg     unsigned char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  dec             1   21[BANK0 ] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      unsigned char 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;Total ram usage:        1 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:   13
  8841 ;; This function calls:
  8842 ;;		___awdiv
  8843 ;; This function is called by:
  8844 ;;		_caltime_to_RTCC
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text31
  8849  0145FA                     __ptext31:
  8850                           	opt stack 0
  8851  0145FA                     _d_to_x:
  8852                           	opt stack 11
  8853                           
  8854                           ; BSR set to: 15
  8855                           ;incstack = 0
  8856                           ;d_to_x@dec stored from wreg
  8857  0145FA  0100               	movlb	0	; () banked
  8858  0145FC  6F75               	movwf	d_to_x@dec& (0+255),b
  8859                           
  8860                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  8861  0145FE  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
  8862  014602  0100               	movlb	0	; () banked
  8863  014604  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
  8864  014606  0E00               	movlw	0
  8865  014608  0100               	movlb	0	; () banked
  8866  01460A  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  8867  01460C  0E0A               	movlw	10
  8868  01460E  6F6F               	movwf	___awdiv@divisor& (0+255),b
  8869  014610  EC62  F099         	call	___awdiv	;wreg free
  8870  014614  0100               	movlb	0	; () banked
  8871  014616  516D               	movf	?___awdiv& (0+255),w,b
  8872  014618  0D06               	mullw	6
  8873  01461A  50F3               	movf	prodl,w,c
  8874  01461C  0100               	movlb	0	; () banked
  8875  01461E  2575               	addwf	d_to_x@dec& (0+255),w,b
  8876  014620  0012               	return	
  8877  014622                     __end_of_d_to_x:
  8878                           	opt stack 0
  8879                           tblptru	equ	0xFF8
  8880                           tblptrh	equ	0xFF7
  8881                           tblptrl	equ	0xFF6
  8882                           tablat	equ	0xFF5
  8883                           prodh	equ	0xFF4
  8884                           prodl	equ	0xFF3
  8885                           intcon	equ	0xFF2
  8886                           intcon2	equ	0xFF1
  8887                           indf0	equ	0xFEF
  8888                           postinc0	equ	0xFEE
  8889                           fsr0h	equ	0xFEA
  8890                           fsr0l	equ	0xFE9
  8891                           wreg	equ	0xFE8
  8892                           postinc1	equ	0xFE6
  8893                           postdec1	equ	0xFE5
  8894                           fsr1h	equ	0xFE2
  8895                           fsr1l	equ	0xFE1
  8896                           indf2	equ	0xFDF
  8897                           postinc2	equ	0xFDE
  8898                           postdec2	equ	0xFDD
  8899                           fsr2h	equ	0xFDA
  8900                           fsr2l	equ	0xFD9
  8901                           status	equ	0xFD8
  8902                           
  8903 ;; *************** function ___awdiv *****************
  8904 ;; Defined at:
  8905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  dividend        2   13[BANK0 ] int 
  8908 ;;  divisor         2   15[BANK0 ] int 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  quotient        2   19[BANK0 ] int 
  8911 ;;  sign            1   18[BANK0 ] unsigned char 
  8912 ;;  counter         1   17[BANK0 ] unsigned char 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  2   13[BANK0 ] int 
  8915 ;; Registers used:
  8916 ;;		wreg, status,2, status,0
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;Total ram usage:        8 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:   12
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_d_to_x
  8933 ;;		_terminal_operation
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text32
  8938  0132C4                     __ptext32:
  8939                           	opt stack 0
  8940  0132C4                     ___awdiv:
  8941                           	opt stack 11
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;incstack = 0
  8945  0132C4  0E00               	movlw	0
  8946  0132C6  0100               	movlb	0	; () banked
  8947  0132C8  6F72               	movwf	___awdiv@sign& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950  0132CA  0100               	movlb	0	; () banked
  8951  0132CC  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8952  0132CE  D008               	goto	l9087
  8953                           
  8954                           ; BSR set to: 0
  8955  0132D0  0100               	movlb	0	; () banked
  8956  0132D2  6D6F               	negf	___awdiv@divisor& (0+255),b
  8957  0132D4  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8958  0132D6  B0D8               	btfsc	status,0,c
  8959  0132D8  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8960                           
  8961                           ; BSR set to: 0
  8962  0132DA  0E01               	movlw	1
  8963  0132DC  0100               	movlb	0	; () banked
  8964  0132DE  6F72               	movwf	___awdiv@sign& (0+255),b
  8965  0132E0                     l9087:
  8966                           
  8967                           ; BSR set to: 0
  8968  0132E0  0100               	movlb	0	; () banked
  8969  0132E2  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8970  0132E4  D008               	goto	l9093
  8971                           
  8972                           ; BSR set to: 0
  8973  0132E6  0100               	movlb	0	; () banked
  8974  0132E8  6D6D               	negf	___awdiv@dividend& (0+255),b
  8975  0132EA  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8976  0132EC  B0D8               	btfsc	status,0,c
  8977  0132EE  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8978                           
  8979                           ; BSR set to: 0
  8980  0132F0  0E01               	movlw	1
  8981  0132F2  0100               	movlb	0	; () banked
  8982  0132F4  1B72               	xorwf	___awdiv@sign& (0+255),f,b
  8983  0132F6                     l9093:
  8984                           
  8985                           ; BSR set to: 0
  8986  0132F6  0E00               	movlw	0
  8987  0132F8  0100               	movlb	0	; () banked
  8988  0132FA  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
  8989  0132FC  0E00               	movlw	0
  8990  0132FE  6F73               	movwf	___awdiv@quotient& (0+255),b
  8991                           
  8992                           ; BSR set to: 0
  8993  013300  0100               	movlb	0	; () banked
  8994  013302  516F               	movf	___awdiv@divisor& (0+255),w,b
  8995  013304  0100               	movlb	0	; () banked
  8996  013306  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8997  013308  B4D8               	btfsc	status,2,c
  8998  01330A  D02C               	goto	l9115
  8999                           
  9000                           ; BSR set to: 0
  9001  01330C  0E01               	movlw	1
  9002  01330E  0100               	movlb	0	; () banked
  9003  013310  6F71               	movwf	___awdiv@counter& (0+255),b
  9004  013312  D006               	goto	l9101
  9005  013314                     l9099:
  9006                           
  9007                           ; BSR set to: 0
  9008  013314  0100               	movlb	0	; () banked
  9009  013316  90D8               	bcf	status,0,c
  9010  013318  376F               	rlcf	___awdiv@divisor& (0+255),f,b
  9011  01331A  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9012  01331C  0100               	movlb	0	; () banked
  9013  01331E  2B71               	incf	___awdiv@counter& (0+255),f,b
  9014  013320                     l9101:
  9015                           
  9016                           ; BSR set to: 0
  9017  013320  0100               	movlb	0	; () banked
  9018  013322  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9019  013324  D7F7               	goto	l9099
  9020  013326                     l9103:
  9021                           
  9022                           ; BSR set to: 0
  9023  013326  0100               	movlb	0	; () banked
  9024  013328  90D8               	bcf	status,0,c
  9025  01332A  3773               	rlcf	___awdiv@quotient& (0+255),f,b
  9026  01332C  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9027                           
  9028                           ; BSR set to: 0
  9029  01332E  0100               	movlb	0	; () banked
  9030  013330  516F               	movf	___awdiv@divisor& (0+255),w,b
  9031  013332  0100               	movlb	0	; () banked
  9032  013334  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
  9033  013336  0100               	movlb	0	; () banked
  9034  013338  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9035  01333A  0100               	movlb	0	; () banked
  9036  01333C  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9037  01333E  A0D8               	btfss	status,0,c
  9038  013340  D00A               	goto	l9111
  9039                           
  9040                           ; BSR set to: 0
  9041  013342  0100               	movlb	0	; () banked
  9042  013344  516F               	movf	___awdiv@divisor& (0+255),w,b
  9043  013346  0100               	movlb	0	; () banked
  9044  013348  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
  9045  01334A  0100               	movlb	0	; () banked
  9046  01334C  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9047  01334E  0100               	movlb	0	; () banked
  9048  013350  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9049                           
  9050                           ; BSR set to: 0
  9051  013352  0100               	movlb	0	; () banked
  9052  013354  8173               	bsf	___awdiv@quotient& (0+255),0,b
  9053  013356                     l9111:
  9054                           
  9055                           ; BSR set to: 0
  9056  013356  0100               	movlb	0	; () banked
  9057  013358  90D8               	bcf	status,0,c
  9058  01335A  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9059  01335C  336F               	rrcf	___awdiv@divisor& (0+255),f,b
  9060                           
  9061                           ; BSR set to: 0
  9062  01335E  0100               	movlb	0	; () banked
  9063  013360  2F71               	decfsz	___awdiv@counter& (0+255),f,b
  9064  013362  D7E1               	goto	l9103
  9065  013364                     l9115:
  9066                           
  9067                           ; BSR set to: 0
  9068  013364  0100               	movlb	0	; () banked
  9069  013366  5172               	movf	___awdiv@sign& (0+255),w,b
  9070  013368  0100               	movlb	0	; () banked
  9071  01336A  B4D8               	btfsc	status,2,c
  9072  01336C  D005               	goto	l9119
  9073                           
  9074                           ; BSR set to: 0
  9075  01336E  0100               	movlb	0	; () banked
  9076  013370  6D73               	negf	___awdiv@quotient& (0+255),b
  9077  013372  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9078  013374  B0D8               	btfsc	status,0,c
  9079  013376  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9080  013378                     l9119:
  9081                           
  9082                           ; BSR set to: 0
  9083  013378  C073  F06D         	movff	___awdiv@quotient,?___awdiv
  9084  01337C  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
  9085  013380  0012               	return	
  9086  013382                     __end_of___awdiv:
  9087                           	opt stack 0
  9088                           tblptru	equ	0xFF8
  9089                           tblptrh	equ	0xFF7
  9090                           tblptrl	equ	0xFF6
  9091                           tablat	equ	0xFF5
  9092                           prodh	equ	0xFF4
  9093                           prodl	equ	0xFF3
  9094                           intcon	equ	0xFF2
  9095                           intcon2	equ	0xFF1
  9096                           indf0	equ	0xFEF
  9097                           postinc0	equ	0xFEE
  9098                           fsr0h	equ	0xFEA
  9099                           fsr0l	equ	0xFE9
  9100                           wreg	equ	0xFE8
  9101                           postinc1	equ	0xFE6
  9102                           postdec1	equ	0xFE5
  9103                           fsr1h	equ	0xFE2
  9104                           fsr1l	equ	0xFE1
  9105                           indf2	equ	0xFDF
  9106                           postinc2	equ	0xFDE
  9107                           postdec2	equ	0xFDD
  9108                           fsr2h	equ	0xFDA
  9109                           fsr2l	equ	0xFD9
  9110                           status	equ	0xFD8
  9111                           
  9112 ;; *************** function _PWM_init *****************
  9113 ;; Defined at:
  9114 ;;		line 80 in file "PIC18F27J53-killifish_light06.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  PR              1    wreg     unsigned char 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  PR              1    0[BANK0 ] unsigned char 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;		None               void
  9121 ;; Registers used:
  9122 ;;		wreg, status,2, status,0
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;Total ram usage:        1 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:   12
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_main_init
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text33
  9143  013382                     __ptext33:
  9144                           	opt stack 0
  9145  013382                     _PWM_init:
  9146                           	opt stack 17
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;incstack = 0
  9150                           ;PWM_init@PR stored from wreg
  9151  013382  0100               	movlb	0	; () banked
  9152  013384  6F60               	movwf	PWM_init@PR& (0+255),b
  9153                           
  9154                           ;PIC18F27J53-killifish_light06.c: 81: PPSCONbits.IOLOCK = 0;
  9155  013386  010E               	movlb	14	; () banked
  9156  013388  91BF               	bcf	191,0,b	;volatile
  9157                           
  9158                           ;PIC18F27J53-killifish_light06.c: 82: if (PPSCONbits.IOLOCK != 0) {
  9159  01338A  010E               	movlb	14	; () banked
  9160  01338C  A1BF               	btfss	191,0,b	;volatile
  9161  01338E  D006               	goto	l1597
  9162                           
  9163                           ; BSR set to: 14
  9164                           ;PIC18F27J53-killifish_light06.c: 83: EECON2 = 0x55;
  9165  013390  0E55               	movlw	85
  9166  013392  6EA7               	movwf	4007,c	;volatile
  9167                           
  9168                           ;PIC18F27J53-killifish_light06.c: 84: EECON2 = 0xAA;
  9169  013394  0EAA               	movlw	170
  9170  013396  6EA7               	movwf	4007,c	;volatile
  9171                           
  9172                           ; BSR set to: 14
  9173                           ;PIC18F27J53-killifish_light06.c: 85: PPSCONbits.IOLOCK = 0;
  9174  013398  010E               	movlb	14	; () banked
  9175  01339A  91BF               	bcf	191,0,b	;volatile
  9176  01339C                     l1597:
  9177                           
  9178                           ; BSR set to: 14
  9179                           ;PIC18F27J53-killifish_light06.c: 86: }
  9180                           ;PIC18F27J53-killifish_light06.c: 88: RPOR3 = 14;
  9181  01339C  0E0E               	movlw	14
  9182  01339E  010E               	movlb	14	; () banked
  9183  0133A0  6FC3               	movwf	195,b	;volatile
  9184                           
  9185                           ;PIC18F27J53-killifish_light06.c: 89: RPOR4 = 18;
  9186  0133A2  0E12               	movlw	18
  9187  0133A4  010E               	movlb	14	; () banked
  9188  0133A6  6FC4               	movwf	196,b	;volatile
  9189                           
  9190                           ;PIC18F27J53-killifish_light06.c: 90: RPOR5 = 22;
  9191  0133A8  0E16               	movlw	22
  9192  0133AA  010E               	movlb	14	; () banked
  9193  0133AC  6FC5               	movwf	197,b	;volatile
  9194                           
  9195                           ; BSR set to: 14
  9196                           ;PIC18F27J53-killifish_light06.c: 92: CCP1CONbits.CCP1M = 12;
  9197  0133AE  50BA               	movf	4026,w,c	;volatile
  9198  0133B0  0BF0               	andlw	-16
  9199  0133B2  090C               	iorlw	12
  9200  0133B4  6EBA               	movwf	4026,c	;volatile
  9201                           
  9202                           ; BSR set to: 14
  9203                           ;PIC18F27J53-killifish_light06.c: 93: CCP1CONbits.P1M = 0;
  9204  0133B6  0E3F               	movlw	-193
  9205  0133B8  16BA               	andwf	4026,f,c	;volatile
  9206                           
  9207                           ; BSR set to: 14
  9208                           ;PIC18F27J53-killifish_light06.c: 94: CCPTMRS0bits.C1TSEL = 0;
  9209  0133BA  010F               	movlb	15	; () banked
  9210  0133BC  9152               	bcf	82,0,b	;volatile
  9211  0133BE  9352               	bcf	82,1,b	;volatile
  9212  0133C0  9552               	bcf	82,2,b	;volatile
  9213                           
  9214                           ; BSR set to: 15
  9215                           ;PIC18F27J53-killifish_light06.c: 95: CCPR1Lbits.CCPR1L = 0;
  9216  0133C2  0E00               	movlw	0
  9217  0133C4  6EBB               	movwf	4027,c	;volatile
  9218                           
  9219                           ; BSR set to: 15
  9220                           ;PIC18F27J53-killifish_light06.c: 96: CCP1CONbits.DC1B = 0;
  9221  0133C6  0ECF               	movlw	-49
  9222  0133C8  16BA               	andwf	4026,f,c	;volatile
  9223                           
  9224                           ; BSR set to: 15
  9225                           ;PIC18F27J53-killifish_light06.c: 98: CCP2CONbits.CCP2M = 12;
  9226  0133CA  50B4               	movf	4020,w,c	;volatile
  9227  0133CC  0BF0               	andlw	-16
  9228  0133CE  090C               	iorlw	12
  9229  0133D0  6EB4               	movwf	4020,c	;volatile
  9230                           
  9231                           ; BSR set to: 15
  9232                           ;PIC18F27J53-killifish_light06.c: 99: CCP2CONbits.P2M = 0;
  9233  0133D2  0E3F               	movlw	-193
  9234  0133D4  16B4               	andwf	4020,f,c	;volatile
  9235                           
  9236                           ; BSR set to: 15
  9237                           ;PIC18F27J53-killifish_light06.c: 100: CCPTMRS0bits.C2TSEL = 0;
  9238  0133D6  010F               	movlb	15	; () banked
  9239  0133D8  9752               	bcf	82,3,b	;volatile
  9240  0133DA  9952               	bcf	82,4,b	;volatile
  9241  0133DC  9B52               	bcf	82,5,b	;volatile
  9242                           
  9243                           ; BSR set to: 15
  9244                           ;PIC18F27J53-killifish_light06.c: 101: CCPR2Lbits.CCPR2L = 0;
  9245  0133DE  0E00               	movlw	0
  9246  0133E0  6EB5               	movwf	4021,c	;volatile
  9247                           
  9248                           ; BSR set to: 15
  9249                           ;PIC18F27J53-killifish_light06.c: 102: CCP2CONbits.DC2B = 0;
  9250  0133E2  0ECF               	movlw	-49
  9251  0133E4  16B4               	andwf	4020,f,c	;volatile
  9252                           
  9253                           ; BSR set to: 15
  9254                           ;PIC18F27J53-killifish_light06.c: 104: CCP3CONbits.CCP3M = 12;
  9255  0133E6  010F               	movlb	15	; () banked
  9256  0133E8  5115               	movf	21,w,b	;volatile
  9257  0133EA  0BF0               	andlw	-16
  9258  0133EC  090C               	iorlw	12
  9259  0133EE  6F15               	movwf	21,b	;volatile
  9260                           
  9261                           ; BSR set to: 15
  9262                           ;PIC18F27J53-killifish_light06.c: 105: CCP3CONbits.P3M = 0;
  9263  0133F0  0E3F               	movlw	-193
  9264  0133F2  010F               	movlb	15	; () banked
  9265  0133F4  1715               	andwf	21,f,b	;volatile
  9266                           
  9267                           ; BSR set to: 15
  9268                           ;PIC18F27J53-killifish_light06.c: 106: CCPTMRS0bits.C3TSEL = 0;
  9269  0133F6  0E3F               	movlw	-193
  9270  0133F8  010F               	movlb	15	; () banked
  9271  0133FA  1752               	andwf	82,f,b	;volatile
  9272                           
  9273                           ; BSR set to: 15
  9274                           ;PIC18F27J53-killifish_light06.c: 107: CCPR3Lbits.CCPR3L = 0;
  9275  0133FC  0E00               	movlw	0
  9276  0133FE  010F               	movlb	15	; () banked
  9277  013400  6F16               	movwf	22,b	;volatile
  9278                           
  9279                           ; BSR set to: 15
  9280                           ;PIC18F27J53-killifish_light06.c: 108: CCP3CONbits.DC3B = 0;
  9281  013402  0ECF               	movlw	-49
  9282  013404  010F               	movlb	15	; () banked
  9283  013406  1715               	andwf	21,f,b	;volatile
  9284                           
  9285                           ; BSR set to: 15
  9286                           ;PIC18F27J53-killifish_light06.c: 110: CCP4CONbits.CCP4M = 12;
  9287  013408  010F               	movlb	15	; () banked
  9288  01340A  5112               	movf	18,w,b	;volatile
  9289  01340C  0BF0               	andlw	-16
  9290  01340E  090C               	iorlw	12
  9291  013410  6F12               	movwf	18,b	;volatile
  9292                           
  9293                           ; BSR set to: 15
  9294                           ;PIC18F27J53-killifish_light06.c: 111: CCPTMRS1bits.C4TSEL = 0;
  9295  013412  0EFC               	movlw	-4
  9296  013414  010F               	movlb	15	; () banked
  9297  013416  1751               	andwf	81,f,b	;volatile
  9298                           
  9299                           ; BSR set to: 15
  9300                           ;PIC18F27J53-killifish_light06.c: 112: CCPR4Lbits.CCPR4L = 0;
  9301  013418  0E00               	movlw	0
  9302  01341A  010F               	movlb	15	; () banked
  9303  01341C  6F13               	movwf	19,b	;volatile
  9304                           
  9305                           ; BSR set to: 15
  9306                           ;PIC18F27J53-killifish_light06.c: 113: CCP4CONbits.DC4B = 0;
  9307  01341E  0ECF               	movlw	-49
  9308  013420  010F               	movlb	15	; () banked
  9309  013422  1712               	andwf	18,f,b	;volatile
  9310                           
  9311                           ; BSR set to: 15
  9312                           ;PIC18F27J53-killifish_light06.c: 115: T2CONbits.T2OUTPS = 0;
  9313  013424  96CA               	bcf	4042,3,c	;volatile
  9314  013426  98CA               	bcf	4042,4,c	;volatile
  9315  013428  9ACA               	bcf	4042,5,c	;volatile
  9316  01342A  9CCA               	bcf	4042,6,c	;volatile
  9317                           
  9318                           ; BSR set to: 15
  9319                           ;PIC18F27J53-killifish_light06.c: 116: T2CONbits.T2CKPS = 2;
  9320  01342C  50CA               	movf	4042,w,c	;volatile
  9321  01342E  0BFC               	andlw	-4
  9322  013430  0902               	iorlw	2
  9323  013432  6ECA               	movwf	4042,c	;volatile
  9324                           
  9325                           ; BSR set to: 15
  9326                           ;PIC18F27J53-killifish_light06.c: 117: PR2 = PR - 1;
  9327  013434  0100               	movlb	0	; () banked
  9328  013436  0560               	decf	PWM_init@PR& (0+255),w,b
  9329  013438  6ECB               	movwf	4043,c	;volatile
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;PIC18F27J53-killifish_light06.c: 118: T2CONbits.TMR2ON = 1;
  9333  01343A  84CA               	bsf	4042,2,c	;volatile
  9334                           
  9335                           ; BSR set to: 0
  9336  01343C  0012               	return		;funcret
  9337  01343E                     __end_of_PWM_init:
  9338                           	opt stack 0
  9339                           tblptru	equ	0xFF8
  9340                           tblptrh	equ	0xFF7
  9341                           tblptrl	equ	0xFF6
  9342                           tablat	equ	0xFF5
  9343                           prodh	equ	0xFF4
  9344                           prodl	equ	0xFF3
  9345                           intcon	equ	0xFF2
  9346                           intcon2	equ	0xFF1
  9347                           indf0	equ	0xFEF
  9348                           postinc0	equ	0xFEE
  9349                           fsr0h	equ	0xFEA
  9350                           fsr0l	equ	0xFE9
  9351                           wreg	equ	0xFE8
  9352                           postinc1	equ	0xFE6
  9353                           postdec1	equ	0xFE5
  9354                           fsr1h	equ	0xFE2
  9355                           fsr1l	equ	0xFE1
  9356                           indf2	equ	0xFDF
  9357                           postinc2	equ	0xFDE
  9358                           postdec2	equ	0xFDD
  9359                           fsr2h	equ	0xFDA
  9360                           fsr2l	equ	0xFD9
  9361                           status	equ	0xFD8
  9362                           
  9363 ;; *************** function _OSC_init *****************
  9364 ;; Defined at:
  9365 ;;		line 8 in file "../My_library/My_PIC.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;		None
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;		None               void
  9372 ;; Registers used:
  9373 ;;		wreg, status,2
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9383 ;;Total ram usage:        0 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:   12
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_main_init
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text34
  9394  014732                     __ptext34:
  9395                           	opt stack 0
  9396  014732                     _OSC_init:
  9397                           	opt stack 17
  9398                           
  9399                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;incstack = 0
  9403  014732  88D3               	bsf	4051,4,c	;volatile
  9404  014734  8AD3               	bsf	4051,5,c	;volatile
  9405  014736  8CD3               	bsf	4051,6,c	;volatile
  9406                           
  9407                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  9408  014738  8C9B               	bsf	3995,6,c	;volatile
  9409                           
  9410                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  9411  01473A  0EFC               	movlw	-4
  9412  01473C  16D3               	andwf	4051,f,c	;volatile
  9413  01473E  0012               	return		;funcret
  9414  014740                     __end_of_OSC_init:
  9415                           	opt stack 0
  9416                           tblptru	equ	0xFF8
  9417                           tblptrh	equ	0xFF7
  9418                           tblptrl	equ	0xFF6
  9419                           tablat	equ	0xFF5
  9420                           prodh	equ	0xFF4
  9421                           prodl	equ	0xFF3
  9422                           intcon	equ	0xFF2
  9423                           intcon2	equ	0xFF1
  9424                           indf0	equ	0xFEF
  9425                           postinc0	equ	0xFEE
  9426                           fsr0h	equ	0xFEA
  9427                           fsr0l	equ	0xFE9
  9428                           wreg	equ	0xFE8
  9429                           postinc1	equ	0xFE6
  9430                           postdec1	equ	0xFE5
  9431                           fsr1h	equ	0xFE2
  9432                           fsr1l	equ	0xFE1
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           postdec2	equ	0xFDD
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function _ADC_init *****************
  9441 ;; Defined at:
  9442 ;;		line 133 in file "../My_library/My_PIC.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  p_ref           1    wreg     unsigned char 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  p_ref           1    0[BANK0 ] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;		None               void
  9449 ;; Registers used:
  9450 ;;		wreg, status,2
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9460 ;;Total ram usage:        1 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:   12
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_main_init
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text35
  9471  014690                     __ptext35:
  9472                           	opt stack 0
  9473  014690                     _ADC_init:
  9474                           	opt stack 17
  9475                           
  9476                           ;incstack = 0
  9477                           ;ADC_init@p_ref stored from wreg
  9478  014690  0100               	movlb	0	; () banked
  9479  014692  6F60               	movwf	ADC_init@p_ref& (0+255),b
  9480                           
  9481                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
  9482  014694  9EC2               	bcf	4034,7,c	;volatile
  9483                           
  9484                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
  9485  014696  0100               	movlb	0	; () banked
  9486  014698  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  9487  01469A  D002               	bra	u9995
  9488  01469C  9CC2               	bcf	4034,6,c	;volatile
  9489  01469E  D001               	bra	u9996
  9490  0146A0                     u9995:
  9491  0146A0  8CC2               	bsf	4034,6,c	;volatile
  9492  0146A2                     u9996:
  9493                           
  9494                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
  9495  0146A2  8EC1               	bsf	4033,7,c	;volatile
  9496                           
  9497                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
  9498  0146A4  9CC1               	bcf	4033,6,c	;volatile
  9499                           
  9500                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
  9501  0146A6  50C1               	movf	4033,w,c	;volatile
  9502  0146A8  0BF8               	andlw	-8
  9503  0146AA  0906               	iorlw	6
  9504  0146AC  6EC1               	movwf	4033,c	;volatile
  9505  0146AE  0012               	return		;funcret
  9506  0146B0                     __end_of_ADC_init:
  9507                           	opt stack 0
  9508                           tblptru	equ	0xFF8
  9509                           tblptrh	equ	0xFF7
  9510                           tblptrl	equ	0xFF6
  9511                           tablat	equ	0xFF5
  9512                           prodh	equ	0xFF4
  9513                           prodl	equ	0xFF3
  9514                           intcon	equ	0xFF2
  9515                           intcon2	equ	0xFF1
  9516                           indf0	equ	0xFEF
  9517                           postinc0	equ	0xFEE
  9518                           fsr0h	equ	0xFEA
  9519                           fsr0l	equ	0xFE9
  9520                           wreg	equ	0xFE8
  9521                           postinc1	equ	0xFE6
  9522                           postdec1	equ	0xFE5
  9523                           fsr1h	equ	0xFE2
  9524                           fsr1l	equ	0xFE1
  9525                           indf2	equ	0xFDF
  9526                           postinc2	equ	0xFDE
  9527                           postdec2	equ	0xFDD
  9528                           fsr2h	equ	0xFDA
  9529                           fsr2l	equ	0xFD9
  9530                           status	equ	0xFD8
  9531                           
  9532 ;; *************** function _light_task *****************
  9533 ;; Defined at:
  9534 ;;		line 229 in file "PIC18F27J53-killifish_light06.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;		None
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;  temp            4   46[BANK0 ] unsigned long 
  9539 ;;  value           1   45[BANK0 ] unsigned char 
  9540 ;;  value           1   44[BANK0 ] unsigned char 
  9541 ;;  i               1   50[BANK0 ] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;		None               void
  9544 ;; Registers used:
  9545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9552 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9553 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9554 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9555 ;;Total ram usage:       11 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:   16
  9558 ;; This function calls:
  9559 ;;		_PWM_set
  9560 ;;		_RTCC_from_RTCC
  9561 ;;		___lldiv
  9562 ;;		___llmod
  9563 ;;		___lmul
  9564 ;; This function is called by:
  9565 ;;		_main
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text36
  9570  0117B6                     __ptext36:
  9571                           	opt stack 0
  9572  0117B6                     _light_task:
  9573                           	opt stack 14
  9574                           
  9575                           ;PIC18F27J53-killifish_light06.c: 230: uint8_t i;
  9576                           ;PIC18F27J53-killifish_light06.c: 231: if (time_change_flag) {
  9577                           
  9578                           ;incstack = 0
  9579  0117B6  0100               	movlb	0	; () banked
  9580  0117B8  51F0               	movf	_time_change_flag& (0+255),w,b
  9581  0117BA  B4D8               	btfsc	status,2,c
  9582  0117BC  D0AE               	goto	l1651
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;PIC18F27J53-killifish_light06.c: 232: time_change_flag = 0;
  9586  0117BE  0E00               	movlw	0
  9587  0117C0  0100               	movlb	0	; () banked
  9588  0117C2  6FF0               	movwf	_time_change_flag& (0+255),b
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;PIC18F27J53-killifish_light06.c: 233: RTCC_from_RTCC(&now);
  9592  0117C4  0E36               	movlw	low _now
  9593  0117C6  0100               	movlb	0	; () banked
  9594  0117C8  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9595  0117CA  0E01               	movlw	high _now
  9596  0117CC  0100               	movlb	0	; () banked
  9597  0117CE  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9598  0117D0  EC85  F0A3         	call	_RTCC_from_RTCC	;wreg free
  9599                           
  9600                           ;PIC18F27J53-killifish_light06.c: 234: if (light_mode == TIME_SYNC_mode) {
  9601  0117D4  0100               	movlb	0	; () banked
  9602  0117D6  51EE               	movf	_light_mode& (0+255),w,b
  9603  0117D8  A4D8               	btfss	status,2,c
  9604  0117DA  D09F               	goto	l1651
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;PIC18F27J53-killifish_light06.c: 235: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9608  0117DC  C136  F060         	movff	_now,___llmod@dividend
  9609  0117E0  C137  F061         	movff	_now+1,___llmod@dividend+1
  9610  0117E4  C138  F062         	movff	_now+2,___llmod@dividend+2
  9611  0117E8  C139  F063         	movff	_now+3,___llmod@dividend+3
  9612  0117EC  0E80               	movlw	128
  9613  0117EE  0100               	movlb	0	; () banked
  9614  0117F0  6F64               	movwf	___llmod@divisor& (0+255),b
  9615  0117F2  0E51               	movlw	81
  9616  0117F4  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  9617  0117F6  0E01               	movlw	1
  9618  0117F8  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  9619  0117FA  0E00               	movlw	0
  9620  0117FC  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  9621  0117FE  ECE5  F09C         	call	___llmod	;wreg free
  9622  011802  C060  F08E         	movff	?___llmod,light_task@temp
  9623  011806  C061  F08F         	movff	?___llmod+1,light_task@temp+1
  9624  01180A  C062  F090         	movff	?___llmod+2,light_task@temp+2
  9625  01180E  C063  F091         	movff	?___llmod+3,light_task@temp+3
  9626                           
  9627                           ;PIC18F27J53-killifish_light06.c: 236: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9628  011812  0100               	movlb	0	; () banked
  9629  011814  5191               	movf	(light_task@temp+3)& (0+255),w,b
  9630  011816  0100               	movlb	0	; () banked
  9631  011818  1190               	iorwf	(light_task@temp+2)& (0+255),w,b
  9632  01181A  E108               	bnz	u10650
  9633  01181C  0EC1               	movlw	193
  9634  01181E  0100               	movlb	0	; () banked
  9635  011820  5D8E               	subwf	light_task@temp& (0+255),w,b
  9636  011822  0EA8               	movlw	168
  9637  011824  0100               	movlb	0	; () banked
  9638  011826  598F               	subwfb	(light_task@temp+1)& (0+255),w,b
  9639  011828  A0D8               	btfss	status,0,c
  9640  01182A  D026               	goto	l10449
  9641  01182C                     u10650:
  9642                           
  9643                           ; BSR set to: 0
  9644  01182C  C08E  F088         	movff	light_task@temp,??_light_task
  9645  011830  C08F  F089         	movff	light_task@temp+1,??_light_task+1
  9646  011834  C090  F08A         	movff	light_task@temp+2,??_light_task+2
  9647  011838  C091  F08B         	movff	light_task@temp+3,??_light_task+3
  9648  01183C  0100               	movlb	0	; () banked
  9649  01183E  1F88               	comf	??_light_task& (0+255),f,b
  9650  011840  1F89               	comf	(??_light_task+1)& (0+255),f,b
  9651  011842  1F8A               	comf	(??_light_task+2)& (0+255),f,b
  9652  011844  1F8B               	comf	(??_light_task+3)& (0+255),f,b
  9653  011846  2B88               	incf	??_light_task& (0+255),f,b
  9654  011848  0E00               	movlw	0
  9655  01184A  2389               	addwfc	(??_light_task+1)& (0+255),f,b
  9656  01184C  238A               	addwfc	(??_light_task+2)& (0+255),f,b
  9657  01184E  238B               	addwfc	(??_light_task+3)& (0+255),f,b
  9658  011850  0E80               	movlw	128
  9659  011852  0100               	movlb	0	; () banked
  9660  011854  2588               	addwf	??_light_task& (0+255),w,b
  9661  011856  0100               	movlb	0	; () banked
  9662  011858  6F8E               	movwf	light_task@temp& (0+255),b
  9663  01185A  0E51               	movlw	81
  9664  01185C  0100               	movlb	0	; () banked
  9665  01185E  2189               	addwfc	(??_light_task+1)& (0+255),w,b
  9666  011860  0100               	movlb	0	; () banked
  9667  011862  6F8F               	movwf	(light_task@temp+1)& (0+255),b
  9668  011864  0E01               	movlw	1
  9669  011866  0100               	movlb	0	; () banked
  9670  011868  218A               	addwfc	(??_light_task+2)& (0+255),w,b
  9671  01186A  0100               	movlb	0	; () banked
  9672  01186C  6F90               	movwf	(light_task@temp+2)& (0+255),b
  9673  01186E  0E00               	movlw	0
  9674  011870  0100               	movlb	0	; () banked
  9675  011872  218B               	addwfc	(??_light_task+3)& (0+255),w,b
  9676  011874  0100               	movlb	0	; () banked
  9677  011876  6F91               	movwf	(light_task@temp+3)& (0+255),b
  9678  011878                     l10449:
  9679                           
  9680                           ; BSR set to: 0
  9681                           ;PIC18F27J53-killifish_light06.c: 237: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9682  011878  90D8               	bcf	status,0,c
  9683  01187A  0100               	movlb	0	; () banked
  9684  01187C  358E               	rlcf	light_task@temp& (0+255),w,b
  9685  01187E  0100               	movlb	0	; () banked
  9686  011880  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9687  011882  0100               	movlb	0	; () banked
  9688  011884  358F               	rlcf	(light_task@temp+1)& (0+255),w,b
  9689  011886  0100               	movlb	0	; () banked
  9690  011888  6F6E               	movwf	(___lmul@multiplier+1)& (0+255),b
  9691  01188A  0100               	movlb	0	; () banked
  9692  01188C  3590               	rlcf	(light_task@temp+2)& (0+255),w,b
  9693  01188E  0100               	movlb	0	; () banked
  9694  011890  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9695  011892  0100               	movlb	0	; () banked
  9696  011894  3591               	rlcf	(light_task@temp+3)& (0+255),w,b
  9697  011896  0100               	movlb	0	; () banked
  9698  011898  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9699  01189A  0EFA               	movlw	250
  9700  01189C  0100               	movlb	0	; () banked
  9701  01189E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9702  0118A0  0E00               	movlw	0
  9703  0118A2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9704  0118A4  0E00               	movlw	0
  9705  0118A6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9706  0118A8  0E00               	movlw	0
  9707  0118AA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9708  0118AC  EC13  F09F         	call	___lmul	;wreg free
  9709  0118B0  C06D  F060         	movff	?___lmul,___lldiv@dividend
  9710  0118B4  C06E  F061         	movff	?___lmul+1,___lldiv@dividend+1
  9711  0118B8  C06F  F062         	movff	?___lmul+2,___lldiv@dividend+2
  9712  0118BC  C070  F063         	movff	?___lmul+3,___lldiv@dividend+3
  9713  0118C0  0E80               	movlw	128
  9714  0118C2  0100               	movlb	0	; () banked
  9715  0118C4  6F64               	movwf	___lldiv@divisor& (0+255),b
  9716  0118C6  0E51               	movlw	81
  9717  0118C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9718  0118CA  0E01               	movlw	1
  9719  0118CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9720  0118CE  0E00               	movlw	0
  9721  0118D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9722  0118D2  EC1F  F09A         	call	___lldiv	;wreg free
  9723  0118D6  C060  F08E         	movff	?___lldiv,light_task@temp
  9724  0118DA  C061  F08F         	movff	?___lldiv+1,light_task@temp+1
  9725  0118DE  C062  F090         	movff	?___lldiv+2,light_task@temp+2
  9726  0118E2  C063  F091         	movff	?___lldiv+3,light_task@temp+3
  9727                           
  9728                           ;PIC18F27J53-killifish_light06.c: 238: PWM_set(3, temp);
  9729  0118E6  C08E  F075         	movff	light_task@temp,PWM_set@value
  9730  0118EA  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9731  0118EE  0E03               	movlw	3
  9732  0118F0  ECE0  F08D         	call	_PWM_set
  9733                           
  9734                           ;PIC18F27J53-killifish_light06.c: 239: for (i = 0; i < 3; i++) {
  9735  0118F4  0E00               	movlw	0
  9736  0118F6  0100               	movlb	0	; () banked
  9737  0118F8  6F92               	movwf	light_task@i& (0+255),b
  9738  0118FA                     l10455:
  9739                           
  9740                           ; BSR set to: 0
  9741  0118FA  0E02               	movlw	2
  9742  0118FC  0100               	movlb	0	; () banked
  9743  0118FE  6592               	cpfsgt	light_task@i& (0+255),b
  9744  011900  D001               	goto	l10459
  9745  011902  D00B               	goto	l1651
  9746  011904                     l10459:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;PIC18F27J53-killifish_light06.c: 240: PWM_set(i, temp);
  9750  011904  C08E  F075         	movff	light_task@temp,PWM_set@value
  9751  011908  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9752  01190C  0100               	movlb	0	; () banked
  9753  01190E  5192               	movf	light_task@i& (0+255),w,b
  9754  011910  ECE0  F08D         	call	_PWM_set
  9755  011914  0100               	movlb	0	; () banked
  9756  011916  2B92               	incf	light_task@i& (0+255),f,b
  9757  011918  D7F0               	goto	l10455
  9758  01191A                     l1651:
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;PIC18F27J53-killifish_light06.c: 241: }
  9762                           ;PIC18F27J53-killifish_light06.c: 242: }
  9763                           ;PIC18F27J53-killifish_light06.c: 243: }
  9764                           ;PIC18F27J53-killifish_light06.c: 244: if (sw_G.flag.press) {
  9765  01191A  0101               	movlb	1	; () banked
  9766  01191C  A181               	btfss	(_sw_G+2)& (0+255),0,b
  9767  01191E  D02A               	goto	l1656
  9768                           
  9769                           ; BSR set to: 1
  9770                           ;PIC18F27J53-killifish_light06.c: 245: sw_G.flags = 0;
  9771  011920  0E00               	movlw	0
  9772  011922  0101               	movlb	1	; () banked
  9773  011924  6F82               	movwf	(_sw_G+3)& (0+255),b
  9774  011926  0E00               	movlw	0
  9775  011928  6F81               	movwf	(_sw_G+2)& (0+255),b
  9776                           
  9777                           ;PIC18F27J53-killifish_light06.c: 246: light_mode = COMMAND_mode;
  9778  01192A  0E02               	movlw	2
  9779  01192C  0100               	movlb	0	; () banked
  9780  01192E  6FEE               	movwf	_light_mode& (0+255),b
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;PIC18F27J53-killifish_light06.c: 247: static uint8_t n = 0;
  9784                           ;PIC18F27J53-killifish_light06.c: 248: if (n >= 3) n = 0;
  9785  011930  0E02               	movlw	2
  9786  011932  0100               	movlb	0	; () banked
  9787  011934  65FE               	cpfsgt	light_task@n& (0+255),b
  9788  011936  D004               	goto	l10471
  9789                           
  9790                           ; BSR set to: 0
  9791  011938  0E00               	movlw	0
  9792  01193A  0100               	movlb	0	; () banked
  9793  01193C  6FFE               	movwf	light_task@n& (0+255),b
  9794  01193E  D002               	goto	l10473
  9795  011940                     l10471:
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;PIC18F27J53-killifish_light06.c: 249: else n++;
  9799  011940  0100               	movlb	0	; () banked
  9800  011942  2BFE               	incf	light_task@n& (0+255),f,b
  9801  011944                     l10473:
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;PIC18F27J53-killifish_light06.c: 250: uint8_t value = 250 / 3 * n;
  9805  011944  0100               	movlb	0	; () banked
  9806  011946  51FE               	movf	light_task@n& (0+255),w,b
  9807  011948  0D53               	mullw	83
  9808  01194A  CFF3 F08C          	movff	prodl,light_task@value
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;PIC18F27J53-killifish_light06.c: 251: for (i = 0; i < 3; i++) {
  9812  01194E  0E00               	movlw	0
  9813  011950  0100               	movlb	0	; () banked
  9814  011952  6F92               	movwf	light_task@i& (0+255),b
  9815  011954                     l10477:
  9816                           
  9817                           ; BSR set to: 0
  9818  011954  0E02               	movlw	2
  9819  011956  0100               	movlb	0	; () banked
  9820  011958  6592               	cpfsgt	light_task@i& (0+255),b
  9821  01195A  D001               	goto	l10481
  9822  01195C  D00B               	goto	l1656
  9823  01195E                     l10481:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;PIC18F27J53-killifish_light06.c: 252: PWM_set(i, value);
  9827  01195E  C08C  F075         	movff	light_task@value,PWM_set@value
  9828  011962  0100               	movlb	0	; () banked
  9829  011964  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9830  011966  0100               	movlb	0	; () banked
  9831  011968  5192               	movf	light_task@i& (0+255),w,b
  9832  01196A  ECE0  F08D         	call	_PWM_set
  9833  01196E  0100               	movlb	0	; () banked
  9834  011970  2B92               	incf	light_task@i& (0+255),f,b
  9835  011972  D7F0               	goto	l10477
  9836  011974                     l1656:
  9837                           
  9838                           ;PIC18F27J53-killifish_light06.c: 253: }
  9839                           ;PIC18F27J53-killifish_light06.c: 254: }
  9840                           ;PIC18F27J53-killifish_light06.c: 255: if (sw_B.flag.press) {
  9841  011974  0101               	movlb	1	; () banked
  9842  011976  A17D               	btfss	(_sw_B+2)& (0+255),0,b
  9843  011978  D01E               	goto	l10499
  9844                           
  9845                           ; BSR set to: 1
  9846                           ;PIC18F27J53-killifish_light06.c: 256: sw_B.flags = 0;
  9847  01197A  0E00               	movlw	0
  9848  01197C  0101               	movlb	1	; () banked
  9849  01197E  6F7E               	movwf	(_sw_B+3)& (0+255),b
  9850  011980  0E00               	movlw	0
  9851  011982  6F7D               	movwf	(_sw_B+2)& (0+255),b
  9852                           
  9853                           ;PIC18F27J53-killifish_light06.c: 257: light_mode = COMMAND_mode;
  9854  011984  0E02               	movlw	2
  9855  011986  0100               	movlb	0	; () banked
  9856  011988  6FEE               	movwf	_light_mode& (0+255),b
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;PIC18F27J53-killifish_light06.c: 258: static uint8_t n = 0;
  9860                           ;PIC18F27J53-killifish_light06.c: 259: if (n >= 3) n = 0;
  9861  01198A  0E02               	movlw	2
  9862  01198C  0100               	movlb	0	; () banked
  9863  01198E  65FD               	cpfsgt	light_task@_6082& (0+255),b
  9864  011990  D004               	goto	l10493
  9865                           
  9866                           ; BSR set to: 0
  9867  011992  0E00               	movlw	0
  9868  011994  0100               	movlb	0	; () banked
  9869  011996  6FFD               	movwf	light_task@_6082& (0+255),b
  9870  011998  D002               	goto	l10495
  9871  01199A                     l10493:
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;PIC18F27J53-killifish_light06.c: 260: else n++;
  9875  01199A  0100               	movlb	0	; () banked
  9876  01199C  2BFD               	incf	light_task@_6082& (0+255),f,b
  9877  01199E                     l10495:
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;PIC18F27J53-killifish_light06.c: 261: uint8_t value = 250 / 3 * n;
  9881  01199E  0100               	movlb	0	; () banked
  9882  0119A0  51FD               	movf	light_task@_6082& (0+255),w,b
  9883  0119A2  0D53               	mullw	83
  9884  0119A4  CFF3 F08D          	movff	prodl,light_task@value_6083
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;PIC18F27J53-killifish_light06.c: 262: PWM_set(3, value);
  9888  0119A8  C08D  F075         	movff	light_task@value_6083,PWM_set@value
  9889  0119AC  0100               	movlb	0	; () banked
  9890  0119AE  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9891  0119B0  0E03               	movlw	3
  9892  0119B2  ECE0  F08D         	call	_PWM_set
  9893  0119B6                     l10499:
  9894                           
  9895                           ;PIC18F27J53-killifish_light06.c: 263: }
  9896                           ;PIC18F27J53-killifish_light06.c: 264: if (sw_R.flag.press) {
  9897  0119B6  0101               	movlb	1	; () banked
  9898  0119B8  A185               	btfss	(_sw_R+2)& (0+255),0,b
  9899  0119BA  0012               	return	
  9900                           
  9901                           ; BSR set to: 1
  9902                           ;PIC18F27J53-killifish_light06.c: 265: sw_R.flags = 0;
  9903  0119BC  0E00               	movlw	0
  9904  0119BE  0101               	movlb	1	; () banked
  9905  0119C0  6F86               	movwf	(_sw_R+3)& (0+255),b
  9906  0119C2  0E00               	movlw	0
  9907  0119C4  6F85               	movwf	(_sw_R+2)& (0+255),b
  9908                           
  9909                           ;PIC18F27J53-killifish_light06.c: 266: light_mode = TIME_SYNC_mode;
  9910  0119C6  0E00               	movlw	0
  9911  0119C8  0100               	movlb	0	; () banked
  9912  0119CA  6FEE               	movwf	_light_mode& (0+255),b
  9913  0119CC  0012               	return	
  9914  0119CE                     __end_of_light_task:
  9915                           	opt stack 0
  9916                           tblptru	equ	0xFF8
  9917                           tblptrh	equ	0xFF7
  9918                           tblptrl	equ	0xFF6
  9919                           tablat	equ	0xFF5
  9920                           prodh	equ	0xFF4
  9921                           prodl	equ	0xFF3
  9922                           intcon	equ	0xFF2
  9923                           intcon2	equ	0xFF1
  9924                           indf0	equ	0xFEF
  9925                           postinc0	equ	0xFEE
  9926                           fsr0h	equ	0xFEA
  9927                           fsr0l	equ	0xFE9
  9928                           wreg	equ	0xFE8
  9929                           postinc1	equ	0xFE6
  9930                           postdec1	equ	0xFE5
  9931                           fsr1h	equ	0xFE2
  9932                           fsr1l	equ	0xFE1
  9933                           indf2	equ	0xFDF
  9934                           postinc2	equ	0xFDE
  9935                           postdec2	equ	0xFDD
  9936                           fsr2h	equ	0xFDA
  9937                           fsr2l	equ	0xFD9
  9938                           status	equ	0xFD8
  9939                           
  9940 ;; *************** function ___llmod *****************
  9941 ;; Defined at:
  9942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;  dividend        4    0[BANK0 ] unsigned long 
  9945 ;;  divisor         4    4[BANK0 ] unsigned long 
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;  counter         1    8[BANK0 ] unsigned char 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  4    0[BANK0 ] unsigned long 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9957 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9960 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9961 ;;Total ram usage:        9 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:   12
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		_light_task
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text37
  9972  0139CA                     __ptext37:
  9973                           	opt stack 0
  9974  0139CA                     ___llmod:
  9975                           	opt stack 17
  9976                           
  9977                           ;incstack = 0
  9978  0139CA  0100               	movlb	0	; () banked
  9979  0139CC  5164               	movf	___llmod@divisor& (0+255),w,b
  9980  0139CE  0100               	movlb	0	; () banked
  9981  0139D0  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9982  0139D2  0100               	movlb	0	; () banked
  9983  0139D4  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9984  0139D6  0100               	movlb	0	; () banked
  9985  0139D8  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9986  0139DA  B4D8               	btfsc	status,2,c
  9987  0139DC  D03A               	goto	l2122
  9988                           
  9989                           ; BSR set to: 0
  9990  0139DE  0E01               	movlw	1
  9991  0139E0  0100               	movlb	0	; () banked
  9992  0139E2  6F68               	movwf	___llmod@counter& (0+255),b
  9993  0139E4  D008               	goto	l10209
  9994  0139E6                     l10207:
  9995                           
  9996                           ; BSR set to: 0
  9997  0139E6  0100               	movlb	0	; () banked
  9998  0139E8  90D8               	bcf	status,0,c
  9999  0139EA  3764               	rlcf	___llmod@divisor& (0+255),f,b
 10000  0139EC  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10001  0139EE  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10002  0139F0  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10003  0139F2  0100               	movlb	0	; () banked
 10004  0139F4  2B68               	incf	___llmod@counter& (0+255),f,b
 10005  0139F6                     l10209:
 10006                           
 10007                           ; BSR set to: 0
 10008  0139F6  0100               	movlb	0	; () banked
 10009  0139F8  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10010  0139FA  D7F5               	goto	l10207
 10011  0139FC                     l10211:
 10012                           
 10013                           ; BSR set to: 0
 10014  0139FC  0100               	movlb	0	; () banked
 10015  0139FE  5164               	movf	___llmod@divisor& (0+255),w,b
 10016  013A00  0100               	movlb	0	; () banked
 10017  013A02  5D60               	subwf	___llmod@dividend& (0+255),w,b
 10018  013A04  0100               	movlb	0	; () banked
 10019  013A06  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 10020  013A08  0100               	movlb	0	; () banked
 10021  013A0A  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10022  013A0C  0100               	movlb	0	; () banked
 10023  013A0E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 10024  013A10  0100               	movlb	0	; () banked
 10025  013A12  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10026  013A14  0100               	movlb	0	; () banked
 10027  013A16  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 10028  013A18  0100               	movlb	0	; () banked
 10029  013A1A  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10030  013A1C  A0D8               	btfss	status,0,c
 10031  013A1E  D010               	goto	l10215
 10032                           
 10033                           ; BSR set to: 0
 10034  013A20  0100               	movlb	0	; () banked
 10035  013A22  5164               	movf	___llmod@divisor& (0+255),w,b
 10036  013A24  0100               	movlb	0	; () banked
 10037  013A26  5F60               	subwf	___llmod@dividend& (0+255),f,b
 10038  013A28  0100               	movlb	0	; () banked
 10039  013A2A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 10040  013A2C  0100               	movlb	0	; () banked
 10041  013A2E  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10042  013A30  0100               	movlb	0	; () banked
 10043  013A32  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 10044  013A34  0100               	movlb	0	; () banked
 10045  013A36  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10046  013A38  0100               	movlb	0	; () banked
 10047  013A3A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 10048  013A3C  0100               	movlb	0	; () banked
 10049  013A3E  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10050  013A40                     l10215:
 10051                           
 10052                           ; BSR set to: 0
 10053  013A40  0100               	movlb	0	; () banked
 10054  013A42  90D8               	bcf	status,0,c
 10055  013A44  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10056  013A46  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10057  013A48  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10058  013A4A  3364               	rrcf	___llmod@divisor& (0+255),f,b
 10059                           
 10060                           ; BSR set to: 0
 10061  013A4C  0100               	movlb	0	; () banked
 10062  013A4E  2F68               	decfsz	___llmod@counter& (0+255),f,b
 10063  013A50  D7D5               	goto	l10211
 10064  013A52                     l2122:
 10065                           
 10066                           ; BSR set to: 0
 10067  013A52  C060  F060         	movff	___llmod@dividend,?___llmod
 10068  013A56  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 10069  013A5A  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 10070  013A5E  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 10071                           
 10072                           ; BSR set to: 0
 10073  013A62  0012               	return		;funcret
 10074  013A64                     __end_of___llmod:
 10075                           	opt stack 0
 10076                           tblptru	equ	0xFF8
 10077                           tblptrh	equ	0xFF7
 10078                           tblptrl	equ	0xFF6
 10079                           tablat	equ	0xFF5
 10080                           prodh	equ	0xFF4
 10081                           prodl	equ	0xFF3
 10082                           intcon	equ	0xFF2
 10083                           intcon2	equ	0xFF1
 10084                           indf0	equ	0xFEF
 10085                           postinc0	equ	0xFEE
 10086                           fsr0h	equ	0xFEA
 10087                           fsr0l	equ	0xFE9
 10088                           wreg	equ	0xFE8
 10089                           postinc1	equ	0xFE6
 10090                           postdec1	equ	0xFE5
 10091                           fsr1h	equ	0xFE2
 10092                           fsr1l	equ	0xFE1
 10093                           indf2	equ	0xFDF
 10094                           postinc2	equ	0xFDE
 10095                           postdec2	equ	0xFDD
 10096                           fsr2h	equ	0xFDA
 10097                           fsr2l	equ	0xFD9
 10098                           status	equ	0xFD8
 10099                           
 10100 ;; *************** function ___lldiv *****************
 10101 ;; Defined at:
 10102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10103 ;; Parameters:    Size  Location     Type
 10104 ;;  dividend        4    0[BANK0 ] unsigned long 
 10105 ;;  divisor         4    4[BANK0 ] unsigned long 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  quotient        4    8[BANK0 ] unsigned long 
 10108 ;;  counter         1   12[BANK0 ] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  4    0[BANK0 ] unsigned long 
 10111 ;; Registers used:
 10112 ;;		wreg, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10119 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10121 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10122 ;;Total ram usage:       13 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:   12
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_get_quot_rem
 10129 ;;		_light_task
 10130 ;;		_CTMU_read
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text38
 10135  01343E                     __ptext38:
 10136                           	opt stack 0
 10137  01343E                     ___lldiv:
 10138                           	opt stack 11
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;incstack = 0
 10142  01343E  0E00               	movlw	0
 10143  013440  0100               	movlb	0	; () banked
 10144  013442  6F68               	movwf	___lldiv@quotient& (0+255),b
 10145  013444  0E00               	movlw	0
 10146  013446  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 10147  013448  0E00               	movlw	0
 10148  01344A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 10149  01344C  0E00               	movlw	0
 10150  01344E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 10151                           
 10152                           ; BSR set to: 0
 10153  013450  0100               	movlb	0	; () banked
 10154  013452  5164               	movf	___lldiv@divisor& (0+255),w,b
 10155  013454  0100               	movlb	0	; () banked
 10156  013456  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10157  013458  0100               	movlb	0	; () banked
 10158  01345A  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10159  01345C  0100               	movlb	0	; () banked
 10160  01345E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10161  013460  B4D8               	btfsc	status,2,c
 10162  013462  D042               	goto	l2112
 10163                           
 10164                           ; BSR set to: 0
 10165  013464  0E01               	movlw	1
 10166  013466  0100               	movlb	0	; () banked
 10167  013468  6F6C               	movwf	___lldiv@counter& (0+255),b
 10168  01346A  D008               	goto	l9131
 10169  01346C                     l9129:
 10170                           
 10171                           ; BSR set to: 0
 10172  01346C  0100               	movlb	0	; () banked
 10173  01346E  90D8               	bcf	status,0,c
 10174  013470  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 10175  013472  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10176  013474  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10177  013476  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10178  013478  0100               	movlb	0	; () banked
 10179  01347A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 10180  01347C                     l9131:
 10181                           
 10182                           ; BSR set to: 0
 10183  01347C  0100               	movlb	0	; () banked
 10184  01347E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10185  013480  D7F5               	goto	l9129
 10186  013482                     l9133:
 10187                           
 10188                           ; BSR set to: 0
 10189  013482  0100               	movlb	0	; () banked
 10190  013484  90D8               	bcf	status,0,c
 10191  013486  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 10192  013488  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10193  01348A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10194  01348C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10195                           
 10196                           ; BSR set to: 0
 10197  01348E  0100               	movlb	0	; () banked
 10198  013490  5164               	movf	___lldiv@divisor& (0+255),w,b
 10199  013492  0100               	movlb	0	; () banked
 10200  013494  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 10201  013496  0100               	movlb	0	; () banked
 10202  013498  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10203  01349A  0100               	movlb	0	; () banked
 10204  01349C  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10205  01349E  0100               	movlb	0	; () banked
 10206  0134A0  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10207  0134A2  0100               	movlb	0	; () banked
 10208  0134A4  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10209  0134A6  0100               	movlb	0	; () banked
 10210  0134A8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10211  0134AA  0100               	movlb	0	; () banked
 10212  0134AC  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10213  0134AE  A0D8               	btfss	status,0,c
 10214  0134B0  D012               	goto	l9141
 10215                           
 10216                           ; BSR set to: 0
 10217  0134B2  0100               	movlb	0	; () banked
 10218  0134B4  5164               	movf	___lldiv@divisor& (0+255),w,b
 10219  0134B6  0100               	movlb	0	; () banked
 10220  0134B8  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 10221  0134BA  0100               	movlb	0	; () banked
 10222  0134BC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10223  0134BE  0100               	movlb	0	; () banked
 10224  0134C0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10225  0134C2  0100               	movlb	0	; () banked
 10226  0134C4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10227  0134C6  0100               	movlb	0	; () banked
 10228  0134C8  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10229  0134CA  0100               	movlb	0	; () banked
 10230  0134CC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10231  0134CE  0100               	movlb	0	; () banked
 10232  0134D0  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10233                           
 10234                           ; BSR set to: 0
 10235  0134D2  0100               	movlb	0	; () banked
 10236  0134D4  8168               	bsf	___lldiv@quotient& (0+255),0,b
 10237  0134D6                     l9141:
 10238                           
 10239                           ; BSR set to: 0
 10240  0134D6  0100               	movlb	0	; () banked
 10241  0134D8  90D8               	bcf	status,0,c
 10242  0134DA  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10243  0134DC  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10244  0134DE  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10245  0134E0  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 10246                           
 10247                           ; BSR set to: 0
 10248  0134E2  0100               	movlb	0	; () banked
 10249  0134E4  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 10250  0134E6  D7CD               	goto	l9133
 10251  0134E8                     l2112:
 10252                           
 10253                           ; BSR set to: 0
 10254  0134E8  C068  F060         	movff	___lldiv@quotient,?___lldiv
 10255  0134EC  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 10256  0134F0  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 10257  0134F4  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 10258                           
 10259                           ; BSR set to: 0
 10260  0134F8  0012               	return		;funcret
 10261  0134FA                     __end_of___lldiv:
 10262                           	opt stack 0
 10263                           tblptru	equ	0xFF8
 10264                           tblptrh	equ	0xFF7
 10265                           tblptrl	equ	0xFF6
 10266                           tablat	equ	0xFF5
 10267                           prodh	equ	0xFF4
 10268                           prodl	equ	0xFF3
 10269                           intcon	equ	0xFF2
 10270                           intcon2	equ	0xFF1
 10271                           indf0	equ	0xFEF
 10272                           postinc0	equ	0xFEE
 10273                           fsr0h	equ	0xFEA
 10274                           fsr0l	equ	0xFE9
 10275                           wreg	equ	0xFE8
 10276                           postinc1	equ	0xFE6
 10277                           postdec1	equ	0xFE5
 10278                           fsr1h	equ	0xFE2
 10279                           fsr1l	equ	0xFE1
 10280                           indf2	equ	0xFDF
 10281                           postinc2	equ	0xFDE
 10282                           postdec2	equ	0xFDD
 10283                           fsr2h	equ	0xFDA
 10284                           fsr2l	equ	0xFD9
 10285                           status	equ	0xFD8
 10286                           
 10287 ;; *************** function _PWM_set *****************
 10288 ;; Defined at:
 10289 ;;		line 121 in file "PIC18F27J53-killifish_light06.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  color           1    wreg     unsigned char 
 10292 ;;  value           2   21[BANK0 ] unsigned int 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  color           1   25[BANK0 ] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;		None               void
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10306 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10307 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10308 ;;Total ram usage:        5 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:   13
 10311 ;; This function calls:
 10312 ;;		___lwdiv
 10313 ;;		___wmul
 10314 ;; This function is called by:
 10315 ;;		_terminal_operation
 10316 ;;		_light_task
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           	psect	text39
 10321  011BC0                     __ptext39:
 10322                           	opt stack 0
 10323  011BC0                     _PWM_set:
 10324                           	opt stack 15
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;incstack = 0
 10328                           ;PWM_set@color stored from wreg
 10329  011BC0  0100               	movlb	0	; () banked
 10330  011BC2  6F79               	movwf	PWM_set@color& (0+255),b
 10331                           
 10332                           ;PIC18F27J53-killifish_light06.c: 122: value = value * value / 250;
 10333  011BC4  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10334  011BC8  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10335  011BCC  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10336  011BD0  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10337  011BD4  EC2E  F0A2         	call	___wmul	;wreg free
 10338  011BD8  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10339  011BDC  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10340  011BE0  0E00               	movlw	0
 10341  011BE2  0100               	movlb	0	; () banked
 10342  011BE4  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10343  011BE6  0EFA               	movlw	250
 10344  011BE8  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10345  011BEA  ECD7  F09E         	call	___lwdiv	;wreg free
 10346  011BEE  C066  F075         	movff	?___lwdiv,PWM_set@value
 10347  011BF2  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10348                           
 10349                           ;PIC18F27J53-killifish_light06.c: 123: value = value * value / 250;
 10350  011BF6  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10351  011BFA  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10352  011BFE  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10353  011C02  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10354  011C06  EC2E  F0A2         	call	___wmul	;wreg free
 10355  011C0A  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10356  011C0E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10357  011C12  0E00               	movlw	0
 10358  011C14  0100               	movlb	0	; () banked
 10359  011C16  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10360  011C18  0EFA               	movlw	250
 10361  011C1A  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10362  011C1C  ECD7  F09E         	call	___lwdiv	;wreg free
 10363  011C20  C066  F075         	movff	?___lwdiv,PWM_set@value
 10364  011C24  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10365                           
 10366                           ;PIC18F27J53-killifish_light06.c: 124: value = value * 3 / 4;
 10367  011C28  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10368  011C2C  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10369  011C30  0E00               	movlw	0
 10370  011C32  0100               	movlb	0	; () banked
 10371  011C34  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10372  011C36  0E03               	movlw	3
 10373  011C38  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10374  011C3A  EC2E  F0A2         	call	___wmul	;wreg free
 10375  011C3E  0100               	movlb	0	; () banked
 10376  011C40  90D8               	bcf	status,0,c
 10377  011C42  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10378  011C44  3360               	rrcf	?___wmul& (0+255),f,b
 10379  011C46  0100               	movlb	0	; () banked
 10380  011C48  90D8               	bcf	status,0,c
 10381  011C4A  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10382  011C4C  3360               	rrcf	?___wmul& (0+255),f,b
 10383  011C4E  C060  F075         	movff	?___wmul,PWM_set@value
 10384  011C52  C061  F076         	movff	?___wmul+1,PWM_set@value+1
 10385                           
 10386                           ;PIC18F27J53-killifish_light06.c: 125: switch (color) {
 10387  011C56  D056               	goto	l9877
 10388  011C58                     l9859:
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;PIC18F27J53-killifish_light06.c: 127: if (value < 250 / 4) {
 10392  011C58  0100               	movlb	0	; () banked
 10393  011C5A  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10394  011C5C  E105               	bnz	l9863
 10395  011C5E  0E3E               	movlw	62
 10396  011C60  0100               	movlb	0	; () banked
 10397  011C62  5D75               	subwf	PWM_set@value& (0+255),w,b
 10398  011C64  A0D8               	btfss	status,0,c
 10399  011C66  D071               	goto	l9897
 10400  011C68                     l9863:
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;PIC18F27J53-killifish_light06.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
 10404  011C68  C075  F077         	movff	PWM_set@value,??_PWM_set
 10405  011C6C  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
 10406  011C70  90D8               	bcf	status,0,c
 10407  011C72  0100               	movlb	0	; () banked
 10408  011C74  3777               	rlcf	??_PWM_set& (0+255),f,b
 10409  011C76  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
 10410  011C78  0E84               	movlw	132
 10411  011C7A  0100               	movlb	0	; () banked
 10412  011C7C  2577               	addwf	??_PWM_set& (0+255),w,b
 10413  011C7E  0100               	movlb	0	; () banked
 10414  011C80  6F66               	movwf	___lwdiv@dividend& (0+255),b
 10415  011C82  0EFF               	movlw	255
 10416  011C84  0100               	movlb	0	; () banked
 10417  011C86  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
 10418  011C88  0100               	movlb	0	; () banked
 10419  011C8A  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
 10420  011C8C  0E00               	movlw	0
 10421  011C8E  0100               	movlb	0	; () banked
 10422  011C90  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10423  011C92  0E03               	movlw	3
 10424  011C94  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10425  011C96  ECD7  F09E         	call	___lwdiv	;wreg free
 10426  011C9A  0E3E               	movlw	62
 10427  011C9C  0100               	movlb	0	; () banked
 10428  011C9E  2566               	addwf	?___lwdiv& (0+255),w,b
 10429  011CA0  0100               	movlb	0	; () banked
 10430  011CA2  6F75               	movwf	PWM_set@value& (0+255),b
 10431  011CA4  0E00               	movlw	0
 10432  011CA6  0100               	movlb	0	; () banked
 10433  011CA8  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
 10434  011CAA  D029               	goto	L1
 10435  011CAC                     l9869:
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;PIC18F27J53-killifish_light06.c: 141: if (value < 250 / 4) {
 10439  011CAC  0100               	movlb	0	; () banked
 10440  011CAE  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10441  011CB0  E105               	bnz	l9873
 10442  011CB2  0E3E               	movlw	62
 10443  011CB4  0100               	movlb	0	; () banked
 10444  011CB6  5D75               	subwf	PWM_set@value& (0+255),w,b
 10445  011CB8  A0D8               	btfss	status,0,c
 10446  011CBA  D047               	goto	l9897
 10447  011CBC                     l9873:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;PIC18F27J53-killifish_light06.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
 10451  011CBC  0EC2               	movlw	194
 10452  011CBE  0100               	movlb	0	; () banked
 10453  011CC0  2575               	addwf	PWM_set@value& (0+255),w,b
 10454  011CC2  0100               	movlb	0	; () banked
 10455  011CC4  6F60               	movwf	___wmul@multiplier& (0+255),b
 10456  011CC6  0EFF               	movlw	255
 10457  011CC8  0100               	movlb	0	; () banked
 10458  011CCA  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
 10459  011CCC  0100               	movlb	0	; () banked
 10460  011CCE  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
 10461  011CD0  0E00               	movlw	0
 10462  011CD2  0100               	movlb	0	; () banked
 10463  011CD4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10464  011CD6  0E03               	movlw	3
 10465  011CD8  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10466  011CDA  EC2E  F0A2         	call	___wmul	;wreg free
 10467  011CDE  0100               	movlb	0	; () banked
 10468  011CE0  90D8               	bcf	status,0,c
 10469  011CE2  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10470  011CE4  3360               	rrcf	?___wmul& (0+255),f,b
 10471  011CE6  0100               	movlb	0	; () banked
 10472  011CE8  90D8               	bcf	status,0,c
 10473  011CEA  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10474  011CEC  3360               	rrcf	?___wmul& (0+255),f,b
 10475  011CEE  0E3E               	movlw	62
 10476  011CF0  0100               	movlb	0	; () banked
 10477  011CF2  2560               	addwf	?___wmul& (0+255),w,b
 10478  011CF4  0100               	movlb	0	; () banked
 10479  011CF6  6F75               	movwf	PWM_set@value& (0+255),b
 10480  011CF8  0E00               	movlw	0
 10481  011CFA  0100               	movlb	0	; () banked
 10482  011CFC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 10483  011CFE                     L1:
 10484  011CFE  0100               	movlb	0	; () banked
 10485  011D00  6F76               	movwf	(PWM_set@value+1)& (0+255),b
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;PIC18F27J53-killifish_light06.c: 149: }
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;PIC18F27J53-killifish_light06.c: 148: break;
 10492                           
 10493                           ;PIC18F27J53-killifish_light06.c: 147: case 3:
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;PIC18F27J53-killifish_light06.c: 145: }
 10497                           ;PIC18F27J53-killifish_light06.c: 146: break;
 10498  011D02  D023               	goto	l9897
 10499  011D04                     l9877:
 10500                           
 10501                           ; BSR set to: 0
 10502  011D04  0100               	movlb	0	; () banked
 10503  011D06  5179               	movf	PWM_set@color& (0+255),w,b
 10504                           
 10505                           ; Switch size 1, requested type "space"
 10506                           ; Number of cases is 4, Range of values is 0 to 3
 10507                           ; switch strategies available:
 10508                           ; Name         Instructions Cycles
 10509                           ; simple_byte           13     7 (average)
 10510                           ;	Chosen strategy is simple_byte
 10511  011D08  0A00               	xorlw	0	; case 0
 10512  011D0A  B4D8               	btfsc	status,2,c
 10513  011D0C  D7A5               	goto	l9859
 10514  011D0E  0A01               	xorlw	1	; case 1
 10515  011D10  B4D8               	btfsc	status,2,c
 10516  011D12  D01B               	goto	l9897
 10517  011D14  0A03               	xorlw	3	; case 2
 10518  011D16  B4D8               	btfsc	status,2,c
 10519  011D18  D7C9               	goto	l9869
 10520  011D1A  0A01               	xorlw	1	; case 3
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;PIC18F27J53-killifish_light06.c: 150: switch (color) {
 10524  011D1C  D016               	goto	l9897
 10525  011D1E                     l9879:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;PIC18F27J53-killifish_light06.c: 152: CCP1CONbits.DC1B = 0;
 10529  011D1E  0ECF               	movlw	-49
 10530  011D20  16BA               	andwf	4026,f,c	;volatile
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;PIC18F27J53-killifish_light06.c: 153: CCPR1L = value;
 10534  011D22  C075  FFBB         	movff	PWM_set@value,4027	;volatile
 10535                           
 10536                           ;PIC18F27J53-killifish_light06.c: 154: break;
 10537  011D26  0012               	return	
 10538  011D28                     l9883:
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;PIC18F27J53-killifish_light06.c: 156: CCP2CONbits.DC2B = 0;
 10542  011D28  0ECF               	movlw	-49
 10543  011D2A  16B4               	andwf	4020,f,c	;volatile
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;PIC18F27J53-killifish_light06.c: 157: CCPR2L = value;
 10547  011D2C  C075  FFB5         	movff	PWM_set@value,4021	;volatile
 10548                           
 10549                           ;PIC18F27J53-killifish_light06.c: 158: break;
 10550  011D30  0012               	return	
 10551  011D32                     l9887:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;PIC18F27J53-killifish_light06.c: 160: CCP3CONbits.DC3B = 0;
 10555  011D32  0ECF               	movlw	-49
 10556  011D34  010F               	movlb	15	; () banked
 10557  011D36  1715               	andwf	21,f,b	;volatile
 10558                           
 10559                           ; BSR set to: 15
 10560                           ;PIC18F27J53-killifish_light06.c: 161: CCPR3L = value;
 10561  011D38  C075  FF16         	movff	PWM_set@value,3862	;volatile
 10562                           
 10563                           ;PIC18F27J53-killifish_light06.c: 162: break;
 10564  011D3C  0012               	return	
 10565  011D3E                     l9891:
 10566                           
 10567                           ;PIC18F27J53-killifish_light06.c: 164: CCP4CONbits.DC4B = 0;
 10568  011D3E  0ECF               	movlw	-49
 10569  011D40  010F               	movlb	15	; () banked
 10570  011D42  1712               	andwf	18,f,b	;volatile
 10571                           
 10572                           ; BSR set to: 15
 10573                           ;PIC18F27J53-killifish_light06.c: 165: CCPR4L = value;
 10574  011D44  C075  FF13         	movff	PWM_set@value,3859	;volatile
 10575                           
 10576                           ; BSR set to: 15
 10577                           ;PIC18F27J53-killifish_light06.c: 167: }
 10578                           
 10579                           ;PIC18F27J53-killifish_light06.c: 166: break;
 10580  011D48  0012               	return	
 10581  011D4A                     l9897:
 10582  011D4A  0100               	movlb	0	; () banked
 10583  011D4C  5179               	movf	PWM_set@color& (0+255),w,b
 10584                           
 10585                           ; Switch size 1, requested type "space"
 10586                           ; Number of cases is 4, Range of values is 0 to 3
 10587                           ; switch strategies available:
 10588                           ; Name         Instructions Cycles
 10589                           ; simple_byte           13     7 (average)
 10590                           ;	Chosen strategy is simple_byte
 10591  011D4E  0A00               	xorlw	0	; case 0
 10592  011D50  B4D8               	btfsc	status,2,c
 10593  011D52  D7E5               	goto	l9879
 10594  011D54  0A01               	xorlw	1	; case 1
 10595  011D56  B4D8               	btfsc	status,2,c
 10596  011D58  D7E7               	goto	l9883
 10597  011D5A  0A03               	xorlw	3	; case 2
 10598  011D5C  B4D8               	btfsc	status,2,c
 10599  011D5E  D7E9               	goto	l9887
 10600  011D60  0A01               	xorlw	1	; case 3
 10601  011D62  A4D8               	btfss	status,2,c
 10602  011D64  0012               	return	
 10603  011D66  D7EB               	goto	l9891
 10604  011D68                     __end_of_PWM_set:
 10605                           	opt stack 0
 10606                           tblptru	equ	0xFF8
 10607                           tblptrh	equ	0xFF7
 10608                           tblptrl	equ	0xFF6
 10609                           tablat	equ	0xFF5
 10610                           prodh	equ	0xFF4
 10611                           prodl	equ	0xFF3
 10612                           intcon	equ	0xFF2
 10613                           intcon2	equ	0xFF1
 10614                           indf0	equ	0xFEF
 10615                           postinc0	equ	0xFEE
 10616                           fsr0h	equ	0xFEA
 10617                           fsr0l	equ	0xFE9
 10618                           wreg	equ	0xFE8
 10619                           postinc1	equ	0xFE6
 10620                           postdec1	equ	0xFE5
 10621                           fsr1h	equ	0xFE2
 10622                           fsr1l	equ	0xFE1
 10623                           indf2	equ	0xFDF
 10624                           postinc2	equ	0xFDE
 10625                           postdec2	equ	0xFDD
 10626                           fsr2h	equ	0xFDA
 10627                           fsr2l	equ	0xFD9
 10628                           status	equ	0xFD8
 10629                           
 10630 ;; *************** function ___wmul *****************
 10631 ;; Defined at:
 10632 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10635 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  product         2    4[BANK0 ] unsigned int 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  2    0[BANK0 ] unsigned int 
 10640 ;; Registers used:
 10641 ;;		wreg, status,2, status,0, prodl, prodh
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10650 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10651 ;;Total ram usage:        6 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:   12
 10654 ;; This function calls:
 10655 ;;		Nothing
 10656 ;; This function is called by:
 10657 ;;		_PWM_set
 10658 ;;		_terminal_operation
 10659 ;;		_sprintf
 10660 ;;		_atoi
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text40
 10665  01445C                     __ptext40:
 10666                           	opt stack 0
 10667  01445C                     ___wmul:
 10668                           	opt stack 12
 10669                           
 10670                           ;incstack = 0
 10671  01445C  0100               	movlb	0	; () banked
 10672  01445E  5160               	movf	___wmul@multiplier& (0+255),w,b
 10673  014460  0100               	movlb	0	; () banked
 10674  014462  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10675  014464  CFF3 F064          	movff	prodl,___wmul@product
 10676  014468  CFF4 F065          	movff	prodh,___wmul@product+1
 10677  01446C  0100               	movlb	0	; () banked
 10678  01446E  5160               	movf	___wmul@multiplier& (0+255),w,b
 10679  014470  0100               	movlb	0	; () banked
 10680  014472  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10681  014474  50F3               	movf	prodl,w,c
 10682  014476  0100               	movlb	0	; () banked
 10683  014478  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10684  01447A  0100               	movlb	0	; () banked
 10685  01447C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10686  01447E  0100               	movlb	0	; () banked
 10687  014480  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10688  014482  50F3               	movf	prodl,w,c
 10689  014484  0100               	movlb	0	; () banked
 10690  014486  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10691                           
 10692                           ; BSR set to: 0
 10693  014488  C064  F060         	movff	___wmul@product,?___wmul
 10694  01448C  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10695  014490  0012               	return	
 10696  014492                     __end_of___wmul:
 10697                           	opt stack 0
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           intcon	equ	0xFF2
 10705                           intcon2	equ	0xFF1
 10706                           indf0	equ	0xFEF
 10707                           postinc0	equ	0xFEE
 10708                           fsr0h	equ	0xFEA
 10709                           fsr0l	equ	0xFE9
 10710                           wreg	equ	0xFE8
 10711                           postinc1	equ	0xFE6
 10712                           postdec1	equ	0xFE5
 10713                           fsr1h	equ	0xFE2
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           postdec2	equ	0xFDD
 10718                           fsr2h	equ	0xFDA
 10719                           fsr2l	equ	0xFD9
 10720                           status	equ	0xFD8
 10721                           
 10722 ;; *************** function ___lwdiv *****************
 10723 ;; Defined at:
 10724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  dividend        2    6[BANK0 ] unsigned int 
 10727 ;;  divisor         2    8[BANK0 ] unsigned int 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  quotient        2   11[BANK0 ] unsigned int 
 10730 ;;  counter         1   10[BANK0 ] unsigned char 
 10731 ;; Return value:  Size  Location     Type
 10732 ;;                  2    6[BANK0 ] unsigned int 
 10733 ;; Registers used:
 10734 ;;		wreg, status,2, status,0
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10741 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10743 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10744 ;;Total ram usage:        7 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; Hardware stack levels required when called:   12
 10747 ;; This function calls:
 10748 ;;		Nothing
 10749 ;; This function is called by:
 10750 ;;		_ringbuf_put_num
 10751 ;;		_PWM_set
 10752 ;;		_sprintf
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           	psect	text41
 10757  013DAE                     __ptext41:
 10758                           	opt stack 0
 10759  013DAE                     ___lwdiv:
 10760                           	opt stack 12
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;incstack = 0
 10764  013DAE  0E00               	movlw	0
 10765  013DB0  0100               	movlb	0	; () banked
 10766  013DB2  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10767  013DB4  0E00               	movlw	0
 10768  013DB6  6F6B               	movwf	___lwdiv@quotient& (0+255),b
 10769                           
 10770                           ; BSR set to: 0
 10771  013DB8  0100               	movlb	0	; () banked
 10772  013DBA  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10773  013DBC  0100               	movlb	0	; () banked
 10774  013DBE  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10775  013DC0  B4D8               	btfsc	status,2,c
 10776  013DC2  D02C               	goto	l2165
 10777                           
 10778                           ; BSR set to: 0
 10779  013DC4  0E01               	movlw	1
 10780  013DC6  0100               	movlb	0	; () banked
 10781  013DC8  6F6A               	movwf	___lwdiv@counter& (0+255),b
 10782  013DCA  D006               	goto	l9229
 10783  013DCC                     l9227:
 10784                           
 10785                           ; BSR set to: 0
 10786  013DCC  0100               	movlb	0	; () banked
 10787  013DCE  90D8               	bcf	status,0,c
 10788  013DD0  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 10789  013DD2  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10790  013DD4  0100               	movlb	0	; () banked
 10791  013DD6  2B6A               	incf	___lwdiv@counter& (0+255),f,b
 10792  013DD8                     l9229:
 10793                           
 10794                           ; BSR set to: 0
 10795  013DD8  0100               	movlb	0	; () banked
 10796  013DDA  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10797  013DDC  D7F7               	goto	l9227
 10798  013DDE                     l9231:
 10799                           
 10800                           ; BSR set to: 0
 10801  013DDE  0100               	movlb	0	; () banked
 10802  013DE0  90D8               	bcf	status,0,c
 10803  013DE2  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
 10804  013DE4  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10805                           
 10806                           ; BSR set to: 0
 10807  013DE6  0100               	movlb	0	; () banked
 10808  013DE8  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10809  013DEA  0100               	movlb	0	; () banked
 10810  013DEC  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 10811  013DEE  0100               	movlb	0	; () banked
 10812  013DF0  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10813  013DF2  0100               	movlb	0	; () banked
 10814  013DF4  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10815  013DF6  A0D8               	btfss	status,0,c
 10816  013DF8  D00A               	goto	l9239
 10817                           
 10818                           ; BSR set to: 0
 10819  013DFA  0100               	movlb	0	; () banked
 10820  013DFC  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10821  013DFE  0100               	movlb	0	; () banked
 10822  013E00  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 10823  013E02  0100               	movlb	0	; () banked
 10824  013E04  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10825  013E06  0100               	movlb	0	; () banked
 10826  013E08  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10827                           
 10828                           ; BSR set to: 0
 10829  013E0A  0100               	movlb	0	; () banked
 10830  013E0C  816B               	bsf	___lwdiv@quotient& (0+255),0,b
 10831  013E0E                     l9239:
 10832                           
 10833                           ; BSR set to: 0
 10834  013E0E  0100               	movlb	0	; () banked
 10835  013E10  90D8               	bcf	status,0,c
 10836  013E12  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10837  013E14  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 10838                           
 10839                           ; BSR set to: 0
 10840  013E16  0100               	movlb	0	; () banked
 10841  013E18  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
 10842  013E1A  D7E1               	goto	l9231
 10843  013E1C                     l2165:
 10844                           
 10845                           ; BSR set to: 0
 10846  013E1C  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
 10847  013E20  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10848                           
 10849                           ; BSR set to: 0
 10850  013E24  0012               	return		;funcret
 10851  013E26                     __end_of___lwdiv:
 10852                           	opt stack 0
 10853                           tblptru	equ	0xFF8
 10854                           tblptrh	equ	0xFF7
 10855                           tblptrl	equ	0xFF6
 10856                           tablat	equ	0xFF5
 10857                           prodh	equ	0xFF4
 10858                           prodl	equ	0xFF3
 10859                           intcon	equ	0xFF2
 10860                           intcon2	equ	0xFF1
 10861                           indf0	equ	0xFEF
 10862                           postinc0	equ	0xFEE
 10863                           fsr0h	equ	0xFEA
 10864                           fsr0l	equ	0xFE9
 10865                           wreg	equ	0xFE8
 10866                           postinc1	equ	0xFE6
 10867                           postdec1	equ	0xFE5
 10868                           fsr1h	equ	0xFE2
 10869                           fsr1l	equ	0xFE1
 10870                           indf2	equ	0xFDF
 10871                           postinc2	equ	0xFDE
 10872                           postdec2	equ	0xFDD
 10873                           fsr2h	equ	0xFDA
 10874                           fsr2l	equ	0xFD9
 10875                           status	equ	0xFD8
 10876                           
 10877 ;; *************** function _USB_CDC_task *****************
 10878 ;; Defined at:
 10879 ;;		line 39 in file "../My_library/My_usb_cdc.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;		None
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  i               2   16[BANK0 ] unsigned int 
 10884 ;;  length          2   18[BANK0 ] unsigned int 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;		None               void
 10887 ;; Registers used:
 10888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10895 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10897 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10898 ;;Total ram usage:        5 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:   15
 10901 ;; This function calls:
 10902 ;;		_USB_CDC_get
 10903 ;;		_USB_CDC_send
 10904 ;;		_ringbuf_num
 10905 ;;		_ringbuf_pop
 10906 ;;		_ringbuf_put
 10907 ;; This function is called by:
 10908 ;;		_main
 10909 ;; This function uses a non-reentrant model
 10910 ;;
 10911                           
 10912                           	psect	text42
 10913  0124FC                     __ptext42:
 10914                           	opt stack 0
 10915  0124FC                     _USB_CDC_task:
 10916                           	opt stack 15
 10917                           
 10918                           ;My_usb_cdc.c: 60: if (USBDeviceState < CONFIGURED_STATE) {
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;incstack = 0
 10922  0124FC  0E20               	movlw	32
 10923  0124FE  6024               	cpfslt	_USBDeviceState,c	;volatile
 10924  012500  D001               	goto	l1433
 10925  012502  0012               	return	
 10926  012504                     l1433:
 10927                           
 10928                           ;My_usb_cdc.c: 63: }
 10929                           ;My_usb_cdc.c: 69: if (UCONbits.SUSPND == 1) {
 10930  012504  B265               	btfsc	3941,1,c	;volatile
 10931  012506  0012               	return	
 10932                           
 10933                           ;My_usb_cdc.c: 72: }
 10934                           ;My_usb_cdc.c: 75: uint16_t length = 0;
 10935                           
 10936                           ;My_usb_cdc.c: 71: return;
 10937  012508  0E00               	movlw	0
 10938  01250A  0100               	movlb	0	; () banked
 10939  01250C  6F73               	movwf	(USB_CDC_task@length+1)& (0+255),b
 10940  01250E  0E00               	movlw	0
 10941  012510  6F72               	movwf	USB_CDC_task@length& (0+255),b
 10942                           
 10943                           ;My_usb_cdc.c: 76: while (ringbuf_num(&usb_tx)) {
 10944  012512  D01F               	goto	l10419
 10945  012514                     l10411:
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;My_usb_cdc.c: 77: writeBuffer[length++] = ringbuf_pop(&usb_tx);
 10949  012514  0E64               	movlw	low _usb_tx
 10950  012516  0100               	movlb	0	; () banked
 10951  012518  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10952  01251A  0E01               	movlw	high _usb_tx
 10953  01251C  0100               	movlb	0	; () banked
 10954  01251E  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10955  012520  EC9B  F098         	call	_ringbuf_pop	;wreg free
 10956  012524  0100               	movlb	0	; () banked
 10957  012526  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 10958  012528  0E40               	movlw	low _writeBuffer
 10959  01252A  0100               	movlb	0	; () banked
 10960  01252C  2572               	addwf	USB_CDC_task@length& (0+255),w,b
 10961  01252E  6ED9               	movwf	fsr2l,c
 10962  012530  0E03               	movlw	high _writeBuffer
 10963  012532  0100               	movlb	0	; () banked
 10964  012534  2173               	addwfc	(USB_CDC_task@length+1)& (0+255),w,b
 10965  012536  6EDA               	movwf	fsr2h,c
 10966  012538  C06F  FFDF         	movff	??_USB_CDC_task,indf2
 10967                           
 10968                           ; BSR set to: 0
 10969  01253C  0100               	movlb	0	; () banked
 10970  01253E  4B72               	infsnz	USB_CDC_task@length& (0+255),f,b
 10971  012540  2B73               	incf	(USB_CDC_task@length+1)& (0+255),f,b
 10972                           
 10973                           ; BSR set to: 0
 10974                           ;My_usb_cdc.c: 78: if (length >= 64) {
 10975  012542  0100               	movlb	0	; () banked
 10976  012544  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 10977  012546  E113               	bnz	l10421
 10978  012548  0E40               	movlw	64
 10979  01254A  0100               	movlb	0	; () banked
 10980  01254C  5D72               	subwf	USB_CDC_task@length& (0+255),w,b
 10981  01254E  B0D8               	btfsc	status,0,c
 10982  012550  D00E               	goto	l10421
 10983  012552                     l10419:
 10984                           
 10985                           ; BSR set to: 0
 10986  012552  0E64               	movlw	low _usb_tx
 10987  012554  0100               	movlb	0	; () banked
 10988  012556  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10989  012558  0E01               	movlw	high _usb_tx
 10990  01255A  0100               	movlb	0	; () banked
 10991  01255C  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10992  01255E  ECEA  F093         	call	_ringbuf_num	;wreg free
 10993  012562  0100               	movlb	0	; () banked
 10994  012564  5160               	movf	?_ringbuf_num& (0+255),w,b
 10995  012566  0100               	movlb	0	; () banked
 10996  012568  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10997  01256A  A4D8               	btfss	status,2,c
 10998  01256C  D7D3               	goto	l10411
 10999  01256E                     l10421:
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;My_usb_cdc.c: 80: }
 11003                           ;My_usb_cdc.c: 81: }
 11004                           ;My_usb_cdc.c: 82: if (length) {
 11005  01256E  0100               	movlb	0	; () banked
 11006  012570  5172               	movf	USB_CDC_task@length& (0+255),w,b
 11007  012572  0100               	movlb	0	; () banked
 11008  012574  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 11009  012576  B4D8               	btfsc	status,2,c
 11010  012578  D006               	goto	l1440
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;My_usb_cdc.c: 83: USB_CDC_send(length);
 11014  01257A  C072  F06C         	movff	USB_CDC_task@length,USB_CDC_send@length
 11015  01257E  C073  F06D         	movff	USB_CDC_task@length+1,USB_CDC_send@length+1
 11016  012582  EC58  F0A3         	call	_USB_CDC_send	;wreg free
 11017  012586                     l1440:
 11018                           
 11019                           ;My_usb_cdc.c: 84: }
 11020                           ;My_usb_cdc.c: 86: length = USB_CDC_get();
 11021  012586  ECD3  F0A2         	call	_USB_CDC_get	;wreg free
 11022  01258A  0100               	movlb	0	; () banked
 11023  01258C  6F6F               	movwf	??_USB_CDC_task& (0+255),b
 11024  01258E  0100               	movlb	0	; () banked
 11025  012590  516F               	movf	??_USB_CDC_task& (0+255),w,b
 11026  012592  0100               	movlb	0	; () banked
 11027  012594  6F72               	movwf	USB_CDC_task@length& (0+255),b
 11028  012596  6B73               	clrf	(USB_CDC_task@length+1)& (0+255),b
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;My_usb_cdc.c: 87: if (length) {
 11032  012598  0100               	movlb	0	; () banked
 11033  01259A  5172               	movf	USB_CDC_task@length& (0+255),w,b
 11034  01259C  0100               	movlb	0	; () banked
 11035  01259E  1173               	iorwf	(USB_CDC_task@length+1)& (0+255),w,b
 11036  0125A0  B4D8               	btfsc	status,2,c
 11037  0125A2  0012               	return	
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;My_usb_cdc.c: 88: for (uint16_t i = 0; i < length; i++) {
 11041  0125A4  0E00               	movlw	0
 11042  0125A6  0100               	movlb	0	; () banked
 11043  0125A8  6F71               	movwf	(USB_CDC_task@i+1)& (0+255),b
 11044  0125AA  0E00               	movlw	0
 11045  0125AC  6F70               	movwf	USB_CDC_task@i& (0+255),b
 11046  0125AE  D016               	goto	l10433
 11047  0125B0                     l10429:
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;My_usb_cdc.c: 89: ringbuf_put(&usb_rx, readBuffer[i]);
 11051  0125B0  0E5C               	movlw	low _usb_rx
 11052  0125B2  0100               	movlb	0	; () banked
 11053  0125B4  6F68               	movwf	ringbuf_put@rb& (0+255),b
 11054  0125B6  0E01               	movlw	high _usb_rx
 11055  0125B8  0100               	movlb	0	; () banked
 11056  0125BA  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 11057  0125BC  0E00               	movlw	low _readBuffer
 11058  0125BE  0100               	movlb	0	; () banked
 11059  0125C0  2570               	addwf	USB_CDC_task@i& (0+255),w,b
 11060  0125C2  6ED9               	movwf	fsr2l,c
 11061  0125C4  0E03               	movlw	high _readBuffer
 11062  0125C6  0100               	movlb	0	; () banked
 11063  0125C8  2171               	addwfc	(USB_CDC_task@i+1)& (0+255),w,b
 11064  0125CA  6EDA               	movwf	fsr2h,c
 11065  0125CC  50DF               	movf	indf2,w,c
 11066  0125CE  0100               	movlb	0	; () banked
 11067  0125D0  6F6A               	movwf	ringbuf_put@data& (0+255),b
 11068  0125D2  EC61  F097         	call	_ringbuf_put	;wreg free
 11069  0125D6  0100               	movlb	0	; () banked
 11070  0125D8  4B70               	infsnz	USB_CDC_task@i& (0+255),f,b
 11071  0125DA  2B71               	incf	(USB_CDC_task@i+1)& (0+255),f,b
 11072  0125DC                     l10433:
 11073                           
 11074                           ; BSR set to: 0
 11075  0125DC  0100               	movlb	0	; () banked
 11076  0125DE  5172               	movf	USB_CDC_task@length& (0+255),w,b
 11077  0125E0  0100               	movlb	0	; () banked
 11078  0125E2  5D70               	subwf	USB_CDC_task@i& (0+255),w,b
 11079  0125E4  0100               	movlb	0	; () banked
 11080  0125E6  5173               	movf	(USB_CDC_task@length+1)& (0+255),w,b
 11081  0125E8  0100               	movlb	0	; () banked
 11082  0125EA  5971               	subwfb	(USB_CDC_task@i+1)& (0+255),w,b
 11083  0125EC  B0D8               	btfsc	status,0,c
 11084  0125EE  0012               	return	
 11085  0125F0  D7DF               	goto	l10429
 11086  0125F2                     __end_of_USB_CDC_task:
 11087                           	opt stack 0
 11088                           tblptru	equ	0xFF8
 11089                           tblptrh	equ	0xFF7
 11090                           tblptrl	equ	0xFF6
 11091                           tablat	equ	0xFF5
 11092                           prodh	equ	0xFF4
 11093                           prodl	equ	0xFF3
 11094                           intcon	equ	0xFF2
 11095                           intcon2	equ	0xFF1
 11096                           indf0	equ	0xFEF
 11097                           postinc0	equ	0xFEE
 11098                           fsr0h	equ	0xFEA
 11099                           fsr0l	equ	0xFE9
 11100                           wreg	equ	0xFE8
 11101                           postinc1	equ	0xFE6
 11102                           postdec1	equ	0xFE5
 11103                           fsr1h	equ	0xFE2
 11104                           fsr1l	equ	0xFE1
 11105                           indf2	equ	0xFDF
 11106                           postinc2	equ	0xFDE
 11107                           postdec2	equ	0xFDD
 11108                           fsr2h	equ	0xFDA
 11109                           fsr2l	equ	0xFD9
 11110                           status	equ	0xFD8
 11111                           
 11112 ;; *************** function _ringbuf_put *****************
 11113 ;; Defined at:
 11114 ;;		line 20 in file "../My_library/My_ringbuf.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11117 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 11118 ;;		 -> lcd_tx(8), 
 11119 ;;  data            1   10[BANK0 ] unsigned char 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;		None               void
 11124 ;; Registers used:
 11125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11131 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11134 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11135 ;;Total ram usage:        7 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:   13
 11138 ;; This function calls:
 11139 ;;		_ringbuf_num
 11140 ;; This function is called by:
 11141 ;;		_ringbuf_put_num
 11142 ;;		_ringbuf_put_str
 11143 ;;		_terminal_task
 11144 ;;		_USB_CDC_task
 11145 ;;		_ST7032_command
 11146 ;;		_ST7032_put
 11147 ;;		_ST7032_create_char
 11148 ;;		_ST7032_init
 11149 ;;		_UART_ISR
 11150 ;; This function uses a non-reentrant model
 11151 ;;
 11152                           
 11153                           	psect	text43
 11154  012EC2                     __ptext43:
 11155                           	opt stack 0
 11156  012EC2                     _ringbuf_put:
 11157                           	opt stack 12
 11158                           
 11159                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 11160                           
 11161                           ;incstack = 0
 11162  012EC2  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 11163  012EC6  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 11164  012ECA  ECEA  F093         	call	_ringbuf_num	;wreg free
 11165  012ECE  0100               	movlb	0	; () banked
 11166  012ED0  EE20 F002          	lfsr	2,2
 11167  012ED4  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11168  012ED6  26D9               	addwf	fsr2l,f,c
 11169  012ED8  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11170  012EDA  22DA               	addwfc	fsr2h,f,c
 11171  012EDC  50DE               	movf	postinc2,w,c
 11172  012EDE  0100               	movlb	0	; () banked
 11173  012EE0  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 11174  012EE2  50DE               	movf	postinc2,w,c
 11175  012EE4  0100               	movlb	0	; () banked
 11176  012EE6  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 11177  012EE8  B0D8               	btfsc	status,0,c
 11178  012EEA  0012               	return	
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;My_ringbuf.c: 22: rb->buf[rb->head] = data;
 11182  012EEC  0100               	movlb	0	; () banked
 11183  012EEE  EE20 F004          	lfsr	2,4
 11184  012EF2  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11185  012EF4  26D9               	addwf	fsr2l,f,c
 11186  012EF6  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11187  012EF8  22DA               	addwfc	fsr2h,f,c
 11188  012EFA  CFDE F06B          	movff	postinc2,??_ringbuf_put
 11189  012EFE  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 11190  012F02  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 11191  012F06  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 11192  012F0A  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 11193  012F0E  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 11194  012F12  0100               	movlb	0	; () banked
 11195  012F14  516B               	movf	??_ringbuf_put& (0+255),w,b
 11196  012F16  0100               	movlb	0	; () banked
 11197  012F18  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 11198  012F1A  6ED9               	movwf	fsr2l,c
 11199  012F1C  0100               	movlb	0	; () banked
 11200  012F1E  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 11201  012F20  0100               	movlb	0	; () banked
 11202  012F22  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 11203  012F24  6EDA               	movwf	fsr2h,c
 11204  012F26  C06A  FFDF         	movff	ringbuf_put@data,indf2
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 11208  012F2A  0100               	movlb	0	; () banked
 11209  012F2C  EE20 F002          	lfsr	2,2
 11210  012F30  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11211  012F32  26D9               	addwf	fsr2l,f,c
 11212  012F34  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11213  012F36  22DA               	addwfc	fsr2h,f,c
 11214  012F38  0100               	movlb	0	; () banked
 11215  012F3A  EE10 F004          	lfsr	1,4
 11216  012F3E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11217  012F40  26E1               	addwf	fsr1l,f,c
 11218  012F42  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11219  012F44  22E2               	addwfc	fsr1h,f,c
 11220  012F46  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 11221  012F4A  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 11222  012F4E  0E01               	movlw	1
 11223  012F50  0100               	movlb	0	; () banked
 11224  012F52  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 11225  012F54  0E00               	movlw	0
 11226  012F56  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 11227  012F58  50DE               	movf	postinc2,w,c
 11228  012F5A  0100               	movlb	0	; () banked
 11229  012F5C  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 11230  012F5E  50DE               	movf	postinc2,w,c
 11231  012F60  0100               	movlb	0	; () banked
 11232  012F62  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 11233  012F64  B0D8               	btfsc	status,0,c
 11234  012F66  D00B               	goto	l9153
 11235                           
 11236                           ; BSR set to: 0
 11237  012F68  0100               	movlb	0	; () banked
 11238  012F6A  EE20 F004          	lfsr	2,4
 11239  012F6E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11240  012F70  26D9               	addwf	fsr2l,f,c
 11241  012F72  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11242  012F74  22DA               	addwfc	fsr2h,f,c
 11243  012F76  2ADE               	incf	postinc2,f,c
 11244  012F78  0E00               	movlw	0
 11245  012F7A  22DD               	addwfc	postdec2,f,c
 11246  012F7C  0012               	return	
 11247  012F7E                     l9153:
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;My_ringbuf.c: 24: else rb->head = 0;
 11251  012F7E  0100               	movlb	0	; () banked
 11252  012F80  EE20 F004          	lfsr	2,4
 11253  012F84  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11254  012F86  26D9               	addwf	fsr2l,f,c
 11255  012F88  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11256  012F8A  22DA               	addwfc	fsr2h,f,c
 11257  012F8C  0E00               	movlw	0
 11258  012F8E  6EDE               	movwf	postinc2,c
 11259  012F90  0E00               	movlw	0
 11260  012F92  6EDD               	movwf	postdec2,c
 11261                           
 11262                           ; BSR set to: 0
 11263  012F94  0012               	return	
 11264  012F96                     __end_of_ringbuf_put:
 11265                           	opt stack 0
 11266                           tblptru	equ	0xFF8
 11267                           tblptrh	equ	0xFF7
 11268                           tblptrl	equ	0xFF6
 11269                           tablat	equ	0xFF5
 11270                           prodh	equ	0xFF4
 11271                           prodl	equ	0xFF3
 11272                           intcon	equ	0xFF2
 11273                           intcon2	equ	0xFF1
 11274                           indf0	equ	0xFEF
 11275                           postinc0	equ	0xFEE
 11276                           fsr0h	equ	0xFEA
 11277                           fsr0l	equ	0xFE9
 11278                           wreg	equ	0xFE8
 11279                           postinc1	equ	0xFE6
 11280                           postdec1	equ	0xFE5
 11281                           fsr1h	equ	0xFE2
 11282                           fsr1l	equ	0xFE1
 11283                           indf2	equ	0xFDF
 11284                           postinc2	equ	0xFDE
 11285                           postdec2	equ	0xFDD
 11286                           fsr2h	equ	0xFDA
 11287                           fsr2l	equ	0xFD9
 11288                           status	equ	0xFD8
 11289                           
 11290 ;; *************** function _ringbuf_pop *****************
 11291 ;; Defined at:
 11292 ;;		line 45 in file "../My_library/My_ringbuf.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11295 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 11296 ;;		 -> lcd_tx(8), 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  ret             1   14[BANK0 ] unsigned char 
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      unsigned char 
 11301 ;; Registers used:
 11302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;Total ram usage:        7 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:   13
 11315 ;; This function calls:
 11316 ;;		_ringbuf_num
 11317 ;; This function is called by:
 11318 ;;		_terminal_task
 11319 ;;		_USB_CDC_task
 11320 ;;		_ST7032_task
 11321 ;;		_UART_ISR
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text44
 11326  013136                     __ptext44:
 11327                           	opt stack 0
 11328  013136                     _ringbuf_pop:
 11329                           	opt stack 16
 11330                           
 11331                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;incstack = 0
 11335  013136  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 11336  01313A  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 11337  01313E  ECEA  F093         	call	_ringbuf_num	;wreg free
 11338  013142  0100               	movlb	0	; () banked
 11339  013144  5160               	movf	?_ringbuf_num& (0+255),w,b
 11340  013146  0100               	movlb	0	; () banked
 11341  013148  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11342  01314A  B4D8               	btfsc	status,2,c
 11343  01314C  D058               	goto	l9999
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 11347  01314E  0100               	movlb	0	; () banked
 11348  013150  EE20 F006          	lfsr	2,6
 11349  013154  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11350  013156  26D9               	addwf	fsr2l,f,c
 11351  013158  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11352  01315A  22DA               	addwfc	fsr2h,f,c
 11353  01315C  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 11354  013160  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 11355  013164  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 11356  013168  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 11357  01316C  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 11358  013170  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 11359  013174  0100               	movlb	0	; () banked
 11360  013176  516A               	movf	??_ringbuf_pop& (0+255),w,b
 11361  013178  0100               	movlb	0	; () banked
 11362  01317A  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 11363  01317C  6ED9               	movwf	fsr2l,c
 11364  01317E  0100               	movlb	0	; () banked
 11365  013180  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 11366  013182  0100               	movlb	0	; () banked
 11367  013184  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 11368  013186  6EDA               	movwf	fsr2h,c
 11369  013188  50DF               	movf	indf2,w,c
 11370  01318A  0100               	movlb	0	; () banked
 11371  01318C  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 11375  01318E  0100               	movlb	0	; () banked
 11376  013190  EE20 F002          	lfsr	2,2
 11377  013194  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11378  013196  26D9               	addwf	fsr2l,f,c
 11379  013198  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11380  01319A  22DA               	addwfc	fsr2h,f,c
 11381  01319C  0100               	movlb	0	; () banked
 11382  01319E  EE10 F006          	lfsr	1,6
 11383  0131A2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11384  0131A4  26E1               	addwf	fsr1l,f,c
 11385  0131A6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11386  0131A8  22E2               	addwfc	fsr1h,f,c
 11387  0131AA  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 11388  0131AE  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 11389  0131B2  0E01               	movlw	1
 11390  0131B4  0100               	movlb	0	; () banked
 11391  0131B6  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 11392  0131B8  0E00               	movlw	0
 11393  0131BA  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 11394  0131BC  50DE               	movf	postinc2,w,c
 11395  0131BE  0100               	movlb	0	; () banked
 11396  0131C0  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 11397  0131C2  50DE               	movf	postinc2,w,c
 11398  0131C4  0100               	movlb	0	; () banked
 11399  0131C6  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 11400  0131C8  B0D8               	btfsc	status,0,c
 11401  0131CA  D00B               	goto	l9991
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;My_ringbuf.c: 49: rb->tail++;
 11405  0131CC  0100               	movlb	0	; () banked
 11406  0131CE  EE20 F006          	lfsr	2,6
 11407  0131D2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11408  0131D4  26D9               	addwf	fsr2l,f,c
 11409  0131D6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11410  0131D8  22DA               	addwfc	fsr2h,f,c
 11411  0131DA  2ADE               	incf	postinc2,f,c
 11412  0131DC  0E00               	movlw	0
 11413  0131DE  22DD               	addwfc	postdec2,f,c
 11414                           
 11415                           ;My_ringbuf.c: 50: } else {
 11416  0131E0  D00B               	goto	l9993
 11417  0131E2                     l9991:
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;My_ringbuf.c: 51: rb->tail = 0;
 11421  0131E2  0100               	movlb	0	; () banked
 11422  0131E4  EE20 F006          	lfsr	2,6
 11423  0131E8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11424  0131EA  26D9               	addwf	fsr2l,f,c
 11425  0131EC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11426  0131EE  22DA               	addwfc	fsr2h,f,c
 11427  0131F0  0E00               	movlw	0
 11428  0131F2  6EDE               	movwf	postinc2,c
 11429  0131F4  0E00               	movlw	0
 11430  0131F6  6EDD               	movwf	postdec2,c
 11431  0131F8                     l9993:
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;My_ringbuf.c: 52: }
 11435                           ;My_ringbuf.c: 53: return ret;
 11436  0131F8  0100               	movlb	0	; () banked
 11437  0131FA  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;My_ringbuf.c: 54: } else {
 11441                           
 11442                           ; BSR set to: 0
 11443  0131FC  0012               	return	
 11444  0131FE                     l9999:
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;My_ringbuf.c: 55: return 0;
 11448  0131FE  0E00               	movlw	0
 11449                           
 11450                           ; BSR set to: 0
 11451  013200  0012               	return	
 11452  013202                     __end_of_ringbuf_pop:
 11453                           	opt stack 0
 11454                           tblptru	equ	0xFF8
 11455                           tblptrh	equ	0xFF7
 11456                           tblptrl	equ	0xFF6
 11457                           tablat	equ	0xFF5
 11458                           prodh	equ	0xFF4
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           intcon2	equ	0xFF1
 11462                           indf0	equ	0xFEF
 11463                           postinc0	equ	0xFEE
 11464                           fsr0h	equ	0xFEA
 11465                           fsr0l	equ	0xFE9
 11466                           wreg	equ	0xFE8
 11467                           postinc1	equ	0xFE6
 11468                           postdec1	equ	0xFE5
 11469                           fsr1h	equ	0xFE2
 11470                           fsr1l	equ	0xFE1
 11471                           indf2	equ	0xFDF
 11472                           postinc2	equ	0xFDE
 11473                           postdec2	equ	0xFDD
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function _ringbuf_num *****************
 11479 ;; Defined at:
 11480 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11483 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 11484 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  2    0[BANK0 ] unsigned int 
 11489 ;; Registers used:
 11490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11498 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11499 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11500 ;;Total ram usage:        8 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:   12
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_ringbuf_put
 11507 ;;		_ringbuf_pop
 11508 ;;		_ringbuf_backspace
 11509 ;;		_terminal_task
 11510 ;;		_USB_CDC_task
 11511 ;;		_ST7032_task
 11512 ;;		_UART_ISR
 11513 ;;		_UART_task
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           	psect	text45
 11518  0127D4                     __ptext45:
 11519                           	opt stack 0
 11520  0127D4                     _ringbuf_num:
 11521                           	opt stack 12
 11522                           
 11523                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;incstack = 0
 11527  0127D4  0100               	movlb	0	; () banked
 11528  0127D6  EE20 F006          	lfsr	2,6
 11529  0127DA  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11530  0127DC  26D9               	addwf	fsr2l,f,c
 11531  0127DE  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11532  0127E0  22DA               	addwfc	fsr2h,f,c
 11533  0127E2  0100               	movlb	0	; () banked
 11534  0127E4  EE10 F004          	lfsr	1,4
 11535  0127E8  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11536  0127EA  26E1               	addwf	fsr1l,f,c
 11537  0127EC  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11538  0127EE  22E2               	addwfc	fsr1h,f,c
 11539  0127F0  50DE               	movf	postinc2,w,c
 11540  0127F2  5CE6               	subwf	postinc1,w,c
 11541  0127F4  50DE               	movf	postinc2,w,c
 11542  0127F6  58E6               	subwfb	postinc1,w,c
 11543  0127F8  A0D8               	btfss	status,0,c
 11544  0127FA  D028               	goto	l9049
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11548  0127FC  0100               	movlb	0	; () banked
 11549  0127FE  EE20 F004          	lfsr	2,4
 11550  012802  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11551  012804  26D9               	addwf	fsr2l,f,c
 11552  012806  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11553  012808  22DA               	addwfc	fsr2h,f,c
 11554  01280A  CFDE F062          	movff	postinc2,??_ringbuf_num
 11555  01280E  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11556  012812  0100               	movlb	0	; () banked
 11557  012814  EE20 F006          	lfsr	2,6
 11558  012818  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11559  01281A  26D9               	addwf	fsr2l,f,c
 11560  01281C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11561  01281E  22DA               	addwfc	fsr2h,f,c
 11562  012820  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11563  012824  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11564  012828  0100               	movlb	0	; () banked
 11565  01282A  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11566  01282C  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11567  01282E  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11568  012830  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11569  012832  0100               	movlb	0	; () banked
 11570  012834  5162               	movf	??_ringbuf_num& (0+255),w,b
 11571  012836  0100               	movlb	0	; () banked
 11572  012838  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11573  01283A  0100               	movlb	0	; () banked
 11574  01283C  6F60               	movwf	?_ringbuf_num& (0+255),b
 11575  01283E  0100               	movlb	0	; () banked
 11576  012840  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11577  012842  0100               	movlb	0	; () banked
 11578  012844  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11579  012846  0100               	movlb	0	; () banked
 11580  012848  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;My_ringbuf.c: 15: } else {
 11584                           
 11585                           ; BSR set to: 0
 11586  01284A  0012               	return	
 11587  01284C                     l9049:
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11591  01284C  0100               	movlb	0	; () banked
 11592  01284E  EE20 F004          	lfsr	2,4
 11593  012852  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11594  012854  26D9               	addwf	fsr2l,f,c
 11595  012856  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11596  012858  22DA               	addwfc	fsr2h,f,c
 11597  01285A  CFDE F062          	movff	postinc2,??_ringbuf_num
 11598  01285E  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11599  012862  0100               	movlb	0	; () banked
 11600  012864  EE20 F002          	lfsr	2,2
 11601  012868  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11602  01286A  26D9               	addwf	fsr2l,f,c
 11603  01286C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11604  01286E  22DA               	addwfc	fsr2h,f,c
 11605  012870  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11606  012874  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11607  012878  0100               	movlb	0	; () banked
 11608  01287A  EE20 F006          	lfsr	2,6
 11609  01287E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11610  012880  26D9               	addwf	fsr2l,f,c
 11611  012882  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11612  012884  22DA               	addwfc	fsr2h,f,c
 11613  012886  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 11614  01288A  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 11615  01288E  0100               	movlb	0	; () banked
 11616  012890  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 11617  012892  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 11618  012894  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 11619  012896  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 11620  012898  0100               	movlb	0	; () banked
 11621  01289A  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 11622  01289C  0100               	movlb	0	; () banked
 11623  01289E  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 11624  0128A0  0100               	movlb	0	; () banked
 11625  0128A2  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 11626  0128A4  0100               	movlb	0	; () banked
 11627  0128A6  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 11628  0128A8  0100               	movlb	0	; () banked
 11629  0128AA  5162               	movf	??_ringbuf_num& (0+255),w,b
 11630  0128AC  0100               	movlb	0	; () banked
 11631  0128AE  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 11632  0128B0  0100               	movlb	0	; () banked
 11633  0128B2  6F60               	movwf	?_ringbuf_num& (0+255),b
 11634  0128B4  0100               	movlb	0	; () banked
 11635  0128B6  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11636  0128B8  0100               	movlb	0	; () banked
 11637  0128BA  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 11638  0128BC  0100               	movlb	0	; () banked
 11639  0128BE  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11640                           
 11641                           ; BSR set to: 0
 11642  0128C0  0012               	return	
 11643  0128C2                     __end_of_ringbuf_num:
 11644                           	opt stack 0
 11645                           tblptru	equ	0xFF8
 11646                           tblptrh	equ	0xFF7
 11647                           tblptrl	equ	0xFF6
 11648                           tablat	equ	0xFF5
 11649                           prodh	equ	0xFF4
 11650                           prodl	equ	0xFF3
 11651                           intcon	equ	0xFF2
 11652                           intcon2	equ	0xFF1
 11653                           indf0	equ	0xFEF
 11654                           postinc0	equ	0xFEE
 11655                           fsr0h	equ	0xFEA
 11656                           fsr0l	equ	0xFE9
 11657                           wreg	equ	0xFE8
 11658                           postinc1	equ	0xFE6
 11659                           postdec1	equ	0xFE5
 11660                           fsr1h	equ	0xFE2
 11661                           fsr1l	equ	0xFE1
 11662                           indf2	equ	0xFDF
 11663                           postinc2	equ	0xFDE
 11664                           postdec2	equ	0xFDD
 11665                           fsr2h	equ	0xFDA
 11666                           fsr2l	equ	0xFD9
 11667                           status	equ	0xFD8
 11668                           
 11669 ;; *************** function _USB_CDC_send *****************
 11670 ;; Defined at:
 11671 ;;		line 94 in file "../My_library/My_usb_cdc.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;  length          2   12[BANK0 ] unsigned int 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;		None
 11676 ;; Return value:  Size  Location     Type
 11677 ;;		None               void
 11678 ;; Registers used:
 11679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;Total ram usage:        2 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:   14
 11692 ;; This function calls:
 11693 ;;		_CDCTxService
 11694 ;;		_putUSBUSART
 11695 ;; This function is called by:
 11696 ;;		_USB_CDC_task
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text46
 11701  0146B0                     __ptext46:
 11702                           	opt stack 0
 11703  0146B0                     _USB_CDC_send:
 11704                           	opt stack 15
 11705                           
 11706                           ;My_usb_cdc.c: 95: if ((cdc_trf_state == 0) == 1) {
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;incstack = 0
 11710  0146B0  5028               	movf	_cdc_trf_state,w,c
 11711  0146B2  A4D8               	btfss	status,2,c
 11712  0146B4  D00A               	goto	l10141
 11713                           
 11714                           ;My_usb_cdc.c: 96: putUSBUSART(writeBuffer, length);
 11715  0146B6  0E40               	movlw	low _writeBuffer
 11716  0146B8  0100               	movlb	0	; () banked
 11717  0146BA  6F60               	movwf	putUSBUSART@data& (0+255),b
 11718  0146BC  0E03               	movlw	high _writeBuffer
 11719  0146BE  0100               	movlb	0	; () banked
 11720  0146C0  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 11721  0146C2  C06C  F062         	movff	USB_CDC_send@length,putUSBUSART@length
 11722  0146C6  EC37  F0A3         	call	_putUSBUSART	;wreg free
 11723  0146CA                     l10141:
 11724                           
 11725                           ;My_usb_cdc.c: 97: }
 11726                           ;My_usb_cdc.c: 98: CDCTxService();
 11727  0146CA  ECB4  F08E         	call	_CDCTxService	;wreg free
 11728  0146CE  0012               	return		;funcret
 11729  0146D0                     __end_of_USB_CDC_send:
 11730                           	opt stack 0
 11731                           tblptru	equ	0xFF8
 11732                           tblptrh	equ	0xFF7
 11733                           tblptrl	equ	0xFF6
 11734                           tablat	equ	0xFF5
 11735                           prodh	equ	0xFF4
 11736                           prodl	equ	0xFF3
 11737                           intcon	equ	0xFF2
 11738                           intcon2	equ	0xFF1
 11739                           indf0	equ	0xFEF
 11740                           postinc0	equ	0xFEE
 11741                           fsr0h	equ	0xFEA
 11742                           fsr0l	equ	0xFE9
 11743                           wreg	equ	0xFE8
 11744                           postinc1	equ	0xFE6
 11745                           postdec1	equ	0xFE5
 11746                           fsr1h	equ	0xFE2
 11747                           fsr1l	equ	0xFE1
 11748                           indf2	equ	0xFDF
 11749                           postinc2	equ	0xFDE
 11750                           postdec2	equ	0xFDD
 11751                           fsr2h	equ	0xFDA
 11752                           fsr2l	equ	0xFD9
 11753                           status	equ	0xFD8
 11754                           
 11755 ;; *************** function _putUSBUSART *****************
 11756 ;; Defined at:
 11757 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11760 ;;		 -> writeBuffer(64), 
 11761 ;;  length          1    2[BANK0 ] unsigned char 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;		None               void
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11773 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11777 ;;Total ram usage:        3 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:   12
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_USB_CDC_send
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text47
 11788  01466E                     __ptext47:
 11789                           	opt stack 0
 11790  01466E                     _putUSBUSART:
 11791                           	opt stack 16
 11792                           
 11793                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 11794                           
 11795                           ;incstack = 0
 11796  01466E  98A0               	bcf	4000,4,c	;volatile
 11797                           
 11798                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 11799  014670  5028               	movf	_cdc_trf_state,w,c
 11800  014672  A4D8               	btfss	status,2,c
 11801  014674  D00B               	goto	l9731
 11802                           
 11803                           ;usb_device_cdc.c: 640: {
 11804                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 11805  014676  C060  F0D8         	movff	putUSBUSART@data,_pCDCSrc
 11806  01467A  C061  F0D9         	movff	putUSBUSART@data+1,_pCDCSrc+1
 11807  01467E  C062  F0EC         	movff	putUSBUSART@length,_cdc_tx_len
 11808  014682  0E01               	movlw	1
 11809  014684  0100               	movlb	0	; () banked
 11810  014686  6FEA               	movwf	_cdc_mem_type& (0+255),b
 11811                           
 11812                           ; BSR set to: 0
 11813  014688  0E01               	movlw	1
 11814  01468A  6E28               	movwf	_cdc_trf_state,c
 11815  01468C                     l9731:
 11816                           
 11817                           ;usb_device_cdc.c: 642: }
 11818                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 11819  01468C  88A0               	bsf	4000,4,c	;volatile
 11820  01468E  0012               	return		;funcret
 11821  014690                     __end_of_putUSBUSART:
 11822                           	opt stack 0
 11823                           tblptru	equ	0xFF8
 11824                           tblptrh	equ	0xFF7
 11825                           tblptrl	equ	0xFF6
 11826                           tablat	equ	0xFF5
 11827                           prodh	equ	0xFF4
 11828                           prodl	equ	0xFF3
 11829                           intcon	equ	0xFF2
 11830                           intcon2	equ	0xFF1
 11831                           indf0	equ	0xFEF
 11832                           postinc0	equ	0xFEE
 11833                           fsr0h	equ	0xFEA
 11834                           fsr0l	equ	0xFE9
 11835                           wreg	equ	0xFE8
 11836                           postinc1	equ	0xFE6
 11837                           postdec1	equ	0xFE5
 11838                           fsr1h	equ	0xFE2
 11839                           fsr1l	equ	0xFE1
 11840                           indf2	equ	0xFDF
 11841                           postinc2	equ	0xFDE
 11842                           postdec2	equ	0xFDD
 11843                           fsr2h	equ	0xFDA
 11844                           fsr2l	equ	0xFD9
 11845                           status	equ	0xFD8
 11846                           
 11847 ;; *************** function _USB_CDC_get *****************
 11848 ;; Defined at:
 11849 ;;		line 101 in file "../My_library/My_usb_cdc.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;		None
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;  numBytesRead    1   13[BANK0 ] unsigned char 
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  1    wreg      unsigned char 
 11856 ;; Registers used:
 11857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11867 ;;Total ram usage:        1 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:   14
 11870 ;; This function calls:
 11871 ;;		_CDCTxService
 11872 ;;		_getsUSBUSART
 11873 ;; This function is called by:
 11874 ;;		_USB_CDC_task
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text48
 11879  0145A6                     __ptext48:
 11880                           	opt stack 0
 11881  0145A6                     _USB_CDC_get:
 11882                           	opt stack 15
 11883                           
 11884                           ;My_usb_cdc.c: 102: uint8_t numBytesRead;
 11885                           ;My_usb_cdc.c: 103: if ((cdc_trf_state == 0) == 1) {
 11886                           
 11887                           ;incstack = 0
 11888  0145A6  5028               	movf	_cdc_trf_state,w,c
 11889  0145A8  A4D8               	btfss	status,2,c
 11890  0145AA  D00D               	goto	l1451
 11891                           
 11892                           ;My_usb_cdc.c: 104: numBytesRead = getsUSBUSART(readBuffer, sizeof (readBuffer));
 11893  0145AC  0E00               	movlw	low _readBuffer
 11894  0145AE  0100               	movlb	0	; () banked
 11895  0145B0  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 11896  0145B2  0E03               	movlw	high _readBuffer
 11897  0145B4  0100               	movlb	0	; () banked
 11898  0145B6  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 11899  0145B8  0E40               	movlw	64
 11900  0145BA  0100               	movlb	0	; () banked
 11901  0145BC  6F69               	movwf	getsUSBUSART@len& (0+255),b
 11902  0145BE  EC61  F094         	call	_getsUSBUSART	;wreg free
 11903  0145C2  0100               	movlb	0	; () banked
 11904  0145C4  6F6D               	movwf	USB_CDC_get@numBytesRead& (0+255),b
 11905  0145C6                     l1451:
 11906                           
 11907                           ;My_usb_cdc.c: 105: }
 11908                           ;My_usb_cdc.c: 106: CDCTxService();
 11909  0145C6  ECB4  F08E         	call	_CDCTxService	;wreg free
 11910                           
 11911                           ;My_usb_cdc.c: 107: return numBytesRead;
 11912  0145CA  0100               	movlb	0	; () banked
 11913  0145CC  516D               	movf	USB_CDC_get@numBytesRead& (0+255),w,b
 11914  0145CE  0012               	return	
 11915  0145D0                     __end_of_USB_CDC_get:
 11916                           	opt stack 0
 11917                           tblptru	equ	0xFF8
 11918                           tblptrh	equ	0xFF7
 11919                           tblptrl	equ	0xFF6
 11920                           tablat	equ	0xFF5
 11921                           prodh	equ	0xFF4
 11922                           prodl	equ	0xFF3
 11923                           intcon	equ	0xFF2
 11924                           intcon2	equ	0xFF1
 11925                           indf0	equ	0xFEF
 11926                           postinc0	equ	0xFEE
 11927                           fsr0h	equ	0xFEA
 11928                           fsr0l	equ	0xFE9
 11929                           wreg	equ	0xFE8
 11930                           postinc1	equ	0xFE6
 11931                           postdec1	equ	0xFE5
 11932                           fsr1h	equ	0xFE2
 11933                           fsr1l	equ	0xFE1
 11934                           indf2	equ	0xFDF
 11935                           postinc2	equ	0xFDE
 11936                           postdec2	equ	0xFDD
 11937                           fsr2h	equ	0xFDA
 11938                           fsr2l	equ	0xFD9
 11939                           status	equ	0xFD8
 11940                           
 11941 ;; *************** function _getsUSBUSART *****************
 11942 ;; Defined at:
 11943 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 11946 ;;		 -> readBuffer(64), 
 11947 ;;  len             1    9[BANK0 ] unsigned char 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      unsigned char 
 11952 ;; Registers used:
 11953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11959 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11960 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11962 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11963 ;;Total ram usage:        6 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:   13
 11966 ;; This function calls:
 11967 ;;		_USBTransferOnePacket
 11968 ;; This function is called by:
 11969 ;;		_USB_CDC_get
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text49
 11974  0128C2                     __ptext49:
 11975                           	opt stack 0
 11976  0128C2                     _getsUSBUSART:
 11977                           	opt stack 15
 11978                           
 11979                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;incstack = 0
 11983  0128C2  0E00               	movlw	0
 11984  0128C4  0100               	movlb	0	; () banked
 11985  0128C6  6FEB               	movwf	_cdc_rx_len& (0+255),b
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 11989  0128C8  0100               	movlb	0	; () banked
 11990  0128CA  51DF               	movf	_CDCDataOutHandle& (0+255),w,b
 11991  0128CC  0100               	movlb	0	; () banked
 11992  0128CE  11E0               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 11993  0128D0  B4D8               	btfsc	status,2,c
 11994  0128D2  D013               	goto	l9697
 11995                           
 11996                           ; BSR set to: 0
 11997  0128D4  C0DF  FFD9         	movff	_CDCDataOutHandle,fsr2l
 11998  0128D8  C0E0  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 11999  0128DC  0100               	movlb	0	; () banked
 12000  0128DE  AEDF               	btfss	indf2,7,c
 12001  0128E0  D004               	goto	u9610
 12002  0128E2  0100               	movlb	0	; () banked
 12003  0128E4  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 12004  0128E6  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 12005  0128E8  D002               	goto	u9618
 12006  0128EA                     u9610:
 12007  0128EA  0100               	movlb	0	; () banked
 12008  0128EC  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 12009  0128EE                     u9618:
 12010  0128EE  0100               	movlb	0	; () banked
 12011  0128F0  516A               	movf	??_getsUSBUSART& (0+255),w,b
 12012  0128F2  0100               	movlb	0	; () banked
 12013  0128F4  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 12014  0128F6  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 12015  0128F8  D005               	goto	l9699
 12016  0128FA                     l9697:
 12017                           
 12018                           ; BSR set to: 0
 12019  0128FA  0E00               	movlw	0
 12020  0128FC  0100               	movlb	0	; () banked
 12021  0128FE  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 12022  012900  0E00               	movlw	0
 12023  012902  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 12024  012904                     l9699:
 12025                           
 12026                           ; BSR set to: 0
 12027  012904  0100               	movlb	0	; () banked
 12028  012906  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 12029  012908  0100               	movlb	0	; () banked
 12030  01290A  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 12031  01290C  A4D8               	btfss	status,2,c
 12032  01290E  D04B               	goto	l9715
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;usb_device_cdc.c: 547: {
 12036                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 12037  012910  0100               	movlb	0	; () banked
 12038  012912  EE20 F001          	lfsr	2,1
 12039  012916  51DF               	movf	_CDCDataOutHandle& (0+255),w,b
 12040  012918  26D9               	addwf	fsr2l,f,c
 12041  01291A  51E0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12042  01291C  22DA               	addwfc	fsr2h,f,c
 12043  01291E  0100               	movlb	0	; () banked
 12044  012920  5169               	movf	getsUSBUSART@len& (0+255),w,b
 12045  012922  5CDE               	subwf	postinc2,w,c
 12046  012924  B0D8               	btfsc	status,0,c
 12047  012926  D00A               	goto	l9705
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 12051  012928  0100               	movlb	0	; () banked
 12052  01292A  EE20 F001          	lfsr	2,1
 12053  01292E  51DF               	movf	_CDCDataOutHandle& (0+255),w,b
 12054  012930  26D9               	addwf	fsr2l,f,c
 12055  012932  51E0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12056  012934  22DA               	addwfc	fsr2h,f,c
 12057  012936  50DF               	movf	indf2,w,c
 12058  012938  0100               	movlb	0	; () banked
 12059  01293A  6F69               	movwf	getsUSBUSART@len& (0+255),b
 12060  01293C                     l9705:
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 12064  01293C  0E00               	movlw	0
 12065  01293E  0100               	movlb	0	; () banked
 12066  012940  6FEB               	movwf	_cdc_rx_len& (0+255),b
 12067  012942  D018               	goto	l9711
 12068  012944                     l9707:
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 12072  012944  0100               	movlb	0	; () banked
 12073  012946  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12074  012948  0D01               	mullw	1
 12075  01294A  0E00               	movlw	low _cdc_data_rx
 12076  01294C  24F3               	addwf	prodl,w,c
 12077  01294E  6ED9               	movwf	fsr2l,c
 12078  012950  0E02               	movlw	high _cdc_data_rx
 12079  012952  20F4               	addwfc	prodh,w,c
 12080  012954  6EDA               	movwf	fsr2h,c
 12081  012956  0100               	movlb	0	; () banked
 12082  012958  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12083  01295A  0D01               	mullw	1
 12084  01295C  50F3               	movf	prodl,w,c
 12085  01295E  0100               	movlb	0	; () banked
 12086  012960  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 12087  012962  6EE1               	movwf	fsr1l,c
 12088  012964  50F4               	movf	prodh,w,c
 12089  012966  0100               	movlb	0	; () banked
 12090  012968  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 12091  01296A  6EE2               	movwf	fsr1h,c
 12092  01296C  CFDF FFE7          	movff	indf2,indf1
 12093                           
 12094                           ; BSR set to: 0
 12095  012970  0100               	movlb	0	; () banked
 12096  012972  2BEB               	incf	_cdc_rx_len& (0+255),f,b
 12097  012974                     l9711:
 12098                           
 12099                           ; BSR set to: 0
 12100  012974  0100               	movlb	0	; () banked
 12101  012976  5169               	movf	getsUSBUSART@len& (0+255),w,b
 12102  012978  0100               	movlb	0	; () banked
 12103  01297A  5DEB               	subwf	_cdc_rx_len& (0+255),w,b
 12104  01297C  A0D8               	btfss	status,0,c
 12105  01297E  D7E2               	goto	l9707
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12109                           
 12110                           ; BSR set to: 0
 12111  012980  0E00               	movlw	0
 12112  012982  0100               	movlb	0	; () banked
 12113  012984  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12114  012986  0E00               	movlw	low _cdc_data_rx
 12115  012988  0100               	movlb	0	; () banked
 12116  01298A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12117  01298C  0E02               	movlw	high _cdc_data_rx
 12118  01298E  0100               	movlb	0	; () banked
 12119  012990  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12120  012992  0E40               	movlw	64
 12121  012994  0100               	movlb	0	; () banked
 12122  012996  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12123  012998  0E02               	movlw	2
 12124  01299A  EC20  F096         	call	_USBTransferOnePacket
 12125  01299E  C060  F0DF         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12126  0129A2  C061  F0E0         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12127  0129A6                     l9715:
 12128                           
 12129                           ;usb_device_cdc.c: 567: }
 12130                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 12131  0129A6  0100               	movlb	0	; () banked
 12132  0129A8  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12133  0129AA  0012               	return	
 12134  0129AC                     __end_of_getsUSBUSART:
 12135                           	opt stack 0
 12136                           tblptru	equ	0xFF8
 12137                           tblptrh	equ	0xFF7
 12138                           tblptrl	equ	0xFF6
 12139                           tablat	equ	0xFF5
 12140                           prodh	equ	0xFF4
 12141                           prodl	equ	0xFF3
 12142                           intcon	equ	0xFF2
 12143                           intcon2	equ	0xFF1
 12144                           indf0	equ	0xFEF
 12145                           postinc0	equ	0xFEE
 12146                           fsr0h	equ	0xFEA
 12147                           fsr0l	equ	0xFE9
 12148                           wreg	equ	0xFE8
 12149                           indf1	equ	0xFE7
 12150                           postinc1	equ	0xFE6
 12151                           postdec1	equ	0xFE5
 12152                           fsr1h	equ	0xFE2
 12153                           fsr1l	equ	0xFE1
 12154                           indf2	equ	0xFDF
 12155                           postinc2	equ	0xFDE
 12156                           postdec2	equ	0xFDD
 12157                           fsr2h	equ	0xFDA
 12158                           fsr2l	equ	0xFD9
 12159                           status	equ	0xFD8
 12160                           
 12161 ;; *************** function _CDCTxService *****************
 12162 ;; Defined at:
 12163 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;		None
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 12168 ;;  i               1   10[BANK0 ] unsigned char 
 12169 ;; Return value:  Size  Location     Type
 12170 ;;		None               void
 12171 ;; Registers used:
 12172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12179 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12181 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12182 ;;Total ram usage:        5 bytes
 12183 ;; Hardware stack levels used:    1
 12184 ;; Hardware stack levels required when called:   13
 12185 ;; This function calls:
 12186 ;;		_USBTransferOnePacket
 12187 ;; This function is called by:
 12188 ;;		_USB_CDC_send
 12189 ;;		_USB_CDC_get
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text50
 12194  011D68                     __ptext50:
 12195                           	opt stack 0
 12196  011D68                     _CDCTxService:
 12197                           	opt stack 15
 12198                           
 12199                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 12200                           ;usb_device_cdc.c: 896: uint8_t i;
 12201                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;incstack = 0
 12205  011D68  98A0               	bcf	4000,4,c	;volatile
 12206                           
 12207                           ;usb_device_cdc.c: 900: {};
 12208                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 12209  011D6A  0100               	movlb	0	; () banked
 12210  011D6C  51DD               	movf	_CDCDataInHandle& (0+255),w,b
 12211  011D6E  0100               	movlb	0	; () banked
 12212  011D70  11DE               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12213  011D72  B4D8               	btfsc	status,2,c
 12214  011D74  D013               	goto	l9739
 12215                           
 12216                           ; BSR set to: 0
 12217  011D76  C0DD  FFD9         	movff	_CDCDataInHandle,fsr2l
 12218  011D7A  C0DE  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12219  011D7E  0100               	movlb	0	; () banked
 12220  011D80  AEDF               	btfss	indf2,7,c
 12221  011D82  D004               	goto	u9670
 12222  011D84  0100               	movlb	0	; () banked
 12223  011D86  6B67               	clrf	??_CDCTxService& (0+255),b
 12224  011D88  2B67               	incf	??_CDCTxService& (0+255),f,b
 12225  011D8A  D002               	goto	u9678
 12226  011D8C                     u9670:
 12227  011D8C  0100               	movlb	0	; () banked
 12228  011D8E  6B67               	clrf	??_CDCTxService& (0+255),b
 12229  011D90                     u9678:
 12230  011D90  0100               	movlb	0	; () banked
 12231  011D92  5167               	movf	??_CDCTxService& (0+255),w,b
 12232  011D94  0100               	movlb	0	; () banked
 12233  011D96  6F68               	movwf	_CDCTxService$2005& (0+255),b
 12234  011D98  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 12235  011D9A  D005               	goto	l9741
 12236  011D9C                     l9739:
 12237                           
 12238                           ; BSR set to: 0
 12239  011D9C  0E00               	movlw	0
 12240  011D9E  0100               	movlb	0	; () banked
 12241  011DA0  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 12242  011DA2  0E00               	movlw	0
 12243  011DA4  6F68               	movwf	_CDCTxService$2005& (0+255),b
 12244  011DA6                     l9741:
 12245                           
 12246                           ; BSR set to: 0
 12247  011DA6  0100               	movlb	0	; () banked
 12248  011DA8  5168               	movf	_CDCTxService$2005& (0+255),w,b
 12249  011DAA  0100               	movlb	0	; () banked
 12250  011DAC  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 12251  011DAE  B4D8               	btfsc	status,2,c
 12252  011DB0  D002               	goto	l9745
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;usb_device_cdc.c: 903: {
 12256                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 12257  011DB2  88A0               	bsf	4000,4,c	;volatile
 12258                           
 12259                           ;usb_device_cdc.c: 905: return;
 12260  011DB4  0012               	return	
 12261  011DB6                     l9745:
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;usb_device_cdc.c: 906: }
 12265                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 12266  011DB6  0E03               	movlw	3
 12267  011DB8  1828               	xorwf	_cdc_trf_state,w,c
 12268  011DBA  A4D8               	btfss	status,2,c
 12269  011DBC  D002               	goto	l504
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 12273  011DBE  0E00               	movlw	0
 12274  011DC0  6E28               	movwf	_cdc_trf_state,c
 12275  011DC2                     l504:
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 12279  011DC2  5028               	movf	_cdc_trf_state,w,c
 12280  011DC4  A4D8               	btfss	status,2,c
 12281  011DC6  D002               	goto	l9751
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;usb_device_cdc.c: 920: {
 12285                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 12286  011DC8  88A0               	bsf	4000,4,c	;volatile
 12287                           
 12288                           ;usb_device_cdc.c: 922: return;
 12289  011DCA  0012               	return	
 12290  011DCC                     l9751:
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;usb_device_cdc.c: 923: }
 12294                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 12295  011DCC  0E02               	movlw	2
 12296  011DCE  1828               	xorwf	_cdc_trf_state,w,c
 12297  011DD0  A4D8               	btfss	status,2,c
 12298  011DD2  D016               	goto	l9757
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;usb_device_cdc.c: 929: {
 12302                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 12303  011DD4  0E01               	movlw	1
 12304  011DD6  0100               	movlb	0	; () banked
 12305  011DD8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12306  011DDA  0E00               	movlw	0
 12307  011DDC  0100               	movlb	0	; () banked
 12308  011DDE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12309  011DE0  0E00               	movlw	0
 12310  011DE2  0100               	movlb	0	; () banked
 12311  011DE4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12312  011DE6  0E00               	movlw	0
 12313  011DE8  0100               	movlb	0	; () banked
 12314  011DEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12315  011DEC  0E02               	movlw	2
 12316  011DEE  EC20  F096         	call	_USBTransferOnePacket
 12317  011DF2  C060  F0DD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12318  011DF6  C061  F0DE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12319                           
 12320                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 12321  011DFA  0E03               	movlw	3
 12322  011DFC  6E28               	movwf	_cdc_trf_state,c
 12323                           
 12324                           ;usb_device_cdc.c: 933: }
 12325  011DFE  D06F               	goto	l9801
 12326  011E00                     l9757:
 12327                           
 12328                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 12329  011E00  0428               	decf	_cdc_trf_state,w,c
 12330  011E02  A4D8               	btfss	status,2,c
 12331  011E04  D06C               	goto	l9801
 12332                           
 12333                           ;usb_device_cdc.c: 935: {
 12334                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 12335  011E06  0E40               	movlw	64
 12336  011E08  0100               	movlb	0	; () banked
 12337  011E0A  65EC               	cpfsgt	_cdc_tx_len& (0+255),b
 12338  011E0C  D004               	goto	l509
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 12342  011E0E  0E40               	movlw	64
 12343  011E10  0100               	movlb	0	; () banked
 12344  011E12  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 12345  011E14  D002               	goto	l9763
 12346  011E16                     l509:
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;usb_device_cdc.c: 941: else
 12350                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 12351  011E16  C0EC  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 12352  011E1A                     l9763:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 12356  011E1A  0100               	movlb	0	; () banked
 12357  011E1C  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 12358  011E1E  0800               	sublw	0
 12359  011E20  0100               	movlb	0	; () banked
 12360  011E22  25EC               	addwf	_cdc_tx_len& (0+255),w,b
 12361  011E24  0100               	movlb	0	; () banked
 12362  011E26  6FEC               	movwf	_cdc_tx_len& (0+255),b
 12363                           
 12364                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 12365  011E28  0E40               	movlw	low _cdc_data_tx
 12366  011E2A  0101               	movlb	1	; () banked
 12367  011E2C  6F18               	movwf	_pCDCDst& (0+255),b
 12368  011E2E  0E02               	movlw	high _cdc_data_tx
 12369  011E30  0101               	movlb	1	; () banked
 12370  011E32  6F19               	movwf	(_pCDCDst+1)& (0+255),b
 12371                           
 12372                           ; BSR set to: 1
 12373                           ;usb_device_cdc.c: 951: i = byte_to_send;
 12374  011E34  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 12375                           
 12376                           ; BSR set to: 1
 12377                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 12378  011E38  0100               	movlb	0	; () banked
 12379  011E3A  51EA               	movf	_cdc_mem_type& (0+255),w,b
 12380  011E3C  B4D8               	btfsc	status,2,c
 12381  011E3E  D013               	goto	l9779
 12382  011E40  D02A               	goto	l9789
 12383  011E42                     l9771:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;usb_device_cdc.c: 955: {
 12387                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 12388  011E42  C0D8  FFD9         	movff	_pCDCSrc,fsr2l
 12389  011E46  C0D9  FFDA         	movff	_pCDCSrc+1,fsr2h
 12390  011E4A  C118  FFE1         	movff	_pCDCDst,fsr1l
 12391  011E4E  C119  FFE2         	movff	_pCDCDst+1,fsr1h
 12392  011E52  CFDF FFE7          	movff	indf2,indf1
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 12396  011E56  0101               	movlb	1	; () banked
 12397  011E58  4B18               	infsnz	_pCDCDst& (0+255),f,b
 12398  011E5A  2B19               	incf	(_pCDCDst+1)& (0+255),f,b
 12399                           
 12400                           ; BSR set to: 1
 12401                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 12402  011E5C  0100               	movlb	0	; () banked
 12403  011E5E  4BD8               	infsnz	_pCDCSrc& (0+255),f,b
 12404  011E60  2BD9               	incf	(_pCDCSrc+1)& (0+255),f,b
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;usb_device_cdc.c: 959: i--;
 12408  011E62  0100               	movlb	0	; () banked
 12409  011E64  076A               	decf	CDCTxService@i& (0+255),f,b
 12410  011E66                     l9779:
 12411                           
 12412                           ; BSR set to: 0
 12413  011E66  0100               	movlb	0	; () banked
 12414  011E68  516A               	movf	CDCTxService@i& (0+255),w,b
 12415  011E6A  0100               	movlb	0	; () banked
 12416  011E6C  B4D8               	btfsc	status,2,c
 12417  011E6E  D018               	goto	l9791
 12418  011E70  D7E8               	goto	l9771
 12419  011E72                     l9781:
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;usb_device_cdc.c: 965: {
 12423                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 12424  011E72  C0D8  FFD9         	movff	_pCDCSrc,fsr2l
 12425  011E76  C0D9  FFDA         	movff	_pCDCSrc+1,fsr2h
 12426  011E7A  C118  FFE1         	movff	_pCDCDst,fsr1l
 12427  011E7E  C119  FFE2         	movff	_pCDCDst+1,fsr1h
 12428  011E82  CFDF FFE7          	movff	indf2,indf1
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 12432  011E86  0101               	movlb	1	; () banked
 12433  011E88  4B18               	infsnz	_pCDCDst& (0+255),f,b
 12434  011E8A  2B19               	incf	(_pCDCDst+1)& (0+255),f,b
 12435                           
 12436                           ; BSR set to: 1
 12437                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 12438  011E8C  0100               	movlb	0	; () banked
 12439  011E8E  4BD8               	infsnz	_pCDCSrc& (0+255),f,b
 12440  011E90  2BD9               	incf	(_pCDCSrc+1)& (0+255),f,b
 12441                           
 12442                           ; BSR set to: 0
 12443                           ;usb_device_cdc.c: 969: i--;
 12444  011E92  0100               	movlb	0	; () banked
 12445  011E94  076A               	decf	CDCTxService@i& (0+255),f,b
 12446  011E96                     l9789:
 12447                           
 12448                           ; BSR set to: 0
 12449  011E96  0100               	movlb	0	; () banked
 12450  011E98  516A               	movf	CDCTxService@i& (0+255),w,b
 12451  011E9A  0100               	movlb	0	; () banked
 12452  011E9C  A4D8               	btfss	status,2,c
 12453  011E9E  D7E9               	goto	l9781
 12454  011EA0                     l9791:
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;usb_device_cdc.c: 970: }
 12458                           ;usb_device_cdc.c: 971: }
 12459                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 12460  011EA0  0100               	movlb	0	; () banked
 12461  011EA2  51EC               	movf	_cdc_tx_len& (0+255),w,b
 12462  011EA4  A4D8               	btfss	status,2,c
 12463  011EA6  D009               	goto	l9799
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;usb_device_cdc.c: 978: {
 12467                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 12468  011EA8  0E40               	movlw	64
 12469  011EAA  0100               	movlb	0	; () banked
 12470  011EAC  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12471  011EAE  A4D8               	btfss	status,2,c
 12472  011EB0  D002               	goto	l9797
 12473                           
 12474                           ; BSR set to: 0
 12475                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 12476  011EB2  0E02               	movlw	2
 12477  011EB4  D001               	goto	L2
 12478  011EB6                     l9797:
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;usb_device_cdc.c: 981: else
 12482                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 12483  011EB6  0E03               	movlw	3
 12484  011EB8                     L2:
 12485  011EB8  6E28               	movwf	_cdc_trf_state,c
 12486  011EBA                     l9799:
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;usb_device_cdc.c: 983: }
 12490                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12491  011EBA  0E01               	movlw	1
 12492  011EBC  0100               	movlb	0	; () banked
 12493  011EBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12494  011EC0  0E40               	movlw	low _cdc_data_tx
 12495  011EC2  0100               	movlb	0	; () banked
 12496  011EC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12497  011EC6  0E02               	movlw	high _cdc_data_tx
 12498  011EC8  0100               	movlb	0	; () banked
 12499  011ECA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12500  011ECC  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12501  011ED0  0E02               	movlw	2
 12502  011ED2  EC20  F096         	call	_USBTransferOnePacket
 12503  011ED6  C060  F0DD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12504  011EDA  C061  F0DE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12505  011EDE                     l9801:
 12506                           
 12507                           ;usb_device_cdc.c: 986: }
 12508                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 12509  011EDE  88A0               	bsf	4000,4,c	;volatile
 12510  011EE0  0012               	return		;funcret
 12511  011EE2                     __end_of_CDCTxService:
 12512                           	opt stack 0
 12513                           tblptru	equ	0xFF8
 12514                           tblptrh	equ	0xFF7
 12515                           tblptrl	equ	0xFF6
 12516                           tablat	equ	0xFF5
 12517                           prodh	equ	0xFF4
 12518                           prodl	equ	0xFF3
 12519                           intcon	equ	0xFF2
 12520                           intcon2	equ	0xFF1
 12521                           indf0	equ	0xFEF
 12522                           postinc0	equ	0xFEE
 12523                           fsr0h	equ	0xFEA
 12524                           fsr0l	equ	0xFE9
 12525                           wreg	equ	0xFE8
 12526                           indf1	equ	0xFE7
 12527                           postinc1	equ	0xFE6
 12528                           postdec1	equ	0xFE5
 12529                           fsr1h	equ	0xFE2
 12530                           fsr1l	equ	0xFE1
 12531                           indf2	equ	0xFDF
 12532                           postinc2	equ	0xFDE
 12533                           postdec2	equ	0xFDD
 12534                           fsr2h	equ	0xFDA
 12535                           fsr2l	equ	0xFD9
 12536                           status	equ	0xFD8
 12537                           
 12538 ;; *************** function _USBTransferOnePacket *****************
 12539 ;; Defined at:
 12540 ;;		line 996 in file "../My_library/usb/usb_device.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;  ep              1    wreg     unsigned char 
 12543 ;;  dir             1    0[BANK0 ] unsigned char 
 12544 ;;  data            2    1[BANK0 ] PTR unsigned char 
 12545 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 12546 ;;  len             1    3[BANK0 ] unsigned char 
 12547 ;; Auto vars:     Size  Location     Type
 12548 ;;  ep              1    4[BANK0 ] unsigned char 
 12549 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12550 ;;		 -> NULL(0), BDT(48), 
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  2    0[BANK0 ] PTR void 
 12553 ;; Registers used:
 12554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12561 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12563 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12564 ;;Total ram usage:        7 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:   12
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_getsUSBUSART
 12571 ;;		_CDCTxService
 12572 ;;		_USBCDCEventHandler
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           	psect	text51
 12577  012C40                     __ptext51:
 12578                           	opt stack 0
 12579  012C40                     _USBTransferOnePacket:
 12580                           	opt stack 15
 12581                           
 12582                           ;incstack = 0
 12583                           ;USBTransferOnePacket@ep stored from wreg
 12584  012C40  0100               	movlb	0	; () banked
 12585  012C42  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 12586                           
 12587                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 12588                           ;usb_device.c: 1001: if(dir != 0)
 12589  012C44  0100               	movlb	0	; () banked
 12590  012C46  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12591  012C48  0100               	movlb	0	; () banked
 12592  012C4A  B4D8               	btfsc	status,2,c
 12593  012C4C  D008               	goto	l9521
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;usb_device.c: 1002: {
 12597                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 12598  012C4E  0100               	movlb	0	; () banked
 12599  012C50  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12600  012C52  0D02               	mullw	2
 12601  012C54  0E10               	movlw	low _pBDTEntryIn
 12602  012C56  24F3               	addwf	prodl,w,c
 12603  012C58  6ED9               	movwf	fsr2l,c
 12604  012C5A  0E00               	movlw	high _pBDTEntryIn
 12605  012C5C  D007               	goto	L3
 12606  012C5E                     l9521:
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;usb_device.c: 1006: else
 12610                           ;usb_device.c: 1007: {
 12611                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 12612  012C5E  0100               	movlb	0	; () banked
 12613  012C60  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12614  012C62  0D02               	mullw	2
 12615  012C64  0E0A               	movlw	low _pBDTEntryOut
 12616  012C66  24F3               	addwf	prodl,w,c
 12617  012C68  6ED9               	movwf	fsr2l,c
 12618  012C6A  0E01               	movlw	high _pBDTEntryOut
 12619  012C6C                     L3:
 12620  012C6C  20F4               	addwfc	prodh,w,c
 12621  012C6E  6EDA               	movwf	fsr2h,c
 12622  012C70  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 12623  012C74  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;usb_device.c: 1010: }
 12627                           ;usb_device.c: 1014: if(handle == 0)
 12628                           
 12629                           ; BSR set to: 0
 12630  012C78  0100               	movlb	0	; () banked
 12631  012C7A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12632  012C7C  0100               	movlb	0	; () banked
 12633  012C7E  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12634  012C80  A4D8               	btfss	status,2,c
 12635  012C82  D007               	goto	l9529
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;usb_device.c: 1015: {
 12639                           ;usb_device.c: 1016: return 0;
 12640  012C84  0E00               	movlw	0
 12641  012C86  0100               	movlb	0	; () banked
 12642  012C88  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 12643  012C8A  0E00               	movlw	0
 12644  012C8C  0100               	movlb	0	; () banked
 12645  012C8E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12646                           
 12647                           ; BSR set to: 0
 12648  012C90  0012               	return	
 12649  012C92                     l9529:
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;usb_device.c: 1017: }
 12653                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 12654  012C92  0100               	movlb	0	; () banked
 12655  012C94  EE20 F002          	lfsr	2,2
 12656  012C98  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12657  012C9A  26D9               	addwf	fsr2l,f,c
 12658  012C9C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12659  012C9E  22DA               	addwfc	fsr2h,f,c
 12660  012CA0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12661  012CA4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12662                           
 12663                           ;usb_device.c: 1031: handle->CNT = len;
 12664  012CA8  0100               	movlb	0	; () banked
 12665  012CAA  EE20 F001          	lfsr	2,1
 12666  012CAE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12667  012CB0  26D9               	addwf	fsr2l,f,c
 12668  012CB2  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12669  012CB4  22DA               	addwfc	fsr2h,f,c
 12670  012CB6  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 12674  012CBA  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12675  012CBE  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12676  012CC2  0E40               	movlw	64
 12677  012CC4  16DF               	andwf	indf2,f,c
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 12681  012CC6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12682  012CCA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12683  012CCE  0E00               	movlw	0
 12684  012CD0  86DB               	bsf	plusw2,3,c
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 12688  012CD2  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12689  012CD6  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12690  012CDA  0E00               	movlw	0
 12691  012CDC  8EDB               	bsf	plusw2,7,c
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;usb_device.c: 1037: if(dir != 0)
 12695  012CDE  0100               	movlb	0	; () banked
 12696  012CE0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12697  012CE2  0100               	movlb	0	; () banked
 12698  012CE4  B4D8               	btfsc	status,2,c
 12699  012CE6  D008               	goto	l9541
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;usb_device.c: 1038: {
 12703                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12704  012CE8  0100               	movlb	0	; () banked
 12705  012CEA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12706  012CEC  0D02               	mullw	2
 12707  012CEE  0E10               	movlw	low _pBDTEntryIn
 12708  012CF0  24F3               	addwf	prodl,w,c
 12709  012CF2  6ED9               	movwf	fsr2l,c
 12710  012CF4  0E00               	movlw	high _pBDTEntryIn
 12711  012CF6  D007               	goto	L4
 12712  012CF8                     l9541:
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;usb_device.c: 1042: else
 12716                           ;usb_device.c: 1043: {
 12717                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12718  012CF8  0100               	movlb	0	; () banked
 12719  012CFA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12720  012CFC  0D02               	mullw	2
 12721  012CFE  0E0A               	movlw	low _pBDTEntryOut
 12722  012D00  24F3               	addwf	prodl,w,c
 12723  012D02  6ED9               	movwf	fsr2l,c
 12724  012D04  0E01               	movlw	high _pBDTEntryOut
 12725  012D06                     L4:
 12726  012D06  20F4               	addwfc	prodh,w,c
 12727  012D08  6EDA               	movwf	fsr2h,c
 12728  012D0A  0E04               	movlw	4
 12729  012D0C  1ADF               	xorwf	indf2,f,c
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;usb_device.c: 1046: }
 12733                           ;usb_device.c: 1047: return (void*)handle;
 12734                           
 12735                           ; BSR set to: 0
 12736  012D0E  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12737  012D12  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12738  012D16  0012               	return	
 12739  012D18                     __end_of_USBTransferOnePacket:
 12740                           	opt stack 0
 12741                           tblptru	equ	0xFF8
 12742                           tblptrh	equ	0xFF7
 12743                           tblptrl	equ	0xFF6
 12744                           tablat	equ	0xFF5
 12745                           prodh	equ	0xFF4
 12746                           prodl	equ	0xFF3
 12747                           intcon	equ	0xFF2
 12748                           intcon2	equ	0xFF1
 12749                           indf0	equ	0xFEF
 12750                           postinc0	equ	0xFEE
 12751                           fsr0h	equ	0xFEA
 12752                           fsr0l	equ	0xFE9
 12753                           wreg	equ	0xFE8
 12754                           indf1	equ	0xFE7
 12755                           postinc1	equ	0xFE6
 12756                           postdec1	equ	0xFE5
 12757                           fsr1h	equ	0xFE2
 12758                           fsr1l	equ	0xFE1
 12759                           indf2	equ	0xFDF
 12760                           postinc2	equ	0xFDE
 12761                           postdec2	equ	0xFDD
 12762                           plusw2	equ	0xFDB
 12763                           fsr2h	equ	0xFDA
 12764                           fsr2l	equ	0xFD9
 12765                           status	equ	0xFD8
 12766                           
 12767 ;; *************** function _RTCC_task *****************
 12768 ;; Defined at:
 12769 ;;		line 352 in file "../My_library/My_RTCC.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;		None
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;		None
 12774 ;; Return value:  Size  Location     Type
 12775 ;;		None               void
 12776 ;; Registers used:
 12777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;Total ram usage:        0 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:   16
 12790 ;; This function calls:
 12791 ;;		_RTCC_from_RTCC
 12792 ;; This function is called by:
 12793 ;;		_main
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text52
 12798  014372                     __ptext52:
 12799                           	opt stack 0
 12800  014372                     _RTCC_task:
 12801                           	opt stack 14
 12802                           
 12803                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 12804                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;incstack = 0
 12808  014372  010F               	movlb	15	; () banked
 12809  014374  B93F               	btfsc	63,4,b	;volatile
 12810  014376  0012               	return	
 12811                           
 12812                           ; BSR set to: 15
 12813                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 12814                           
 12815                           ; BSR set to: 15
 12816                           
 12817                           ; BSR set to: 15
 12818  014378  0E00               	movlw	0
 12819  01437A  B73F               	btfsc	63,3,b	;volatile
 12820  01437C  0E01               	movlw	1
 12821  01437E  0101               	movlb	1	; () banked
 12822  014380  6F42               	movwf	(_now+12)& (0+255),b
 12823                           
 12824                           ; BSR set to: 1
 12825                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 12826  014382  0100               	movlb	0	; () banked
 12827  014384  51E5               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 12828  014386  0101               	movlb	1	; () banked
 12829  014388  1942               	xorwf	(_now+12)& (0+255),w,b
 12830  01438A  B4D8               	btfsc	status,2,c
 12831  01438C  0012               	return	
 12832                           
 12833                           ; BSR set to: 1
 12834                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 12835  01438E  C142  F0E5         	movff	_now+12,RTCC_task@prev_halfsec
 12836                           
 12837                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 12838  014392  C142  F141         	movff	_now+12,_now+11
 12839                           
 12840                           ; BSR set to: 1
 12841                           ;My_RTCC.c: 359: time_change_flag = 1;
 12842  014396  0E01               	movlw	1
 12843  014398  0100               	movlb	0	; () banked
 12844  01439A  6FF0               	movwf	_time_change_flag& (0+255),b
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 12848  01439C  0E36               	movlw	low _now
 12849  01439E  0100               	movlb	0	; () banked
 12850  0143A0  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12851  0143A2  0E01               	movlw	high _now
 12852  0143A4  0100               	movlb	0	; () banked
 12853  0143A6  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12854  0143A8  EC85  F0A3         	call	_RTCC_from_RTCC	;wreg free
 12855  0143AC  0012               	return	
 12856  0143AE                     __end_of_RTCC_task:
 12857                           	opt stack 0
 12858                           tblptru	equ	0xFF8
 12859                           tblptrh	equ	0xFF7
 12860                           tblptrl	equ	0xFF6
 12861                           tablat	equ	0xFF5
 12862                           prodh	equ	0xFF4
 12863                           prodl	equ	0xFF3
 12864                           intcon	equ	0xFF2
 12865                           intcon2	equ	0xFF1
 12866                           indf0	equ	0xFEF
 12867                           postinc0	equ	0xFEE
 12868                           fsr0h	equ	0xFEA
 12869                           fsr0l	equ	0xFE9
 12870                           wreg	equ	0xFE8
 12871                           indf1	equ	0xFE7
 12872                           postinc1	equ	0xFE6
 12873                           postdec1	equ	0xFE5
 12874                           fsr1h	equ	0xFE2
 12875                           fsr1l	equ	0xFE1
 12876                           indf2	equ	0xFDF
 12877                           postinc2	equ	0xFDE
 12878                           postdec2	equ	0xFDD
 12879                           plusw2	equ	0xFDB
 12880                           fsr2h	equ	0xFDA
 12881                           fsr2l	equ	0xFD9
 12882                           status	equ	0xFD8
 12883                           
 12884 ;; *************** function _RTCC_from_RTCC *****************
 12885 ;; Defined at:
 12886 ;;		line 199 in file "../My_library/My_RTCC.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;  tm              2   38[BANK0 ] PTR struct .
 12889 ;;		 -> now(14), 
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;		None
 12892 ;; Return value:  Size  Location     Type
 12893 ;;		None               void
 12894 ;; Registers used:
 12895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12905 ;;Total ram usage:        2 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:   15
 12908 ;; This function calls:
 12909 ;;		_RTCC_to_caltime
 12910 ;;		_caltime_to_epoch
 12911 ;; This function is called by:
 12912 ;;		_RTCC_init
 12913 ;;		_RTCC_task
 12914 ;;		_print_time
 12915 ;;		_light_task
 12916 ;;		_display_time_0802
 12917 ;;		_display_time_1602
 12918 ;;		_RTCC_adjust_time_inc
 12919 ;;		_RTCC_adjust_time_dec
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           	psect	text53
 12924  01470A                     __ptext53:
 12925                           	opt stack 0
 12926  01470A                     _RTCC_from_RTCC:
 12927                           	opt stack 10
 12928                           
 12929                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 12930                           
 12931                           ;incstack = 0
 12932  01470A  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12933  01470E  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12934  014712  EC7D  F09A         	call	_RTCC_to_caltime	;wreg free
 12935                           
 12936                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 12937  014716  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12938  01471A  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12939  01471E  EC0F  F088         	call	_caltime_to_epoch	;wreg free
 12940  014722  0012               	return		;funcret
 12941  014724                     __end_of_RTCC_from_RTCC:
 12942                           	opt stack 0
 12943                           tblptru	equ	0xFF8
 12944                           tblptrh	equ	0xFF7
 12945                           tblptrl	equ	0xFF6
 12946                           tablat	equ	0xFF5
 12947                           prodh	equ	0xFF4
 12948                           prodl	equ	0xFF3
 12949                           intcon	equ	0xFF2
 12950                           intcon2	equ	0xFF1
 12951                           indf0	equ	0xFEF
 12952                           postinc0	equ	0xFEE
 12953                           fsr0h	equ	0xFEA
 12954                           fsr0l	equ	0xFE9
 12955                           wreg	equ	0xFE8
 12956                           indf1	equ	0xFE7
 12957                           postinc1	equ	0xFE6
 12958                           postdec1	equ	0xFE5
 12959                           fsr1h	equ	0xFE2
 12960                           fsr1l	equ	0xFE1
 12961                           indf2	equ	0xFDF
 12962                           postinc2	equ	0xFDE
 12963                           postdec2	equ	0xFDD
 12964                           plusw2	equ	0xFDB
 12965                           fsr2h	equ	0xFDA
 12966                           fsr2l	equ	0xFD9
 12967                           status	equ	0xFD8
 12968                           
 12969 ;; *************** function _caltime_to_epoch *****************
 12970 ;; Defined at:
 12971 ;;		line 179 in file "../My_library/My_RTCC.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;  tm              2   25[BANK0 ] PTR struct .
 12974 ;;		 -> now(14), 
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;  month           1   37[BANK0 ] unsigned char 
 12977 ;;  month           1   32[BANK0 ] unsigned char 
 12978 ;;  year            1   31[BANK0 ] unsigned char 
 12979 ;;  epoch           4   33[BANK0 ] unsigned long 
 12980 ;; Return value:  Size  Location     Type
 12981 ;;		None               void
 12982 ;; Registers used:
 12983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12990 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12992 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12993 ;;Total ram usage:       13 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; Hardware stack levels required when called:   14
 12996 ;; This function calls:
 12997 ;;		___lmul
 12998 ;;		_month_length
 12999 ;; This function is called by:
 13000 ;;		_RTCC_from_RTCC
 13001 ;;		_RTCC_from_caltime
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           	psect	text54
 13006  01101E                     __ptext54:
 13007                           	opt stack 0
 13008  01101E                     _caltime_to_epoch:
 13009                           	opt stack 10
 13010                           
 13011                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 13012                           
 13013                           ;incstack = 0
 13014  01101E  0E00               	movlw	0
 13015  011020  0100               	movlb	0	; () banked
 13016  011022  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 13017  011024  0E00               	movlw	0
 13018  011026  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 13019  011028  0E00               	movlw	0
 13020  01102A  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 13021  01102C  0E00               	movlw	0
 13022  01102E  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 13023                           
 13024                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 13025  011030  0E00               	movlw	0
 13026  011032  0100               	movlb	0	; () banked
 13027  011034  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 13028  011036  D037               	goto	l9187
 13029  011038                     l9173:
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 13033  011038  0E01               	movlw	1
 13034  01103A  0100               	movlb	0	; () banked
 13035  01103C  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 13036  01103E                     l9175:
 13037                           
 13038                           ; BSR set to: 0
 13039  01103E  0E0C               	movlw	12
 13040  011040  0100               	movlb	0	; () banked
 13041  011042  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 13042  011044  D001               	goto	l9179
 13043  011046  D02D               	goto	l9185
 13044  011048                     l9179:
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 13048  011048  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 13049  01104C  0100               	movlb	0	; () banked
 13050  01104E  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 13051  011050  ECD6  F094         	call	_month_length
 13052  011054  0100               	movlb	0	; () banked
 13053  011056  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13054  011058  0100               	movlb	0	; () banked
 13055  01105A  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13056  01105C  0100               	movlb	0	; () banked
 13057  01105E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13058  011060  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13059  011062  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13060  011064  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13061  011066  0E80               	movlw	128
 13062  011068  0100               	movlb	0	; () banked
 13063  01106A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13064  01106C  0E51               	movlw	81
 13065  01106E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13066  011070  0E01               	movlw	1
 13067  011072  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13068  011074  0E00               	movlw	0
 13069  011076  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13070  011078  EC13  F09F         	call	___lmul	;wreg free
 13071  01107C  0100               	movlb	0	; () banked
 13072  01107E  516D               	movf	?___lmul& (0+255),w,b
 13073  011080  0100               	movlb	0	; () banked
 13074  011082  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13075  011084  0100               	movlb	0	; () banked
 13076  011086  516E               	movf	(?___lmul+1)& (0+255),w,b
 13077  011088  0100               	movlb	0	; () banked
 13078  01108A  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13079  01108C  0100               	movlb	0	; () banked
 13080  01108E  516F               	movf	(?___lmul+2)& (0+255),w,b
 13081  011090  0100               	movlb	0	; () banked
 13082  011092  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13083  011094  0100               	movlb	0	; () banked
 13084  011096  5170               	movf	(?___lmul+3)& (0+255),w,b
 13085  011098  0100               	movlb	0	; () banked
 13086  01109A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13087                           
 13088                           ; BSR set to: 0
 13089  01109C  0100               	movlb	0	; () banked
 13090  01109E  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 13091  0110A0  D7CE               	goto	l9175
 13092  0110A2                     l9185:
 13093                           
 13094                           ; BSR set to: 0
 13095  0110A2  0100               	movlb	0	; () banked
 13096  0110A4  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 13097  0110A6                     l9187:
 13098                           
 13099                           ; BSR set to: 0
 13100  0110A6  0100               	movlb	0	; () banked
 13101  0110A8  EE20 F00A          	lfsr	2,10
 13102  0110AC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13103  0110AE  26D9               	addwf	fsr2l,f,c
 13104  0110B0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13105  0110B2  22DA               	addwfc	fsr2h,f,c
 13106  0110B4  50DE               	movf	postinc2,w,c
 13107  0110B6  0100               	movlb	0	; () banked
 13108  0110B8  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 13109  0110BA  A0D8               	btfss	status,0,c
 13110  0110BC  D7BD               	goto	l9173
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;My_RTCC.c: 184: }
 13114                           ;My_RTCC.c: 185: }
 13115                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 13116                           
 13117                           ; BSR set to: 0
 13118  0110BE  0E01               	movlw	1
 13119  0110C0  0100               	movlb	0	; () banked
 13120  0110C2  6F80               	movwf	caltime_to_epoch@month_3722& (0+255),b
 13121  0110C4  D032               	goto	l9195
 13122  0110C6                     l9191:
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 13126  0110C6  C080  F066         	movff	caltime_to_epoch@month_3722,month_length@month
 13127  0110CA  0100               	movlb	0	; () banked
 13128  0110CC  EE20 F00A          	lfsr	2,10
 13129  0110D0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13130  0110D2  26D9               	addwf	fsr2l,f,c
 13131  0110D4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13132  0110D6  22DA               	addwfc	fsr2h,f,c
 13133  0110D8  50DF               	movf	indf2,w,c
 13134  0110DA  ECD6  F094         	call	_month_length
 13135  0110DE  0100               	movlb	0	; () banked
 13136  0110E0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13137  0110E2  0100               	movlb	0	; () banked
 13138  0110E4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13139  0110E6  0100               	movlb	0	; () banked
 13140  0110E8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13141  0110EA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13142  0110EC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13143  0110EE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13144  0110F0  0E80               	movlw	128
 13145  0110F2  0100               	movlb	0	; () banked
 13146  0110F4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13147  0110F6  0E51               	movlw	81
 13148  0110F8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13149  0110FA  0E01               	movlw	1
 13150  0110FC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13151  0110FE  0E00               	movlw	0
 13152  011100  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13153  011102  EC13  F09F         	call	___lmul	;wreg free
 13154  011106  0100               	movlb	0	; () banked
 13155  011108  516D               	movf	?___lmul& (0+255),w,b
 13156  01110A  0100               	movlb	0	; () banked
 13157  01110C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13158  01110E  0100               	movlb	0	; () banked
 13159  011110  516E               	movf	(?___lmul+1)& (0+255),w,b
 13160  011112  0100               	movlb	0	; () banked
 13161  011114  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13162  011116  0100               	movlb	0	; () banked
 13163  011118  516F               	movf	(?___lmul+2)& (0+255),w,b
 13164  01111A  0100               	movlb	0	; () banked
 13165  01111C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13166  01111E  0100               	movlb	0	; () banked
 13167  011120  5170               	movf	(?___lmul+3)& (0+255),w,b
 13168  011122  0100               	movlb	0	; () banked
 13169  011124  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13170                           
 13171                           ; BSR set to: 0
 13172  011126  0100               	movlb	0	; () banked
 13173  011128  2B80               	incf	caltime_to_epoch@month_3722& (0+255),f,b
 13174  01112A                     l9195:
 13175                           
 13176                           ; BSR set to: 0
 13177  01112A  0100               	movlb	0	; () banked
 13178  01112C  EE20 F009          	lfsr	2,9
 13179  011130  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13180  011132  26D9               	addwf	fsr2l,f,c
 13181  011134  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13182  011136  22DA               	addwfc	fsr2h,f,c
 13183  011138  50DE               	movf	postinc2,w,c
 13184  01113A  0100               	movlb	0	; () banked
 13185  01113C  5D80               	subwf	caltime_to_epoch@month_3722& (0+255),w,b
 13186  01113E  A0D8               	btfss	status,0,c
 13187  011140  D7C2               	goto	l9191
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;My_RTCC.c: 188: }
 13191                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 13192                           
 13193                           ; BSR set to: 0
 13194  011142  0EFF               	movlw	255
 13195  011144  0100               	movlb	0	; () banked
 13196  011146  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13197  011148  0EFF               	movlw	255
 13198  01114A  0100               	movlb	0	; () banked
 13199  01114C  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 13200  01114E  0100               	movlb	0	; () banked
 13201  011150  EE20 F008          	lfsr	2,8
 13202  011154  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13203  011156  26D9               	addwf	fsr2l,f,c
 13204  011158  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13205  01115A  22DA               	addwfc	fsr2h,f,c
 13206  01115C  50DF               	movf	indf2,w,c
 13207  01115E  0100               	movlb	0	; () banked
 13208  011160  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 13209  011162  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 13210  011164  0100               	movlb	0	; () banked
 13211  011166  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13212  011168  0100               	movlb	0	; () banked
 13213  01116A  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 13214  01116C  0100               	movlb	0	; () banked
 13215  01116E  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 13216  011170  0100               	movlb	0	; () banked
 13217  011172  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 13218  011174  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 13219  011178  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 13220  01117C  0100               	movlb	0	; () banked
 13221  01117E  0E00               	movlw	0
 13222  011180  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13223  011182  0EFF               	movlw	-1
 13224  011184  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 13225  011186  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 13226  011188  0E80               	movlw	128
 13227  01118A  0100               	movlb	0	; () banked
 13228  01118C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13229  01118E  0E51               	movlw	81
 13230  011190  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13231  011192  0E01               	movlw	1
 13232  011194  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13233  011196  0E00               	movlw	0
 13234  011198  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13235  01119A  EC13  F09F         	call	___lmul	;wreg free
 13236  01119E  0100               	movlb	0	; () banked
 13237  0111A0  516D               	movf	?___lmul& (0+255),w,b
 13238  0111A2  0100               	movlb	0	; () banked
 13239  0111A4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13240  0111A6  0100               	movlb	0	; () banked
 13241  0111A8  516E               	movf	(?___lmul+1)& (0+255),w,b
 13242  0111AA  0100               	movlb	0	; () banked
 13243  0111AC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13244  0111AE  0100               	movlb	0	; () banked
 13245  0111B0  516F               	movf	(?___lmul+2)& (0+255),w,b
 13246  0111B2  0100               	movlb	0	; () banked
 13247  0111B4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13248  0111B6  0100               	movlb	0	; () banked
 13249  0111B8  5170               	movf	(?___lmul+3)& (0+255),w,b
 13250  0111BA  0100               	movlb	0	; () banked
 13251  0111BC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13252                           
 13253                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 13254  0111BE  0100               	movlb	0	; () banked
 13255  0111C0  EE20 F006          	lfsr	2,6
 13256  0111C4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13257  0111C6  26D9               	addwf	fsr2l,f,c
 13258  0111C8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13259  0111CA  22DA               	addwfc	fsr2h,f,c
 13260  0111CC  50DF               	movf	indf2,w,c
 13261  0111CE  0100               	movlb	0	; () banked
 13262  0111D0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13263  0111D2  0100               	movlb	0	; () banked
 13264  0111D4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13265  0111D6  0100               	movlb	0	; () banked
 13266  0111D8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13267  0111DA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13268  0111DC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13269  0111DE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13270  0111E0  0E10               	movlw	16
 13271  0111E2  0100               	movlb	0	; () banked
 13272  0111E4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13273  0111E6  0E0E               	movlw	14
 13274  0111E8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13275  0111EA  0E00               	movlw	0
 13276  0111EC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13277  0111EE  0E00               	movlw	0
 13278  0111F0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13279  0111F2  EC13  F09F         	call	___lmul	;wreg free
 13280  0111F6  0100               	movlb	0	; () banked
 13281  0111F8  516D               	movf	?___lmul& (0+255),w,b
 13282  0111FA  0100               	movlb	0	; () banked
 13283  0111FC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13284  0111FE  0100               	movlb	0	; () banked
 13285  011200  516E               	movf	(?___lmul+1)& (0+255),w,b
 13286  011202  0100               	movlb	0	; () banked
 13287  011204  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13288  011206  0100               	movlb	0	; () banked
 13289  011208  516F               	movf	(?___lmul+2)& (0+255),w,b
 13290  01120A  0100               	movlb	0	; () banked
 13291  01120C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13292  01120E  0100               	movlb	0	; () banked
 13293  011210  5170               	movf	(?___lmul+3)& (0+255),w,b
 13294  011212  0100               	movlb	0	; () banked
 13295  011214  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13296                           
 13297                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 13298  011216  0100               	movlb	0	; () banked
 13299  011218  EE20 F005          	lfsr	2,5
 13300  01121C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13301  01121E  26D9               	addwf	fsr2l,f,c
 13302  011220  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13303  011222  22DA               	addwfc	fsr2h,f,c
 13304  011224  50DF               	movf	indf2,w,c
 13305  011226  0100               	movlb	0	; () banked
 13306  011228  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13307  01122A  0100               	movlb	0	; () banked
 13308  01122C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13309  01122E  0100               	movlb	0	; () banked
 13310  011230  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13311  011232  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13312  011234  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13313  011236  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13314  011238  0E3C               	movlw	60
 13315  01123A  0100               	movlb	0	; () banked
 13316  01123C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13317  01123E  0E00               	movlw	0
 13318  011240  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13319  011242  0E00               	movlw	0
 13320  011244  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13321  011246  0E00               	movlw	0
 13322  011248  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13323  01124A  EC13  F09F         	call	___lmul	;wreg free
 13324  01124E  0100               	movlb	0	; () banked
 13325  011250  516D               	movf	?___lmul& (0+255),w,b
 13326  011252  0100               	movlb	0	; () banked
 13327  011254  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13328  011256  0100               	movlb	0	; () banked
 13329  011258  516E               	movf	(?___lmul+1)& (0+255),w,b
 13330  01125A  0100               	movlb	0	; () banked
 13331  01125C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13332  01125E  0100               	movlb	0	; () banked
 13333  011260  516F               	movf	(?___lmul+2)& (0+255),w,b
 13334  011262  0100               	movlb	0	; () banked
 13335  011264  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13336  011266  0100               	movlb	0	; () banked
 13337  011268  5170               	movf	(?___lmul+3)& (0+255),w,b
 13338  01126A  0100               	movlb	0	; () banked
 13339  01126C  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;My_RTCC.c: 192: epoch += tm->ss;
 13343  01126E  0100               	movlb	0	; () banked
 13344  011270  EE20 F004          	lfsr	2,4
 13345  011274  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13346  011276  26D9               	addwf	fsr2l,f,c
 13347  011278  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13348  01127A  22DA               	addwfc	fsr2h,f,c
 13349  01127C  50DF               	movf	indf2,w,c
 13350  01127E  0100               	movlb	0	; () banked
 13351  011280  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13352  011282  0100               	movlb	0	; () banked
 13353  011284  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13354  011286  0100               	movlb	0	; () banked
 13355  011288  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13356  01128A  0E00               	movlw	0
 13357  01128C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13358  01128E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13359  011290  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;My_RTCC.c: 194: tm->epoch = epoch;
 13363  011292  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 13364  011296  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 13365  01129A  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 13366  01129E  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 13367  0112A2  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 13368  0112A6  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 13369                           
 13370                           ; BSR set to: 0
 13371  0112AA  0012               	return		;funcret
 13372  0112AC                     __end_of_caltime_to_epoch:
 13373                           	opt stack 0
 13374                           tblptru	equ	0xFF8
 13375                           tblptrh	equ	0xFF7
 13376                           tblptrl	equ	0xFF6
 13377                           tablat	equ	0xFF5
 13378                           prodh	equ	0xFF4
 13379                           prodl	equ	0xFF3
 13380                           intcon	equ	0xFF2
 13381                           intcon2	equ	0xFF1
 13382                           indf0	equ	0xFEF
 13383                           postinc0	equ	0xFEE
 13384                           fsr0h	equ	0xFEA
 13385                           fsr0l	equ	0xFE9
 13386                           wreg	equ	0xFE8
 13387                           indf1	equ	0xFE7
 13388                           postinc1	equ	0xFE6
 13389                           postdec1	equ	0xFE5
 13390                           fsr1h	equ	0xFE2
 13391                           fsr1l	equ	0xFE1
 13392                           indf2	equ	0xFDF
 13393                           postinc2	equ	0xFDE
 13394                           postdec2	equ	0xFDD
 13395                           plusw2	equ	0xFDB
 13396                           fsr2h	equ	0xFDA
 13397                           fsr2l	equ	0xFD9
 13398                           status	equ	0xFD8
 13399                           
 13400 ;; *************** function _month_length *****************
 13401 ;; Defined at:
 13402 ;;		line 55 in file "../My_library/My_RTCC.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;  year            1    wreg     unsigned char 
 13405 ;;  month           1    6[BANK0 ] unsigned char 
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;  year            1   11[BANK0 ] unsigned char 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      unsigned char 
 13410 ;; Registers used:
 13411 ;;		wreg, status,2, status,0, cstack
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 0/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13417 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13419 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13420 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13421 ;;Total ram usage:        6 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:   13
 13424 ;; This function calls:
 13425 ;;		___awmod
 13426 ;; This function is called by:
 13427 ;;		_epoch_to_caltime
 13428 ;;		_caltime_to_epoch
 13429 ;;		_terminal_time
 13430 ;;		_RTCC_adjust_time_inc
 13431 ;;		_RTCC_adjust_time_dec
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text55
 13436  0129AC                     __ptext55:
 13437                           	opt stack 0
 13438  0129AC                     _month_length:
 13439                           	opt stack 10
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;incstack = 0
 13443                           ;month_length@year stored from wreg
 13444  0129AC  0100               	movlb	0	; () banked
 13445  0129AE  6F6B               	movwf	month_length@year& (0+255),b
 13446                           
 13447                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 13448  0129B0  0E02               	movlw	2
 13449  0129B2  0100               	movlb	0	; () banked
 13450  0129B4  1966               	xorwf	month_length@month& (0+255),w,b
 13451  0129B6  A4D8               	btfss	status,2,c
 13452  0129B8  D03E               	goto	l9065
 13453                           
 13454                           ; BSR set to: 0
 13455  0129BA  C06B  F060         	movff	month_length@year,___awmod@dividend
 13456  0129BE  0100               	movlb	0	; () banked
 13457  0129C0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13458  0129C2  0E00               	movlw	0
 13459  0129C4  0100               	movlb	0	; () banked
 13460  0129C6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13461  0129C8  0E64               	movlw	100
 13462  0129CA  6F62               	movwf	___awmod@divisor& (0+255),b
 13463  0129CC  EC94  F09C         	call	___awmod	;wreg free
 13464  0129D0  0100               	movlb	0	; () banked
 13465  0129D2  5160               	movf	?___awmod& (0+255),w,b
 13466  0129D4  0100               	movlb	0	; () banked
 13467  0129D6  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13468  0129D8  A4D8               	btfss	status,2,c
 13469  0129DA  D002               	goto	u8740
 13470  0129DC  0E01               	movlw	1
 13471  0129DE  D001               	goto	u8750
 13472  0129E0                     u8740:
 13473  0129E0  0E00               	movlw	0
 13474  0129E2                     u8750:
 13475  0129E2  0800               	sublw	0
 13476  0129E4  0100               	movlb	0	; () banked
 13477  0129E6  6F67               	movwf	??_month_length& (0+255),b
 13478  0129E8  C06B  F060         	movff	month_length@year,___awmod@dividend
 13479  0129EC  0100               	movlb	0	; () banked
 13480  0129EE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13481  0129F0  0E01               	movlw	1
 13482  0129F2  0100               	movlb	0	; () banked
 13483  0129F4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13484  0129F6  0E90               	movlw	144
 13485  0129F8  6F62               	movwf	___awmod@divisor& (0+255),b
 13486  0129FA  EC94  F09C         	call	___awmod	;wreg free
 13487  0129FE  0100               	movlb	0	; () banked
 13488  012A00  5160               	movf	?___awmod& (0+255),w,b
 13489  012A02  0100               	movlb	0	; () banked
 13490  012A04  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13491  012A06  A4D8               	btfss	status,2,c
 13492  012A08  D004               	goto	u8760
 13493  012A0A  0100               	movlb	0	; () banked
 13494  012A0C  6B68               	clrf	(??_month_length+1)& (0+255),b
 13495  012A0E  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13496  012A10  D002               	goto	u8778
 13497  012A12                     u8760:
 13498  012A12  0100               	movlb	0	; () banked
 13499  012A14  6B68               	clrf	(??_month_length+1)& (0+255),b
 13500  012A16                     u8778:
 13501  012A16  C06B  F069         	movff	month_length@year,??_month_length+2
 13502  012A1A  0E03               	movlw	3
 13503  012A1C  0100               	movlb	0	; () banked
 13504  012A1E  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13505  012A20  A4D8               	btfss	status,2,c
 13506  012A22  D002               	goto	u8780
 13507  012A24  0E01               	movlw	1
 13508  012A26  D001               	goto	u8790
 13509  012A28                     u8780:
 13510  012A28  0E00               	movlw	0
 13511  012A2A                     u8790:
 13512  012A2A  0100               	movlb	0	; () banked
 13513  012A2C  2568               	addwf	(??_month_length+1)& (0+255),w,b
 13514  012A2E  0100               	movlb	0	; () banked
 13515  012A30  2567               	addwf	??_month_length& (0+255),w,b
 13516  012A32  0F1C               	addlw	28
 13517                           
 13518                           ; BSR set to: 0
 13519                           
 13520                           ; BSR set to: 0
 13521  012A34  0012               	return	
 13522  012A36                     l9065:
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 13526  012A36  0100               	movlb	0	; () banked
 13527  012A38  5166               	movf	month_length@month& (0+255),w,b
 13528  012A3A  0B01               	andlw	1
 13529  012A3C  0100               	movlb	0	; () banked
 13530  012A3E  6F67               	movwf	??_month_length& (0+255),b
 13531  012A40  6B68               	clrf	(??_month_length+1)& (0+255),b
 13532  012A42  0100               	movlb	0	; () banked
 13533  012A44  1F67               	comf	??_month_length& (0+255),f,b
 13534  012A46  1F68               	comf	(??_month_length+1)& (0+255),f,b
 13535  012A48  4B67               	infsnz	??_month_length& (0+255),f,b
 13536  012A4A  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13537  012A4C  0100               	movlb	0	; () banked
 13538  012A4E  5166               	movf	month_length@month& (0+255),w,b
 13539  012A50  0100               	movlb	0	; () banked
 13540  012A52  6F69               	movwf	(??_month_length+2)& (0+255),b
 13541  012A54  6B6A               	clrf	(??_month_length+3)& (0+255),b
 13542  012A56  0100               	movlb	0	; () banked
 13543  012A58  5167               	movf	??_month_length& (0+255),w,b
 13544  012A5A  0100               	movlb	0	; () banked
 13545  012A5C  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 13546  012A5E  0100               	movlb	0	; () banked
 13547  012A60  5168               	movf	(??_month_length+1)& (0+255),w,b
 13548  012A62  0100               	movlb	0	; () banked
 13549  012A64  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 13550  012A66  0E0D               	movlw	13
 13551  012A68  0100               	movlb	0	; () banked
 13552  012A6A  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13553  012A6C  0E00               	movlw	0
 13554  012A6E  176A               	andwf	(??_month_length+3)& (0+255),f,b
 13555  012A70  0E04               	movlw	4
 13556  012A72  0100               	movlb	0	; () banked
 13557  012A74  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 13558  012A76  0100               	movlb	0	; () banked
 13559  012A78  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 13560  012A7A  A4D8               	btfss	status,2,c
 13561  012A7C  D002               	goto	u8800
 13562  012A7E  0E01               	movlw	1
 13563  012A80  D001               	goto	u8810
 13564  012A82                     u8800:
 13565  012A82  0E00               	movlw	0
 13566  012A84                     u8810:
 13567  012A84  0800               	sublw	0
 13568  012A86  0F1F               	addlw	31
 13569                           
 13570                           ; BSR set to: 0
 13571  012A88  0012               	return	
 13572  012A8A                     __end_of_month_length:
 13573                           	opt stack 0
 13574                           tblptru	equ	0xFF8
 13575                           tblptrh	equ	0xFF7
 13576                           tblptrl	equ	0xFF6
 13577                           tablat	equ	0xFF5
 13578                           prodh	equ	0xFF4
 13579                           prodl	equ	0xFF3
 13580                           intcon	equ	0xFF2
 13581                           intcon2	equ	0xFF1
 13582                           indf0	equ	0xFEF
 13583                           postinc0	equ	0xFEE
 13584                           fsr0h	equ	0xFEA
 13585                           fsr0l	equ	0xFE9
 13586                           wreg	equ	0xFE8
 13587                           indf1	equ	0xFE7
 13588                           postinc1	equ	0xFE6
 13589                           postdec1	equ	0xFE5
 13590                           fsr1h	equ	0xFE2
 13591                           fsr1l	equ	0xFE1
 13592                           indf2	equ	0xFDF
 13593                           postinc2	equ	0xFDE
 13594                           postdec2	equ	0xFDD
 13595                           plusw2	equ	0xFDB
 13596                           fsr2h	equ	0xFDA
 13597                           fsr2l	equ	0xFD9
 13598                           status	equ	0xFD8
 13599                           
 13600 ;; *************** function ___awmod *****************
 13601 ;; Defined at:
 13602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;  dividend        2    0[BANK0 ] int 
 13605 ;;  divisor         2    2[BANK0 ] int 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  sign            1    5[BANK0 ] unsigned char 
 13608 ;;  counter         1    4[BANK0 ] unsigned char 
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  2    0[BANK0 ] int 
 13611 ;; Registers used:
 13612 ;;		wreg, status,2, status,0
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13618 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13619 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13621 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13622 ;;Total ram usage:        6 bytes
 13623 ;; Hardware stack levels used:    1
 13624 ;; Hardware stack levels required when called:   12
 13625 ;; This function calls:
 13626 ;;		Nothing
 13627 ;; This function is called by:
 13628 ;;		_month_length
 13629 ;; This function uses a non-reentrant model
 13630 ;;
 13631                           
 13632                           	psect	text56
 13633  013928                     __ptext56:
 13634                           	opt stack 0
 13635  013928                     ___awmod:
 13636                           	opt stack 10
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;incstack = 0
 13640  013928  0E00               	movlw	0
 13641  01392A  0100               	movlb	0	; () banked
 13642  01392C  6F65               	movwf	___awmod@sign& (0+255),b
 13643                           
 13644                           ; BSR set to: 0
 13645  01392E  0100               	movlb	0	; () banked
 13646  013930  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13647  013932  D008               	goto	l9013
 13648                           
 13649                           ; BSR set to: 0
 13650  013934  0100               	movlb	0	; () banked
 13651  013936  6D60               	negf	___awmod@dividend& (0+255),b
 13652  013938  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13653  01393A  B0D8               	btfsc	status,0,c
 13654  01393C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13655                           
 13656                           ; BSR set to: 0
 13657  01393E  0E01               	movlw	1
 13658  013940  0100               	movlb	0	; () banked
 13659  013942  6F65               	movwf	___awmod@sign& (0+255),b
 13660  013944                     l9013:
 13661                           
 13662                           ; BSR set to: 0
 13663  013944  0100               	movlb	0	; () banked
 13664  013946  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13665  013948  D005               	goto	l9017
 13666                           
 13667                           ; BSR set to: 0
 13668  01394A  0100               	movlb	0	; () banked
 13669  01394C  6D62               	negf	___awmod@divisor& (0+255),b
 13670  01394E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13671  013950  B0D8               	btfsc	status,0,c
 13672  013952  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13673  013954                     l9017:
 13674                           
 13675                           ; BSR set to: 0
 13676  013954  0100               	movlb	0	; () banked
 13677  013956  5162               	movf	___awmod@divisor& (0+255),w,b
 13678  013958  0100               	movlb	0	; () banked
 13679  01395A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13680  01395C  B4D8               	btfsc	status,2,c
 13681  01395E  D026               	goto	l9033
 13682                           
 13683                           ; BSR set to: 0
 13684  013960  0E01               	movlw	1
 13685  013962  0100               	movlb	0	; () banked
 13686  013964  6F64               	movwf	___awmod@counter& (0+255),b
 13687  013966  D006               	goto	l9023
 13688  013968                     l9021:
 13689                           
 13690                           ; BSR set to: 0
 13691  013968  0100               	movlb	0	; () banked
 13692  01396A  90D8               	bcf	status,0,c
 13693  01396C  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13694  01396E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13695  013970  0100               	movlb	0	; () banked
 13696  013972  2B64               	incf	___awmod@counter& (0+255),f,b
 13697  013974                     l9023:
 13698                           
 13699                           ; BSR set to: 0
 13700  013974  0100               	movlb	0	; () banked
 13701  013976  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13702  013978  D7F7               	goto	l9021
 13703  01397A                     l9025:
 13704                           
 13705                           ; BSR set to: 0
 13706  01397A  0100               	movlb	0	; () banked
 13707  01397C  5162               	movf	___awmod@divisor& (0+255),w,b
 13708  01397E  0100               	movlb	0	; () banked
 13709  013980  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13710  013982  0100               	movlb	0	; () banked
 13711  013984  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13712  013986  0100               	movlb	0	; () banked
 13713  013988  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13714  01398A  A0D8               	btfss	status,0,c
 13715  01398C  D008               	goto	l9029
 13716                           
 13717                           ; BSR set to: 0
 13718  01398E  0100               	movlb	0	; () banked
 13719  013990  5162               	movf	___awmod@divisor& (0+255),w,b
 13720  013992  0100               	movlb	0	; () banked
 13721  013994  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13722  013996  0100               	movlb	0	; () banked
 13723  013998  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13724  01399A  0100               	movlb	0	; () banked
 13725  01399C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13726  01399E                     l9029:
 13727                           
 13728                           ; BSR set to: 0
 13729  01399E  0100               	movlb	0	; () banked
 13730  0139A0  90D8               	bcf	status,0,c
 13731  0139A2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13732  0139A4  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13733                           
 13734                           ; BSR set to: 0
 13735  0139A6  0100               	movlb	0	; () banked
 13736  0139A8  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13737  0139AA  D7E7               	goto	l9025
 13738  0139AC                     l9033:
 13739                           
 13740                           ; BSR set to: 0
 13741  0139AC  0100               	movlb	0	; () banked
 13742  0139AE  5165               	movf	___awmod@sign& (0+255),w,b
 13743  0139B0  0100               	movlb	0	; () banked
 13744  0139B2  B4D8               	btfsc	status,2,c
 13745  0139B4  D005               	goto	l9037
 13746                           
 13747                           ; BSR set to: 0
 13748  0139B6  0100               	movlb	0	; () banked
 13749  0139B8  6D60               	negf	___awmod@dividend& (0+255),b
 13750  0139BA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13751  0139BC  B0D8               	btfsc	status,0,c
 13752  0139BE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13753  0139C0                     l9037:
 13754                           
 13755                           ; BSR set to: 0
 13756  0139C0  C060  F060         	movff	___awmod@dividend,?___awmod
 13757  0139C4  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13758  0139C8  0012               	return	
 13759  0139CA                     __end_of___awmod:
 13760                           	opt stack 0
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           intcon2	equ	0xFF1
 13769                           indf0	equ	0xFEF
 13770                           postinc0	equ	0xFEE
 13771                           fsr0h	equ	0xFEA
 13772                           fsr0l	equ	0xFE9
 13773                           wreg	equ	0xFE8
 13774                           indf1	equ	0xFE7
 13775                           postinc1	equ	0xFE6
 13776                           postdec1	equ	0xFE5
 13777                           fsr1h	equ	0xFE2
 13778                           fsr1l	equ	0xFE1
 13779                           indf2	equ	0xFDF
 13780                           postinc2	equ	0xFDE
 13781                           postdec2	equ	0xFDD
 13782                           plusw2	equ	0xFDB
 13783                           fsr2h	equ	0xFDA
 13784                           fsr2l	equ	0xFD9
 13785                           status	equ	0xFD8
 13786                           
 13787 ;; *************** function ___lmul *****************
 13788 ;; Defined at:
 13789 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13792 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13793 ;; Auto vars:     Size  Location     Type
 13794 ;;  product         4   21[BANK0 ] unsigned long 
 13795 ;; Return value:  Size  Location     Type
 13796 ;;                  4   13[BANK0 ] unsigned long 
 13797 ;; Registers used:
 13798 ;;		wreg, status,2, status,0
 13799 ;; Tracked objects:
 13800 ;;		On entry : 0/0
 13801 ;;		On exit  : 0/0
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13804 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13805 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13807 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13808 ;;Total ram usage:       12 bytes
 13809 ;; Hardware stack levels used:    1
 13810 ;; Hardware stack levels required when called:   12
 13811 ;; This function calls:
 13812 ;;		Nothing
 13813 ;; This function is called by:
 13814 ;;		_get_quot_rem
 13815 ;;		_caltime_to_epoch
 13816 ;;		_light_task
 13817 ;;		_RTCC_adjust_time_inc
 13818 ;;		_RTCC_adjust_time_dec
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text57
 13823  013E26                     __ptext57:
 13824                           	opt stack 0
 13825  013E26                     ___lmul:
 13826                           	opt stack 11
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;incstack = 0
 13830  013E26  0E00               	movlw	0
 13831  013E28  0100               	movlb	0	; () banked
 13832  013E2A  6F75               	movwf	___lmul@product& (0+255),b
 13833  013E2C  0E00               	movlw	0
 13834  013E2E  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13835  013E30  0E00               	movlw	0
 13836  013E32  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13837  013E34  0E00               	movlw	0
 13838  013E36  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13839  013E38                     l9071:
 13840                           
 13841                           ; BSR set to: 0
 13842  013E38  0100               	movlb	0	; () banked
 13843  013E3A  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13844  013E3C  D010               	goto	l9075
 13845                           
 13846                           ; BSR set to: 0
 13847  013E3E  0100               	movlb	0	; () banked
 13848  013E40  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13849  013E42  0100               	movlb	0	; () banked
 13850  013E44  2775               	addwf	___lmul@product& (0+255),f,b
 13851  013E46  0100               	movlb	0	; () banked
 13852  013E48  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13853  013E4A  0100               	movlb	0	; () banked
 13854  013E4C  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13855  013E4E  0100               	movlb	0	; () banked
 13856  013E50  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13857  013E52  0100               	movlb	0	; () banked
 13858  013E54  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13859  013E56  0100               	movlb	0	; () banked
 13860  013E58  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13861  013E5A  0100               	movlb	0	; () banked
 13862  013E5C  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13863  013E5E                     l9075:
 13864                           
 13865                           ; BSR set to: 0
 13866  013E5E  0100               	movlb	0	; () banked
 13867  013E60  90D8               	bcf	status,0,c
 13868  013E62  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13869  013E64  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13870  013E66  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13871  013E68  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13872                           
 13873                           ; BSR set to: 0
 13874  013E6A  0100               	movlb	0	; () banked
 13875  013E6C  90D8               	bcf	status,0,c
 13876  013E6E  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13877  013E70  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13878  013E72  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13879  013E74  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13880  013E76  0100               	movlb	0	; () banked
 13881  013E78  516D               	movf	___lmul@multiplier& (0+255),w,b
 13882  013E7A  0100               	movlb	0	; () banked
 13883  013E7C  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13884  013E7E  0100               	movlb	0	; () banked
 13885  013E80  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13886  013E82  0100               	movlb	0	; () banked
 13887  013E84  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13888  013E86  A4D8               	btfss	status,2,c
 13889  013E88  D7D7               	goto	l9071
 13890                           
 13891                           ; BSR set to: 0
 13892  013E8A  C075  F06D         	movff	___lmul@product,?___lmul
 13893  013E8E  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13894  013E92  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13895  013E96  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13896                           
 13897                           ; BSR set to: 0
 13898  013E9A  0012               	return		;funcret
 13899  013E9C                     __end_of___lmul:
 13900                           	opt stack 0
 13901                           tblptru	equ	0xFF8
 13902                           tblptrh	equ	0xFF7
 13903                           tblptrl	equ	0xFF6
 13904                           tablat	equ	0xFF5
 13905                           prodh	equ	0xFF4
 13906                           prodl	equ	0xFF3
 13907                           intcon	equ	0xFF2
 13908                           intcon2	equ	0xFF1
 13909                           indf0	equ	0xFEF
 13910                           postinc0	equ	0xFEE
 13911                           fsr0h	equ	0xFEA
 13912                           fsr0l	equ	0xFE9
 13913                           wreg	equ	0xFE8
 13914                           indf1	equ	0xFE7
 13915                           postinc1	equ	0xFE6
 13916                           postdec1	equ	0xFE5
 13917                           fsr1h	equ	0xFE2
 13918                           fsr1l	equ	0xFE1
 13919                           indf2	equ	0xFDF
 13920                           postinc2	equ	0xFDE
 13921                           postdec2	equ	0xFDD
 13922                           plusw2	equ	0xFDB
 13923                           fsr2h	equ	0xFDA
 13924                           fsr2l	equ	0xFD9
 13925                           status	equ	0xFD8
 13926                           
 13927 ;; *************** function _RTCC_to_caltime *****************
 13928 ;; Defined at:
 13929 ;;		line 89 in file "../My_library/My_RTCC.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;  tm              2    2[BANK0 ] PTR struct .
 13932 ;;		 -> now(14), 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  dumy            1    4[BANK0 ] unsigned char 
 13935 ;; Return value:  Size  Location     Type
 13936 ;;		None               void
 13937 ;; Registers used:
 13938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13939 ;; Tracked objects:
 13940 ;;		On entry : 0/0
 13941 ;;		On exit  : 0/0
 13942 ;;		Unchanged: 0/0
 13943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13947 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13948 ;;Total ram usage:        3 bytes
 13949 ;; Hardware stack levels used:    1
 13950 ;; Hardware stack levels required when called:   13
 13951 ;; This function calls:
 13952 ;;		_x_to_d
 13953 ;; This function is called by:
 13954 ;;		_RTCC_from_RTCC
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           	psect	text58
 13959  0134FA                     __ptext58:
 13960                           	opt stack 0
 13961  0134FA                     _RTCC_to_caltime:
 13962                           	opt stack 11
 13963  0134FA                     l932:
 13964  0134FA  010F               	movlb	15	; () banked
 13965  0134FC  B93F               	btfsc	63,4,b	;volatile
 13966  0134FE  D7FD               	goto	l932
 13967                           
 13968                           ; BSR set to: 15
 13969                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 13970  013500  010F               	movlb	15	; () banked
 13971  013502  813F               	bsf	63,0,b	;volatile
 13972                           
 13973                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 13974  013504  010F               	movlb	15	; () banked
 13975  013506  833F               	bsf	63,1,b	;volatile
 13976                           
 13977                           ; BSR set to: 15
 13978                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 13979  013508  0100               	movlb	0	; () banked
 13980  01350A  EE20 F00A          	lfsr	2,10
 13981  01350E  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13982  013510  26D9               	addwf	fsr2l,f,c
 13983  013512  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13984  013514  22DA               	addwfc	fsr2h,f,c
 13985  013516  010F               	movlb	15	; () banked
 13986  013518  513A               	movf	58,w,b	;volatile
 13987  01351A  EC68  F0A3         	call	_x_to_d
 13988  01351E  6EDF               	movwf	indf2,c
 13989                           
 13990                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 13991  013520  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13992                           
 13993                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 13994  013524  0100               	movlb	0	; () banked
 13995  013526  EE20 F008          	lfsr	2,8
 13996  01352A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13997  01352C  26D9               	addwf	fsr2l,f,c
 13998  01352E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13999  013530  22DA               	addwfc	fsr2h,f,c
 14000  013532  010F               	movlb	15	; () banked
 14001  013534  513A               	movf	58,w,b	;volatile
 14002  013536  EC68  F0A3         	call	_x_to_d
 14003  01353A  6EDF               	movwf	indf2,c
 14004                           
 14005                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 14006  01353C  0100               	movlb	0	; () banked
 14007  01353E  EE20 F009          	lfsr	2,9
 14008  013542  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14009  013544  26D9               	addwf	fsr2l,f,c
 14010  013546  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14011  013548  22DA               	addwfc	fsr2h,f,c
 14012  01354A  010F               	movlb	15	; () banked
 14013  01354C  513B               	movf	59,w,b	;volatile
 14014  01354E  EC68  F0A3         	call	_x_to_d
 14015  013552  6EDF               	movwf	indf2,c
 14016                           
 14017                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 14018  013554  0100               	movlb	0	; () banked
 14019  013556  EE20 F006          	lfsr	2,6
 14020  01355A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14021  01355C  26D9               	addwf	fsr2l,f,c
 14022  01355E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14023  013560  22DA               	addwfc	fsr2h,f,c
 14024  013562  010F               	movlb	15	; () banked
 14025  013564  513A               	movf	58,w,b	;volatile
 14026  013566  EC68  F0A3         	call	_x_to_d
 14027  01356A  6EDF               	movwf	indf2,c
 14028                           
 14029                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 14030  01356C  0100               	movlb	0	; () banked
 14031  01356E  EE20 F007          	lfsr	2,7
 14032  013572  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14033  013574  26D9               	addwf	fsr2l,f,c
 14034  013576  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14035  013578  22DA               	addwfc	fsr2h,f,c
 14036  01357A  010F               	movlb	15	; () banked
 14037  01357C  513B               	movf	59,w,b	;volatile
 14038  01357E  EC68  F0A3         	call	_x_to_d
 14039  013582  6EDF               	movwf	indf2,c
 14040                           
 14041                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 14042  013584  0100               	movlb	0	; () banked
 14043  013586  EE20 F004          	lfsr	2,4
 14044  01358A  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14045  01358C  26D9               	addwf	fsr2l,f,c
 14046  01358E  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14047  013590  22DA               	addwfc	fsr2h,f,c
 14048  013592  010F               	movlb	15	; () banked
 14049  013594  513A               	movf	58,w,b	;volatile
 14050  013596  EC68  F0A3         	call	_x_to_d
 14051  01359A  6EDF               	movwf	indf2,c
 14052                           
 14053                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 14054  01359C  0100               	movlb	0	; () banked
 14055  01359E  EE20 F005          	lfsr	2,5
 14056  0135A2  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14057  0135A4  26D9               	addwf	fsr2l,f,c
 14058  0135A6  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14059  0135A8  22DA               	addwfc	fsr2h,f,c
 14060  0135AA  010F               	movlb	15	; () banked
 14061  0135AC  513B               	movf	59,w,b	;volatile
 14062  0135AE  EC68  F0A3         	call	_x_to_d
 14063  0135B2  6EDF               	movwf	indf2,c
 14064  0135B4  0012               	return		;funcret
 14065  0135B6                     __end_of_RTCC_to_caltime:
 14066                           	opt stack 0
 14067                           tblptru	equ	0xFF8
 14068                           tblptrh	equ	0xFF7
 14069                           tblptrl	equ	0xFF6
 14070                           tablat	equ	0xFF5
 14071                           prodh	equ	0xFF4
 14072                           prodl	equ	0xFF3
 14073                           intcon	equ	0xFF2
 14074                           intcon2	equ	0xFF1
 14075                           indf0	equ	0xFEF
 14076                           postinc0	equ	0xFEE
 14077                           fsr0h	equ	0xFEA
 14078                           fsr0l	equ	0xFE9
 14079                           wreg	equ	0xFE8
 14080                           indf1	equ	0xFE7
 14081                           postinc1	equ	0xFE6
 14082                           postdec1	equ	0xFE5
 14083                           fsr1h	equ	0xFE2
 14084                           fsr1l	equ	0xFE1
 14085                           indf2	equ	0xFDF
 14086                           postinc2	equ	0xFDE
 14087                           postdec2	equ	0xFDD
 14088                           plusw2	equ	0xFDB
 14089                           fsr2h	equ	0xFDA
 14090                           fsr2l	equ	0xFD9
 14091                           status	equ	0xFD8
 14092                           
 14093 ;; *************** function _x_to_d *****************
 14094 ;; Defined at:
 14095 ;;		line 51 in file "../My_library/My_RTCC.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;  hex             1    wreg     unsigned char 
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;  hex             1    1[BANK0 ] unsigned char 
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      unsigned char 
 14102 ;; Registers used:
 14103 ;;		wreg, status,2, status,0, prodl, prodh
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;Total ram usage:        2 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:   12
 14116 ;; This function calls:
 14117 ;;		Nothing
 14118 ;; This function is called by:
 14119 ;;		_RTCC_to_caltime
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           	psect	text59
 14124  0146D0                     __ptext59:
 14125                           	opt stack 0
 14126  0146D0                     _x_to_d:
 14127                           	opt stack 11
 14128                           
 14129                           ;incstack = 0
 14130                           ;x_to_d@hex stored from wreg
 14131  0146D0  0100               	movlb	0	; () banked
 14132  0146D2  6F61               	movwf	x_to_d@hex& (0+255),b
 14133                           
 14134                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 14135  0146D4  C061  F060         	movff	x_to_d@hex,??_x_to_d
 14136  0146D8  0E0F               	movlw	15
 14137  0146DA  0100               	movlb	0	; () banked
 14138  0146DC  1760               	andwf	??_x_to_d& (0+255),f,b
 14139  0146DE  0100               	movlb	0	; () banked
 14140  0146E0  3961               	swapf	x_to_d@hex& (0+255),w,b
 14141  0146E2  0B0F               	andlw	15
 14142  0146E4  0B0F               	andlw	15
 14143  0146E6  0D0A               	mullw	10
 14144  0146E8  50F3               	movf	prodl,w,c
 14145  0146EA  0100               	movlb	0	; () banked
 14146  0146EC  2560               	addwf	??_x_to_d& (0+255),w,b
 14147  0146EE  0012               	return	
 14148  0146F0                     __end_of_x_to_d:
 14149                           	opt stack 0
 14150                           tblptru	equ	0xFF8
 14151                           tblptrh	equ	0xFF7
 14152                           tblptrl	equ	0xFF6
 14153                           tablat	equ	0xFF5
 14154                           prodh	equ	0xFF4
 14155                           prodl	equ	0xFF3
 14156                           intcon	equ	0xFF2
 14157                           intcon2	equ	0xFF1
 14158                           indf0	equ	0xFEF
 14159                           postinc0	equ	0xFEE
 14160                           fsr0h	equ	0xFEA
 14161                           fsr0l	equ	0xFE9
 14162                           wreg	equ	0xFE8
 14163                           indf1	equ	0xFE7
 14164                           postinc1	equ	0xFE6
 14165                           postdec1	equ	0xFE5
 14166                           fsr1h	equ	0xFE2
 14167                           fsr1l	equ	0xFE1
 14168                           indf2	equ	0xFDF
 14169                           postinc2	equ	0xFDE
 14170                           postdec2	equ	0xFDD
 14171                           plusw2	equ	0xFDB
 14172                           fsr2h	equ	0xFDA
 14173                           fsr2l	equ	0xFD9
 14174                           status	equ	0xFD8
 14175                           
 14176 ;; *************** function _ISR *****************
 14177 ;; Defined at:
 14178 ;;		line 61 in file "PIC18F27J53-killifish_light06.c"
 14179 ;; Parameters:    Size  Location     Type
 14180 ;;		None
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;		None
 14183 ;; Return value:  Size  Location     Type
 14184 ;;		None               void
 14185 ;; Registers used:
 14186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14194 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14195 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14196 ;;Total ram usage:       15 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:   11
 14199 ;; This function calls:
 14200 ;;		_USB_CDC_ISR
 14201 ;;		_button_timer_interrupt
 14202 ;; This function is called by:
 14203 ;;		Interrupt level 2
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           	psect	intcode
 14208  001008                     __pintcode:
 14209                           	opt stack 0
 14210  001008                     _ISR:
 14211                           	opt stack 10
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;incstack = 0
 14215  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14216  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14217  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14218  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14219  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14220  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14221  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14222  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14223  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14224  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14225  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14226  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14227  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14228  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14229  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14230                           
 14231                           ;PIC18F27J53-killifish_light06.c: 62: USB_CDC_ISR();
 14232  001042  ECA0  F0A3         	call	_USB_CDC_ISR	;wreg free
 14233                           
 14234                           ;PIC18F27J53-killifish_light06.c: 63: if (INTCONbits.T0IF) {
 14235  001046  B4F2               	btfsc	intcon,2,c	;volatile
 14236                           
 14237                           ;PIC18F27J53-killifish_light06.c: 64: INTCONbits.T0IF = 0;
 14238  001048  94F2               	bcf	intcon,2,c	;volatile
 14239                           
 14240                           ;PIC18F27J53-killifish_light06.c: 65: }
 14241                           ;PIC18F27J53-killifish_light06.c: 66: if (PIR1bits.TMR1IF) {
 14242  00104A  A09E               	btfss	3998,0,c	;volatile
 14243  00104C  D010               	goto	i2l8931
 14244                           
 14245                           ;PIC18F27J53-killifish_light06.c: 67: PIR1bits.TMR1IF = 0;
 14246  00104E  909E               	bcf	3998,0,c	;volatile
 14247                           
 14248                           ;PIC18F27J53-killifish_light06.c: 68: TMR1H = 0x80;
 14249  001050  0E80               	movlw	128
 14250  001052  6ECF               	movwf	4047,c	;volatile
 14251                           
 14252                           ;PIC18F27J53-killifish_light06.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 14253  001054  BA8A               	btfsc	3978,5,c	;volatile
 14254  001056  D003               	goto	i2u857_40
 14255  001058  6A4C               	clrf	??_ISR& (0+255),c
 14256  00105A  2A4C               	incf	??_ISR& (0+255),f,c
 14257  00105C  D001               	goto	i2u858_48
 14258  00105E                     i2u857_40:
 14259  00105E  6A4C               	clrf	??_ISR& (0+255),c
 14260  001060                     i2u858_48:
 14261  001060  3A4C               	swapf	??_ISR,f,c
 14262  001062  464C               	rlncf	??_ISR,f,c
 14263  001064  508A               	movf	3978,w,c	;volatile
 14264  001066  184C               	xorwf	??_ISR,w,c
 14265  001068  0BDF               	andlw	-33
 14266  00106A  184C               	xorwf	??_ISR,w,c
 14267  00106C  6E8A               	movwf	3978,c	;volatile
 14268  00106E                     i2l8931:
 14269                           
 14270                           ;PIC18F27J53-killifish_light06.c: 70: }
 14271                           ;PIC18F27J53-killifish_light06.c: 71: if (PIR2bits.TMR3IF) {
 14272  00106E  A2A1               	btfss	4001,1,c	;volatile
 14273  001070  D028               	goto	i2l1594
 14274                           
 14275                           ;PIC18F27J53-killifish_light06.c: 72: PIR2bits.TMR3IF = 0;
 14276  001072  92A1               	bcf	4001,1,c	;volatile
 14277                           
 14278                           ;PIC18F27J53-killifish_light06.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 14279  001074  0E83               	movlw	low _sw_R
 14280  001076  6E2E               	movwf	button_timer_interrupt@bt,c
 14281  001078  0E01               	movlw	high _sw_R
 14282  00107A  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14283  00107C  BA80               	btfsc	3968,5,c	;volatile
 14284  00107E  D002               	goto	i2u860_40
 14285  001080  0E01               	movlw	1
 14286  001082  D001               	goto	i2u861_40
 14287  001084                     i2u860_40:
 14288  001084  0E00               	movlw	0
 14289  001086                     i2u861_40:
 14290  001086  6E30               	movwf	button_timer_interrupt@sw_value,c
 14291  001088  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14292                           
 14293                           ;PIC18F27J53-killifish_light06.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 14294  00108C  0E7F               	movlw	low _sw_G
 14295  00108E  6E2E               	movwf	button_timer_interrupt@bt,c
 14296  001090  0E01               	movlw	high _sw_G
 14297  001092  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14298  001094  BC80               	btfsc	3968,6,c	;volatile
 14299  001096  D002               	goto	i2u862_40
 14300  001098  0E01               	movlw	1
 14301  00109A  D001               	goto	i2u863_40
 14302  00109C                     i2u862_40:
 14303  00109C  0E00               	movlw	0
 14304  00109E                     i2u863_40:
 14305  00109E  6E30               	movwf	button_timer_interrupt@sw_value,c
 14306  0010A0  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14307                           
 14308                           ;PIC18F27J53-killifish_light06.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 14309  0010A4  0E7B               	movlw	low _sw_B
 14310  0010A6  6E2E               	movwf	button_timer_interrupt@bt,c
 14311  0010A8  0E01               	movlw	high _sw_B
 14312  0010AA  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14313  0010AC  BE80               	btfsc	3968,7,c	;volatile
 14314  0010AE  D002               	goto	i2u864_40
 14315  0010B0  0E01               	movlw	1
 14316  0010B2  D001               	goto	i2u865_40
 14317  0010B4                     i2u864_40:
 14318  0010B4  0E00               	movlw	0
 14319  0010B6                     i2u865_40:
 14320  0010B6  6E30               	movwf	button_timer_interrupt@sw_value,c
 14321  0010B8  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14322                           
 14323                           ;PIC18F27J53-killifish_light06.c: 76: ADC_flag = 1;
 14324  0010BC  0E01               	movlw	1
 14325  0010BE  0100               	movlb	0	; () banked
 14326  0010C0  6FE6               	movwf	_ADC_flag& (0+255),b
 14327  0010C2                     i2l1594:
 14328  0010C2  C05A  FFF5         	movff	??_ISR+14,tablat
 14329  0010C6  C059  FFF8         	movff	??_ISR+13,tblptru
 14330  0010CA  C058  FFF7         	movff	??_ISR+12,tblptrh
 14331  0010CE  C057  FFF6         	movff	??_ISR+11,tblptrl
 14332  0010D2  C056  FFF4         	movff	??_ISR+10,prodh
 14333  0010D6  C055  FFF3         	movff	??_ISR+9,prodl
 14334  0010DA  C054  FFDA         	movff	??_ISR+8,fsr2h
 14335  0010DE  C053  FFD9         	movff	??_ISR+7,fsr2l
 14336  0010E2  C052  FFE2         	movff	??_ISR+6,fsr1h
 14337  0010E6  C051  FFE1         	movff	??_ISR+5,fsr1l
 14338  0010EA  C050  FFEA         	movff	??_ISR+4,fsr0h
 14339  0010EE  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14340  0010F2  C04E  FFFB         	movff	??_ISR+2,pclatu
 14341  0010F6  C04D  FFFA         	movff	??_ISR+1,pclath
 14342  0010FA  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14343  0010FC  0011               	retfie		f
 14344  0010FE                     __end_of_ISR:
 14345                           	opt stack 0
 14346                           pclatu	equ	0xFFB
 14347                           pclath	equ	0xFFA
 14348                           tblptru	equ	0xFF8
 14349                           tblptrh	equ	0xFF7
 14350                           tblptrl	equ	0xFF6
 14351                           tablat	equ	0xFF5
 14352                           prodh	equ	0xFF4
 14353                           prodl	equ	0xFF3
 14354                           intcon	equ	0xFF2
 14355                           intcon2	equ	0xFF1
 14356                           indf0	equ	0xFEF
 14357                           postinc0	equ	0xFEE
 14358                           fsr0h	equ	0xFEA
 14359                           fsr0l	equ	0xFE9
 14360                           wreg	equ	0xFE8
 14361                           indf1	equ	0xFE7
 14362                           postinc1	equ	0xFE6
 14363                           postdec1	equ	0xFE5
 14364                           fsr1h	equ	0xFE2
 14365                           fsr1l	equ	0xFE1
 14366                           indf2	equ	0xFDF
 14367                           postinc2	equ	0xFDE
 14368                           postdec2	equ	0xFDD
 14369                           plusw2	equ	0xFDB
 14370                           fsr2h	equ	0xFDA
 14371                           fsr2l	equ	0xFD9
 14372                           status	equ	0xFD8
 14373                           
 14374 ;; *************** function _button_timer_interrupt *****************
 14375 ;; Defined at:
 14376 ;;		line 3 in file "../My_library/My_button.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  bt              2    0[COMRAM] PTR struct button
 14379 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 14380 ;;  sw_value        1    2[COMRAM] unsigned char 
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;		None
 14383 ;; Return value:  Size  Location     Type
 14384 ;;		None               void
 14385 ;; Registers used:
 14386 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/0
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14392 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14395 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14396 ;;Total ram usage:        5 bytes
 14397 ;; Hardware stack levels used:    1
 14398 ;; This function calls:
 14399 ;;		Nothing
 14400 ;; This function is called by:
 14401 ;;		_ISR
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405                           	psect	text61
 14406  011534                     __ptext61:
 14407                           	opt stack 0
 14408  011534                     _button_timer_interrupt:
 14409                           	opt stack 20
 14410                           
 14411                           ;My_button.c: 4: if (sw_value) {
 14412                           
 14413                           ;incstack = 0
 14414  011534  5030               	movf	button_timer_interrupt@sw_value,w,c
 14415  011536  B4D8               	btfsc	status,2,c
 14416  011538  D098               	goto	i2l7937
 14417                           
 14418                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 14419  01153A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14420  01153E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14421  011542  0E84               	movlw	132
 14422  011544  18DE               	xorwf	postinc2,w,c
 14423  011546  E10B               	bnz	i2l525
 14424  011548  0E03               	movlw	3
 14425  01154A  18DE               	xorwf	postinc2,w,c
 14426  01154C  A4D8               	btfss	status,2,c
 14427  01154E  D007               	goto	i2l525
 14428  011550  EE20 F003          	lfsr	2,3
 14429  011554  502E               	movf	button_timer_interrupt@bt,w,c
 14430  011556  26D9               	addwf	fsr2l,f,c
 14431  011558  502F               	movf	button_timer_interrupt@bt+1,w,c
 14432  01155A  22DA               	addwfc	fsr2h,f,c
 14433  01155C  8EDF               	bsf	indf2,7,c
 14434  01155E                     i2l525:
 14435                           
 14436                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 14437  01155E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14438  011562  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14439  011566  0EBC               	movlw	188
 14440  011568  18DE               	xorwf	postinc2,w,c
 14441  01156A  E10B               	bnz	i2l526
 14442  01156C  0E02               	movlw	2
 14443  01156E  18DE               	xorwf	postinc2,w,c
 14444  011570  A4D8               	btfss	status,2,c
 14445  011572  D007               	goto	i2l526
 14446  011574  EE20 F003          	lfsr	2,3
 14447  011578  502E               	movf	button_timer_interrupt@bt,w,c
 14448  01157A  26D9               	addwf	fsr2l,f,c
 14449  01157C  502F               	movf	button_timer_interrupt@bt+1,w,c
 14450  01157E  22DA               	addwfc	fsr2h,f,c
 14451  011580  8CDF               	bsf	indf2,6,c
 14452  011582                     i2l526:
 14453                           
 14454                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 14455  011582  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14456  011586  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14457  01158A  0EF4               	movlw	244
 14458  01158C  18DE               	xorwf	postinc2,w,c
 14459  01158E  E10A               	bnz	i2l527
 14460  011590  04DE               	decf	postinc2,w,c
 14461  011592  A4D8               	btfss	status,2,c
 14462  011594  D007               	goto	i2l527
 14463  011596  EE20 F003          	lfsr	2,3
 14464  01159A  502E               	movf	button_timer_interrupt@bt,w,c
 14465  01159C  26D9               	addwf	fsr2l,f,c
 14466  01159E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14467  0115A0  22DA               	addwfc	fsr2h,f,c
 14468  0115A2  8ADF               	bsf	indf2,5,c
 14469  0115A4                     i2l527:
 14470                           
 14471                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 14472  0115A4  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14473  0115A8  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14474  0115AC  0E2C               	movlw	44
 14475  0115AE  18DE               	xorwf	postinc2,w,c
 14476  0115B0  E10A               	bnz	i2l528
 14477  0115B2  04DE               	decf	postinc2,w,c
 14478  0115B4  A4D8               	btfss	status,2,c
 14479  0115B6  D007               	goto	i2l528
 14480  0115B8  EE20 F003          	lfsr	2,3
 14481  0115BC  502E               	movf	button_timer_interrupt@bt,w,c
 14482  0115BE  26D9               	addwf	fsr2l,f,c
 14483  0115C0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14484  0115C2  22DA               	addwfc	fsr2h,f,c
 14485  0115C4  88DF               	bsf	indf2,4,c
 14486  0115C6                     i2l528:
 14487                           
 14488                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 14489  0115C6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14490  0115CA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14491  0115CE  0E96               	movlw	150
 14492  0115D0  18DE               	xorwf	postinc2,w,c
 14493  0115D2  10DE               	iorwf	postinc2,w,c
 14494  0115D4  A4D8               	btfss	status,2,c
 14495  0115D6  D007               	goto	i2l529
 14496  0115D8  EE20 F003          	lfsr	2,3
 14497  0115DC  502E               	movf	button_timer_interrupt@bt,w,c
 14498  0115DE  26D9               	addwf	fsr2l,f,c
 14499  0115E0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14500  0115E2  22DA               	addwfc	fsr2h,f,c
 14501  0115E4  86DF               	bsf	indf2,3,c
 14502  0115E6                     i2l529:
 14503                           
 14504                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 14505  0115E6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14506  0115EA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14507  0115EE  0E3C               	movlw	60
 14508  0115F0  18DE               	xorwf	postinc2,w,c
 14509  0115F2  10DE               	iorwf	postinc2,w,c
 14510  0115F4  A4D8               	btfss	status,2,c
 14511  0115F6  D007               	goto	i2l530
 14512  0115F8  EE20 F003          	lfsr	2,3
 14513  0115FC  502E               	movf	button_timer_interrupt@bt,w,c
 14514  0115FE  26D9               	addwf	fsr2l,f,c
 14515  011600  502F               	movf	button_timer_interrupt@bt+1,w,c
 14516  011602  22DA               	addwfc	fsr2h,f,c
 14517  011604  84DF               	bsf	indf2,2,c
 14518  011606                     i2l530:
 14519                           
 14520                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 14521  011606  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14522  01160A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14523  01160E  0E10               	movlw	16
 14524  011610  18DE               	xorwf	postinc2,w,c
 14525  011612  10DE               	iorwf	postinc2,w,c
 14526  011614  A4D8               	btfss	status,2,c
 14527  011616  D007               	goto	i2l531
 14528  011618  EE20 F003          	lfsr	2,3
 14529  01161C  502E               	movf	button_timer_interrupt@bt,w,c
 14530  01161E  26D9               	addwf	fsr2l,f,c
 14531  011620  502F               	movf	button_timer_interrupt@bt+1,w,c
 14532  011622  22DA               	addwfc	fsr2h,f,c
 14533  011624  82DF               	bsf	indf2,1,c
 14534  011626                     i2l531:
 14535                           
 14536                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 14537  011626  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14538  01162A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14539  01162E  0E02               	movlw	2
 14540  011630  18DE               	xorwf	postinc2,w,c
 14541  011632  10DE               	iorwf	postinc2,w,c
 14542  011634  A4D8               	btfss	status,2,c
 14543  011636  D007               	goto	i2l532
 14544  011638  EE20 F003          	lfsr	2,3
 14545  01163C  502E               	movf	button_timer_interrupt@bt,w,c
 14546  01163E  26D9               	addwf	fsr2l,f,c
 14547  011640  502F               	movf	button_timer_interrupt@bt+1,w,c
 14548  011642  22DA               	addwfc	fsr2h,f,c
 14549  011644  80DF               	bsf	indf2,0,c
 14550  011646                     i2l532:
 14551                           
 14552                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 14553  011646  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14554  01164A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14555  01164E  0E85               	movlw	133
 14556  011650  5CDE               	subwf	postinc2,w,c
 14557  011652  0E03               	movlw	3
 14558  011654  58DE               	subwfb	postinc2,w,c
 14559  011656  B0D8               	btfsc	status,0,c
 14560  011658  0012               	return	
 14561  01165A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14562  01165E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14563  011662  2ADE               	incf	postinc2,f,c
 14564  011664  0E00               	movlw	0
 14565  011666  22DD               	addwfc	postdec2,f,c
 14566                           
 14567                           ;My_button.c: 14: } else {
 14568  011668  0012               	return	
 14569  01166A                     i2l7937:
 14570                           
 14571                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 14572  01166A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14573  01166E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14574  011672  0E84               	movlw	132
 14575  011674  5CDE               	subwf	postinc2,w,c
 14576  011676  0E03               	movlw	3
 14577  011678  58DE               	subwfb	postinc2,w,c
 14578  01167A  A0D8               	btfss	status,0,c
 14579  01167C  D008               	goto	i2l7941
 14580  01167E  EE20 F002          	lfsr	2,2
 14581  011682  502E               	movf	button_timer_interrupt@bt,w,c
 14582  011684  26D9               	addwf	fsr2l,f,c
 14583  011686  502F               	movf	button_timer_interrupt@bt+1,w,c
 14584  011688  22DA               	addwfc	fsr2h,f,c
 14585  01168A  8EDF               	bsf	indf2,7,c
 14586  01168C  D081               	goto	i2l7969
 14587  01168E                     i2l7941:
 14588                           
 14589                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 14590  01168E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14591  011692  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14592  011696  0EBC               	movlw	188
 14593  011698  5CDE               	subwf	postinc2,w,c
 14594  01169A  0E02               	movlw	2
 14595  01169C  58DE               	subwfb	postinc2,w,c
 14596  01169E  A0D8               	btfss	status,0,c
 14597  0116A0  D008               	goto	i2l7945
 14598  0116A2  EE20 F002          	lfsr	2,2
 14599  0116A6  502E               	movf	button_timer_interrupt@bt,w,c
 14600  0116A8  26D9               	addwf	fsr2l,f,c
 14601  0116AA  502F               	movf	button_timer_interrupt@bt+1,w,c
 14602  0116AC  22DA               	addwfc	fsr2h,f,c
 14603  0116AE  8CDF               	bsf	indf2,6,c
 14604  0116B0  D06F               	goto	i2l7969
 14605  0116B2                     i2l7945:
 14606                           
 14607                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 14608  0116B2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14609  0116B6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14610  0116BA  0EF4               	movlw	244
 14611  0116BC  5CDE               	subwf	postinc2,w,c
 14612  0116BE  0E01               	movlw	1
 14613  0116C0  58DE               	subwfb	postinc2,w,c
 14614  0116C2  A0D8               	btfss	status,0,c
 14615  0116C4  D008               	goto	i2l7949
 14616  0116C6  EE20 F002          	lfsr	2,2
 14617  0116CA  502E               	movf	button_timer_interrupt@bt,w,c
 14618  0116CC  26D9               	addwf	fsr2l,f,c
 14619  0116CE  502F               	movf	button_timer_interrupt@bt+1,w,c
 14620  0116D0  22DA               	addwfc	fsr2h,f,c
 14621  0116D2  8ADF               	bsf	indf2,5,c
 14622  0116D4  D05D               	goto	i2l7969
 14623  0116D6                     i2l7949:
 14624                           
 14625                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 14626  0116D6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14627  0116DA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14628  0116DE  0E2C               	movlw	44
 14629  0116E0  5CDE               	subwf	postinc2,w,c
 14630  0116E2  0E01               	movlw	1
 14631  0116E4  58DE               	subwfb	postinc2,w,c
 14632  0116E6  A0D8               	btfss	status,0,c
 14633  0116E8  D008               	goto	i2l7953
 14634  0116EA  EE20 F002          	lfsr	2,2
 14635  0116EE  502E               	movf	button_timer_interrupt@bt,w,c
 14636  0116F0  26D9               	addwf	fsr2l,f,c
 14637  0116F2  502F               	movf	button_timer_interrupt@bt+1,w,c
 14638  0116F4  22DA               	addwfc	fsr2h,f,c
 14639  0116F6  88DF               	bsf	indf2,4,c
 14640  0116F8  D04B               	goto	i2l7969
 14641  0116FA                     i2l7953:
 14642                           
 14643                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 14644  0116FA  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14645  0116FE  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14646  011702  0E01               	movlw	1
 14647  011704  50DB               	movf	plusw2,w,c
 14648  011706  E104               	bnz	i2u738_40
 14649  011708  0E96               	movlw	150
 14650  01170A  5CDE               	subwf	postinc2,w,c
 14651  01170C  A0D8               	btfss	status,0,c
 14652  01170E  D008               	goto	i2l7957
 14653  011710                     i2u738_40:
 14654  011710  EE20 F002          	lfsr	2,2
 14655  011714  502E               	movf	button_timer_interrupt@bt,w,c
 14656  011716  26D9               	addwf	fsr2l,f,c
 14657  011718  502F               	movf	button_timer_interrupt@bt+1,w,c
 14658  01171A  22DA               	addwfc	fsr2h,f,c
 14659  01171C  86DF               	bsf	indf2,3,c
 14660  01171E  D038               	goto	i2l7969
 14661  011720                     i2l7957:
 14662                           
 14663                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 14664  011720  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14665  011724  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14666  011728  0E01               	movlw	1
 14667  01172A  50DB               	movf	plusw2,w,c
 14668  01172C  E104               	bnz	i2u739_40
 14669  01172E  0E3C               	movlw	60
 14670  011730  5CDE               	subwf	postinc2,w,c
 14671  011732  A0D8               	btfss	status,0,c
 14672  011734  D008               	goto	i2l7961
 14673  011736                     i2u739_40:
 14674  011736  EE20 F002          	lfsr	2,2
 14675  01173A  502E               	movf	button_timer_interrupt@bt,w,c
 14676  01173C  26D9               	addwf	fsr2l,f,c
 14677  01173E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14678  011740  22DA               	addwfc	fsr2h,f,c
 14679  011742  84DF               	bsf	indf2,2,c
 14680  011744  D025               	goto	i2l7969
 14681  011746                     i2l7961:
 14682                           
 14683                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 14684  011746  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14685  01174A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14686  01174E  0E01               	movlw	1
 14687  011750  50DB               	movf	plusw2,w,c
 14688  011752  E104               	bnz	i2u740_40
 14689  011754  0E10               	movlw	16
 14690  011756  5CDE               	subwf	postinc2,w,c
 14691  011758  A0D8               	btfss	status,0,c
 14692  01175A  D008               	goto	i2l7965
 14693  01175C                     i2u740_40:
 14694  01175C  EE20 F002          	lfsr	2,2
 14695  011760  502E               	movf	button_timer_interrupt@bt,w,c
 14696  011762  26D9               	addwf	fsr2l,f,c
 14697  011764  502F               	movf	button_timer_interrupt@bt+1,w,c
 14698  011766  22DA               	addwfc	fsr2h,f,c
 14699  011768  82DF               	bsf	indf2,1,c
 14700  01176A  D012               	goto	i2l7969
 14701  01176C                     i2l7965:
 14702                           
 14703                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 14704  01176C  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14705  011770  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14706  011774  0E01               	movlw	1
 14707  011776  50DB               	movf	plusw2,w,c
 14708  011778  E104               	bnz	i2u741_40
 14709  01177A  0E02               	movlw	2
 14710  01177C  5CDE               	subwf	postinc2,w,c
 14711  01177E  A0D8               	btfss	status,0,c
 14712  011780  D007               	goto	i2l7969
 14713  011782                     i2u741_40:
 14714  011782  EE20 F002          	lfsr	2,2
 14715  011786  502E               	movf	button_timer_interrupt@bt,w,c
 14716  011788  26D9               	addwf	fsr2l,f,c
 14717  01178A  502F               	movf	button_timer_interrupt@bt+1,w,c
 14718  01178C  22DA               	addwfc	fsr2h,f,c
 14719  01178E  80DF               	bsf	indf2,0,c
 14720  011790                     i2l7969:
 14721                           
 14722                           ;My_button.c: 23: bt->cnt_sw = 0;
 14723  011790  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14724  011794  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14725  011798  0E00               	movlw	0
 14726  01179A  6EDE               	movwf	postinc2,c
 14727  01179C  0E00               	movlw	0
 14728  01179E  6EDD               	movwf	postdec2,c
 14729                           
 14730                           ;My_button.c: 24: bt->flags &= 0x00FF;
 14731  0117A0  EE20 F002          	lfsr	2,2
 14732  0117A4  502E               	movf	button_timer_interrupt@bt,w,c
 14733  0117A6  26D9               	addwf	fsr2l,f,c
 14734  0117A8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14735  0117AA  22DA               	addwfc	fsr2h,f,c
 14736  0117AC  0EFF               	movlw	255
 14737  0117AE  16DE               	andwf	postinc2,f,c
 14738  0117B0  0E00               	movlw	0
 14739  0117B2  16DD               	andwf	postdec2,f,c
 14740  0117B4  0012               	return	
 14741  0117B6                     __end_of_button_timer_interrupt:
 14742                           	opt stack 0
 14743                           pclatu	equ	0xFFB
 14744                           pclath	equ	0xFFA
 14745                           tblptru	equ	0xFF8
 14746                           tblptrh	equ	0xFF7
 14747                           tblptrl	equ	0xFF6
 14748                           tablat	equ	0xFF5
 14749                           prodh	equ	0xFF4
 14750                           prodl	equ	0xFF3
 14751                           intcon	equ	0xFF2
 14752                           intcon2	equ	0xFF1
 14753                           indf0	equ	0xFEF
 14754                           postinc0	equ	0xFEE
 14755                           fsr0h	equ	0xFEA
 14756                           fsr0l	equ	0xFE9
 14757                           wreg	equ	0xFE8
 14758                           indf1	equ	0xFE7
 14759                           postinc1	equ	0xFE6
 14760                           postdec1	equ	0xFE5
 14761                           fsr1h	equ	0xFE2
 14762                           fsr1l	equ	0xFE1
 14763                           indf2	equ	0xFDF
 14764                           postinc2	equ	0xFDE
 14765                           postdec2	equ	0xFDD
 14766                           plusw2	equ	0xFDB
 14767                           fsr2h	equ	0xFDA
 14768                           fsr2l	equ	0xFD9
 14769                           status	equ	0xFD8
 14770                           
 14771 ;; *************** function _USB_CDC_ISR *****************
 14772 ;; Defined at:
 14773 ;;		line 33 in file "../My_library/My_usb_cdc.c"
 14774 ;; Parameters:    Size  Location     Type
 14775 ;;		None
 14776 ;; Auto vars:     Size  Location     Type
 14777 ;;		None
 14778 ;; Return value:  Size  Location     Type
 14779 ;;		None               void
 14780 ;; Registers used:
 14781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14782 ;; Tracked objects:
 14783 ;;		On entry : 0/0
 14784 ;;		On exit  : 0/0
 14785 ;;		Unchanged: 0/0
 14786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14791 ;;Total ram usage:        0 bytes
 14792 ;; Hardware stack levels used:    1
 14793 ;; Hardware stack levels required when called:   10
 14794 ;; This function calls:
 14795 ;;		_USBDeviceTasks
 14796 ;; This function is called by:
 14797 ;;		_ISR
 14798 ;; This function uses a non-reentrant model
 14799 ;;
 14800                           
 14801                           	psect	text62
 14802  014740                     __ptext62:
 14803                           	opt stack 0
 14804  014740                     _USB_CDC_ISR:
 14805                           	opt stack 10
 14806                           
 14807                           ;My_usb_cdc.c: 35: USBDeviceTasks();
 14808                           
 14809                           ;incstack = 0
 14810  014740  EC1D  F090         	call	_USBDeviceTasks	;wreg free
 14811  014744  0012               	return		;funcret
 14812  014746                     __end_of_USB_CDC_ISR:
 14813                           	opt stack 0
 14814                           pclatu	equ	0xFFB
 14815                           pclath	equ	0xFFA
 14816                           tblptru	equ	0xFF8
 14817                           tblptrh	equ	0xFF7
 14818                           tblptrl	equ	0xFF6
 14819                           tablat	equ	0xFF5
 14820                           prodh	equ	0xFF4
 14821                           prodl	equ	0xFF3
 14822                           intcon	equ	0xFF2
 14823                           intcon2	equ	0xFF1
 14824                           indf0	equ	0xFEF
 14825                           postinc0	equ	0xFEE
 14826                           fsr0h	equ	0xFEA
 14827                           fsr0l	equ	0xFE9
 14828                           wreg	equ	0xFE8
 14829                           indf1	equ	0xFE7
 14830                           postinc1	equ	0xFE6
 14831                           postdec1	equ	0xFE5
 14832                           fsr1h	equ	0xFE2
 14833                           fsr1l	equ	0xFE1
 14834                           indf2	equ	0xFDF
 14835                           postinc2	equ	0xFDE
 14836                           postdec2	equ	0xFDD
 14837                           plusw2	equ	0xFDB
 14838                           fsr2h	equ	0xFDA
 14839                           fsr2l	equ	0xFD9
 14840                           status	equ	0xFD8
 14841                           
 14842 ;; *************** function _USBDeviceTasks *****************
 14843 ;; Defined at:
 14844 ;;		line 490 in file "../My_library/usb/usb_device.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;		None
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  i               1   29[COMRAM] unsigned char 
 14849 ;; Return value:  Size  Location     Type
 14850 ;;		None               void
 14851 ;; Registers used:
 14852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14862 ;;Total ram usage:        1 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    9
 14865 ;; This function calls:
 14866 ;;		_USBCtrlEPAllowStatusStage
 14867 ;;		_USBCtrlEPService
 14868 ;;		_USBStallHandler
 14869 ;;		_USBSuspend
 14870 ;;		_USBWakeFromSuspend
 14871 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14872 ;;		i2_USBDeviceInit
 14873 ;; This function is called by:
 14874 ;;		_USB_CDC_ISR
 14875 ;; This function uses a non-reentrant model
 14876 ;;
 14877                           
 14878                           	psect	text63
 14879  01203A                     __ptext63:
 14880                           	opt stack 0
 14881  01203A                     _USBDeviceTasks:
 14882                           	opt stack 10
 14883                           
 14884                           ;usb_device.c: 492: uint8_t i;
 14885                           ;usb_device.c: 603: if(USBDeviceState == ATTACHED_STATE)
 14886                           
 14887                           ;incstack = 0
 14888  01203A  0424               	decf	_USBDeviceState,w,c	;volatile
 14889  01203C  B4D8               	btfsc	status,2,c
 14890                           
 14891                           ;usb_device.c: 604: {
 14892                           ;usb_device.c: 614: if(!UCONbits.SE0)
 14893  01203E  BA65               	btfsc	3941,5,c	;volatile
 14894  012040  D008               	goto	i2l7495
 14895                           
 14896                           ;usb_device.c: 615: {
 14897                           ;usb_device.c: 616: {UIR = 0;};
 14898  012042  0E00               	movlw	0
 14899  012044  6E62               	movwf	3938,c	;volatile
 14900                           
 14901                           ;usb_device.c: 620: UIEbits.URSTIE = 1;
 14902  012046  010F               	movlb	15	; () banked
 14903  012048  8136               	bsf	54,0,b	;volatile
 14904                           
 14905                           ; BSR set to: 15
 14906                           ;usb_device.c: 621: UIEbits.IDLEIE = 1;
 14907  01204A  010F               	movlb	15	; () banked
 14908  01204C  8936               	bsf	54,4,b	;volatile
 14909                           
 14910                           ;usb_device.c: 622: USBDeviceState = POWERED_STATE;
 14911  01204E  0E02               	movlw	2
 14912  012050  6E24               	movwf	_USBDeviceState,c	;volatile
 14913  012052                     i2l7495:
 14914                           
 14915                           ;usb_device.c: 623: }
 14916                           ;usb_device.c: 624: }
 14917                           ;usb_device.c: 640: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14918  012052  A462               	btfss	3938,2,c	;volatile
 14919  012054  D006               	goto	i2l7503
 14920  012056  010F               	movlb	15	; () banked
 14921  012058  A536               	btfss	54,2,b	;volatile
 14922  01205A  D003               	goto	i2l7503
 14923                           
 14924                           ; BSR set to: 15
 14925                           ;usb_device.c: 641: {
 14926                           ;usb_device.c: 642: (UIR &= 0xFB);
 14927  01205C  9462               	bcf	3938,2,c	;volatile
 14928                           
 14929                           ; BSR set to: 15
 14930                           ;usb_device.c: 646: USBWakeFromSuspend();
 14931  01205E  EC63  F0A2         	call	_USBWakeFromSuspend	;wreg free
 14932  012062                     i2l7503:
 14933                           
 14934                           ;usb_device.c: 648: }
 14935                           ;usb_device.c: 653: if(UCONbits.SUSPND==1)
 14936  012062  A265               	btfss	3941,1,c	;volatile
 14937  012064  D002               	goto	i2l158
 14938                           
 14939                           ;usb_device.c: 654: {
 14940                           ;usb_device.c: 655: {PIR2bits.USBIF = 0;};
 14941  012066  98A1               	bcf	4001,4,c	;volatile
 14942                           
 14943                           ;usb_device.c: 656: return;
 14944  012068  0012               	return	
 14945  01206A                     i2l158:
 14946                           
 14947                           ;usb_device.c: 657: }
 14948                           ;usb_device.c: 669: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14949  01206A  A062               	btfss	3938,0,c	;volatile
 14950  01206C  D009               	goto	i2l7517
 14951  01206E  010F               	movlb	15	; () banked
 14952  012070  A136               	btfss	54,0,b	;volatile
 14953  012072  D006               	goto	i2l7517
 14954                           
 14955                           ; BSR set to: 15
 14956                           ;usb_device.c: 670: {
 14957                           ;usb_device.c: 671: USBDeviceInit();
 14958  012074  ECC2  F090         	call	i2_USBDeviceInit	;wreg free
 14959                           
 14960                           ;usb_device.c: 675: {PIE2bits.USBIE = 1;};
 14961  012078  88A0               	bsf	4000,4,c	;volatile
 14962                           
 14963                           ;usb_device.c: 677: USBDeviceState = DEFAULT_STATE;
 14964  01207A  0E04               	movlw	4
 14965  01207C  6E24               	movwf	_USBDeviceState,c	;volatile
 14966                           
 14967                           ;usb_device.c: 687: (UIR &= 0xFE);
 14968  01207E  9062               	bcf	3938,0,c	;volatile
 14969  012080                     i2l7517:
 14970                           
 14971                           ;usb_device.c: 688: }
 14972                           ;usb_device.c: 693: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14973  012080  A862               	btfss	3938,4,c	;volatile
 14974  012082  D006               	goto	i2l7525
 14975  012084  010F               	movlb	15	; () banked
 14976  012086  A936               	btfss	54,4,b	;volatile
 14977  012088  D003               	goto	i2l7525
 14978                           
 14979                           ; BSR set to: 15
 14980                           ;usb_device.c: 694: {
 14981                           ;usb_device.c: 699: USBSuspend();
 14982  01208A  EC92  F0A2         	call	_USBSuspend	;wreg free
 14983                           
 14984                           ;usb_device.c: 702: (UIR &= 0xEF);
 14985  01208E  9862               	bcf	3938,4,c	;volatile
 14986  012090                     i2l7525:
 14987                           
 14988                           ;usb_device.c: 703: }
 14989                           ;usb_device.c: 705: if(UIRbits.SOFIF)
 14990  012090  AC62               	btfss	3938,6,c	;volatile
 14991  012092  D019               	goto	i2l7541
 14992                           
 14993                           ;usb_device.c: 706: {
 14994                           ;usb_device.c: 707: if(UIEbits.SOFIE)
 14995  012094  010F               	movlb	15	; () banked
 14996  012096  AD36               	btfss	54,6,b	;volatile
 14997  012098  D00E               	goto	i2l7531
 14998                           
 14999                           ; BSR set to: 15
 15000                           ;usb_device.c: 708: {
 15001                           ;usb_device.c: 709: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15002  01209A  0E00               	movlw	0
 15003  01209C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15004  01209E  0E73               	movlw	115
 15005  0120A0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15006  0120A2  0E00               	movlw	0
 15007  0120A4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15008  0120A6  0E00               	movlw	0
 15009  0120A8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15010  0120AA  0E00               	movlw	0
 15011  0120AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15012  0120AE  0E01               	movlw	1
 15013  0120B0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15014  0120B2  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15015  0120B6                     i2l7531:
 15016                           
 15017                           ;usb_device.c: 710: }
 15018                           ;usb_device.c: 711: (UIR &= 0xBF);
 15019  0120B6  9C62               	bcf	3938,6,c	;volatile
 15020                           
 15021                           ;usb_device.c: 736: if(USBStatusStageTimeoutCounter != 0u)
 15022  0120B8  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15023  0120BA  A4D8               	btfss	status,2,c
 15024                           
 15025                           ;usb_device.c: 737: {
 15026                           ;usb_device.c: 738: USBStatusStageTimeoutCounter--;
 15027  0120BC  0627               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 15028                           
 15029                           ;usb_device.c: 739: }
 15030                           ;usb_device.c: 745: if(USBStatusStageTimeoutCounter == 0)
 15031  0120BE  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 15032  0120C0  B4D8               	btfsc	status,2,c
 15033                           
 15034                           ;usb_device.c: 746: {
 15035                           ;usb_device.c: 747: USBCtrlEPAllowStatusStage();
 15036  0120C2  EC01  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15037  0120C6                     i2l7541:
 15038                           
 15039                           ;usb_device.c: 748: }
 15040                           ;usb_device.c: 750: }
 15041                           ;usb_device.c: 752: if(UIRbits.STALLIF && UIEbits.STALLIE)
 15042  0120C6  AA62               	btfss	3938,5,c	;volatile
 15043  0120C8  D004               	goto	i2l7547
 15044  0120CA  010F               	movlb	15	; () banked
 15045  0120CC  BB36               	btfsc	54,5,b	;volatile
 15046                           
 15047                           ; BSR set to: 15
 15048                           ;usb_device.c: 753: {
 15049                           ;usb_device.c: 754: USBStallHandler();
 15050  0120CE  EC77  F0A1         	call	_USBStallHandler	;wreg free
 15051  0120D2                     i2l7547:
 15052                           
 15053                           ;usb_device.c: 755: }
 15054                           ;usb_device.c: 757: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15055  0120D2  A262               	btfss	3938,1,c	;volatile
 15056  0120D4  D012               	goto	i2l7555
 15057  0120D6  010F               	movlb	15	; () banked
 15058  0120D8  A336               	btfss	54,1,b	;volatile
 15059  0120DA  D00F               	goto	i2l7555
 15060                           
 15061                           ; BSR set to: 15
 15062                           ;usb_device.c: 758: {
 15063                           ;usb_device.c: 759: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 15064  0120DC  0E7F               	movlw	127
 15065  0120DE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15066  0120E0  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15067  0120E2  0E00               	movlw	0
 15068  0120E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15069  0120E6  0E00               	movlw	0
 15070  0120E8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15071  0120EA  0E00               	movlw	0
 15072  0120EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15073  0120EE  0E01               	movlw	1
 15074  0120F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15075  0120F2  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15076                           
 15077                           ;usb_device.c: 760: {UEIR = 0;};
 15078  0120F6  0E00               	movlw	0
 15079  0120F8  6E63               	movwf	3939,c	;volatile
 15080  0120FA                     i2l7555:
 15081                           
 15082                           ;usb_device.c: 768: }
 15083                           ;usb_device.c: 775: if(USBDeviceState < DEFAULT_STATE)
 15084  0120FA  0E04               	movlw	4
 15085  0120FC  6024               	cpfslt	_USBDeviceState,c	;volatile
 15086  0120FE  D002               	goto	i2l168
 15087                           
 15088                           ;usb_device.c: 776: {
 15089                           ;usb_device.c: 777: {PIR2bits.USBIF = 0;};
 15090  012100  98A1               	bcf	4001,4,c	;volatile
 15091                           
 15092                           ;usb_device.c: 778: return;
 15093  012102  0012               	return	
 15094  012104                     i2l168:
 15095                           
 15096                           ;usb_device.c: 779: }
 15097                           ;usb_device.c: 784: if(UIEbits.TRNIE)
 15098  012104  010F               	movlb	15	; () banked
 15099  012106  A736               	btfss	54,3,b	;volatile
 15100  012108  D03B               	goto	i2l169
 15101                           
 15102                           ; BSR set to: 15
 15103                           ;usb_device.c: 785: {
 15104                           ;usb_device.c: 786: for(i = 0; i < 4u; i++)
 15105  01210A  0E00               	movlw	0
 15106  01210C  6E4B               	movwf	USBDeviceTasks@i,c
 15107  01210E                     i2l7561:
 15108                           
 15109                           ; BSR set to: 15
 15110  01210E  0E03               	movlw	3
 15111  012110  644B               	cpfsgt	USBDeviceTasks@i,c
 15112  012112  D001               	goto	i2l170
 15113  012114  D035               	goto	i2l169
 15114  012116                     i2l170:
 15115                           
 15116                           ;usb_device.c: 787: {
 15117                           ;usb_device.c: 788: if(UIRbits.TRNIF)
 15118  012116  A662               	btfss	3938,3,c	;volatile
 15119  012118  D033               	goto	i2l169
 15120                           
 15121                           ;usb_device.c: 789: {
 15122                           ;usb_device.c: 791: USTATcopy.Val = USTAT;
 15123  01211A  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 15124                           
 15125                           ;usb_device.c: 792: endpoint_number = USTATcopy.endpoint_number;
 15126  01211E  302D               	rrcf	_USTATcopy,w,c	;volatile
 15127  012120  32E8               	rrcf	wreg,f,c
 15128  012122  32E8               	rrcf	wreg,f,c
 15129  012124  0B0F               	andlw	15
 15130  012126  6E2A               	movwf	_endpoint_number,c	;volatile
 15131                           
 15132                           ;usb_device.c: 794: (UIR &= 0xF7);
 15133  012128  9662               	bcf	3938,3,c	;volatile
 15134                           
 15135                           ;usb_device.c: 799: if(USTATcopy.direction == 0)
 15136  01212A  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15137  01212C  D00A               	goto	i2l7575
 15138                           
 15139                           ;usb_device.c: 800: {
 15140                           ;usb_device.c: 801: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15141  01212E  502A               	movf	_endpoint_number,w,c	;volatile
 15142  012130  0D01               	mullw	1
 15143  012132  0ED5               	movlw	low _ep_data_out
 15144  012134  24F3               	addwf	prodl,w,c
 15145  012136  6ED9               	movwf	fsr2l,c
 15146  012138  0E00               	movlw	high _ep_data_out
 15147  01213A  20F4               	addwfc	prodh,w,c
 15148  01213C  6EDA               	movwf	fsr2h,c
 15149  01213E  0100               	movlb	0	; () banked
 15150  012140  D008               	goto	L5
 15151  012142                     i2l7575:
 15152                           
 15153                           ;usb_device.c: 803: else
 15154                           ;usb_device.c: 804: {
 15155                           ;usb_device.c: 805: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15156  012142  502A               	movf	_endpoint_number,w,c	;volatile
 15157  012144  0D01               	mullw	1
 15158  012146  0E16               	movlw	low _ep_data_in
 15159  012148  24F3               	addwf	prodl,w,c
 15160  01214A  6ED9               	movwf	fsr2l,c
 15161  01214C  0E00               	movlw	high _ep_data_in
 15162  01214E  20F4               	addwfc	prodh,w,c
 15163  012150  6EDA               	movwf	fsr2h,c
 15164  012152                     L5:
 15165  012152  70DF               	btg	indf2,0,c
 15166                           
 15167                           ;usb_device.c: 806: }
 15168                           ;usb_device.c: 811: if(endpoint_number == 0)
 15169  012154  502A               	movf	_endpoint_number,w,c	;volatile
 15170  012156  A4D8               	btfss	status,2,c
 15171  012158  D003               	goto	i2l7581
 15172                           
 15173                           ;usb_device.c: 812: {
 15174                           ;usb_device.c: 813: USBCtrlEPService();
 15175  01215A  EC34  F098         	call	_USBCtrlEPService	;wreg free
 15176                           
 15177                           ;usb_device.c: 814: }
 15178  01215E  D00E               	goto	i2l7583
 15179  012160                     i2l7581:
 15180                           
 15181                           ;usb_device.c: 815: else
 15182                           ;usb_device.c: 816: {
 15183                           ;usb_device.c: 817: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15184  012160  0E00               	movlw	0
 15185  012162  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15186  012164  0E72               	movlw	114
 15187  012166  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15188  012168  0E2D               	movlw	low _USTATcopy
 15189  01216A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15190  01216C  0E00               	movlw	high _USTATcopy
 15191  01216E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15192  012170  0E00               	movlw	0
 15193  012172  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15194  012174  0E00               	movlw	0
 15195  012176  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15196  012178  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15197  01217C                     i2l7583:
 15198  01217C  2A4B               	incf	USBDeviceTasks@i,f,c
 15199  01217E  D7C7               	goto	i2l7561
 15200  012180                     i2l169:
 15201                           
 15202                           ;usb_device.c: 823: }
 15203                           ;usb_device.c: 824: }
 15204                           ;usb_device.c: 825: }
 15205                           ;usb_device.c: 827: {PIR2bits.USBIF = 0;};
 15206  012180  98A1               	bcf	4001,4,c	;volatile
 15207  012182  0012               	return		;funcret
 15208  012184                     __end_of_USBDeviceTasks:
 15209                           	opt stack 0
 15210                           pclatu	equ	0xFFB
 15211                           pclath	equ	0xFFA
 15212                           tblptru	equ	0xFF8
 15213                           tblptrh	equ	0xFF7
 15214                           tblptrl	equ	0xFF6
 15215                           tablat	equ	0xFF5
 15216                           prodh	equ	0xFF4
 15217                           prodl	equ	0xFF3
 15218                           intcon	equ	0xFF2
 15219                           intcon2	equ	0xFF1
 15220                           indf0	equ	0xFEF
 15221                           postinc0	equ	0xFEE
 15222                           fsr0h	equ	0xFEA
 15223                           fsr0l	equ	0xFE9
 15224                           wreg	equ	0xFE8
 15225                           indf1	equ	0xFE7
 15226                           postinc1	equ	0xFE6
 15227                           postdec1	equ	0xFE5
 15228                           fsr1h	equ	0xFE2
 15229                           fsr1l	equ	0xFE1
 15230                           indf2	equ	0xFDF
 15231                           postinc2	equ	0xFDE
 15232                           postdec2	equ	0xFDD
 15233                           plusw2	equ	0xFDB
 15234                           fsr2h	equ	0xFDA
 15235                           fsr2l	equ	0xFD9
 15236                           status	equ	0xFD8
 15237                           
 15238 ;; *************** function i2_USBDeviceInit *****************
 15239 ;; Defined at:
 15240 ;;		line 299 in file "../My_library/usb/usb_device.c"
 15241 ;; Parameters:    Size  Location     Type
 15242 ;;		None
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15245 ;; Return value:  Size  Location     Type
 15246 ;;		None               void
 15247 ;; Registers used:
 15248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15257 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15258 ;;Total ram usage:        1 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:    1
 15261 ;; This function calls:
 15262 ;;		i2_memset
 15263 ;; This function is called by:
 15264 ;;		_USBDeviceTasks
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text64
 15269  012184                     __ptext64:
 15270                           	opt stack 0
 15271  012184                     i2_USBDeviceInit:
 15272                           	opt stack 17
 15273                           
 15274                           ;usb_device.c: 301: uint8_t i;
 15275                           ;usb_device.c: 303: {PIE2bits.USBIE = 0;};
 15276                           
 15277                           ;incstack = 0
 15278  012184  98A0               	bcf	4000,4,c	;volatile
 15279                           
 15280                           ;usb_device.c: 306: {UEIR = 0;};
 15281  012186  0E00               	movlw	0
 15282  012188  6E63               	movwf	3939,c	;volatile
 15283                           
 15284                           ;usb_device.c: 309: {UIR = 0;};
 15285  01218A  0E00               	movlw	0
 15286  01218C  6E62               	movwf	3938,c	;volatile
 15287                           
 15288                           ;usb_device.c: 312: UEP0 = 0;
 15289  01218E  0E00               	movlw	0
 15290  012190  010F               	movlb	15	; () banked
 15291  012192  6F26               	movwf	38,b	;volatile
 15292                           
 15293                           ; BSR set to: 15
 15294                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
 15295  012194  0E27               	movlw	39
 15296  012196  6E2E               	movwf	i2memset@p1,c
 15297  012198  0E0F               	movlw	15
 15298  01219A  6E2F               	movwf	i2memset@p1+1,c
 15299  01219C  0E00               	movlw	0
 15300  01219E  6E31               	movwf	i2memset@c+1,c
 15301  0121A0  0E00               	movlw	0
 15302  0121A2  6E30               	movwf	i2memset@c,c
 15303  0121A4  0E00               	movlw	0
 15304  0121A6  6E33               	movwf	i2memset@n+1,c
 15305  0121A8  0E02               	movlw	2
 15306  0121AA  6E32               	movwf	i2memset@n,c
 15307  0121AC  ECA8  F0A2         	call	i2_memset	;wreg free
 15308                           
 15309                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15310  0121B0  0E16               	movlw	22
 15311  0121B2  010F               	movlb	15	; () banked
 15312  0121B4  6F39               	movwf	57,b	;volatile
 15313                           
 15314                           ; BSR set to: 15
 15315  0121B6  0E9F               	movlw	159
 15316  0121B8  010F               	movlb	15	; () banked
 15317  0121BA  6F37               	movwf	55,b	;volatile
 15318                           
 15319                           ; BSR set to: 15
 15320  0121BC  0E7B               	movlw	123
 15321  0121BE  010F               	movlb	15	; () banked
 15322  0121C0  6F36               	movwf	54,b	;volatile
 15323                           
 15324                           ; BSR set to: 15
 15325                           ;usb_device.c: 319: ;
 15326                           ;usb_device.c: 322: ;
 15327                           ;usb_device.c: 325: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15328  0121C2  0E00               	movlw	0
 15329  0121C4  6E36               	movwf	i2USBDeviceInit@i,c
 15330  0121C6                     i2l7431:
 15331                           
 15332                           ; BSR set to: 15
 15333  0121C6  0E0B               	movlw	11
 15334  0121C8  6436               	cpfsgt	i2USBDeviceInit@i,c
 15335  0121CA  D001               	goto	i2l7435
 15336  0121CC  D00E               	goto	i2l146
 15337  0121CE                     i2l7435:
 15338                           
 15339                           ;usb_device.c: 326: {
 15340                           ;usb_device.c: 327: BDT[i].Val = 0x00;
 15341  0121CE  5036               	movf	i2USBDeviceInit@i,w,c
 15342  0121D0  0D04               	mullw	4
 15343  0121D2  0E00               	movlw	0
 15344  0121D4  24F3               	addwf	prodl,w,c
 15345  0121D6  6ED9               	movwf	fsr2l,c
 15346  0121D8  0E0D               	movlw	13
 15347  0121DA  20F4               	addwfc	prodh,w,c
 15348  0121DC  6EDA               	movwf	fsr2h,c
 15349  0121DE  6ADE               	clrf	postinc2,c
 15350  0121E0  6ADE               	clrf	postinc2,c
 15351  0121E2  6ADE               	clrf	postinc2,c
 15352  0121E4  6ADD               	clrf	postdec2,c
 15353  0121E6  2A36               	incf	i2USBDeviceInit@i,f,c
 15354  0121E8  D7EE               	goto	i2l7431
 15355  0121EA                     i2l146:
 15356                           
 15357                           ;usb_device.c: 328: }
 15358                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
 15359  0121EA  8C65               	bsf	3941,6,c	;volatile
 15360                           
 15361                           ;usb_device.c: 334: UADDR = 0x00;
 15362  0121EC  0E00               	movlw	0
 15363  0121EE  010F               	movlb	15	; () banked
 15364  0121F0  6F38               	movwf	56,b	;volatile
 15365                           
 15366                           ; BSR set to: 15
 15367                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
 15368  0121F2  9865               	bcf	3941,4,c	;volatile
 15369                           
 15370                           ; BSR set to: 15
 15371                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
 15372  0121F4  9C65               	bcf	3941,6,c	;volatile
 15373                           
 15374                           ;usb_device.c: 343: while(UIRbits.TRNIF == 1)
 15375  0121F6  D009               	goto	i2l7455
 15376  0121F8                     i2l7447:
 15377                           
 15378                           ;usb_device.c: 344: {
 15379                           ;usb_device.c: 345: (UIR &= 0xF7);
 15380  0121F8  9662               	bcf	3938,3,c	;volatile
 15381                           
 15382                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
 15383  0121FA  0E00               	movlw	0
 15384  0121FC  6E0D               	movwf	_inPipes+3,c	;volatile
 15385                           
 15386                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
 15387  0121FE  0E00               	movlw	0
 15388  012200  6E04               	movwf	_outPipes+3,c	;volatile
 15389                           
 15390                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
 15391  012202  0E00               	movlw	0
 15392  012204  6E06               	movwf	_outPipes+5,c	;volatile
 15393  012206  0E00               	movlw	0
 15394  012208  6E05               	movwf	_outPipes+4,c	;volatile
 15395  01220A                     i2l7455:
 15396  01220A  B662               	btfsc	3938,3,c	;volatile
 15397  01220C  D7F5               	goto	i2l7447
 15398                           
 15399                           ;usb_device.c: 350: }
 15400                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
 15401  01220E  0E01               	movlw	1
 15402  012210  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15403                           
 15404                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
 15405  012212  0E01               	movlw	1
 15406  012214  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15407                           
 15408                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
 15409  012216  0E00               	movlw	0
 15410  012218  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15411                           
 15412                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
 15413  01221A  0E00               	movlw	0
 15414  01221C  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15415                           
 15416                           ;usb_device.c: 359: USBBusIsSuspended = 0;
 15417  01221E  0E00               	movlw	0
 15418  012220  0100               	movlb	0	; () banked
 15419  012222  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15420                           
 15421                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
 15422  012224  0E00               	movlw	0
 15423  012226  6E36               	movwf	i2USBDeviceInit@i,c
 15424  012228                     i2l7459:
 15425                           
 15426                           ; BSR set to: 0
 15427  012228  0E02               	movlw	2
 15428  01222A  6436               	cpfsgt	i2USBDeviceInit@i,c
 15429  01222C  D001               	goto	i2l7463
 15430  01222E  D02E               	goto	i2l7469
 15431  012230                     i2l7463:
 15432                           
 15433                           ;usb_device.c: 364: {
 15434                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
 15435  012230  5036               	movf	i2USBDeviceInit@i,w,c
 15436  012232  0D02               	mullw	2
 15437  012234  0E10               	movlw	low _pBDTEntryIn
 15438  012236  24F3               	addwf	prodl,w,c
 15439  012238  6ED9               	movwf	fsr2l,c
 15440  01223A  0E00               	movlw	high _pBDTEntryIn
 15441  01223C  20F4               	addwfc	prodh,w,c
 15442  01223E  6EDA               	movwf	fsr2h,c
 15443  012240  0E00               	movlw	0
 15444  012242  6EDE               	movwf	postinc2,c
 15445  012244  0E00               	movlw	0
 15446  012246  6EDD               	movwf	postdec2,c
 15447                           
 15448                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
 15449  012248  5036               	movf	i2USBDeviceInit@i,w,c
 15450  01224A  0D02               	mullw	2
 15451  01224C  0E0A               	movlw	low _pBDTEntryOut
 15452  01224E  24F3               	addwf	prodl,w,c
 15453  012250  6ED9               	movwf	fsr2l,c
 15454  012252  0E01               	movlw	high _pBDTEntryOut
 15455  012254  20F4               	addwfc	prodh,w,c
 15456  012256  6EDA               	movwf	fsr2h,c
 15457  012258  0E00               	movlw	0
 15458  01225A  6EDE               	movwf	postinc2,c
 15459  01225C  0E00               	movlw	0
 15460  01225E  6EDD               	movwf	postdec2,c
 15461                           
 15462                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
 15463  012260  5036               	movf	i2USBDeviceInit@i,w,c
 15464  012262  0D01               	mullw	1
 15465  012264  0E16               	movlw	low _ep_data_in
 15466  012266  24F3               	addwf	prodl,w,c
 15467  012268  6ED9               	movwf	fsr2l,c
 15468  01226A  0E00               	movlw	high _ep_data_in
 15469  01226C  20F4               	addwfc	prodh,w,c
 15470  01226E  6EDA               	movwf	fsr2h,c
 15471  012270  0E00               	movlw	0
 15472  012272  6EDF               	movwf	indf2,c
 15473                           
 15474                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
 15475  012274  5036               	movf	i2USBDeviceInit@i,w,c
 15476  012276  0D01               	mullw	1
 15477  012278  0ED5               	movlw	low _ep_data_out
 15478  01227A  24F3               	addwf	prodl,w,c
 15479  01227C  6ED9               	movwf	fsr2l,c
 15480  01227E  0E00               	movlw	high _ep_data_out
 15481  012280  20F4               	addwfc	prodh,w,c
 15482  012282  6EDA               	movwf	fsr2h,c
 15483  012284  0E00               	movlw	0
 15484  012286  6EDF               	movwf	indf2,c
 15485  012288  2A36               	incf	i2USBDeviceInit@i,f,c
 15486  01228A  D7CE               	goto	i2l7459
 15487  01228C                     i2l7469:
 15488                           
 15489                           ;usb_device.c: 369: }
 15490                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15491  01228C  0E08               	movlw	8
 15492  01228E  6E10               	movwf	_pBDTEntryIn,c
 15493  012290  0E0D               	movlw	13
 15494  012292  6E11               	movwf	_pBDTEntryIn+1,c
 15495                           
 15496                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
 15497  012294  0E16               	movlw	22
 15498  012296  010F               	movlb	15	; () banked
 15499  012298  6F26               	movwf	38,b	;volatile
 15500                           
 15501                           ; BSR set to: 15
 15502                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15503  01229A  0E0D               	movlw	13
 15504  01229C  010D               	movlb	13	; () banked
 15505  01229E  6F03               	movwf	3,b	;volatile
 15506  0122A0  0E30               	movlw	48
 15507  0122A2  6F02               	movwf	2,b	;volatile
 15508                           
 15509                           ; BSR set to: 13
 15510                           ;usb_device.c: 377: BDT[0].CNT = 8;
 15511  0122A4  0E08               	movlw	8
 15512  0122A6  010D               	movlb	13	; () banked
 15513  0122A8  6F01               	movwf	1,b	;volatile
 15514                           
 15515                           ; BSR set to: 13
 15516                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
 15517  0122AA  0E04               	movlw	4
 15518  0122AC  010D               	movlb	13	; () banked
 15519  0122AE  6F00               	movwf	0,b	;volatile
 15520                           
 15521                           ; BSR set to: 13
 15522                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
 15523  0122B0  010D               	movlb	13	; () banked
 15524  0122B2  8F00               	bsf	0,7,b	;volatile
 15525                           
 15526                           ; BSR set to: 13
 15527                           ;usb_device.c: 382: USBActiveConfiguration = 0;
 15528  0122B4  0E00               	movlw	0
 15529  0122B6  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15530                           
 15531                           ; BSR set to: 13
 15532                           ;usb_device.c: 385: USBDeviceState = DETACHED_STATE;
 15533  0122B8  0E00               	movlw	0
 15534  0122BA  6E24               	movwf	_USBDeviceState,c	;volatile
 15535                           
 15536                           ; BSR set to: 13
 15537  0122BC  0012               	return		;funcret
 15538  0122BE                     __end_ofi2_USBDeviceInit:
 15539                           	opt stack 0
 15540                           pclatu	equ	0xFFB
 15541                           pclath	equ	0xFFA
 15542                           tblptru	equ	0xFF8
 15543                           tblptrh	equ	0xFF7
 15544                           tblptrl	equ	0xFF6
 15545                           tablat	equ	0xFF5
 15546                           prodh	equ	0xFF4
 15547                           prodl	equ	0xFF3
 15548                           intcon	equ	0xFF2
 15549                           intcon2	equ	0xFF1
 15550                           indf0	equ	0xFEF
 15551                           postinc0	equ	0xFEE
 15552                           fsr0h	equ	0xFEA
 15553                           fsr0l	equ	0xFE9
 15554                           wreg	equ	0xFE8
 15555                           indf1	equ	0xFE7
 15556                           postinc1	equ	0xFE6
 15557                           postdec1	equ	0xFE5
 15558                           fsr1h	equ	0xFE2
 15559                           fsr1l	equ	0xFE1
 15560                           indf2	equ	0xFDF
 15561                           postinc2	equ	0xFDE
 15562                           postdec2	equ	0xFDD
 15563                           plusw2	equ	0xFDB
 15564                           fsr2h	equ	0xFDA
 15565                           fsr2l	equ	0xFD9
 15566                           status	equ	0xFD8
 15567                           
 15568 ;; *************** function _USBWakeFromSuspend *****************
 15569 ;; Defined at:
 15570 ;;		line 2303 in file "../My_library/usb/usb_device.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;		None
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;		None
 15575 ;; Return value:  Size  Location     Type
 15576 ;;		None               void
 15577 ;; Registers used:
 15578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15579 ;; Tracked objects:
 15580 ;;		On entry : 0/0
 15581 ;;		On exit  : 0/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15588 ;;Total ram usage:        0 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    5
 15591 ;; This function calls:
 15592 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15593 ;; This function is called by:
 15594 ;;		_USBDeviceTasks
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text65
 15599  0144C6                     __ptext65:
 15600                           	opt stack 0
 15601  0144C6                     _USBWakeFromSuspend:
 15602                           	opt stack 13
 15603                           
 15604                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 15605                           
 15606                           ; BSR set to: 13
 15607                           ;incstack = 0
 15608  0144C6  0E00               	movlw	0
 15609  0144C8  0100               	movlb	0	; () banked
 15610  0144CA  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15611                           
 15612                           ; BSR set to: 0
 15613                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15614  0144CC  0E00               	movlw	0
 15615  0144CE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15616  0144D0  0E74               	movlw	116
 15617  0144D2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15618  0144D4  0E00               	movlw	0
 15619  0144D6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15620  0144D8  0E00               	movlw	0
 15621  0144DA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15622  0144DC  0E00               	movlw	0
 15623  0144DE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15624  0144E0  0E00               	movlw	0
 15625  0144E2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15626  0144E4  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15627                           
 15628                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 15629  0144E8  9265               	bcf	3941,1,c	;volatile
 15630                           
 15631                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 15632  0144EA  010F               	movlb	15	; () banked
 15633  0144EC  9536               	bcf	54,2,b	;volatile
 15634                           
 15635                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 15636  0144EE  D001               	goto	i2l7109
 15637  0144F0                     i2l7107:
 15638                           
 15639                           ;usb_device.c: 2343: {
 15640                           ;usb_device.c: 2344: (UIR &= 0xFB);
 15641  0144F0  9462               	bcf	3938,2,c	;volatile
 15642  0144F2                     i2l7109:
 15643  0144F2  A462               	btfss	3938,2,c	;volatile
 15644  0144F4  0012               	return	
 15645  0144F6  D7FC               	goto	i2l7107
 15646  0144F8                     __end_of_USBWakeFromSuspend:
 15647                           	opt stack 0
 15648                           pclatu	equ	0xFFB
 15649                           pclath	equ	0xFFA
 15650                           tblptru	equ	0xFF8
 15651                           tblptrh	equ	0xFF7
 15652                           tblptrl	equ	0xFF6
 15653                           tablat	equ	0xFF5
 15654                           prodh	equ	0xFF4
 15655                           prodl	equ	0xFF3
 15656                           intcon	equ	0xFF2
 15657                           intcon2	equ	0xFF1
 15658                           indf0	equ	0xFEF
 15659                           postinc0	equ	0xFEE
 15660                           fsr0h	equ	0xFEA
 15661                           fsr0l	equ	0xFE9
 15662                           wreg	equ	0xFE8
 15663                           indf1	equ	0xFE7
 15664                           postinc1	equ	0xFE6
 15665                           postdec1	equ	0xFE5
 15666                           fsr1h	equ	0xFE2
 15667                           fsr1l	equ	0xFE1
 15668                           indf2	equ	0xFDF
 15669                           postinc2	equ	0xFDE
 15670                           postdec2	equ	0xFDD
 15671                           plusw2	equ	0xFDB
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function _USBSuspend *****************
 15677 ;; Defined at:
 15678 ;;		line 2246 in file "../My_library/usb/usb_device.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;		None
 15683 ;; Return value:  Size  Location     Type
 15684 ;;		None               void
 15685 ;; Registers used:
 15686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15696 ;;Total ram usage:        0 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:    5
 15699 ;; This function calls:
 15700 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15701 ;; This function is called by:
 15702 ;;		_USBDeviceTasks
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           	psect	text66
 15707  014524                     __ptext66:
 15708                           	opt stack 0
 15709  014524                     _USBSuspend:
 15710                           	opt stack 13
 15711                           
 15712                           ;usb_device.c: 2271: UIEbits.ACTVIE = 1;
 15713                           
 15714                           ;incstack = 0
 15715  014524  010F               	movlb	15	; () banked
 15716  014526  8536               	bsf	54,2,b	;volatile
 15717                           
 15718                           ; BSR set to: 15
 15719                           ;usb_device.c: 2272: (UIR &= 0xEF);
 15720  014528  9862               	bcf	3938,4,c	;volatile
 15721                           
 15722                           ; BSR set to: 15
 15723                           ;usb_device.c: 2275: UCONbits.SUSPND = 1;
 15724  01452A  8265               	bsf	3941,1,c	;volatile
 15725                           
 15726                           ; BSR set to: 15
 15727                           ;usb_device.c: 2278: USBBusIsSuspended = 1;
 15728  01452C  0E01               	movlw	1
 15729  01452E  0100               	movlb	0	; () banked
 15730  014530  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15734  014532  0E00               	movlw	0
 15735  014534  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15736  014536  0E75               	movlw	117
 15737  014538  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15738  01453A  0E00               	movlw	0
 15739  01453C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15740  01453E  0E00               	movlw	0
 15741  014540  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15742  014542  0E00               	movlw	0
 15743  014544  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15744  014546  0E00               	movlw	0
 15745  014548  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15746  01454A  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15747  01454E  0012               	return		;funcret
 15748  014550                     __end_of_USBSuspend:
 15749                           	opt stack 0
 15750                           pclatu	equ	0xFFB
 15751                           pclath	equ	0xFFA
 15752                           tblptru	equ	0xFF8
 15753                           tblptrh	equ	0xFF7
 15754                           tblptrl	equ	0xFF6
 15755                           tablat	equ	0xFF5
 15756                           prodh	equ	0xFF4
 15757                           prodl	equ	0xFF3
 15758                           intcon	equ	0xFF2
 15759                           intcon2	equ	0xFF1
 15760                           indf0	equ	0xFEF
 15761                           postinc0	equ	0xFEE
 15762                           fsr0h	equ	0xFEA
 15763                           fsr0l	equ	0xFE9
 15764                           wreg	equ	0xFE8
 15765                           indf1	equ	0xFE7
 15766                           postinc1	equ	0xFE6
 15767                           postdec1	equ	0xFE5
 15768                           fsr1h	equ	0xFE2
 15769                           fsr1l	equ	0xFE1
 15770                           indf2	equ	0xFDF
 15771                           postinc2	equ	0xFDE
 15772                           postdec2	equ	0xFDD
 15773                           plusw2	equ	0xFDB
 15774                           fsr2h	equ	0xFDA
 15775                           fsr2l	equ	0xFD9
 15776                           status	equ	0xFD8
 15777                           
 15778 ;; *************** function _USBStallHandler *****************
 15779 ;; Defined at:
 15780 ;;		line 2203 in file "../My_library/usb/usb_device.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;		None
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;		None
 15785 ;; Return value:  Size  Location     Type
 15786 ;;		None               void
 15787 ;; Registers used:
 15788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15798 ;;Total ram usage:        1 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; This function calls:
 15801 ;;		Nothing
 15802 ;; This function is called by:
 15803 ;;		_USBDeviceTasks
 15804 ;; This function uses a non-reentrant model
 15805 ;;
 15806                           
 15807                           	psect	text67
 15808  0142EE                     __ptext67:
 15809                           	opt stack 0
 15810  0142EE                     _USBStallHandler:
 15811                           	opt stack 18
 15812                           
 15813                           ;usb_device.c: 2215: if(UEP0bits.EPSTALL == 1)
 15814                           
 15815                           ;incstack = 0
 15816  0142EE  010F               	movlb	15	; () banked
 15817  0142F0  A126               	btfss	38,0,b	;volatile
 15818  0142F2  D01E               	goto	i2l308
 15819                           
 15820                           ; BSR set to: 15
 15821                           ;usb_device.c: 2216: {
 15822                           ;usb_device.c: 2218: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15823  0142F4  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15824  0142F8  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15825  0142FC  0E80               	movlw	128
 15826  0142FE  18DE               	xorwf	postinc2,w,c
 15827  014300  A4D8               	btfss	status,2,c
 15828  014302  D014               	goto	i2l7131
 15829                           
 15830                           ; BSR set to: 15
 15831  014304  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15832  014308  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15833  01430C  0E84               	movlw	132
 15834  01430E  18DE               	xorwf	postinc2,w,c
 15835  014310  A4D8               	btfss	status,2,c
 15836  014312  D00C               	goto	i2l7131
 15837                           
 15838                           ; BSR set to: 15
 15839                           ;usb_device.c: 2219: {
 15840                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15841  014314  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15842  014318  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15843  01431C  0E0C               	movlw	12
 15844  01431E  6EDF               	movwf	indf2,c
 15845                           
 15846                           ; BSR set to: 15
 15847                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15848  014320  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15849  014324  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15850  014328  0E00               	movlw	0
 15851  01432A  8EDB               	bsf	plusw2,7,c
 15852  01432C                     i2l7131:
 15853                           
 15854                           ; BSR set to: 15
 15855                           ;usb_device.c: 2223: }
 15856                           ;usb_device.c: 2224: UEP0bits.EPSTALL = 0;
 15857  01432C  010F               	movlb	15	; () banked
 15858  01432E  9126               	bcf	38,0,b	;volatile
 15859  014330                     i2l308:
 15860                           
 15861                           ; BSR set to: 15
 15862                           ;usb_device.c: 2225: }
 15863                           ;usb_device.c: 2227: (UIR &= 0xDF);
 15864  014330  9A62               	bcf	3938,5,c	;volatile
 15865                           
 15866                           ; BSR set to: 15
 15867  014332  0012               	return		;funcret
 15868  014334                     __end_of_USBStallHandler:
 15869                           	opt stack 0
 15870                           pclatu	equ	0xFFB
 15871                           pclath	equ	0xFFA
 15872                           tblptru	equ	0xFF8
 15873                           tblptrh	equ	0xFF7
 15874                           tblptrl	equ	0xFF6
 15875                           tablat	equ	0xFF5
 15876                           prodh	equ	0xFF4
 15877                           prodl	equ	0xFF3
 15878                           intcon	equ	0xFF2
 15879                           intcon2	equ	0xFF1
 15880                           indf0	equ	0xFEF
 15881                           postinc0	equ	0xFEE
 15882                           fsr0h	equ	0xFEA
 15883                           fsr0l	equ	0xFE9
 15884                           wreg	equ	0xFE8
 15885                           indf1	equ	0xFE7
 15886                           postinc1	equ	0xFE6
 15887                           postdec1	equ	0xFE5
 15888                           fsr1h	equ	0xFE2
 15889                           fsr1l	equ	0xFE1
 15890                           indf2	equ	0xFDF
 15891                           postinc2	equ	0xFDE
 15892                           postdec2	equ	0xFDD
 15893                           plusw2	equ	0xFDB
 15894                           fsr2h	equ	0xFDA
 15895                           fsr2l	equ	0xFD9
 15896                           status	equ	0xFD8
 15897                           
 15898 ;; *************** function _USBCtrlEPService *****************
 15899 ;; Defined at:
 15900 ;;		line 2370 in file "../My_library/usb/usb_device.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15905 ;; Return value:  Size  Location     Type
 15906 ;;		None               void
 15907 ;; Registers used:
 15908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15917 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15918 ;;Total ram usage:        3 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:    8
 15921 ;; This function calls:
 15922 ;;		_USBCtrlTrfInHandler
 15923 ;;		_USBCtrlTrfOutHandler
 15924 ;;		_USBCtrlTrfSetupHandler
 15925 ;; This function is called by:
 15926 ;;		_USBDeviceTasks
 15927 ;; This function uses a non-reentrant model
 15928 ;;
 15929                           
 15930                           	psect	text68
 15931  013068                     __ptext68:
 15932                           	opt stack 0
 15933  013068                     _USBCtrlEPService:
 15934                           	opt stack 10
 15935                           
 15936                           ;usb_device.c: 2376: USBStatusStageTimeoutCounter = (uint8_t)45;
 15937                           
 15938                           ; BSR set to: 15
 15939                           ;incstack = 0
 15940  013068  0E2D               	movlw	45
 15941  01306A  6E27               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15942                           
 15943                           ;usb_device.c: 2380: if((USTATcopy.Val & ~0x02) == 0x00)
 15944  01306C  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15945  013070  0EFD               	movlw	253
 15946  013072  1648               	andwf	??_USBCtrlEPService,f,c
 15947  013074  A4D8               	btfss	status,2,c
 15948  013076  D057               	goto	i2l7165
 15949                           
 15950                           ;usb_device.c: 2381: {
 15951                           ;usb_device.c: 2384: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15952  013078  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15953  01307C  90D8               	bcf	status,0,c
 15954  01307E  3248               	rrcf	??_USBCtrlEPService,f,c
 15955  013080  0E3F               	movlw	63
 15956  013082  1648               	andwf	??_USBCtrlEPService,f,c
 15957  013084  5048               	movf	??_USBCtrlEPService,w,c
 15958  013086  0D04               	mullw	4
 15959  013088  0E00               	movlw	0
 15960  01308A  24F3               	addwf	prodl,w,c
 15961  01308C  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 15962  01308E  0E0D               	movlw	13
 15963  013090  20F4               	addwfc	prodh,w,c
 15964  013092  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15965                           
 15966                           ;usb_device.c: 2392: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15967  013094  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15968  013098  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15969                           
 15970                           ;usb_device.c: 2394: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15971  01309C  0E04               	movlw	4
 15972  01309E  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 15973                           
 15974                           ;usb_device.c: 2397: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15975  0130A0  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15976  0130A4  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15977  0130A8  30DF               	rrcf	indf2,w,c
 15978  0130AA  32E8               	rrcf	wreg,f,c
 15979  0130AC  0B0F               	andlw	15
 15980  0130AE  0A0D               	xorlw	13
 15981  0130B0  A4D8               	btfss	status,2,c
 15982  0130B2  D036               	goto	i2l7163
 15983                           
 15984                           ;usb_device.c: 2398: {
 15985                           ;usb_device.c: 2399: unsigned char setup_cnt;
 15986                           ;usb_device.c: 2405: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15987  0130B4  0E00               	movlw	0
 15988  0130B6  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 15989  0130B8                     i2l7147:
 15990  0130B8  0E07               	movlw	7
 15991  0130BA  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15992  0130BC  D001               	goto	i2l7151
 15993  0130BE  D023               	goto	i2l7159
 15994  0130C0                     i2l7151:
 15995                           
 15996                           ;usb_device.c: 2406: {
 15997                           ;usb_device.c: 2407: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15998  0130C0  EE20 F002          	lfsr	2,2
 15999  0130C4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16000  0130C6  26D9               	addwf	fsr2l,f,c
 16001  0130C8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16002  0130CA  22DA               	addwfc	fsr2h,f,c
 16003  0130CC  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 16004  0130D0  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 16005  0130D4  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 16006  0130D8  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 16007  0130DC  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 16008  0130DE  0D01               	mullw	1
 16009  0130E0  0E30               	movlw	48
 16010  0130E2  24F3               	addwf	prodl,w,c
 16011  0130E4  6EE1               	movwf	fsr1l,c
 16012  0130E6  0E0D               	movlw	13
 16013  0130E8  20F4               	addwfc	prodh,w,c
 16014  0130EA  6EE2               	movwf	fsr1h,c
 16015  0130EC  CFDF FFE7          	movff	indf2,indf1
 16016                           
 16017                           ;usb_device.c: 2408: pBDTEntryEP0OutCurrent->ADR++;
 16018  0130F0  EE20 F002          	lfsr	2,2
 16019  0130F4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16020  0130F6  26D9               	addwf	fsr2l,f,c
 16021  0130F8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16022  0130FA  22DA               	addwfc	fsr2h,f,c
 16023  0130FC  2ADE               	incf	postinc2,f,c
 16024  0130FE  0E00               	movlw	0
 16025  013100  22DD               	addwfc	postdec2,f,c
 16026  013102  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 16027  013104  D7D9               	goto	i2l7147
 16028  013106                     i2l7159:
 16029                           
 16030                           ;usb_device.c: 2409: }
 16031                           ;usb_device.c: 2410: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16032  013106  EE20 F002          	lfsr	2,2
 16033  01310A  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 16034  01310C  26D9               	addwf	fsr2l,f,c
 16035  01310E  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 16036  013110  22DA               	addwfc	fsr2h,f,c
 16037  013112  0E30               	movlw	48
 16038  013114  6EDE               	movwf	postinc2,c
 16039  013116  0E0D               	movlw	13
 16040  013118  6EDD               	movwf	postdec2,c
 16041                           
 16042                           ;usb_device.c: 2413: USBCtrlTrfSetupHandler();
 16043  01311A  EC96  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 16044                           
 16045                           ;usb_device.c: 2414: }
 16046  01311E  0012               	return	
 16047  013120                     i2l7163:
 16048                           
 16049                           ;usb_device.c: 2415: else
 16050                           ;usb_device.c: 2416: {
 16051                           ;usb_device.c: 2418: USBCtrlTrfOutHandler();
 16052  013120  ECAA  F0A0         	call	_USBCtrlTrfOutHandler	;wreg free
 16053                           
 16054                           ;usb_device.c: 2419: }
 16055                           ;usb_device.c: 2420: }
 16056  013124  0012               	return	
 16057  013126                     i2l7165:
 16058                           
 16059                           ;usb_device.c: 2421: else if((USTATcopy.Val & ~0x02) == 0x04)
 16060  013126  502D               	movf	_USTATcopy,w,c	;volatile
 16061  013128  0BFD               	andlw	253
 16062  01312A  0A04               	xorlw	4
 16063  01312C  A4D8               	btfss	status,2,c
 16064  01312E  0012               	return	
 16065                           
 16066                           ;usb_device.c: 2422: {
 16067                           ;usb_device.c: 2425: USBCtrlTrfInHandler();
 16068  013130  EC38  F09B         	call	_USBCtrlTrfInHandler	;wreg free
 16069  013134  0012               	return	
 16070  013136                     __end_of_USBCtrlEPService:
 16071                           	opt stack 0
 16072                           pclatu	equ	0xFFB
 16073                           pclath	equ	0xFFA
 16074                           tblptru	equ	0xFF8
 16075                           tblptrh	equ	0xFF7
 16076                           tblptrl	equ	0xFF6
 16077                           tablat	equ	0xFF5
 16078                           prodh	equ	0xFF4
 16079                           prodl	equ	0xFF3
 16080                           intcon	equ	0xFF2
 16081                           intcon2	equ	0xFF1
 16082                           indf0	equ	0xFEF
 16083                           postinc0	equ	0xFEE
 16084                           fsr0h	equ	0xFEA
 16085                           fsr0l	equ	0xFE9
 16086                           wreg	equ	0xFE8
 16087                           indf1	equ	0xFE7
 16088                           postinc1	equ	0xFE6
 16089                           postdec1	equ	0xFE5
 16090                           fsr1h	equ	0xFE2
 16091                           fsr1l	equ	0xFE1
 16092                           indf2	equ	0xFDF
 16093                           postinc2	equ	0xFDE
 16094                           postdec2	equ	0xFDD
 16095                           plusw2	equ	0xFDB
 16096                           fsr2h	equ	0xFDA
 16097                           fsr2l	equ	0xFD9
 16098                           status	equ	0xFD8
 16099                           
 16100 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16101 ;; Defined at:
 16102 ;;		line 2470 in file "../My_library/usb/usb_device.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;		None
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;		None
 16107 ;; Return value:  Size  Location     Type
 16108 ;;		None               void
 16109 ;; Registers used:
 16110 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;Total ram usage:        0 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; Hardware stack levels required when called:    7
 16123 ;; This function calls:
 16124 ;;		_USBCheckStdRequest
 16125 ;;		_USBCtrlEPServiceComplete
 16126 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16127 ;; This function is called by:
 16128 ;;		_USBCtrlEPService
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text69
 16133  013D2C                     __ptext69:
 16134                           	opt stack 0
 16135  013D2C                     _USBCtrlTrfSetupHandler:
 16136                           	opt stack 10
 16137                           
 16138                           ;usb_device.c: 2475: shortPacketStatus = 0;
 16139                           
 16140                           ;incstack = 0
 16141  013D2C  0E00               	movlw	0
 16142  013D2E  6E2B               	movwf	_shortPacketStatus,c	;volatile
 16143                           
 16144                           ;usb_device.c: 2476: USBDeferStatusStagePacket = 0;
 16145  013D30  0E00               	movlw	0
 16146  013D32  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 16147                           
 16148                           ;usb_device.c: 2477: USBDeferINDataStagePackets = 0;
 16149  013D34  0E00               	movlw	0
 16150  013D36  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16151                           
 16152                           ;usb_device.c: 2478: USBDeferOUTDataStagePackets = 0;
 16153  013D38  0E00               	movlw	0
 16154  013D3A  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16155                           
 16156                           ;usb_device.c: 2479: BothEP0OutUOWNsSet = 0;
 16157  013D3C  0E00               	movlw	0
 16158  013D3E  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16159                           
 16160                           ;usb_device.c: 2480: controlTransferState = 0;
 16161  013D40  0E00               	movlw	0
 16162  013D42  6E29               	movwf	_controlTransferState,c	;volatile
 16163                           
 16164                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16165  013D44  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16166  013D48  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16167  013D4C  0E7F               	movlw	127
 16168  013D4E  16DF               	andwf	indf2,f,c
 16169                           
 16170                           ;usb_device.c: 2490: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16171  013D50  0E04               	movlw	4
 16172  013D52  1A10               	xorwf	_pBDTEntryIn,f,c
 16173                           
 16174                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16175  013D54  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16176  013D58  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16177  013D5C  0E7F               	movlw	127
 16178  013D5E  16DF               	andwf	indf2,f,c
 16179                           
 16180                           ;usb_device.c: 2492: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16181  013D60  0E04               	movlw	4
 16182  013D62  1A10               	xorwf	_pBDTEntryIn,f,c
 16183                           
 16184                           ;usb_device.c: 2493: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16185  013D64  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16186  013D68  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16187  013D6C  0E7F               	movlw	127
 16188  013D6E  16DF               	andwf	indf2,f,c
 16189                           
 16190                           ;usb_device.c: 2495: inPipes[0].info.Val = 0;
 16191  013D70  0E00               	movlw	0
 16192  013D72  6E0D               	movwf	_inPipes+3,c	;volatile
 16193                           
 16194                           ;usb_device.c: 2496: inPipes[0].wCount.Val = 0;
 16195  013D74  0E00               	movlw	0
 16196  013D76  6E0F               	movwf	_inPipes+5,c	;volatile
 16197  013D78  0E00               	movlw	0
 16198  013D7A  6E0E               	movwf	_inPipes+4,c	;volatile
 16199                           
 16200                           ;usb_device.c: 2497: outPipes[0].info.Val = 0;
 16201  013D7C  0E00               	movlw	0
 16202  013D7E  6E04               	movwf	_outPipes+3,c	;volatile
 16203                           
 16204                           ;usb_device.c: 2498: outPipes[0].wCount.Val = 0;
 16205  013D80  0E00               	movlw	0
 16206  013D82  6E06               	movwf	_outPipes+5,c	;volatile
 16207  013D84  0E00               	movlw	0
 16208  013D86  6E05               	movwf	_outPipes+4,c	;volatile
 16209                           
 16210                           ;usb_device.c: 2504: USBCheckStdRequest();
 16211  013D88  ECB3  F095         	call	_USBCheckStdRequest	;wreg free
 16212                           
 16213                           ;usb_device.c: 2505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16214  013D8C  0E00               	movlw	0
 16215  013D8E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16216  013D90  0E03               	movlw	3
 16217  013D92  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16218  013D94  0E00               	movlw	0
 16219  013D96  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16220  013D98  0E00               	movlw	0
 16221  013D9A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16222  013D9C  0E00               	movlw	0
 16223  013D9E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16224  013DA0  0E00               	movlw	0
 16225  013DA2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16226  013DA4  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16227                           
 16228                           ;usb_device.c: 2518: USBCtrlEPServiceComplete();
 16229  013DA8  EC72  F093         	call	_USBCtrlEPServiceComplete	;wreg free
 16230  013DAC  0012               	return		;funcret
 16231  013DAE                     __end_of_USBCtrlTrfSetupHandler:
 16232                           	opt stack 0
 16233                           pclatu	equ	0xFFB
 16234                           pclath	equ	0xFFA
 16235                           tblptru	equ	0xFF8
 16236                           tblptrh	equ	0xFF7
 16237                           tblptrl	equ	0xFF6
 16238                           tablat	equ	0xFF5
 16239                           prodh	equ	0xFF4
 16240                           prodl	equ	0xFF3
 16241                           intcon	equ	0xFF2
 16242                           intcon2	equ	0xFF1
 16243                           indf0	equ	0xFEF
 16244                           postinc0	equ	0xFEE
 16245                           fsr0h	equ	0xFEA
 16246                           fsr0l	equ	0xFE9
 16247                           wreg	equ	0xFE8
 16248                           indf1	equ	0xFE7
 16249                           postinc1	equ	0xFE6
 16250                           postdec1	equ	0xFE5
 16251                           fsr1h	equ	0xFE2
 16252                           fsr1l	equ	0xFE1
 16253                           indf2	equ	0xFDF
 16254                           postinc2	equ	0xFDE
 16255                           postdec2	equ	0xFDD
 16256                           plusw2	equ	0xFDB
 16257                           fsr2h	equ	0xFDA
 16258                           fsr2l	equ	0xFD9
 16259                           status	equ	0xFD8
 16260                           
 16261 ;; *************** function _USBCtrlEPServiceComplete *****************
 16262 ;; Defined at:
 16263 ;;		line 1617 in file "../My_library/usb/usb_device.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;		None               void
 16270 ;; Registers used:
 16271 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16281 ;;Total ram usage:        0 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; Hardware stack levels required when called:    2
 16284 ;; This function calls:
 16285 ;;		_USBCtrlEPAllowDataStage
 16286 ;;		_USBCtrlEPAllowStatusStage
 16287 ;; This function is called by:
 16288 ;;		_USBCtrlTrfSetupHandler
 16289 ;; This function uses a non-reentrant model
 16290 ;;
 16291                           
 16292                           	psect	text70
 16293  0126E4                     __ptext70:
 16294                           	opt stack 0
 16295  0126E4                     _USBCtrlEPServiceComplete:
 16296                           	opt stack 14
 16297                           
 16298                           ;usb_device.c: 1623: UCONbits.PKTDIS = 0;
 16299                           
 16300                           ;incstack = 0
 16301  0126E4  9865               	bcf	3941,4,c	;volatile
 16302                           
 16303                           ;usb_device.c: 1629: if(inPipes[0].info.bits.busy == 0)
 16304  0126E6  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 16305  0126E8  D038               	goto	i2l232
 16306                           
 16307                           ;usb_device.c: 1630: {
 16308                           ;usb_device.c: 1631: if(outPipes[0].info.bits.busy == 1)
 16309  0126EA  AE04               	btfss	_outPipes+3,7,c	;volatile
 16310  0126EC  D00B               	goto	i2l6717
 16311                           
 16312                           ;usb_device.c: 1632: {
 16313                           ;usb_device.c: 1633: controlTransferState = 2;
 16314  0126EE  0E02               	movlw	2
 16315  0126F0  6E29               	movwf	_controlTransferState,c	;volatile
 16316                           
 16317                           ;usb_device.c: 1644: if(USBDeferOUTDataStagePackets == 0)
 16318  0126F2  5022               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 16319  0126F4  B4D8               	btfsc	status,2,c
 16320                           
 16321                           ;usb_device.c: 1645: {
 16322                           ;usb_device.c: 1646: USBCtrlEPAllowDataStage();
 16323  0126F6  EC32  F09D         	call	_USBCtrlEPAllowDataStage	;wreg free
 16324                           
 16325                           ;usb_device.c: 1647: }
 16326                           ;usb_device.c: 1651: USBStatusStageEnabledFlag2 = 0;
 16327  0126FA  0E00               	movlw	0
 16328  0126FC  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16329                           
 16330                           ;usb_device.c: 1652: USBStatusStageEnabledFlag1 = 0;
 16331  0126FE  0E00               	movlw	0
 16332  012700  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16333                           
 16334                           ;usb_device.c: 1653: }
 16335  012702  0012               	return	
 16336  012704                     i2l6717:
 16337                           
 16338                           ;usb_device.c: 1654: else
 16339                           ;usb_device.c: 1655: {
 16340                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->CNT = 8;
 16341  012704  EE20 F001          	lfsr	2,1
 16342  012708  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16343  01270A  26D9               	addwf	fsr2l,f,c
 16344  01270C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16345  01270E  22DA               	addwfc	fsr2h,f,c
 16346  012710  0E08               	movlw	8
 16347  012712  6EDF               	movwf	indf2,c
 16348                           
 16349                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16350  012714  EE20 F002          	lfsr	2,2
 16351  012718  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16352  01271A  26D9               	addwf	fsr2l,f,c
 16353  01271C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16354  01271E  22DA               	addwfc	fsr2h,f,c
 16355  012720  0E30               	movlw	48
 16356  012722  6EDE               	movwf	postinc2,c
 16357  012724  0E0D               	movlw	13
 16358  012726  6EDD               	movwf	postdec2,c
 16359                           
 16360                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16361  012728  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16362  01272C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16363  012730  0E0C               	movlw	12
 16364  012732  6EDF               	movwf	indf2,c
 16365                           
 16366                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16367  012734  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16368  012738  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16369  01273C  0E00               	movlw	0
 16370  01273E  8EDB               	bsf	plusw2,7,c
 16371                           
 16372                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val = 0x04;
 16373  012740  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16374  012744  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16375  012748  0E04               	movlw	4
 16376  01274A  6EDF               	movwf	indf2,c
 16377                           
 16378                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16379  01274C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16380  012750  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16381  012754  0E00               	movlw	0
 16382  012756  8EDB               	bsf	plusw2,7,c
 16383                           
 16384                           ;usb_device.c: 1666: }
 16385                           ;usb_device.c: 1667: }
 16386  012758  0012               	return	
 16387  01275A                     i2l232:
 16388                           
 16389                           ;usb_device.c: 1668: else
 16390                           ;usb_device.c: 1669: {
 16391                           ;usb_device.c: 1670: if(SetupPkt.DataDir == (0x80>>7))
 16392  01275A  010D               	movlb	13	; () banked
 16393  01275C  AF30               	btfss	48,7,b	;volatile
 16394  01275E  D010               	goto	i2l6737
 16395                           
 16396                           ; BSR set to: 13
 16397                           ;usb_device.c: 1671: {
 16398                           ;usb_device.c: 1672: controlTransferState = 1;
 16399  012760  0E01               	movlw	1
 16400  012762  6E29               	movwf	_controlTransferState,c	;volatile
 16401                           
 16402                           ;usb_device.c: 1686: if(USBDeferINDataStagePackets == 0)
 16403  012764  5021               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 16404  012766  B4D8               	btfsc	status,2,c
 16405                           
 16406                           ; BSR set to: 13
 16407                           ;usb_device.c: 1687: {
 16408                           ;usb_device.c: 1688: USBCtrlEPAllowDataStage();
 16409  012768  EC32  F09D         	call	_USBCtrlEPAllowDataStage	;wreg free
 16410                           
 16411                           ;usb_device.c: 1689: }
 16412                           ;usb_device.c: 1711: USBStatusStageEnabledFlag2 = 0;
 16413  01276C  0E00               	movlw	0
 16414  01276E  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16415                           
 16416                           ;usb_device.c: 1712: USBStatusStageEnabledFlag1 = 0;
 16417  012770  0E00               	movlw	0
 16418  012772  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16419                           
 16420                           ;usb_device.c: 1713: if(USBDeferStatusStagePacket == 0)
 16421  012774  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16422  012776  A4D8               	btfss	status,2,c
 16423  012778  0012               	return	
 16424                           
 16425                           ;usb_device.c: 1714: {
 16426                           ;usb_device.c: 1715: USBCtrlEPAllowStatusStage();
 16427  01277A  EC01  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16428                           
 16429                           ;usb_device.c: 1716: }
 16430                           ;usb_device.c: 1717: }
 16431  01277E  0012               	return	
 16432  012780                     i2l6737:
 16433                           
 16434                           ;usb_device.c: 1718: else
 16435                           ;usb_device.c: 1719: {
 16436                           ;usb_device.c: 1730: controlTransferState = 2;
 16437  012780  0E02               	movlw	2
 16438  012782  6E29               	movwf	_controlTransferState,c	;volatile
 16439                           
 16440                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->CNT = 8;
 16441  012784  EE20 F001          	lfsr	2,1
 16442  012788  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16443  01278A  26D9               	addwf	fsr2l,f,c
 16444  01278C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16445  01278E  22DA               	addwfc	fsr2h,f,c
 16446  012790  0E08               	movlw	8
 16447  012792  6EDF               	movwf	indf2,c
 16448                           
 16449                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16450  012794  EE20 F002          	lfsr	2,2
 16451  012798  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16452  01279A  26D9               	addwf	fsr2l,f,c
 16453  01279C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16454  01279E  22DA               	addwfc	fsr2h,f,c
 16455  0127A0  0E30               	movlw	48
 16456  0127A2  6EDE               	movwf	postinc2,c
 16457  0127A4  0E0D               	movlw	13
 16458  0127A6  6EDD               	movwf	postdec2,c
 16459                           
 16460                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16461  0127A8  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16462  0127AC  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16463  0127B0  0E04               	movlw	4
 16464  0127B2  6EDF               	movwf	indf2,c
 16465                           
 16466                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16467  0127B4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16468  0127B8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16469  0127BC  0E00               	movlw	0
 16470  0127BE  8EDB               	bsf	plusw2,7,c
 16471                           
 16472                           ;usb_device.c: 1739: USBStatusStageEnabledFlag2 = 0;
 16473  0127C0  0E00               	movlw	0
 16474  0127C2  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16475                           
 16476                           ;usb_device.c: 1740: USBStatusStageEnabledFlag1 = 0;
 16477  0127C4  0E00               	movlw	0
 16478  0127C6  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16479                           
 16480                           ;usb_device.c: 1741: if(USBDeferStatusStagePacket == 0)
 16481  0127C8  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16482  0127CA  A4D8               	btfss	status,2,c
 16483  0127CC  0012               	return	
 16484                           
 16485                           ;usb_device.c: 1742: {
 16486                           ;usb_device.c: 1743: USBCtrlEPAllowStatusStage();
 16487  0127CE  EC01  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16488  0127D2  0012               	return	
 16489  0127D4                     __end_of_USBCtrlEPServiceComplete:
 16490                           	opt stack 0
 16491                           pclatu	equ	0xFFB
 16492                           pclath	equ	0xFFA
 16493                           tblptru	equ	0xFF8
 16494                           tblptrh	equ	0xFF7
 16495                           tblptrl	equ	0xFF6
 16496                           tablat	equ	0xFF5
 16497                           prodh	equ	0xFF4
 16498                           prodl	equ	0xFF3
 16499                           intcon	equ	0xFF2
 16500                           intcon2	equ	0xFF1
 16501                           indf0	equ	0xFEF
 16502                           postinc0	equ	0xFEE
 16503                           fsr0h	equ	0xFEA
 16504                           fsr0l	equ	0xFE9
 16505                           wreg	equ	0xFE8
 16506                           indf1	equ	0xFE7
 16507                           postinc1	equ	0xFE6
 16508                           postdec1	equ	0xFE5
 16509                           fsr1h	equ	0xFE2
 16510                           fsr1l	equ	0xFE1
 16511                           indf2	equ	0xFDF
 16512                           postinc2	equ	0xFDE
 16513                           postdec2	equ	0xFDD
 16514                           plusw2	equ	0xFDB
 16515                           fsr2h	equ	0xFDA
 16516                           fsr2l	equ	0xFD9
 16517                           status	equ	0xFD8
 16518                           
 16519 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16520 ;; Defined at:
 16521 ;;		line 1489 in file "../My_library/usb/usb_device.c"
 16522 ;; Parameters:    Size  Location     Type
 16523 ;;		None
 16524 ;; Auto vars:     Size  Location     Type
 16525 ;;		None
 16526 ;; Return value:  Size  Location     Type
 16527 ;;		None               void
 16528 ;; Registers used:
 16529 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16530 ;; Tracked objects:
 16531 ;;		On entry : 0/0
 16532 ;;		On exit  : 0/0
 16533 ;;		Unchanged: 0/0
 16534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16539 ;;Total ram usage:        0 bytes
 16540 ;; Hardware stack levels used:    1
 16541 ;; Hardware stack levels required when called:    1
 16542 ;; This function calls:
 16543 ;;		_USBCtrlTrfTxService
 16544 ;; This function is called by:
 16545 ;;		_USBCtrlEPServiceComplete
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           	psect	text71
 16550  013A64                     __ptext71:
 16551                           	opt stack 0
 16552  013A64                     _USBCtrlEPAllowDataStage:
 16553                           	opt stack 14
 16554                           
 16555                           ;usb_device.c: 1491: USBDeferINDataStagePackets = 0;
 16556                           
 16557                           ;incstack = 0
 16558  013A64  0E00               	movlw	0
 16559  013A66  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16560                           
 16561                           ;usb_device.c: 1492: USBDeferOUTDataStagePackets = 0;
 16562  013A68  0E00               	movlw	0
 16563  013A6A  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16564                           
 16565                           ;usb_device.c: 1494: if(controlTransferState == 2)
 16566  013A6C  0E02               	movlw	2
 16567  013A6E  1829               	xorwf	_controlTransferState,w,c	;volatile
 16568  013A70  A4D8               	btfss	status,2,c
 16569  013A72  D01F               	goto	i2l6271
 16570                           
 16571                           ;usb_device.c: 1495: {
 16572                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->CNT = 8;
 16573  013A74  EE20 F001          	lfsr	2,1
 16574  013A78  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16575  013A7A  26D9               	addwf	fsr2l,f,c
 16576  013A7C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16577  013A7E  22DA               	addwfc	fsr2h,f,c
 16578  013A80  0E08               	movlw	8
 16579  013A82  6EDF               	movwf	indf2,c
 16580                           
 16581                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16582  013A84  EE20 F002          	lfsr	2,2
 16583  013A88  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16584  013A8A  26D9               	addwf	fsr2l,f,c
 16585  013A8C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16586  013A8E  22DA               	addwfc	fsr2h,f,c
 16587  013A90  0E38               	movlw	56
 16588  013A92  6EDE               	movwf	postinc2,c
 16589  013A94  0E0D               	movlw	13
 16590  013A96  6EDD               	movwf	postdec2,c
 16591                           
 16592                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16593  013A98  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16594  013A9C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16595  013AA0  0E48               	movlw	72
 16596  013AA2  6EDF               	movwf	indf2,c
 16597                           
 16598                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16599  013AA4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16600  013AA8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16601  013AAC  0E00               	movlw	0
 16602  013AAE  8EDB               	bsf	plusw2,7,c
 16603                           
 16604                           ;usb_device.c: 1501: }
 16605  013AB0  0012               	return	
 16606  013AB2                     i2l6271:
 16607                           
 16608                           ;usb_device.c: 1502: else
 16609                           ;usb_device.c: 1503: {
 16610                           ;usb_device.c: 1506: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16611  013AB2  500E               	movf	_inPipes+4,w,c	;volatile
 16612  013AB4  010D               	movlb	13	; () banked
 16613  013AB6  5D36               	subwf	54,w,b	;volatile
 16614  013AB8  500F               	movf	_inPipes+5,w,c	;volatile
 16615  013ABA  010D               	movlb	13	; () banked
 16616  013ABC  5937               	subwfb	55,w,b	;volatile
 16617  013ABE  B0D8               	btfsc	status,0,c
 16618  013AC0  D004               	goto	i2l6275
 16619                           
 16620                           ; BSR set to: 13
 16621                           ;usb_device.c: 1507: {
 16622                           ;usb_device.c: 1508: inPipes[0].wCount.Val = SetupPkt.wLength;
 16623  013AC2  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16624  013AC6  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16625  013ACA                     i2l6275:
 16626                           
 16627                           ; BSR set to: 13
 16628                           ;usb_device.c: 1509: }
 16629                           ;usb_device.c: 1510: USBCtrlTrfTxService();
 16630  013ACA  ECCB  F097         	call	_USBCtrlTrfTxService	;wreg free
 16631                           
 16632                           ;usb_device.c: 1515: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16633  013ACE  EE20 F002          	lfsr	2,2
 16634  013AD2  5010               	movf	_pBDTEntryIn,w,c
 16635  013AD4  26D9               	addwf	fsr2l,f,c
 16636  013AD6  5011               	movf	_pBDTEntryIn+1,w,c
 16637  013AD8  22DA               	addwfc	fsr2h,f,c
 16638  013ADA  0E38               	movlw	56
 16639  013ADC  6EDE               	movwf	postinc2,c
 16640  013ADE  0E0D               	movlw	13
 16641  013AE0  6EDD               	movwf	postdec2,c
 16642                           
 16643                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16644  013AE2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16645  013AE6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16646  013AEA  0E48               	movlw	72
 16647  013AEC  6EDF               	movwf	indf2,c
 16648                           
 16649                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16650  013AEE  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16651  013AF2  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16652  013AF6  0E00               	movlw	0
 16653  013AF8  8EDB               	bsf	plusw2,7,c
 16654  013AFA  0012               	return	
 16655  013AFC                     __end_of_USBCtrlEPAllowDataStage:
 16656                           	opt stack 0
 16657                           pclatu	equ	0xFFB
 16658                           pclath	equ	0xFFA
 16659                           tblptru	equ	0xFF8
 16660                           tblptrh	equ	0xFF7
 16661                           tblptrl	equ	0xFF6
 16662                           tablat	equ	0xFF5
 16663                           prodh	equ	0xFF4
 16664                           prodl	equ	0xFF3
 16665                           intcon	equ	0xFF2
 16666                           intcon2	equ	0xFF1
 16667                           indf0	equ	0xFEF
 16668                           postinc0	equ	0xFEE
 16669                           fsr0h	equ	0xFEA
 16670                           fsr0l	equ	0xFE9
 16671                           wreg	equ	0xFE8
 16672                           indf1	equ	0xFE7
 16673                           postinc1	equ	0xFE6
 16674                           postdec1	equ	0xFE5
 16675                           fsr1h	equ	0xFE2
 16676                           fsr1l	equ	0xFE1
 16677                           indf2	equ	0xFDF
 16678                           postinc2	equ	0xFDE
 16679                           postdec2	equ	0xFDD
 16680                           plusw2	equ	0xFDB
 16681                           fsr2h	equ	0xFDA
 16682                           fsr2l	equ	0xFD9
 16683                           status	equ	0xFD8
 16684                           
 16685 ;; *************** function _USBCheckStdRequest *****************
 16686 ;; Defined at:
 16687 ;;		line 2690 in file "../My_library/usb/usb_device.c"
 16688 ;; Parameters:    Size  Location     Type
 16689 ;;		None
 16690 ;; Auto vars:     Size  Location     Type
 16691 ;;		None
 16692 ;; Return value:  Size  Location     Type
 16693 ;;		None               void
 16694 ;; Registers used:
 16695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16696 ;; Tracked objects:
 16697 ;;		On entry : 0/0
 16698 ;;		On exit  : 0/0
 16699 ;;		Unchanged: 0/0
 16700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16705 ;;Total ram usage:        0 bytes
 16706 ;; Hardware stack levels used:    1
 16707 ;; Hardware stack levels required when called:    6
 16708 ;; This function calls:
 16709 ;;		_USBStdFeatureReqHandler
 16710 ;;		_USBStdGetDscHandler
 16711 ;;		_USBStdGetStatusHandler
 16712 ;;		_USBStdSetCfgHandler
 16713 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16714 ;; This function is called by:
 16715 ;;		_USBCtrlTrfSetupHandler
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           	psect	text72
 16720  012B66                     __ptext72:
 16721                           	opt stack 0
 16722  012B66                     _USBCheckStdRequest:
 16723                           	opt stack 10
 16724                           
 16725                           ;usb_device.c: 2692: if(SetupPkt.RequestType != (0x00>>5)) return;
 16726                           
 16727                           ;incstack = 0
 16728  012B66  010D               	movlb	13	; () banked
 16729  012B68  3930               	swapf	48,w,b	;volatile
 16730  012B6A  32E8               	rrcf	wreg,f,c
 16731  012B6C  0B03               	andlw	3
 16732  012B6E  0900               	iorlw	0
 16733  012B70  A4D8               	btfss	status,2,c
 16734  012B72  0012               	return	
 16735  012B74  D043               	goto	i2l6835
 16736  012B76                     i2l359:
 16737                           
 16738                           ; BSR set to: 13
 16739                           ;usb_device.c: 2697: inPipes[0].info.bits.busy = 1;
 16740  012B76  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16741                           
 16742                           ; BSR set to: 13
 16743                           ;usb_device.c: 2698: USBDeviceState = ADR_PENDING_STATE;
 16744  012B78  0E08               	movlw	8
 16745  012B7A  6E24               	movwf	_USBDeviceState,c	;volatile
 16746                           
 16747                           ;usb_device.c: 2700: break;
 16748  012B7C  0012               	return	
 16749  012B7E                     i2l6805:
 16750                           
 16751                           ; BSR set to: 13
 16752                           ;usb_device.c: 2702: USBStdGetDscHandler();
 16753  012B7E  EC5F  F091         	call	_USBStdGetDscHandler	;wreg free
 16754                           
 16755                           ;usb_device.c: 2703: break;
 16756  012B82  0012               	return	
 16757  012B84                     i2l6807:
 16758                           
 16759                           ;usb_device.c: 2705: USBStdSetCfgHandler();
 16760  012B84  EC45  F095         	call	_USBStdSetCfgHandler	;wreg free
 16761                           
 16762                           ;usb_device.c: 2706: break;
 16763  012B88  0012               	return	
 16764  012B8A                     i2l6809:
 16765                           
 16766                           ;usb_device.c: 2708: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16767  012B8A  0E2C               	movlw	low _USBActiveConfiguration
 16768  012B8C  6E0A               	movwf	_inPipes,c	;volatile
 16769  012B8E  0E00               	movlw	high _USBActiveConfiguration
 16770  012B90  6E0B               	movwf	_inPipes+1,c	;volatile
 16771                           
 16772                           ;usb_device.c: 2709: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16773  012B92  800D               	bsf	_inPipes+3,0,c	;volatile
 16774                           
 16775                           ;usb_device.c: 2710: inPipes[0].wCount.v[0] = 1;
 16776  012B94  0E01               	movlw	1
 16777  012B96  6E0E               	movwf	_inPipes+4,c	;volatile
 16778                           
 16779                           ;usb_device.c: 2711: inPipes[0].info.bits.busy = 1;
 16780  012B98  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16781                           
 16782                           ;usb_device.c: 2712: break;
 16783  012B9A  0012               	return	
 16784  012B9C                     i2l6817:
 16785                           
 16786                           ;usb_device.c: 2714: USBStdGetStatusHandler();
 16787  012B9C  ECED  F09B         	call	_USBStdGetStatusHandler	;wreg free
 16788                           
 16789                           ;usb_device.c: 2715: break;
 16790  012BA0  0012               	return	
 16791  012BA2                     i2l6819:
 16792                           
 16793                           ;usb_device.c: 2717: case 3:
 16794                           ;usb_device.c: 2718: USBStdFeatureReqHandler();
 16795  012BA2  EC56  F089         	call	_USBStdFeatureReqHandler	;wreg free
 16796                           
 16797                           ;usb_device.c: 2719: break;
 16798  012BA6  0012               	return	
 16799  012BA8                     i2l6821:
 16800                           
 16801                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16802  012BA8  010D               	movlb	13	; () banked
 16803  012BAA  5134               	movf	52,w,b	;volatile
 16804  012BAC  0D01               	mullw	1
 16805  012BAE  0EFB               	movlw	low _USBAlternateInterface
 16806  012BB0  24F3               	addwf	prodl,w,c
 16807  012BB2  6E0A               	movwf	_inPipes,c	;volatile
 16808  012BB4  0E00               	movlw	high _USBAlternateInterface
 16809  012BB6  20F4               	addwfc	prodh,w,c
 16810  012BB8  6E0B               	movwf	_inPipes+1,c	;volatile
 16811                           
 16812                           ; BSR set to: 13
 16813                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16814  012BBA  800D               	bsf	_inPipes+3,0,c	;volatile
 16815                           
 16816                           ; BSR set to: 13
 16817                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
 16818  012BBC  0E01               	movlw	1
 16819  012BBE  6E0E               	movwf	_inPipes+4,c	;volatile
 16820                           
 16821                           ; BSR set to: 13
 16822                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
 16823  012BC0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16824                           
 16825                           ;usb_device.c: 2725: break;
 16826  012BC2  0012               	return	
 16827  012BC4                     i2l368:
 16828                           
 16829                           ; BSR set to: 13
 16830                           ;usb_device.c: 2727: inPipes[0].info.bits.busy = 1;
 16831  012BC4  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16832                           
 16833                           ; BSR set to: 13
 16834                           ;usb_device.c: 2728: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16835  012BC6  010D               	movlb	13	; () banked
 16836  012BC8  5134               	movf	52,w,b	;volatile
 16837  012BCA  0D01               	mullw	1
 16838  012BCC  0EFB               	movlw	low _USBAlternateInterface
 16839  012BCE  24F3               	addwf	prodl,w,c
 16840  012BD0  6ED9               	movwf	fsr2l,c
 16841  012BD2  0E00               	movlw	high _USBAlternateInterface
 16842  012BD4  20F4               	addwfc	prodh,w,c
 16843  012BD6  6EDA               	movwf	fsr2h,c
 16844  012BD8  CD32 FFDF          	movff	3378,indf2	;volatile
 16845                           
 16846                           ;usb_device.c: 2729: break;
 16847  012BDC  0012               	return	
 16848  012BDE                     i2l6831:
 16849                           
 16850                           ; BSR set to: 13
 16851                           ;usb_device.c: 2731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16852  012BDE  0E00               	movlw	0
 16853  012BE0  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16854  012BE2  0E02               	movlw	2
 16855  012BE4  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16856  012BE6  0E00               	movlw	0
 16857  012BE8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16858  012BEA  0E00               	movlw	0
 16859  012BEC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16860  012BEE  0E00               	movlw	0
 16861  012BF0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16862  012BF2  0E00               	movlw	0
 16863  012BF4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16864  012BF6  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16865                           
 16866                           ;usb_device.c: 2736: }
 16867                           
 16868                           ;usb_device.c: 2735: break;
 16869                           
 16870                           ;usb_device.c: 2734: default:
 16871                           
 16872                           ;usb_device.c: 2733: case 12:
 16873                           
 16874                           ;usb_device.c: 2732: break;
 16875  012BFA  0012               	return	
 16876  012BFC                     i2l6835:
 16877  012BFC  010D               	movlb	13	; () banked
 16878  012BFE  5131               	movf	49,w,b	;volatile
 16879                           
 16880                           ; Switch size 1, requested type "space"
 16881                           ; Number of cases is 11, Range of values is 0 to 12
 16882                           ; switch strategies available:
 16883                           ; Name         Instructions Cycles
 16884                           ; simple_byte           34    18 (average)
 16885                           ;	Chosen strategy is simple_byte
 16886  012C00  0A00               	xorlw	0	; case 0
 16887  012C02  B4D8               	btfsc	status,2,c
 16888  012C04  D7CB               	goto	i2l6817
 16889  012C06  0A01               	xorlw	1	; case 1
 16890  012C08  B4D8               	btfsc	status,2,c
 16891  012C0A  D7CB               	goto	i2l6819
 16892  012C0C  0A02               	xorlw	2	; case 3
 16893  012C0E  B4D8               	btfsc	status,2,c
 16894  012C10  D7C8               	goto	i2l6819
 16895  012C12  0A06               	xorlw	6	; case 5
 16896  012C14  B4D8               	btfsc	status,2,c
 16897  012C16  D7AF               	goto	i2l359
 16898  012C18  0A03               	xorlw	3	; case 6
 16899  012C1A  B4D8               	btfsc	status,2,c
 16900  012C1C  D7B0               	goto	i2l6805
 16901  012C1E  0A01               	xorlw	1	; case 7
 16902  012C20  B4D8               	btfsc	status,2,c
 16903  012C22  D7DD               	goto	i2l6831
 16904  012C24  0A0F               	xorlw	15	; case 8
 16905  012C26  B4D8               	btfsc	status,2,c
 16906  012C28  D7B0               	goto	i2l6809
 16907  012C2A  0A01               	xorlw	1	; case 9
 16908  012C2C  B4D8               	btfsc	status,2,c
 16909  012C2E  D7AA               	goto	i2l6807
 16910  012C30  0A03               	xorlw	3	; case 10
 16911  012C32  B4D8               	btfsc	status,2,c
 16912  012C34  D7B9               	goto	i2l6821
 16913  012C36  0A01               	xorlw	1	; case 11
 16914  012C38  B4D8               	btfsc	status,2,c
 16915  012C3A  D7C4               	goto	i2l368
 16916  012C3C  0A07               	xorlw	7	; case 12
 16917  012C3E  0012               	return	
 16918  012C40                     __end_of_USBCheckStdRequest:
 16919                           	opt stack 0
 16920                           pclatu	equ	0xFFB
 16921                           pclath	equ	0xFFA
 16922                           tblptru	equ	0xFF8
 16923                           tblptrh	equ	0xFF7
 16924                           tblptrl	equ	0xFF6
 16925                           tablat	equ	0xFF5
 16926                           prodh	equ	0xFF4
 16927                           prodl	equ	0xFF3
 16928                           intcon	equ	0xFF2
 16929                           intcon2	equ	0xFF1
 16930                           indf0	equ	0xFEF
 16931                           postinc0	equ	0xFEE
 16932                           fsr0h	equ	0xFEA
 16933                           fsr0l	equ	0xFE9
 16934                           wreg	equ	0xFE8
 16935                           indf1	equ	0xFE7
 16936                           postinc1	equ	0xFE6
 16937                           postdec1	equ	0xFE5
 16938                           fsr1h	equ	0xFE2
 16939                           fsr1l	equ	0xFE1
 16940                           indf2	equ	0xFDF
 16941                           postinc2	equ	0xFDE
 16942                           postdec2	equ	0xFDD
 16943                           plusw2	equ	0xFDB
 16944                           fsr2h	equ	0xFDA
 16945                           fsr2l	equ	0xFD9
 16946                           status	equ	0xFD8
 16947                           
 16948 ;; *************** function _USBStdSetCfgHandler *****************
 16949 ;; Defined at:
 16950 ;;		line 1969 in file "../My_library/usb/usb_device.c"
 16951 ;; Parameters:    Size  Location     Type
 16952 ;;		None
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;  i               1   20[COMRAM] unsigned char 
 16955 ;; Return value:  Size  Location     Type
 16956 ;;		None               void
 16957 ;; Registers used:
 16958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16968 ;;Total ram usage:        1 bytes
 16969 ;; Hardware stack levels used:    1
 16970 ;; Hardware stack levels required when called:    5
 16971 ;; This function calls:
 16972 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16973 ;;		i2_memset
 16974 ;; This function is called by:
 16975 ;;		_USBCheckStdRequest
 16976 ;; This function uses a non-reentrant model
 16977 ;;
 16978                           
 16979                           	psect	text73
 16980  012A8A                     __ptext73:
 16981                           	opt stack 0
 16982  012A8A                     _USBStdSetCfgHandler:
 16983                           	opt stack 10
 16984                           
 16985                           ;usb_device.c: 1971: uint8_t i;
 16986                           ;usb_device.c: 1974: inPipes[0].info.bits.busy = 1;
 16987                           
 16988                           ;incstack = 0
 16989  012A8A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16990                           
 16991                           ;usb_device.c: 1977: memset((void*)&UEP1,0x00,(2));;
 16992  012A8C  0E27               	movlw	39
 16993  012A8E  6E2E               	movwf	i2memset@p1,c
 16994  012A90  0E0F               	movlw	15
 16995  012A92  6E2F               	movwf	i2memset@p1+1,c
 16996  012A94  0E00               	movlw	0
 16997  012A96  6E31               	movwf	i2memset@c+1,c
 16998  012A98  0E00               	movlw	0
 16999  012A9A  6E30               	movwf	i2memset@c,c
 17000  012A9C  0E00               	movlw	0
 17001  012A9E  6E33               	movwf	i2memset@n+1,c
 17002  012AA0  0E02               	movlw	2
 17003  012AA2  6E32               	movwf	i2memset@n,c
 17004  012AA4  ECA8  F0A2         	call	i2_memset	;wreg free
 17005                           
 17006                           ;usb_device.c: 1980: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 17007  012AA8  0E00               	movlw	0
 17008  012AAA  6E2E               	movwf	i2memset@p1,c
 17009  012AAC  0E0D               	movlw	13
 17010  012AAE  6E2F               	movwf	i2memset@p1+1,c
 17011  012AB0  0E00               	movlw	0
 17012  012AB2  6E31               	movwf	i2memset@c+1,c
 17013  012AB4  0E00               	movlw	0
 17014  012AB6  6E30               	movwf	i2memset@c,c
 17015  012AB8  0E00               	movlw	0
 17016  012ABA  6E33               	movwf	i2memset@n+1,c
 17017  012ABC  0E30               	movlw	48
 17018  012ABE  6E32               	movwf	i2memset@n,c
 17019  012AC0  ECA8  F0A2         	call	i2_memset	;wreg free
 17020                           
 17021                           ;usb_device.c: 1983: UCONbits.PPBRST = 1;
 17022  012AC4  8C65               	bsf	3941,6,c	;volatile
 17023                           
 17024                           ;usb_device.c: 1988: for(i = 0; i < (uint8_t)(2+1u); i++)
 17025  012AC6  0E00               	movlw	0
 17026  012AC8  6E42               	movwf	USBStdSetCfgHandler@i,c
 17027  012ACA                     i2l6291:
 17028  012ACA  0E02               	movlw	2
 17029  012ACC  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 17030  012ACE  D001               	goto	i2l6295
 17031  012AD0  D016               	goto	i2l6301
 17032  012AD2                     i2l6295:
 17033                           
 17034                           ;usb_device.c: 1989: {
 17035                           ;usb_device.c: 1990: ep_data_in[i].Val = 0u;
 17036  012AD2  5042               	movf	USBStdSetCfgHandler@i,w,c
 17037  012AD4  0D01               	mullw	1
 17038  012AD6  0E16               	movlw	low _ep_data_in
 17039  012AD8  24F3               	addwf	prodl,w,c
 17040  012ADA  6ED9               	movwf	fsr2l,c
 17041  012ADC  0E00               	movlw	high _ep_data_in
 17042  012ADE  20F4               	addwfc	prodh,w,c
 17043  012AE0  6EDA               	movwf	fsr2h,c
 17044  012AE2  0E00               	movlw	0
 17045  012AE4  6EDF               	movwf	indf2,c
 17046                           
 17047                           ;usb_device.c: 1991: ep_data_out[i].Val = 0u;
 17048  012AE6  5042               	movf	USBStdSetCfgHandler@i,w,c
 17049  012AE8  0D01               	mullw	1
 17050  012AEA  0ED5               	movlw	low _ep_data_out
 17051  012AEC  24F3               	addwf	prodl,w,c
 17052  012AEE  6ED9               	movwf	fsr2l,c
 17053  012AF0  0E00               	movlw	high _ep_data_out
 17054  012AF2  20F4               	addwfc	prodh,w,c
 17055  012AF4  6EDA               	movwf	fsr2h,c
 17056  012AF6  0E00               	movlw	0
 17057  012AF8  6EDF               	movwf	indf2,c
 17058  012AFA  2A42               	incf	USBStdSetCfgHandler@i,f,c
 17059  012AFC  D7E6               	goto	i2l6291
 17060  012AFE                     i2l6301:
 17061                           
 17062                           ;usb_device.c: 1992: }
 17063                           ;usb_device.c: 1995: memset((void*)&USBAlternateInterface,0x00,2);
 17064  012AFE  0EFB               	movlw	low _USBAlternateInterface
 17065  012B00  6E2E               	movwf	i2memset@p1,c
 17066  012B02  0E00               	movlw	high _USBAlternateInterface
 17067  012B04  6E2F               	movwf	i2memset@p1+1,c
 17068  012B06  0E00               	movlw	0
 17069  012B08  6E31               	movwf	i2memset@c+1,c
 17070  012B0A  0E00               	movlw	0
 17071  012B0C  6E30               	movwf	i2memset@c,c
 17072  012B0E  0E00               	movlw	0
 17073  012B10  6E33               	movwf	i2memset@n+1,c
 17074  012B12  0E02               	movlw	2
 17075  012B14  6E32               	movwf	i2memset@n,c
 17076  012B16  ECA8  F0A2         	call	i2_memset	;wreg free
 17077                           
 17078                           ;usb_device.c: 1998: UCONbits.PPBRST = 0;
 17079  012B1A  9C65               	bcf	3941,6,c	;volatile
 17080                           
 17081                           ;usb_device.c: 2000: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17082  012B1C  0E08               	movlw	8
 17083  012B1E  6E10               	movwf	_pBDTEntryIn,c
 17084  012B20  0E0D               	movlw	13
 17085  012B22  6E11               	movwf	_pBDTEntryIn+1,c
 17086                           
 17087                           ;usb_device.c: 2003: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17088  012B24  0E00               	movlw	0
 17089  012B26  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 17090  012B28  0E0D               	movlw	13
 17091  012B2A  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17092                           
 17093                           ;usb_device.c: 2004: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17094  012B2C  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17095  012B30  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17096                           
 17097                           ;usb_device.c: 2007: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17098  012B34  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 17099                           
 17100                           ;usb_device.c: 2010: if(USBActiveConfiguration == 0)
 17101  012B38  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17102  012B3A  A4D8               	btfss	status,2,c
 17103  012B3C  D003               	goto	i2l6317
 17104                           
 17105                           ;usb_device.c: 2011: {
 17106                           ;usb_device.c: 2013: USBDeviceState = ADDRESS_STATE;
 17107  012B3E  0E10               	movlw	16
 17108  012B40  6E24               	movwf	_USBDeviceState,c	;volatile
 17109                           
 17110                           ;usb_device.c: 2014: }
 17111  012B42  0012               	return	
 17112  012B44                     i2l6317:
 17113                           
 17114                           ;usb_device.c: 2015: else
 17115                           ;usb_device.c: 2016: {
 17116                           ;usb_device.c: 2018: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17117  012B44  0E00               	movlw	0
 17118  012B46  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17119  012B48  0E01               	movlw	1
 17120  012B4A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17121  012B4C  0E2C               	movlw	low _USBActiveConfiguration
 17122  012B4E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17123  012B50  0E00               	movlw	high _USBActiveConfiguration
 17124  012B52  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17125  012B54  0E00               	movlw	0
 17126  012B56  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17127  012B58  0E01               	movlw	1
 17128  012B5A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17129  012B5C  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17130                           
 17131                           ;usb_device.c: 2023: USBDeviceState = CONFIGURED_STATE;
 17132  012B60  0E20               	movlw	32
 17133  012B62  6E24               	movwf	_USBDeviceState,c	;volatile
 17134  012B64  0012               	return	
 17135  012B66                     __end_of_USBStdSetCfgHandler:
 17136                           	opt stack 0
 17137                           pclatu	equ	0xFFB
 17138                           pclath	equ	0xFFA
 17139                           tblptru	equ	0xFF8
 17140                           tblptrh	equ	0xFF7
 17141                           tblptrl	equ	0xFF6
 17142                           tablat	equ	0xFF5
 17143                           prodh	equ	0xFF4
 17144                           prodl	equ	0xFF3
 17145                           intcon	equ	0xFF2
 17146                           intcon2	equ	0xFF1
 17147                           indf0	equ	0xFEF
 17148                           postinc0	equ	0xFEE
 17149                           fsr0h	equ	0xFEA
 17150                           fsr0l	equ	0xFE9
 17151                           wreg	equ	0xFE8
 17152                           indf1	equ	0xFE7
 17153                           postinc1	equ	0xFE6
 17154                           postdec1	equ	0xFE5
 17155                           fsr1h	equ	0xFE2
 17156                           fsr1l	equ	0xFE1
 17157                           indf2	equ	0xFDF
 17158                           postinc2	equ	0xFDE
 17159                           postdec2	equ	0xFDD
 17160                           plusw2	equ	0xFDB
 17161                           fsr2h	equ	0xFDA
 17162                           fsr2l	equ	0xFD9
 17163                           status	equ	0xFD8
 17164                           
 17165 ;; *************** function i2_memset *****************
 17166 ;; Defined at:
 17167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17168 ;; Parameters:    Size  Location     Type
 17169 ;;  p1              2    0[COMRAM] PTR void 
 17170 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17171 ;;  c               2    2[COMRAM] int 
 17172 ;;  n               2    4[COMRAM] unsigned int 
 17173 ;; Auto vars:     Size  Location     Type
 17174 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17175 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17176 ;; Return value:  Size  Location     Type
 17177 ;;                  2    0[COMRAM] PTR void 
 17178 ;; Registers used:
 17179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17180 ;; Tracked objects:
 17181 ;;		On entry : 0/0
 17182 ;;		On exit  : 0/0
 17183 ;;		Unchanged: 0/0
 17184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17185 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17188 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17189 ;;Total ram usage:        8 bytes
 17190 ;; Hardware stack levels used:    1
 17191 ;; This function calls:
 17192 ;;		Nothing
 17193 ;; This function is called by:
 17194 ;;		_USBStdSetCfgHandler
 17195 ;;		i2_USBDeviceInit
 17196 ;; This function uses a non-reentrant model
 17197 ;;
 17198                           
 17199                           	psect	text74
 17200  014550                     __ptext74:
 17201                           	opt stack 0
 17202  014550                     i2_memset:
 17203                           	opt stack 17
 17204                           
 17205                           ;incstack = 0
 17206  014550  C02E  F034         	movff	i2memset@p1,i2memset@p
 17207  014554  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17208  014558  D008               	goto	i2l6225
 17209  01455A                     i2l6221:
 17210  01455A  C034  FFD9         	movff	i2memset@p,fsr2l
 17211  01455E  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17212  014562  C030  FFDF         	movff	i2memset@c,indf2
 17213  014566  4A34               	infsnz	i2memset@p,f,c
 17214  014568  2A35               	incf	i2memset@p+1,f,c
 17215  01456A                     i2l6225:
 17216  01456A  0632               	decf	i2memset@n,f,c
 17217  01456C  A0D8               	btfss	status,0,c
 17218  01456E  0633               	decf	i2memset@n+1,f,c
 17219  014570  2832               	incf	i2memset@n,w,c
 17220  014572  E1F3               	bnz	i2l6221
 17221  014574  2833               	incf	i2memset@n+1,w,c
 17222  014576  B4D8               	btfsc	status,2,c
 17223  014578  0012               	return	
 17224  01457A  D7EF               	goto	i2l6221
 17225  01457C                     __end_ofi2_memset:
 17226                           	opt stack 0
 17227                           pclatu	equ	0xFFB
 17228                           pclath	equ	0xFFA
 17229                           tblptru	equ	0xFF8
 17230                           tblptrh	equ	0xFF7
 17231                           tblptrl	equ	0xFF6
 17232                           tablat	equ	0xFF5
 17233                           prodh	equ	0xFF4
 17234                           prodl	equ	0xFF3
 17235                           intcon	equ	0xFF2
 17236                           intcon2	equ	0xFF1
 17237                           indf0	equ	0xFEF
 17238                           postinc0	equ	0xFEE
 17239                           fsr0h	equ	0xFEA
 17240                           fsr0l	equ	0xFE9
 17241                           wreg	equ	0xFE8
 17242                           indf1	equ	0xFE7
 17243                           postinc1	equ	0xFE6
 17244                           postdec1	equ	0xFE5
 17245                           fsr1h	equ	0xFE2
 17246                           fsr1l	equ	0xFE1
 17247                           indf2	equ	0xFDF
 17248                           postinc2	equ	0xFDE
 17249                           postdec2	equ	0xFDD
 17250                           plusw2	equ	0xFDB
 17251                           fsr2h	equ	0xFDA
 17252                           fsr2l	equ	0xFD9
 17253                           status	equ	0xFD8
 17254                           
 17255 ;; *************** function _USBStdGetStatusHandler *****************
 17256 ;; Defined at:
 17257 ;;		line 2130 in file "../My_library/usb/usb_device.c"
 17258 ;; Parameters:    Size  Location     Type
 17259 ;;		None
 17260 ;; Auto vars:     Size  Location     Type
 17261 ;;  p               2    1[COMRAM] PTR struct __BDT
 17262 ;;		 -> NULL(0), BDT(48), 
 17263 ;; Return value:  Size  Location     Type
 17264 ;;		None               void
 17265 ;; Registers used:
 17266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17267 ;; Tracked objects:
 17268 ;;		On entry : 0/0
 17269 ;;		On exit  : 0/0
 17270 ;;		Unchanged: 0/0
 17271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17276 ;;Total ram usage:        3 bytes
 17277 ;; Hardware stack levels used:    1
 17278 ;; This function calls:
 17279 ;;		Nothing
 17280 ;; This function is called by:
 17281 ;;		_USBCheckStdRequest
 17282 ;; This function uses a non-reentrant model
 17283 ;;
 17284                           
 17285                           	psect	text75
 17286  0137DA                     __ptext75:
 17287                           	opt stack 0
 17288  0137DA                     _USBStdGetStatusHandler:
 17289                           	opt stack 15
 17290                           
 17291                           ;usb_device.c: 2132: CtrlTrfData[0] = 0;
 17292                           
 17293                           ;incstack = 0
 17294  0137DA  0E00               	movlw	0
 17295  0137DC  010D               	movlb	13	; () banked
 17296  0137DE  6F38               	movwf	56,b	;volatile
 17297                           
 17298                           ;usb_device.c: 2133: CtrlTrfData[1] = 0;
 17299  0137E0  0E00               	movlw	0
 17300  0137E2  010D               	movlb	13	; () banked
 17301  0137E4  6F39               	movwf	57,b	;volatile
 17302                           
 17303                           ;usb_device.c: 2135: switch(SetupPkt.Recipient)
 17304  0137E6  D038               	goto	i2l6373
 17305  0137E8                     i2l295:
 17306                           
 17307                           ; BSR set to: 13
 17308                           ;usb_device.c: 2138: inPipes[0].info.bits.busy = 1;
 17309  0137E8  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17310                           
 17311                           ; BSR set to: 13
 17312                           ;usb_device.c: 2146: }
 17313                           ;usb_device.c: 2148: if(RemoteWakeup == 1)
 17314                           
 17315                           ; BSR set to: 13
 17316                           
 17317                           ; BSR set to: 13
 17318                           ;usb_device.c: 2144: {
 17319                           ;usb_device.c: 2145: CtrlTrfData[0]|=0x01;
 17320                           
 17321                           ;usb_device.c: 2143: if(0 == 1)
 17322  0137EA  0420               	decf	_RemoteWakeup,w,c	;volatile
 17323  0137EC  A4D8               	btfss	status,2,c
 17324  0137EE  D040               	goto	i2l298
 17325                           
 17326                           ; BSR set to: 13
 17327                           ;usb_device.c: 2149: {
 17328                           ;usb_device.c: 2150: CtrlTrfData[0]|=0x02;
 17329  0137F0  010D               	movlb	13	; () banked
 17330  0137F2  8338               	bsf	56,1,b	;volatile
 17331                           
 17332                           ; BSR set to: 13
 17333                           ;usb_device.c: 2151: }
 17334                           ;usb_device.c: 2152: break;
 17335  0137F4  D03D               	goto	i2l298
 17336  0137F6                     i2l299:
 17337                           
 17338                           ; BSR set to: 13
 17339                           ;usb_device.c: 2154: inPipes[0].info.bits.busy = 1;
 17340  0137F6  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17341                           
 17342                           ;usb_device.c: 2155: break;
 17343  0137F8  D03B               	goto	i2l298
 17344  0137FA                     i2l300:
 17345                           
 17346                           ; BSR set to: 13
 17347                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 17348  0137FA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17349                           
 17350                           ;usb_device.c: 2161: {
 17351                           ;usb_device.c: 2162: BDT_ENTRY *p;
 17352                           ;usb_device.c: 2164: if(SetupPkt.EPDir == 0)
 17353  0137FC  010D               	movlb	13	; () banked
 17354  0137FE  BF34               	btfsc	52,7,b	;volatile
 17355  013800  D00B               	goto	i2l6363
 17356                           
 17357                           ; BSR set to: 13
 17358                           ;usb_device.c: 2165: {
 17359                           ;usb_device.c: 2166: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17360  013802  010D               	movlb	13	; () banked
 17361  013804  5134               	movf	52,w,b	;volatile
 17362  013806  0B0F               	andlw	15
 17363  013808  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17364  01380A  502E               	movf	??_USBStdGetStatusHandler,w,c
 17365  01380C  0D02               	mullw	2
 17366  01380E  0E0A               	movlw	low _pBDTEntryOut
 17367  013810  24F3               	addwf	prodl,w,c
 17368  013812  6ED9               	movwf	fsr2l,c
 17369  013814  0E01               	movlw	high _pBDTEntryOut
 17370  013816  D00A               	goto	L6
 17371  013818                     i2l6363:
 17372                           
 17373                           ; BSR set to: 13
 17374                           ;usb_device.c: 2168: else
 17375                           ;usb_device.c: 2169: {
 17376                           ;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17377  013818  010D               	movlb	13	; () banked
 17378  01381A  5134               	movf	52,w,b	;volatile
 17379  01381C  0B0F               	andlw	15
 17380  01381E  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17381  013820  502E               	movf	??_USBStdGetStatusHandler,w,c
 17382  013822  0D02               	mullw	2
 17383  013824  0E10               	movlw	low _pBDTEntryIn
 17384  013826  24F3               	addwf	prodl,w,c
 17385  013828  6ED9               	movwf	fsr2l,c
 17386  01382A  0E00               	movlw	high _pBDTEntryIn
 17387  01382C                     L6:
 17388  01382C  20F4               	addwfc	prodh,w,c
 17389  01382E  6EDA               	movwf	fsr2h,c
 17390  013830  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 17391  013834  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 17392                           
 17393                           ; BSR set to: 13
 17394                           ;usb_device.c: 2171: }
 17395                           ;usb_device.c: 2173: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17396                           
 17397                           ; BSR set to: 13
 17398  013838  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17399  01383C  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17400  013840  AEDF               	btfss	indf2,7,c
 17401  013842  D016               	goto	i2l298
 17402                           
 17403                           ; BSR set to: 13
 17404  013844  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17405  013848  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17406  01384C  A4DF               	btfss	indf2,2,c
 17407  01384E  D010               	goto	i2l298
 17408                           
 17409                           ; BSR set to: 13
 17410                           ;usb_device.c: 2174: CtrlTrfData[0]=0x01;
 17411  013850  0E01               	movlw	1
 17412  013852  010D               	movlb	13	; () banked
 17413  013854  6F38               	movwf	56,b	;volatile
 17414                           
 17415                           ; BSR set to: 13
 17416                           ;usb_device.c: 2176: }
 17417                           ;usb_device.c: 2177: }
 17418                           
 17419                           ; BSR set to: 13
 17420                           ;usb_device.c: 2175: break;
 17421  013856  D00C               	goto	i2l298
 17422  013858                     i2l6373:
 17423                           
 17424                           ; BSR set to: 13
 17425  013858  010D               	movlb	13	; () banked
 17426  01385A  5130               	movf	48,w,b	;volatile
 17427  01385C  0B1F               	andlw	31
 17428                           
 17429                           ; Switch size 1, requested type "space"
 17430                           ; Number of cases is 3, Range of values is 0 to 2
 17431                           ; switch strategies available:
 17432                           ; Name         Instructions Cycles
 17433                           ; simple_byte           10     6 (average)
 17434                           ;	Chosen strategy is simple_byte
 17435  01385E  0A00               	xorlw	0	; case 0
 17436  013860  B4D8               	btfsc	status,2,c
 17437  013862  D7C2               	goto	i2l295
 17438  013864  0A01               	xorlw	1	; case 1
 17439  013866  B4D8               	btfsc	status,2,c
 17440  013868  D7C6               	goto	i2l299
 17441  01386A  0A03               	xorlw	3	; case 2
 17442  01386C  B4D8               	btfsc	status,2,c
 17443  01386E  D7C5               	goto	i2l300
 17444  013870                     i2l298:
 17445                           
 17446                           ; BSR set to: 13
 17447                           ;usb_device.c: 2179: if(inPipes[0].info.bits.busy == 1)
 17448  013870  AE0D               	btfss	_inPipes+3,7,c	;volatile
 17449  013872  0012               	return	
 17450                           
 17451                           ; BSR set to: 13
 17452                           ;usb_device.c: 2180: {
 17453                           ;usb_device.c: 2181: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17454  013874  0E38               	movlw	56
 17455  013876  6E0A               	movwf	_inPipes,c	;volatile
 17456  013878  0E0D               	movlw	13
 17457  01387A  6E0B               	movwf	_inPipes+1,c	;volatile
 17458                           
 17459                           ; BSR set to: 13
 17460                           ;usb_device.c: 2182: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17461  01387C  800D               	bsf	_inPipes+3,0,c	;volatile
 17462                           
 17463                           ; BSR set to: 13
 17464                           ;usb_device.c: 2183: inPipes[0].wCount.v[0] = 2;
 17465  01387E  0E02               	movlw	2
 17466  013880  6E0E               	movwf	_inPipes+4,c	;volatile
 17467  013882  0012               	return	
 17468  013884                     __end_of_USBStdGetStatusHandler:
 17469                           	opt stack 0
 17470                           pclatu	equ	0xFFB
 17471                           pclath	equ	0xFFA
 17472                           tblptru	equ	0xFF8
 17473                           tblptrh	equ	0xFF7
 17474                           tblptrl	equ	0xFF6
 17475                           tablat	equ	0xFF5
 17476                           prodh	equ	0xFF4
 17477                           prodl	equ	0xFF3
 17478                           intcon	equ	0xFF2
 17479                           intcon2	equ	0xFF1
 17480                           indf0	equ	0xFEF
 17481                           postinc0	equ	0xFEE
 17482                           fsr0h	equ	0xFEA
 17483                           fsr0l	equ	0xFE9
 17484                           wreg	equ	0xFE8
 17485                           indf1	equ	0xFE7
 17486                           postinc1	equ	0xFE6
 17487                           postdec1	equ	0xFE5
 17488                           fsr1h	equ	0xFE2
 17489                           fsr1l	equ	0xFE1
 17490                           indf2	equ	0xFDF
 17491                           postinc2	equ	0xFDE
 17492                           postdec2	equ	0xFDD
 17493                           plusw2	equ	0xFDB
 17494                           fsr2h	equ	0xFDA
 17495                           fsr2l	equ	0xFD9
 17496                           status	equ	0xFD8
 17497                           
 17498 ;; *************** function _USBStdGetDscHandler *****************
 17499 ;; Defined at:
 17500 ;;		line 2044 in file "../My_library/usb/usb_device.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;		None
 17503 ;; Auto vars:     Size  Location     Type
 17504 ;;		None
 17505 ;; Return value:  Size  Location     Type
 17506 ;;		None               void
 17507 ;; Registers used:
 17508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17509 ;; Tracked objects:
 17510 ;;		On entry : 0/0
 17511 ;;		On exit  : 0/0
 17512 ;;		Unchanged: 0/0
 17513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17516 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;Total ram usage:        2 bytes
 17519 ;; Hardware stack levels used:    1
 17520 ;; This function calls:
 17521 ;;		Nothing
 17522 ;; This function is called by:
 17523 ;;		_USBCheckStdRequest
 17524 ;; This function uses a non-reentrant model
 17525 ;;
 17526                           
 17527                           	psect	text76
 17528  0122BE                     __ptext76:
 17529                           	opt stack 0
 17530  0122BE                     _USBStdGetDscHandler:
 17531                           	opt stack 15
 17532                           
 17533                           ;usb_device.c: 2046: if(SetupPkt.bmRequestType == 0x80)
 17534                           
 17535                           ; BSR set to: 13
 17536                           ;incstack = 0
 17537  0122BE  0E80               	movlw	128
 17538  0122C0  010D               	movlb	13	; () banked
 17539  0122C2  1930               	xorwf	48,w,b	;volatile
 17540  0122C4  A4D8               	btfss	status,2,c
 17541  0122C6  0012               	return	
 17542                           
 17543                           ; BSR set to: 13
 17544                           ;usb_device.c: 2047: {
 17545                           ;usb_device.c: 2048: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17546  0122C8  0EC0               	movlw	192
 17547  0122CA  6E0D               	movwf	_inPipes+3,c	;volatile
 17548                           
 17549                           ;usb_device.c: 2050: switch(SetupPkt.bDescriptorType)
 17550  0122CC  D085               	goto	i2l6351
 17551  0122CE                     i2l6325:
 17552                           
 17553                           ; BSR set to: 13
 17554                           ;usb_device.c: 2056: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17555  0122CE  0EDC               	movlw	low _device_dsc
 17556  0122D0  6E0A               	movwf	_inPipes,c	;volatile
 17557  0122D2  0EFD               	movlw	high _device_dsc
 17558  0122D4  6E0B               	movwf	_inPipes+1,c	;volatile
 17559                           
 17560                           ; BSR set to: 13
 17561                           ;usb_device.c: 2058: inPipes[0].wCount.Val = sizeof(device_dsc);
 17562  0122D6  0E00               	movlw	0
 17563  0122D8  6E0F               	movwf	_inPipes+5,c	;volatile
 17564  0122DA  0E12               	movlw	18
 17565  0122DC  6E0E               	movwf	_inPipes+4,c	;volatile
 17566                           
 17567                           ;usb_device.c: 2059: break;
 17568  0122DE  0012               	return	
 17569  0122E0                     i2l6329:
 17570                           
 17571                           ; BSR set to: 13
 17572                           ;usb_device.c: 2064: if(SetupPkt.bDscIndex < 1)
 17573  0122E0  010D               	movlb	13	; () banked
 17574  0122E2  5132               	movf	50,w,b	;volatile
 17575  0122E4  A4D8               	btfss	status,2,c
 17576  0122E6  D043               	goto	i2l6337
 17577                           
 17578                           ; BSR set to: 13
 17579                           ;usb_device.c: 2065: {
 17580                           ;usb_device.c: 2069: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17581  0122E8  010D               	movlb	13	; () banked
 17582  0122EA  5132               	movf	50,w,b	;volatile
 17583  0122EC  0D02               	mullw	2
 17584  0122EE  0E13               	movlw	low _USB_CD_Ptr
 17585  0122F0  24F3               	addwf	prodl,w,c
 17586  0122F2  6EF6               	movwf	tblptrl,c
 17587  0122F4  0EFD               	movlw	high _USB_CD_Ptr
 17588  0122F6  20F4               	addwfc	prodh,w,c
 17589  0122F8  6EF7               	movwf	tblptrh,c
 17590  0122FA                     	if	1	;There are 3 active tblptr bytes
 17591  0122FA  6AF8               	clrf	tblptru,c
 17592  0122FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17593  0122FE  22F8               	addwfc	tblptru,f,c
 17594  012300                     	endif
 17595  012300  0009               	tblrd		*+
 17596  012302  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17597  012306  000A               	tblrd		*-
 17598  012308  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17599                           
 17600                           ; BSR set to: 13
 17601                           ;usb_device.c: 2075: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17602  01230C  0E02               	movlw	2
 17603  01230E  240A               	addwf	_inPipes,w,c	;volatile
 17604  012310  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17605  012312  0E00               	movlw	0
 17606  012314  200B               	addwfc	_inPipes+1,w,c	;volatile
 17607  012316  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17608  012318  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17609  01231C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17610  012320  0E00               	movlw	low (__mediumconst shr (0+16))
 17611  012322  6EF8               	movwf	tblptru,c
 17612  012324  0E0E               	movlw	(high __ramtop+-1)
 17613  012326  64F7               	cpfsgt	tblptrh,c
 17614  012328  D003               	bra	i2u508_47
 17615  01232A  0008               	tblrd		*
 17616  01232C  50F5               	movf	tablat,w,c
 17617  01232E  D005               	bra	i2u508_40
 17618  012330                     i2u508_47:
 17619  012330  CFF6 FFE9          	movff	tblptrl,fsr0l
 17620  012334  CFF7 FFEA          	movff	tblptrh,fsr0h
 17621  012338  50EF               	movf	indf0,w,c
 17622  01233A                     i2u508_40:
 17623  01233A  6E0E               	movwf	_inPipes+4,c	;volatile
 17624                           
 17625                           ;usb_device.c: 2076: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17626  01233C  0E03               	movlw	3
 17627  01233E  240A               	addwf	_inPipes,w,c	;volatile
 17628  012340  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17629  012342  0E00               	movlw	0
 17630  012344  200B               	addwfc	_inPipes+1,w,c	;volatile
 17631  012346  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17632  012348  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17633  01234C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17634  012350  0E00               	movlw	low (__mediumconst shr (0+16))
 17635  012352  6EF8               	movwf	tblptru,c
 17636  012354  0E0E               	movlw	(high __ramtop+-1)
 17637  012356  64F7               	cpfsgt	tblptrh,c
 17638  012358  D003               	bra	i2u509_47
 17639  01235A  0008               	tblrd		*
 17640  01235C  50F5               	movf	tablat,w,c
 17641  01235E  D005               	bra	i2u509_40
 17642  012360                     i2u509_47:
 17643  012360  CFF6 FFE9          	movff	tblptrl,fsr0l
 17644  012364  CFF7 FFEA          	movff	tblptrh,fsr0h
 17645  012368  50EF               	movf	indf0,w,c
 17646  01236A                     i2u509_40:
 17647  01236A  6E0F               	movwf	_inPipes+5,c	;volatile
 17648                           
 17649                           ;usb_device.c: 2077: }
 17650  01236C  0012               	return	
 17651  01236E                     i2l6337:
 17652                           
 17653                           ;usb_device.c: 2078: else
 17654                           ;usb_device.c: 2079: {
 17655                           ;usb_device.c: 2080: inPipes[0].info.Val = 0;
 17656  01236E  0E00               	movlw	0
 17657  012370  6E0D               	movwf	_inPipes+3,c	;volatile
 17658                           
 17659                           ;usb_device.c: 2081: }
 17660                           ;usb_device.c: 2082: break;
 17661  012372  0012               	return	
 17662  012374                     i2l6339:
 17663                           
 17664                           ;usb_device.c: 2087: if(SetupPkt.bDscIndex<3)
 17665  012374  0E03               	movlw	3
 17666  012376  010D               	movlb	13	; () banked
 17667  012378  6132               	cpfslt	50,b	;volatile
 17668  01237A  D028               	goto	i2l6345
 17669                           
 17670                           ; BSR set to: 13
 17671                           ;usb_device.c: 2088: {
 17672                           ;usb_device.c: 2090: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17673  01237C  010D               	movlb	13	; () banked
 17674  01237E  5132               	movf	50,w,b	;volatile
 17675  012380  0D02               	mullw	2
 17676  012382  0E0D               	movlw	low _USB_SD_Ptr
 17677  012384  24F3               	addwf	prodl,w,c
 17678  012386  6EF6               	movwf	tblptrl,c
 17679  012388  0EFD               	movlw	high _USB_SD_Ptr
 17680  01238A  20F4               	addwfc	prodh,w,c
 17681  01238C  6EF7               	movwf	tblptrh,c
 17682  01238E                     	if	1	;There are 3 active tblptr bytes
 17683  01238E  6AF8               	clrf	tblptru,c
 17684  012390  0E00               	movlw	low (__mediumconst shr (0+16))
 17685  012392  22F8               	addwfc	tblptru,f,c
 17686  012394                     	endif
 17687  012394  0009               	tblrd		*+
 17688  012396  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17689  01239A  000A               	tblrd		*-
 17690  01239C  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17691                           
 17692                           ; BSR set to: 13
 17693                           ;usb_device.c: 2092: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17694  0123A0  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17695  0123A4  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17696  0123A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17697  0123AA  6EF8               	movwf	tblptru,c
 17698  0123AC  0E0E               	movlw	(high __ramtop+-1)
 17699  0123AE  64F7               	cpfsgt	tblptrh,c
 17700  0123B0  D003               	bra	i2u511_47
 17701  0123B2  0008               	tblrd		*
 17702  0123B4  50F5               	movf	tablat,w,c
 17703  0123B6  D005               	bra	i2u511_40
 17704  0123B8                     i2u511_47:
 17705  0123B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17706  0123BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17707  0123C0  50EF               	movf	indf0,w,c
 17708  0123C2                     i2u511_40:
 17709  0123C2  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17710  0123C4  502E               	movf	??_USBStdGetDscHandler,w,c
 17711  0123C6  6E0E               	movwf	_inPipes+4,c	;volatile
 17712  0123C8  6A0F               	clrf	_inPipes+5,c	;volatile
 17713                           
 17714                           ;usb_device.c: 2093: }
 17715  0123CA  0012               	return	
 17716  0123CC                     i2l6345:
 17717                           
 17718                           ;usb_device.c: 2103: else
 17719                           ;usb_device.c: 2104: {
 17720                           ;usb_device.c: 2105: inPipes[0].info.Val = 0;
 17721  0123CC  0E00               	movlw	0
 17722  0123CE  6E0D               	movwf	_inPipes+3,c	;volatile
 17723                           
 17724                           ;usb_device.c: 2106: }
 17725                           ;usb_device.c: 2107: break;
 17726  0123D0  0012               	return	
 17727  0123D2                     i2l6347:
 17728                           
 17729                           ;usb_device.c: 2109: inPipes[0].info.Val = 0;
 17730  0123D2  0E00               	movlw	0
 17731  0123D4  6E0D               	movwf	_inPipes+3,c	;volatile
 17732                           
 17733                           ;usb_device.c: 2111: }
 17734                           
 17735                           ;usb_device.c: 2110: break;
 17736  0123D6  0012               	return	
 17737  0123D8                     i2l6351:
 17738  0123D8  010D               	movlb	13	; () banked
 17739  0123DA  5133               	movf	51,w,b	;volatile
 17740                           
 17741                           ; Switch size 1, requested type "space"
 17742                           ; Number of cases is 3, Range of values is 1 to 3
 17743                           ; switch strategies available:
 17744                           ; Name         Instructions Cycles
 17745                           ; simple_byte           10     6 (average)
 17746                           ;	Chosen strategy is simple_byte
 17747  0123DC  0A01               	xorlw	1	; case 1
 17748  0123DE  B4D8               	btfsc	status,2,c
 17749  0123E0  D776               	goto	i2l6325
 17750  0123E2  0A03               	xorlw	3	; case 2
 17751  0123E4  B4D8               	btfsc	status,2,c
 17752  0123E6  D77C               	goto	i2l6329
 17753  0123E8  0A01               	xorlw	1	; case 3
 17754  0123EA  B4D8               	btfsc	status,2,c
 17755  0123EC  D7C3               	goto	i2l6339
 17756  0123EE  D7F1               	goto	i2l6347
 17757  0123F0                     __end_of_USBStdGetDscHandler:
 17758                           	opt stack 0
 17759                           pclatu	equ	0xFFB
 17760                           pclath	equ	0xFFA
 17761                           tblptru	equ	0xFF8
 17762                           tblptrh	equ	0xFF7
 17763                           tblptrl	equ	0xFF6
 17764                           tablat	equ	0xFF5
 17765                           prodh	equ	0xFF4
 17766                           prodl	equ	0xFF3
 17767                           intcon	equ	0xFF2
 17768                           intcon2	equ	0xFF1
 17769                           indf0	equ	0xFEF
 17770                           postinc0	equ	0xFEE
 17771                           fsr0h	equ	0xFEA
 17772                           fsr0l	equ	0xFE9
 17773                           wreg	equ	0xFE8
 17774                           indf1	equ	0xFE7
 17775                           postinc1	equ	0xFE6
 17776                           postdec1	equ	0xFE5
 17777                           fsr1h	equ	0xFE2
 17778                           fsr1l	equ	0xFE1
 17779                           indf2	equ	0xFDF
 17780                           postinc2	equ	0xFDE
 17781                           postdec2	equ	0xFDD
 17782                           plusw2	equ	0xFDB
 17783                           fsr2h	equ	0xFDA
 17784                           fsr2l	equ	0xFD9
 17785                           status	equ	0xFD8
 17786                           
 17787 ;; *************** function _USBStdFeatureReqHandler *****************
 17788 ;; Defined at:
 17789 ;;		line 2758 in file "../My_library/usb/usb_device.c"
 17790 ;; Parameters:    Size  Location     Type
 17791 ;;		None
 17792 ;; Auto vars:     Size  Location     Type
 17793 ;;  p               2   24[COMRAM] PTR struct __BDT
 17794 ;;		 -> NULL(0), BDT(48), 
 17795 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17796 ;;		 -> UEP0(1), 
 17797 ;;  current_ep_d    1   23[COMRAM] struct .
 17798 ;; Return value:  Size  Location     Type
 17799 ;;		None               void
 17800 ;; Registers used:
 17801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17808 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17811 ;;Total ram usage:        6 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; Hardware stack levels required when called:    5
 17814 ;; This function calls:
 17815 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17816 ;; This function is called by:
 17817 ;;		_USBCheckStdRequest
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           	psect	text77
 17822  0112AC                     __ptext77:
 17823                           	opt stack 0
 17824  0112AC                     _USBStdFeatureReqHandler:
 17825                           	opt stack 10
 17826                           
 17827                           ;usb_device.c: 2760: BDT_ENTRY *p;
 17828                           ;usb_device.c: 2761: EP_STATUS current_ep_data;
 17829                           ;usb_device.c: 2765: unsigned char* pUEP;
 17830                           ;usb_device.c: 2803: if((SetupPkt.bFeature == 1)&&
 17831                           ;usb_device.c: 2804: (SetupPkt.Recipient == (0x00)))
 17832                           
 17833                           ;incstack = 0
 17834  0112AC  010D               	movlb	13	; () banked
 17835  0112AE  0532               	decf	50,w,b	;volatile
 17836  0112B0  A4D8               	btfss	status,2,c
 17837  0112B2  D010               	goto	i2l374
 17838                           
 17839                           ; BSR set to: 13
 17840  0112B4  010D               	movlb	13	; () banked
 17841  0112B6  5130               	movf	48,w,b	;volatile
 17842  0112B8  0B1F               	andlw	31
 17843  0112BA  0900               	iorlw	0
 17844  0112BC  A4D8               	btfss	status,2,c
 17845  0112BE  D00A               	goto	i2l374
 17846                           
 17847                           ; BSR set to: 13
 17848                           ;usb_device.c: 2805: {
 17849                           ;usb_device.c: 2806: inPipes[0].info.bits.busy = 1;
 17850  0112C0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17851                           
 17852                           ; BSR set to: 13
 17853                           ;usb_device.c: 2807: if(SetupPkt.bRequest == 3)
 17854  0112C2  0E03               	movlw	3
 17855  0112C4  010D               	movlb	13	; () banked
 17856  0112C6  1931               	xorwf	49,w,b	;volatile
 17857  0112C8  A4D8               	btfss	status,2,c
 17858  0112CA  D002               	goto	i2l6391
 17859                           
 17860                           ; BSR set to: 13
 17861                           ;usb_device.c: 2808: RemoteWakeup = 1;
 17862  0112CC  0E01               	movlw	1
 17863  0112CE  D001               	goto	L7
 17864  0112D0                     i2l6391:
 17865                           
 17866                           ; BSR set to: 13
 17867                           ;usb_device.c: 2809: else
 17868                           ;usb_device.c: 2810: RemoteWakeup = 0;
 17869  0112D0  0E00               	movlw	0
 17870  0112D2                     L7:
 17871  0112D2  6E20               	movwf	_RemoteWakeup,c	;volatile
 17872  0112D4                     i2l374:
 17873                           
 17874                           ; BSR set to: 13
 17875                           ;usb_device.c: 2811: }
 17876                           ;usb_device.c: 2814: if((SetupPkt.bFeature == 0)&&
 17877                           ;usb_device.c: 2815: (SetupPkt.Recipient == (0x02))&&
 17878                           ;usb_device.c: 2816: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17879                           ;usb_device.c: 2817: (USBDeviceState == CONFIGURED_STATE))
 17880  0112D4  010D               	movlb	13	; () banked
 17881  0112D6  5132               	movf	50,w,b	;volatile
 17882  0112D8  A4D8               	btfss	status,2,c
 17883  0112DA  0012               	return	
 17884                           
 17885                           ; BSR set to: 13
 17886  0112DC  010D               	movlb	13	; () banked
 17887  0112DE  5130               	movf	48,w,b	;volatile
 17888  0112E0  0B1F               	andlw	31
 17889  0112E2  0A02               	xorlw	2
 17890  0112E4  A4D8               	btfss	status,2,c
 17891  0112E6  0012               	return	
 17892                           
 17893                           ; BSR set to: 13
 17894  0112E8  010D               	movlb	13	; () banked
 17895  0112EA  5134               	movf	52,w,b	;volatile
 17896  0112EC  0B0F               	andlw	15
 17897  0112EE  0900               	iorlw	0
 17898  0112F0  B4D8               	btfsc	status,2,c
 17899  0112F2  0012               	return	
 17900                           
 17901                           ; BSR set to: 13
 17902  0112F4  010D               	movlb	13	; () banked
 17903  0112F6  5134               	movf	52,w,b	;volatile
 17904  0112F8  0B0F               	andlw	15
 17905  0112FA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17906  0112FC  0E03               	movlw	3
 17907  0112FE  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17908  011300  0012               	return	
 17909                           
 17910                           ; BSR set to: 13
 17911  011302  0E20               	movlw	32
 17912  011304  1824               	xorwf	_USBDeviceState,w,c	;volatile
 17913  011306  A4D8               	btfss	status,2,c
 17914  011308  0012               	return	
 17915                           
 17916                           ; BSR set to: 13
 17917                           ;usb_device.c: 2818: {
 17918                           ;usb_device.c: 2821: inPipes[0].info.bits.busy = 1;
 17919  01130A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17920                           
 17921                           ;usb_device.c: 2824: if(SetupPkt.EPDir == 0)
 17922  01130C  010D               	movlb	13	; () banked
 17923  01130E  BF34               	btfsc	52,7,b	;volatile
 17924  011310  D01B               	goto	i2l6405
 17925                           
 17926                           ; BSR set to: 13
 17927                           ;usb_device.c: 2825: {
 17928                           ;usb_device.c: 2826: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17929  011312  010D               	movlb	13	; () banked
 17930  011314  5134               	movf	52,w,b	;volatile
 17931  011316  0B0F               	andlw	15
 17932  011318  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17933  01131A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17934  01131C  0D02               	mullw	2
 17935  01131E  0E0A               	movlw	low _pBDTEntryOut
 17936  011320  24F3               	addwf	prodl,w,c
 17937  011322  6ED9               	movwf	fsr2l,c
 17938  011324  0E01               	movlw	high _pBDTEntryOut
 17939  011326  20F4               	addwfc	prodh,w,c
 17940  011328  6EDA               	movwf	fsr2h,c
 17941  01132A  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17942  01132E  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17943                           
 17944                           ;usb_device.c: 2827: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17945  011332  010D               	movlb	13	; () banked
 17946  011334  5134               	movf	52,w,b	;volatile
 17947  011336  0B0F               	andlw	15
 17948  011338  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17949  01133A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17950  01133C  0D01               	mullw	1
 17951  01133E  0ED5               	movlw	low _ep_data_out
 17952  011340  24F3               	addwf	prodl,w,c
 17953  011342  6ED9               	movwf	fsr2l,c
 17954  011344  0E00               	movlw	high _ep_data_out
 17955  011346  D01A               	goto	L8
 17956  011348                     i2l6405:
 17957                           
 17958                           ; BSR set to: 13
 17959                           ;usb_device.c: 2829: else
 17960                           ;usb_device.c: 2830: {
 17961                           ;usb_device.c: 2831: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17962  011348  010D               	movlb	13	; () banked
 17963  01134A  5134               	movf	52,w,b	;volatile
 17964  01134C  0B0F               	andlw	15
 17965  01134E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17966  011350  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17967  011352  0D02               	mullw	2
 17968  011354  0E10               	movlw	low _pBDTEntryIn
 17969  011356  24F3               	addwf	prodl,w,c
 17970  011358  6ED9               	movwf	fsr2l,c
 17971  01135A  0E00               	movlw	high _pBDTEntryIn
 17972  01135C  20F4               	addwfc	prodh,w,c
 17973  01135E  6EDA               	movwf	fsr2h,c
 17974  011360  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17975  011364  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17976                           
 17977                           ;usb_device.c: 2832: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17978  011368  010D               	movlb	13	; () banked
 17979  01136A  5134               	movf	52,w,b	;volatile
 17980  01136C  0B0F               	andlw	15
 17981  01136E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17982  011370  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17983  011372  0D01               	mullw	1
 17984  011374  0E16               	movlw	low _ep_data_in
 17985  011376  24F3               	addwf	prodl,w,c
 17986  011378  6ED9               	movwf	fsr2l,c
 17987  01137A  0E00               	movlw	high _ep_data_in
 17988  01137C                     L8:
 17989  01137C  20F4               	addwfc	prodh,w,c
 17990  01137E  6EDA               	movwf	fsr2h,c
 17991  011380  50DF               	movf	indf2,w,c
 17992  011382  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17993                           
 17994                           ; BSR set to: 13
 17995                           ;usb_device.c: 2833: }
 17996                           ;usb_device.c: 2839: if(current_ep_data.bits.ping_pong_state == 0)
 17997                           
 17998                           ; BSR set to: 13
 17999  011384  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 18000  011386  D002               	goto	i2l6411
 18001                           
 18002                           ; BSR set to: 13
 18003                           ;usb_device.c: 2840: {
 18004                           ;usb_device.c: 2841: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 18005  011388  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 18006                           
 18007                           ;usb_device.c: 2842: }
 18008  01138A  D001               	goto	i2l6413
 18009  01138C                     i2l6411:
 18010                           
 18011                           ; BSR set to: 13
 18012                           ;usb_device.c: 2843: else
 18013                           ;usb_device.c: 2844: {
 18014                           ;usb_device.c: 2845: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 18015  01138C  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 18016  01138E                     i2l6413:
 18017                           
 18018                           ; BSR set to: 13
 18019                           ;usb_device.c: 2846: }
 18020                           ;usb_device.c: 2851: if(SetupPkt.EPDir == 0)
 18021  01138E  010D               	movlb	13	; () banked
 18022  011390  BF34               	btfsc	52,7,b	;volatile
 18023  011392  D00B               	goto	i2l6417
 18024                           
 18025                           ; BSR set to: 13
 18026                           ;usb_device.c: 2852: {
 18027                           ;usb_device.c: 2853: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18028  011394  010D               	movlb	13	; () banked
 18029  011396  5134               	movf	52,w,b	;volatile
 18030  011398  0B0F               	andlw	15
 18031  01139A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18032  01139C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18033  01139E  0D02               	mullw	2
 18034  0113A0  0E0A               	movlw	low _pBDTEntryOut
 18035  0113A2  24F3               	addwf	prodl,w,c
 18036  0113A4  6ED9               	movwf	fsr2l,c
 18037  0113A6  0E01               	movlw	high _pBDTEntryOut
 18038  0113A8  D00A               	goto	L9
 18039  0113AA                     i2l6417:
 18040                           
 18041                           ; BSR set to: 13
 18042                           ;usb_device.c: 2855: else
 18043                           ;usb_device.c: 2856: {
 18044                           ;usb_device.c: 2857: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18045  0113AA  010D               	movlb	13	; () banked
 18046  0113AC  5134               	movf	52,w,b	;volatile
 18047  0113AE  0B0F               	andlw	15
 18048  0113B0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18049  0113B2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18050  0113B4  0D02               	mullw	2
 18051  0113B6  0E10               	movlw	low _pBDTEntryIn
 18052  0113B8  24F3               	addwf	prodl,w,c
 18053  0113BA  6ED9               	movwf	fsr2l,c
 18054  0113BC  0E00               	movlw	high _pBDTEntryIn
 18055  0113BE                     L9:
 18056  0113BE  20F4               	addwfc	prodh,w,c
 18057  0113C0  6EDA               	movwf	fsr2h,c
 18058  0113C2  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 18059  0113C6  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 18060                           
 18061                           ; BSR set to: 13
 18062                           ;usb_device.c: 2858: }
 18063                           ;usb_device.c: 2861: if(SetupPkt.bRequest == 3)
 18064                           
 18065                           ; BSR set to: 13
 18066  0113CA  0E03               	movlw	3
 18067  0113CC  010D               	movlb	13	; () banked
 18068  0113CE  1931               	xorwf	49,w,b	;volatile
 18069  0113D0  A4D8               	btfss	status,2,c
 18070  0113D2  D031               	goto	i2l6433
 18071                           
 18072                           ; BSR set to: 13
 18073                           ;usb_device.c: 2862: {
 18074                           ;usb_device.c: 2863: if(p->STAT.UOWN == 1)
 18075  0113D4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18076  0113D8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18077  0113DC  AEDF               	btfss	indf2,7,c
 18078  0113DE  D01E               	goto	i2l6429
 18079                           
 18080                           ; BSR set to: 13
 18081                           ;usb_device.c: 2864: {
 18082                           ;usb_device.c: 2867: if(SetupPkt.EPDir == 0)
 18083  0113E0  010D               	movlb	13	; () banked
 18084  0113E2  BF34               	btfsc	52,7,b	;volatile
 18085  0113E4  D00E               	goto	i2l6427
 18086                           
 18087                           ; BSR set to: 13
 18088                           ;usb_device.c: 2868: {
 18089                           ;usb_device.c: 2869: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18090  0113E6  010D               	movlb	13	; () banked
 18091  0113E8  5134               	movf	52,w,b	;volatile
 18092  0113EA  0B0F               	andlw	15
 18093  0113EC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18094  0113EE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18095  0113F0  0D01               	mullw	1
 18096  0113F2  0ED5               	movlw	low _ep_data_out
 18097  0113F4  24F3               	addwf	prodl,w,c
 18098  0113F6  6ED9               	movwf	fsr2l,c
 18099  0113F8  0E00               	movlw	high _ep_data_out
 18100  0113FA  20F4               	addwfc	prodh,w,c
 18101  0113FC  6EDA               	movwf	fsr2h,c
 18102  0113FE  0100               	movlb	0	; () banked
 18103  011400  D00C               	goto	L10
 18104  011402                     i2l6427:
 18105                           
 18106                           ;usb_device.c: 2871: else
 18107                           ;usb_device.c: 2872: {
 18108                           ;usb_device.c: 2873: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18109  011402  010D               	movlb	13	; () banked
 18110  011404  5134               	movf	52,w,b	;volatile
 18111  011406  0B0F               	andlw	15
 18112  011408  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18113  01140A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18114  01140C  0D01               	mullw	1
 18115  01140E  0E16               	movlw	low _ep_data_in
 18116  011410  24F3               	addwf	prodl,w,c
 18117  011412  6ED9               	movwf	fsr2l,c
 18118  011414  0E00               	movlw	high _ep_data_in
 18119  011416  20F4               	addwfc	prodh,w,c
 18120  011418  6EDA               	movwf	fsr2h,c
 18121  01141A                     L10:
 18122  01141A  82DF               	bsf	indf2,1,c
 18123  01141C                     i2l6429:
 18124                           
 18125                           ;usb_device.c: 2874: }
 18126                           ;usb_device.c: 2875: }
 18127                           ;usb_device.c: 2878: p->STAT.Val |= 0x04;
 18128  01141C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18129  011420  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18130  011424  0E00               	movlw	0
 18131  011426  84DB               	bsf	plusw2,2,c
 18132                           
 18133                           ;usb_device.c: 2879: p->STAT.Val |= 0x80;
 18134  011428  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18135  01142C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18136  011430  0E00               	movlw	0
 18137  011432  8EDB               	bsf	plusw2,7,c
 18138                           
 18139                           ;usb_device.c: 2880: }
 18140  011434  0012               	return	
 18141  011436                     i2l6433:
 18142                           
 18143                           ;usb_device.c: 2881: else
 18144                           ;usb_device.c: 2882: {
 18145                           ;usb_device.c: 2886: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18146  011436  0E04               	movlw	4
 18147  011438  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18148                           
 18149                           ;usb_device.c: 2888: if(p->STAT.UOWN == 1)
 18150  01143A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18151  01143E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18152  011442  AEDF               	btfss	indf2,7,c
 18153  011444  D01B               	goto	i2l6443
 18154                           
 18155                           ;usb_device.c: 2889: {
 18156                           ;usb_device.c: 2892: p->STAT.Val &= (~0x80);
 18157  011446  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18158  01144A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18159  01144E  0E7F               	movlw	127
 18160  011450  16DF               	andwf	indf2,f,c
 18161                           
 18162                           ;usb_device.c: 2893: p->STAT.Val |= 0x40;
 18163  011452  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18164  011456  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18165  01145A  0E00               	movlw	0
 18166  01145C  8CDB               	bsf	plusw2,6,c
 18167                           
 18168                           ;usb_device.c: 2894: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18169  01145E  0E00               	movlw	0
 18170  011460  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18171  011462  0E05               	movlw	5
 18172  011464  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18173  011466  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18174  01146A  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18175  01146E  0E00               	movlw	0
 18176  011470  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18177  011472  0E02               	movlw	2
 18178  011474  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18179  011476  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18180                           
 18181                           ;usb_device.c: 2895: }
 18182  01147A  D006               	goto	i2l6445
 18183  01147C                     i2l6443:
 18184                           
 18185                           ;usb_device.c: 2896: else
 18186                           ;usb_device.c: 2897: {
 18187                           ;usb_device.c: 2899: p->STAT.Val |= 0x40;
 18188  01147C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18189  011480  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18190  011484  0E00               	movlw	0
 18191  011486  8CDB               	bsf	plusw2,6,c
 18192  011488                     i2l6445:
 18193                           
 18194                           ;usb_device.c: 2900: }
 18195                           ;usb_device.c: 2904: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18196  011488  0E04               	movlw	4
 18197  01148A  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18198                           
 18199                           ;usb_device.c: 2910: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18200  01148C  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18201  01148E  D006               	goto	i2l393
 18202  011490  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18203  011494  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18204  011498  AEDF               	btfss	indf2,7,c
 18205  01149A  D033               	goto	i2l6459
 18206  01149C                     i2l393:
 18207                           
 18208                           ;usb_device.c: 2911: {
 18209                           ;usb_device.c: 2912: if(SetupPkt.EPDir == 0)
 18210  01149C  010D               	movlb	13	; () banked
 18211  01149E  BF34               	btfsc	52,7,b	;volatile
 18212  0114A0  D00E               	goto	i2l6453
 18213                           
 18214                           ; BSR set to: 13
 18215                           ;usb_device.c: 2913: {
 18216                           ;usb_device.c: 2914: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18217  0114A2  010D               	movlb	13	; () banked
 18218  0114A4  5134               	movf	52,w,b	;volatile
 18219  0114A6  0B0F               	andlw	15
 18220  0114A8  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18221  0114AA  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18222  0114AC  0D01               	mullw	1
 18223  0114AE  0ED5               	movlw	low _ep_data_out
 18224  0114B0  24F3               	addwf	prodl,w,c
 18225  0114B2  6ED9               	movwf	fsr2l,c
 18226  0114B4  0E00               	movlw	high _ep_data_out
 18227  0114B6  20F4               	addwfc	prodh,w,c
 18228  0114B8  6EDA               	movwf	fsr2h,c
 18229  0114BA  0100               	movlb	0	; () banked
 18230  0114BC  D00C               	goto	L11
 18231  0114BE                     i2l6453:
 18232                           
 18233                           ;usb_device.c: 2916: else
 18234                           ;usb_device.c: 2917: {
 18235                           ;usb_device.c: 2918: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18236  0114BE  010D               	movlb	13	; () banked
 18237  0114C0  5134               	movf	52,w,b	;volatile
 18238  0114C2  0B0F               	andlw	15
 18239  0114C4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18240  0114C6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18241  0114C8  0D01               	mullw	1
 18242  0114CA  0E16               	movlw	low _ep_data_in
 18243  0114CC  24F3               	addwf	prodl,w,c
 18244  0114CE  6ED9               	movwf	fsr2l,c
 18245  0114D0  0E00               	movlw	high _ep_data_in
 18246  0114D2  20F4               	addwfc	prodh,w,c
 18247  0114D4  6EDA               	movwf	fsr2h,c
 18248  0114D6                     L11:
 18249  0114D6  92DF               	bcf	indf2,1,c
 18250                           
 18251                           ;usb_device.c: 2919: }
 18252                           ;usb_device.c: 2921: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18253                           
 18254                           ; BSR set to: 13
 18255  0114D8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18256  0114DC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18257  0114E0  0E3B               	movlw	59
 18258  0114E2  16DF               	andwf	indf2,f,c
 18259                           
 18260                           ;usb_device.c: 2924: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18261  0114E4  0E00               	movlw	0
 18262  0114E6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18263  0114E8  0E05               	movlw	5
 18264  0114EA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18265  0114EC  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18266  0114F0  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18267  0114F4  0E00               	movlw	0
 18268  0114F6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18269  0114F8  0E02               	movlw	2
 18270  0114FA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18271  0114FC  EC7C  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18272                           
 18273                           ;usb_device.c: 2925: }
 18274  011500  D006               	goto	i2l6461
 18275  011502                     i2l6459:
 18276                           
 18277                           ;usb_device.c: 2926: else
 18278                           ;usb_device.c: 2927: {
 18279                           ;usb_device.c: 2929: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18280  011502  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18281  011506  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18282  01150A  0E3B               	movlw	59
 18283  01150C  16DF               	andwf	indf2,f,c
 18284  01150E                     i2l6461:
 18285                           
 18286                           ;usb_device.c: 2930: }
 18287                           ;usb_device.c: 2977: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18288  01150E  010D               	movlb	13	; () banked
 18289  011510  5134               	movf	52,w,b	;volatile
 18290  011512  0B0F               	andlw	15
 18291  011514  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18292  011516  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18293  011518  0D01               	mullw	1
 18294  01151A  0E26               	movlw	38
 18295  01151C  24F3               	addwf	prodl,w,c
 18296  01151E  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 18297  011520  0E0F               	movlw	15
 18298  011522  20F4               	addwfc	prodh,w,c
 18299  011524  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18300                           
 18301                           ; BSR set to: 13
 18302                           ;usb_device.c: 2981: *pUEP &= ~0x0001;
 18303  011526  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18304  01152A  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18305  01152E  0EFE               	movlw	254
 18306  011530  16DF               	andwf	indf2,f,c
 18307                           
 18308                           ; BSR set to: 13
 18309  011532  0012               	return	
 18310  011534                     __end_of_USBStdFeatureReqHandler:
 18311                           	opt stack 0
 18312                           pclatu	equ	0xFFB
 18313                           pclath	equ	0xFFA
 18314                           tblptru	equ	0xFF8
 18315                           tblptrh	equ	0xFF7
 18316                           tblptrl	equ	0xFF6
 18317                           tablat	equ	0xFF5
 18318                           prodh	equ	0xFF4
 18319                           prodl	equ	0xFF3
 18320                           intcon	equ	0xFF2
 18321                           intcon2	equ	0xFF1
 18322                           indf0	equ	0xFEF
 18323                           postinc0	equ	0xFEE
 18324                           fsr0h	equ	0xFEA
 18325                           fsr0l	equ	0xFE9
 18326                           wreg	equ	0xFE8
 18327                           indf1	equ	0xFE7
 18328                           postinc1	equ	0xFE6
 18329                           postdec1	equ	0xFE5
 18330                           fsr1h	equ	0xFE2
 18331                           fsr1l	equ	0xFE1
 18332                           indf2	equ	0xFDF
 18333                           postinc2	equ	0xFDE
 18334                           postdec2	equ	0xFDD
 18335                           plusw2	equ	0xFDB
 18336                           fsr2h	equ	0xFDA
 18337                           fsr2l	equ	0xFD9
 18338                           status	equ	0xFD8
 18339                           
 18340 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18341 ;; Defined at:
 18342 ;;		line 119 in file "../My_library/My_usb_cdc.c"
 18343 ;; Parameters:    Size  Location     Type
 18344 ;;  event           2   12[COMRAM] enum E70
 18345 ;;  pdata           2   14[COMRAM] PTR void 
 18346 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 18347 ;;  size            2   16[COMRAM] unsigned int 
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;		None
 18350 ;; Return value:  Size  Location     Type
 18351 ;;                  1    wreg      unsigned char 
 18352 ;; Registers used:
 18353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18354 ;; Tracked objects:
 18355 ;;		On entry : 0/0
 18356 ;;		On exit  : 0/0
 18357 ;;		Unchanged: 0/0
 18358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18359 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18362 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18363 ;;Total ram usage:        8 bytes
 18364 ;; Hardware stack levels used:    1
 18365 ;; Hardware stack levels required when called:    4
 18366 ;; This function calls:
 18367 ;;		_APP_DeviceCDCBasicDemoInitialize
 18368 ;;		_USBCheckCDCRequest
 18369 ;; This function is called by:
 18370 ;;		_USBDeviceTasks
 18371 ;;		_USBStdSetCfgHandler
 18372 ;;		_USBSuspend
 18373 ;;		_USBWakeFromSuspend
 18374 ;;		_USBCtrlTrfSetupHandler
 18375 ;;		_USBCheckStdRequest
 18376 ;;		_USBStdFeatureReqHandler
 18377 ;; This function uses a non-reentrant model
 18378 ;;
 18379                           
 18380                           	psect	text78
 18381  0140F8                     __ptext78:
 18382                           	opt stack 0
 18383  0140F8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18384                           	opt stack 14
 18385                           
 18386                           ;My_usb_cdc.c: 120: switch ((int) event) {
 18387                           
 18388                           ;incstack = 0
 18389  0140F8  D006               	goto	i2l6051
 18390  0140FA                     i2l6045:
 18391                           
 18392                           ;My_usb_cdc.c: 143: APP_DeviceCDCBasicDemoInitialize();
 18393  0140FA  ECE8  F0A2         	call	_APP_DeviceCDCBasicDemoInitialize	;wreg free
 18394                           
 18395                           ;My_usb_cdc.c: 147: break;
 18396                           
 18397                           ;My_usb_cdc.c: 146: case EVENT_SET_DESCRIPTOR:
 18398                           
 18399                           ;My_usb_cdc.c: 144: break;
 18400  0140FE  0012               	return	
 18401  014100                     i2l6047:
 18402                           
 18403                           ;My_usb_cdc.c: 152: USBCheckCDCRequest();
 18404  014100  EC95  F09B         	call	_USBCheckCDCRequest	;wreg free
 18405                           
 18406                           ;My_usb_cdc.c: 163: }
 18407                           
 18408                           ;My_usb_cdc.c: 162: break;
 18409                           
 18410                           ;My_usb_cdc.c: 161: default:
 18411                           
 18412                           ;My_usb_cdc.c: 159: break;
 18413                           
 18414                           ;My_usb_cdc.c: 158: case EVENT_TRANSFER_TERMINATED:
 18415                           
 18416                           ;My_usb_cdc.c: 156: break;
 18417                           
 18418                           ;My_usb_cdc.c: 155: case EVENT_BUS_ERROR:
 18419                           
 18420                           ;My_usb_cdc.c: 153: break;
 18421  014104  0012               	return	
 18422  014106                     i2l6051:
 18423  014106  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18424  01410A  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18425                           
 18426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 18427                           ; Switch size 1, requested type "space"
 18428                           ; Number of cases is 2, Range of values is 0 to 127
 18429                           ; switch strategies available:
 18430                           ; Name         Instructions Cycles
 18431                           ; simple_byte            7     4 (average)
 18432                           ;	Chosen strategy is simple_byte
 18433  01410E  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18434  014110  0A00               	xorlw	0	; case 0
 18435  014112  B4D8               	btfsc	status,2,c
 18436  014114  D004               	goto	i2l10891
 18437  014116  0A7F               	xorlw	127	; case 127
 18438  014118  A4D8               	btfss	status,2,c
 18439  01411A  0012               	return	
 18440  01411C  D018               	goto	i2l10893
 18441  01411E                     i2l10891:
 18442                           
 18443                           ; Switch size 1, requested type "space"
 18444                           ; Number of cases is 8, Range of values is 1 to 117
 18445                           ; switch strategies available:
 18446                           ; Name         Instructions Cycles
 18447                           ; simple_byte           25    13 (average)
 18448                           ;	Chosen strategy is simple_byte
 18449  01411E  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18450  014120  0A01               	xorlw	1	; case 1
 18451  014122  B4D8               	btfsc	status,2,c
 18452  014124  D7EA               	goto	i2l6045
 18453  014126  0A03               	xorlw	3	; case 2
 18454  014128  B4D8               	btfsc	status,2,c
 18455  01412A  0012               	return	
 18456  01412C  0A01               	xorlw	1	; case 3
 18457  01412E  B4D8               	btfsc	status,2,c
 18458  014130  D7E7               	goto	i2l6047
 18459  014132  0A06               	xorlw	6	; case 5
 18460  014134  B4D8               	btfsc	status,2,c
 18461  014136  0012               	return	
 18462  014138  0A77               	xorlw	119	; case 114
 18463  01413A  B4D8               	btfsc	status,2,c
 18464  01413C  0012               	return	
 18465  01413E  0A01               	xorlw	1	; case 115
 18466  014140  B4D8               	btfsc	status,2,c
 18467  014142  0012               	return	
 18468  014144  0A07               	xorlw	7	; case 116
 18469  014146  B4D8               	btfsc	status,2,c
 18470  014148  0012               	return	
 18471  01414A  0A01               	xorlw	1	; case 117
 18472  01414C  0012               	return	
 18473  01414E                     i2l10893:
 18474                           
 18475                           ; Switch size 1, requested type "space"
 18476                           ; Number of cases is 1, Range of values is 255 to 255
 18477                           ; switch strategies available:
 18478                           ; Name         Instructions Cycles
 18479                           ; simple_byte            4     3 (average)
 18480                           ;	Chosen strategy is simple_byte
 18481  01414E  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18482  014150  0AFF               	xorlw	255	; case 255
 18483  014152  0012               	return	
 18484  014154                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18485                           	opt stack 0
 18486                           pclatu	equ	0xFFB
 18487                           pclath	equ	0xFFA
 18488                           tblptru	equ	0xFF8
 18489                           tblptrh	equ	0xFF7
 18490                           tblptrl	equ	0xFF6
 18491                           tablat	equ	0xFF5
 18492                           prodh	equ	0xFF4
 18493                           prodl	equ	0xFF3
 18494                           intcon	equ	0xFF2
 18495                           intcon2	equ	0xFF1
 18496                           indf0	equ	0xFEF
 18497                           postinc0	equ	0xFEE
 18498                           fsr0h	equ	0xFEA
 18499                           fsr0l	equ	0xFE9
 18500                           wreg	equ	0xFE8
 18501                           indf1	equ	0xFE7
 18502                           postinc1	equ	0xFE6
 18503                           postdec1	equ	0xFE5
 18504                           fsr1h	equ	0xFE2
 18505                           fsr1l	equ	0xFE1
 18506                           indf2	equ	0xFDF
 18507                           postinc2	equ	0xFDE
 18508                           postdec2	equ	0xFDD
 18509                           plusw2	equ	0xFDB
 18510                           fsr2h	equ	0xFDA
 18511                           fsr2l	equ	0xFD9
 18512                           status	equ	0xFD8
 18513                           
 18514 ;; *************** function _USBCheckCDCRequest *****************
 18515 ;; Defined at:
 18516 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 18517 ;; Parameters:    Size  Location     Type
 18518 ;;		None
 18519 ;; Auto vars:     Size  Location     Type
 18520 ;;		None
 18521 ;; Return value:  Size  Location     Type
 18522 ;;		None               void
 18523 ;; Registers used:
 18524 ;;		wreg, status,2, status,0
 18525 ;; Tracked objects:
 18526 ;;		On entry : 0/0
 18527 ;;		On exit  : 0/0
 18528 ;;		Unchanged: 0/0
 18529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18534 ;;Total ram usage:        0 bytes
 18535 ;; Hardware stack levels used:    1
 18536 ;; This function calls:
 18537 ;;		Nothing
 18538 ;; This function is called by:
 18539 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18540 ;; This function uses a non-reentrant model
 18541 ;;
 18542                           
 18543                           	psect	text79
 18544  01372A                     __ptext79:
 18545                           	opt stack 0
 18546  01372A                     _USBCheckCDCRequest:
 18547                           	opt stack 17
 18548                           
 18549                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18550                           
 18551                           ;incstack = 0
 18552  01372A  010D               	movlb	13	; () banked
 18553  01372C  5130               	movf	48,w,b	;volatile
 18554  01372E  0B1F               	andlw	31
 18555  013730  06E8               	decf	wreg,f,c
 18556  013732  A4D8               	btfss	status,2,c
 18557  013734  0012               	return	
 18558                           
 18559                           ; BSR set to: 13
 18560                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18561                           
 18562                           ; BSR set to: 13
 18563                           
 18564                           ; BSR set to: 13
 18565  013736  010D               	movlb	13	; () banked
 18566  013738  3930               	swapf	48,w,b	;volatile
 18567  01373A  32E8               	rrcf	wreg,f,c
 18568  01373C  0B03               	andlw	3
 18569  01373E  06E8               	decf	wreg,f,c
 18570  013740  A4D8               	btfss	status,2,c
 18571  013742  0012               	return	
 18572                           
 18573                           ; BSR set to: 13
 18574                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18575                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18576                           
 18577                           ; BSR set to: 13
 18578                           
 18579                           ; BSR set to: 13
 18580  013744  010D               	movlb	13	; () banked
 18581  013746  5134               	movf	52,w,b	;volatile
 18582  013748  B4D8               	btfsc	status,2,c
 18583  01374A  D035               	goto	i2l5927
 18584                           
 18585                           ; BSR set to: 13
 18586  01374C  010D               	movlb	13	; () banked
 18587  01374E  0534               	decf	52,w,b	;volatile
 18588  013750  A4D8               	btfss	status,2,c
 18589  013752  0012               	return	
 18590  013754  D030               	goto	i2l5927
 18591  013756                     i2l5903:
 18592                           
 18593                           ; BSR set to: 13
 18594                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18595  013756  0E44               	movlw	low _dummy_encapsulated_cmd_response
 18596  013758  6E0A               	movwf	_inPipes,c	;volatile
 18597  01375A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18598  01375C  6E0B               	movwf	_inPipes+1,c	;volatile
 18599                           
 18600                           ; BSR set to: 13
 18601                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18602  01375E  0E00               	movlw	0
 18603  013760  6E0F               	movwf	_inPipes+5,c	;volatile
 18604  013762  0E08               	movlw	8
 18605  013764  6E0E               	movwf	_inPipes+4,c	;volatile
 18606                           
 18607                           ; BSR set to: 13
 18608                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18609  013766  800D               	bsf	_inPipes+3,0,c	;volatile
 18610                           
 18611                           ; BSR set to: 13
 18612                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18613  013768  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18614                           
 18615                           ;usb_device_cdc.c: 232: break;
 18616  01376A  0012               	return	
 18617  01376C                     i2l5911:
 18618                           
 18619                           ; BSR set to: 13
 18620                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18621  01376C  0E44               	movlw	low _dummy_encapsulated_cmd_response
 18622  01376E  6E0A               	movwf	_inPipes,c	;volatile
 18623  013770  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18624  013772  6E0B               	movwf	_inPipes+1,c	;volatile
 18625                           
 18626                           ; BSR set to: 13
 18627                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18628  013774  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18629                           
 18630                           ;usb_device_cdc.c: 237: break;
 18631  013776  0012               	return	
 18632  013778                     i2l450:
 18633                           
 18634                           ; BSR set to: 13
 18635                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18636  013778  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18637  01377C  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18638                           
 18639                           ; BSR set to: 13
 18640                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18641  013780  0E74               	movlw	low _line_coding
 18642  013782  6E01               	movwf	_outPipes,c	;volatile
 18643  013784  0E01               	movlw	high _line_coding
 18644  013786  6E02               	movwf	_outPipes+1,c	;volatile
 18645                           
 18646                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18647  013788  0E00               	movlw	0
 18648  01378A  6E07               	movwf	_outPipes+6,c	;volatile
 18649  01378C  0E00               	movlw	0
 18650  01378E  6E08               	movwf	_outPipes+7,c	;volatile
 18651  013790  0E00               	movlw	0
 18652  013792  6E09               	movwf	_outPipes+8,c	;volatile
 18653                           
 18654                           ; BSR set to: 13
 18655                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18656  013794  8E04               	bsf	_outPipes+3,7,c	;volatile
 18657                           
 18658                           ;usb_device_cdc.c: 246: break;
 18659  013796  0012               	return	
 18660  013798                     i2l5919:
 18661                           
 18662                           ; BSR set to: 13
 18663                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18664  013798  0E74               	movlw	low _line_coding
 18665  01379A  6E0A               	movwf	_inPipes,c	;volatile
 18666  01379C  0E01               	movlw	high _line_coding
 18667  01379E  6E0B               	movwf	_inPipes+1,c	;volatile
 18668                           
 18669                           ; BSR set to: 13
 18670  0137A0  0E00               	movlw	0
 18671  0137A2  6E0F               	movwf	_inPipes+5,c	;volatile
 18672  0137A4  0E07               	movlw	7
 18673  0137A6  6E0E               	movwf	_inPipes+4,c	;volatile
 18674                           
 18675                           ; BSR set to: 13
 18676  0137A8  0EC1               	movlw	193
 18677  0137AA  6E0D               	movwf	_inPipes+3,c	;volatile
 18678                           
 18679                           ;usb_device_cdc.c: 253: break;
 18680  0137AC  0012               	return	
 18681  0137AE                     i2l452:
 18682                           
 18683                           ; BSR set to: 13
 18684                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18685  0137AE  CD32 F0ED          	movff	3378,_control_signal_bitmap	;volatile
 18686                           
 18687                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18688  0137B2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18689                           
 18690                           ; BSR set to: 13
 18691                           ;usb_device_cdc.c: 315: }
 18692                           
 18693                           ; BSR set to: 13
 18694                           ;usb_device_cdc.c: 314: break;
 18695                           
 18696                           ;usb_device_cdc.c: 313: default:
 18697                           
 18698                           ;usb_device_cdc.c: 289: break;
 18699  0137B4  0012               	return	
 18700  0137B6                     i2l5927:
 18701                           
 18702                           ; BSR set to: 13
 18703  0137B6  010D               	movlb	13	; () banked
 18704  0137B8  5131               	movf	49,w,b	;volatile
 18705                           
 18706                           ; Switch size 1, requested type "space"
 18707                           ; Number of cases is 5, Range of values is 0 to 34
 18708                           ; switch strategies available:
 18709                           ; Name         Instructions Cycles
 18710                           ; simple_byte           16     9 (average)
 18711                           ;	Chosen strategy is simple_byte
 18712  0137BA  0A00               	xorlw	0	; case 0
 18713  0137BC  B4D8               	btfsc	status,2,c
 18714  0137BE  D7CB               	goto	i2l5903
 18715  0137C0  0A01               	xorlw	1	; case 1
 18716  0137C2  B4D8               	btfsc	status,2,c
 18717  0137C4  D7D3               	goto	i2l5911
 18718  0137C6  0A21               	xorlw	33	; case 32
 18719  0137C8  B4D8               	btfsc	status,2,c
 18720  0137CA  D7D6               	goto	i2l450
 18721  0137CC  0A01               	xorlw	1	; case 33
 18722  0137CE  B4D8               	btfsc	status,2,c
 18723  0137D0  D7E3               	goto	i2l5919
 18724  0137D2  0A03               	xorlw	3	; case 34
 18725  0137D4  A4D8               	btfss	status,2,c
 18726  0137D6  0012               	return	
 18727  0137D8  D7EA               	goto	i2l452
 18728  0137DA                     __end_of_USBCheckCDCRequest:
 18729                           	opt stack 0
 18730                           pclatu	equ	0xFFB
 18731                           pclath	equ	0xFFA
 18732                           tblptru	equ	0xFF8
 18733                           tblptrh	equ	0xFF7
 18734                           tblptrl	equ	0xFF6
 18735                           tablat	equ	0xFF5
 18736                           prodh	equ	0xFF4
 18737                           prodl	equ	0xFF3
 18738                           intcon	equ	0xFF2
 18739                           intcon2	equ	0xFF1
 18740                           indf0	equ	0xFEF
 18741                           postinc0	equ	0xFEE
 18742                           fsr0h	equ	0xFEA
 18743                           fsr0l	equ	0xFE9
 18744                           wreg	equ	0xFE8
 18745                           indf1	equ	0xFE7
 18746                           postinc1	equ	0xFE6
 18747                           postdec1	equ	0xFE5
 18748                           fsr1h	equ	0xFE2
 18749                           fsr1l	equ	0xFE1
 18750                           indf2	equ	0xFDF
 18751                           postinc2	equ	0xFDE
 18752                           postdec2	equ	0xFDD
 18753                           plusw2	equ	0xFDB
 18754                           fsr2h	equ	0xFDA
 18755                           fsr2l	equ	0xFD9
 18756                           status	equ	0xFD8
 18757                           
 18758 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 18759 ;; Defined at:
 18760 ;;		line 110 in file "../My_library/My_usb_cdc.c"
 18761 ;; Parameters:    Size  Location     Type
 18762 ;;		None
 18763 ;; Auto vars:     Size  Location     Type
 18764 ;;		None
 18765 ;; Return value:  Size  Location     Type
 18766 ;;		None               void
 18767 ;; Registers used:
 18768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18769 ;; Tracked objects:
 18770 ;;		On entry : 0/0
 18771 ;;		On exit  : 0/0
 18772 ;;		Unchanged: 0/0
 18773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18778 ;;Total ram usage:        0 bytes
 18779 ;; Hardware stack levels used:    1
 18780 ;; Hardware stack levels required when called:    3
 18781 ;; This function calls:
 18782 ;;		_CDCInitEP
 18783 ;; This function is called by:
 18784 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18785 ;; This function uses a non-reentrant model
 18786 ;;
 18787                           
 18788                           	psect	text80
 18789  0145D0                     __ptext80:
 18790                           	opt stack 0
 18791  0145D0                     _APP_DeviceCDCBasicDemoInitialize:
 18792                           	opt stack 14
 18793                           
 18794                           ;My_usb_cdc.c: 111: CDCInitEP();
 18795                           
 18796                           ; BSR set to: 13
 18797                           ;incstack = 0
 18798  0145D0  EC4E  F09F         	call	_CDCInitEP	;wreg free
 18799                           
 18800                           ;My_usb_cdc.c: 113: line_coding.bCharFormat = 0;
 18801  0145D4  0E00               	movlw	0
 18802  0145D6  0101               	movlb	1	; () banked
 18803  0145D8  6F78               	movwf	(_line_coding+4)& (0+255),b
 18804                           
 18805                           ; BSR set to: 1
 18806                           ;My_usb_cdc.c: 114: line_coding.bDataBits = 8;
 18807  0145DA  0E08               	movlw	8
 18808  0145DC  0101               	movlb	1	; () banked
 18809  0145DE  6F7A               	movwf	(_line_coding+6)& (0+255),b
 18810                           
 18811                           ; BSR set to: 1
 18812                           ;My_usb_cdc.c: 115: line_coding.bParityType = 0;
 18813  0145E0  0E00               	movlw	0
 18814  0145E2  0101               	movlb	1	; () banked
 18815  0145E4  6F79               	movwf	(_line_coding+5)& (0+255),b
 18816                           
 18817                           ; BSR set to: 1
 18818                           ;My_usb_cdc.c: 116: line_coding.dwDTERate = 115200;
 18819  0145E6  0E00               	movlw	0
 18820  0145E8  0101               	movlb	1	; () banked
 18821  0145EA  6F74               	movwf	_line_coding& (0+255),b
 18822  0145EC  0EC2               	movlw	194
 18823  0145EE  6F75               	movwf	(_line_coding+1)& (0+255),b
 18824  0145F0  0E01               	movlw	1
 18825  0145F2  6F76               	movwf	(_line_coding+2)& (0+255),b
 18826  0145F4  0E00               	movlw	0
 18827  0145F6  6F77               	movwf	(_line_coding+3)& (0+255),b
 18828                           
 18829                           ; BSR set to: 1
 18830  0145F8  0012               	return		;funcret
 18831  0145FA                     __end_of_APP_DeviceCDCBasicDemoInitialize:
 18832                           	opt stack 0
 18833                           pclatu	equ	0xFFB
 18834                           pclath	equ	0xFFA
 18835                           tblptru	equ	0xFF8
 18836                           tblptrh	equ	0xFF7
 18837                           tblptrl	equ	0xFF6
 18838                           tablat	equ	0xFF5
 18839                           prodh	equ	0xFF4
 18840                           prodl	equ	0xFF3
 18841                           intcon	equ	0xFF2
 18842                           intcon2	equ	0xFF1
 18843                           indf0	equ	0xFEF
 18844                           postinc0	equ	0xFEE
 18845                           fsr0h	equ	0xFEA
 18846                           fsr0l	equ	0xFE9
 18847                           wreg	equ	0xFE8
 18848                           indf1	equ	0xFE7
 18849                           postinc1	equ	0xFE6
 18850                           postdec1	equ	0xFE5
 18851                           fsr1h	equ	0xFE2
 18852                           fsr1l	equ	0xFE1
 18853                           indf2	equ	0xFDF
 18854                           postinc2	equ	0xFDE
 18855                           postdec2	equ	0xFDD
 18856                           plusw2	equ	0xFDB
 18857                           fsr2h	equ	0xFDA
 18858                           fsr2l	equ	0xFD9
 18859                           status	equ	0xFD8
 18860                           
 18861 ;; *************** function _CDCInitEP *****************
 18862 ;; Defined at:
 18863 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 18864 ;; Parameters:    Size  Location     Type
 18865 ;;		None
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;		None
 18868 ;; Return value:  Size  Location     Type
 18869 ;;		None               void
 18870 ;; Registers used:
 18871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18872 ;; Tracked objects:
 18873 ;;		On entry : 0/0
 18874 ;;		On exit  : 0/0
 18875 ;;		Unchanged: 0/0
 18876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18881 ;;Total ram usage:        0 bytes
 18882 ;; Hardware stack levels used:    1
 18883 ;; Hardware stack levels required when called:    2
 18884 ;; This function calls:
 18885 ;;		_USBEnableEndpoint
 18886 ;;		i2_USBTransferOnePacket
 18887 ;; This function is called by:
 18888 ;;		_APP_DeviceCDCBasicDemoInitialize
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           	psect	text81
 18893  013E9C                     __ptext81:
 18894                           	opt stack 0
 18895  013E9C                     _CDCInitEP:
 18896                           	opt stack 14
 18897                           
 18898                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18899                           
 18900                           ; BSR set to: 1
 18901                           ;incstack = 0
 18902  013E9C  0E00               	movlw	0
 18903  013E9E  0101               	movlb	1	; () banked
 18904  013EA0  6F74               	movwf	_line_coding& (0+255),b
 18905  013EA2  0E4B               	movlw	75
 18906  013EA4  6F75               	movwf	(_line_coding+1)& (0+255),b
 18907  013EA6  0E00               	movlw	0
 18908  013EA8  6F76               	movwf	(_line_coding+2)& (0+255),b
 18909  013EAA  0E00               	movlw	0
 18910  013EAC  6F77               	movwf	(_line_coding+3)& (0+255),b
 18911                           
 18912                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18913  013EAE  0E00               	movlw	0
 18914  013EB0  0101               	movlb	1	; () banked
 18915  013EB2  6F78               	movwf	(_line_coding+4)& (0+255),b
 18916                           
 18917                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18918  013EB4  0E00               	movlw	0
 18919  013EB6  0101               	movlb	1	; () banked
 18920  013EB8  6F79               	movwf	(_line_coding+5)& (0+255),b
 18921                           
 18922                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18923  013EBA  0E08               	movlw	8
 18924  013EBC  0101               	movlb	1	; () banked
 18925  013EBE  6F7A               	movwf	(_line_coding+6)& (0+255),b
 18926                           
 18927                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18928  013EC0  0E00               	movlw	0
 18929  013EC2  0100               	movlb	0	; () banked
 18930  013EC4  6FEB               	movwf	_cdc_rx_len& (0+255),b
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18934  013EC6  0E1A               	movlw	26
 18935  013EC8  6E36               	movwf	USBEnableEndpoint@options,c
 18936  013ECA  0E01               	movlw	1
 18937  013ECC  ECD7  F0A1         	call	_USBEnableEndpoint
 18938                           
 18939                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18940  013ED0  0E1E               	movlw	30
 18941  013ED2  6E36               	movwf	USBEnableEndpoint@options,c
 18942  013ED4  0E02               	movlw	2
 18943  013ED6  ECD7  F0A1         	call	_USBEnableEndpoint
 18944                           
 18945                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18946  013EDA  0E00               	movlw	0
 18947  013EDC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18948  013EDE  0E00               	movlw	low _cdc_data_rx
 18949  013EE0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18950  013EE2  0E02               	movlw	high _cdc_data_rx
 18951  013EE4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18952  013EE6  0E40               	movlw	64
 18953  013EE8  6E31               	movwf	i2USBTransferOnePacket@len,c
 18954  013EEA  0E02               	movlw	2
 18955  013EEC  ECDB  F09A         	call	i2_USBTransferOnePacket
 18956  013EF0  C02E  F0DF         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18957  013EF4  C02F  F0E0         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18958                           
 18959                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18960  013EF8  0E00               	movlw	0
 18961  013EFA  0100               	movlb	0	; () banked
 18962  013EFC  6FDD               	movwf	_CDCDataInHandle& (0+255),b
 18963  013EFE  0E00               	movlw	0
 18964  013F00  0100               	movlb	0	; () banked
 18965  013F02  6FDE               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18969  013F04  0E00               	movlw	0
 18970  013F06  6E28               	movwf	_cdc_trf_state,c
 18971                           
 18972                           ; BSR set to: 0
 18973  013F08  0012               	return		;funcret
 18974  013F0A                     __end_of_CDCInitEP:
 18975                           	opt stack 0
 18976                           pclatu	equ	0xFFB
 18977                           pclath	equ	0xFFA
 18978                           tblptru	equ	0xFF8
 18979                           tblptrh	equ	0xFF7
 18980                           tblptrl	equ	0xFF6
 18981                           tablat	equ	0xFF5
 18982                           prodh	equ	0xFF4
 18983                           prodl	equ	0xFF3
 18984                           intcon	equ	0xFF2
 18985                           intcon2	equ	0xFF1
 18986                           indf0	equ	0xFEF
 18987                           postinc0	equ	0xFEE
 18988                           fsr0h	equ	0xFEA
 18989                           fsr0l	equ	0xFE9
 18990                           wreg	equ	0xFE8
 18991                           indf1	equ	0xFE7
 18992                           postinc1	equ	0xFE6
 18993                           postdec1	equ	0xFE5
 18994                           fsr1h	equ	0xFE2
 18995                           fsr1l	equ	0xFE1
 18996                           indf2	equ	0xFDF
 18997                           postinc2	equ	0xFDE
 18998                           postdec2	equ	0xFDD
 18999                           plusw2	equ	0xFDB
 19000                           fsr2h	equ	0xFDA
 19001                           fsr2l	equ	0xFD9
 19002                           status	equ	0xFD8
 19003                           
 19004 ;; *************** function i2_USBTransferOnePacket *****************
 19005 ;; Defined at:
 19006 ;;		line 996 in file "../My_library/usb/usb_device.c"
 19007 ;; Parameters:    Size  Location     Type
 19008 ;;  ep              1    wreg     unsigned char 
 19009 ;;  dir             1    0[COMRAM] unsigned char 
 19010 ;;  data            2    1[COMRAM] PTR unsigned char 
 19011 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 19012 ;;  len             1    3[COMRAM] unsigned char 
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;  ep              1    4[COMRAM] unsigned char 
 19015 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 19016 ;;		 -> NULL(0), BDT(48), 
 19017 ;; Return value:  Size  Location     Type
 19018 ;;                  2    0[COMRAM] PTR void 
 19019 ;; Registers used:
 19020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19027 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19029 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;Total ram usage:        7 bytes
 19031 ;; Hardware stack levels used:    1
 19032 ;; This function calls:
 19033 ;;		Nothing
 19034 ;; This function is called by:
 19035 ;;		_CDCInitEP
 19036 ;; This function uses a non-reentrant model
 19037 ;;
 19038                           
 19039                           	psect	text82
 19040  0135B6                     __ptext82:
 19041                           	opt stack 0
 19042  0135B6                     i2_USBTransferOnePacket:
 19043                           	opt stack 15
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;incstack = 0
 19047                           ;i2USBTransferOnePacket@ep stored from wreg
 19048  0135B6  6E32               	movwf	i2USBTransferOnePacket@ep,c
 19049                           
 19050                           ;usb_device.c: 998: volatile BDT_ENTRY* handle;
 19051                           ;usb_device.c: 1001: if(dir != 0)
 19052  0135B8  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19053  0135BA  B4D8               	btfsc	status,2,c
 19054  0135BC  D007               	goto	i2l5815
 19055                           
 19056                           ;usb_device.c: 1002: {
 19057                           ;usb_device.c: 1004: handle = pBDTEntryIn[ep];
 19058  0135BE  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19059  0135C0  0D02               	mullw	2
 19060  0135C2  0E10               	movlw	low _pBDTEntryIn
 19061  0135C4  24F3               	addwf	prodl,w,c
 19062  0135C6  6ED9               	movwf	fsr2l,c
 19063  0135C8  0E00               	movlw	high _pBDTEntryIn
 19064  0135CA  D006               	goto	L12
 19065  0135CC                     i2l5815:
 19066                           
 19067                           ;usb_device.c: 1006: else
 19068                           ;usb_device.c: 1007: {
 19069                           ;usb_device.c: 1009: handle = pBDTEntryOut[ep];
 19070  0135CC  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19071  0135CE  0D02               	mullw	2
 19072  0135D0  0E0A               	movlw	low _pBDTEntryOut
 19073  0135D2  24F3               	addwf	prodl,w,c
 19074  0135D4  6ED9               	movwf	fsr2l,c
 19075  0135D6  0E01               	movlw	high _pBDTEntryOut
 19076  0135D8                     L12:
 19077  0135D8  20F4               	addwfc	prodh,w,c
 19078  0135DA  6EDA               	movwf	fsr2h,c
 19079  0135DC  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 19080  0135E0  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 19081                           
 19082                           ;usb_device.c: 1010: }
 19083                           ;usb_device.c: 1014: if(handle == 0)
 19084  0135E4  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19085  0135E6  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 19086  0135E8  A4D8               	btfss	status,2,c
 19087  0135EA  D005               	goto	i2l5823
 19088                           
 19089                           ;usb_device.c: 1015: {
 19090                           ;usb_device.c: 1016: return 0;
 19091  0135EC  0E00               	movlw	0
 19092  0135EE  6E2E               	movwf	?i2_USBTransferOnePacket,c
 19093  0135F0  0E00               	movlw	0
 19094  0135F2  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 19095  0135F4  0012               	return	
 19096  0135F6                     i2l5823:
 19097                           
 19098                           ;usb_device.c: 1017: }
 19099                           ;usb_device.c: 1030: handle->ADR = ((uint16_t)(data));
 19100  0135F6  EE20 F002          	lfsr	2,2
 19101  0135FA  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19102  0135FC  26D9               	addwf	fsr2l,f,c
 19103  0135FE  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 19104  013600  22DA               	addwfc	fsr2h,f,c
 19105  013602  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 19106  013606  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 19107                           
 19108                           ;usb_device.c: 1031: handle->CNT = len;
 19109  01360A  EE20 F001          	lfsr	2,1
 19110  01360E  5033               	movf	i2USBTransferOnePacket@handle,w,c
 19111  013610  26D9               	addwf	fsr2l,f,c
 19112  013612  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 19113  013614  22DA               	addwfc	fsr2h,f,c
 19114  013616  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 19115                           
 19116                           ;usb_device.c: 1032: handle->STAT.Val &= 0x40;
 19117  01361A  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19118  01361E  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19119  013622  0E40               	movlw	64
 19120  013624  16DF               	andwf	indf2,f,c
 19121                           
 19122                           ;usb_device.c: 1033: handle->STAT.Val |= (0x08 & 0x08);
 19123  013626  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19124  01362A  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19125  01362E  0E00               	movlw	0
 19126  013630  86DB               	bsf	plusw2,3,c
 19127                           
 19128                           ;usb_device.c: 1034: handle->STAT.Val |= 0x80;
 19129  013632  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 19130  013636  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 19131  01363A  0E00               	movlw	0
 19132  01363C  8EDB               	bsf	plusw2,7,c
 19133                           
 19134                           ;usb_device.c: 1037: if(dir != 0)
 19135  01363E  502E               	movf	i2USBTransferOnePacket@dir,w,c
 19136  013640  B4D8               	btfsc	status,2,c
 19137  013642  D007               	goto	i2l5835
 19138                           
 19139                           ;usb_device.c: 1038: {
 19140                           ;usb_device.c: 1040: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 19141  013644  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19142  013646  0D02               	mullw	2
 19143  013648  0E10               	movlw	low _pBDTEntryIn
 19144  01364A  24F3               	addwf	prodl,w,c
 19145  01364C  6ED9               	movwf	fsr2l,c
 19146  01364E  0E00               	movlw	high _pBDTEntryIn
 19147  013650  D006               	goto	L13
 19148  013652                     i2l5835:
 19149                           
 19150                           ;usb_device.c: 1042: else
 19151                           ;usb_device.c: 1043: {
 19152                           ;usb_device.c: 1045: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 19153  013652  5032               	movf	i2USBTransferOnePacket@ep,w,c
 19154  013654  0D02               	mullw	2
 19155  013656  0E0A               	movlw	low _pBDTEntryOut
 19156  013658  24F3               	addwf	prodl,w,c
 19157  01365A  6ED9               	movwf	fsr2l,c
 19158  01365C  0E01               	movlw	high _pBDTEntryOut
 19159  01365E                     L13:
 19160  01365E  20F4               	addwfc	prodh,w,c
 19161  013660  6EDA               	movwf	fsr2h,c
 19162  013662  0E04               	movlw	4
 19163  013664  1ADF               	xorwf	indf2,f,c
 19164                           
 19165                           ;usb_device.c: 1046: }
 19166                           ;usb_device.c: 1047: return (void*)handle;
 19167  013666  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 19168  01366A  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 19169  01366E  0012               	return	
 19170  013670                     __end_ofi2_USBTransferOnePacket:
 19171                           	opt stack 0
 19172                           pclatu	equ	0xFFB
 19173                           pclath	equ	0xFFA
 19174                           tblptru	equ	0xFF8
 19175                           tblptrh	equ	0xFF7
 19176                           tblptrl	equ	0xFF6
 19177                           tablat	equ	0xFF5
 19178                           prodh	equ	0xFF4
 19179                           prodl	equ	0xFF3
 19180                           intcon	equ	0xFF2
 19181                           intcon2	equ	0xFF1
 19182                           indf0	equ	0xFEF
 19183                           postinc0	equ	0xFEE
 19184                           fsr0h	equ	0xFEA
 19185                           fsr0l	equ	0xFE9
 19186                           wreg	equ	0xFE8
 19187                           indf1	equ	0xFE7
 19188                           postinc1	equ	0xFE6
 19189                           postdec1	equ	0xFE5
 19190                           fsr1h	equ	0xFE2
 19191                           fsr1l	equ	0xFE1
 19192                           indf2	equ	0xFDF
 19193                           postinc2	equ	0xFDE
 19194                           postdec2	equ	0xFDD
 19195                           plusw2	equ	0xFDB
 19196                           fsr2h	equ	0xFDA
 19197                           fsr2l	equ	0xFD9
 19198                           status	equ	0xFD8
 19199                           
 19200 ;; *************** function _USBEnableEndpoint *****************
 19201 ;; Defined at:
 19202 ;;		line 879 in file "../My_library/usb/usb_device.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;  ep              1    wreg     unsigned char 
 19205 ;;  options         1    8[COMRAM] unsigned char 
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;  ep              1   11[COMRAM] unsigned char 
 19208 ;;  p               2    9[COMRAM] PTR unsigned char 
 19209 ;;		 -> UEP0(1), 
 19210 ;; Return value:  Size  Location     Type
 19211 ;;		None               void
 19212 ;; Registers used:
 19213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19214 ;; Tracked objects:
 19215 ;;		On entry : 0/0
 19216 ;;		On exit  : 0/0
 19217 ;;		Unchanged: 0/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19220 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19223 ;;Total ram usage:        4 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; Hardware stack levels required when called:    1
 19226 ;; This function calls:
 19227 ;;		_USBConfigureEndpoint
 19228 ;; This function is called by:
 19229 ;;		_CDCInitEP
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text83
 19234  0143AE                     __ptext83:
 19235                           	opt stack 0
 19236  0143AE                     _USBEnableEndpoint:
 19237                           	opt stack 14
 19238                           
 19239                           ;incstack = 0
 19240                           ;USBEnableEndpoint@ep stored from wreg
 19241  0143AE  6E39               	movwf	USBEnableEndpoint@ep,c
 19242                           
 19243                           ;usb_device.c: 881: unsigned char* p;
 19244                           ;usb_device.c: 885: if(options & 0x04)
 19245  0143B0  A436               	btfss	USBEnableEndpoint@options,2,c
 19246  0143B2  D005               	goto	i2l5803
 19247                           
 19248                           ;usb_device.c: 886: {
 19249                           ;usb_device.c: 887: USBConfigureEndpoint(ep, 0);
 19250  0143B4  0E00               	movlw	0
 19251  0143B6  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19252  0143B8  5039               	movf	USBEnableEndpoint@ep,w,c
 19253  0143BA  EC7E  F09D         	call	_USBConfigureEndpoint
 19254  0143BE                     i2l5803:
 19255                           
 19256                           ;usb_device.c: 888: }
 19257                           ;usb_device.c: 889: if(options & 0x02)
 19258  0143BE  A236               	btfss	USBEnableEndpoint@options,1,c
 19259  0143C0  D005               	goto	i2l5807
 19260                           
 19261                           ;usb_device.c: 890: {
 19262                           ;usb_device.c: 891: USBConfigureEndpoint(ep, 1);
 19263  0143C2  0E01               	movlw	1
 19264  0143C4  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19265  0143C6  5039               	movf	USBEnableEndpoint@ep,w,c
 19266  0143C8  EC7E  F09D         	call	_USBConfigureEndpoint
 19267  0143CC                     i2l5807:
 19268                           
 19269                           ;usb_device.c: 892: }
 19270                           ;usb_device.c: 900: p = (unsigned char*)(&UEP0+ep);
 19271  0143CC  5039               	movf	USBEnableEndpoint@ep,w,c
 19272  0143CE  0D01               	mullw	1
 19273  0143D0  0E26               	movlw	38
 19274  0143D2  24F3               	addwf	prodl,w,c
 19275  0143D4  6E37               	movwf	USBEnableEndpoint@p,c
 19276  0143D6  0E0F               	movlw	15
 19277  0143D8  20F4               	addwfc	prodh,w,c
 19278  0143DA  6E38               	movwf	USBEnableEndpoint@p+1,c
 19279                           
 19280                           ;usb_device.c: 902: *p = options;
 19281  0143DC  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19282  0143E0  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19283  0143E4  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19284  0143E8  0012               	return		;funcret
 19285  0143EA                     __end_of_USBEnableEndpoint:
 19286                           	opt stack 0
 19287                           pclatu	equ	0xFFB
 19288                           pclath	equ	0xFFA
 19289                           tblptru	equ	0xFF8
 19290                           tblptrh	equ	0xFF7
 19291                           tblptrl	equ	0xFF6
 19292                           tablat	equ	0xFF5
 19293                           prodh	equ	0xFF4
 19294                           prodl	equ	0xFF3
 19295                           intcon	equ	0xFF2
 19296                           intcon2	equ	0xFF1
 19297                           indf0	equ	0xFEF
 19298                           postinc0	equ	0xFEE
 19299                           fsr0h	equ	0xFEA
 19300                           fsr0l	equ	0xFE9
 19301                           wreg	equ	0xFE8
 19302                           indf1	equ	0xFE7
 19303                           postinc1	equ	0xFE6
 19304                           postdec1	equ	0xFE5
 19305                           fsr1h	equ	0xFE2
 19306                           fsr1l	equ	0xFE1
 19307                           indf2	equ	0xFDF
 19308                           postinc2	equ	0xFDE
 19309                           postdec2	equ	0xFDD
 19310                           plusw2	equ	0xFDB
 19311                           fsr2h	equ	0xFDA
 19312                           fsr2l	equ	0xFD9
 19313                           status	equ	0xFD8
 19314                           
 19315 ;; *************** function _USBConfigureEndpoint *****************
 19316 ;; Defined at:
 19317 ;;		line 1544 in file "../My_library/usb/usb_device.c"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;  EPNum           1    wreg     unsigned char 
 19320 ;;  direction       1    0[COMRAM] unsigned char 
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;  EPNum           1    5[COMRAM] unsigned char 
 19323 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19324 ;;		 -> BDT(48), 
 19325 ;; Return value:  Size  Location     Type
 19326 ;;		None               void
 19327 ;; Registers used:
 19328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19329 ;; Tracked objects:
 19330 ;;		On entry : 0/0
 19331 ;;		On exit  : 0/0
 19332 ;;		Unchanged: 0/0
 19333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19335 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19337 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19338 ;;Total ram usage:        8 bytes
 19339 ;; Hardware stack levels used:    1
 19340 ;; This function calls:
 19341 ;;		Nothing
 19342 ;; This function is called by:
 19343 ;;		_USBEnableEndpoint
 19344 ;; This function uses a non-reentrant model
 19345 ;;
 19346                           
 19347                           	psect	text84
 19348  013AFC                     __ptext84:
 19349                           	opt stack 0
 19350  013AFC                     _USBConfigureEndpoint:
 19351                           	opt stack 14
 19352                           
 19353                           ;incstack = 0
 19354                           ;USBConfigureEndpoint@EPNum stored from wreg
 19355  013AFC  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19356                           
 19357                           ;usb_device.c: 1546: volatile BDT_ENTRY* handle;
 19358                           ;usb_device.c: 1550: handle = (volatile BDT_ENTRY*)&BDT[0];
 19359  013AFE  0E00               	movlw	0
 19360  013B00  6E34               	movwf	USBConfigureEndpoint@handle,c
 19361  013B02  0E0D               	movlw	13
 19362  013B04  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19363                           
 19364                           ;usb_device.c: 1551: handle += (4*EPNum+2*direction+0u);
 19365  013B06  502E               	movf	USBConfigureEndpoint@direction,w,c
 19366  013B08  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19367  013B0A  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19368  013B0C  90D8               	bcf	status,0,c
 19369  013B0E  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19370  013B10  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19371  013B12  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19372  013B14  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19373  013B16  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19374  013B18  90D8               	bcf	status,0,c
 19375  013B1A  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19376  013B1C  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19377  013B1E  90D8               	bcf	status,0,c
 19378  013B20  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19379  013B22  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19380  013B24  502F               	movf	??_USBConfigureEndpoint,w,c
 19381  013B26  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19382  013B28  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19383  013B2A  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19384  013B2C  90D8               	bcf	status,0,c
 19385  013B2E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19386  013B30  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19387  013B32  90D8               	bcf	status,0,c
 19388  013B34  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19389  013B36  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19390  013B38  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19391  013B3A  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19392  013B3C  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19393  013B3E  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19394                           
 19395                           ;usb_device.c: 1553: handle->STAT.UOWN = 0;
 19396  013B40  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19397  013B44  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19398  013B48  9EDF               	bcf	indf2,7,c
 19399                           
 19400                           ;usb_device.c: 1558: if(direction == 0)
 19401  013B4A  502E               	movf	USBConfigureEndpoint@direction,w,c
 19402  013B4C  A4D8               	btfss	status,2,c
 19403  013B4E  D007               	goto	i2l5793
 19404                           
 19405                           ;usb_device.c: 1559: {
 19406                           ;usb_device.c: 1560: pBDTEntryOut[EPNum] = handle;
 19407  013B50  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19408  013B52  0D02               	mullw	2
 19409  013B54  0E0A               	movlw	low _pBDTEntryOut
 19410  013B56  24F3               	addwf	prodl,w,c
 19411  013B58  6ED9               	movwf	fsr2l,c
 19412  013B5A  0E01               	movlw	high _pBDTEntryOut
 19413  013B5C  D006               	goto	L14
 19414  013B5E                     i2l5793:
 19415                           
 19416                           ;usb_device.c: 1562: else
 19417                           ;usb_device.c: 1563: {
 19418                           ;usb_device.c: 1564: pBDTEntryIn[EPNum] = handle;
 19419  013B5E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19420  013B60  0D02               	mullw	2
 19421  013B62  0E10               	movlw	low _pBDTEntryIn
 19422  013B64  24F3               	addwf	prodl,w,c
 19423  013B66  6ED9               	movwf	fsr2l,c
 19424  013B68  0E00               	movlw	high _pBDTEntryIn
 19425  013B6A                     L14:
 19426  013B6A  20F4               	addwfc	prodh,w,c
 19427  013B6C  6EDA               	movwf	fsr2h,c
 19428  013B6E  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19429  013B72  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19430                           
 19431                           ;usb_device.c: 1565: }
 19432                           ;usb_device.c: 1568: handle->STAT.DTS = 0;
 19433  013B76  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19434  013B7A  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19435  013B7E  9CDF               	bcf	indf2,6,c
 19436                           
 19437                           ;usb_device.c: 1569: (handle+1)->STAT.DTS = 1;
 19438  013B80  EE20 F004          	lfsr	2,4
 19439  013B84  5034               	movf	USBConfigureEndpoint@handle,w,c
 19440  013B86  26D9               	addwf	fsr2l,f,c
 19441  013B88  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19442  013B8A  22DA               	addwfc	fsr2h,f,c
 19443  013B8C  8CDF               	bsf	indf2,6,c
 19444  013B8E  0012               	return		;funcret
 19445  013B90                     __end_of_USBConfigureEndpoint:
 19446                           	opt stack 0
 19447                           pclatu	equ	0xFFB
 19448                           pclath	equ	0xFFA
 19449                           tblptru	equ	0xFF8
 19450                           tblptrh	equ	0xFF7
 19451                           tblptrl	equ	0xFF6
 19452                           tablat	equ	0xFF5
 19453                           prodh	equ	0xFF4
 19454                           prodl	equ	0xFF3
 19455                           intcon	equ	0xFF2
 19456                           intcon2	equ	0xFF1
 19457                           indf0	equ	0xFEF
 19458                           postinc0	equ	0xFEE
 19459                           fsr0h	equ	0xFEA
 19460                           fsr0l	equ	0xFE9
 19461                           wreg	equ	0xFE8
 19462                           indf1	equ	0xFE7
 19463                           postinc1	equ	0xFE6
 19464                           postdec1	equ	0xFE5
 19465                           fsr1h	equ	0xFE2
 19466                           fsr1l	equ	0xFE1
 19467                           indf2	equ	0xFDF
 19468                           postinc2	equ	0xFDE
 19469                           postdec2	equ	0xFDD
 19470                           plusw2	equ	0xFDB
 19471                           fsr2h	equ	0xFDA
 19472                           fsr2l	equ	0xFD9
 19473                           status	equ	0xFD8
 19474                           
 19475 ;; *************** function _USBCtrlTrfOutHandler *****************
 19476 ;; Defined at:
 19477 ;;		line 2542 in file "../My_library/usb/usb_device.c"
 19478 ;; Parameters:    Size  Location     Type
 19479 ;;		None
 19480 ;; Auto vars:     Size  Location     Type
 19481 ;;		None
 19482 ;; Return value:  Size  Location     Type
 19483 ;;		None               void
 19484 ;; Registers used:
 19485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19486 ;; Tracked objects:
 19487 ;;		On entry : 0/0
 19488 ;;		On exit  : 0/0
 19489 ;;		Unchanged: 0/0
 19490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19495 ;;Total ram usage:        0 bytes
 19496 ;; Hardware stack levels used:    1
 19497 ;; Hardware stack levels required when called:    2
 19498 ;; This function calls:
 19499 ;;		_USBCtrlTrfRxService
 19500 ;; This function is called by:
 19501 ;;		_USBCtrlEPService
 19502 ;; This function uses a non-reentrant model
 19503 ;;
 19504                           
 19505                           	psect	text85
 19506  014154                     __ptext85:
 19507                           	opt stack 0
 19508  014154                     _USBCtrlTrfOutHandler:
 19509                           	opt stack 15
 19510                           
 19511                           ;usb_device.c: 2544: if(controlTransferState == 2)
 19512                           
 19513                           ;incstack = 0
 19514  014154  0E02               	movlw	2
 19515  014156  1829               	xorwf	_controlTransferState,w,c	;volatile
 19516  014158  A4D8               	btfss	status,2,c
 19517  01415A  D003               	goto	i2l6915
 19518                           
 19519                           ;usb_device.c: 2545: {
 19520                           ;usb_device.c: 2546: USBCtrlTrfRxService();
 19521  01415C  ECF8  F091         	call	_USBCtrlTrfRxService	;wreg free
 19522                           
 19523                           ;usb_device.c: 2547: }
 19524  014160  0012               	return	
 19525  014162                     i2l6915:
 19526                           
 19527                           ;usb_device.c: 2548: else
 19528                           ;usb_device.c: 2549: {
 19529                           ;usb_device.c: 2552: controlTransferState = 0;
 19530  014162  0E00               	movlw	0
 19531  014164  6E29               	movwf	_controlTransferState,c	;volatile
 19532                           
 19533                           ;usb_device.c: 2559: if(BothEP0OutUOWNsSet == 0)
 19534  014166  501E               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 19535  014168  A4D8               	btfss	status,2,c
 19536  01416A  D01F               	goto	i2l6923
 19537                           
 19538                           ;usb_device.c: 2560: {
 19539                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->CNT = 8;
 19540  01416C  EE20 F001          	lfsr	2,1
 19541  014170  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19542  014172  26D9               	addwf	fsr2l,f,c
 19543  014174  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19544  014176  22DA               	addwfc	fsr2h,f,c
 19545  014178  0E08               	movlw	8
 19546  01417A  6EDF               	movwf	indf2,c
 19547                           
 19548                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19549  01417C  EE20 F002          	lfsr	2,2
 19550  014180  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19551  014182  26D9               	addwf	fsr2l,f,c
 19552  014184  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19553  014186  22DA               	addwfc	fsr2h,f,c
 19554  014188  0E30               	movlw	48
 19555  01418A  6EDE               	movwf	postinc2,c
 19556  01418C  0E0D               	movlw	13
 19557  01418E  6EDD               	movwf	postdec2,c
 19558                           
 19559                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19560  014190  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19561  014194  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19562  014198  0E0C               	movlw	12
 19563  01419A  6EDF               	movwf	indf2,c
 19564                           
 19565                           ;usb_device.c: 2564: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19566  01419C  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19567  0141A0  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19568  0141A4  0E00               	movlw	0
 19569  0141A6  8EDB               	bsf	plusw2,7,c
 19570                           
 19571                           ;usb_device.c: 2565: }
 19572  0141A8  0012               	return	
 19573  0141AA                     i2l6923:
 19574                           
 19575                           ;usb_device.c: 2566: else
 19576                           ;usb_device.c: 2567: {
 19577                           ;usb_device.c: 2568: BothEP0OutUOWNsSet = 0;
 19578  0141AA  0E00               	movlw	0
 19579  0141AC  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19580  0141AE  0012               	return	
 19581  0141B0                     __end_of_USBCtrlTrfOutHandler:
 19582                           	opt stack 0
 19583                           pclatu	equ	0xFFB
 19584                           pclath	equ	0xFFA
 19585                           tblptru	equ	0xFF8
 19586                           tblptrh	equ	0xFF7
 19587                           tblptrl	equ	0xFF6
 19588                           tablat	equ	0xFF5
 19589                           prodh	equ	0xFF4
 19590                           prodl	equ	0xFF3
 19591                           intcon	equ	0xFF2
 19592                           intcon2	equ	0xFF1
 19593                           indf0	equ	0xFEF
 19594                           postinc0	equ	0xFEE
 19595                           fsr0h	equ	0xFEA
 19596                           fsr0l	equ	0xFE9
 19597                           wreg	equ	0xFE8
 19598                           indf1	equ	0xFE7
 19599                           postinc1	equ	0xFE6
 19600                           postdec1	equ	0xFE5
 19601                           fsr1h	equ	0xFE2
 19602                           fsr1l	equ	0xFE1
 19603                           indf2	equ	0xFDF
 19604                           postinc2	equ	0xFDE
 19605                           postdec2	equ	0xFDD
 19606                           plusw2	equ	0xFDB
 19607                           fsr2h	equ	0xFDA
 19608                           fsr2l	equ	0xFD9
 19609                           status	equ	0xFD8
 19610                           
 19611 ;; *************** function _USBCtrlTrfRxService *****************
 19612 ;; Defined at:
 19613 ;;		line 1853 in file "../My_library/usb/usb_device.c"
 19614 ;; Parameters:    Size  Location     Type
 19615 ;;		None
 19616 ;; Auto vars:     Size  Location     Type
 19617 ;;  byteToRead      1    1[COMRAM] unsigned char 
 19618 ;;  i               1    0[COMRAM] unsigned char 
 19619 ;; Return value:  Size  Location     Type
 19620 ;;		None               void
 19621 ;; Registers used:
 19622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19623 ;; Tracked objects:
 19624 ;;		On entry : 0/0
 19625 ;;		On exit  : 0/0
 19626 ;;		Unchanged: 0/0
 19627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19632 ;;Total ram usage:        2 bytes
 19633 ;; Hardware stack levels used:    1
 19634 ;; Hardware stack levels required when called:    1
 19635 ;; This function calls:
 19636 ;;		_USBCtrlEPAllowStatusStage
 19637 ;; This function is called by:
 19638 ;;		_USBCtrlTrfOutHandler
 19639 ;; This function uses a non-reentrant model
 19640 ;;
 19641                           
 19642                           	psect	text86
 19643  0123F0                     __ptext86:
 19644                           	opt stack 0
 19645  0123F0                     _USBCtrlTrfRxService:
 19646                           	opt stack 15
 19647                           
 19648                           ;usb_device.c: 1855: uint8_t byteToRead;
 19649                           ;usb_device.c: 1856: uint8_t i;
 19650                           ;usb_device.c: 1860: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19651                           
 19652                           ;incstack = 0
 19653  0123F0  EE20 F001          	lfsr	2,1
 19654  0123F4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19655  0123F6  26D9               	addwf	fsr2l,f,c
 19656  0123F8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19657  0123FA  22DA               	addwfc	fsr2h,f,c
 19658  0123FC  50DF               	movf	indf2,w,c
 19659  0123FE  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19660                           
 19661                           ;usb_device.c: 1866: if(byteToRead > outPipes[0].wCount.Val)
 19662  012400  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19663  012402  5C05               	subwf	_outPipes+4,w,c	;volatile
 19664  012404  0E00               	movlw	0
 19665  012406  5806               	subwfb	_outPipes+5,w,c	;volatile
 19666  012408  A0D8               	btfss	status,0,c
 19667                           
 19668                           ;usb_device.c: 1867: {
 19669                           ;usb_device.c: 1868: byteToRead = outPipes[0].wCount.Val;
 19670  01240A  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19671                           
 19672                           ;usb_device.c: 1869: }
 19673                           ;usb_device.c: 1871: outPipes[0].wCount.Val -= byteToRead;
 19674  01240E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19675  012410  5E05               	subwf	_outPipes+4,f,c	;volatile
 19676  012412  0E00               	movlw	0
 19677  012414  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19678                           
 19679                           ;usb_device.c: 1875: for(i=0;i<byteToRead;i++)
 19680  012416  0E00               	movlw	0
 19681  012418  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19682  01241A  D011               	goto	i2l6771
 19683  01241C                     i2l6765:
 19684                           
 19685                           ;usb_device.c: 1876: {
 19686                           ;usb_device.c: 1877: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19687  01241C  502E               	movf	USBCtrlTrfRxService@i,w,c
 19688  01241E  0D01               	mullw	1
 19689  012420  0E38               	movlw	56
 19690  012422  24F3               	addwf	prodl,w,c
 19691  012424  6ED9               	movwf	fsr2l,c
 19692  012426  0E0D               	movlw	13
 19693  012428  20F4               	addwfc	prodh,w,c
 19694  01242A  6EDA               	movwf	fsr2h,c
 19695  01242C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19696  012430  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19697  012434  CFDF FFE7          	movff	indf2,indf1
 19698  012438  4A01               	infsnz	_outPipes,f,c	;volatile
 19699  01243A  2A02               	incf	_outPipes+1,f,c	;volatile
 19700  01243C  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19701  01243E                     i2l6771:
 19702  01243E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19703  012440  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19704  012442  A0D8               	btfss	status,0,c
 19705  012444  D7EB               	goto	i2l6765
 19706                           
 19707                           ;usb_device.c: 1878: }
 19708                           ;usb_device.c: 1882: if(outPipes[0].wCount.Val > 0)
 19709  012446  5005               	movf	_outPipes+4,w,c	;volatile
 19710  012448  1006               	iorwf	_outPipes+5,w,c	;volatile
 19711  01244A  B4D8               	btfsc	status,2,c
 19712  01244C  D032               	goto	i2l6787
 19713                           
 19714                           ;usb_device.c: 1883: {
 19715                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->CNT = 8;
 19716  01244E  EE20 F001          	lfsr	2,1
 19717  012452  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19718  012454  26D9               	addwf	fsr2l,f,c
 19719  012456  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19720  012458  22DA               	addwfc	fsr2h,f,c
 19721  01245A  0E08               	movlw	8
 19722  01245C  6EDF               	movwf	indf2,c
 19723                           
 19724                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19725  01245E  EE20 F002          	lfsr	2,2
 19726  012462  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19727  012464  26D9               	addwf	fsr2l,f,c
 19728  012466  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19729  012468  22DA               	addwfc	fsr2h,f,c
 19730  01246A  0E38               	movlw	56
 19731  01246C  6EDE               	movwf	postinc2,c
 19732  01246E  0E0D               	movlw	13
 19733  012470  6EDD               	movwf	postdec2,c
 19734                           
 19735                           ;usb_device.c: 1886: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19736  012472  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19737  012476  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19738  01247A  BCDF               	btfsc	indf2,6,c
 19739  01247C  D00D               	goto	i2l6783
 19740                           
 19741                           ;usb_device.c: 1887: {
 19742                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19743  01247E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19744  012482  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19745  012486  0E48               	movlw	72
 19746  012488  6EDF               	movwf	indf2,c
 19747                           
 19748                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19749  01248A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19750  01248E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19751  012492  0E00               	movlw	0
 19752  012494  8EDB               	bsf	plusw2,7,c
 19753                           
 19754                           ;usb_device.c: 1890: }
 19755  012496  0012               	return	
 19756  012498                     i2l6783:
 19757                           
 19758                           ;usb_device.c: 1891: else
 19759                           ;usb_device.c: 1892: {
 19760                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19761  012498  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19762  01249C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19763  0124A0  0E08               	movlw	8
 19764  0124A2  6EDF               	movwf	indf2,c
 19765                           
 19766                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19767  0124A4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19768  0124A8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19769  0124AC  0E00               	movlw	0
 19770  0124AE  8EDB               	bsf	plusw2,7,c
 19771                           
 19772                           ;usb_device.c: 1895: }
 19773                           ;usb_device.c: 1896: }
 19774  0124B0  0012               	return	
 19775  0124B2                     i2l6787:
 19776                           
 19777                           ;usb_device.c: 1897: else
 19778                           ;usb_device.c: 1898: {
 19779                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->CNT = 8;
 19780  0124B2  EE20 F001          	lfsr	2,1
 19781  0124B6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19782  0124B8  26D9               	addwf	fsr2l,f,c
 19783  0124BA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19784  0124BC  22DA               	addwfc	fsr2h,f,c
 19785  0124BE  0E08               	movlw	8
 19786  0124C0  6EDF               	movwf	indf2,c
 19787                           
 19788                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19789  0124C2  EE20 F002          	lfsr	2,2
 19790  0124C6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19791  0124C8  26D9               	addwf	fsr2l,f,c
 19792  0124CA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19793  0124CC  22DA               	addwfc	fsr2h,f,c
 19794  0124CE  0E30               	movlw	48
 19795  0124D0  6EDE               	movwf	postinc2,c
 19796  0124D2  0E0D               	movlw	13
 19797  0124D4  6EDD               	movwf	postdec2,c
 19798                           
 19799                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19800  0124D6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19801  0124DA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19802  0124DE  0E04               	movlw	4
 19803  0124E0  6EDF               	movwf	indf2,c
 19804                           
 19805                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19806  0124E2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19807  0124E6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19808  0124EA  0E00               	movlw	0
 19809  0124EC  8EDB               	bsf	plusw2,7,c
 19810                           
 19811                           ;usb_device.c: 1927: }
 19812                           ;usb_device.c: 1928: outPipes[0].info.bits.busy = 0;
 19813                           
 19814                           ;usb_device.c: 1916: {
 19815                           ;usb_device.c: 1922: outPipes[0].pFunc();
 19816  0124EE  9E04               	bcf	_outPipes+3,7,c	;volatile
 19817                           
 19818                           ;usb_device.c: 1942: if(USBDeferStatusStagePacket == 0)
 19819  0124F0  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19820  0124F2  A4D8               	btfss	status,2,c
 19821  0124F4  0012               	return	
 19822                           
 19823                           ;usb_device.c: 1943: {
 19824                           ;usb_device.c: 1944: USBCtrlEPAllowStatusStage();
 19825  0124F6  EC01  F099         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19826  0124FA  0012               	return	
 19827  0124FC                     __end_of_USBCtrlTrfRxService:
 19828                           	opt stack 0
 19829                           pclatu	equ	0xFFB
 19830                           pclath	equ	0xFFA
 19831                           tblptru	equ	0xFF8
 19832                           tblptrh	equ	0xFF7
 19833                           tblptrl	equ	0xFF6
 19834                           tablat	equ	0xFF5
 19835                           prodh	equ	0xFF4
 19836                           prodl	equ	0xFF3
 19837                           intcon	equ	0xFF2
 19838                           intcon2	equ	0xFF1
 19839                           indf0	equ	0xFEF
 19840                           postinc0	equ	0xFEE
 19841                           fsr0h	equ	0xFEA
 19842                           fsr0l	equ	0xFE9
 19843                           wreg	equ	0xFE8
 19844                           indf1	equ	0xFE7
 19845                           postinc1	equ	0xFE6
 19846                           postdec1	equ	0xFE5
 19847                           fsr1h	equ	0xFE2
 19848                           fsr1l	equ	0xFE1
 19849                           indf2	equ	0xFDF
 19850                           postinc2	equ	0xFDE
 19851                           postdec2	equ	0xFDD
 19852                           plusw2	equ	0xFDB
 19853                           fsr2h	equ	0xFDA
 19854                           fsr2l	equ	0xFD9
 19855                           status	equ	0xFD8
 19856                           
 19857 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19858 ;; Defined at:
 19859 ;;		line 1417 in file "../My_library/usb/usb_device.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;		None
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;		None
 19864 ;; Return value:  Size  Location     Type
 19865 ;;		None               void
 19866 ;; Registers used:
 19867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/0
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19877 ;;Total ram usage:        0 bytes
 19878 ;; Hardware stack levels used:    1
 19879 ;; This function calls:
 19880 ;;		Nothing
 19881 ;; This function is called by:
 19882 ;;		_USBDeviceTasks
 19883 ;;		_USBCtrlEPServiceComplete
 19884 ;;		_USBCtrlTrfRxService
 19885 ;; This function uses a non-reentrant model
 19886 ;;
 19887                           
 19888                           	psect	text87
 19889  013202                     __ptext87:
 19890                           	opt stack 0
 19891  013202                     _USBCtrlEPAllowStatusStage:
 19892                           	opt stack 15
 19893                           
 19894                           ;usb_device.c: 1424: if(USBStatusStageEnabledFlag1 == 0)
 19895                           
 19896                           ;incstack = 0
 19897  013202  5025               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19898  013204  A4D8               	btfss	status,2,c
 19899  013206  0012               	return	
 19900                           
 19901                           ;usb_device.c: 1425: {
 19902                           ;usb_device.c: 1426: USBStatusStageEnabledFlag1 = 1;
 19903  013208  0E01               	movlw	1
 19904  01320A  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19905                           
 19906                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag2 == 0)
 19907  01320C  5026               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19908  01320E  A4D8               	btfss	status,2,c
 19909  013210  0012               	return	
 19910                           
 19911                           ;usb_device.c: 1428: {
 19912                           ;usb_device.c: 1429: USBStatusStageEnabledFlag2 = 1;
 19913  013212  0E01               	movlw	1
 19914  013214  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19915                           
 19916                           ;usb_device.c: 1433: if(controlTransferState == 2)
 19917  013216  0E02               	movlw	2
 19918  013218  1829               	xorwf	_controlTransferState,w,c	;volatile
 19919  01321A  A4D8               	btfss	status,2,c
 19920  01321C  D015               	goto	i2l6241
 19921                           
 19922                           ;usb_device.c: 1434: {
 19923                           ;usb_device.c: 1435: pBDTEntryIn[0]->CNT = 0;
 19924  01321E  EE20 F001          	lfsr	2,1
 19925  013222  5010               	movf	_pBDTEntryIn,w,c
 19926  013224  26D9               	addwf	fsr2l,f,c
 19927  013226  5011               	movf	_pBDTEntryIn+1,w,c
 19928  013228  22DA               	addwfc	fsr2h,f,c
 19929  01322A  0E00               	movlw	0
 19930  01322C  6EDF               	movwf	indf2,c
 19931                           
 19932                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19933  01322E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19934  013232  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19935  013236  0E48               	movlw	72
 19936  013238  6EDF               	movwf	indf2,c
 19937                           
 19938                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19939  01323A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19940  01323E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19941  013242  0E00               	movlw	0
 19942  013244  8EDB               	bsf	plusw2,7,c
 19943                           
 19944                           ;usb_device.c: 1438: }
 19945  013246  0012               	return	
 19946  013248                     i2l6241:
 19947                           
 19948                           ;usb_device.c: 1439: else if(controlTransferState == 1)
 19949  013248  0429               	decf	_controlTransferState,w,c	;volatile
 19950  01324A  A4D8               	btfss	status,2,c
 19951  01324C  0012               	return	
 19952                           
 19953                           ;usb_device.c: 1440: {
 19954                           ;usb_device.c: 1441: BothEP0OutUOWNsSet = 0;
 19955  01324E  0E00               	movlw	0
 19956  013250  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19957                           
 19958                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->CNT = 8;
 19959  013252  EE20 F001          	lfsr	2,1
 19960  013256  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19961  013258  26D9               	addwf	fsr2l,f,c
 19962  01325A  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19963  01325C  22DA               	addwfc	fsr2h,f,c
 19964  01325E  0E08               	movlw	8
 19965  013260  6EDF               	movwf	indf2,c
 19966                           
 19967                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19968  013262  EE20 F002          	lfsr	2,2
 19969  013266  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19970  013268  26D9               	addwf	fsr2l,f,c
 19971  01326A  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19972  01326C  22DA               	addwfc	fsr2h,f,c
 19973  01326E  0E30               	movlw	48
 19974  013270  6EDE               	movwf	postinc2,c
 19975  013272  0E0D               	movlw	13
 19976  013274  6EDD               	movwf	postdec2,c
 19977                           
 19978                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19979  013276  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19980  01327A  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19981  01327E  0E04               	movlw	4
 19982  013280  6EDF               	movwf	indf2,c
 19983                           
 19984                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19985  013282  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19986  013286  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19987  01328A  0E00               	movlw	0
 19988  01328C  8EDB               	bsf	plusw2,7,c
 19989                           
 19990                           ;usb_device.c: 1450: BothEP0OutUOWNsSet = 1;
 19991  01328E  0E01               	movlw	1
 19992  013290  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19993                           
 19994                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->CNT = 8;
 19995  013292  EE20 F001          	lfsr	2,1
 19996  013296  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19997  013298  26D9               	addwf	fsr2l,f,c
 19998  01329A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19999  01329C  22DA               	addwfc	fsr2h,f,c
 20000  01329E  0E08               	movlw	8
 20001  0132A0  6EDF               	movwf	indf2,c
 20002                           
 20003                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20004  0132A2  EE20 F002          	lfsr	2,2
 20005  0132A6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 20006  0132A8  26D9               	addwf	fsr2l,f,c
 20007  0132AA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 20008  0132AC  22DA               	addwfc	fsr2h,f,c
 20009  0132AE  0E30               	movlw	48
 20010  0132B0  6EDE               	movwf	postinc2,c
 20011  0132B2  0E0D               	movlw	13
 20012  0132B4  6EDD               	movwf	postdec2,c
 20013                           
 20014                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 20015  0132B6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20016  0132BA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20017  0132BE  0E80               	movlw	128
 20018  0132C0  6EDF               	movwf	indf2,c
 20019  0132C2  0012               	return	
 20020  0132C4                     __end_of_USBCtrlEPAllowStatusStage:
 20021                           	opt stack 0
 20022                           pclatu	equ	0xFFB
 20023                           pclath	equ	0xFFA
 20024                           tblptru	equ	0xFF8
 20025                           tblptrh	equ	0xFF7
 20026                           tblptrl	equ	0xFF6
 20027                           tablat	equ	0xFF5
 20028                           prodh	equ	0xFF4
 20029                           prodl	equ	0xFF3
 20030                           intcon	equ	0xFF2
 20031                           intcon2	equ	0xFF1
 20032                           indf0	equ	0xFEF
 20033                           postinc0	equ	0xFEE
 20034                           fsr0h	equ	0xFEA
 20035                           fsr0l	equ	0xFE9
 20036                           wreg	equ	0xFE8
 20037                           indf1	equ	0xFE7
 20038                           postinc1	equ	0xFE6
 20039                           postdec1	equ	0xFE5
 20040                           fsr1h	equ	0xFE2
 20041                           fsr1l	equ	0xFE1
 20042                           indf2	equ	0xFDF
 20043                           postinc2	equ	0xFDE
 20044                           postdec2	equ	0xFDD
 20045                           plusw2	equ	0xFDB
 20046                           fsr2h	equ	0xFDA
 20047                           fsr2l	equ	0xFD9
 20048                           status	equ	0xFD8
 20049                           
 20050 ;; *************** function _USBCtrlTrfInHandler *****************
 20051 ;; Defined at:
 20052 ;;		line 2596 in file "../My_library/usb/usb_device.c"
 20053 ;; Parameters:    Size  Location     Type
 20054 ;;		None
 20055 ;; Auto vars:     Size  Location     Type
 20056 ;;  lastDTS         1    1[COMRAM] unsigned char 
 20057 ;; Return value:  Size  Location     Type
 20058 ;;		None               void
 20059 ;; Registers used:
 20060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20061 ;; Tracked objects:
 20062 ;;		On entry : 0/0
 20063 ;;		On exit  : 0/0
 20064 ;;		Unchanged: 0/0
 20065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20070 ;;Total ram usage:        1 bytes
 20071 ;; Hardware stack levels used:    1
 20072 ;; Hardware stack levels required when called:    1
 20073 ;; This function calls:
 20074 ;;		_USBCtrlTrfTxService
 20075 ;; This function is called by:
 20076 ;;		_USBCtrlEPService
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           	psect	text88
 20081  013670                     __ptext88:
 20082                           	opt stack 0
 20083  013670                     _USBCtrlTrfInHandler:
 20084                           	opt stack 16
 20085                           
 20086                           ;usb_device.c: 2598: uint8_t lastDTS;
 20087                           ;usb_device.c: 2600: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 20088                           
 20089                           ;incstack = 0
 20090  013670  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20091  013674  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20092  013678  0E00               	movlw	0
 20093  01367A  BCDF               	btfsc	indf2,6,c
 20094  01367C  0E01               	movlw	1
 20095  01367E  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 20096                           
 20097                           ;usb_device.c: 2603: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 20098  013680  0E04               	movlw	4
 20099  013682  1A10               	xorwf	_pBDTEntryIn,f,c
 20100                           
 20101                           ;usb_device.c: 2608: if(USBDeviceState == ADR_PENDING_STATE)
 20102  013684  0E08               	movlw	8
 20103  013686  1824               	xorwf	_USBDeviceState,w,c	;volatile
 20104  013688  A4D8               	btfss	status,2,c
 20105  01368A  D00D               	goto	i2l6939
 20106                           
 20107                           ;usb_device.c: 2609: {
 20108                           ;usb_device.c: 2610: UADDR = (SetupPkt.bDevADR & 0x7F);
 20109  01368C  010D               	movlb	13	; () banked
 20110  01368E  5132               	movf	50,w,b	;volatile
 20111  013690  0B7F               	andlw	127
 20112  013692  010F               	movlb	15	; () banked
 20113  013694  6F38               	movwf	56,b	;volatile
 20114                           
 20115                           ; BSR set to: 15
 20116                           ;usb_device.c: 2611: if(UADDR != 0u)
 20117  013696  010F               	movlb	15	; () banked
 20118  013698  5138               	movf	56,w,b	;volatile
 20119  01369A  B4D8               	btfsc	status,2,c
 20120  01369C  D002               	goto	i2l6937
 20121                           
 20122                           ; BSR set to: 15
 20123                           ;usb_device.c: 2612: {
 20124                           ;usb_device.c: 2613: USBDeviceState=ADDRESS_STATE;
 20125  01369E  0E10               	movlw	16
 20126  0136A0  D001               	goto	L15
 20127  0136A2                     i2l6937:
 20128                           
 20129                           ; BSR set to: 15
 20130                           ;usb_device.c: 2615: else
 20131                           ;usb_device.c: 2616: {
 20132                           ;usb_device.c: 2617: USBDeviceState=DEFAULT_STATE;
 20133  0136A2  0E04               	movlw	4
 20134  0136A4                     L15:
 20135  0136A4  6E24               	movwf	_USBDeviceState,c	;volatile
 20136  0136A6                     i2l6939:
 20137                           
 20138                           ;usb_device.c: 2618: }
 20139                           ;usb_device.c: 2619: }
 20140                           ;usb_device.c: 2622: if(controlTransferState == 1)
 20141  0136A6  0429               	decf	_controlTransferState,w,c	;volatile
 20142  0136A8  A4D8               	btfss	status,2,c
 20143  0136AA  D03A               	goto	i2l345
 20144                           
 20145                           ;usb_device.c: 2623: {
 20146                           ;usb_device.c: 2624: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 20147  0136AC  EE20 F002          	lfsr	2,2
 20148  0136B0  5010               	movf	_pBDTEntryIn,w,c
 20149  0136B2  26D9               	addwf	fsr2l,f,c
 20150  0136B4  5011               	movf	_pBDTEntryIn+1,w,c
 20151  0136B6  22DA               	addwfc	fsr2h,f,c
 20152  0136B8  0E38               	movlw	56
 20153  0136BA  6EDE               	movwf	postinc2,c
 20154  0136BC  0E0D               	movlw	13
 20155  0136BE  6EDD               	movwf	postdec2,c
 20156                           
 20157                           ;usb_device.c: 2625: USBCtrlTrfTxService();
 20158  0136C0  ECCB  F097         	call	_USBCtrlTrfTxService	;wreg free
 20159                           
 20160                           ;usb_device.c: 2631: if(shortPacketStatus == 2)
 20161  0136C4  0E02               	movlw	2
 20162  0136C6  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 20163  0136C8  A4D8               	btfss	status,2,c
 20164  0136CA  D00D               	goto	i2l6951
 20165                           
 20166                           ;usb_device.c: 2632: {
 20167                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val = 0x04;
 20168  0136CC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20169  0136D0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20170  0136D4  0E04               	movlw	4
 20171  0136D6  6EDF               	movwf	indf2,c
 20172                           
 20173                           ;usb_device.c: 2636: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20174  0136D8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20175  0136DC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20176  0136E0  0E00               	movlw	0
 20177  0136E2  8EDB               	bsf	plusw2,7,c
 20178                           
 20179                           ;usb_device.c: 2637: }
 20180  0136E4  0012               	return	
 20181  0136E6                     i2l6951:
 20182                           
 20183                           ;usb_device.c: 2638: else
 20184                           ;usb_device.c: 2639: {
 20185                           ;usb_device.c: 2640: if(lastDTS == 0)
 20186  0136E6  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 20187  0136E8  A4D8               	btfss	status,2,c
 20188  0136EA  D00D               	goto	i2l6957
 20189                           
 20190                           ;usb_device.c: 2641: {
 20191                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 20192  0136EC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20193  0136F0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20194  0136F4  0E48               	movlw	72
 20195  0136F6  6EDF               	movwf	indf2,c
 20196                           
 20197                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20198  0136F8  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20199  0136FC  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20200  013700  0E00               	movlw	0
 20201  013702  8EDB               	bsf	plusw2,7,c
 20202                           
 20203                           ;usb_device.c: 2644: }
 20204  013704  0012               	return	
 20205  013706                     i2l6957:
 20206                           
 20207                           ;usb_device.c: 2645: else
 20208                           ;usb_device.c: 2646: {
 20209                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 20210  013706  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20211  01370A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20212  01370E  0E08               	movlw	8
 20213  013710  6EDF               	movwf	indf2,c
 20214                           
 20215                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20216  013712  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20217  013716  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20218  01371A  0E00               	movlw	0
 20219  01371C  8EDB               	bsf	plusw2,7,c
 20220                           
 20221                           ;usb_device.c: 2649: }
 20222                           ;usb_device.c: 2650: }
 20223                           ;usb_device.c: 2651: }
 20224  01371E  0012               	return	
 20225  013720                     i2l345:
 20226                           
 20227                           ;usb_device.c: 2652: else
 20228                           ;usb_device.c: 2653: {
 20229                           ;usb_device.c: 2657: if(outPipes[0].info.bits.busy == 1)
 20230  013720  BE04               	btfsc	_outPipes+3,7,c	;volatile
 20231                           
 20232                           ;usb_device.c: 2662: }
 20233                           ;usb_device.c: 2663: outPipes[0].info.bits.busy = 0;
 20234                           
 20235                           ;usb_device.c: 2660: {
 20236                           ;usb_device.c: 2661: outPipes[0].pFunc();
 20237  013722  9E04               	bcf	_outPipes+3,7,c	;volatile
 20238                           
 20239                           ;usb_device.c: 2664: }
 20240                           ;usb_device.c: 2666: controlTransferState = 0;
 20241  013724  0E00               	movlw	0
 20242  013726  6E29               	movwf	_controlTransferState,c	;volatile
 20243  013728  0012               	return	
 20244  01372A                     __end_of_USBCtrlTrfInHandler:
 20245                           	opt stack 0
 20246                           pclatu	equ	0xFFB
 20247                           pclath	equ	0xFFA
 20248                           tblptru	equ	0xFF8
 20249                           tblptrh	equ	0xFF7
 20250                           tblptrl	equ	0xFF6
 20251                           tablat	equ	0xFF5
 20252                           prodh	equ	0xFF4
 20253                           prodl	equ	0xFF3
 20254                           intcon	equ	0xFF2
 20255                           intcon2	equ	0xFF1
 20256                           indf0	equ	0xFEF
 20257                           postinc0	equ	0xFEE
 20258                           fsr0h	equ	0xFEA
 20259                           fsr0l	equ	0xFE9
 20260                           wreg	equ	0xFE8
 20261                           indf1	equ	0xFE7
 20262                           postinc1	equ	0xFE6
 20263                           postdec1	equ	0xFE5
 20264                           fsr1h	equ	0xFE2
 20265                           fsr1l	equ	0xFE1
 20266                           indf2	equ	0xFDF
 20267                           postinc2	equ	0xFDE
 20268                           postdec2	equ	0xFDD
 20269                           plusw2	equ	0xFDB
 20270                           fsr2h	equ	0xFDA
 20271                           fsr2l	equ	0xFD9
 20272                           status	equ	0xFD8
 20273                           
 20274 ;; *************** function _USBCtrlTrfTxService *****************
 20275 ;; Defined at:
 20276 ;;		line 1772 in file "../My_library/usb/usb_device.c"
 20277 ;; Parameters:    Size  Location     Type
 20278 ;;		None
 20279 ;; Auto vars:     Size  Location     Type
 20280 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20281 ;; Return value:  Size  Location     Type
 20282 ;;		None               void
 20283 ;; Registers used:
 20284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20285 ;; Tracked objects:
 20286 ;;		On entry : 0/0
 20287 ;;		On exit  : 0/0
 20288 ;;		Unchanged: 0/0
 20289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20294 ;;Total ram usage:        1 bytes
 20295 ;; Hardware stack levels used:    1
 20296 ;; This function calls:
 20297 ;;		Nothing
 20298 ;; This function is called by:
 20299 ;;		_USBCtrlEPAllowDataStage
 20300 ;;		_USBCtrlTrfInHandler
 20301 ;; This function uses a non-reentrant model
 20302 ;;
 20303                           
 20304                           	psect	text89
 20305  012F96                     __ptext89:
 20306                           	opt stack 0
 20307  012F96                     _USBCtrlTrfTxService:
 20308                           	opt stack 14
 20309                           
 20310                           ;usb_device.c: 1774: uint8_t byteToSend;
 20311                           ;usb_device.c: 1778: byteToSend = 8;
 20312                           
 20313                           ;incstack = 0
 20314  012F96  0E08               	movlw	8
 20315  012F98  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20316                           
 20317                           ;usb_device.c: 1779: if(inPipes[0].wCount.Val < (uint8_t)8)
 20318  012F9A  500F               	movf	_inPipes+5,w,c	;volatile
 20319  012F9C  E110               	bnz	i2l6075
 20320  012F9E  0E08               	movlw	8
 20321  012FA0  5C0E               	subwf	_inPipes+4,w,c	;volatile
 20322  012FA2  B0D8               	btfsc	status,0,c
 20323  012FA4  D00C               	goto	i2l6075
 20324                           
 20325                           ;usb_device.c: 1780: {
 20326                           ;usb_device.c: 1781: byteToSend = inPipes[0].wCount.Val;
 20327  012FA6  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20328                           
 20329                           ;usb_device.c: 1788: if(shortPacketStatus == 0)
 20330  012FAA  502B               	movf	_shortPacketStatus,w,c	;volatile
 20331  012FAC  A4D8               	btfss	status,2,c
 20332  012FAE  D002               	goto	i2l6071
 20333                           
 20334                           ;usb_device.c: 1789: {
 20335                           ;usb_device.c: 1790: shortPacketStatus = 1;
 20336  012FB0  0E01               	movlw	1
 20337  012FB2  D004               	goto	L16
 20338  012FB4                     i2l6071:
 20339                           
 20340                           ;usb_device.c: 1792: else if(shortPacketStatus == 1)
 20341  012FB4  042B               	decf	_shortPacketStatus,w,c	;volatile
 20342  012FB6  A4D8               	btfss	status,2,c
 20343  012FB8  D002               	goto	i2l6075
 20344                           
 20345                           ;usb_device.c: 1793: {
 20346                           ;usb_device.c: 1794: shortPacketStatus = 2;
 20347  012FBA  0E02               	movlw	2
 20348  012FBC                     L16:
 20349  012FBC  6E2B               	movwf	_shortPacketStatus,c	;volatile
 20350  012FBE                     i2l6075:
 20351                           
 20352                           ;usb_device.c: 1795: }
 20353                           ;usb_device.c: 1796: }
 20354                           ;usb_device.c: 1800: inPipes[0].wCount.Val -= byteToSend;
 20355  012FBE  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20356  012FC0  5E0E               	subwf	_inPipes+4,f,c	;volatile
 20357  012FC2  0E00               	movlw	0
 20358  012FC4  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 20359                           
 20360                           ;usb_device.c: 1805: pBDTEntryIn[0]->CNT = byteToSend;
 20361  012FC6  EE20 F001          	lfsr	2,1
 20362  012FCA  5010               	movf	_pBDTEntryIn,w,c
 20363  012FCC  26D9               	addwf	fsr2l,f,c
 20364  012FCE  5011               	movf	_pBDTEntryIn+1,w,c
 20365  012FD0  22DA               	addwfc	fsr2h,f,c
 20366  012FD2  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20367                           
 20368                           ;usb_device.c: 1809: pDst = (volatile uint8_t*)CtrlTrfData;
 20369  012FD6  0E38               	movlw	56
 20370  012FD8  0100               	movlb	0	; () banked
 20371  012FDA  6FE1               	movwf	_pDst& (0+255),b
 20372  012FDC  0E0D               	movlw	13
 20373  012FDE  0100               	movlb	0	; () banked
 20374  012FE0  6FE2               	movwf	(_pDst+1)& (0+255),b
 20375                           
 20376                           ; BSR set to: 0
 20377                           ;usb_device.c: 1810: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20378  012FE2  A00D               	btfss	_inPipes+3,0,c	;volatile
 20379  012FE4  D01D               	goto	i2l6093
 20380  012FE6  D03C               	goto	i2l6103
 20381  012FE8                     i2l6085:
 20382                           
 20383                           ; BSR set to: 0
 20384                           ;usb_device.c: 1813: {
 20385                           ;usb_device.c: 1814: *pDst++ = *inPipes[0].pSrc.bRom++;
 20386  012FE8  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20387  012FEC  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20388  012FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 20389  012FF2  6EF8               	movwf	tblptru,c
 20390  012FF4  C0E1  FFD9         	movff	_pDst,fsr2l
 20391  012FF8  C0E2  FFDA         	movff	_pDst+1,fsr2h
 20392  012FFC  0E0E               	movlw	(high __ramtop+-1)
 20393  012FFE  64F7               	cpfsgt	tblptrh,c
 20394  013000  D003               	bra	i2u477_47
 20395  013002  0008               	tblrd		*
 20396  013004  50F5               	movf	tablat,w,c
 20397  013006  D005               	bra	i2u477_40
 20398  013008                     i2u477_47:
 20399  013008  CFF6 FFE9          	movff	tblptrl,fsr0l
 20400  01300C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20401  013010  50EF               	movf	indf0,w,c
 20402  013012                     i2u477_40:
 20403  013012  6EDF               	movwf	indf2,c
 20404  013014  4A0A               	infsnz	_inPipes,f,c	;volatile
 20405  013016  2A0B               	incf	_inPipes+1,f,c	;volatile
 20406  013018  0100               	movlb	0	; () banked
 20407  01301A  4BE1               	infsnz	_pDst& (0+255),f,b
 20408  01301C  2BE2               	incf	(_pDst+1)& (0+255),f,b
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;usb_device.c: 1815: byteToSend--;
 20412  01301E  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20413  013020                     i2l6093:
 20414                           
 20415                           ; BSR set to: 0
 20416  013020  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20417  013022  B4D8               	btfsc	status,2,c
 20418  013024  0012               	return	
 20419  013026  D7E0               	goto	i2l6085
 20420  013028                     i2l6095:
 20421                           
 20422                           ; BSR set to: 0
 20423                           ;usb_device.c: 1821: {
 20424                           ;usb_device.c: 1822: *pDst++ = *inPipes[0].pSrc.bRam++;
 20425  013028  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20426  01302C  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20427  013030  0E00               	movlw	low (__mediumconst shr (0+16))
 20428  013032  6EF8               	movwf	tblptru,c
 20429  013034  C0E1  FFD9         	movff	_pDst,fsr2l
 20430  013038  C0E2  FFDA         	movff	_pDst+1,fsr2h
 20431  01303C  0E0E               	movlw	(high __ramtop+-1)
 20432  01303E  64F7               	cpfsgt	tblptrh,c
 20433  013040  D003               	bra	i2u479_47
 20434  013042  0008               	tblrd		*
 20435  013044  50F5               	movf	tablat,w,c
 20436  013046  D005               	bra	i2u479_40
 20437  013048                     i2u479_47:
 20438  013048  CFF6 FFE9          	movff	tblptrl,fsr0l
 20439  01304C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20440  013050  50EF               	movf	indf0,w,c
 20441  013052                     i2u479_40:
 20442  013052  6EDF               	movwf	indf2,c
 20443  013054  4A0A               	infsnz	_inPipes,f,c	;volatile
 20444  013056  2A0B               	incf	_inPipes+1,f,c	;volatile
 20445  013058  0100               	movlb	0	; () banked
 20446  01305A  4BE1               	infsnz	_pDst& (0+255),f,b
 20447  01305C  2BE2               	incf	(_pDst+1)& (0+255),f,b
 20448                           
 20449                           ; BSR set to: 0
 20450                           ;usb_device.c: 1823: byteToSend--;
 20451  01305E  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20452  013060                     i2l6103:
 20453                           
 20454                           ; BSR set to: 0
 20455  013060  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20456  013062  B4D8               	btfsc	status,2,c
 20457  013064  0012               	return	
 20458  013066  D7E0               	goto	i2l6095
 20459  013068                     __end_of_USBCtrlTrfTxService:
 20460                           	opt stack 0
 20461                           pclatu	equ	0xFFB
 20462                           pclath	equ	0xFFA
 20463                           tblptru	equ	0xFF8
 20464                           tblptrh	equ	0xFF7
 20465                           tblptrl	equ	0xFF6
 20466                           tablat	equ	0xFF5
 20467                           prodh	equ	0xFF4
 20468                           prodl	equ	0xFF3
 20469                           intcon	equ	0xFF2
 20470                           intcon2	equ	0xFF1
 20471                           indf0	equ	0xFEF
 20472                           postinc0	equ	0xFEE
 20473                           fsr0h	equ	0xFEA
 20474                           fsr0l	equ	0xFE9
 20475                           wreg	equ	0xFE8
 20476                           indf1	equ	0xFE7
 20477                           postinc1	equ	0xFE6
 20478                           postdec1	equ	0xFE5
 20479                           fsr1h	equ	0xFE2
 20480                           fsr1l	equ	0xFE1
 20481                           indf2	equ	0xFDF
 20482                           postinc2	equ	0xFDE
 20483                           postdec2	equ	0xFDD
 20484                           plusw2	equ	0xFDB
 20485                           fsr2h	equ	0xFDA
 20486                           fsr2l	equ	0xFD9
 20487                           status	equ	0xFD8
 20488                           pclatu	equ	0xFFB
 20489                           pclath	equ	0xFFA
 20490                           tblptru	equ	0xFF8
 20491                           tblptrh	equ	0xFF7
 20492                           tblptrl	equ	0xFF6
 20493                           tablat	equ	0xFF5
 20494                           prodh	equ	0xFF4
 20495                           prodl	equ	0xFF3
 20496                           intcon	equ	0xFF2
 20497                           intcon2	equ	0xFF1
 20498                           indf0	equ	0xFEF
 20499                           postinc0	equ	0xFEE
 20500                           fsr0h	equ	0xFEA
 20501                           fsr0l	equ	0xFE9
 20502                           wreg	equ	0xFE8
 20503                           indf1	equ	0xFE7
 20504                           postinc1	equ	0xFE6
 20505                           postdec1	equ	0xFE5
 20506                           fsr1h	equ	0xFE2
 20507                           fsr1l	equ	0xFE1
 20508                           indf2	equ	0xFDF
 20509                           postinc2	equ	0xFDE
 20510                           postdec2	equ	0xFDD
 20511                           plusw2	equ	0xFDB
 20512                           fsr2h	equ	0xFDA
 20513                           fsr2l	equ	0xFD9
 20514                           status	equ	0xFD8
 20515                           
 20516                           	psect	rparam
 20517  0000                     pclatu	equ	0xFFB
 20518                           pclath	equ	0xFFA
 20519                           tblptru	equ	0xFF8
 20520                           tblptrh	equ	0xFF7
 20521                           tblptrl	equ	0xFF6
 20522                           tablat	equ	0xFF5
 20523                           prodh	equ	0xFF4
 20524                           prodl	equ	0xFF3
 20525                           intcon	equ	0xFF2
 20526                           intcon2	equ	0xFF1
 20527                           indf0	equ	0xFEF
 20528                           postinc0	equ	0xFEE
 20529                           fsr0h	equ	0xFEA
 20530                           fsr0l	equ	0xFE9
 20531                           wreg	equ	0xFE8
 20532                           indf1	equ	0xFE7
 20533                           postinc1	equ	0xFE6
 20534                           postdec1	equ	0xFE5
 20535                           fsr1h	equ	0xFE2
 20536                           fsr1l	equ	0xFE1
 20537                           indf2	equ	0xFDF
 20538                           postinc2	equ	0xFDE
 20539                           postdec2	equ	0xFDD
 20540                           plusw2	equ	0xFDB
 20541                           fsr2h	equ	0xFDA
 20542                           fsr2l	equ	0xFD9
 20543                           status	equ	0xFD8
 20544                           
 20545                           	psect	temp
 20546  00005B                     btemp:
 20547                           	opt stack 0
 20548  00005B                     	ds	1
 20549  0000                     int$flags	set	btemp
 20550                           pclatu	equ	0xFFB
 20551                           pclath	equ	0xFFA
 20552                           tblptru	equ	0xFF8
 20553                           tblptrh	equ	0xFF7
 20554                           tblptrl	equ	0xFF6
 20555                           tablat	equ	0xFF5
 20556                           prodh	equ	0xFF4
 20557                           prodl	equ	0xFF3
 20558                           intcon	equ	0xFF2
 20559                           intcon2	equ	0xFF1
 20560                           indf0	equ	0xFEF
 20561                           postinc0	equ	0xFEE
 20562                           fsr0h	equ	0xFEA
 20563                           fsr0l	equ	0xFE9
 20564                           wreg	equ	0xFE8
 20565                           indf1	equ	0xFE7
 20566                           postinc1	equ	0xFE6
 20567                           postdec1	equ	0xFE5
 20568                           fsr1h	equ	0xFE2
 20569                           fsr1l	equ	0xFE1
 20570                           indf2	equ	0xFDF
 20571                           postinc2	equ	0xFDE
 20572                           postdec2	equ	0xFDD
 20573                           plusw2	equ	0xFDB
 20574                           fsr2h	equ	0xFDA
 20575                           fsr2l	equ	0xFD9
 20576                           status	equ	0xFD8


Data Sizes:
    Strings     525
    Constant    239
    Data        5
    BSS         2503
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    117     160
    BANK1           256    109     248
    BANK2           256      0     203
    BANK3           256      0     128
    BANK4           256      0     200
    BANK5           256      0     250
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_60(CODE[6]), STR_59(CODE[2]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), STR_53(CODE[2]), 
		 -> STR_52(CODE[2]), STR_51(CODE[4]), STR_50(CODE[4]), STR_49(CODE[4]), 
		 -> STR_48(CODE[4]), STR_47(CODE[5]), STR_46(CODE[4]), STR_45(CODE[9]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_61(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_43(CODE[315]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    S3374ringbuf$buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1500
		 -> USB_CDC_buffer_init@txbuf(BIGRAMl[1500]), USB_CDC_buffer_init@rxbuf(BANK5[250]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK4[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK3[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK3[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_CDC_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_CDC_init->_USBDeviceInit
    _USB_CDC_buffer_init->_ringbuf_init
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _USB_CDC_task->_ringbuf_pop
    _USB_CDC_task->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _USB_CDC_send->_CDCTxService
    _USB_CDC_get->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  301455
                          _RTCC_task
                       _USB_CDC_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  224019
                                            115 BANK0      2     2      0
                                              0 BANK1    109   105      4
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  26    16     10  184319
                                            101 BANK0     14     4     10
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  124049
                                             92 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   65553
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   33917
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15358
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10588
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12303
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   11585
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   22374
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                       _USB_CDC_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_init                                         0     0      0    3155
                    _USBDeviceAttach
                      _USBDeviceInit
                _USB_CDC_buffer_init
 ---------------------------------------------------------------------------------
 (3) _USB_CDC_buffer_init                                  0     0      0    1614
                       _ringbuf_init
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   18852
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11272
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26473
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14050
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10680
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USB_CDC_task                                         5     5      0   21009
                                             15 BANK0      5     5      0
                        _USB_CDC_get
                       _USB_CDC_send
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_send                                         2     0      2    2839
                                             12 BANK0      2     0      2
                       _CDCTxService
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _USB_CDC_get                                          1     1      0    4945
                                             13 BANK0      1     1      0
                       _CDCTxService
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7580
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7580
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33581
                                             30 COMRAM    15    15      0
                        _USB_CDC_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _USB_CDC_ISR                                         0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
   _APP_DeviceCDCBasicDemoInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _APP_DeviceCDCBasicDemoInitialize                    0     0      0    1199
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (15) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (16) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (17) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_CDC_task
     _USB_CDC_get
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
     _USB_CDC_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_CDC_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
       _USB_CDC_buffer_init
         _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _USB_CDC_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _APP_DeviceCDCBasicDemoInitialize
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     5DC      36       45.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      80      12       50.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CB      10       79.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6D      F8       7       96.9%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FF       8        0.0%
DATA                 0      0     ADB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Jan 12 20:52:39 2016

                               _USB_SD_Ptr FD0D                            _ringbuf_put_num 3CAA  
                          _ringbuf_put_str 3F74                               ___awdiv@sign 0072  
                                       _ms 0114                              _USBDeviceInit 1EE2  
                      ___wmul@multiplicand 0062                          ??_RTCC_from_epoch 0091  
                       __size_of_CDCInitEP 006E                               __CFG_CP0$OFF 000000  
     USER_USB_CALLBACK_EVENT_HANDLER@event 003A       USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C  
                                      l207 4452                                        l208 4450  
                                      l146 1F58                __end_of_USBStdGetDscHandler 23F0  
                                      l504 1DC2                                        l509 1E16  
                                      l851 3CAC                                        l932 34FA  
                                      _BDT 000D00                                        l782 4402  
                                      l951 1ABA                                        l938 2D18  
                                      l787 422E                                        _PR2 000FCB  
                                      _ISR 1008                                        _UIE 000F36  
                                      _UIR 000F62                              ?_get_quot_rem 0079  
                       caltime_to_epoch@tm 0079                                 _USBSuspend 4524  
                                      _now 0136                          _RTCC_from_caltime 4622  
                             ___awmod@sign 0065                       USBStdSetCfgHandler@i 0042  
                                      prod 000FF3                                        wreg 000FE8  
                           _USBDeviceTasks 203A                                 _TXSTA1bits 000FAD  
                           _USBDeviceState 0024                         ?_RTCC_from_caltime 008F  
                    ??_USBCtrlTrfRxService 002E                   __size_ofi2_USBDeviceInit 013A  
                           ??_getsUSBUSART 006A                   USBEnableEndpoint@options 0036  
                                     ?_ISR 002E                           _terminal_at_hand 3FD8  
                                     l2112 34E8                                       l2122 3A52  
                                     l1440 2586                                       l1433 2504  
                                     l1451 45C6                                       l2165 3E1C  
                                     l2175 4092                                       l1651 191A  
               USBConfigureEndpoint@handle 0034                                       l1656 1974  
                                     l1915 26DA                                       l1597 339C  
                                     l9021 3968                                       l9013 3944  
                                     l9101 3320                                       l9023 3974  
                                     l9111 3356                                       l9103 3326  
                       __CFG_WPFP$PAGE_127 000000                                       l9025 397A  
                                     l9033 39AC                                       l9017 3954  
                                     l9131 347C                                       l9115 3364  
                                     l9211 459C                                       l9037 39C0  
                                     l9029 399E                                       l9141 34D6  
                                     l9133 3482                                       l9071 3E38  
                                     l9231 3DDE                                       l9119 3378  
                                     l9065 2A36                                       l9049 284C  
                                     l9153 2F7E                                       l9129 346C  
                                     l9075 3E5E                                       l9227 3DCC  
                                     l9251 4060                                       l9411 06A2  
                                     l9403 0664                                       l9173 1038  
                                     l9229 3DD8                                       l9093 32F6  
                                     l9333 1B2C                                       l9261 3F76  
                                     l9405 067C                                       l9191 10C6  
                                     l9175 103E                                       l9239 3E0E  
                                     l9087 32E0                                       l9335 1B30  
                                     l9511 449C                                       l9255 4084  
                                     l9247 404E                                       l9415 06BA  
                                     l9185 10A2                                       l9521 2C5E  
                                     l9249 405A                                       l9601 269C  
                                     l9265 3FAE                                       l9441 0762  
                                     l9417 06F0                                       l9361 04EC  
                                     l9353 04BC                                       l9195 112A  
                                     l9179 1048                                       l9187 10A6  
                                     l9099 3314                                       l9339 1B38  
                                     l9515 44AE                                       l9603 26A2  
                                     l9451 07BC                                       l9427 0720  
                                     l9371 052E                                       l9541 2CF8  
                                     l9461 07EC                                       l9453 07C6  
                                     l9429 0726                                       l9365 04F6  
                                     l9711 2974                                       l9623 1F2E  
                                     l9471 0820                                       l9447 0784  
                                     l9391 05F2                                       l9359 04DA  
                                     l9529 2C92                                       l9801 1EDE  
                                     l9705 293C                                       l9707 2944  
                                     l9715 29A6                                       l9731 468C  
                                     l9651 1F98                                       l9627 1F38  
                                     l9571 409E                                       l9491 08CE  
                                     l9483 0866                                       l9387 05E0  
                                     l9379 05AE                                       l9811 0950  
                                     l9741 1DA6                                       l9661 2008  
                                     l9573 40AA                                       l9485 086C  
                                     l9477 0846                                       l9469 0814  
                                     l9397 0646                                       l9389 05EC  
                                     l9493 08DA                                       l9821 09EC  
                                     l9813 095C                                       l9751 1DCC  
                                     l9655 1FA2                                       l9639 1F66  
                                     l9647 1F78                                       l9911 441A  
                                     l9583 25F4                                       l9399 0652  
                                     l9495 08FA                                       l9567 4020  
                                     l9823 0A24                                       l9745 1DB6  
                                     l9585 25FA                                       l9577 40E8  
                                     l9841 0B7A                                       l9833 0AEC  
                                     l9817 09A4                                       l9771 1E42  
                                     l9763 1E1A                                       l9739 1D9C  
                                     l9923 4230                                       l9595 2640  
                                     l9843 0BB2                                       l9827 0A6C  
                                     l9781 1E72                                       l9757 1E00  
                                     l9853 0C7A                                       l9837 0B32  
                                     l9829 0AA4                                       l9791 1EA0  
                                     l9863 1C68                                       l9599 2652  
                                     l9847 0BFA                                       STR_1 FFC1  
                                     l9697 28FA                                       l9873 1CBC  
                                     l9849 0C32                                       STR_4 FFFB  
                                     l9779 1E66                                       l9699 2904  
                                     l9891 1D3E                                       l9883 1D28  
                                     l9859 1C58                                       l9971 3CBC  
                                     l9797 1EB6                                       l9789 1E96  
                                     l9869 1CAC                                       l9877 1D04  
                                     l9981 3D1E                                       STR_7 FFFD  
                                     l9799 1EBA                                       l9991 31E2  
                                     l9887 1D32                                       l9879 1D1E  
                                     l9975 3CDE                                       STR_9 FFF9  
                                     l9993 31F8                                       l9897 1D4A  
                                     l9999 31FE                      ??_USBCtrlTrfTxService 002E  
                                     _UCFG 000F39                                       u9080 3FA0  
                                     u9090 3FD0                                       _UEP0 000F26  
                                     _UEP1 000F27                                       u9087 3F96  
                                     u8800 2A82                                       u9097 3FC6  
                                     u8810 2A84                                       u9610 28EA  
                                     _UEIE 000F37                                       u8740 29E0  
                                     u8750 29E2                                       u8760 2A12  
                                     u9618 28EE                                       u8780 2A28  
                                     u8790 2A2A                                       u9670 1D8C  
                                     _UEIR 000F63                                       _UCON 000F65  
                                     u8778 2A16                                       u9678 1D90  
                                     u9995 46A0                                       u9996 46A2  
                          _CDCDataInHandle 00DD                        ??_RTCC_from_caltime 0091  
   USBStdFeatureReqHandler@current_ep_data 0045                                       _pDst 00E1  
                                     _atoi 25F2                                       _main 4334  
                 ??i2_USBTransferOnePacket 0032                   button_timer_interrupt@bt 002E  
                                     _sw_B 017B                                       _sw_G 017F  
                                     _sw_R 0183                                       fsr0h 000FEA  
                                     fsr1h 000FE2                                       indf0 000FEF  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                                     indf1 000FE7                                _BaudRateGen 0110  
                                     fsr1l 000FE1                                       indf2 000FDF  
                                     fsr2l 000FD9                            _USBDeviceAttach 4424  
                                     btemp 005B                     __CFG_DSWDTOSC$T1OSCREF 000000  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                            __end_of_PWM_set 1D68  
                                     start 10FE                           __end_of_ADC_init 46B0  
                            __CFG_IESO$OFF 000000                 __end_of_USBCheckStdRequest 2C40  
                   ??_USBCtrlTrfOutHandler 0030                             terminal_task@i 01F3  
                             ___param_bank 000010                  ??_USBStdFeatureReqHandler 0042  
                          ??_terminal_task 00D3                            ??_terminal_time 00C4  
                       terminal_task@ascii 01F2                              ADC_init@p_ref 0060  
                                    ??_ISR 004C                   ??_USBStdGetStatusHandler 002E  
                             print_time@tx 0095                             ?_USBDeviceInit 002E  
                        ??_RTCC_to_caltime 0064                              __CFG_PLLDIV$2 000000  
                             _BAUDCON1bits 000F7E                                      l10111 03E6  
                                    l10009 3BD4                                      l10211 39FC  
                                    l10019 3F20                                      l10107 039E  
                                    l10043 0048                                      l10141 46CA  
                                    l10061 011C                                      l10045 0060  
                                    l10215 3A40                                      l10207 39E6  
                                    l10119 0442                                      l10071 01B2  
                                    l10209 39F6                                      l10065 0164  
                                    l10401 1000                                      l10411 2514  
                                    l10083 0256                                      l10075 01FA  
                                    l10067 016A                                      l10421 256E  
                                    l10341 0D14                                      l10095 02FA  
                                    l10087 029E                                      l10433 25DC  
                                    l10361 0E38                                      l10353 0DE6  
                                    l10345 0D94                                      l10337 0CEA  
                                    l10419 2552                                      l10099 0342  
                                    l10371 0E8E                                      l10363 0E3C  
                                    l10355 0DEA                                      l10347 0D98  
                                    l10429 25B0                                      l10471 1940  
                                    l10455 18FA                                      l10383 0F66  
                                    l10481 195E                                      l10473 1944  
                                    l10449 1878                                      l10393 0FCA  
                                    l10385 0F6E                                      l10377 0F12  
                                    l10369 0E8A                                      l10459 1904  
                                    l10379 0F3C                                      l10493 199A  
                                    l10477 1954                                      l10389 0F8A  
                                    l10495 199E                                      l10499 19B6  
                                    l10827 4338                                _writeBuffer 0340  
                __end_of_RTCC_from_caltime 4648                                      ?_atoi 0066  
                                    ?_main 002E                             ??_get_quot_rem 007D  
                          __end_of___awdiv 3382                                      _ADRES 000FC3  
                                    STR_20 FFDA                                      STR_13 FFF7  
                                    STR_30 FFB7                                      STR_31 FFCC  
                                    STR_15 FF7B                                      STR_23 FF2D  
                                    STR_32 FFA7                                      STR_40 FF93  
                                    STR_24 FF84                                      STR_33 FFC4  
                                    STR_41 FFB2                                      STR_25 FF5E  
                                    STR_26 FFE3                                      STR_42 FFE5  
                                    STR_34 FFDE                                      STR_50 FFD2  
                                    STR_35 FFAB                                      STR_27 FFE2  
                                    STR_19 FFDA                                      STR_51 FFCA  
                                    STR_43 FDF2                                      STR_52 FFA5  
                                    STR_36 FFBC                                      STR_60 FFA1  
                                    STR_44 FF69                                      STR_28 FF52  
                          __end_of___awmod 39CA                                      STR_37 FFD4  
                                    STR_29 FFE0                                      STR_53 FFEB  
                                    STR_61 FF8C                                      STR_45 FF72  
                                    STR_54 FFF1                                      STR_46 FFD6  
                                    STR_38 FF9A                                      STR_39 FFF5  
                                    STR_55 FFE9                                      STR_47 FFAD  
                                    STR_56 FFEF                                      STR_48 FFCE  
                                    STR_57 FFE7                                      STR_49 FFC6  
                                    STR_58 FFF3                                      STR_59 FFED  
        __size_of_USBCtrlEPServiceComplete 00F0                            __end_of___lldiv 34FA  
                          ___awdiv@divisor 006F                            __end_of___llmod 3A64  
                   __end_of_USBDeviceTasks 2184                                      u10650 182C  
                                    _LATB2 007C52                  ?_USBCtrlEPServiceComplete 002E  
                          __end_of___lwdiv 3E26                            ringbuf_put@data 006A  
                          __end_of___lwmod 409C                                      i2l300 37FA  
                                    i2l232 275A                                      i2l146 21EA  
                                    i2l170 2116                                      i2l308 4330  
                                    i2l158 206A                                      i2l168 2104  
                                    i2l345 3720                                      i2l169 2180  
                                    i2l450 3778                                      i2l530 1606  
                                    i2l531 1626                                      i2l452 37AE  
                                    i2l532 1646                                      i2l525 155E  
                                    i2l374 12D4                                      i2l526 1582  
                                    i2l295 37E8                                      i2l359 2B76  
                                    i2l527 15A4                                      i2l368 2BC4  
                                    i2l528 15C6                                      i2l393 149C  
                                    i2l529 15E6                                      i2l298 3870  
                                    i2l299 37F6                                      _UADDR 000F38  
                          ___awdiv@counter 0071                    ST7032_task@st7032_state 001D  
                                    _TMR1H 000FCF                                      _RPOR3 000EC3  
                                    _RPOR4 000EC4                                      _RPOR5 000EC5  
                                    _TRISA 000F92                                      _TRISB 000F93  
                                    _TRISC 000F94                                      _USTAT 000F64  
       __size_of_USBCtrlEPAllowStatusStage 00C2                        ___lmul@multiplicand 0071  
                           __CFG_FCMEN$OFF 000000            __end_of_USBCtrlEPAllowDataStage 3AFC  
                                    _sd000 FDEE                                      _sd001 FD58  
                                    _sd002 FD8C                       caltime_to_epoch@year 007F  
                               i2memset@p1 002E                            __end_of_dpowers FD0D  
                         __end_of_OSC_init 4740                            __end_of_isdigit 45A6  
                       __size_of_RTCC_init 006A                         __size_of_RTCC_task 003C  
                         ringbuf_delete@rb 0060                                      atoi@a 006B  
                                    atoi@s 0066                                      tablat 000FF5  
                                    plusw2 000FDB                          __end_of_CDCInitEP 3F0A  
                         __end_of_PWM_init 343E                 __size_of_ringbuf_backspace 008E  
                                    status 000FD8                            __end_of_sprintf 0908  
                         __end_ofi2_memset 457C                          month_length@month 0066  
                      _USB_CDC_buffer_init 4254                    __end_of_ringbuf_put_num 3D2C  
                  __end_of_ringbuf_put_str 3FD8                        terminal_task@i_4621 01F1  
                          putUSBUSART@data 0060               __size_of_USBStdSetCfgHandler 00DC  
                          __initialization 3884                            terminal_task@rx 0189  
                          terminal_task@tx 0187                            terminal_time@tx 00BC  
                             __end_of_atoi 26E4                               __end_of_main 4372  
                    _control_signal_bitmap 00ED                        ringbuf_init@bufsize 0064  
                         RTCC_from_RTCC@tm 0086                  __size_of_USBCtrlEPService 00CE  
                            print_time@str 0097                                     ??_atoi 0068  
                                   ??_main 00D5                              __activetblptr 000003  
                          ?_USBDeviceTasks 002E                       ?_USB_CDC_buffer_init 002E  
                              ?_USBSuspend 002E                               _cdc_mem_type 00EA  
                                   _BCL1IF 007D0B                    __end_of_USBDeviceAttach 445C  
                         _CDCDataOutHandle 00DF                          _getsUSBUSART$1957 006B  
                         ___llmod@dividend 0060                                     _CCPR1L 000FBB  
                                   _CCPR2L 000FB5                                     _CCPR3L 000F16  
                                   _CCPR4L 000F13                                     _EECON2 000FA7  
                                   _ANCON0 000F48                                     _ANCON1 000F49  
                         ___awdiv@dividend 006D                            getsUSBUSART@len 0069  
                  _terminal_operation$6980 00CF                    _terminal_operation$6981 00D1  
                                ??_PWM_set 0077                      __size_of_CDCTxService 017A  
                           __CFG_WDTEN$OFF 000000                                     i2l1594 10C2  
                                   i2l6103 3060                                     i2l6051 4106  
                                   i2l6045 40FA                                     i2l6221 455A  
                                   i2l6301 2AFE                                     i2l6071 2FB4  
                                   i2l6047 4100                                     i2l6241 3248  
                                   i2l6225 456A                                     i2l6075 2FBE  
                                   i2l6411 138C                                     i2l7131 432C  
                                   i2l7107 44F0                                     i2l6085 2FE8  
                                   i2l6093 3020                                     i2l6413 138E  
                                   i2l6405 1348                                     i2l6325 22CE  
                                   i2l6317 2B44                                     i2l7109 44F2  
                                   i2l6095 3028                                     i2l6351 23D8  
                                   i2l6271 3AB2                                     i2l7151 30C0  
                                   i2l6433 1436                                     i2l6417 13AA  
                                   i2l6345 23CC                                     i2l6337 236E  
                                   i2l6329 22E0                                     i2l5803 43BE  
                                   i2l6443 147C                                     i2l6427 1402  
                                   i2l6347 23D2                                     i2l6339 2374  
                                   i2l6363 3818                                     i2l6291 2ACA  
                                   i2l6275 3ACA                                     i2l7147 30B8  
                                   i2l7163 3120                                     i2l6461 150E  
                                   i2l6453 14BE                                     i2l6445 1488  
                                   i2l6429 141C                                     i2l6373 3858  
                                   i2l7165 3126                                     i2l5807 43CC  
                                   i2l5823 35F6                                     i2l5815 35CC  
                                   i2l5911 376C                                     i2l5903 3756  
                                   i2l6391 12D0                                     i2l6295 2AD2  
                                   i2l7159 3106                                     i2l7431 21C6  
                                   i2l7503 2062                                     i2l5835 3652  
                                   i2l6459 1502                                     i2l7435 21CE  
                                   i2l7531 20B6                                     i2l6821 2BA8  
                                   i2l6805 2B7E                                     i2l6717 2704  
                                   i2l7541 20C6                                     i2l7525 2090  
                                   i2l7517 2080                                     i2l5919 3798  
                                   i2l5927 37B6                                     i2l6831 2BDE  
                                   i2l6807 2B84                                     i2l7463 2230  
                                   i2l7447 21F8                                     i2l7455 220A  
                                   i2l5793 3B5E                                     i2l6817 2B9C  
                                   i2l6809 2B8A                                     i2l6737 2780  
                                   i2l7561 210E                                     i2l6771 243E  
                                   i2l6923 41AA                                     i2l6915 4162  
                                   i2l6819 2BA2                                     i2l6835 2BFC  
                                   i2l7459 2228                                     i2l7555 20FA  
                                   i2l7547 20D2                                     i2l6765 241C  
                                   i2l7469 228C                                     i2l7581 2160  
                                   i2l6951 36E6                                     i2l6783 2498  
                                   i2l7583 217C                                     i2l7575 2142  
                                   i2l7495 2052                                     i2l6937 36A2  
                                   i2l6939 36A6                                     i2l6787 24B2  
                                   i2l6957 3706                                     i2l7941 168E  
                                   i2l7961 1746                                     i2l7953 16FA  
                                   i2l7945 16B2                                     i2l7937 166A  
                                   i2l8931 106E                                     i2l7965 176C  
                                   i2l7957 1720                                     i2l7949 16D6  
                                   i2l7969 1790                                     _RCREG1 000FAF  
                            CDCTxService@i 006A                                     _RTCCAL 000F3E  
                                   _SPBRG1 000FB0                              USB_CDC_task@i 0070  
                                   _SSP1IF 007CF3                             __CFG_WPCFG$OFF 000000  
                                   _SSPBUF 000FC9                                     _TXREG1 000FAE  
                 i2USBTransferOnePacket@ep 0032                          ??i2_USBDeviceInit 0036  
          __size_ofi2_USBTransferOnePacket 00BA                             __CFG_WPDIS$OFF 000000  
                       epoch_to_caltime@tm 0081                         _terminal_task$6978 01EF  
                        _shortPacketStatus 002B                             __CFG_XINST$OFF 000000  
                        ?_epoch_to_caltime 0081                           ringbuf_put_num@i 0077  
                          USBDeviceTasks@i 004B                               _CCPTMRS0bits 000F52  
                             _CCPTMRS1bits 000F51                      caltime_to_epoch@epoch 0081  
              USBStdFeatureReqHandler@pUEP 0043                   USBTransferOnePacket@data 0061  
               USBCtrlTrfInHandler@lastDTS 002F                         _terminal_time$6979 00C4  
                          ??_USBDeviceInit 0068                               ?_ringbuf_pop 0068  
                             ?_ringbuf_num 0060                               ?_ringbuf_put 0068  
                    caltime_to_epoch@month 0085                                     ___lmul 3E26  
                             ?_putUSBUSART 0060                            _caltime_to_RTCC 2D18  
                                   ___wmul 445C                         ??_epoch_to_caltime 0083  
                              light_task@i 0092                                light_task@n 00FE  
                                ??___awdiv 0071                                  ??___awmod 0064  
                                   _d_to_x 45FA                                  ??___lldiv 0068  
                     __end_of_getsUSBUSART 29AC                       ringbuf_put_num@value 0074  
                             ?_timer0_init 002E                                  ??___llmod 0068  
                        __end_of_RTCC_init 3F74                               ?_timer1_init 0060  
                                ??___lwdiv 006A                          __end_of_RTCC_task 43AE  
                                ??___lwmod 0071                               ?_timer3_init 002E  
                                   _lcd_tx 00F3                          _USBEnableEndpoint 43AE  
          __size_of_USBStdGetStatusHandler 00AA                                     _memset 4492  
                                   clear_0 388C                                     clear_1 389E  
                                   clear_2 38AA                                     clear_3 38B6  
                                   clear_4 38C2                                     clear_5 38CE  
                                   clear_6 38DA                                     clear_7 38E6  
                          __CFG_CLKOEC$OFF 000000                           ___awdiv@quotient 0073  
                          ___awmod@divisor 0062                            ___awmod@counter 0064  
                                   _x_to_d 46D0                         ?_USBEnableEndpoint 0036  
               __size_of_RTCC_from_caltime 0026                                     _usb_rx 015C  
                                   _usb_tx 0164                                     _strcmp 409C  
                    ??_USB_CDC_buffer_init 0066              __size_of_USBTransferOnePacket 00D8  
                __size_of_caltime_to_epoch 028E                         _terminal_operation 0000  
                                ??_isdigit 0060                               _st7032_state 00EF  
                             _CDCTxService 1D68                               __mediumconst FD02  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                  ?_ADC_init 002E  
                      ??_USBEnableEndpoint 0037                   USB_CDC_buffer_init@rxbuf 0500  
                 USB_CDC_buffer_init@txbuf 05FA                                  ??_sprintf 0084  
                      ?_terminal_operation 00C5                                _CtrlTrfData 000D38  
                     _controlTransferState 0029                       __CFG_LS48MHZ$SYS48X8 000000  
                               __accesstop 0060                    __end_of__initialization 391E  
                             ?_USB_CDC_ISR 002E                               __pbssBIGRAMl 05FA  
                             ?_USB_CDC_get 002E                       __end_of_get_quot_rem 2EC2  
                            ___rparam_used 000001                            _RTCC_from_epoch 46F0  
                 __size_of_USBStallHandler 0046                           ?_ringbuf_put_num 0072  
                         ?_ringbuf_put_str 006F                       __CFG_WPEND$PAGE_WPFP 000000  
                      __size_of_USBSuspend 002C                           terminal_task@op0 011D  
                         terminal_task@op1 0280                           terminal_task@op2 0299  
                         terminal_task@op3 02B2                           terminal_task@buf 018B  
                           __pcstackCOMRAM 002E                  __end_of_USBEnableEndpoint 43EA  
                            __end_of_sd000 FDF2                              __end_of_sd001 FD8C  
                            __end_of_sd002 FDC0                           terminal_time@op0 00BE  
                         terminal_time@op1 00C0                           terminal_time@op2 00C2  
                             __pidataBANK0 1004                               __pidataBANK1 4746  
                     ??_terminal_operation 00CF                   __end_of_terminal_at_hand 403A  
         __size_of_USBCtrlEPAllowDataStage 0098              __size_of_USBConfigureEndpoint 0094  
                                ?_OSC_init 002E                __end_of_USBCtrlTrfInHandler 372A  
                          __CFG_DSWDTPS$G2 000000                     i2_USBTransferOnePacket 35B6  
                          light_task@_6082 00FD                                  ?_PWM_init 002E  
                     terminal_task@command 016C                              _I2C_cfct_flag 00E8  
                        _CDCTxService$2005 0068                                 _cdc_notice 0100  
                  __size_of_ringbuf_delete 0026                                  ?i2_memset 002E  
                               _cdc_rx_len 00EB                                 _cdc_tx_len 00EC  
                               ??_ADC_init 0060                 caltime_to_epoch@month_3722 0080  
                 ??_USBCtrlTrfSetupHandler 0048                            light_task@value 008C  
                         ?_USBDeviceAttach 002E                     _USBStdGetStatusHandler 37DA  
                             sprintf@width 0093                         __size_of_main_init 004C  
                               __pbssBANK0 00D5                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
 __end_of_APP_DeviceCDCBasicDemoInitialize 45FA  __size_of_APP_DeviceCDCBasicDemoInitialize 002A  
       ??_APP_DeviceCDCBasicDemoInitialize 003A          ?_APP_DeviceCDCBasicDemoInitialize 002E  
         _APP_DeviceCDCBasicDemoInitialize 45D0                    __end_of_caltime_to_RTCC 2DEE  
                          _RTCC_to_caltime 34FA                __size_of_USBWakeFromSuspend 0032  
                              _pBDTEntryIn 0010           __end_of_USBCtrlEPServiceComplete 27D4  
              __size_of_USBCheckCDCRequest 00B0                      __end_of_weekday_3char FDDC  
                    RTCC_task@prev_halfsec 00E5                       USBCtrlTrfRxService@i 002E  
                                  ?___lmul 006D                                    ?___wmul 0060  
                           ST7032_init@buf 0400                                    ?_d_to_x 002E  
                               ??_OSC_init 0060                                    ?_memset 0060  
                           ___lmul@product 0075                                 _device_dsc FDDC  
                         _USBCtrlEPService 3068                                    ?_x_to_d 002E  
                               _ep_data_in 0016                                    ?_strcmp 0060  
              __end_of_USBCtrlTrfRxService 24FC                                 ??_PWM_init 0060  
                       _USBCheckStdRequest 2B66                          _configDescriptor1 FD15  
                                  i2l10891 411E                                    i2l10893 414E  
                       __CFG_OSC$INTOSCPLL 000000                                 ??i2_memset 0034  
              __end_of_USBCtrlTrfTxService 3068                        _USBStdSetCfgHandler 2A8A  
                   I2C_LCD_SetCursor@F8685 01F4                            __CFG_WDTPS$1024 000000  
                                  _SPBRGH1 000F7F                              _I2C_sent_flag 001F  
                                  _SSP1ADD 000FC8                                    _SSP1BUF 000FC9  
                     terminal_operation@tx 00C5                                    _RTCVALH 000F3B  
                                  _RTCVALL 000F3A                        ?_USBCheckStdRequest 002E  
             __size_of_USBStdGetDscHandler 0132                                    _UIEbits 000F36  
                  __end_of_RTCC_from_epoch 470A                       timer1_init@prescaler 0062  
                                  _UIRbits 000F62                                    _PWM_set 1BC0  
                             PWM_set@color 0079                           __CFG_CFGPLLEN$ON 000000  
                 ??_button_timer_interrupt 0031                              _cdc_trf_state 0028  
                             PWM_set@value 0075                              ?_month_length 0066  
                      epoch_to_caltime@day 0087                        epoch_to_caltime@num 008B  
                        RTCC_from_epoch@tm 008F                                    _pCDCDst 0118  
                                  _pCDCSrc 00D8                      __size_of_getsUSBUSART 00EA  
                                  __Hparam 0000                       ?_USBStdSetCfgHandler 002E  
                                _CDCInitEP 3E9C                                    __Lparam 0000  
                        ringbuf_put_num@rb 0072                 __size_of_USBEnableEndpoint 003C  
                        ringbuf_put_str@rb 006F                                 _readBuffer 0300  
                     ??_USBCheckStdRequest 0048              __size_of_USBCtrlTrfOutHandler 005C  
                            ?_ringbuf_init 0060                                    ___awdiv 32C4  
                          __size_of___lmul 0076                                    ___awmod 3928  
                                  ___lldiv 343E                           ??_USBDeviceTasks 004B  
                          __size_of___wmul 0036                                    ___llmod 39CA  
                    ringbuf_put_num@digits 0076                                 _light_mode 00EE  
                                  ___lwdiv 3DAE                                 _light_task 17B6  
                        ??_USBStallHandler 002E                                    ___lwmod 403A  
                          __size_of_d_to_x 0028                      __end_of_terminal_task 101E  
                    __end_of_terminal_time 0CB4                       __size_of_ringbuf_pop 00CC  
                     __size_of_ringbuf_num 00EE                       __size_of_ringbuf_put 00D4  
                          __CFG_STVREN$OFF 000000                          __end_of_main_init 42EE  
                     __size_of_putUSBUSART 0022                epoch_to_caltime@month_cache 00FF  
                                  __pcinit 3884                         getsUSBUSART@buffer 0067  
                          __size_of_memset 0034                  __end_of_configDescriptor1 FD58  
                                  __ramtop 0F00                       __size_of_timer0_init 003A  
                     __size_of_timer1_init 0050                                    __ptext0 4334  
                                  __ptext1 0CB4                                    __ptext2 0000  
                                  __ptext3 0908                                    __ptext4 3FD8  
                                  __ptext5 3C1E                                    __ptext6 04AE  
                                  __ptext7 3F74                                    __ptext8 4622  
                                  __ptext9 409C                                    _inPipes 000A  
                     __size_of_timer3_init 002C                            __size_of_x_to_d 0020  
              _USBDeferOUTDataStagePackets 0022                                  _T0CONbits 000FD5  
                         _time_change_flag 00F0                           _caltime_to_epoch 101E  
                          __size_of_strcmp 005C                               __size_of_ISR 00F6  
                                _T1CONbits 000FCD                                    _dpowers FD03  
                             ??_USBSuspend 0042                    __size_of_RTCC_from_RTCC 001A  
                                _T2CONbits 000FCA                                    _isdigit 457C  
                                _T3CONbits 000F79                           ___awmod@dividend 0060  
                                _T5CONbits 000F22                            i2_USBDeviceInit 2184  
                         i2USBDeviceInit@i 0036                                    _uart_rx 014C  
                                  _uart_tx 0154                         __end_of_USB_CD_Ptr FD15  
                                  _sprintf 04AE            __size_of_USBCtrlTrfSetupHandler 0082  
                  __end_of_RTCC_to_caltime 35B6                      __size_of_get_quot_rem 00D4  
                     end_of_initialization 391E                               _getsUSBUSART 28C2  
                             _CTMUCONHbits 000FB3                         __end_of_USB_SD_Ptr FD13  
                             _CTMUCONLbits 000FB2                        _pBDTEntryEP0OutNext 001B  
                           ??_month_length 0067                                    memset@c 0062  
                                  memset@n 0064                                    memset@p 0066  
          _dummy_encapsulated_cmd_response 0144                   ?_USBStdFeatureReqHandler 002E  
                         ?_caltime_to_RTCC 0076                      ??_USBStdSetCfgHandler 0042  
                     __size_of_USB_CDC_ISR 0006                            ___lldiv@divisor 0064  
                     timer3_init@prescaler 0061                                 ?_CDCInitEP 002E  
                          ___lldiv@counter 006C                       __size_of_USB_CDC_get 002A  
                       __end_of_USBSuspend 4550                             ??_ringbuf_init 0066  
                  _USBCtrlEPAllowDataStage 3A64                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                 _USBCtrlEPServiceComplete 26E4                                    strcmp@r 0065  
               _USBStatusStageEnabledFlag1 0025                 _USBStatusStageEnabledFlag2 0026  
                       USBEnableEndpoint@p 0037                                  _PORTAbits 000F80  
                         __CFG_DSBOREN$OFF 000000                                  _RTCC_init 3F0A  
                                _RTCC_task 4372                  epoch_to_caltime@day_cache 011B  
                       ST7032_cursor@F8640 01F6                               _get_quot_rem 2DEE  
                               _print_time 3C1E                             _ringbuf_delete 4648  
                __size_of_epoch_to_caltime 01F2                           __CFG_CPUDIV$OSC1 000000  
                       _BothEP0OutUOWNsSet 001E                        RTCC_from_caltime@tm 008F  
                USBConfigureEndpoint@EPNum 0033                          __size_of_ADC_init 0020  
               ?_USBCtrlEPAllowStatusStage 002E                              ?_USB_CDC_init 002E  
                            ?_USB_CDC_send 006C                              ?_USB_CDC_task 002E  
                         ?_RTCC_from_epoch 008F        USER_USB_CALLBACK_EVENT_HANDLER@size 003E  
                                _USTATcopy 002D            __size_of_button_timer_interrupt 0282  
                  timer1_init@clock_select 0060               __end_of_USBTransferOnePacket 2D18  
                              _CCP1CONbits 000FBA                                _CCP2CONbits 000FB4  
                         __CFG_IOL1WAY$OFF 000000                                _CCP3CONbits 000F15  
                              _CCP4CONbits 000F12                          putUSBUSART@length 0062  
                      __CFG_MSSP7B_EN$MSK7 000000                             ringbuf_init@rb 0060  
                   _USBCtrlTrfSetupHandler 3D2C                __end_of_USB_CDC_buffer_init 42A2  
                           ringbuf_pop@ret 006E                    ?i2_USBTransferOnePacket 002E  
                              ?_light_task 002E                      __end_of_USBDeviceInit 203A  
                        ?_terminal_at_hand 00B5                             __end_of___lmul 3E9C  
                           __end_of___wmul 4492                             __end_of_d_to_x 4622  
                  __end_ofi2_USBDeviceInit 22BE                     __end_of_ringbuf_delete 466E  
                       ??_terminal_at_hand 00BC                                  i2memset@c 0030  
                                i2memset@n 0032                                  i2memset@p 0034  
                           __end_of_memset 44C6                                 ?_RTCC_init 002E  
                        __size_of_OSC_init 000E                                 ?_RTCC_task 002E  
                         __CFG_DSWDTEN$OFF 000000                          _USBBusIsSuspended 00E9  
                           __end_of_x_to_d 46F0                      epoch_to_caltime@month 008A  
                           __end_of_strcmp 40F8                        start_initialization 3884  
                         month_length@year 006B                    ?_USBStdGetStatusHandler 002E  
                              __end_of_ISR 10FE              USBCtrlTrfRxService@byteToRead 002F  
                        __size_of_PWM_init 00BC                                _cdc_data_rx 0200  
                           ??_USB_CDC_init 0069                                _cdc_data_tx 0240  
                        __size_ofi2_memset 002C                             ??_USB_CDC_send 006E  
                           ??_USB_CDC_task 006F               __end_of_USBConfigureEndpoint 3B90  
                         ?_RTCC_to_caltime 0062            __end_of_USBStdFeatureReqHandler 1534  
        __end_of_USBCtrlEPAllowStatusStage 32C4                   __end_of_USBCtrlEPService 3136  
                          ___llmod@divisor 0064                            ___llmod@counter 0068  
                ??_USBCtrlEPAllowDataStage 002F                                ??_CDCInitEP 003A  
                           USBDeviceInit@i 0068                     _pBDTEntryEP0OutCurrent 0019  
                  USBTransferOnePacket@dir 0060                    USBTransferOnePacket@len 0063  
           __end_ofi2_USBTransferOnePacket 3670                        ringbuf_put_num@temp 0078  
                                 ??___lmul 0075                                   ??___wmul 0064  
                      _USBStdGetDscHandler 22BE                                   ??_d_to_x 0075  
              __size_of_terminal_operation 04AE                          __CFG_ADCSEL$BIT12 000000  
                              __pdataBANK0 00FF                                __pdataBANK1 01F4  
                                 ??_memset 0066                   __size_of_ringbuf_put_num 0082  
                 __size_of_ringbuf_put_str 0064                     _button_timer_interrupt 1534  
                                 ??_x_to_d 0060                            ?_ringbuf_delete 0060  
                                 ??_strcmp 0064                       __end_of_month_length 2A8A  
                           _RTCC_from_RTCC 470A                     _USBActiveConfiguration 002C  
           __end_of_USBStdGetStatusHandler 3884                                ?_print_time 0095  
                              __pbssCOMRAM 0001                        RTCC_to_caltime@dumy 0064  
                            __pcstackBANK0 0060                              __pcstackBANK1 0187  
             __size_of_USBCtrlTrfInHandler 00BA                       __end_of_ringbuf_init 4204  
                     ?_USBStdGetDscHandler 002E                               _isdigit$6372 0061  
                                 ?_PWM_set 0075                        __size_of_light_task 0218  
               __end_of_USBWakeFromSuspend 44F8                                sprintf@flag 0091  
                           light_task@temp 008E                                sprintf@prec 0088  
                          _USBStallHandler 42EE                               _pBDTEntryOut 010A  
               __end_of_USBCheckCDCRequest 37DA                   __end_of_caltime_to_epoch 12AC  
                          millis_timer@cnt 00E3                   __size_of_USBDeviceAttach 0038  
                  USB_CDC_get@numBytesRead 006D                           ___lwdiv@dividend 0066  
                                __pintcode 1008                              __pmediumconst FD02  
                                 ?___awdiv 006D                                   ?___awmod 0060  
                                 ?___lldiv 0060                                   ?___llmod 0060  
                                 ?___lwdiv 0066                                   ?___lwmod 006D  
                   __end_of_RTCC_from_RTCC 4724                           ?i2_USBDeviceInit 002E  
                              ??_RTCC_init 0091                                ??_RTCC_task 0088  
                     _USBTransferOnePacket 2C40                                  _main_init 42A2  
                                 ?_isdigit 002E                           _epoch_to_caltime 19CE  
                     __CFG_RTCOSC$T1OSCREF 000000                                   _I2C_busy 00E7  
                                 _ADC_flag 00E6                                   _ADC_init 4690  
                              _PADCFG1bits 000F3C               __end_of_USBCtrlTrfOutHandler 41B0  
                      ringbuf_backspace@rb 0068                      ??_USBStdGetDscHandler 002E  
                              _ep_data_out 00D5                           ___lwdiv@quotient 006B  
                    terminal_at_hand@value 00BB                            ST7032_task@wait 00DB  
                                 ?_sprintf 0072               __size_of_USBCtrlTrfRxService 010C  
            USBConfigureEndpoint@direction 002E                                  d_to_x@dec 0075  
                                 _CTMUCONH 000FB3                                   _CTMUCONL 000FB2  
                                 _CTMUICON 000FB1               __size_of_USBCtrlTrfTxService 00D2  
                 ringbuf_init@internal_buf 0062                             ___wmul@product 0064  
                                 _LATBbits 000F8A                 ??_USBCtrlEPServiceComplete 002F  
                                 _IPR1bits 000F9F                                   _IPR2bits 000FA2  
                                 _PIE1bits 000F9D                                   _PIE2bits 000FA0  
                                 _IPR5bits 000F99                                   _PIE5bits 000F91  
                      __size_of_print_time 008C                                   i2u511_40 23C2  
                                 i2u511_47 23B8                                   _PIR1bits 000F9E  
                                 _PIR2bits 000FA1                                   i2u508_40 233A  
                                 i2u508_47 2330                                   i2u509_40 236A  
                                 i2u509_47 2360                                   _PIR5bits 000F98  
               epoch_to_caltime@year_cache 00F1                                   i2u740_40 175C  
                                 i2u477_40 3012                                   i2u741_40 1782  
                                 i2u477_47 3008                                   i2u479_40 3052  
                                 i2u479_47 3048                  USBCtrlEPService@setup_cnt 004A  
                                 i2u738_40 1710                                   i2u739_40 1736  
                                 i2u860_40 1084                                   i2u861_40 1086  
                                 i2u862_40 109C                                   i2u863_40 109E  
                            ??_ringbuf_pop 006A                              ??_ringbuf_num 0062  
                                 i2u864_40 10B4                                   i2u865_40 10B6  
                                 i2u857_40 105E                              ??_ringbuf_put 006B  
                                 i2u858_48 1060                                   _RCONbits 000FD0  
                            ??_putUSBUSART 0063                                   _UEP0bits 000F26  
               _USBDeferINDataStagePackets 0021                      terminal_operation@op0 00C7  
                    terminal_operation@op1 00C9                      terminal_operation@op2 00CB  
                    terminal_operation@op3 00CD                                   _SSP1CON1 000FC6  
                                 _SSP1CON2 000FC5                              ??_timer0_init 0060  
                            ??_timer1_init 0061                __size_of_USBCheckStdRequest 00DA  
                            ??_timer3_init 0060                                   _SSP1STAT 000FC7  
                                 _UCONbits 000F65                       __end_of_USB_CDC_init 4732  
                     __end_of_USB_CDC_send 46D0                       __end_of_USB_CDC_task 25F2  
                     _USBConfigureEndpoint 3AFC                                   _OSC_init 4732  
                          ?_RTCC_from_RTCC 0086           __size_of_USBStdFeatureReqHandler 0288  
                               _ADCON0bits 000FC2                                 _ADCON1bits 000FC1  
                        ___wmul@multiplier 0060                      ?_USBTransferOnePacket 0060  
                         __CFG_SOSCSEL$LOW 000000                                   _PWM_init 3382  
           button_timer_interrupt@sw_value 0030                                 ?_main_init 002E  
                            ?_CDCTxService 002E                               _RemoteWakeup 0020  
                                 i2_memset 4550                          ??_ringbuf_put_num 0077  
                        ??_ringbuf_put_str 0073                              ringbuf_pop@rb 0068  
                            ringbuf_num@rb 0060                    __end_of_USBStallHandler 4334  
                            ringbuf_put@rb 0068                          ___lmul@multiplier 006D  
                              _INTCON2bits 000FF1                                  copy_data0 3900  
              ??_USBCtrlEPAllowStatusStage 002E                __end_of_USBStdSetCfgHandler 2B66  
                     epoch_to_caltime@year 0089                              ??_USB_CDC_ISR 004C  
                   __size_of_terminal_task 036A                     __size_of_terminal_time 03AC  
                         __size_of_PWM_set 01A8                              ??_USB_CDC_get 006D  
                               _CCPR1Lbits 000FBB                                 _CCPR2Lbits 000FB5  
                               _CCPR3Lbits 000F16                         __end_of_device_dsc FDEE  
                               _CCPR4Lbits 000F13                    ?_USBCtrlTrfSetupHandler 002E  
                  USBStdGetStatusHandler@p 002F                                   __Hrparam 0000  
                     light_task@value_6083 008D                                   __Lrparam 0000  
                   USBTransferOnePacket@ep 0064                                   _SetupPkt 000D30  
                            _weekday_3char FDC0                      __size_of_month_length 00DE  
                       ringbuf_put_str@str 0071                               ??_light_task 0088  
                    ?_USBConfigureEndpoint 002E                   __size_of_caltime_to_RTCC 00D6  
                        ??_USBDeviceAttach 0060                           __size_of___awdiv 00BE  
                         __size_of___awmod 00A2                           __size_of___lldiv 00BC  
                         __size_of___llmod 009A                           __size_of___lwdiv 0078  
                         __size_of___lwmod 0062                        __end_of_ringbuf_pop 3202  
                      __end_of_ringbuf_num 28C2                        __end_of_ringbuf_put 2F96  
                      __end_of_putUSBUSART 4690                                _line_coding 0174  
                           ??_CDCTxService 0067                        __end_of_timer0_init 4424  
                    __size_of_ringbuf_init 0054                        __end_of_timer1_init 4254  
                               sprintf@len 008F                        __end_of_timer3_init 4524  
                               sprintf@val 008D                           __size_of_isdigit 002A  
                  __size_of_USBDeviceTasks 014A                            ___lwdiv@divisor 0068  
                          ___lwdiv@counter 006A                       timer0_init@prescaler 0061  
                                 __ptext10 25F2                                   __ptext11 457C  
                                 __ptext20 4724                                   __ptext12 3CAA  
                                 __ptext21 4254                                   __ptext13 403A  
                                 __ptext30 2D18                                   __ptext22 41B0  
                                 __ptext14 4648                                   __ptext31 45FA  
                                 __ptext23 1EE2                                   __ptext15 3B90  
                                 __ptext40 445C                                   __ptext32 32C4  
                                 __ptext24 4492                                   __ptext16 42A2  
                                 __ptext41 3DAE                                   __ptext33 3382  
                                 __ptext25 4424                                   __ptext17 44F8  
                                 __ptext50 1D68                                   __ptext42 24FC  
                                 __ptext34 4732                                   __ptext26 3F0A  
                                 __ptext18 4204                                   __ptext51 2C40  
                                 __ptext43 2EC2                                   __ptext35 4690  
                                 __ptext27 46F0                                   __ptext19 43EA  
                                 __ptext52 4372                                   __ptext44 3136  
                                 __ptext36 17B6                                   __ptext28 19CE  
                                 __ptext61 1534                                   __ptext53 470A  
                                 __ptext45 27D4                                   __ptext37 39CA  
                                 __ptext29 2DEE                                   __ptext70 26E4  
                                 __ptext62 4740                                   __ptext54 101E  
                                 __ptext46 46B0                                   __ptext38 343E  
                                 __ptext71 3A64                                   __ptext63 203A  
                                 __ptext55 29AC                                   __ptext47 466E  
                                 __ptext39 1BC0                                   __ptext80 45D0  
                                 __ptext72 2B66                                   __ptext64 2184  
                                 __ptext56 3928                                   __ptext48 45A6  
                                 __ptext81 3E9C                                   __ptext73 2A8A  
                                 __ptext65 44C6                                   __ptext57 3E26  
                                 __ptext49 28C2                                   __ptext82 35B6  
                                 __ptext74 4550                                   __ptext66 4524  
                                 __ptext58 34FA                                   __ptext83 43AE  
                                 __ptext75 37DA                                   __ptext67 42EE  
                                 __ptext59 46D0                                   __ptext84 3AFC  
                                 __ptext76 22BE                                   __ptext68 3068  
                                 __ptext85 4154                                   __ptext77 12AC  
                                 __ptext69 3D2C                                   __ptext86 23F0  
                                 __ptext78 40F8                                   __ptext87 3202  
                                 __ptext79 372A                                   __ptext88 3670  
                                 __ptext89 2F96                               _SSP1CON1bits 000FC6  
                             _SSP1CON2bits 000FC5                                 PWM_init@PR 0060  
                __size_of_terminal_at_hand 0062                           __size_of_sprintf 045A  
                     terminal_at_hand@hand 00B7                         __end_of_light_task 19CE  
                            __size_of_atoi 00F2             __end_of_USBCtrlTrfSetupHandler 3DAE  
                            __size_of_main 003E                          ?_USBCtrlEPService 002E  
                             _month_length 29AC                         ??_USBCtrlEPService 0048  
                 __size_of_RTCC_from_epoch 001A                        _USBCtrlTrfInHandler 3670  
                      __end_of_USB_CDC_ISR 4746                        __end_of_USB_CDC_get 45D0  
                                 _outPipes 0001                           ??_ringbuf_delete 0062  
                  ?_button_timer_interrupt 002E                       _USBCtrlTrfOutHandler 4154  
                                 int$flags 005B                               _ringbuf_init 41B0  
                                 atoi@sign 006A                  _USBCtrlEPAllowStatusStage 3202  
                                x_to_d@hex 0061                               _SSP1STATbits 000FC7  
                   ??_USBTransferOnePacket 0064                              _terminal_task 0CB4  
                            _terminal_time 0908                  _USBDeferStatusStagePacket 0023  
                             ??_print_time 0097                   CDCTxService@byte_to_send 006B  
                              ??_main_init 0091               __size_of_USB_CDC_buffer_init 004E  
                              _OSCTUNEbits 000F9B                                 _INTCONbits 000FF2  
                     ?_USBCtrlTrfInHandler 002E              USBCtrlTrfTxService@byteToSend 002E  
                                 isdigit@c 0062                                   memset@p1 0060  
                         ?_USBStallHandler 002E                   USBStdFeatureReqHandler@p 0046  
                         get_quot_rem@quot 0079                  terminal_task@command_init 00F2  
                        RTCC_to_caltime@tm 0062                         USB_CDC_send@length 006C  
                                 intlevel2 0000                                  sprintf@ap 0089  
                                sprintf@cp 008B                                  sprintf@sp 0072  
                   __size_of_USBDeviceInit 0158    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4154  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C          ??_USER_USB_CALLBACK_EVENT_HANDLER 0040  
         ?_USER_USB_CALLBACK_EVENT_HANDLER 003A            _USER_USB_CALLBACK_EVENT_HANDLER 40F8  
                         ___lwmod@dividend 006D               i2USBTransferOnePacket@handle 0033  
                         ___lldiv@dividend 0060                                 _RCSTA1bits 000FAC  
                      terminal_at_hand@max 00BA                        terminal_at_hand@min 00B9  
                        ?_caltime_to_epoch 0079                          _ringbuf_backspace 3B90  
                 __end_of_epoch_to_caltime 1BC0                   __size_of_RTCC_to_caltime 00BC  
                    __size_of_USB_CDC_init 000E                      __size_of_USB_CDC_send 0020  
                    __size_of_USB_CDC_task 00F6                         USB_CDC_task@length 0072  
                               _OSCCONbits 000FD3             __end_of_button_timer_interrupt 17B6  
               __end_of_terminal_operation 04AE                         __end_of_print_time 3CAA  
               i2USBTransferOnePacket@data 002F                         ??_caltime_to_epoch 007B  
                       ?_ringbuf_backspace 0068                     ??_USBConfigureEndpoint 002F  
                    ?_USBCtrlTrfOutHandler 002E                                _ringbuf_pop 3136  
                              _ringbuf_num 27D4                                _ringbuf_put 2EC2  
                              _putUSBUSART 466E                        _USBCtrlTrfRxService 23F0  
                              _timer0_init 43EA                         _USBWakeFromSuspend 44C6  
                              _timer1_init 4204                                _timer3_init 44F8  
                           ?_terminal_task 0187                             ?_terminal_time 00BC  
                  _USBStdFeatureReqHandler 12AC                         _USBCheckCDCRequest 372A  
                      _USBCtrlTrfTxService 2F96                        ??_ringbuf_backspace 006A  
                          get_quot_rem@div 007B                            get_quot_rem@num 007D  
                               _RTCCFGbits 000F3F                                   sprintf@c 0092  
                                 sprintf@f 0074                        ?_USBWakeFromSuspend 002E  
                                 strcmp@s1 0060                                   strcmp@s2 0062  
                               _PPSCONbits 000EBF                           ___lldiv@quotient 0068  
                          ___lwmod@divisor 006F                          caltime_to_RTCC@tm 0076  
                        ??_caltime_to_RTCC 0078                      ??_USBCtrlTrfInHandler 002F  
                    _USBAlternateInterface 00FB                            ___lwmod@counter 0071  
                       terminal_at_hand@tx 00B5                        ?_USBCheckCDCRequest 002E  
                i2USBTransferOnePacket@dir 002E                  i2USBTransferOnePacket@len 0031  
                      USBEnableEndpoint@ep 0039                            _endpoint_number 002A  
                     ?_USBCtrlTrfRxService 002E            epoch_to_caltime@day_since_epoch 0085  
                            ?_getsUSBUSART 0067                               _USB_CDC_init 4724  
                             _USB_CDC_send 46B0                               _USB_CDC_task 24FC  
                 ?_USBCtrlEPAllowDataStage 002E                       ?_USBCtrlTrfTxService 002E  
                              _USB_CDC_ISR 4740                  __end_of_ringbuf_backspace 3C1E  
             _USBStatusStageTimeoutCounter 0027                                _USB_CDC_get 45A6  
                     ??_USBWakeFromSuspend 0042                 USBTransferOnePacket@handle 0065  
                     __end_of_CDCTxService 1EE2                       ??_USBCheckCDCRequest 002E  
                               _USB_CD_Ptr FD13                           ??_RTCC_from_RTCC 0088  
