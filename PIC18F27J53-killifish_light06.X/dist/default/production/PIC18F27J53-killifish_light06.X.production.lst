

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jan 02 21:29:58 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	dabs	1,0xD00,48,_BDT
   114                           	dabs	1,0xD38,8,_CtrlTrfData
   115                           	dabs	1,0xD30,8,_SetupPkt
   116  0000                     
   117                           	psect	idataBANK0
   118  001004                     __pidataBANK0:
   119                           	opt stack 0
   120                           
   121                           ;initializer for epoch_to_caltime@month_cache
   122  001004  01                 	db	1
   123                           
   124                           	psect	idataBANK1
   125  0146D0                     __pidataBANK1:
   126                           	opt stack 0
   127                           
   128                           ;initializer for I2C_LCD_SetCursor@F8685
   129  0146D0  00                 	db	0
   130  0146D1  40                 	db	64
   131                           
   132                           ;initializer for ST7032_cursor@F8640
   133  0146D2  00                 	db	0
   134  0146D3  40                 	db	64
   135                           
   136                           	psect	mediumconst
   137  00FD02                     __pmediumconst:
   138                           	opt stack 0
   139  00FD02  00                 	db	0
   140  00FD03                     _dpowers:
   141                           	opt stack 0
   142  00FD03  0001               	dw	1
   143  00FD05  000A               	dw	10
   144  00FD07  0064               	dw	100
   145  00FD09  03E8               	dw	1000
   146  00FD0B  2710               	dw	10000
   147  00FD0D                     __end_of_dpowers:
   148                           	opt stack 0
   149  00FD0D                     _USB_SD_Ptr:
   150                           	opt stack 0
   151  00FD0D  EE                 	db	low _sd000
   152  00FD0E  FD                 	db	high _sd000
   153  00FD0F  58                 	db	low _sd001
   154  00FD10  FD                 	db	high _sd001
   155  00FD11  8C                 	db	low _sd002
   156  00FD12  FD                 	db	high _sd002
   157  00FD13                     __end_of_USB_SD_Ptr:
   158                           	opt stack 0
   159  00FD13                     _USB_CD_Ptr:
   160                           	opt stack 0
   161  00FD13  15                 	db	low _configDescriptor1
   162  00FD14  FD                 	db	high _configDescriptor1
   163  00FD15                     __end_of_USB_CD_Ptr:
   164                           	opt stack 0
   165  00FD15                     _configDescriptor1:
   166                           	opt stack 0
   167  00FD15  09                 	db	9
   168  00FD16  02                 	db	2
   169  00FD17  43                 	db	67
   170  00FD18  00                 	db	0
   171  00FD19  02                 	db	2
   172  00FD1A  01                 	db	1
   173  00FD1B  00                 	db	0
   174  00FD1C  C0                 	db	192
   175  00FD1D  32                 	db	50
   176  00FD1E  09                 	db	9
   177  00FD1F  04                 	db	4
   178  00FD20  00                 	db	0
   179  00FD21  00                 	db	0
   180  00FD22  01                 	db	1
   181  00FD23  02                 	db	2
   182  00FD24  02                 	db	2
   183  00FD25  01                 	db	1
   184  00FD26  00                 	db	0
   185  00FD27  05                 	db	5
   186  00FD28  24                 	db	36
   187  00FD29  00                 	db	0
   188  00FD2A  10                 	db	16
   189  00FD2B  01                 	db	1
   190  00FD2C  04                 	db	4
   191  00FD2D  24                 	db	36
   192  00FD2E  02                 	db	2
   193  00FD2F  02                 	db	2
   194  00FD30  05                 	db	5
   195  00FD31  24                 	db	36
   196  00FD32  06                 	db	6
   197  00FD33  00                 	db	0
   198  00FD34  01                 	db	1
   199  00FD35  05                 	db	5
   200  00FD36  24                 	db	36
   201  00FD37  01                 	db	1
   202  00FD38  00                 	db	0
   203  00FD39  01                 	db	1
   204  00FD3A  07                 	db	7
   205  00FD3B  05                 	db	5
   206  00FD3C  81                 	db	129
   207  00FD3D  03                 	db	3
   208  00FD3E  08                 	db	8
   209  00FD3F  00                 	db	0
   210  00FD40  02                 	db	2
   211  00FD41  09                 	db	9
   212  00FD42  04                 	db	4
   213  00FD43  01                 	db	1
   214  00FD44  00                 	db	0
   215  00FD45  02                 	db	2
   216  00FD46  0A                 	db	10
   217  00FD47  00                 	db	0
   218  00FD48  00                 	db	0
   219  00FD49  00                 	db	0
   220  00FD4A  07                 	db	7
   221  00FD4B  05                 	db	5
   222  00FD4C  02                 	db	2
   223  00FD4D  02                 	db	2
   224  00FD4E  40                 	db	64
   225  00FD4F  00                 	db	0
   226  00FD50  00                 	db	0
   227  00FD51  07                 	db	7
   228  00FD52  05                 	db	5
   229  00FD53  82                 	db	130
   230  00FD54  02                 	db	2
   231  00FD55  40                 	db	64
   232  00FD56  00                 	db	0
   233  00FD57  00                 	db	0
   234  00FD58                     __end_of_configDescriptor1:
   235                           	opt stack 0
   236  00FD58                     _sd001:
   237                           	opt stack 0
   238  00FD58  34                 	db	52
   239  00FD59  03                 	db	3
   240  00FD5A  004D               	dw	77
   241  00FD5C  0069               	dw	105
   242  00FD5E  0063               	dw	99
   243  00FD60  0072               	dw	114
   244  00FD62  006F               	dw	111
   245  00FD64  0063               	dw	99
   246  00FD66  0068               	dw	104
   247  00FD68  0069               	dw	105
   248  00FD6A  0070               	dw	112
   249  00FD6C  0020               	dw	32
   250  00FD6E  0054               	dw	84
   251  00FD70  0065               	dw	101
   252  00FD72  0063               	dw	99
   253  00FD74  0068               	dw	104
   254  00FD76  006E               	dw	110
   255  00FD78  006F               	dw	111
   256  00FD7A  006C               	dw	108
   257  00FD7C  006F               	dw	111
   258  00FD7E  0067               	dw	103
   259  00FD80  0079               	dw	121
   260  00FD82  0020               	dw	32
   261  00FD84  0049               	dw	73
   262  00FD86  006E               	dw	110
   263  00FD88  0063               	dw	99
   264  00FD8A  002E               	dw	46
   265  00FD8C                     __end_of_sd001:
   266                           	opt stack 0
   267  00FD8C                     _sd002:
   268                           	opt stack 0
   269  00FD8C  34                 	db	52
   270  00FD8D  03                 	db	3
   271  00FD8E  0043               	dw	67
   272  00FD90  0044               	dw	68
   273  00FD92  0043               	dw	67
   274  00FD94  0020               	dw	32
   275  00FD96  0052               	dw	82
   276  00FD98  0053               	dw	83
   277  00FD9A  002D               	dw	45
   278  00FD9C  0032               	dw	50
   279  00FD9E  0033               	dw	51
   280  00FDA0  0032               	dw	50
   281  00FDA2  0020               	dw	32
   282  00FDA4  0045               	dw	69
   283  00FDA6  006D               	dw	109
   284  00FDA8  0075               	dw	117
   285  00FDAA  006C               	dw	108
   286  00FDAC  0061               	dw	97
   287  00FDAE  0074               	dw	116
   288  00FDB0  0069               	dw	105
   289  00FDB2  006F               	dw	111
   290  00FDB4  006E               	dw	110
   291  00FDB6  0020               	dw	32
   292  00FDB8  0044               	dw	68
   293  00FDBA  0065               	dw	101
   294  00FDBC  006D               	dw	109
   295  00FDBE  006F               	dw	111
   296  00FDC0                     __end_of_sd002:
   297                           	opt stack 0
   298  00FDC0                     _weekday_3char:
   299                           	opt stack 0
   300  00FDC0  53                 	db	83
   301  00FDC1  55                 	db	85
   302  00FDC2  4E                 	db	78
   303  00FDC3  00                 	db	0
   304  00FDC4  4D                 	db	77
   305  00FDC5  4F                 	db	79
   306  00FDC6  4E                 	db	78
   307  00FDC7  00                 	db	0
   308  00FDC8  54                 	db	84
   309  00FDC9  55                 	db	85
   310  00FDCA  45                 	db	69
   311  00FDCB  00                 	db	0
   312  00FDCC  57                 	db	87
   313  00FDCD  45                 	db	69
   314  00FDCE  44                 	db	68
   315  00FDCF  00                 	db	0
   316  00FDD0  54                 	db	84
   317  00FDD1  48                 	db	72
   318  00FDD2  55                 	db	85
   319  00FDD3  00                 	db	0
   320  00FDD4  46                 	db	70
   321  00FDD5  52                 	db	82
   322  00FDD6  49                 	db	73
   323  00FDD7  00                 	db	0
   324  00FDD8  53                 	db	83
   325  00FDD9  41                 	db	65
   326  00FDDA  54                 	db	84
   327  00FDDB  00                 	db	0
   328  00FDDC                     __end_of_weekday_3char:
   329                           	opt stack 0
   330  00FDDC                     _device_dsc:
   331                           	opt stack 0
   332  00FDDC  12                 	db	18
   333  00FDDD  01                 	db	1
   334  00FDDE  0200               	dw	512
   335  00FDE0  02                 	db	2
   336  00FDE1  00                 	db	0
   337  00FDE2  00                 	db	0
   338  00FDE3  08                 	db	8
   339  00FDE4  04D8               	dw	1240
   340  00FDE6  000A               	dw	10
   341  00FDE8  0100               	dw	256
   342  00FDEA  01                 	db	1
   343  00FDEB  02                 	db	2
   344  00FDEC  00                 	db	0
   345  00FDED  01                 	db	1
   346  00FDEE                     __end_of_device_dsc:
   347                           	opt stack 0
   348  00FDEE                     _sd000:
   349                           	opt stack 0
   350  00FDEE  04                 	db	4
   351  00FDEF  03                 	db	3
   352  00FDF0  0409               	dw	1033
   353  00FDF2                     __end_of_sd000:
   354                           	opt stack 0
   355  0000                     _PPSCONbits	set	3775
   356  0000                     _RPOR3	set	3779
   357  0000                     _RPOR4	set	3780
   358  0000                     _RPOR5	set	3781
   359  0000                     _ANCON0	set	3912
   360  0000                     _ANCON1	set	3913
   361  0000                     _CCP3CONbits	set	3861
   362  0000                     _CCP4CONbits	set	3858
   363  0000                     _CCPR3L	set	3862
   364  0000                     _CCPR3Lbits	set	3862
   365  0000                     _CCPR4L	set	3859
   366  0000                     _CCPR4Lbits	set	3859
   367  0000                     _CCPTMRS0bits	set	3922
   368  0000                     _CCPTMRS1bits	set	3921
   369  0000                     _PADCFG1bits	set	3900
   370  0000                     _RTCCAL	set	3902
   371  0000                     _RTCCFGbits	set	3903
   372  0000                     _RTCVALH	set	3899
   373  0000                     _RTCVALL	set	3898
   374  0000                     _T5CONbits	set	3874
   375  0000                     _UADDR	set	3896
   376  0000                     _UCFG	set	3897
   377  0000                     _UEIE	set	3895
   378  0000                     _UEP0bits	set	3878
   379  0000                     _UIE	set	3894
   380  0000                     _UIEbits	set	3894
   381  0000                     _UEP0	set	3878
   382  0000                     _UEP1	set	3879
   383  0000                     _ADRES	set	4035
   384  0000                     _ADCON0bits	set	4034
   385  0000                     _ADCON1bits	set	4033
   386  0000                     _BAUDCON1bits	set	3966
   387  0000                     _CCP1CONbits	set	4026
   388  0000                     _CCP2CONbits	set	4020
   389  0000                     _CCPR1L	set	4027
   390  0000                     _CCPR1Lbits	set	4027
   391  0000                     _CCPR2L	set	4021
   392  0000                     _CCPR2Lbits	set	4021
   393  0000                     _CTMUCONH	set	4019
   394  0000                     _CTMUCONHbits	set	4019
   395  0000                     _CTMUCONL	set	4018
   396  0000                     _CTMUCONLbits	set	4018
   397  0000                     _CTMUICON	set	4017
   398  0000                     _EECON2	set	4007
   399  0000                     _INTCON2bits	set	4081
   400  0000                     _INTCONbits	set	4082
   401  0000                     _IPR1bits	set	3999
   402  0000                     _IPR2bits	set	4002
   403  0000                     _IPR5bits	set	3993
   404  0000                     _LATBbits	set	3978
   405  0000                     _OSCCONbits	set	4051
   406  0000                     _OSCTUNEbits	set	3995
   407  0000                     _PIE1bits	set	3997
   408  0000                     _PIE2bits	set	4000
   409  0000                     _PIE5bits	set	3985
   410  0000                     _PIR1bits	set	3998
   411  0000                     _PIR2bits	set	4001
   412  0000                     _PIR5bits	set	3992
   413  0000                     _PORTAbits	set	3968
   414  0000                     _PR2	set	4043
   415  0000                     _RCONbits	set	4048
   416  0000                     _RCREG1	set	4015
   417  0000                     _RCSTA1bits	set	4012
   418  0000                     _SPBRG1	set	4016
   419  0000                     _SPBRGH1	set	3967
   420  0000                     _SSP1ADD	set	4040
   421  0000                     _SSP1BUF	set	4041
   422  0000                     _SSP1CON1	set	4038
   423  0000                     _SSP1CON1bits	set	4038
   424  0000                     _SSP1CON2	set	4037
   425  0000                     _SSP1CON2bits	set	4037
   426  0000                     _SSP1STAT	set	4039
   427  0000                     _SSP1STATbits	set	4039
   428  0000                     _SSPBUF	set	4041
   429  0000                     _T0CONbits	set	4053
   430  0000                     _T1CONbits	set	4045
   431  0000                     _T2CONbits	set	4042
   432  0000                     _T3CONbits	set	3961
   433  0000                     _TMR1H	set	4047
   434  0000                     _TRISA	set	3986
   435  0000                     _TRISB	set	3987
   436  0000                     _TRISC	set	3988
   437  0000                     _TXREG1	set	4014
   438  0000                     _TXSTA1bits	set	4013
   439  0000                     _UCON	set	3941
   440  0000                     _UCONbits	set	3941
   441  0000                     _UEIR	set	3939
   442  0000                     _UIR	set	3938
   443  0000                     _UIRbits	set	3938
   444  0000                     _USTAT	set	3940
   445  0000                     _BCL1IF	set	32011
   446  0000                     _LATB2	set	31826
   447  0000                     _SSP1IF	set	31987
   448  00FDF2                     STR_43:
   449                           
   450                           ; BSR set to: 0
   451  00FDF2  09                 	db	9
   452  00FDF3  2A                 	db	42
   453  00FDF4  2A                 	db	42
   454  00FDF5  2A                 	db	42
   455  00FDF6  2A                 	db	42
   456  00FDF7  2A                 	db	42
   457  00FDF8  2A                 	db	42
   458  00FDF9  2A                 	db	42
   459  00FDFA  2A                 	db	42
   460  00FDFB  2A                 	db	42
   461  00FDFC  2A                 	db	42
   462  00FDFD  2A                 	db	42
   463  00FDFE  2A                 	db	42
   464  00FDFF  2A                 	db	42
   465  00FE00  2A                 	db	42
   466  00FE01  2A                 	db	42
   467  00FE02  2A                 	db	42
   468  00FE03  2A                 	db	42
   469  00FE04  2A                 	db	42
   470  00FE05  2A                 	db	42
   471  00FE06  2A                 	db	42
   472  00FE07  2A                 	db	42
   473  00FE08  2A                 	db	42
   474  00FE09  2A                 	db	42
   475  00FE0A  2A                 	db	42
   476  00FE0B  2A                 	db	42
   477  00FE0C  2A                 	db	42
   478  00FE0D  0A                 	db	10
   479  00FE0E  09                 	db	9
   480  00FE0F  2A                 	db	42
   481  00FE10  2A                 	db	42
   482  00FE11  2A                 	db	42
   483  00FE12  2A                 	db	42
   484  00FE13  20                 	db	32
   485  00FE14  4B                 	db	75	;'K'
   486  00FE15  69                 	db	105	;'i'
   487  00FE16  6C                 	db	108	;'l'
   488  00FE17  6C                 	db	108	;'l'
   489  00FE18  69                 	db	105	;'i'
   490  00FE19  66                 	db	102	;'f'
   491  00FE1A  69                 	db	105	;'i'
   492  00FE1B  73                 	db	115	;'s'
   493  00FE1C  68                 	db	104	;'h'
   494  00FE1D  20                 	db	32
   495  00FE1E  4C                 	db	76	;'L'
   496  00FE1F  69                 	db	105	;'i'
   497  00FE20  67                 	db	103	;'g'
   498  00FE21  68                 	db	104	;'h'
   499  00FE22  74                 	db	116	;'t'
   500  00FE23  20                 	db	32
   501  00FE24  20                 	db	32
   502  00FE25  2A                 	db	42
   503  00FE26  2A                 	db	42
   504  00FE27  2A                 	db	42
   505  00FE28  2A                 	db	42
   506  00FE29  0A                 	db	10
   507  00FE2A  09                 	db	9
   508  00FE2B  2A                 	db	42
   509  00FE2C  2A                 	db	42
   510  00FE2D  2A                 	db	42
   511  00FE2E  2A                 	db	42
   512  00FE2F  20                 	db	32
   513  00FE30  4D                 	db	77	;'M'
   514  00FE31  61                 	db	97	;'a'
   515  00FE32  64                 	db	100	;'d'
   516  00FE33  65                 	db	101	;'e'
   517  00FE34  20                 	db	32
   518  00FE35  62                 	db	98	;'b'
   519  00FE36  79                 	db	121	;'y'
   520  00FE37  20                 	db	32
   521  00FE38  40                 	db	64	;'@'
   522  00FE39  52                 	db	82	;'R'
   523  00FE3A  79                 	db	121	;'y'
   524  00FE3B  6F                 	db	111	;'o'
   525  00FE3C  6B                 	db	107	;'k'
   526  00FE3D  65                 	db	101	;'e'
   527  00FE3E  72                 	db	114	;'r'
   528  00FE3F  69                 	db	105	;'i'
   529  00FE40  20                 	db	32
   530  00FE41  2A                 	db	42
   531  00FE42  2A                 	db	42
   532  00FE43  2A                 	db	42
   533  00FE44  2A                 	db	42
   534  00FE45  0A                 	db	10
   535  00FE46  09                 	db	9
   536  00FE47  2A                 	db	42
   537  00FE48  2A                 	db	42
   538  00FE49  2A                 	db	42
   539  00FE4A  2A                 	db	42
   540  00FE4B  2A                 	db	42
   541  00FE4C  2A                 	db	42
   542  00FE4D  2A                 	db	42
   543  00FE4E  2A                 	db	42
   544  00FE4F  2A                 	db	42
   545  00FE50  2A                 	db	42
   546  00FE51  2A                 	db	42
   547  00FE52  2A                 	db	42
   548  00FE53  2A                 	db	42
   549  00FE54  2A                 	db	42
   550  00FE55  2A                 	db	42
   551  00FE56  2A                 	db	42
   552  00FE57  2A                 	db	42
   553  00FE58  2A                 	db	42
   554  00FE59  2A                 	db	42
   555  00FE5A  2A                 	db	42
   556  00FE5B  2A                 	db	42
   557  00FE5C  2A                 	db	42
   558  00FE5D  2A                 	db	42
   559  00FE5E  2A                 	db	42
   560  00FE5F  2A                 	db	42
   561  00FE60  2A                 	db	42
   562  00FE61  0A                 	db	10
   563  00FE62  0A                 	db	10
   564  00FE63  09                 	db	9
   565  00FE64  63                 	db	99	;'c'
   566  00FE65  6F                 	db	111	;'o'
   567  00FE66  6D                 	db	109	;'m'
   568  00FE67  6D                 	db	109	;'m'
   569  00FE68  61                 	db	97	;'a'
   570  00FE69  6E                 	db	110	;'n'
   571  00FE6A  64                 	db	100	;'d'
   572  00FE6B  20                 	db	32
   573  00FE6C  09                 	db	9
   574  00FE6D  6F                 	db	111	;'o'
   575  00FE6E  70                 	db	112	;'p'
   576  00FE6F  65                 	db	101	;'e'
   577  00FE70  6C                 	db	108	;'l'
   578  00FE71  61                 	db	97	;'a'
   579  00FE72  6E                 	db	110	;'n'
   580  00FE73  64                 	db	100	;'d'
   581  00FE74  31                 	db	49	;'1'
   582  00FE75  09                 	db	9
   583  00FE76  6F                 	db	111	;'o'
   584  00FE77  70                 	db	112	;'p'
   585  00FE78  65                 	db	101	;'e'
   586  00FE79  6C                 	db	108	;'l'
   587  00FE7A  61                 	db	97	;'a'
   588  00FE7B  6E                 	db	110	;'n'
   589  00FE7C  64                 	db	100	;'d'
   590  00FE7D  32                 	db	50	;'2'
   591  00FE7E  0A                 	db	10
   592  00FE7F  0A                 	db	10
   593  00FE80  09                 	db	9
   594  00FE81  70                 	db	112	;'p'
   595  00FE82  72                 	db	114	;'r'
   596  00FE83  69                 	db	105	;'i'
   597  00FE84  6E                 	db	110	;'n'
   598  00FE85  74                 	db	116	;'t'
   599  00FE86  5F                 	db	95	;'_'
   600  00FE87  74                 	db	116	;'t'
   601  00FE88  69                 	db	105	;'i'
   602  00FE89  6D                 	db	109	;'m'
   603  00FE8A  65                 	db	101	;'e'
   604  00FE8B  28                 	db	40
   605  00FE8C  74                 	db	116	;'t'
   606  00FE8D  29                 	db	41
   607  00FE8E  0A                 	db	10
   608  00FE8F  09                 	db	9
   609  00FE90  61                 	db	97	;'a'
   610  00FE91  64                 	db	100	;'d'
   611  00FE92  6A                 	db	106	;'j'
   612  00FE93  75                 	db	117	;'u'
   613  00FE94  73                 	db	115	;'s'
   614  00FE95  74                 	db	116	;'t'
   615  00FE96  5F                 	db	95	;'_'
   616  00FE97  74                 	db	116	;'t'
   617  00FE98  69                 	db	105	;'i'
   618  00FE99  6D                 	db	109	;'m'
   619  00FE9A  65                 	db	101	;'e'
   620  00FE9B  28                 	db	40
   621  00FE9C  61                 	db	97	;'a'
   622  00FE9D  74                 	db	116	;'t'
   623  00FE9E  29                 	db	41
   624  00FE9F  20                 	db	32
   625  00FEA0  5B                 	db	91	;'['
   626  00FEA1  68                 	db	104	;'h'
   627  00FEA2  61                 	db	97	;'a'
   628  00FEA3  6E                 	db	110	;'n'
   629  00FEA4  64                 	db	100	;'d'
   630  00FEA5  3A                 	db	58	;':'
   631  00FEA6  79                 	db	121	;'y'
   632  00FEA7  2C                 	db	44
   633  00FEA8  4D                 	db	77	;'M'
   634  00FEA9  2C                 	db	44
   635  00FEAA  64                 	db	100	;'d'
   636  00FEAB  2C                 	db	44
   637  00FEAC  68                 	db	104	;'h'
   638  00FEAD  2C                 	db	44
   639  00FEAE  6D                 	db	109	;'m'
   640  00FEAF  2C                 	db	44
   641  00FEB0  73                 	db	115	;'s'
   642  00FEB1  5D                 	db	93	;']'
   643  00FEB2  20                 	db	32
   644  00FEB3  5B                 	db	91	;'['
   645  00FEB4  76                 	db	118	;'v'
   646  00FEB5  61                 	db	97	;'a'
   647  00FEB6  6C                 	db	108	;'l'
   648  00FEB7  75                 	db	117	;'u'
   649  00FEB8  65                 	db	101	;'e'
   650  00FEB9  28                 	db	40
   651  00FEBA  64                 	db	100	;'d'
   652  00FEBB  65                 	db	101	;'e'
   653  00FEBC  63                 	db	99	;'c'
   654  00FEBD  69                 	db	105	;'i'
   655  00FEBE  6D                 	db	109	;'m'
   656  00FEBF  61                 	db	97	;'a'
   657  00FEC0  6C                 	db	108	;'l'
   658  00FEC1  29                 	db	41
   659  00FEC2  5D                 	db	93	;']'
   660  00FEC3  0A                 	db	10
   661  00FEC4  09                 	db	9
   662  00FEC5  70                 	db	112	;'p'
   663  00FEC6  77                 	db	119	;'w'
   664  00FEC7  6D                 	db	109	;'m'
   665  00FEC8  20                 	db	32
   666  00FEC9  5B                 	db	91	;'['
   667  00FECA  63                 	db	99	;'c'
   668  00FECB  6F                 	db	111	;'o'
   669  00FECC  6C                 	db	108	;'l'
   670  00FECD  6F                 	db	111	;'o'
   671  00FECE  72                 	db	114	;'r'
   672  00FECF  3A                 	db	58	;':'
   673  00FED0  52                 	db	82	;'R'
   674  00FED1  2C                 	db	44
   675  00FED2  47                 	db	71	;'G'
   676  00FED3  2C                 	db	44
   677  00FED4  42                 	db	66	;'B'
   678  00FED5  2C                 	db	44
   679  00FED6  57                 	db	87	;'W'
   680  00FED7  5D                 	db	93	;']'
   681  00FED8  20                 	db	32
   682  00FED9  5B                 	db	91	;'['
   683  00FEDA  76                 	db	118	;'v'
   684  00FEDB  61                 	db	97	;'a'
   685  00FEDC  6C                 	db	108	;'l'
   686  00FEDD  75                 	db	117	;'u'
   687  00FEDE  65                 	db	101	;'e'
   688  00FEDF  28                 	db	40
   689  00FEE0  25                 	db	37
   690  00FEE1  29                 	db	41
   691  00FEE2  3A                 	db	58	;':'
   692  00FEE3  30                 	db	48	;'0'
   693  00FEE4  7E                 	db	126
   694  00FEE5  31                 	db	49	;'1'
   695  00FEE6  30                 	db	48	;'0'
   696  00FEE7  30                 	db	48	;'0'
   697  00FEE8  5D                 	db	93	;']'
   698  00FEE9  0A                 	db	10
   699  00FEEA  09                 	db	9
   700  00FEEB  70                 	db	112	;'p'
   701  00FEEC  77                 	db	119	;'w'
   702  00FEED  6D                 	db	109	;'m'
   703  00FEEE  20                 	db	32
   704  00FEEF  63                 	db	99	;'c'
   705  00FEF0  6C                 	db	108	;'l'
   706  00FEF1  65                 	db	101	;'e'
   707  00FEF2  61                 	db	97	;'a'
   708  00FEF3  72                 	db	114	;'r'
   709  00FEF4  0A                 	db	10
   710  00FEF5  09                 	db	9
   711  00FEF6  73                 	db	115	;'s'
   712  00FEF7  65                 	db	101	;'e'
   713  00FEF8  74                 	db	116	;'t'
   714  00FEF9  20                 	db	32
   715  00FEFA  74                 	db	116	;'t'
   716  00FEFB  69                 	db	105	;'i'
   717  00FEFC  6D                 	db	109	;'m'
   718  00FEFD  65                 	db	101	;'e'
   719  00FEFE  5F                 	db	95	;'_'
   720  00FEFF  73                 	db	115	;'s'
   721  00FF00  79                 	db	121	;'y'
   722  00FF01  6E                 	db	110	;'n'
   723  00FF02  63                 	db	99	;'c'
   724  00FF03  5F                 	db	95	;'_'
   725  00FF04  6D                 	db	109	;'m'
   726  00FF05  6F                 	db	111	;'o'
   727  00FF06  64                 	db	100	;'d'
   728  00FF07  65                 	db	101	;'e'
   729  00FF08  28                 	db	40
   730  00FF09  73                 	db	115	;'s'
   731  00FF0A  79                 	db	121	;'y'
   732  00FF0B  6E                 	db	110	;'n'
   733  00FF0C  63                 	db	99	;'c'
   734  00FF0D  29                 	db	41
   735  00FF0E  0A                 	db	10
   736  00FF0F  09                 	db	9
   737  00FF10  73                 	db	115	;'s'
   738  00FF11  65                 	db	101	;'e'
   739  00FF12  74                 	db	116	;'t'
   740  00FF13  20                 	db	32
   741  00FF14  41                 	db	65	;'A'
   742  00FF15  44                 	db	68	;'D'
   743  00FF16  43                 	db	67	;'C'
   744  00FF17  5F                 	db	95	;'_'
   745  00FF18  6D                 	db	109	;'m'
   746  00FF19  6F                 	db	111	;'o'
   747  00FF1A  64                 	db	100	;'d'
   748  00FF1B  65                 	db	101	;'e'
   749  00FF1C  28                 	db	40
   750  00FF1D  61                 	db	97	;'a'
   751  00FF1E  64                 	db	100	;'d'
   752  00FF1F  63                 	db	99	;'c'
   753  00FF20  29                 	db	41
   754  00FF21  0A                 	db	10
   755  00FF22  09                 	db	9
   756  00FF23  52                 	db	82	;'R'
   757  00FF24  45                 	db	69	;'E'
   758  00FF25  53                 	db	83	;'S'
   759  00FF26  45                 	db	69	;'E'
   760  00FF27  54                 	db	84	;'T'
   761  00FF28  28                 	db	40
   762  00FF29  29                 	db	41
   763  00FF2A  3B                 	db	59	;';'
   764  00FF2B  0A                 	db	10
   765  00FF2C  00                 	db	0
   766  00FF2D                     STR_23:
   767                           
   768                           ; BSR set to: 0
   769  00FF2D  09                 	db	9
   770  00FF2E  32                 	db	50	;'2'
   771  00FF2F  30                 	db	48	;'0'
   772  00FF30  25                 	db	37
   773  00FF31  30                 	db	48	;'0'
   774  00FF32  32                 	db	50	;'2'
   775  00FF33  64                 	db	100	;'d'
   776  00FF34  2F                 	db	47
   777  00FF35  25                 	db	37
   778  00FF36  30                 	db	48	;'0'
   779  00FF37  32                 	db	50	;'2'
   780  00FF38  64                 	db	100	;'d'
   781  00FF39  2F                 	db	47
   782  00FF3A  25                 	db	37
   783  00FF3B  30                 	db	48	;'0'
   784  00FF3C  32                 	db	50	;'2'
   785  00FF3D  64                 	db	100	;'d'
   786  00FF3E  28                 	db	40
   787  00FF3F  25                 	db	37
   788  00FF40  73                 	db	115	;'s'
   789  00FF41  29                 	db	41
   790  00FF42  25                 	db	37
   791  00FF43  30                 	db	48	;'0'
   792  00FF44  32                 	db	50	;'2'
   793  00FF45  64                 	db	100	;'d'
   794  00FF46  3A                 	db	58	;':'
   795  00FF47  25                 	db	37
   796  00FF48  30                 	db	48	;'0'
   797  00FF49  32                 	db	50	;'2'
   798  00FF4A  64                 	db	100	;'d'
   799  00FF4B  2D                 	db	45
   800  00FF4C  25                 	db	37
   801  00FF4D  30                 	db	48	;'0'
   802  00FF4E  32                 	db	50	;'2'
   803  00FF4F  64                 	db	100	;'d'
   804  00FF50  0A                 	db	10
   805  00FF51  00                 	db	0
   806  00FF52                     STR_28:
   807                           
   808                           ; BSR set to: 0
   809  00FF52  61                 	db	97	;'a'
   810  00FF53  64                 	db	100	;'d'
   811  00FF54  6A                 	db	106	;'j'
   812  00FF55  75                 	db	117	;'u'
   813  00FF56  73                 	db	115	;'s'
   814  00FF57  74                 	db	116	;'t'
   815  00FF58  5F                 	db	95	;'_'
   816  00FF59  74                 	db	116	;'t'
   817  00FF5A  69                 	db	105	;'i'
   818  00FF5B  6D                 	db	109	;'m'
   819  00FF5C  65                 	db	101	;'e'
   820  00FF5D  00                 	db	0
   821  00FF5E                     STR_25:
   822                           
   823                           ; BSR set to: 0
   824  00FF5E  70                 	db	112	;'p'
   825  00FF5F  72                 	db	114	;'r'
   826  00FF60  69                 	db	105	;'i'
   827  00FF61  6E                 	db	110	;'n'
   828  00FF62  74                 	db	116	;'t'
   829  00FF63  5F                 	db	95	;'_'
   830  00FF64  74                 	db	116	;'t'
   831  00FF65  69                 	db	105	;'i'
   832  00FF66  6D                 	db	109	;'m'
   833  00FF67  65                 	db	101	;'e'
   834  00FF68  00                 	db	0
   835  00FF69                     STR_44:
   836                           
   837                           ; BSR set to: 0
   838  00FF69  52                 	db	82	;'R'
   839  00FF6A  45                 	db	69	;'E'
   840  00FF6B  53                 	db	83	;'S'
   841  00FF6C  45                 	db	69	;'E'
   842  00FF6D  54                 	db	84	;'T'
   843  00FF6E  28                 	db	40
   844  00FF6F  29                 	db	41
   845  00FF70  3B                 	db	59	;';'
   846  00FF71  00                 	db	0
   847  00FF72                     STR_45:
   848                           
   849                           ; BSR set to: 0
   850  00FF72  62                 	db	98	;'b'
   851  00FF73  6F                 	db	111	;'o'
   852  00FF74  6F                 	db	111	;'o'
   853  00FF75  74                 	db	116	;'t'
   854  00FF76  6C                 	db	108	;'l'
   855  00FF77  6F                 	db	111	;'o'
   856  00FF78  61                 	db	97	;'a'
   857  00FF79  64                 	db	100	;'d'
   858  00FF7A  00                 	db	0
   859  00FF7B                     STR_15:
   860                           
   861                           ; BSR set to: 0
   862  00FF7B  20                 	db	32
   863  00FF7C  20                 	db	32
   864  00FF7D  20                 	db	32
   865  00FF7E  20                 	db	32
   866  00FF7F  20                 	db	32
   867  00FF80  20                 	db	32
   868  00FF81  20                 	db	32
   869  00FF82  20                 	db	32
   870  00FF83  00                 	db	0
   871  00FF84                     STR_24:
   872                           
   873                           ; BSR set to: 0
   874  00FF84  09                 	db	9
   875  00FF85  65                 	db	101	;'e'
   876  00FF86  72                 	db	114	;'r'
   877  00FF87  72                 	db	114	;'r'
   878  00FF88  6F                 	db	111	;'o'
   879  00FF89  72                 	db	114	;'r'
   880  00FF8A  0A                 	db	10
   881  00FF8B  00                 	db	0
   882  00FF8C                     STR_61:
   883                           
   884                           ; BSR set to: 0
   885  00FF8C  28                 	db	40
   886  00FF8D  6E                 	db	110	;'n'
   887  00FF8E  75                 	db	117	;'u'
   888  00FF8F  6C                 	db	108	;'l'
   889  00FF90  6C                 	db	108	;'l'
   890  00FF91  29                 	db	41
   891  00FF92  00                 	db	0
   892  00FF93                     STR_40:
   893                           
   894                           ; BSR set to: 0
   895  00FF93  73                 	db	115	;'s'
   896  00FF94  65                 	db	101	;'e'
   897  00FF95  63                 	db	99	;'c'
   898  00FF96  6F                 	db	111	;'o'
   899  00FF97  6E                 	db	110	;'n'
   900  00FF98  64                 	db	100	;'d'
   901  00FF99  00                 	db	0
   902  00FF9A                     STR_38:
   903                           
   904                           ; BSR set to: 0
   905  00FF9A  6D                 	db	109	;'m'
   906  00FF9B  69                 	db	105	;'i'
   907  00FF9C  6E                 	db	110	;'n'
   908  00FF9D  75                 	db	117	;'u'
   909  00FF9E  74                 	db	116	;'t'
   910  00FF9F  65                 	db	101	;'e'
   911  00FFA0  00                 	db	0
   912  00FFA1                     STR_60:
   913                           
   914                           ; BSR set to: 0
   915  00FFA1  63                 	db	99	;'c'
   916  00FFA2  6C                 	db	108	;'l'
   917  00FFA3  65                 	db	101	;'e'
   918  00FFA4  61                 	db	97	;'a'
   919  00FFA5  72                 	db	114	;'r'
   920  00FFA6  00                 	db	0
   921  00FFA7                     STR_32:
   922                           
   923                           ; BSR set to: 0
   924  00FFA7  6D                 	db	109	;'m'
   925  00FFA8  6F                 	db	111	;'o'
   926  00FFA9  6E                 	db	110	;'n'
   927  00FFAA  74                 	db	116	;'t'
   928  00FFAB  68                 	db	104	;'h'
   929  00FFAC  00                 	db	0
   930  00FFAD                     STR_47:
   931                           
   932                           ; BSR set to: 0
   933  00FFAD  73                 	db	115	;'s'
   934  00FFAE  79                 	db	121	;'y'
   935  00FFAF  6E                 	db	110	;'n'
   936  00FFB0  63                 	db	99	;'c'
   937  00FFB1  00                 	db	0
   938  00FFB2                     STR_41:
   939                           
   940                           ; BSR set to: 0
   941  00FFB2  68                 	db	104	;'h'
   942  00FFB3  65                 	db	101	;'e'
   943  00FFB4  6C                 	db	108	;'l'
   944  00FFB5  70                 	db	112	;'p'
   945  00FFB6  00                 	db	0
   946  00FFB7                     STR_30:
   947                           
   948                           ; BSR set to: 0
   949  00FFB7  79                 	db	121	;'y'
   950  00FFB8  65                 	db	101	;'e'
   951  00FFB9  61                 	db	97	;'a'
   952  00FFBA  72                 	db	114	;'r'
   953  00FFBB  00                 	db	0
   954  00FFBC                     STR_36:
   955                           
   956                           ; BSR set to: 0
   957  00FFBC  68                 	db	104	;'h'
   958  00FFBD  6F                 	db	111	;'o'
   959  00FFBE  75                 	db	117	;'u'
   960  00FFBF  72                 	db	114	;'r'
   961  00FFC0  00                 	db	0
   962  00FFC1                     STR_1:
   963                           
   964                           ; BSR set to: 0
   965  00FFC1  25                 	db	37
   966  00FFC2  30                 	db	48	;'0'
   967  00FFC3  32                 	db	50	;'2'
   968  00FFC4  64                 	db	100	;'d'
   969  00FFC5  00                 	db	0
   970  00FFC6                     STR_49:
   971                           
   972                           ; BSR set to: 0
   973  00FFC6  41                 	db	65	;'A'
   974  00FFC7  44                 	db	68	;'D'
   975  00FFC8  43                 	db	67	;'C'
   976  00FFC9  00                 	db	0
   977  00FFCA                     STR_51:
   978                           
   979                           ; BSR set to: 0
   980  00FFCA  50                 	db	80	;'P'
   981  00FFCB  57                 	db	87	;'W'
   982  00FFCC  4D                 	db	77	;'M'
   983  00FFCD  00                 	db	0
   984  00FFCE                     STR_48:
   985                           
   986                           ; BSR set to: 0
   987  00FFCE  61                 	db	97	;'a'
   988  00FFCF  64                 	db	100	;'d'
   989  00FFD0  63                 	db	99	;'c'
   990  00FFD1  00                 	db	0
   991  00FFD2                     STR_50:
   992                           
   993                           ; BSR set to: 0
   994  00FFD2  70                 	db	112	;'p'
   995  00FFD3  77                 	db	119	;'w'
   996  00FFD4  6D                 	db	109	;'m'
   997  00FFD5  00                 	db	0
   998  00FFD6                     STR_46:
   999                           
  1000                           ; BSR set to: 0
  1001  00FFD6  73                 	db	115	;'s'
  1002  00FFD7  65                 	db	101	;'e'
  1003  00FFD8  74                 	db	116	;'t'
  1004  00FFD9  00                 	db	0
  1005  00FFDA                     STR_19:
  1006                           
  1007                           ; BSR set to: 0
  1008  00FFDA  08                 	db	8
  1009  00FFDB  20                 	db	32
  1010  00FFDC  08                 	db	8
  1011  00FFDD  00                 	db	0
  1012  00FFDE                     STR_34:
  1013                           
  1014                           ; BSR set to: 0
  1015  00FFDE  64                 	db	100	;'d'
  1016  00FFDF  61                 	db	97	;'a'
  1017  00FFE0  79                 	db	121	;'y'
  1018  00FFE1  00                 	db	0
  1019  00FFE2                     STR_27:
  1020                           
  1021                           ; BSR set to: 0
  1022  00FFE2  61                 	db	97	;'a'
  1023  00FFE3  74                 	db	116	;'t'
  1024  00FFE4  00                 	db	0
  1025  00FFE5                     STR_42:
  1026                           
  1027                           ; BSR set to: 0
  1028  00FFE5  3F                 	db	63	;'?'
  1029  00FFE6  00                 	db	0
  1030  00FFE7                     STR_57:
  1031                           
  1032                           ; BSR set to: 0
  1033  00FFE7  42                 	db	66	;'B'
  1034  00FFE8  00                 	db	0
  1035  00FFE9                     STR_55:
  1036                           
  1037                           ; BSR set to: 0
  1038  00FFE9  47                 	db	71	;'G'
  1039  00FFEA  00                 	db	0
  1040  00FFEB                     STR_53:
  1041                           
  1042                           ; BSR set to: 0
  1043  00FFEB  52                 	db	82	;'R'
  1044  00FFEC  00                 	db	0
  1045  00FFED                     STR_59:
  1046                           
  1047                           ; BSR set to: 0
  1048  00FFED  57                 	db	87	;'W'
  1049  00FFEE  00                 	db	0
  1050  00FFEF                     STR_56:
  1051                           
  1052                           ; BSR set to: 0
  1053  00FFEF  62                 	db	98	;'b'
  1054  00FFF0  00                 	db	0
  1055  00FFF1                     STR_54:
  1056                           
  1057                           ; BSR set to: 0
  1058  00FFF1  67                 	db	103	;'g'
  1059  00FFF2  00                 	db	0
  1060  00FFF3                     STR_58:
  1061                           
  1062                           ; BSR set to: 0
  1063  00FFF3  77                 	db	119	;'w'
  1064  00FFF4  00                 	db	0
  1065  00FFF5                     STR_39:
  1066                           
  1067                           ; BSR set to: 0
  1068  00FFF5  73                 	db	115	;'s'
  1069  00FFF6  00                 	db	0
  1070  00FFF7                     
  1071                           ; BSR set to: 0
  1072  00FFF7  28                 	db	40
  1073  00FFF8  00                 	db	0
  1074  00FFF9                     STR_9:
  1075                           
  1076                           ; BSR set to: 0
  1077  00FFF9  2D                 	db	45
  1078  00FFFA  00                 	db	0
  1079  00FFFB                     STR_4:
  1080                           
  1081                           ; BSR set to: 0
  1082  00FFFB  2F                 	db	47
  1083  00FFFC  00                 	db	0
  1084  00FFFD                     STR_7:
  1085                           
  1086                           ; BSR set to: 0
  1087  00FFFD  3A                 	db	58	;':'
  1088  00FFFE  00                 	db	0
  1089  0000                     
  1090                           ; #config settings
  1091  00FFFF  00                 	db	0	; dummy byte at the end
  1092  0000                     
  1093                           	psect	cinit
  1094  0138CA                     __pcinit:
  1095                           	opt stack 0
  1096  0138CA                     start_initialization:
  1097                           	opt stack 0
  1098  0138CA                     __initialization:
  1099                           	opt stack 0
  1100                           
  1101                           ; Clear objects allocated to BIGRAMl (1000 bytes)
  1102  0138CA  EE04  F0FA         	lfsr	0,__pbssBIGRAMl
  1103  0138CE  EE13 F0E8          	lfsr	1,1000
  1104  0138D2                     clear_0:
  1105  0138D2  6AEE               	clrf	postinc0,c
  1106  0138D4  50E5               	movf	postdec1,w,c
  1107  0138D6  50E1               	movf	fsr1l,w,c
  1108  0138D8  E1FC               	bnz	clear_0
  1109  0138DA  50E2               	movf	fsr1h,w,c
  1110  0138DC  E1FA               	bnz	clear_0
  1111                           
  1112                           ; Clear objects allocated to BANK4 (250 bytes)
  1113  0138DE  EE04  F000         	lfsr	0,__pbssBANK4
  1114  0138E2  0EFA               	movlw	250
  1115  0138E4                     clear_1:
  1116  0138E4  6AEE               	clrf	postinc0,c
  1117  0138E6  06E8               	decf	wreg,f,c
  1118  0138E8  E1FD               	bnz	clear_1
  1119                           
  1120                           ; Clear objects allocated to BANK3 (200 bytes)
  1121  0138EA  EE03  F000         	lfsr	0,__pbssBANK3
  1122  0138EE  0EC8               	movlw	200
  1123  0138F0                     clear_2:
  1124  0138F0  6AEE               	clrf	postinc0,c
  1125  0138F2  06E8               	decf	wreg,f,c
  1126  0138F4  E1FD               	bnz	clear_2
  1127                           
  1128                           ; Clear objects allocated to BANK2 (203 bytes)
  1129  0138F6  EE02  F000         	lfsr	0,__pbssBANK2
  1130  0138FA  0ECB               	movlw	203
  1131  0138FC                     clear_3:
  1132  0138FC  6AEE               	clrf	postinc0,c
  1133  0138FE  06E8               	decf	wreg,f,c
  1134  013900  E1FD               	bnz	clear_3
  1135                           
  1136                           ; Clear objects allocated to BANK1 (137 bytes)
  1137  013902  EE01  F000         	lfsr	0,__pbssBANK1
  1138  013906  0E89               	movlw	137
  1139  013908                     clear_4:
  1140  013908  6AEE               	clrf	postinc0,c
  1141  01390A  06E8               	decf	wreg,f,c
  1142  01390C  E1FD               	bnz	clear_4
  1143                           
  1144                           ; Clear objects allocated to BANK0 (42 bytes)
  1145  01390E  EE00  F0D5         	lfsr	0,__pbssBANK0
  1146  013912  0E2A               	movlw	42
  1147  013914                     clear_5:
  1148  013914  6AEE               	clrf	postinc0,c
  1149  013916  06E8               	decf	wreg,f,c
  1150  013918  E1FD               	bnz	clear_5
  1151                           
  1152                           ; Clear objects allocated to COMRAM (45 bytes)
  1153  01391A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1154  01391E  0E2D               	movlw	45
  1155  013920                     clear_6:
  1156  013920  6AEE               	clrf	postinc0,c
  1157  013922  06E8               	decf	wreg,f,c
  1158  013924  E1FD               	bnz	clear_6
  1159                           
  1160                           ; Initialize objects allocated to BANK1 (4 bytes)
  1161                           ; load TBLPTR registers with __pidataBANK1
  1162  013926  0ED0               	movlw	low __pidataBANK1
  1163  013928  6EF6               	movwf	tblptrl,c
  1164  01392A  0E46               	movlw	high __pidataBANK1
  1165  01392C  6EF7               	movwf	tblptrh,c
  1166  01392E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1167  013930  6EF8               	movwf	tblptru,c
  1168  013932  EE01  F0F6         	lfsr	0,__pdataBANK1
  1169  013936  EE10 F004          	lfsr	1,4
  1170  01393A                     copy_data0:
  1171  01393A  0009               	tblrd		*+
  1172  01393C  CFF5 FFEE          	movff	tablat,postinc0
  1173  013940  50E5               	movf	postdec1,w,c
  1174  013942  50E1               	movf	fsr1l,w,c
  1175  013944  E1FA               	bnz	copy_data0
  1176                           
  1177                           ; Initialize objects allocated to BANK0 (1 bytes)
  1178                           ; load TBLPTR registers with __pidataBANK0
  1179  013946  0E04               	movlw	low __pidataBANK0
  1180  013948  6EF6               	movwf	tblptrl,c
  1181  01394A  0E10               	movlw	high __pidataBANK0
  1182  01394C  6EF7               	movwf	tblptrh,c
  1183  01394E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1184  013950  6EF8               	movwf	tblptru,c
  1185  013952  0009               	tblrd		*+	;fetch initializer
  1186  013954  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1187  013958                     end_of_initialization:
  1188                           	opt stack 0
  1189  013958                     __end_of__initialization:
  1190                           	opt stack 0
  1191  013958  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1192  01395A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1193  01395C  0100               	movlb	0
  1194  01395E  EF57  F0A1         	goto	_main	;jump to C main() function
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1h	equ	0xFE2
  1203                           fsr1l	equ	0xFE1
  1204                           
  1205                           	psect	bssCOMRAM
  1206  000001                     __pbssCOMRAM:
  1207                           	opt stack 0
  1208  000001                     _outPipes:
  1209                           	opt stack 0
  1210  000001                     	ds	9
  1211  00000A                     _inPipes:
  1212                           	opt stack 0
  1213  00000A                     	ds	6
  1214  000010                     _pBDTEntryIn:
  1215                           	opt stack 0
  1216  000010                     	ds	6
  1217  000016                     _ep_data_in:
  1218                           	opt stack 0
  1219  000016                     	ds	3
  1220  000019                     _pBDTEntryEP0OutCurrent:
  1221                           	opt stack 0
  1222  000019                     	ds	2
  1223  00001B                     _pBDTEntryEP0OutNext:
  1224                           	opt stack 0
  1225  00001B                     	ds	2
  1226  00001D                     ST7032_task@st7032_state:
  1227                           	opt stack 0
  1228  00001D                     	ds	1
  1229  00001E                     _BothEP0OutUOWNsSet:
  1230                           	opt stack 0
  1231  00001E                     	ds	1
  1232  00001F                     _I2C_sent_flag:
  1233                           	opt stack 0
  1234  00001F                     	ds	1
  1235  000020                     _RemoteWakeup:
  1236                           	opt stack 0
  1237  000020                     	ds	1
  1238  000021                     _USBDeferINDataStagePackets:
  1239                           	opt stack 0
  1240  000021                     	ds	1
  1241  000022                     _USBDeferOUTDataStagePackets:
  1242                           	opt stack 0
  1243  000022                     	ds	1
  1244  000023                     _USBDeferStatusStagePacket:
  1245                           	opt stack 0
  1246  000023                     	ds	1
  1247  000024                     _USBDeviceState:
  1248                           	opt stack 0
  1249  000024                     	ds	1
  1250  000025                     _USBStatusStageEnabledFlag1:
  1251                           	opt stack 0
  1252  000025                     	ds	1
  1253  000026                     _USBStatusStageEnabledFlag2:
  1254                           	opt stack 0
  1255  000026                     	ds	1
  1256  000027                     _USBStatusStageTimeoutCounter:
  1257                           	opt stack 0
  1258  000027                     	ds	1
  1259  000028                     _cdc_trf_state:
  1260                           	opt stack 0
  1261  000028                     	ds	1
  1262  000029                     _controlTransferState:
  1263                           	opt stack 0
  1264  000029                     	ds	1
  1265  00002A                     _endpoint_number:
  1266                           	opt stack 0
  1267  00002A                     	ds	1
  1268  00002B                     _shortPacketStatus:
  1269                           	opt stack 0
  1270  00002B                     	ds	1
  1271  00002C                     _USBActiveConfiguration:
  1272                           	opt stack 0
  1273  00002C                     	ds	1
  1274  00002D                     _USTATcopy:
  1275                           	opt stack 0
  1276  00002D                     	ds	1
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           postinc0	equ	0xFEE
  1282                           wreg	equ	0xFE8
  1283                           postdec1	equ	0xFE5
  1284                           fsr1h	equ	0xFE2
  1285                           fsr1l	equ	0xFE1
  1286                           
  1287                           	psect	bssBANK0
  1288  0000D5                     __pbssBANK0:
  1289                           	opt stack 0
  1290  0000D5                     _ep_data_out:
  1291                           	opt stack 0
  1292  0000D5                     	ds	3
  1293  0000D8                     _pCDCSrc:
  1294                           	opt stack 0
  1295  0000D8                     	ds	3
  1296  0000DB                     ST7032_task@wait:
  1297                           	opt stack 0
  1298  0000DB                     	ds	2
  1299  0000DD                     _CDCDataInHandle:
  1300                           	opt stack 0
  1301  0000DD                     	ds	2
  1302  0000DF                     _CDCDataOutHandle:
  1303                           	opt stack 0
  1304  0000DF                     	ds	2
  1305  0000E1                     _pDst:
  1306                           	opt stack 0
  1307  0000E1                     	ds	2
  1308  0000E3                     millis_timer@cnt:
  1309                           	opt stack 0
  1310  0000E3                     	ds	2
  1311  0000E5                     RTCC_task@prev_halfsec:
  1312                           	opt stack 0
  1313  0000E5                     	ds	1
  1314  0000E6                     _ADC_flag:
  1315                           	opt stack 0
  1316  0000E6                     	ds	1
  1317  0000E7                     _I2C_busy:
  1318                           	opt stack 0
  1319  0000E7                     	ds	1
  1320  0000E8                     _I2C_cfct_flag:
  1321                           	opt stack 0
  1322  0000E8                     	ds	1
  1323  0000E9                     _USBBusIsSuspended:
  1324                           	opt stack 0
  1325  0000E9                     	ds	1
  1326  0000EA                     _cdc_mem_type:
  1327                           	opt stack 0
  1328  0000EA                     	ds	1
  1329  0000EB                     _cdc_rx_len:
  1330                           	opt stack 0
  1331  0000EB                     	ds	1
  1332  0000EC                     _cdc_tx_len:
  1333                           	opt stack 0
  1334  0000EC                     	ds	1
  1335  0000ED                     _control_signal_bitmap:
  1336                           	opt stack 0
  1337  0000ED                     	ds	1
  1338  0000EE                     _light_mode:
  1339                           	opt stack 0
  1340  0000EE                     	ds	1
  1341  0000EF                     _st7032_state:
  1342                           	opt stack 0
  1343  0000EF                     	ds	1
  1344  0000F0                     _time_change_flag:
  1345                           	opt stack 0
  1346  0000F0                     	ds	1
  1347  0000F1                     epoch_to_caltime@year_cache:
  1348                           	opt stack 0
  1349  0000F1                     	ds	1
  1350  0000F2                     terminal_task@command_init:
  1351                           	opt stack 0
  1352  0000F2                     	ds	1
  1353  0000F3                     _lcd_tx:
  1354                           	opt stack 0
  1355  0000F3                     	ds	8
  1356  0000FB                     _USBAlternateInterface:
  1357                           	opt stack 0
  1358  0000FB                     	ds	2
  1359  0000FD                     light_task@_6072:
  1360                           	opt stack 0
  1361  0000FD                     	ds	1
  1362  0000FE                     light_task@n:
  1363                           	opt stack 0
  1364  0000FE                     	ds	1
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec1	equ	0xFE5
  1372                           fsr1h	equ	0xFE2
  1373                           fsr1l	equ	0xFE1
  1374                           
  1375                           	psect	dataBANK0
  1376  0000FF                     __pdataBANK0:
  1377                           	opt stack 0
  1378  0000FF                     epoch_to_caltime@month_cache:
  1379                           	opt stack 0
  1380  0000FF                     	ds	1
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           fsr1h	equ	0xFE2
  1389                           fsr1l	equ	0xFE1
  1390                           
  1391                           	psect	bssBANK1
  1392  000100                     __pbssBANK1:
  1393                           	opt stack 0
  1394  000100                     _cdc_notice:
  1395                           	opt stack 0
  1396  000100                     	ds	10
  1397  00010A                     _pBDTEntryOut:
  1398                           	opt stack 0
  1399  00010A                     	ds	6
  1400  000110                     _BaudRateGen:
  1401                           	opt stack 0
  1402  000110                     	ds	4
  1403  000114                     _ms:
  1404                           	opt stack 0
  1405  000114                     	ds	4
  1406  000118                     _pCDCDst:
  1407                           	opt stack 0
  1408  000118                     	ds	3
  1409  00011B                     USBCBSendResume@delay_count:
  1410                           	opt stack 0
  1411  00011B                     	ds	2
  1412  00011D                     epoch_to_caltime@day_cache:
  1413                           	opt stack 0
  1414  00011D                     	ds	2
  1415  00011F                     terminal_task@op0:
  1416                           	opt stack 0
  1417  00011F                     	ds	25
  1418  000138                     _now:
  1419                           	opt stack 0
  1420  000138                     	ds	14
  1421  000146                     _dummy_encapsulated_cmd_response:
  1422                           	opt stack 0
  1423  000146                     	ds	8
  1424  00014E                     _uart_rx:
  1425                           	opt stack 0
  1426  00014E                     	ds	8
  1427  000156                     _uart_tx:
  1428                           	opt stack 0
  1429  000156                     	ds	8
  1430  00015E                     _usb_rx:
  1431                           	opt stack 0
  1432  00015E                     	ds	8
  1433  000166                     _usb_tx:
  1434                           	opt stack 0
  1435  000166                     	ds	8
  1436  00016E                     terminal_task@command:
  1437                           	opt stack 0
  1438  00016E                     	ds	8
  1439  000176                     _line_coding:
  1440                           	opt stack 0
  1441  000176                     	ds	7
  1442  00017D                     _sw_B:
  1443                           	opt stack 0
  1444  00017D                     	ds	4
  1445  000181                     _sw_G:
  1446                           	opt stack 0
  1447  000181                     	ds	4
  1448  000185                     _sw_R:
  1449                           	opt stack 0
  1450  000185                     	ds	4
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           fsr1h	equ	0xFE2
  1459                           fsr1l	equ	0xFE1
  1460                           
  1461                           	psect	dataBANK1
  1462  0001F6                     __pdataBANK1:
  1463                           	opt stack 0
  1464  0001F6                     I2C_LCD_SetCursor@F8685:
  1465                           	opt stack 0
  1466  0001F6                     	ds	2
  1467  0001F8                     ST7032_cursor@F8640:
  1468                           	opt stack 0
  1469  0001F8                     	ds	2
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           postinc0	equ	0xFEE
  1475                           wreg	equ	0xFE8
  1476                           postdec1	equ	0xFE5
  1477                           fsr1h	equ	0xFE2
  1478                           fsr1l	equ	0xFE1
  1479                           
  1480                           	psect	bssBANK2
  1481  000200                     __pbssBANK2:
  1482                           	opt stack 0
  1483  000200                     _cdc_data_rx:
  1484                           	opt stack 0
  1485  000200                     	ds	64
  1486  000240                     _cdc_data_tx:
  1487                           	opt stack 0
  1488  000240                     	ds	64
  1489  000280                     terminal_task@op1:
  1490                           	opt stack 0
  1491  000280                     	ds	25
  1492  000299                     terminal_task@op2:
  1493                           	opt stack 0
  1494  000299                     	ds	25
  1495  0002B2                     terminal_task@op3:
  1496                           	opt stack 0
  1497  0002B2                     	ds	25
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           postdec1	equ	0xFE5
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508                           	psect	bssBANK3
  1509  000300                     __pbssBANK3:
  1510                           	opt stack 0
  1511  000300                     ST7032_init@buf:
  1512                           	opt stack 0
  1513  000300                     	ds	200
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           postdec1	equ	0xFE5
  1521                           fsr1h	equ	0xFE2
  1522                           fsr1l	equ	0xFE1
  1523                           
  1524                           	psect	bssBANK4
  1525  000400                     __pbssBANK4:
  1526                           	opt stack 0
  1527  000400                     main_init@rxbuf:
  1528                           	opt stack 0
  1529  000400                     	ds	250
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1h	equ	0xFE2
  1538                           fsr1l	equ	0xFE1
  1539                           
  1540                           	psect	bssBIGRAMl
  1541  0004FA                     __pbssBIGRAMl:
  1542                           	opt stack 0
  1543  0004FA                     main_init@txbuf:
  1544                           	opt stack 0
  1545  0004FA                     	ds	1000
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           postdec1	equ	0xFE5
  1553                           fsr1h	equ	0xFE2
  1554                           fsr1l	equ	0xFE1
  1555                           
  1556                           	psect	cstackBANK1
  1557  000189                     __pcstackBANK1:
  1558                           	opt stack 0
  1559  000189                     terminal_task@tx:
  1560                           	opt stack 0
  1561                           
  1562                           ; 2 bytes @ 0x0
  1563  000189                     	ds	2
  1564  00018B                     terminal_task@rx:
  1565                           	opt stack 0
  1566                           
  1567                           ; 2 bytes @ 0x2
  1568  00018B                     	ds	2
  1569  00018D                     terminal_task@buf:
  1570                           	opt stack 0
  1571                           
  1572                           ; 100 bytes @ 0x4
  1573  00018D                     	ds	100
  1574  0001F1                     _terminal_task$6977:
  1575                           	opt stack 0
  1576                           
  1577                           ; 2 bytes @ 0x68
  1578  0001F1                     	ds	2
  1579  0001F3                     terminal_task@i_4621:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x6A
  1583  0001F3                     	ds	1
  1584  0001F4                     terminal_task@ascii:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x6B
  1588  0001F4                     	ds	1
  1589  0001F5                     terminal_task@i:
  1590                           	opt stack 0
  1591                           
  1592                           ; 1 bytes @ 0x6C
  1593  0001F5                     	ds	1
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1h	equ	0xFE2
  1602                           fsr1l	equ	0xFE1
  1603                           
  1604                           	psect	cstackBANK0
  1605  000060                     __pcstackBANK0:
  1606                           	opt stack 0
  1607  000060                     ??_isdigit:
  1608  000060                     ??_timer0_init:
  1609  000060                     ??_timer3_init:
  1610  000060                     ??_x_to_d:
  1611  000060                     ?_strcmp:
  1612                           	opt stack 0
  1613  000060                     ?_USBTransferOnePacket:
  1614                           	opt stack 0
  1615  000060                     ?_ringbuf_num:
  1616                           	opt stack 0
  1617  000060                     ?___wmul:
  1618                           	opt stack 0
  1619  000060                     ?___awmod:
  1620                           	opt stack 0
  1621  000060                     ?___lldiv:
  1622                           	opt stack 0
  1623  000060                     ?___llmod:
  1624                           	opt stack 0
  1625  000060                     USBTransferOnePacket@dir:
  1626                           	opt stack 0
  1627  000060                     timer1_init@clock_select:
  1628                           	opt stack 0
  1629  000060                     ADC_init@p_ref:
  1630                           	opt stack 0
  1631  000060                     _is_usb_available$5196:
  1632                           	opt stack 0
  1633  000060                     PWM_init@PR:
  1634                           	opt stack 0
  1635  000060                     putUSBUSART@data:
  1636                           	opt stack 0
  1637  000060                     ringbuf_init@rb:
  1638                           	opt stack 0
  1639  000060                     ringbuf_num@rb:
  1640                           	opt stack 0
  1641  000060                     ringbuf_delete@rb:
  1642                           	opt stack 0
  1643  000060                     ___wmul@multiplier:
  1644                           	opt stack 0
  1645  000060                     ___awmod@dividend:
  1646                           	opt stack 0
  1647  000060                     memset@p1:
  1648                           	opt stack 0
  1649  000060                     strcmp@s1:
  1650                           	opt stack 0
  1651  000060                     ___lldiv@dividend:
  1652                           	opt stack 0
  1653  000060                     ___llmod@dividend:
  1654                           	opt stack 0
  1655                           
  1656                           ; 4 bytes @ 0x0
  1657  000060                     	ds	1
  1658  000061                     ??_timer1_init:
  1659  000061                     timer0_init@prescaler:
  1660                           	opt stack 0
  1661  000061                     timer3_init@prescaler:
  1662                           	opt stack 0
  1663  000061                     x_to_d@hex:
  1664                           	opt stack 0
  1665  000061                     _isdigit$6364:
  1666                           	opt stack 0
  1667  000061                     USBTransferOnePacket@data:
  1668                           	opt stack 0
  1669                           
  1670                           ; 2 bytes @ 0x1
  1671  000061                     	ds	1
  1672  000062                     ??_ringbuf_num:
  1673  000062                     putUSBUSART@length:
  1674                           	opt stack 0
  1675  000062                     timer1_init@prescaler:
  1676                           	opt stack 0
  1677  000062                     isdigit@c:
  1678                           	opt stack 0
  1679  000062                     ringbuf_init@internal_buf:
  1680                           	opt stack 0
  1681  000062                     RTCC_to_caltime@tm:
  1682                           	opt stack 0
  1683  000062                     ___wmul@multiplicand:
  1684                           	opt stack 0
  1685  000062                     ___awmod@divisor:
  1686                           	opt stack 0
  1687  000062                     memset@c:
  1688                           	opt stack 0
  1689  000062                     strcmp@s2:
  1690                           	opt stack 0
  1691                           
  1692                           ; 2 bytes @ 0x2
  1693  000062                     	ds	1
  1694  000063                     USBTransferOnePacket@len:
  1695                           	opt stack 0
  1696                           
  1697                           ; 1 bytes @ 0x3
  1698  000063                     	ds	1
  1699  000064                     ??_strcmp:
  1700  000064                     USBTransferOnePacket@ep:
  1701                           	opt stack 0
  1702  000064                     RTCC_to_caltime@dumy:
  1703                           	opt stack 0
  1704  000064                     ___awmod@counter:
  1705                           	opt stack 0
  1706  000064                     ringbuf_init@bufsize:
  1707                           	opt stack 0
  1708  000064                     ___wmul@product:
  1709                           	opt stack 0
  1710  000064                     memset@n:
  1711                           	opt stack 0
  1712  000064                     ___lldiv@divisor:
  1713                           	opt stack 0
  1714  000064                     ___llmod@divisor:
  1715                           	opt stack 0
  1716                           
  1717                           ; 4 bytes @ 0x4
  1718  000064                     	ds	1
  1719  000065                     ___awmod@sign:
  1720                           	opt stack 0
  1721  000065                     strcmp@r:
  1722                           	opt stack 0
  1723  000065                     USBTransferOnePacket@handle:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x5
  1727  000065                     	ds	1
  1728  000066                     ?_atoi:
  1729                           	opt stack 0
  1730  000066                     ?___lwdiv:
  1731                           	opt stack 0
  1732  000066                     month_length@month:
  1733                           	opt stack 0
  1734  000066                     atoi@s:
  1735                           	opt stack 0
  1736  000066                     ___lwdiv@dividend:
  1737                           	opt stack 0
  1738  000066                     memset@p:
  1739                           	opt stack 0
  1740                           
  1741                           ; 2 bytes @ 0x6
  1742  000066                     	ds	1
  1743  000067                     ??_CDCTxService:
  1744  000067                     ??_month_length:
  1745  000067                     getsUSBUSART@buffer:
  1746                           	opt stack 0
  1747                           
  1748                           ; 2 bytes @ 0x7
  1749  000067                     	ds	1
  1750  000068                     ??_atoi:
  1751  000068                     USBDeviceInit@i:
  1752                           	opt stack 0
  1753  000068                     ___llmod@counter:
  1754                           	opt stack 0
  1755  000068                     _CDCTxService$2005:
  1756                           	opt stack 0
  1757  000068                     ringbuf_put@rb:
  1758                           	opt stack 0
  1759  000068                     ringbuf_pop@rb:
  1760                           	opt stack 0
  1761  000068                     ringbuf_backspace@rb:
  1762                           	opt stack 0
  1763  000068                     ___lwdiv@divisor:
  1764                           	opt stack 0
  1765  000068                     ___lldiv@quotient:
  1766                           	opt stack 0
  1767                           
  1768                           ; 4 bytes @ 0x8
  1769  000068                     	ds	1
  1770  000069                     getsUSBUSART@len:
  1771                           	opt stack 0
  1772                           
  1773                           ; 1 bytes @ 0x9
  1774  000069                     	ds	1
  1775  00006A                     ??_getsUSBUSART:
  1776  00006A                     ??_ringbuf_pop:
  1777  00006A                     ??_ringbuf_backspace:
  1778  00006A                     CDCTxService@i:
  1779                           	opt stack 0
  1780  00006A                     ringbuf_put@asciicode:
  1781                           	opt stack 0
  1782  00006A                     atoi@sign:
  1783                           	opt stack 0
  1784  00006A                     ___lwdiv@counter:
  1785                           	opt stack 0
  1786                           
  1787                           ; 1 bytes @ 0xA
  1788  00006A                     	ds	1
  1789  00006B                     ??_ringbuf_put:
  1790  00006B                     CDCTxService@byte_to_send:
  1791                           	opt stack 0
  1792  00006B                     month_length@year:
  1793                           	opt stack 0
  1794  00006B                     _getsUSBUSART$1957:
  1795                           	opt stack 0
  1796  00006B                     atoi@a:
  1797                           	opt stack 0
  1798  00006B                     ___lwdiv@quotient:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0xB
  1802  00006B                     	ds	1
  1803  00006C                     ___lldiv@counter:
  1804                           	opt stack 0
  1805  00006C                     put_string_usb@s:
  1806                           	opt stack 0
  1807                           
  1808                           ; 2 bytes @ 0xC
  1809  00006C                     	ds	1
  1810  00006D                     ?_get_string_usb:
  1811                           	opt stack 0
  1812  00006D                     ?___awdiv:
  1813                           	opt stack 0
  1814  00006D                     ?___lwmod:
  1815                           	opt stack 0
  1816  00006D                     ?___lmul:
  1817                           	opt stack 0
  1818  00006D                     get_string_usb@s:
  1819                           	opt stack 0
  1820  00006D                     ___awdiv@dividend:
  1821                           	opt stack 0
  1822  00006D                     ___lwmod@dividend:
  1823                           	opt stack 0
  1824  00006D                     ___lmul@multiplier:
  1825                           	opt stack 0
  1826                           
  1827                           ; 4 bytes @ 0xD
  1828  00006D                     	ds	1
  1829  00006E                     ringbuf_pop@ret:
  1830                           	opt stack 0
  1831  00006E                     put_string_usb@len:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0xE
  1835  00006E                     	ds	1
  1836  00006F                     ringbuf_put_str@rb:
  1837                           	opt stack 0
  1838  00006F                     get_string_usb@len:
  1839                           	opt stack 0
  1840  00006F                     ___awdiv@divisor:
  1841                           	opt stack 0
  1842  00006F                     ___lwmod@divisor:
  1843                           	opt stack 0
  1844                           
  1845                           ; 2 bytes @ 0xF
  1846  00006F                     	ds	1
  1847  000070                     
  1848                           ; 0 bytes @ 0x10
  1849  000070                     	ds	1
  1850  000071                     ??_get_string_usb:
  1851  000071                     ___awdiv@counter:
  1852                           	opt stack 0
  1853  000071                     ___lwmod@counter:
  1854                           	opt stack 0
  1855  000071                     ringbuf_put_str@str:
  1856                           	opt stack 0
  1857  000071                     ___lmul@multiplicand:
  1858                           	opt stack 0
  1859                           
  1860                           ; 4 bytes @ 0x11
  1861  000071                     	ds	1
  1862  000072                     ?_sprintf:
  1863                           	opt stack 0
  1864  000072                     ___awdiv@sign:
  1865                           	opt stack 0
  1866  000072                     ringbuf_put_num@rb:
  1867                           	opt stack 0
  1868  000072                     get_string_usb@rx_len:
  1869                           	opt stack 0
  1870  000072                     sprintf@sp:
  1871                           	opt stack 0
  1872                           
  1873                           ; 2 bytes @ 0x12
  1874  000072                     	ds	1
  1875  000073                     ___awdiv@quotient:
  1876                           	opt stack 0
  1877                           
  1878                           ; 2 bytes @ 0x13
  1879  000073                     	ds	1
  1880  000074                     ringbuf_put_num@value:
  1881                           	opt stack 0
  1882  000074                     USB_task@rx_len:
  1883                           	opt stack 0
  1884  000074                     sprintf@f:
  1885                           	opt stack 0
  1886                           
  1887                           ; 2 bytes @ 0x14
  1888  000074                     	ds	1
  1889  000075                     d_to_x@dec:
  1890                           	opt stack 0
  1891  000075                     PWM_set@value:
  1892                           	opt stack 0
  1893  000075                     ___lmul@product:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x15
  1897  000075                     	ds	1
  1898  000076                     ringbuf_put_num@digits:
  1899                           	opt stack 0
  1900  000076                     USB_task@data:
  1901                           	opt stack 0
  1902  000076                     caltime_to_RTCC@tm:
  1903                           	opt stack 0
  1904                           
  1905                           ; 2 bytes @ 0x16
  1906  000076                     	ds	1
  1907  000077                     ??_PWM_set:
  1908  000077                     ringbuf_put_num@i:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x17
  1912  000077                     	ds	1
  1913  000078                     ringbuf_put_num@temp:
  1914                           	opt stack 0
  1915                           
  1916                           ; 2 bytes @ 0x18
  1917  000078                     	ds	1
  1918  000079                     ?_get_quot_rem:
  1919                           	opt stack 0
  1920  000079                     PWM_set@color:
  1921                           	opt stack 0
  1922  000079                     get_quot_rem@quot:
  1923                           	opt stack 0
  1924  000079                     caltime_to_epoch@tm:
  1925                           	opt stack 0
  1926                           
  1927                           ; 2 bytes @ 0x19
  1928  000079                     	ds	2
  1929  00007B                     ??_caltime_to_epoch:
  1930  00007B                     get_quot_rem@div:
  1931                           	opt stack 0
  1932                           
  1933                           ; 1 bytes @ 0x1B
  1934  00007B                     	ds	2
  1935  00007D                     get_quot_rem@num:
  1936                           	opt stack 0
  1937                           
  1938                           ; 4 bytes @ 0x1D
  1939  00007D                     	ds	2
  1940  00007F                     caltime_to_epoch@year:
  1941                           	opt stack 0
  1942                           
  1943                           ; 1 bytes @ 0x1F
  1944  00007F                     	ds	1
  1945  000080                     caltime_to_epoch@month_3722:
  1946                           	opt stack 0
  1947                           
  1948                           ; 1 bytes @ 0x20
  1949  000080                     	ds	1
  1950  000081                     epoch_to_caltime@tm:
  1951                           	opt stack 0
  1952  000081                     caltime_to_epoch@epoch:
  1953                           	opt stack 0
  1954                           
  1955                           ; 4 bytes @ 0x21
  1956  000081                     	ds	2
  1957  000083                     ??_epoch_to_caltime:
  1958                           
  1959                           ; 0 bytes @ 0x23
  1960  000083                     	ds	1
  1961  000084                     ??_sprintf:
  1962                           
  1963                           ; 0 bytes @ 0x24
  1964  000084                     	ds	1
  1965  000085                     caltime_to_epoch@month:
  1966                           	opt stack 0
  1967  000085                     epoch_to_caltime@day_since_epoch:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0x25
  1971  000085                     	ds	1
  1972  000086                     RTCC_from_RTCC@tm:
  1973                           	opt stack 0
  1974                           
  1975                           ; 2 bytes @ 0x26
  1976  000086                     	ds	1
  1977  000087                     epoch_to_caltime@day:
  1978                           	opt stack 0
  1979                           
  1980                           ; 2 bytes @ 0x27
  1981  000087                     	ds	1
  1982  000088                     ??_light_task:
  1983  000088                     sprintf@prec:
  1984                           	opt stack 0
  1985                           
  1986                           ; 1 bytes @ 0x28
  1987  000088                     	ds	1
  1988  000089                     epoch_to_caltime@year:
  1989                           	opt stack 0
  1990  000089                     sprintf@ap:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x29
  1994  000089                     	ds	1
  1995  00008A                     epoch_to_caltime@month:
  1996                           	opt stack 0
  1997                           
  1998                           ; 1 bytes @ 0x2A
  1999  00008A                     	ds	1
  2000  00008B                     sprintf@cp:
  2001                           	opt stack 0
  2002  00008B                     epoch_to_caltime@num:
  2003                           	opt stack 0
  2004                           
  2005                           ; 4 bytes @ 0x2B
  2006  00008B                     	ds	1
  2007  00008C                     light_task@value:
  2008                           	opt stack 0
  2009                           
  2010                           ; 1 bytes @ 0x2C
  2011  00008C                     	ds	1
  2012  00008D                     light_task@value_6073:
  2013                           	opt stack 0
  2014  00008D                     sprintf@val:
  2015                           	opt stack 0
  2016                           
  2017                           ; 2 bytes @ 0x2D
  2018  00008D                     	ds	1
  2019  00008E                     light_task@temp:
  2020                           	opt stack 0
  2021                           
  2022                           ; 4 bytes @ 0x2E
  2023  00008E                     	ds	1
  2024  00008F                     RTCC_from_caltime@tm:
  2025                           	opt stack 0
  2026  00008F                     RTCC_from_epoch@tm:
  2027                           	opt stack 0
  2028  00008F                     sprintf@len:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x2F
  2032  00008F                     	ds	2
  2033  000091                     sprintf@flag:
  2034                           	opt stack 0
  2035                           
  2036                           ; 1 bytes @ 0x31
  2037  000091                     	ds	1
  2038  000092                     light_task@i:
  2039                           	opt stack 0
  2040  000092                     sprintf@c:
  2041                           	opt stack 0
  2042                           
  2043                           ; 1 bytes @ 0x32
  2044  000092                     	ds	1
  2045  000093                     sprintf@width:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0x33
  2049  000093                     	ds	2
  2050  000095                     print_time@tx:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x35
  2054  000095                     	ds	2
  2055  000097                     print_time@str:
  2056                           	opt stack 0
  2057                           
  2058                           ; 30 bytes @ 0x37
  2059  000097                     	ds	30
  2060  0000B5                     terminal_at_hand@tx:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x55
  2064  0000B5                     	ds	2
  2065  0000B7                     terminal_at_hand@hand:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x57
  2069  0000B7                     	ds	2
  2070  0000B9                     terminal_at_hand@min:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x59
  2074  0000B9                     	ds	1
  2075  0000BA                     terminal_at_hand@max:
  2076                           	opt stack 0
  2077                           
  2078                           ; 1 bytes @ 0x5A
  2079  0000BA                     	ds	1
  2080  0000BB                     terminal_at_hand@value:
  2081                           	opt stack 0
  2082                           
  2083                           ; 1 bytes @ 0x5B
  2084  0000BB                     	ds	1
  2085  0000BC                     terminal_time@tx:
  2086                           	opt stack 0
  2087                           
  2088                           ; 2 bytes @ 0x5C
  2089  0000BC                     	ds	2
  2090  0000BE                     terminal_time@op0:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x5E
  2094  0000BE                     	ds	2
  2095  0000C0                     terminal_time@op1:
  2096                           	opt stack 0
  2097                           
  2098                           ; 2 bytes @ 0x60
  2099  0000C0                     	ds	2
  2100  0000C2                     terminal_time@op2:
  2101                           	opt stack 0
  2102                           
  2103                           ; 2 bytes @ 0x62
  2104  0000C2                     	ds	2
  2105  0000C4                     _terminal_time$6978:
  2106                           	opt stack 0
  2107                           
  2108                           ; 1 bytes @ 0x64
  2109  0000C4                     	ds	1
  2110  0000C5                     terminal_operation@tx:
  2111                           	opt stack 0
  2112                           
  2113                           ; 2 bytes @ 0x65
  2114  0000C5                     	ds	2
  2115  0000C7                     terminal_operation@op0:
  2116                           	opt stack 0
  2117                           
  2118                           ; 2 bytes @ 0x67
  2119  0000C7                     	ds	2
  2120  0000C9                     terminal_operation@op1:
  2121                           	opt stack 0
  2122                           
  2123                           ; 2 bytes @ 0x69
  2124  0000C9                     	ds	2
  2125  0000CB                     terminal_operation@op2:
  2126                           	opt stack 0
  2127                           
  2128                           ; 2 bytes @ 0x6B
  2129  0000CB                     	ds	2
  2130  0000CD                     terminal_operation@op3:
  2131                           	opt stack 0
  2132                           
  2133                           ; 2 bytes @ 0x6D
  2134  0000CD                     	ds	2
  2135  0000CF                     _terminal_operation$6979:
  2136                           	opt stack 0
  2137                           
  2138                           ; 2 bytes @ 0x6F
  2139  0000CF                     	ds	2
  2140  0000D1                     _terminal_operation$6980:
  2141                           	opt stack 0
  2142                           
  2143                           ; 2 bytes @ 0x71
  2144  0000D1                     	ds	2
  2145  0000D3                     ??_terminal_task:
  2146                           
  2147                           ; 0 bytes @ 0x73
  2148  0000D3                     	ds	2
  2149  0000D5                     tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           postinc0	equ	0xFEE
  2154                           wreg	equ	0xFE8
  2155                           postdec1	equ	0xFE5
  2156                           fsr1h	equ	0xFE2
  2157                           fsr1l	equ	0xFE1
  2158                           
  2159                           ; 0 bytes @ 0x75
  2160                           
  2161                           	psect	cstackCOMRAM
  2162  00002E                     __pcstackCOMRAM:
  2163                           	opt stack 0
  2164  00002E                     ??_USBStdGetDscHandler:
  2165  00002E                     ??_USBStdGetStatusHandler:
  2166  00002E                     ?i2_USBTransferOnePacket:
  2167                           	opt stack 0
  2168  00002E                     USBConfigureEndpoint@direction:
  2169                           	opt stack 0
  2170  00002E                     USBCtrlTrfTxService@byteToSend:
  2171                           	opt stack 0
  2172  00002E                     USBCtrlTrfRxService@i:
  2173                           	opt stack 0
  2174  00002E                     i2USBTransferOnePacket@dir:
  2175                           	opt stack 0
  2176  00002E                     button_timer_interrupt@bt:
  2177                           	opt stack 0
  2178  00002E                     i2memset@p1:
  2179                           	opt stack 0
  2180                           
  2181                           ; 2 bytes @ 0x0
  2182  00002E                     	ds	1
  2183  00002F                     ??_USBConfigureEndpoint:
  2184  00002F                     USBCtrlTrfRxService@byteToRead:
  2185                           	opt stack 0
  2186  00002F                     USBCtrlTrfInHandler@lastDTS:
  2187                           	opt stack 0
  2188  00002F                     USBStdGetStatusHandler@p:
  2189                           	opt stack 0
  2190  00002F                     i2USBTransferOnePacket@data:
  2191                           	opt stack 0
  2192                           
  2193                           ; 2 bytes @ 0x1
  2194  00002F                     	ds	1
  2195  000030                     button_timer_interrupt@sw_value:
  2196                           	opt stack 0
  2197  000030                     i2memset@c:
  2198                           	opt stack 0
  2199                           
  2200                           ; 2 bytes @ 0x2
  2201  000030                     	ds	1
  2202  000031                     i2USBTransferOnePacket@len:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x3
  2206  000031                     	ds	1
  2207  000032                     i2USBTransferOnePacket@ep:
  2208                           	opt stack 0
  2209  000032                     i2memset@n:
  2210                           	opt stack 0
  2211                           
  2212                           ; 2 bytes @ 0x4
  2213  000032                     	ds	1
  2214  000033                     USBConfigureEndpoint@EPNum:
  2215                           	opt stack 0
  2216  000033                     i2USBTransferOnePacket@handle:
  2217                           	opt stack 0
  2218                           
  2219                           ; 2 bytes @ 0x5
  2220  000033                     	ds	1
  2221  000034                     USBConfigureEndpoint@handle:
  2222                           	opt stack 0
  2223  000034                     i2memset@p:
  2224                           	opt stack 0
  2225                           
  2226                           ; 2 bytes @ 0x6
  2227  000034                     	ds	2
  2228  000036                     USBEnableEndpoint@options:
  2229                           	opt stack 0
  2230  000036                     i2USBDeviceInit@i:
  2231                           	opt stack 0
  2232                           
  2233                           ; 1 bytes @ 0x8
  2234  000036                     	ds	1
  2235  000037                     USBEnableEndpoint@p:
  2236                           	opt stack 0
  2237                           
  2238                           ; 2 bytes @ 0x9
  2239  000037                     	ds	2
  2240  000039                     USBEnableEndpoint@ep:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0xB
  2244  000039                     	ds	1
  2245  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2246                           	opt stack 0
  2247                           
  2248                           ; 2 bytes @ 0xC
  2249  00003A                     	ds	2
  2250  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2251                           	opt stack 0
  2252                           
  2253                           ; 2 bytes @ 0xE
  2254  00003C                     	ds	2
  2255  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2256                           	opt stack 0
  2257                           
  2258                           ; 2 bytes @ 0x10
  2259  00003E                     	ds	2
  2260  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2261                           
  2262                           ; 0 bytes @ 0x12
  2263  000040                     	ds	2
  2264  000042                     ??_USBStdFeatureReqHandler:
  2265  000042                     USBStdSetCfgHandler@i:
  2266                           	opt stack 0
  2267                           
  2268                           ; 1 bytes @ 0x14
  2269  000042                     	ds	1
  2270  000043                     USBStdFeatureReqHandler@pUEP:
  2271                           	opt stack 0
  2272                           
  2273                           ; 2 bytes @ 0x15
  2274  000043                     	ds	2
  2275  000045                     USBStdFeatureReqHandler@current_ep_data:
  2276                           	opt stack 0
  2277                           
  2278                           ; 1 bytes @ 0x17
  2279  000045                     	ds	1
  2280  000046                     USBStdFeatureReqHandler@p:
  2281                           	opt stack 0
  2282                           
  2283                           ; 2 bytes @ 0x18
  2284  000046                     	ds	2
  2285  000048                     ??_USBCtrlEPService:
  2286  000048                     
  2287                           ; 0 bytes @ 0x1A
  2288  000048                     	ds	2
  2289  00004A                     USBCtrlEPService@setup_cnt:
  2290                           	opt stack 0
  2291                           
  2292                           ; 1 bytes @ 0x1C
  2293  00004A                     	ds	1
  2294  00004B                     USBDeviceTasks@i:
  2295                           	opt stack 0
  2296                           
  2297                           ; 1 bytes @ 0x1D
  2298  00004B                     	ds	1
  2299  00004C                     ??_ISR:
  2300                           
  2301                           ; 0 bytes @ 0x1E
  2302  00004C                     	ds	15
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           postinc0	equ	0xFEE
  2308                           wreg	equ	0xFE8
  2309                           postdec1	equ	0xFE5
  2310                           fsr1h	equ	0xFE2
  2311                           fsr1l	equ	0xFE1
  2312                           
  2313 ;;
  2314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2315 ;;
  2316 ;; *************** function _main *****************
  2317 ;; Defined at:
  2318 ;;		line 308 in file "PIC18F27J53-killifish_light06.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2  1659[None  ] int 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels required when called:   20
  2338 ;; This function calls:
  2339 ;;		_RTCC_task
  2340 ;;		_USB_task
  2341 ;;		_light_task
  2342 ;;		_main_init
  2343 ;;		_terminal_task
  2344 ;; This function is called by:
  2345 ;;		Startup code after reset
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text0
  2350  0142AE                     __ptext0:
  2351                           	opt stack 0
  2352  0142AE                     _main:
  2353                           	opt stack 11
  2354                           
  2355                           ;PIC18F27J53-killifish_light06.c: 309: main_init();
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;incstack = 0
  2359  0142AE  ECB1  F09C         	call	_main_init	;wreg free
  2360  0142B2                     l10778:
  2361                           
  2362                           ;PIC18F27J53-killifish_light06.c: 312: INTCONbits.GIE = 0;
  2363  0142B2  9EF2               	bcf	intcon,7,c	;volatile
  2364                           
  2365                           ;PIC18F27J53-killifish_light06.c: 313: USB_task();
  2366  0142B4  ECDA  F09D         	call	_USB_task	;wreg free
  2367                           
  2368                           ;PIC18F27J53-killifish_light06.c: 314: INTCONbits.GIE = 1;
  2369  0142B8  8EF2               	bsf	intcon,7,c	;volatile
  2370                           
  2371                           ;PIC18F27J53-killifish_light06.c: 316: INTCONbits.GIE = 0;
  2372  0142BA  9EF2               	bcf	intcon,7,c	;volatile
  2373                           
  2374                           ;PIC18F27J53-killifish_light06.c: 317: RTCC_task();
  2375  0142BC  EC76  F0A1         	call	_RTCC_task	;wreg free
  2376                           
  2377                           ;PIC18F27J53-killifish_light06.c: 318: INTCONbits.GIE = 1;
  2378  0142C0  8EF2               	bsf	intcon,7,c	;volatile
  2379                           
  2380                           ;PIC18F27J53-killifish_light06.c: 320: INTCONbits.GIE = 0;
  2381  0142C2  9EF2               	bcf	intcon,7,c	;volatile
  2382                           
  2383                           ;PIC18F27J53-killifish_light06.c: 321: terminal_task(&usb_tx, &usb_rx);
  2384  0142C4  0E66               	movlw	low _usb_tx
  2385  0142C6  0101               	movlb	1	; () banked
  2386  0142C8  6F89               	movwf	terminal_task@tx& (0+255),b
  2387  0142CA  0E01               	movlw	high _usb_tx
  2388  0142CC  0101               	movlb	1	; () banked
  2389  0142CE  6F8A               	movwf	(terminal_task@tx+1)& (0+255),b
  2390  0142D0  0E5E               	movlw	low _usb_rx
  2391  0142D2  0101               	movlb	1	; () banked
  2392  0142D4  6F8B               	movwf	terminal_task@rx& (0+255),b
  2393  0142D6  0E01               	movlw	high _usb_rx
  2394  0142D8  0101               	movlb	1	; () banked
  2395  0142DA  6F8C               	movwf	(terminal_task@rx+1)& (0+255),b
  2396  0142DC  EC5A  F086         	call	_terminal_task	;wreg free
  2397                           
  2398                           ;PIC18F27J53-killifish_light06.c: 322: INTCONbits.GIE = 1;
  2399  0142E0  8EF2               	bsf	intcon,7,c	;volatile
  2400                           
  2401                           ;PIC18F27J53-killifish_light06.c: 324: INTCONbits.GIE = 0;
  2402  0142E2  9EF2               	bcf	intcon,7,c	;volatile
  2403                           
  2404                           ;PIC18F27J53-killifish_light06.c: 325: light_task();
  2405  0142E4  ECDB  F08B         	call	_light_task	;wreg free
  2406                           
  2407                           ;PIC18F27J53-killifish_light06.c: 326: INTCONbits.GIE = 1;
  2408  0142E8  8EF2               	bsf	intcon,7,c	;volatile
  2409  0142EA  D7E3               	goto	l10778
  2410  0142EC                     __end_of_main:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           intcon	equ	0xFF2
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           
  2423 ;; *************** function _terminal_task *****************
  2424 ;; Defined at:
  2425 ;;		line 8 in file "../My_library/My_terminal.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2428 ;;		 -> usb_tx(8), 
  2429 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2430 ;;		 -> usb_rx(8), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  i               1  106[BANK1 ] unsigned char 
  2433 ;;  i               1  108[BANK1 ] unsigned char 
  2434 ;;  ascii           1  107[BANK1 ] unsigned char 
  2435 ;;  buf           100    4[BANK1 ] unsigned char [100]
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2445 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2448 ;;      Totals:         0       2     109       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;Total ram usage:      111 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:   19
  2452 ;; This function calls:
  2453 ;;		_ringbuf_backspace
  2454 ;;		_ringbuf_delete
  2455 ;;		_ringbuf_init
  2456 ;;		_ringbuf_num
  2457 ;;		_ringbuf_pop
  2458 ;;		_ringbuf_put
  2459 ;;		_ringbuf_put_num
  2460 ;;		_ringbuf_put_str
  2461 ;;		_terminal_operation
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text1
  2468  010CB4                     __ptext1:
  2469                           	opt stack 0
  2470  010CB4                     _terminal_task:
  2471                           	opt stack 11
  2472                           
  2473                           ;My_terminal.c: 9: static ringbuf_t command;
  2474                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2475                           ;My_terminal.c: 11: if (command_init == 0) {
  2476                           
  2477                           ;incstack = 0
  2478  010CB4  0100               	movlb	0	; () banked
  2479  010CB6  51F2               	movf	terminal_task@command_init& (0+255),w,b
  2480  010CB8  0100               	movlb	0	; () banked
  2481  010CBA  A4D8               	btfss	status,2,c
  2482  010CBC  D016               	goto	l10306
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;My_terminal.c: 12: command_init = 1;
  2486  010CBE  0E01               	movlw	1
  2487  010CC0  0100               	movlb	0	; () banked
  2488  010CC2  6FF2               	movwf	terminal_task@command_init& (0+255),b
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;My_terminal.c: 13: char buf[100];
  2492                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2493  010CC4  0E6E               	movlw	low terminal_task@command
  2494  010CC6  0100               	movlb	0	; () banked
  2495  010CC8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2496  010CCA  0E01               	movlw	high terminal_task@command
  2497  010CCC  0100               	movlb	0	; () banked
  2498  010CCE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2499  010CD0  0E8D               	movlw	low terminal_task@buf
  2500  010CD2  0100               	movlb	0	; () banked
  2501  010CD4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2502  010CD6  0E01               	movlw	high terminal_task@buf
  2503  010CD8  0100               	movlb	0	; () banked
  2504  010CDA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2505  010CDC  0E00               	movlw	0
  2506  010CDE  0100               	movlb	0	; () banked
  2507  010CE0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2508  010CE2  0E64               	movlw	100
  2509  010CE4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2510  010CE6  ECBC  F0A0         	call	_ringbuf_init	;wreg free
  2511  010CEA                     l10306:
  2512                           
  2513                           ;My_terminal.c: 15: }
  2514                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2515  010CEA  C18B  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2516  010CEE  C18C  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2517  010CF2  EC6F  F093         	call	_ringbuf_num	;wreg free
  2518  010CF6  0100               	movlb	0	; () banked
  2519  010CF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2520  010CFA  0100               	movlb	0	; () banked
  2521  010CFC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2522  010CFE  B4D8               	btfsc	status,2,c
  2523  010D00  0012               	return	
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2527  010D02  C18B  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2528  010D06  C18C  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2529  010D0A  EC20  F098         	call	_ringbuf_pop	;wreg free
  2530  010D0E  0101               	movlb	1	; () banked
  2531  010D10  6FF4               	movwf	terminal_task@ascii& (0+255),b
  2532                           
  2533                           ;My_terminal.c: 18: switch (ascii) {
  2534  010D12  D176               	goto	l10370
  2535  010D14                     l10310:
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2539  010D14  0E6E               	movlw	low terminal_task@command
  2540  010D16  0100               	movlb	0	; () banked
  2541  010D18  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2542  010D1A  0E01               	movlw	high terminal_task@command
  2543  010D1C  0100               	movlb	0	; () banked
  2544  010D1E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2545  010D20  0E00               	movlw	0
  2546  010D22  0100               	movlb	0	; () banked
  2547  010D24  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2548  010D26  ECE6  F096         	call	_ringbuf_put	;wreg free
  2549                           
  2550                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2551  010D2A  C189  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2552  010D2E  C18A  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2553  010D32  0E09               	movlw	9
  2554  010D34  0100               	movlb	0	; () banked
  2555  010D36  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2556  010D38  ECE6  F096         	call	_ringbuf_put	;wreg free
  2557                           
  2558                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2559  010D3C  0E6E               	movlw	low terminal_task@command
  2560  010D3E  0100               	movlb	0	; () banked
  2561  010D40  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2562  010D42  0E01               	movlw	high terminal_task@command
  2563  010D44  0100               	movlb	0	; () banked
  2564  010D46  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2565  010D48  EC6F  F093         	call	_ringbuf_num	;wreg free
  2566  010D4C  0EFF               	movlw	255
  2567  010D4E  0100               	movlb	0	; () banked
  2568  010D50  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2569  010D52  0101               	movlb	1	; () banked
  2570  010D54  6FF1               	movwf	_terminal_task$6977& (0+255),b
  2571  010D56  0EFF               	movlw	255
  2572  010D58  0100               	movlb	0	; () banked
  2573  010D5A  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2574  010D5C  0101               	movlb	1	; () banked
  2575  010D5E  6FF2               	movwf	(_terminal_task$6977+1)& (0+255),b
  2576                           
  2577                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2578  010D60  C189  F072         	movff	terminal_task@tx,ringbuf_put_num@rb
  2579  010D64  C18A  F073         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2580  010D68  C1F1  F074         	movff	_terminal_task$6977,ringbuf_put_num@value
  2581  010D6C  C1F2  F075         	movff	_terminal_task$6977+1,ringbuf_put_num@value+1
  2582  010D70  0E02               	movlw	2
  2583  010D72  0100               	movlb	0	; () banked
  2584  010D74  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  2585  010D76  EC67  F09E         	call	_ringbuf_put_num	;wreg free
  2586                           
  2587                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2588  010D7A  C189  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2589  010D7E  C18A  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2590  010D82  0E0A               	movlw	10
  2591  010D84  0100               	movlb	0	; () banked
  2592  010D86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2593  010D88  ECE6  F096         	call	_ringbuf_put	;wreg free
  2594                           
  2595                           ;My_terminal.c: 24: static char op0[25];
  2596                           ;My_terminal.c: 25: static char op1[25];
  2597                           ;My_terminal.c: 26: static char op2[25];
  2598                           ;My_terminal.c: 27: static char op3[25];
  2599                           ;My_terminal.c: 28: uint8_t i;
  2600                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2601  010D8C  0E00               	movlw	0
  2602  010D8E  0101               	movlb	1	; () banked
  2603  010D90  6FF5               	movwf	terminal_task@i& (0+255),b
  2604  010D92  D002               	goto	l10316
  2605  010D94                     l10314:
  2606                           
  2607                           ; BSR set to: 1
  2608  010D94  0101               	movlb	1	; () banked
  2609  010D96  2BF5               	incf	terminal_task@i& (0+255),f,b
  2610  010D98                     l10316:
  2611                           
  2612                           ; BSR set to: 1
  2613  010D98  0E6E               	movlw	low terminal_task@command
  2614  010D9A  0100               	movlb	0	; () banked
  2615  010D9C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2616  010D9E  0E01               	movlw	high terminal_task@command
  2617  010DA0  0100               	movlb	0	; () banked
  2618  010DA2  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2619  010DA4  EC20  F098         	call	_ringbuf_pop	;wreg free
  2620  010DA8  0100               	movlb	0	; () banked
  2621  010DAA  6FD3               	movwf	??_terminal_task& (0+255),b
  2622  010DAC  0101               	movlb	1	; () banked
  2623  010DAE  51F5               	movf	terminal_task@i& (0+255),w,b
  2624  010DB0  0D01               	mullw	1
  2625  010DB2  0E1F               	movlw	low terminal_task@op0
  2626  010DB4  24F3               	addwf	prodl,w,c
  2627  010DB6  6ED9               	movwf	fsr2l,c
  2628  010DB8  0E01               	movlw	high terminal_task@op0
  2629  010DBA  20F4               	addwfc	prodh,w,c
  2630  010DBC  6EDA               	movwf	fsr2h,c
  2631  010DBE  C0D3  FFDF         	movff	??_terminal_task,indf2
  2632  010DC2  50DF               	movf	indf2,w,c
  2633  010DC4  A4D8               	btfss	status,2,c
  2634  010DC6  D7E6               	goto	l10314
  2635                           
  2636                           ; BSR set to: 1
  2637                           ;My_terminal.c: 30: op0[i] = '\0';
  2638                           
  2639                           ; BSR set to: 1
  2640  010DC8  0101               	movlb	1	; () banked
  2641  010DCA  51F5               	movf	terminal_task@i& (0+255),w,b
  2642  010DCC  0D01               	mullw	1
  2643  010DCE  0E1F               	movlw	low terminal_task@op0
  2644  010DD0  24F3               	addwf	prodl,w,c
  2645  010DD2  6ED9               	movwf	fsr2l,c
  2646  010DD4  0E01               	movlw	high terminal_task@op0
  2647  010DD6  20F4               	addwfc	prodh,w,c
  2648  010DD8  6EDA               	movwf	fsr2h,c
  2649  010DDA  0E00               	movlw	0
  2650  010DDC  6EDF               	movwf	indf2,c
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2654  010DDE  0E00               	movlw	0
  2655  010DE0  0101               	movlb	1	; () banked
  2656  010DE2  6FF5               	movwf	terminal_task@i& (0+255),b
  2657  010DE4  D002               	goto	l10324
  2658  010DE6                     l10322:
  2659                           
  2660                           ; BSR set to: 1
  2661  010DE6  0101               	movlb	1	; () banked
  2662  010DE8  2BF5               	incf	terminal_task@i& (0+255),f,b
  2663  010DEA                     l10324:
  2664                           
  2665                           ; BSR set to: 1
  2666  010DEA  0E6E               	movlw	low terminal_task@command
  2667  010DEC  0100               	movlb	0	; () banked
  2668  010DEE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2669  010DF0  0E01               	movlw	high terminal_task@command
  2670  010DF2  0100               	movlb	0	; () banked
  2671  010DF4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2672  010DF6  EC20  F098         	call	_ringbuf_pop	;wreg free
  2673  010DFA  0100               	movlb	0	; () banked
  2674  010DFC  6FD3               	movwf	??_terminal_task& (0+255),b
  2675  010DFE  0101               	movlb	1	; () banked
  2676  010E00  51F5               	movf	terminal_task@i& (0+255),w,b
  2677  010E02  0D01               	mullw	1
  2678  010E04  0E80               	movlw	low terminal_task@op1
  2679  010E06  24F3               	addwf	prodl,w,c
  2680  010E08  6ED9               	movwf	fsr2l,c
  2681  010E0A  0E02               	movlw	high terminal_task@op1
  2682  010E0C  20F4               	addwfc	prodh,w,c
  2683  010E0E  6EDA               	movwf	fsr2h,c
  2684  010E10  C0D3  FFDF         	movff	??_terminal_task,indf2
  2685  010E14  50DF               	movf	indf2,w,c
  2686  010E16  A4D8               	btfss	status,2,c
  2687  010E18  D7E6               	goto	l10322
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;My_terminal.c: 32: op1[i] = '\0';
  2691                           
  2692                           ; BSR set to: 1
  2693  010E1A  0101               	movlb	1	; () banked
  2694  010E1C  51F5               	movf	terminal_task@i& (0+255),w,b
  2695  010E1E  0D01               	mullw	1
  2696  010E20  0E80               	movlw	low terminal_task@op1
  2697  010E22  24F3               	addwf	prodl,w,c
  2698  010E24  6ED9               	movwf	fsr2l,c
  2699  010E26  0E02               	movlw	high terminal_task@op1
  2700  010E28  20F4               	addwfc	prodh,w,c
  2701  010E2A  6EDA               	movwf	fsr2h,c
  2702  010E2C  0E00               	movlw	0
  2703  010E2E  6EDF               	movwf	indf2,c
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2707  010E30  0E00               	movlw	0
  2708  010E32  0101               	movlb	1	; () banked
  2709  010E34  6FF5               	movwf	terminal_task@i& (0+255),b
  2710  010E36  D002               	goto	l10332
  2711  010E38                     l10330:
  2712                           
  2713                           ; BSR set to: 1
  2714  010E38  0101               	movlb	1	; () banked
  2715  010E3A  2BF5               	incf	terminal_task@i& (0+255),f,b
  2716  010E3C                     l10332:
  2717                           
  2718                           ; BSR set to: 1
  2719  010E3C  0E6E               	movlw	low terminal_task@command
  2720  010E3E  0100               	movlb	0	; () banked
  2721  010E40  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2722  010E42  0E01               	movlw	high terminal_task@command
  2723  010E44  0100               	movlb	0	; () banked
  2724  010E46  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2725  010E48  EC20  F098         	call	_ringbuf_pop	;wreg free
  2726  010E4C  0100               	movlb	0	; () banked
  2727  010E4E  6FD3               	movwf	??_terminal_task& (0+255),b
  2728  010E50  0101               	movlb	1	; () banked
  2729  010E52  51F5               	movf	terminal_task@i& (0+255),w,b
  2730  010E54  0D01               	mullw	1
  2731  010E56  0E99               	movlw	low terminal_task@op2
  2732  010E58  24F3               	addwf	prodl,w,c
  2733  010E5A  6ED9               	movwf	fsr2l,c
  2734  010E5C  0E02               	movlw	high terminal_task@op2
  2735  010E5E  20F4               	addwfc	prodh,w,c
  2736  010E60  6EDA               	movwf	fsr2h,c
  2737  010E62  C0D3  FFDF         	movff	??_terminal_task,indf2
  2738  010E66  50DF               	movf	indf2,w,c
  2739  010E68  A4D8               	btfss	status,2,c
  2740  010E6A  D7E6               	goto	l10330
  2741                           
  2742                           ; BSR set to: 1
  2743                           ;My_terminal.c: 34: op2[i] = '\0';
  2744                           
  2745                           ; BSR set to: 1
  2746  010E6C  0101               	movlb	1	; () banked
  2747  010E6E  51F5               	movf	terminal_task@i& (0+255),w,b
  2748  010E70  0D01               	mullw	1
  2749  010E72  0E99               	movlw	low terminal_task@op2
  2750  010E74  24F3               	addwf	prodl,w,c
  2751  010E76  6ED9               	movwf	fsr2l,c
  2752  010E78  0E02               	movlw	high terminal_task@op2
  2753  010E7A  20F4               	addwfc	prodh,w,c
  2754  010E7C  6EDA               	movwf	fsr2h,c
  2755  010E7E  0E00               	movlw	0
  2756  010E80  6EDF               	movwf	indf2,c
  2757                           
  2758                           ; BSR set to: 1
  2759                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2760  010E82  0E00               	movlw	0
  2761  010E84  0101               	movlb	1	; () banked
  2762  010E86  6FF5               	movwf	terminal_task@i& (0+255),b
  2763  010E88  D002               	goto	l10340
  2764  010E8A                     l10338:
  2765                           
  2766                           ; BSR set to: 1
  2767  010E8A  0101               	movlb	1	; () banked
  2768  010E8C  2BF5               	incf	terminal_task@i& (0+255),f,b
  2769  010E8E                     l10340:
  2770                           
  2771                           ; BSR set to: 1
  2772  010E8E  0E6E               	movlw	low terminal_task@command
  2773  010E90  0100               	movlb	0	; () banked
  2774  010E92  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2775  010E94  0E01               	movlw	high terminal_task@command
  2776  010E96  0100               	movlb	0	; () banked
  2777  010E98  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2778  010E9A  EC20  F098         	call	_ringbuf_pop	;wreg free
  2779  010E9E  0100               	movlb	0	; () banked
  2780  010EA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2781  010EA2  0101               	movlb	1	; () banked
  2782  010EA4  51F5               	movf	terminal_task@i& (0+255),w,b
  2783  010EA6  0D01               	mullw	1
  2784  010EA8  0EB2               	movlw	low terminal_task@op3
  2785  010EAA  24F3               	addwf	prodl,w,c
  2786  010EAC  6ED9               	movwf	fsr2l,c
  2787  010EAE  0E02               	movlw	high terminal_task@op3
  2788  010EB0  20F4               	addwfc	prodh,w,c
  2789  010EB2  6EDA               	movwf	fsr2h,c
  2790  010EB4  C0D3  FFDF         	movff	??_terminal_task,indf2
  2791  010EB8  50DF               	movf	indf2,w,c
  2792  010EBA  A4D8               	btfss	status,2,c
  2793  010EBC  D7E6               	goto	l10338
  2794                           
  2795                           ; BSR set to: 1
  2796                           ;My_terminal.c: 36: op3[i] = '\0';
  2797                           
  2798                           ; BSR set to: 1
  2799  010EBE  0101               	movlb	1	; () banked
  2800  010EC0  51F5               	movf	terminal_task@i& (0+255),w,b
  2801  010EC2  0D01               	mullw	1
  2802  010EC4  0EB2               	movlw	low terminal_task@op3
  2803  010EC6  24F3               	addwf	prodl,w,c
  2804  010EC8  6ED9               	movwf	fsr2l,c
  2805  010ECA  0E02               	movlw	high terminal_task@op3
  2806  010ECC  20F4               	addwfc	prodh,w,c
  2807  010ECE  6EDA               	movwf	fsr2h,c
  2808  010ED0  0E00               	movlw	0
  2809  010ED2  6EDF               	movwf	indf2,c
  2810                           
  2811                           ; BSR set to: 1
  2812                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2813  010ED4  C189  F0C5         	movff	terminal_task@tx,terminal_operation@tx
  2814  010ED8  C18A  F0C6         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2815  010EDC  0E1F               	movlw	low terminal_task@op0
  2816  010EDE  0100               	movlb	0	; () banked
  2817  010EE0  6FC7               	movwf	terminal_operation@op0& (0+255),b
  2818  010EE2  0E01               	movlw	high terminal_task@op0
  2819  010EE4  0100               	movlb	0	; () banked
  2820  010EE6  6FC8               	movwf	(terminal_operation@op0+1)& (0+255),b
  2821  010EE8  0E80               	movlw	low terminal_task@op1
  2822  010EEA  0100               	movlb	0	; () banked
  2823  010EEC  6FC9               	movwf	terminal_operation@op1& (0+255),b
  2824  010EEE  0E02               	movlw	high terminal_task@op1
  2825  010EF0  0100               	movlb	0	; () banked
  2826  010EF2  6FCA               	movwf	(terminal_operation@op1+1)& (0+255),b
  2827  010EF4  0E99               	movlw	low terminal_task@op2
  2828  010EF6  0100               	movlb	0	; () banked
  2829  010EF8  6FCB               	movwf	terminal_operation@op2& (0+255),b
  2830  010EFA  0E02               	movlw	high terminal_task@op2
  2831  010EFC  0100               	movlb	0	; () banked
  2832  010EFE  6FCC               	movwf	(terminal_operation@op2+1)& (0+255),b
  2833  010F00  0EB2               	movlw	low terminal_task@op3
  2834  010F02  0100               	movlb	0	; () banked
  2835  010F04  6FCD               	movwf	terminal_operation@op3& (0+255),b
  2836  010F06  0E02               	movlw	high terminal_task@op3
  2837  010F08  0100               	movlb	0	; () banked
  2838  010F0A  6FCE               	movwf	(terminal_operation@op3+1)& (0+255),b
  2839  010F0C  EC00  F080         	call	_terminal_operation	;wreg free
  2840                           
  2841                           ;My_terminal.c: 38: break;
  2842  010F10  0012               	return	
  2843  010F12                     l10346:
  2844                           
  2845                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2846  010F12  0E6E               	movlw	low terminal_task@command
  2847  010F14  0100               	movlb	0	; () banked
  2848  010F16  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2849  010F18  0E01               	movlw	high terminal_task@command
  2850  010F1A  0100               	movlb	0	; () banked
  2851  010F1C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2852  010F1E  0E00               	movlw	0
  2853  010F20  0100               	movlb	0	; () banked
  2854  010F22  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2855  010F24  ECE6  F096         	call	_ringbuf_put	;wreg free
  2856                           
  2857                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2858  010F28  C189  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2859  010F2C  C18A  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2860  010F30  0E20               	movlw	32
  2861  010F32  0100               	movlb	0	; () banked
  2862  010F34  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2863  010F36  ECE6  F096         	call	_ringbuf_put	;wreg free
  2864                           
  2865                           ;My_terminal.c: 42: break;
  2866  010F3A  0012               	return	
  2867  010F3C                     l10348:
  2868                           
  2869                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2870  010F3C  0E6E               	movlw	low terminal_task@command
  2871  010F3E  0100               	movlb	0	; () banked
  2872  010F40  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2873  010F42  0E01               	movlw	high terminal_task@command
  2874  010F44  0100               	movlb	0	; () banked
  2875  010F46  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2876  010F48  EC93  F09D         	call	_ringbuf_backspace	;wreg free
  2877                           
  2878                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2879  010F4C  C189  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2880  010F50  C18A  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2881  010F54  0EDA               	movlw	low STR_19
  2882  010F56  0100               	movlb	0	; () banked
  2883  010F58  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2884  010F5A  0EFF               	movlw	high STR_19
  2885  010F5C  0100               	movlb	0	; () banked
  2886  010F5E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2887  010F60  ECCC  F09F         	call	_ringbuf_put_str	;wreg free
  2888                           
  2889                           ;My_terminal.c: 46: break;
  2890  010F64  0012               	return	
  2891  010F66                     l10352:
  2892                           
  2893                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2894  010F66  0E00               	movlw	0
  2895  010F68  0101               	movlb	1	; () banked
  2896  010F6A  6FF3               	movwf	terminal_task@i_4621& (0+255),b
  2897  010F6C  D00E               	goto	l10358
  2898  010F6E                     l10354:
  2899  010F6E  C189  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2900  010F72  C18A  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2901  010F76  0EDA               	movlw	low STR_19
  2902  010F78  0100               	movlb	0	; () banked
  2903  010F7A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2904  010F7C  0EFF               	movlw	high STR_19
  2905  010F7E  0100               	movlb	0	; () banked
  2906  010F80  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2907  010F82  ECCC  F09F         	call	_ringbuf_put_str	;wreg free
  2908  010F86  0101               	movlb	1	; () banked
  2909  010F88  2BF3               	incf	terminal_task@i_4621& (0+255),f,b
  2910  010F8A                     l10358:
  2911                           
  2912                           ; BSR set to: 1
  2913  010F8A  0E6E               	movlw	low terminal_task@command
  2914  010F8C  0100               	movlb	0	; () banked
  2915  010F8E  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2916  010F90  0E01               	movlw	high terminal_task@command
  2917  010F92  0100               	movlb	0	; () banked
  2918  010F94  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2919  010F96  EC6F  F093         	call	_ringbuf_num	;wreg free
  2920  010F9A  0101               	movlb	1	; () banked
  2921  010F9C  51F3               	movf	terminal_task@i_4621& (0+255),w,b
  2922  010F9E  0100               	movlb	0	; () banked
  2923  010FA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2924  010FA2  6BD4               	clrf	(??_terminal_task+1)& (0+255),b
  2925  010FA4  0100               	movlb	0	; () banked
  2926  010FA6  5160               	movf	?_ringbuf_num& (0+255),w,b
  2927  010FA8  0100               	movlb	0	; () banked
  2928  010FAA  5DD3               	subwf	??_terminal_task& (0+255),w,b
  2929  010FAC  0100               	movlb	0	; () banked
  2930  010FAE  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2931  010FB0  0100               	movlb	0	; () banked
  2932  010FB2  59D4               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2933  010FB4  A0D8               	btfss	status,0,c
  2934  010FB6  D7DB               	goto	l10354
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2938                           
  2939                           ; BSR set to: 0
  2940  010FB8  0E6E               	movlw	low terminal_task@command
  2941  010FBA  0100               	movlb	0	; () banked
  2942  010FBC  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2943  010FBE  0E01               	movlw	high terminal_task@command
  2944  010FC0  0100               	movlb	0	; () banked
  2945  010FC2  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2946  010FC4  ECE4  F0A2         	call	_ringbuf_delete	;wreg free
  2947                           
  2948                           ;My_terminal.c: 50: break;
  2949  010FC8  0012               	return	
  2950  010FCA                     l10362:
  2951                           
  2952                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2953  010FCA  0E1F               	movlw	31
  2954  010FCC  0101               	movlb	1	; () banked
  2955  010FCE  65F4               	cpfsgt	terminal_task@ascii& (0+255),b
  2956  010FD0  0012               	return	
  2957                           
  2958                           ; BSR set to: 1
  2959  010FD2  0E7F               	movlw	127
  2960  010FD4  0101               	movlb	1	; () banked
  2961  010FD6  61F4               	cpfslt	terminal_task@ascii& (0+255),b
  2962  010FD8  0012               	return	
  2963                           
  2964                           ; BSR set to: 1
  2965                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2966  010FDA  0E6E               	movlw	low terminal_task@command
  2967  010FDC  0100               	movlb	0	; () banked
  2968  010FDE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2969  010FE0  0E01               	movlw	high terminal_task@command
  2970  010FE2  0100               	movlb	0	; () banked
  2971  010FE4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2972  010FE6  C1F4  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2973  010FEA  ECE6  F096         	call	_ringbuf_put	;wreg free
  2974                           
  2975                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2976  010FEE  C189  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2977  010FF2  C18A  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2978  010FF6  C1F4  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2979  010FFA  ECE6  F096         	call	_ringbuf_put	;wreg free
  2980                           
  2981                           ;My_terminal.c: 57: }
  2982                           
  2983                           ;My_terminal.c: 55: }
  2984                           ;My_terminal.c: 56: break;
  2985  010FFE  0012               	return	
  2986  011000                     l10370:
  2987  011000  0101               	movlb	1	; () banked
  2988  011002  51F4               	movf	terminal_task@ascii& (0+255),w,b
  2989                           
  2990                           ; Switch size 1, requested type "space"
  2991                           ; Number of cases is 4, Range of values is 8 to 127
  2992                           ; switch strategies available:
  2993                           ; Name         Instructions Cycles
  2994                           ; simple_byte           13     7 (average)
  2995                           ;	Chosen strategy is simple_byte
  2996  011004  0A08               	xorlw	8	; case 8
  2997  011006  B4D8               	btfsc	status,2,c
  2998  011008  D799               	goto	l10348
  2999  01100A  0A05               	xorlw	5	; case 13
  3000  01100C  B4D8               	btfsc	status,2,c
  3001  01100E  D682               	goto	l10310
  3002  011010  0A2D               	xorlw	45	; case 32
  3003  011012  B4D8               	btfsc	status,2,c
  3004  011014  D77E               	goto	l10346
  3005  011016  0A5F               	xorlw	95	; case 127
  3006  011018  B4D8               	btfsc	status,2,c
  3007  01101A  D7A5               	goto	l10352
  3008  01101C  D7D6               	goto	l10362
  3009  01101E                     __end_of_terminal_task:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           prodh	equ	0xFF4
  3016                           prodl	equ	0xFF3
  3017                           intcon	equ	0xFF2
  3018                           postinc0	equ	0xFEE
  3019                           wreg	equ	0xFE8
  3020                           postdec1	equ	0xFE5
  3021                           fsr1h	equ	0xFE2
  3022                           fsr1l	equ	0xFE1
  3023                           indf2	equ	0xFDF
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8
  3027                           
  3028 ;; *************** function _terminal_operation *****************
  3029 ;; Defined at:
  3030 ;;		line 170 in file "PIC18F27J53-killifish_light06.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  tx              2  101[BANK0 ] PTR struct ringbuf
  3033 ;;		 -> usb_tx(8), 
  3034 ;;  op0             2  103[BANK0 ] PTR unsigned char 
  3035 ;;		 -> terminal_task@op0(25), 
  3036 ;;  op1             2  105[BANK0 ] PTR unsigned char 
  3037 ;;		 -> terminal_task@op1(25), 
  3038 ;;  op2             2  107[BANK0 ] PTR unsigned char 
  3039 ;;		 -> terminal_task@op2(25), 
  3040 ;;  op3             2  109[BANK0 ] PTR unsigned char 
  3041 ;;		 -> terminal_task@op3(25), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3053 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;Total ram usage:       14 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:   18
  3060 ;; This function calls:
  3061 ;;		_PWM_set
  3062 ;;		___awdiv
  3063 ;;		___wmul
  3064 ;;		_atoi
  3065 ;;		_ringbuf_put_str
  3066 ;;		_strcmp
  3067 ;;		_terminal_time
  3068 ;; This function is called by:
  3069 ;;		_terminal_task
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text2
  3074  010000                     __ptext2:
  3075                           	opt stack 0
  3076  010000                     _terminal_operation:
  3077                           	opt stack 11
  3078                           
  3079                           ;PIC18F27J53-killifish_light06.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  3080                           
  3081                           ;incstack = 0
  3082  010000  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3083  010004  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3084  010008  0EB2               	movlw	low STR_41
  3085  01000A  0100               	movlb	0	; () banked
  3086  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  3087  01000E  0EFF               	movlw	high STR_41
  3088  010010  0100               	movlb	0	; () banked
  3089  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3090  010014  EC60  F0A0         	call	_strcmp	;wreg free
  3091  010018  0100               	movlb	0	; () banked
  3092  01001A  5160               	movf	?_strcmp& (0+255),w,b
  3093  01001C  0100               	movlb	0	; () banked
  3094  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3095  010020  B4D8               	btfsc	status,2,c
  3096  010022  D012               	goto	l9996
  3097                           
  3098                           ; BSR set to: 0
  3099  010024  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3100  010028  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3101  01002C  0EE5               	movlw	low STR_42
  3102  01002E  0100               	movlb	0	; () banked
  3103  010030  6F62               	movwf	strcmp@s2& (0+255),b
  3104  010032  0EFF               	movlw	high STR_42
  3105  010034  0100               	movlb	0	; () banked
  3106  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3107  010038  EC60  F0A0         	call	_strcmp	;wreg free
  3108  01003C  0100               	movlb	0	; () banked
  3109  01003E  5160               	movf	?_strcmp& (0+255),w,b
  3110  010040  0100               	movlb	0	; () banked
  3111  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3112  010044  A4D8               	btfss	status,2,c
  3113  010046  D00C               	goto	l9998
  3114  010048                     l9996:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;PIC18F27J53-killifish_light06.c: 172: ringbuf_put_str(tx,
  3118                           ;PIC18F27J53-killifish_light06.c: 173: "\t**************************\n"
  3119                           ;PIC18F27J53-killifish_light06.c: 174: "\t**** Killifish Light  ****\n"
  3120                           ;PIC18F27J53-killifish_light06.c: 175: "\t**** Made by @Ryokeri ****\n"
  3121                           ;PIC18F27J53-killifish_light06.c: 176: "\t**************************\n\n"
  3122                           ;PIC18F27J53-killifish_light06.c: 177: "\tcommand \topeland1\topeland2\n\n"
  3123                           ;PIC18F27J53-killifish_light06.c: 178: "\tprint_time(t)\n"
  3124                           ;PIC18F27J53-killifish_light06.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3125  010048  C0C5  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  3126  01004C  C0C6  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3127  010050  0EF2               	movlw	low STR_43
  3128  010052  0100               	movlb	0	; () banked
  3129  010054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3130  010056  0EFD               	movlw	high STR_43
  3131  010058  0100               	movlb	0	; () banked
  3132  01005A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3133  01005C  ECCC  F09F         	call	_ringbuf_put_str	;wreg free
  3134  010060                     l9998:
  3135                           
  3136                           ;PIC18F27J53-killifish_light06.c: 186: }
  3137                           ;PIC18F27J53-killifish_light06.c: 187: terminal_time(tx, op0, op1, op2);
  3138  010060  C0C5  F0BC         	movff	terminal_operation@tx,terminal_time@tx
  3139  010064  C0C6  F0BD         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3140  010068  C0C7  F0BE         	movff	terminal_operation@op0,terminal_time@op0
  3141  01006C  C0C8  F0BF         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3142  010070  C0C9  F0C0         	movff	terminal_operation@op1,terminal_time@op1
  3143  010074  C0CA  F0C1         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3144  010078  C0CB  F0C2         	movff	terminal_operation@op2,terminal_time@op2
  3145  01007C  C0CC  F0C3         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3146  010080  EC84  F084         	call	_terminal_time	;wreg free
  3147                           
  3148                           ;PIC18F27J53-killifish_light06.c: 188: if (!strcmp(op0, "RESET();")) {
  3149  010084  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3150  010088  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3151  01008C  0E69               	movlw	low STR_44
  3152  01008E  0100               	movlb	0	; () banked
  3153  010090  6F62               	movwf	strcmp@s2& (0+255),b
  3154  010092  0EFF               	movlw	high STR_44
  3155  010094  0100               	movlb	0	; () banked
  3156  010096  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3157  010098  EC60  F0A0         	call	_strcmp	;wreg free
  3158  01009C  0100               	movlb	0	; () banked
  3159  01009E  5160               	movf	?_strcmp& (0+255),w,b
  3160  0100A0  0100               	movlb	0	; () banked
  3161  0100A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3162  0100A4  B4D8               	btfsc	status,2,c
  3163                           
  3164                           ; BSR set to: 0
  3165  0100A6  00FF               	reset		;# 
  3166                           
  3167                           ;PIC18F27J53-killifish_light06.c: 190: }
  3168                           ;PIC18F27J53-killifish_light06.c: 191: if (!strcmp(op0, "bootload")) {
  3169  0100A8  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3170  0100AC  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3171  0100B0  0E72               	movlw	low STR_45
  3172  0100B2  0100               	movlb	0	; () banked
  3173  0100B4  6F62               	movwf	strcmp@s2& (0+255),b
  3174  0100B6  0EFF               	movlw	high STR_45
  3175  0100B8  0100               	movlb	0	; () banked
  3176  0100BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3177  0100BC  EC60  F0A0         	call	_strcmp	;wreg free
  3178  0100C0  0100               	movlb	0	; () banked
  3179  0100C2  5160               	movf	?_strcmp& (0+255),w,b
  3180  0100C4  0100               	movlb	0	; () banked
  3181  0100C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3182  0100C8  B4D8               	btfsc	status,2,c
  3183                           
  3184                           ; BSR set to: 0
  3185  0100CA  EF0E F000          	goto	28	;# 
  3186                           
  3187                           ;PIC18F27J53-killifish_light06.c: 193: }
  3188                           ;PIC18F27J53-killifish_light06.c: 194: if (!strcmp(op0, "set")) {
  3189  0100CE  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3190  0100D2  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3191  0100D6  0ED6               	movlw	low STR_46
  3192  0100D8  0100               	movlb	0	; () banked
  3193  0100DA  6F62               	movwf	strcmp@s2& (0+255),b
  3194  0100DC  0EFF               	movlw	high STR_46
  3195  0100DE  0100               	movlb	0	; () banked
  3196  0100E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3197  0100E2  EC60  F0A0         	call	_strcmp	;wreg free
  3198  0100E6  0100               	movlb	0	; () banked
  3199  0100E8  5160               	movf	?_strcmp& (0+255),w,b
  3200  0100EA  0100               	movlb	0	; () banked
  3201  0100EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3202  0100EE  A4D8               	btfss	status,2,c
  3203  0100F0  D03C               	goto	l10020
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;PIC18F27J53-killifish_light06.c: 195: if (!strcmp(op1, "sync")) {
  3207  0100F2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3208  0100F6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3209  0100FA  0EAD               	movlw	low STR_47
  3210  0100FC  0100               	movlb	0	; () banked
  3211  0100FE  6F62               	movwf	strcmp@s2& (0+255),b
  3212  010100  0EFF               	movlw	high STR_47
  3213  010102  0100               	movlb	0	; () banked
  3214  010104  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3215  010106  EC60  F0A0         	call	_strcmp	;wreg free
  3216  01010A  0100               	movlb	0	; () banked
  3217  01010C  5160               	movf	?_strcmp& (0+255),w,b
  3218  01010E  0100               	movlb	0	; () banked
  3219  010110  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3220  010112  A4D8               	btfss	status,2,c
  3221  010114  D003               	goto	l10014
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;PIC18F27J53-killifish_light06.c: 196: light_mode = TIME_SYNC_mode;
  3225  010116  0E00               	movlw	0
  3226  010118  0100               	movlb	0	; () banked
  3227  01011A  6FEE               	movwf	_light_mode& (0+255),b
  3228  01011C                     l10014:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;PIC18F27J53-killifish_light06.c: 197: }
  3232                           ;PIC18F27J53-killifish_light06.c: 198: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3233  01011C  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3234  010120  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3235  010124  0ECE               	movlw	low STR_48
  3236  010126  0100               	movlb	0	; () banked
  3237  010128  6F62               	movwf	strcmp@s2& (0+255),b
  3238  01012A  0EFF               	movlw	high STR_48
  3239  01012C  0100               	movlb	0	; () banked
  3240  01012E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3241  010130  EC60  F0A0         	call	_strcmp	;wreg free
  3242  010134  0100               	movlb	0	; () banked
  3243  010136  5160               	movf	?_strcmp& (0+255),w,b
  3244  010138  0100               	movlb	0	; () banked
  3245  01013A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3246  01013C  B4D8               	btfsc	status,2,c
  3247  01013E  D012               	goto	l10018
  3248                           
  3249                           ; BSR set to: 0
  3250  010140  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3251  010144  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3252  010148  0EC6               	movlw	low STR_49
  3253  01014A  0100               	movlb	0	; () banked
  3254  01014C  6F62               	movwf	strcmp@s2& (0+255),b
  3255  01014E  0EFF               	movlw	high STR_49
  3256  010150  0100               	movlb	0	; () banked
  3257  010152  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3258  010154  EC60  F0A0         	call	_strcmp	;wreg free
  3259  010158  0100               	movlb	0	; () banked
  3260  01015A  5160               	movf	?_strcmp& (0+255),w,b
  3261  01015C  0100               	movlb	0	; () banked
  3262  01015E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3263  010160  A4D8               	btfss	status,2,c
  3264  010162  D003               	goto	l10020
  3265  010164                     l10018:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;PIC18F27J53-killifish_light06.c: 199: light_mode = ADC_mode;
  3269  010164  0E01               	movlw	1
  3270  010166  0100               	movlb	0	; () banked
  3271  010168  6FEE               	movwf	_light_mode& (0+255),b
  3272  01016A                     l10020:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;PIC18F27J53-killifish_light06.c: 200: }
  3276                           ;PIC18F27J53-killifish_light06.c: 201: }
  3277                           ;PIC18F27J53-killifish_light06.c: 202: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3278  01016A  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3279  01016E  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3280  010172  0ED2               	movlw	low STR_50
  3281  010174  0100               	movlb	0	; () banked
  3282  010176  6F62               	movwf	strcmp@s2& (0+255),b
  3283  010178  0EFF               	movlw	high STR_50
  3284  01017A  0100               	movlb	0	; () banked
  3285  01017C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3286  01017E  EC60  F0A0         	call	_strcmp	;wreg free
  3287  010182  0100               	movlb	0	; () banked
  3288  010184  5160               	movf	?_strcmp& (0+255),w,b
  3289  010186  0100               	movlb	0	; () banked
  3290  010188  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3291  01018A  B4D8               	btfsc	status,2,c
  3292  01018C  D012               	goto	l10024
  3293                           
  3294                           ; BSR set to: 0
  3295  01018E  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3296  010192  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3297  010196  0ECA               	movlw	low STR_51
  3298  010198  0100               	movlb	0	; () banked
  3299  01019A  6F62               	movwf	strcmp@s2& (0+255),b
  3300  01019C  0EFF               	movlw	high STR_51
  3301  01019E  0100               	movlb	0	; () banked
  3302  0101A0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3303  0101A2  EC60  F0A0         	call	_strcmp	;wreg free
  3304  0101A6  0100               	movlb	0	; () banked
  3305  0101A8  5160               	movf	?_strcmp& (0+255),w,b
  3306  0101AA  0100               	movlb	0	; () banked
  3307  0101AC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3308  0101AE  A4D8               	btfss	status,2,c
  3309  0101B0  0012               	return	
  3310  0101B2                     l10024:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;PIC18F27J53-killifish_light06.c: 203: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3314  0101B2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3315  0101B6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3316  0101BA  0EA5               	movlw	low (STR_60+4)
  3317  0101BC  0100               	movlb	0	; () banked
  3318  0101BE  6F62               	movwf	strcmp@s2& (0+255),b
  3319  0101C0  0EFF               	movlw	high (STR_60+4)
  3320  0101C2  0100               	movlb	0	; () banked
  3321  0101C4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3322  0101C6  EC60  F0A0         	call	_strcmp	;wreg free
  3323  0101CA  0100               	movlb	0	; () banked
  3324  0101CC  5160               	movf	?_strcmp& (0+255),w,b
  3325  0101CE  0100               	movlb	0	; () banked
  3326  0101D0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3327  0101D2  B4D8               	btfsc	status,2,c
  3328  0101D4  D012               	goto	l10028
  3329                           
  3330                           ; BSR set to: 0
  3331  0101D6  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3332  0101DA  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3333  0101DE  0EEB               	movlw	low STR_53
  3334  0101E0  0100               	movlb	0	; () banked
  3335  0101E2  6F62               	movwf	strcmp@s2& (0+255),b
  3336  0101E4  0EFF               	movlw	high STR_53
  3337  0101E6  0100               	movlb	0	; () banked
  3338  0101E8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3339  0101EA  EC60  F0A0         	call	_strcmp	;wreg free
  3340  0101EE  0100               	movlb	0	; () banked
  3341  0101F0  5160               	movf	?_strcmp& (0+255),w,b
  3342  0101F2  0100               	movlb	0	; () banked
  3343  0101F4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3344  0101F6  A4D8               	btfss	status,2,c
  3345  0101F8  D02E               	goto	l10036
  3346  0101FA                     l10028:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;PIC18F27J53-killifish_light06.c: 204: light_mode = COMMAND_mode;
  3350  0101FA  0E02               	movlw	2
  3351  0101FC  0100               	movlb	0	; () banked
  3352  0101FE  6FEE               	movwf	_light_mode& (0+255),b
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3356  010200  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3357  010204  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3358  010208  EC7E  F092         	call	_atoi	;wreg free
  3359  01020C  C066  F0CF         	movff	?_atoi,_terminal_operation$6979
  3360  010210  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6979+1
  3361                           
  3362                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3363  010214  C0CF  F060         	movff	_terminal_operation$6979,___wmul@multiplier
  3364  010218  C0D0  F061         	movff	_terminal_operation$6979+1,___wmul@multiplier+1
  3365  01021C  0E00               	movlw	0
  3366  01021E  0100               	movlb	0	; () banked
  3367  010220  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3368  010222  0EFA               	movlw	250
  3369  010224  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3370  010226  ECEB  F0A1         	call	___wmul	;wreg free
  3371  01022A  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3372  01022E  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3373  010232  0E00               	movlw	0
  3374  010234  0100               	movlb	0	; () banked
  3375  010236  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3376  010238  0E64               	movlw	100
  3377  01023A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3378  01023C  ECE7  F098         	call	___awdiv	;wreg free
  3379  010240  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6980
  3380  010244  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6980+1
  3381                           
  3382                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3383  010248  C0D1  F075         	movff	_terminal_operation$6980,PWM_set@value
  3384  01024C  C0D2  F076         	movff	_terminal_operation$6980+1,PWM_set@value+1
  3385  010250  0E00               	movlw	0
  3386  010252  ECE0  F08D         	call	_PWM_set
  3387  010256                     l10036:
  3388                           
  3389                           ;PIC18F27J53-killifish_light06.c: 206: }
  3390                           ;PIC18F27J53-killifish_light06.c: 207: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3391  010256  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3392  01025A  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3393  01025E  0EF1               	movlw	low STR_54
  3394  010260  0100               	movlb	0	; () banked
  3395  010262  6F62               	movwf	strcmp@s2& (0+255),b
  3396  010264  0EFF               	movlw	high STR_54
  3397  010266  0100               	movlb	0	; () banked
  3398  010268  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3399  01026A  EC60  F0A0         	call	_strcmp	;wreg free
  3400  01026E  0100               	movlb	0	; () banked
  3401  010270  5160               	movf	?_strcmp& (0+255),w,b
  3402  010272  0100               	movlb	0	; () banked
  3403  010274  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3404  010276  B4D8               	btfsc	status,2,c
  3405  010278  D012               	goto	l10040
  3406                           
  3407                           ; BSR set to: 0
  3408  01027A  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3409  01027E  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3410  010282  0EE9               	movlw	low STR_55
  3411  010284  0100               	movlb	0	; () banked
  3412  010286  6F62               	movwf	strcmp@s2& (0+255),b
  3413  010288  0EFF               	movlw	high STR_55
  3414  01028A  0100               	movlb	0	; () banked
  3415  01028C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3416  01028E  EC60  F0A0         	call	_strcmp	;wreg free
  3417  010292  0100               	movlb	0	; () banked
  3418  010294  5160               	movf	?_strcmp& (0+255),w,b
  3419  010296  0100               	movlb	0	; () banked
  3420  010298  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3421  01029A  A4D8               	btfss	status,2,c
  3422  01029C  D02E               	goto	l10048
  3423  01029E                     l10040:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;PIC18F27J53-killifish_light06.c: 208: light_mode = COMMAND_mode;
  3427  01029E  0E02               	movlw	2
  3428  0102A0  0100               	movlb	0	; () banked
  3429  0102A2  6FEE               	movwf	_light_mode& (0+255),b
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3433  0102A4  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3434  0102A8  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3435  0102AC  EC7E  F092         	call	_atoi	;wreg free
  3436  0102B0  C066  F0CF         	movff	?_atoi,_terminal_operation$6979
  3437  0102B4  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6979+1
  3438                           
  3439                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3440  0102B8  C0CF  F060         	movff	_terminal_operation$6979,___wmul@multiplier
  3441  0102BC  C0D0  F061         	movff	_terminal_operation$6979+1,___wmul@multiplier+1
  3442  0102C0  0E00               	movlw	0
  3443  0102C2  0100               	movlb	0	; () banked
  3444  0102C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3445  0102C6  0EFA               	movlw	250
  3446  0102C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3447  0102CA  ECEB  F0A1         	call	___wmul	;wreg free
  3448  0102CE  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3449  0102D2  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3450  0102D6  0E00               	movlw	0
  3451  0102D8  0100               	movlb	0	; () banked
  3452  0102DA  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3453  0102DC  0E64               	movlw	100
  3454  0102DE  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3455  0102E0  ECE7  F098         	call	___awdiv	;wreg free
  3456  0102E4  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6980
  3457  0102E8  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6980+1
  3458                           
  3459                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3460  0102EC  C0D1  F075         	movff	_terminal_operation$6980,PWM_set@value
  3461  0102F0  C0D2  F076         	movff	_terminal_operation$6980+1,PWM_set@value+1
  3462  0102F4  0E01               	movlw	1
  3463  0102F6  ECE0  F08D         	call	_PWM_set
  3464  0102FA                     l10048:
  3465                           
  3466                           ;PIC18F27J53-killifish_light06.c: 210: }
  3467                           ;PIC18F27J53-killifish_light06.c: 211: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3468  0102FA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3469  0102FE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3470  010302  0EEF               	movlw	low STR_56
  3471  010304  0100               	movlb	0	; () banked
  3472  010306  6F62               	movwf	strcmp@s2& (0+255),b
  3473  010308  0EFF               	movlw	high STR_56
  3474  01030A  0100               	movlb	0	; () banked
  3475  01030C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3476  01030E  EC60  F0A0         	call	_strcmp	;wreg free
  3477  010312  0100               	movlb	0	; () banked
  3478  010314  5160               	movf	?_strcmp& (0+255),w,b
  3479  010316  0100               	movlb	0	; () banked
  3480  010318  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3481  01031A  B4D8               	btfsc	status,2,c
  3482  01031C  D012               	goto	l10052
  3483                           
  3484                           ; BSR set to: 0
  3485  01031E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3486  010322  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3487  010326  0EE7               	movlw	low STR_57
  3488  010328  0100               	movlb	0	; () banked
  3489  01032A  6F62               	movwf	strcmp@s2& (0+255),b
  3490  01032C  0EFF               	movlw	high STR_57
  3491  01032E  0100               	movlb	0	; () banked
  3492  010330  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3493  010332  EC60  F0A0         	call	_strcmp	;wreg free
  3494  010336  0100               	movlb	0	; () banked
  3495  010338  5160               	movf	?_strcmp& (0+255),w,b
  3496  01033A  0100               	movlb	0	; () banked
  3497  01033C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3498  01033E  A4D8               	btfss	status,2,c
  3499  010340  D02E               	goto	l10060
  3500  010342                     l10052:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;PIC18F27J53-killifish_light06.c: 212: light_mode = COMMAND_mode;
  3504  010342  0E02               	movlw	2
  3505  010344  0100               	movlb	0	; () banked
  3506  010346  6FEE               	movwf	_light_mode& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3510  010348  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3511  01034C  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3512  010350  EC7E  F092         	call	_atoi	;wreg free
  3513  010354  C066  F0CF         	movff	?_atoi,_terminal_operation$6979
  3514  010358  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6979+1
  3515                           
  3516                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3517  01035C  C0CF  F060         	movff	_terminal_operation$6979,___wmul@multiplier
  3518  010360  C0D0  F061         	movff	_terminal_operation$6979+1,___wmul@multiplier+1
  3519  010364  0E00               	movlw	0
  3520  010366  0100               	movlb	0	; () banked
  3521  010368  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3522  01036A  0EFA               	movlw	250
  3523  01036C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3524  01036E  ECEB  F0A1         	call	___wmul	;wreg free
  3525  010372  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3526  010376  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3527  01037A  0E00               	movlw	0
  3528  01037C  0100               	movlb	0	; () banked
  3529  01037E  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3530  010380  0E64               	movlw	100
  3531  010382  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3532  010384  ECE7  F098         	call	___awdiv	;wreg free
  3533  010388  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6980
  3534  01038C  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6980+1
  3535                           
  3536                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3537  010390  C0D1  F075         	movff	_terminal_operation$6980,PWM_set@value
  3538  010394  C0D2  F076         	movff	_terminal_operation$6980+1,PWM_set@value+1
  3539  010398  0E02               	movlw	2
  3540  01039A  ECE0  F08D         	call	_PWM_set
  3541  01039E                     l10060:
  3542                           
  3543                           ;PIC18F27J53-killifish_light06.c: 214: }
  3544                           ;PIC18F27J53-killifish_light06.c: 215: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3545  01039E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3546  0103A2  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3547  0103A6  0EF3               	movlw	low STR_58
  3548  0103A8  0100               	movlb	0	; () banked
  3549  0103AA  6F62               	movwf	strcmp@s2& (0+255),b
  3550  0103AC  0EFF               	movlw	high STR_58
  3551  0103AE  0100               	movlb	0	; () banked
  3552  0103B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3553  0103B2  EC60  F0A0         	call	_strcmp	;wreg free
  3554  0103B6  0100               	movlb	0	; () banked
  3555  0103B8  5160               	movf	?_strcmp& (0+255),w,b
  3556  0103BA  0100               	movlb	0	; () banked
  3557  0103BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3558  0103BE  B4D8               	btfsc	status,2,c
  3559  0103C0  D012               	goto	l10064
  3560                           
  3561                           ; BSR set to: 0
  3562  0103C2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3563  0103C6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3564  0103CA  0EED               	movlw	low STR_59
  3565  0103CC  0100               	movlb	0	; () banked
  3566  0103CE  6F62               	movwf	strcmp@s2& (0+255),b
  3567  0103D0  0EFF               	movlw	high STR_59
  3568  0103D2  0100               	movlb	0	; () banked
  3569  0103D4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3570  0103D6  EC60  F0A0         	call	_strcmp	;wreg free
  3571  0103DA  0100               	movlb	0	; () banked
  3572  0103DC  5160               	movf	?_strcmp& (0+255),w,b
  3573  0103DE  0100               	movlb	0	; () banked
  3574  0103E0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3575  0103E2  A4D8               	btfss	status,2,c
  3576  0103E4  D02E               	goto	l10072
  3577  0103E6                     l10064:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;PIC18F27J53-killifish_light06.c: 216: light_mode = COMMAND_mode;
  3581  0103E6  0E02               	movlw	2
  3582  0103E8  0100               	movlb	0	; () banked
  3583  0103EA  6FEE               	movwf	_light_mode& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3587  0103EC  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3588  0103F0  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3589  0103F4  EC7E  F092         	call	_atoi	;wreg free
  3590  0103F8  C066  F0CF         	movff	?_atoi,_terminal_operation$6979
  3591  0103FC  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6979+1
  3592                           
  3593                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3594  010400  C0CF  F060         	movff	_terminal_operation$6979,___wmul@multiplier
  3595  010404  C0D0  F061         	movff	_terminal_operation$6979+1,___wmul@multiplier+1
  3596  010408  0E00               	movlw	0
  3597  01040A  0100               	movlb	0	; () banked
  3598  01040C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3599  01040E  0EFA               	movlw	250
  3600  010410  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3601  010412  ECEB  F0A1         	call	___wmul	;wreg free
  3602  010416  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3603  01041A  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3604  01041E  0E00               	movlw	0
  3605  010420  0100               	movlb	0	; () banked
  3606  010422  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3607  010424  0E64               	movlw	100
  3608  010426  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3609  010428  ECE7  F098         	call	___awdiv	;wreg free
  3610  01042C  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6980
  3611  010430  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6980+1
  3612                           
  3613                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3614  010434  C0D1  F075         	movff	_terminal_operation$6980,PWM_set@value
  3615  010438  C0D2  F076         	movff	_terminal_operation$6980+1,PWM_set@value+1
  3616  01043C  0E03               	movlw	3
  3617  01043E  ECE0  F08D         	call	_PWM_set
  3618  010442                     l10072:
  3619                           
  3620                           ;PIC18F27J53-killifish_light06.c: 218: }
  3621                           ;PIC18F27J53-killifish_light06.c: 219: if (!strcmp(op1, "clear")) {
  3622  010442  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3623  010446  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3624  01044A  0EA1               	movlw	low STR_60
  3625  01044C  0100               	movlb	0	; () banked
  3626  01044E  6F62               	movwf	strcmp@s2& (0+255),b
  3627  010450  0EFF               	movlw	high STR_60
  3628  010452  0100               	movlb	0	; () banked
  3629  010454  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3630  010456  EC60  F0A0         	call	_strcmp	;wreg free
  3631  01045A  0100               	movlb	0	; () banked
  3632  01045C  5160               	movf	?_strcmp& (0+255),w,b
  3633  01045E  0100               	movlb	0	; () banked
  3634  010460  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3635  010462  A4D8               	btfss	status,2,c
  3636  010464  0012               	return	
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;PIC18F27J53-killifish_light06.c: 220: light_mode = COMMAND_mode;
  3640  010466  0E02               	movlw	2
  3641  010468  0100               	movlb	0	; () banked
  3642  01046A  6FEE               	movwf	_light_mode& (0+255),b
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;PIC18F27J53-killifish_light06.c: 221: PWM_set(0, 0);
  3646  01046C  0E00               	movlw	0
  3647  01046E  0100               	movlb	0	; () banked
  3648  010470  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3649  010472  0E00               	movlw	0
  3650  010474  6F75               	movwf	PWM_set@value& (0+255),b
  3651  010476  0E00               	movlw	0
  3652  010478  ECE0  F08D         	call	_PWM_set
  3653                           
  3654                           ;PIC18F27J53-killifish_light06.c: 222: PWM_set(1, 0);
  3655  01047C  0E00               	movlw	0
  3656  01047E  0100               	movlb	0	; () banked
  3657  010480  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3658  010482  0E00               	movlw	0
  3659  010484  6F75               	movwf	PWM_set@value& (0+255),b
  3660  010486  0E01               	movlw	1
  3661  010488  ECE0  F08D         	call	_PWM_set
  3662                           
  3663                           ;PIC18F27J53-killifish_light06.c: 223: PWM_set(2, 0);
  3664  01048C  0E00               	movlw	0
  3665  01048E  0100               	movlb	0	; () banked
  3666  010490  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3667  010492  0E00               	movlw	0
  3668  010494  6F75               	movwf	PWM_set@value& (0+255),b
  3669  010496  0E02               	movlw	2
  3670  010498  ECE0  F08D         	call	_PWM_set
  3671                           
  3672                           ;PIC18F27J53-killifish_light06.c: 224: PWM_set(3, 0);
  3673  01049C  0E00               	movlw	0
  3674  01049E  0100               	movlb	0	; () banked
  3675  0104A0  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3676  0104A2  0E00               	movlw	0
  3677  0104A4  6F75               	movwf	PWM_set@value& (0+255),b
  3678  0104A6  0E03               	movlw	3
  3679  0104A8  ECE0  F08D         	call	_PWM_set
  3680  0104AC  0012               	return	
  3681  0104AE                     __end_of_terminal_operation:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function _terminal_time *****************
  3701 ;; Defined at:
  3702 ;;		line 93 in file "../My_library/My_terminal.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  tx              2   92[BANK0 ] PTR struct ringbuf
  3705 ;;		 -> usb_tx(8), 
  3706 ;;  op0             2   94[BANK0 ] PTR unsigned char 
  3707 ;;		 -> terminal_task@op0(25), 
  3708 ;;  op1             2   96[BANK0 ] PTR unsigned char 
  3709 ;;		 -> terminal_task@op1(25), 
  3710 ;;  op2             2   98[BANK0 ] PTR unsigned char 
  3711 ;;		 -> terminal_task@op2(25), 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3723 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3726 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;Total ram usage:        9 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:   17
  3730 ;; This function calls:
  3731 ;;		_atoi
  3732 ;;		_month_length
  3733 ;;		_print_time
  3734 ;;		_strcmp
  3735 ;;		_terminal_at_hand
  3736 ;; This function is called by:
  3737 ;;		_terminal_operation
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text3
  3742  010908                     __ptext3:
  3743                           	opt stack 0
  3744  010908                     _terminal_time:
  3745                           	opt stack 11
  3746                           
  3747                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3748                           
  3749                           ;incstack = 0
  3750  010908  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3751  01090C  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3752  010910  0E5E               	movlw	low STR_25
  3753  010912  0100               	movlb	0	; () banked
  3754  010914  6F62               	movwf	strcmp@s2& (0+255),b
  3755  010916  0EFF               	movlw	high STR_25
  3756  010918  0100               	movlb	0	; () banked
  3757  01091A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3758  01091C  EC60  F0A0         	call	_strcmp	;wreg free
  3759  010920  0100               	movlb	0	; () banked
  3760  010922  5160               	movf	?_strcmp& (0+255),w,b
  3761  010924  0100               	movlb	0	; () banked
  3762  010926  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3763  010928  B4D8               	btfsc	status,2,c
  3764  01092A  D012               	goto	l9748
  3765                           
  3766                           ; BSR set to: 0
  3767  01092C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3768  010930  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3769  010934  0EE3               	movlw	low (STR_27+1)
  3770  010936  0100               	movlb	0	; () banked
  3771  010938  6F62               	movwf	strcmp@s2& (0+255),b
  3772  01093A  0EFF               	movlw	high (STR_27+1)
  3773  01093C  0100               	movlb	0	; () banked
  3774  01093E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3775  010940  EC60  F0A0         	call	_strcmp	;wreg free
  3776  010944  0100               	movlb	0	; () banked
  3777  010946  5160               	movf	?_strcmp& (0+255),w,b
  3778  010948  0100               	movlb	0	; () banked
  3779  01094A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3780  01094C  A4D8               	btfss	status,2,c
  3781  01094E  D006               	goto	l9750
  3782  010950                     l9748:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;My_terminal.c: 95: print_time(tx);
  3786  010950  C0BC  F095         	movff	terminal_time@tx,print_time@tx
  3787  010954  C0BD  F096         	movff	terminal_time@tx+1,print_time@tx+1
  3788  010958  EC21  F09E         	call	_print_time	;wreg free
  3789  01095C                     l9750:
  3790                           
  3791                           ;My_terminal.c: 96: }
  3792                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3793  01095C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3794  010960  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3795  010964  0EE2               	movlw	low STR_27
  3796  010966  0100               	movlb	0	; () banked
  3797  010968  6F62               	movwf	strcmp@s2& (0+255),b
  3798  01096A  0EFF               	movlw	high STR_27
  3799  01096C  0100               	movlb	0	; () banked
  3800  01096E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3801  010970  EC60  F0A0         	call	_strcmp	;wreg free
  3802  010974  0100               	movlb	0	; () banked
  3803  010976  5160               	movf	?_strcmp& (0+255),w,b
  3804  010978  0100               	movlb	0	; () banked
  3805  01097A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3806  01097C  B4D8               	btfsc	status,2,c
  3807  01097E  D012               	goto	l9754
  3808                           
  3809                           ; BSR set to: 0
  3810  010980  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3811  010984  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3812  010988  0E52               	movlw	low STR_28
  3813  01098A  0100               	movlb	0	; () banked
  3814  01098C  6F62               	movwf	strcmp@s2& (0+255),b
  3815  01098E  0EFF               	movlw	high STR_28
  3816  010990  0100               	movlb	0	; () banked
  3817  010992  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3818  010994  EC60  F0A0         	call	_strcmp	;wreg free
  3819  010998  0100               	movlb	0	; () banked
  3820  01099A  5160               	movf	?_strcmp& (0+255),w,b
  3821  01099C  0100               	movlb	0	; () banked
  3822  01099E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3823  0109A0  A4D8               	btfss	status,2,c
  3824  0109A2  0012               	return	
  3825  0109A4                     l9754:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3829  0109A4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3830  0109A8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3831  0109AC  0EE0               	movlw	low (STR_34+2)
  3832  0109AE  0100               	movlb	0	; () banked
  3833  0109B0  6F62               	movwf	strcmp@s2& (0+255),b
  3834  0109B2  0EFF               	movlw	high (STR_34+2)
  3835  0109B4  0100               	movlb	0	; () banked
  3836  0109B6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3837  0109B8  EC60  F0A0         	call	_strcmp	;wreg free
  3838  0109BC  0100               	movlb	0	; () banked
  3839  0109BE  5160               	movf	?_strcmp& (0+255),w,b
  3840  0109C0  0100               	movlb	0	; () banked
  3841  0109C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3842  0109C4  B4D8               	btfsc	status,2,c
  3843  0109C6  D012               	goto	l9758
  3844                           
  3845                           ; BSR set to: 0
  3846  0109C8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3847  0109CC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3848  0109D0  0EB7               	movlw	low STR_30
  3849  0109D2  0100               	movlb	0	; () banked
  3850  0109D4  6F62               	movwf	strcmp@s2& (0+255),b
  3851  0109D6  0EFF               	movlw	high STR_30
  3852  0109D8  0100               	movlb	0	; () banked
  3853  0109DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3854  0109DC  EC60  F0A0         	call	_strcmp	;wreg free
  3855  0109E0  0100               	movlb	0	; () banked
  3856  0109E2  5160               	movf	?_strcmp& (0+255),w,b
  3857  0109E4  0100               	movlb	0	; () banked
  3858  0109E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3859  0109E8  A4D8               	btfss	status,2,c
  3860  0109EA  D01C               	goto	l9760
  3861  0109EC                     l9758:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3865  0109EC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3866  0109F0  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3867  0109F4  0E42               	movlw	low (_now+10)
  3868  0109F6  0100               	movlb	0	; () banked
  3869  0109F8  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3870  0109FA  0E01               	movlw	high (_now+10)
  3871  0109FC  0100               	movlb	0	; () banked
  3872  0109FE  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3873  010A00  0E00               	movlw	0
  3874  010A02  0100               	movlb	0	; () banked
  3875  010A04  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3876  010A06  0E63               	movlw	99
  3877  010A08  0100               	movlb	0	; () banked
  3878  010A0A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3879  010A0C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3880  010A10  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3881  010A14  EC7E  F092         	call	_atoi	;wreg free
  3882  010A18  0100               	movlb	0	; () banked
  3883  010A1A  5166               	movf	?_atoi& (0+255),w,b
  3884  010A1C  0100               	movlb	0	; () banked
  3885  010A1E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3886  010A20  ECFE  F09F         	call	_terminal_at_hand	;wreg free
  3887  010A24                     l9760:
  3888                           
  3889                           ;My_terminal.c: 100: }
  3890                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3891  010A24  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3892  010A28  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3893  010A2C  0ECC               	movlw	low (STR_51+2)
  3894  010A2E  0100               	movlb	0	; () banked
  3895  010A30  6F62               	movwf	strcmp@s2& (0+255),b
  3896  010A32  0EFF               	movlw	high (STR_51+2)
  3897  010A34  0100               	movlb	0	; () banked
  3898  010A36  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3899  010A38  EC60  F0A0         	call	_strcmp	;wreg free
  3900  010A3C  0100               	movlb	0	; () banked
  3901  010A3E  5160               	movf	?_strcmp& (0+255),w,b
  3902  010A40  0100               	movlb	0	; () banked
  3903  010A42  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3904  010A44  B4D8               	btfsc	status,2,c
  3905  010A46  D012               	goto	l9764
  3906                           
  3907                           ; BSR set to: 0
  3908  010A48  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3909  010A4C  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3910  010A50  0EA7               	movlw	low STR_32
  3911  010A52  0100               	movlb	0	; () banked
  3912  010A54  6F62               	movwf	strcmp@s2& (0+255),b
  3913  010A56  0EFF               	movlw	high STR_32
  3914  010A58  0100               	movlb	0	; () banked
  3915  010A5A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3916  010A5C  EC60  F0A0         	call	_strcmp	;wreg free
  3917  010A60  0100               	movlb	0	; () banked
  3918  010A62  5160               	movf	?_strcmp& (0+255),w,b
  3919  010A64  0100               	movlb	0	; () banked
  3920  010A66  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3921  010A68  A4D8               	btfss	status,2,c
  3922  010A6A  D01C               	goto	l9766
  3923  010A6C                     l9764:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3927  010A6C  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3928  010A70  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3929  010A74  0E41               	movlw	low (_now+9)
  3930  010A76  0100               	movlb	0	; () banked
  3931  010A78  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3932  010A7A  0E01               	movlw	high (_now+9)
  3933  010A7C  0100               	movlb	0	; () banked
  3934  010A7E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3935  010A80  0E01               	movlw	1
  3936  010A82  0100               	movlb	0	; () banked
  3937  010A84  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3938  010A86  0E0C               	movlw	12
  3939  010A88  0100               	movlb	0	; () banked
  3940  010A8A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3941  010A8C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3942  010A90  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3943  010A94  EC7E  F092         	call	_atoi	;wreg free
  3944  010A98  0100               	movlb	0	; () banked
  3945  010A9A  5166               	movf	?_atoi& (0+255),w,b
  3946  010A9C  0100               	movlb	0	; () banked
  3947  010A9E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3948  010AA0  ECFE  F09F         	call	_terminal_at_hand	;wreg free
  3949  010AA4                     l9766:
  3950                           
  3951                           ;My_terminal.c: 103: }
  3952                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3953  010AA4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3954  010AA8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3955  010AAC  0EC4               	movlw	low (STR_1+3)
  3956  010AAE  0100               	movlb	0	; () banked
  3957  010AB0  6F62               	movwf	strcmp@s2& (0+255),b
  3958  010AB2  0EFF               	movlw	high (STR_1+3)
  3959  010AB4  0100               	movlb	0	; () banked
  3960  010AB6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3961  010AB8  EC60  F0A0         	call	_strcmp	;wreg free
  3962  010ABC  0100               	movlb	0	; () banked
  3963  010ABE  5160               	movf	?_strcmp& (0+255),w,b
  3964  010AC0  0100               	movlb	0	; () banked
  3965  010AC2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3966  010AC4  B4D8               	btfsc	status,2,c
  3967  010AC6  D012               	goto	l9770
  3968                           
  3969                           ; BSR set to: 0
  3970  010AC8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3971  010ACC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3972  010AD0  0EDE               	movlw	low STR_34
  3973  010AD2  0100               	movlb	0	; () banked
  3974  010AD4  6F62               	movwf	strcmp@s2& (0+255),b
  3975  010AD6  0EFF               	movlw	high STR_34
  3976  010AD8  0100               	movlb	0	; () banked
  3977  010ADA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3978  010ADC  EC60  F0A0         	call	_strcmp	;wreg free
  3979  010AE0  0100               	movlb	0	; () banked
  3980  010AE2  5160               	movf	?_strcmp& (0+255),w,b
  3981  010AE4  0100               	movlb	0	; () banked
  3982  010AE6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3983  010AE8  A4D8               	btfss	status,2,c
  3984  010AEA  D023               	goto	l9774
  3985  010AEC                     l9770:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3989  010AEC  C141  F066         	movff	_now+9,month_length@month
  3990  010AF0  0101               	movlb	1	; () banked
  3991  010AF2  5142               	movf	(_now+10)& (0+255),w,b
  3992  010AF4  EC5B  F094         	call	_month_length
  3993  010AF8  0100               	movlb	0	; () banked
  3994  010AFA  6FC4               	movwf	_terminal_time$6978& (0+255),b
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3998  010AFC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3999  010B00  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4000  010B04  0E40               	movlw	low (_now+8)
  4001  010B06  0100               	movlb	0	; () banked
  4002  010B08  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4003  010B0A  0E01               	movlw	high (_now+8)
  4004  010B0C  0100               	movlb	0	; () banked
  4005  010B0E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4006  010B10  0E01               	movlw	1
  4007  010B12  0100               	movlb	0	; () banked
  4008  010B14  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4009  010B16  C0C4  F0BA         	movff	_terminal_time$6978,terminal_at_hand@max
  4010  010B1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4011  010B1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4012  010B22  EC7E  F092         	call	_atoi	;wreg free
  4013  010B26  0100               	movlb	0	; () banked
  4014  010B28  5166               	movf	?_atoi& (0+255),w,b
  4015  010B2A  0100               	movlb	0	; () banked
  4016  010B2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4017  010B2E  ECFE  F09F         	call	_terminal_at_hand	;wreg free
  4018  010B32                     l9774:
  4019                           
  4020                           ;My_terminal.c: 106: }
  4021                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  4022  010B32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4023  010B36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4024  010B3A  0EAB               	movlw	low (STR_32+4)
  4025  010B3C  0100               	movlb	0	; () banked
  4026  010B3E  6F62               	movwf	strcmp@s2& (0+255),b
  4027  010B40  0EFF               	movlw	high (STR_32+4)
  4028  010B42  0100               	movlb	0	; () banked
  4029  010B44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4030  010B46  EC60  F0A0         	call	_strcmp	;wreg free
  4031  010B4A  0100               	movlb	0	; () banked
  4032  010B4C  5160               	movf	?_strcmp& (0+255),w,b
  4033  010B4E  0100               	movlb	0	; () banked
  4034  010B50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4035  010B52  B4D8               	btfsc	status,2,c
  4036  010B54  D012               	goto	l9778
  4037                           
  4038                           ; BSR set to: 0
  4039  010B56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4040  010B5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4041  010B5E  0EBC               	movlw	low STR_36
  4042  010B60  0100               	movlb	0	; () banked
  4043  010B62  6F62               	movwf	strcmp@s2& (0+255),b
  4044  010B64  0EFF               	movlw	high STR_36
  4045  010B66  0100               	movlb	0	; () banked
  4046  010B68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4047  010B6A  EC60  F0A0         	call	_strcmp	;wreg free
  4048  010B6E  0100               	movlb	0	; () banked
  4049  010B70  5160               	movf	?_strcmp& (0+255),w,b
  4050  010B72  0100               	movlb	0	; () banked
  4051  010B74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4052  010B76  A4D8               	btfss	status,2,c
  4053  010B78  D01C               	goto	l9780
  4054  010B7A                     l9778:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4058  010B7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4059  010B7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4060  010B82  0E3E               	movlw	low (_now+6)
  4061  010B84  0100               	movlb	0	; () banked
  4062  010B86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4063  010B88  0E01               	movlw	high (_now+6)
  4064  010B8A  0100               	movlb	0	; () banked
  4065  010B8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4066  010B8E  0E00               	movlw	0
  4067  010B90  0100               	movlb	0	; () banked
  4068  010B92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4069  010B94  0E17               	movlw	23
  4070  010B96  0100               	movlb	0	; () banked
  4071  010B98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4072  010B9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4073  010B9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4074  010BA2  EC7E  F092         	call	_atoi	;wreg free
  4075  010BA6  0100               	movlb	0	; () banked
  4076  010BA8  5166               	movf	?_atoi& (0+255),w,b
  4077  010BAA  0100               	movlb	0	; () banked
  4078  010BAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4079  010BAE  ECFE  F09F         	call	_terminal_at_hand	;wreg free
  4080  010BB2                     l9780:
  4081                           
  4082                           ;My_terminal.c: 109: }
  4083                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4084  010BB2  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4085  010BB6  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4086  010BBA  0ED4               	movlw	low (STR_50+2)
  4087  010BBC  0100               	movlb	0	; () banked
  4088  010BBE  6F62               	movwf	strcmp@s2& (0+255),b
  4089  010BC0  0EFF               	movlw	high (STR_50+2)
  4090  010BC2  0100               	movlb	0	; () banked
  4091  010BC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4092  010BC6  EC60  F0A0         	call	_strcmp	;wreg free
  4093  010BCA  0100               	movlb	0	; () banked
  4094  010BCC  5160               	movf	?_strcmp& (0+255),w,b
  4095  010BCE  0100               	movlb	0	; () banked
  4096  010BD0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4097  010BD2  B4D8               	btfsc	status,2,c
  4098  010BD4  D012               	goto	l9784
  4099                           
  4100                           ; BSR set to: 0
  4101  010BD6  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4102  010BDA  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4103  010BDE  0E9A               	movlw	low STR_38
  4104  010BE0  0100               	movlb	0	; () banked
  4105  010BE2  6F62               	movwf	strcmp@s2& (0+255),b
  4106  010BE4  0EFF               	movlw	high STR_38
  4107  010BE6  0100               	movlb	0	; () banked
  4108  010BE8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4109  010BEA  EC60  F0A0         	call	_strcmp	;wreg free
  4110  010BEE  0100               	movlb	0	; () banked
  4111  010BF0  5160               	movf	?_strcmp& (0+255),w,b
  4112  010BF2  0100               	movlb	0	; () banked
  4113  010BF4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4114  010BF6  A4D8               	btfss	status,2,c
  4115  010BF8  D01C               	goto	l9786
  4116  010BFA                     l9784:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4120  010BFA  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4121  010BFE  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4122  010C02  0E3D               	movlw	low (_now+5)
  4123  010C04  0100               	movlb	0	; () banked
  4124  010C06  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4125  010C08  0E01               	movlw	high (_now+5)
  4126  010C0A  0100               	movlb	0	; () banked
  4127  010C0C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4128  010C0E  0E00               	movlw	0
  4129  010C10  0100               	movlb	0	; () banked
  4130  010C12  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4131  010C14  0E3B               	movlw	59
  4132  010C16  0100               	movlb	0	; () banked
  4133  010C18  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4134  010C1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4135  010C1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4136  010C22  EC7E  F092         	call	_atoi	;wreg free
  4137  010C26  0100               	movlb	0	; () banked
  4138  010C28  5166               	movf	?_atoi& (0+255),w,b
  4139  010C2A  0100               	movlb	0	; () banked
  4140  010C2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4141  010C2E  ECFE  F09F         	call	_terminal_at_hand	;wreg free
  4142  010C32                     l9786:
  4143                           
  4144                           ;My_terminal.c: 112: }
  4145                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4146  010C32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4147  010C36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4148  010C3A  0EF5               	movlw	low STR_39
  4149  010C3C  0100               	movlb	0	; () banked
  4150  010C3E  6F62               	movwf	strcmp@s2& (0+255),b
  4151  010C40  0EFF               	movlw	high STR_39
  4152  010C42  0100               	movlb	0	; () banked
  4153  010C44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4154  010C46  EC60  F0A0         	call	_strcmp	;wreg free
  4155  010C4A  0100               	movlb	0	; () banked
  4156  010C4C  5160               	movf	?_strcmp& (0+255),w,b
  4157  010C4E  0100               	movlb	0	; () banked
  4158  010C50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4159  010C52  B4D8               	btfsc	status,2,c
  4160  010C54  D012               	goto	l9790
  4161                           
  4162                           ; BSR set to: 0
  4163  010C56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4164  010C5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4165  010C5E  0E93               	movlw	low STR_40
  4166  010C60  0100               	movlb	0	; () banked
  4167  010C62  6F62               	movwf	strcmp@s2& (0+255),b
  4168  010C64  0EFF               	movlw	high STR_40
  4169  010C66  0100               	movlb	0	; () banked
  4170  010C68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4171  010C6A  EC60  F0A0         	call	_strcmp	;wreg free
  4172  010C6E  0100               	movlb	0	; () banked
  4173  010C70  5160               	movf	?_strcmp& (0+255),w,b
  4174  010C72  0100               	movlb	0	; () banked
  4175  010C74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4176  010C76  A4D8               	btfss	status,2,c
  4177  010C78  0012               	return	
  4178  010C7A                     l9790:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4182  010C7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4183  010C7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4184  010C82  0E3C               	movlw	low (_now+4)
  4185  010C84  0100               	movlb	0	; () banked
  4186  010C86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4187  010C88  0E01               	movlw	high (_now+4)
  4188  010C8A  0100               	movlb	0	; () banked
  4189  010C8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4190  010C8E  0E00               	movlw	0
  4191  010C90  0100               	movlb	0	; () banked
  4192  010C92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4193  010C94  0E3B               	movlw	59
  4194  010C96  0100               	movlb	0	; () banked
  4195  010C98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4196  010C9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4197  010C9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4198  010CA2  EC7E  F092         	call	_atoi	;wreg free
  4199  010CA6  0100               	movlb	0	; () banked
  4200  010CA8  5166               	movf	?_atoi& (0+255),w,b
  4201  010CAA  0100               	movlb	0	; () banked
  4202  010CAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4203  010CAE  ECFE  F09F         	call	_terminal_at_hand	;wreg free
  4204  010CB2  0012               	return	
  4205  010CB4                     __end_of_terminal_time:
  4206                           	opt stack 0
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           indf2	equ	0xFDF
  4220                           fsr2h	equ	0xFDA
  4221                           fsr2l	equ	0xFD9
  4222                           status	equ	0xFD8
  4223                           
  4224 ;; *************** function _terminal_at_hand *****************
  4225 ;; Defined at:
  4226 ;;		line 82 in file "../My_library/My_terminal.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4229 ;;		 -> usb_tx(8), 
  4230 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4231 ;;		 -> now(14), 
  4232 ;;  min             1   89[BANK0 ] unsigned char 
  4233 ;;  max             1   90[BANK0 ] unsigned char 
  4234 ;;  value           1   91[BANK0 ] unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;		None               void
  4239 ;; Registers used:
  4240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4246 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;Total ram usage:        7 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:   16
  4253 ;; This function calls:
  4254 ;;		_RTCC_from_caltime
  4255 ;;		_print_time
  4256 ;;		_ringbuf_put_str
  4257 ;; This function is called by:
  4258 ;;		_terminal_time
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text4
  4263  013FFC                     __ptext4:
  4264                           	opt stack 0
  4265  013FFC                     _terminal_at_hand:
  4266                           	opt stack 11
  4267                           
  4268                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4269                           
  4270                           ;incstack = 0
  4271  013FFC  0100               	movlb	0	; () banked
  4272  013FFE  51B9               	movf	terminal_at_hand@min& (0+255),w,b
  4273  014000  0100               	movlb	0	; () banked
  4274  014002  5DBB               	subwf	terminal_at_hand@value& (0+255),w,b
  4275  014004  A0D8               	btfss	status,0,c
  4276  014006  D01E               	goto	l9504
  4277                           
  4278                           ; BSR set to: 0
  4279  014008  0100               	movlb	0	; () banked
  4280  01400A  51BB               	movf	terminal_at_hand@value& (0+255),w,b
  4281  01400C  0100               	movlb	0	; () banked
  4282  01400E  5DBA               	subwf	terminal_at_hand@max& (0+255),w,b
  4283  014010  A0D8               	btfss	status,0,c
  4284  014012  D018               	goto	l9504
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;My_terminal.c: 84: *hand = value;
  4288  014014  C0B7  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4289  014018  C0B8  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4290  01401C  C0BB  FFDF         	movff	terminal_at_hand@value,indf2
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4294  014020  0E38               	movlw	low _now
  4295  014022  0100               	movlb	0	; () banked
  4296  014024  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4297  014026  0E01               	movlw	high _now
  4298  014028  0100               	movlb	0	; () banked
  4299  01402A  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4300  01402C  ECD1  F0A2         	call	_RTCC_from_caltime	;wreg free
  4301                           
  4302                           ;My_terminal.c: 86: time_change_flag = 1;
  4303  014030  0E01               	movlw	1
  4304  014032  0100               	movlb	0	; () banked
  4305  014034  6FF0               	movwf	_time_change_flag& (0+255),b
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;My_terminal.c: 87: print_time(tx);
  4309  014036  C0B5  F095         	movff	terminal_at_hand@tx,print_time@tx
  4310  01403A  C0B6  F096         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4311  01403E  EC21  F09E         	call	_print_time	;wreg free
  4312                           
  4313                           ;My_terminal.c: 88: } else {
  4314  014042  0012               	return	
  4315  014044                     l9504:
  4316                           
  4317                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4318  014044  C0B5  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4319  014048  C0B6  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4320  01404C  0E84               	movlw	low STR_24
  4321  01404E  0100               	movlb	0	; () banked
  4322  014050  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4323  014052  0EFF               	movlw	high STR_24
  4324  014054  0100               	movlb	0	; () banked
  4325  014056  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4326  014058  ECCC  F09F         	call	_ringbuf_put_str	;wreg free
  4327  01405C  0012               	return	
  4328  01405E                     __end_of_terminal_at_hand:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           postinc0	equ	0xFEE
  4338                           wreg	equ	0xFE8
  4339                           postdec1	equ	0xFE5
  4340                           fsr1h	equ	0xFE2
  4341                           fsr1l	equ	0xFE1
  4342                           indf2	equ	0xFDF
  4343                           fsr2h	equ	0xFDA
  4344                           fsr2l	equ	0xFD9
  4345                           status	equ	0xFD8
  4346                           
  4347 ;; *************** function _print_time *****************
  4348 ;; Defined at:
  4349 ;;		line 68 in file "../My_library/My_terminal.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4352 ;;		 -> usb_tx(8), 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  str            30   55[BANK0 ] unsigned char [30]
  4355 ;; Return value:  Size  Location     Type
  4356 ;;		None               void
  4357 ;; Registers used:
  4358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4364 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4365 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;Total ram usage:       32 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:   15
  4371 ;; This function calls:
  4372 ;;		_RTCC_from_RTCC
  4373 ;;		_ringbuf_put_str
  4374 ;;		_sprintf
  4375 ;; This function is called by:
  4376 ;;		_terminal_at_hand
  4377 ;;		_terminal_time
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text5
  4382  013C42                     __ptext5:
  4383                           	opt stack 0
  4384  013C42                     _print_time:
  4385                           	opt stack 11
  4386                           
  4387                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4388                           
  4389                           ;incstack = 0
  4390  013C42  0E38               	movlw	low _now
  4391  013C44  0100               	movlb	0	; () banked
  4392  013C46  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4393  013C48  0E01               	movlw	high _now
  4394  013C4A  0100               	movlb	0	; () banked
  4395  013C4C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4396  013C4E  EC51  F0A3         	call	_RTCC_from_RTCC	;wreg free
  4397                           
  4398                           ;My_terminal.c: 70: char str[30];
  4399                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4400                           ;My_terminal.c: 72: now.YY,
  4401                           ;My_terminal.c: 73: now.MM,
  4402                           ;My_terminal.c: 74: now.DD,
  4403                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4404                           ;My_terminal.c: 76: now.hh,
  4405                           ;My_terminal.c: 77: now.mm,
  4406                           ;My_terminal.c: 78: now.ss);
  4407  013C52  0E97               	movlw	low print_time@str
  4408  013C54  0100               	movlb	0	; () banked
  4409  013C56  6F72               	movwf	sprintf@sp& (0+255),b
  4410  013C58  0E00               	movlw	high print_time@str
  4411  013C5A  0100               	movlb	0	; () banked
  4412  013C5C  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4413  013C5E  0E2D               	movlw	low STR_23
  4414  013C60  0100               	movlb	0	; () banked
  4415  013C62  6F74               	movwf	sprintf@f& (0+255),b
  4416  013C64  0EFF               	movlw	high STR_23
  4417  013C66  0100               	movlb	0	; () banked
  4418  013C68  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4419  013C6A  C142  F076         	movff	_now+10,?_sprintf+4
  4420  013C6E  0100               	movlb	0	; () banked
  4421  013C70  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4422  013C72  C141  F078         	movff	_now+9,?_sprintf+6
  4423  013C76  0100               	movlb	0	; () banked
  4424  013C78  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4425  013C7A  C140  F07A         	movff	_now+8,?_sprintf+8
  4426  013C7E  0100               	movlb	0	; () banked
  4427  013C80  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4428  013C82  0101               	movlb	1	; () banked
  4429  013C84  513F               	movf	(_now+7)& (0+255),w,b
  4430  013C86  0D04               	mullw	4
  4431  013C88  0EC0               	movlw	low _weekday_3char
  4432  013C8A  24F3               	addwf	prodl,w,c
  4433  013C8C  0100               	movlb	0	; () banked
  4434  013C8E  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4435  013C90  0EFD               	movlw	high _weekday_3char
  4436  013C92  20F4               	addwfc	prodh,w,c
  4437  013C94  0100               	movlb	0	; () banked
  4438  013C96  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4439  013C98  C13E  F07E         	movff	_now+6,?_sprintf+12
  4440  013C9C  0100               	movlb	0	; () banked
  4441  013C9E  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4442  013CA0  C13D  F080         	movff	_now+5,?_sprintf+14
  4443  013CA4  0100               	movlb	0	; () banked
  4444  013CA6  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4445  013CA8  C13C  F082         	movff	_now+4,?_sprintf+16
  4446  013CAC  0100               	movlb	0	; () banked
  4447  013CAE  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4448  013CB0  EC57  F082         	call	_sprintf	;wreg free
  4449                           
  4450                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4451  013CB4  C095  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4452  013CB8  C096  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4453  013CBC  0E97               	movlw	low print_time@str
  4454  013CBE  0100               	movlb	0	; () banked
  4455  013CC0  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4456  013CC2  0E00               	movlw	high print_time@str
  4457  013CC4  0100               	movlb	0	; () banked
  4458  013CC6  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4459  013CC8  ECCC  F09F         	call	_ringbuf_put_str	;wreg free
  4460  013CCC  0012               	return		;funcret
  4461  013CCE                     __end_of_print_time:
  4462                           	opt stack 0
  4463                           tblptru	equ	0xFF8
  4464                           tblptrh	equ	0xFF7
  4465                           tblptrl	equ	0xFF6
  4466                           tablat	equ	0xFF5
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           postinc0	equ	0xFEE
  4471                           wreg	equ	0xFE8
  4472                           postdec1	equ	0xFE5
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           indf2	equ	0xFDF
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _sprintf *****************
  4481 ;; Defined at:
  4482 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4485 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4486 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4487 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  tmpval          4    0        struct .
  4490 ;;  width           2   51[BANK0 ] int 
  4491 ;;  len             2   47[BANK0 ] unsigned int 
  4492 ;;  val             2   45[BANK0 ] unsigned int 
  4493 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4494 ;;		 -> STR_61(7), weekday_3char(28), 
  4495 ;;  ap              2   41[BANK0 ] PTR void [1]
  4496 ;;		 -> ?_sprintf(2), 
  4497 ;;  c               1   50[BANK0 ] char 
  4498 ;;  flag            1   49[BANK0 ] unsigned char 
  4499 ;;  prec            1   40[BANK0 ] char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2   18[BANK0 ] int 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4509 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;Total ram usage:       35 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:   12
  4516 ;; This function calls:
  4517 ;;		___lwdiv
  4518 ;;		___lwmod
  4519 ;;		___wmul
  4520 ;;		_isdigit
  4521 ;; This function is called by:
  4522 ;;		_print_time
  4523 ;;		_display_dec
  4524 ;;		_print_time_dec
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text6
  4529  0104AE                     __ptext6:
  4530                           	opt stack 0
  4531  0104AE                     _sprintf:
  4532                           	opt stack 13
  4533                           
  4534                           ;doprnt.c: 494: va_list ap;
  4535                           ;doprnt.c: 499: signed char c;
  4536                           ;doprnt.c: 501: int width;
  4537                           ;doprnt.c: 506: signed char prec;
  4538                           ;doprnt.c: 508: unsigned char flag;
  4539                           ;doprnt.c: 523: union {
  4540                           ;doprnt.c: 524: unsigned long vd;
  4541                           ;doprnt.c: 525: double integ;
  4542                           ;doprnt.c: 526: } tmpval;
  4543                           ;doprnt.c: 528: unsigned int val;
  4544                           ;doprnt.c: 529: unsigned len;
  4545                           ;doprnt.c: 530: const char * cp;
  4546                           ;doprnt.c: 533: *ap = __va_start();
  4547                           
  4548                           ;incstack = 0
  4549  0104AE  0E76               	movlw	low (?_sprintf+4)
  4550  0104B0  0100               	movlb	0	; () banked
  4551  0104B2  6F89               	movwf	sprintf@ap& (0+255),b
  4552  0104B4  0E00               	movlw	high (?_sprintf+4)
  4553  0104B6  0100               	movlb	0	; () banked
  4554  0104B8  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4555                           
  4556                           ;doprnt.c: 536: while(c = *f++) {
  4557  0104BA  D20F               	goto	l9438
  4558  0104BC                     l9298:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;doprnt.c: 538: if(c != '%')
  4562  0104BC  0E25               	movlw	37
  4563  0104BE  0100               	movlb	0	; () banked
  4564  0104C0  1992               	xorwf	sprintf@c& (0+255),w,b
  4565  0104C2  B4D8               	btfsc	status,2,c
  4566  0104C4  D00A               	goto	l9304
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;doprnt.c: 540: {
  4570                           ;doprnt.c: 541: ((*sp++ = (c)));
  4571  0104C6  C072  FFD9         	movff	sprintf@sp,fsr2l
  4572  0104CA  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4573  0104CE  C092  FFDF         	movff	sprintf@c,indf2
  4574                           
  4575                           ; BSR set to: 0
  4576  0104D2  0100               	movlb	0	; () banked
  4577  0104D4  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4578  0104D6  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4579                           
  4580                           ;doprnt.c: 542: continue;
  4581  0104D8  D200               	goto	l9438
  4582  0104DA                     l9304:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;doprnt.c: 543: }
  4586                           ;doprnt.c: 546: width = 0;
  4587  0104DA  0E00               	movlw	0
  4588  0104DC  0100               	movlb	0	; () banked
  4589  0104DE  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4590  0104E0  0E00               	movlw	0
  4591  0104E2  6F93               	movwf	sprintf@width& (0+255),b
  4592                           
  4593                           ;doprnt.c: 548: flag = 0;
  4594  0104E4  0E00               	movlw	0
  4595  0104E6  0100               	movlb	0	; () banked
  4596  0104E8  6F91               	movwf	sprintf@flag& (0+255),b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;doprnt.c: 551: switch(*f) {
  4600                           
  4601                           ;doprnt.c: 550: for(;;) {
  4602  0104EA  D005               	goto	l9310
  4603  0104EC                     l9306:
  4604                           
  4605                           ;doprnt.c: 580: flag |= 0x04;
  4606  0104EC  0100               	movlb	0	; () banked
  4607  0104EE  8591               	bsf	sprintf@flag& (0+255),2,b
  4608                           
  4609                           ;doprnt.c: 581: f++;
  4610  0104F0  0100               	movlb	0	; () banked
  4611  0104F2  4B74               	infsnz	sprintf@f& (0+255),f,b
  4612  0104F4  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4613  0104F6                     l9310:
  4614  0104F6  C074  FFF6         	movff	sprintf@f,tblptrl
  4615  0104FA  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4616  0104FE                     	if	0	;tblptru may be non-zero
  4617  0104FE                     	endif
  4618  0104FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4619  0104FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4620  010500  6EF8               	movwf	tblptru,c
  4621  010502                     	endif
  4622  010502  0008               	tblrd		*
  4623  010504  50F5               	movf	tablat,w,c
  4624                           
  4625                           ; Switch size 1, requested type "space"
  4626                           ; Number of cases is 1, Range of values is 48 to 48
  4627                           ; switch strategies available:
  4628                           ; Name         Instructions Cycles
  4629                           ; simple_byte            4     3 (average)
  4630                           ;	Chosen strategy is simple_byte
  4631  010506  0A30               	xorlw	48	; case 48
  4632  010508  B4D8               	btfsc	status,2,c
  4633  01050A  D7F0               	goto	l9306
  4634                           
  4635                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4636                           
  4637                           ;doprnt.c: 586: }
  4638                           
  4639                           ;doprnt.c: 585: break;
  4640  01050C  C074  FFF6         	movff	sprintf@f,tblptrl
  4641  010510  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4642  010514                     	if	0	;tblptru may be non-zero
  4643  010514                     	endif
  4644  010514                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4645  010514  0E00               	movlw	low (__mediumconst shr (0+16))
  4646  010516  6EF8               	movwf	tblptru,c
  4647  010518                     	endif
  4648  010518  0008               	tblrd		*
  4649  01051A  50F5               	movf	tablat,w,c
  4650  01051C  ECA8  F0A2         	call	_isdigit
  4651  010520  A0D8               	btfss	status,0,c
  4652  010522  D0CB               	goto	l9360
  4653                           
  4654                           ;doprnt.c: 598: width = 0;
  4655  010524  0E00               	movlw	0
  4656  010526  0100               	movlb	0	; () banked
  4657  010528  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4658  01052A  0E00               	movlw	0
  4659  01052C  6F93               	movwf	sprintf@width& (0+255),b
  4660  01052E                     l9316:
  4661                           
  4662                           ;doprnt.c: 600: width *= 10;
  4663  01052E  C093  F060         	movff	sprintf@width,___wmul@multiplier
  4664  010532  C094  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4665  010536  0E00               	movlw	0
  4666  010538  0100               	movlb	0	; () banked
  4667  01053A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4668  01053C  0E0A               	movlw	10
  4669  01053E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4670  010540  ECEB  F0A1         	call	___wmul	;wreg free
  4671  010544  C060  F093         	movff	?___wmul,sprintf@width
  4672  010548  C061  F094         	movff	?___wmul+1,sprintf@width+1
  4673                           
  4674                           ;doprnt.c: 601: width += *f++ - '0';
  4675  01054C  0ED0               	movlw	208
  4676  01054E  0100               	movlb	0	; () banked
  4677  010550  6F84               	movwf	??_sprintf& (0+255),b
  4678  010552  0EFF               	movlw	255
  4679  010554  0100               	movlb	0	; () banked
  4680  010556  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4681  010558  C074  FFF6         	movff	sprintf@f,tblptrl
  4682  01055C  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4683  010560                     	if	0	;tblptru may be non-zero
  4684  010560                     	endif
  4685  010560                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4686  010560  0E00               	movlw	low (__mediumconst shr (0+16))
  4687  010562  6EF8               	movwf	tblptru,c
  4688  010564                     	endif
  4689  010564  0008               	tblrd		*
  4690  010566  50F5               	movf	tablat,w,c
  4691  010568  0100               	movlb	0	; () banked
  4692  01056A  6F86               	movwf	(??_sprintf+2)& (0+255),b
  4693  01056C  6B87               	clrf	(??_sprintf+3)& (0+255),b
  4694  01056E  0100               	movlb	0	; () banked
  4695  010570  5184               	movf	??_sprintf& (0+255),w,b
  4696  010572  0100               	movlb	0	; () banked
  4697  010574  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  4698  010576  0100               	movlb	0	; () banked
  4699  010578  5185               	movf	(??_sprintf+1)& (0+255),w,b
  4700  01057A  0100               	movlb	0	; () banked
  4701  01057C  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  4702  01057E  0100               	movlb	0	; () banked
  4703  010580  5186               	movf	(??_sprintf+2)& (0+255),w,b
  4704  010582  0100               	movlb	0	; () banked
  4705  010584  2793               	addwf	sprintf@width& (0+255),f,b
  4706  010586  0100               	movlb	0	; () banked
  4707  010588  5187               	movf	(??_sprintf+3)& (0+255),w,b
  4708  01058A  0100               	movlb	0	; () banked
  4709  01058C  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  4710                           
  4711                           ; BSR set to: 0
  4712  01058E  0100               	movlb	0	; () banked
  4713  010590  4B74               	infsnz	sprintf@f& (0+255),f,b
  4714  010592  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4718  010594  C074  FFF6         	movff	sprintf@f,tblptrl
  4719  010598  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4720  01059C                     	if	0	;tblptru may be non-zero
  4721  01059C                     	endif
  4722  01059C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4723  01059C  0E00               	movlw	low (__mediumconst shr (0+16))
  4724  01059E  6EF8               	movwf	tblptru,c
  4725  0105A0                     	endif
  4726  0105A0  0008               	tblrd		*
  4727  0105A2  50F5               	movf	tablat,w,c
  4728  0105A4  ECA8  F0A2         	call	_isdigit
  4729  0105A8  A0D8               	btfss	status,0,c
  4730  0105AA  D087               	goto	l9360
  4731  0105AC  D7C0               	goto	l9316
  4732  0105AE                     l9324:
  4733                           
  4734                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4735  0105AE  C089  FFD9         	movff	sprintf@ap,fsr2l
  4736  0105B2  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4737  0105B6  CFDE F08B          	movff	postinc2,sprintf@cp
  4738  0105BA  CFDD F08C          	movff	postdec2,sprintf@cp+1
  4739  0105BE  0E02               	movlw	2
  4740  0105C0  0100               	movlb	0	; () banked
  4741  0105C2  2789               	addwf	sprintf@ap& (0+255),f,b
  4742  0105C4  0E00               	movlw	0
  4743  0105C6  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;doprnt.c: 740: if(!cp)
  4747  0105C8  0100               	movlb	0	; () banked
  4748  0105CA  518B               	movf	sprintf@cp& (0+255),w,b
  4749  0105CC  0100               	movlb	0	; () banked
  4750  0105CE  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4751  0105D0  A4D8               	btfss	status,2,c
  4752  0105D2  D006               	goto	l9332
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;doprnt.c: 741: cp = "(null)";
  4756  0105D4  0E8C               	movlw	low STR_61
  4757  0105D6  0100               	movlb	0	; () banked
  4758  0105D8  6F8B               	movwf	sprintf@cp& (0+255),b
  4759  0105DA  0EFF               	movlw	high STR_61
  4760  0105DC  0100               	movlb	0	; () banked
  4761  0105DE  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  4762  0105E0                     l9332:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;doprnt.c: 745: len = 0;
  4766  0105E0  0E00               	movlw	0
  4767  0105E2  0100               	movlb	0	; () banked
  4768  0105E4  6F90               	movwf	(sprintf@len+1)& (0+255),b
  4769  0105E6  0E00               	movlw	0
  4770  0105E8  6F8F               	movwf	sprintf@len& (0+255),b
  4771                           
  4772                           ;doprnt.c: 746: while(cp[len])
  4773  0105EA  D003               	goto	l9336
  4774  0105EC                     l9334:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;doprnt.c: 747: len++;
  4778  0105EC  0100               	movlb	0	; () banked
  4779  0105EE  4B8F               	infsnz	sprintf@len& (0+255),f,b
  4780  0105F0  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  4781  0105F2                     l9336:
  4782                           
  4783                           ; BSR set to: 0
  4784  0105F2  0100               	movlb	0	; () banked
  4785  0105F4  518F               	movf	sprintf@len& (0+255),w,b
  4786  0105F6  0100               	movlb	0	; () banked
  4787  0105F8  258B               	addwf	sprintf@cp& (0+255),w,b
  4788  0105FA  0100               	movlb	0	; () banked
  4789  0105FC  6F84               	movwf	??_sprintf& (0+255),b
  4790  0105FE  0100               	movlb	0	; () banked
  4791  010600  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4792  010602  0100               	movlb	0	; () banked
  4793  010604  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4794  010606  0100               	movlb	0	; () banked
  4795  010608  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4796  01060A  C084  FFF6         	movff	??_sprintf,tblptrl
  4797  01060E  C085  FFF7         	movff	??_sprintf+1,tblptrh
  4798  010612                     	if	0	;tblptru may be non-zero
  4799  010612                     	endif
  4800  010612                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4801  010612  0E00               	movlw	low (__mediumconst shr (0+16))
  4802  010614  6EF8               	movwf	tblptru,c
  4803  010616                     	endif
  4804  010616  0008               	tblrd		*
  4805  010618  50F5               	movf	tablat,w,c
  4806  01061A  0900               	iorlw	0
  4807  01061C  A4D8               	btfss	status,2,c
  4808  01061E  D7E6               	goto	l9334
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;doprnt.c: 757: if(width > len)
  4812                           
  4813                           ; BSR set to: 0
  4814  010620  0100               	movlb	0	; () banked
  4815  010622  5193               	movf	sprintf@width& (0+255),w,b
  4816  010624  0100               	movlb	0	; () banked
  4817  010626  5D8F               	subwf	sprintf@len& (0+255),w,b
  4818  010628  0100               	movlb	0	; () banked
  4819  01062A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  4820  01062C  0100               	movlb	0	; () banked
  4821  01062E  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  4822  010630  B0D8               	btfsc	status,0,c
  4823  010632  D009               	goto	l9342
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;doprnt.c: 758: width -= len;
  4827  010634  0100               	movlb	0	; () banked
  4828  010636  518F               	movf	sprintf@len& (0+255),w,b
  4829  010638  0100               	movlb	0	; () banked
  4830  01063A  5F93               	subwf	sprintf@width& (0+255),f,b
  4831  01063C  0100               	movlb	0	; () banked
  4832  01063E  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4833  010640  0100               	movlb	0	; () banked
  4834  010642  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  4835  010644  D00F               	goto	l9348
  4836  010646                     l9342:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;doprnt.c: 759: else
  4840                           ;doprnt.c: 760: width = 0;
  4841  010646  0E00               	movlw	0
  4842  010648  0100               	movlb	0	; () banked
  4843  01064A  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4844  01064C  0E00               	movlw	0
  4845  01064E  6F93               	movwf	sprintf@width& (0+255),b
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;doprnt.c: 764: while(width--)
  4849  010650  D009               	goto	l9348
  4850  010652                     l9344:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4854  010652  C072  FFD9         	movff	sprintf@sp,fsr2l
  4855  010656  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4856  01065A  0E20               	movlw	32
  4857  01065C  6EDF               	movwf	indf2,c
  4858                           
  4859                           ; BSR set to: 0
  4860  01065E  0100               	movlb	0	; () banked
  4861  010660  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4862  010662  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4863  010664                     l9348:
  4864                           
  4865                           ; BSR set to: 0
  4866  010664  0100               	movlb	0	; () banked
  4867  010666  0793               	decf	sprintf@width& (0+255),f,b
  4868  010668  A0D8               	btfss	status,0,c
  4869  01066A  0794               	decf	(sprintf@width+1)& (0+255),f,b
  4870  01066C  0100               	movlb	0	; () banked
  4871  01066E  2993               	incf	sprintf@width& (0+255),w,b
  4872  010670  E1F0               	bnz	l9344
  4873  010672  0100               	movlb	0	; () banked
  4874  010674  2994               	incf	(sprintf@width+1)& (0+255),w,b
  4875  010676  B4D8               	btfsc	status,2,c
  4876  010678  D014               	goto	l9356
  4877  01067A  D7EB               	goto	l9344
  4878  01067C                     l9350:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4882  01067C  C08B  FFF6         	movff	sprintf@cp,tblptrl
  4883  010680  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  4884  010684                     	if	0	;tblptru may be non-zero
  4885  010684                     	endif
  4886  010684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4887  010684  0E00               	movlw	low (__mediumconst shr (0+16))
  4888  010686  6EF8               	movwf	tblptru,c
  4889  010688                     	endif
  4890  010688  C072  FFD9         	movff	sprintf@sp,fsr2l
  4891  01068C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4892  010690  0008               	tblrd		*
  4893  010692  CFF5 FFDF          	movff	tablat,indf2
  4894                           
  4895                           ; BSR set to: 0
  4896  010696  0100               	movlb	0	; () banked
  4897  010698  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  4898  01069A  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  4899                           
  4900                           ; BSR set to: 0
  4901  01069C  0100               	movlb	0	; () banked
  4902  01069E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4903  0106A0  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4904  0106A2                     l9356:
  4905                           
  4906                           ; BSR set to: 0
  4907  0106A2  0100               	movlb	0	; () banked
  4908  0106A4  078F               	decf	sprintf@len& (0+255),f,b
  4909  0106A6  A0D8               	btfss	status,0,c
  4910  0106A8  0790               	decf	(sprintf@len+1)& (0+255),f,b
  4911  0106AA  0100               	movlb	0	; () banked
  4912  0106AC  298F               	incf	sprintf@len& (0+255),w,b
  4913  0106AE  E1E6               	bnz	l9350
  4914  0106B0  0100               	movlb	0	; () banked
  4915  0106B2  2990               	incf	(sprintf@len+1)& (0+255),w,b
  4916  0106B4  B4D8               	btfsc	status,2,c
  4917  0106B6  D111               	goto	l9438
  4918  0106B8  D7E1               	goto	l9350
  4919  0106BA                     l9360:
  4920  0106BA  C074  FFF6         	movff	sprintf@f,tblptrl
  4921  0106BE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4922  0106C2  0100               	movlb	0	; () banked
  4923  0106C4  4B74               	infsnz	sprintf@f& (0+255),f,b
  4924  0106C6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4925  0106C8                     	if	0	;tblptru may be non-zero
  4926  0106C8                     	endif
  4927  0106C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4928  0106C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4929  0106CA  6EF8               	movwf	tblptru,c
  4930  0106CC                     	endif
  4931  0106CC  0008               	tblrd		*
  4932  0106CE  CFF5 F092          	movff	tablat,sprintf@c
  4933  0106D2  0100               	movlb	0	; () banked
  4934  0106D4  5192               	movf	sprintf@c& (0+255),w,b
  4935                           
  4936                           ; Switch size 1, requested type "space"
  4937                           ; Number of cases is 4, Range of values is 0 to 115
  4938                           ; switch strategies available:
  4939                           ; Name         Instructions Cycles
  4940                           ; simple_byte           13     7 (average)
  4941                           ;	Chosen strategy is simple_byte
  4942  0106D6  0A00               	xorlw	0	; case 0
  4943  0106D8  B4D8               	btfsc	status,2,c
  4944  0106DA  D10F               	goto	l9440
  4945  0106DC  0A64               	xorlw	100	; case 100
  4946  0106DE  B4D8               	btfsc	status,2,c
  4947  0106E0  D007               	goto	l9362
  4948  0106E2  0A0D               	xorlw	13	; case 105
  4949  0106E4  B4D8               	btfsc	status,2,c
  4950  0106E6  D004               	goto	l9362
  4951  0106E8  0A1A               	xorlw	26	; case 115
  4952  0106EA  B4D8               	btfsc	status,2,c
  4953  0106EC  D760               	goto	l9324
  4954  0106EE  D0F5               	goto	l9438
  4955  0106F0                     l9362:
  4956                           
  4957                           ;doprnt.c: 1253: {
  4958                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4959  0106F0  C089  FFD9         	movff	sprintf@ap,fsr2l
  4960  0106F4  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4961  0106F8  CFDE F08D          	movff	postinc2,sprintf@val
  4962  0106FC  CFDD F08E          	movff	postdec2,sprintf@val+1
  4963  010700  0E02               	movlw	2
  4964  010702  0100               	movlb	0	; () banked
  4965  010704  2789               	addwf	sprintf@ap& (0+255),f,b
  4966  010706  0E00               	movlw	0
  4967  010708  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;doprnt.c: 1261: if((int)val < 0) {
  4971  01070A  0100               	movlb	0	; () banked
  4972  01070C  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  4973  01070E  D008               	goto	l9372
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;doprnt.c: 1262: flag |= 0x03;
  4977  010710  0E03               	movlw	3
  4978  010712  0100               	movlb	0	; () banked
  4979  010714  1391               	iorwf	sprintf@flag& (0+255),f,b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;doprnt.c: 1263: val = -val;
  4983  010716  0100               	movlb	0	; () banked
  4984  010718  6D8D               	negf	sprintf@val& (0+255),b
  4985  01071A  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  4986  01071C  B0D8               	btfsc	status,0,c
  4987  01071E  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  4988  010720                     l9372:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;doprnt.c: 1264: }
  4992                           ;doprnt.c: 1266: }
  4993                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4994  010720  0E01               	movlw	1
  4995  010722  0100               	movlb	0	; () banked
  4996  010724  6F92               	movwf	sprintf@c& (0+255),b
  4997  010726                     l9374:
  4998                           
  4999                           ; BSR set to: 0
  5000  010726  0E05               	movlw	5
  5001  010728  0100               	movlb	0	; () banked
  5002  01072A  1992               	xorwf	sprintf@c& (0+255),w,b
  5003  01072C  B4D8               	btfsc	status,2,c
  5004  01072E  D019               	goto	l9386
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;doprnt.c: 1306: if(val < dpowers[c])
  5008                           
  5009                           ; BSR set to: 0
  5010                           
  5011                           ; BSR set to: 0
  5012  010730  0100               	movlb	0	; () banked
  5013  010732  5192               	movf	sprintf@c& (0+255),w,b
  5014  010734  0D02               	mullw	2
  5015  010736  0E03               	movlw	low _dpowers
  5016  010738  24F3               	addwf	prodl,w,c
  5017  01073A  6EF6               	movwf	tblptrl,c
  5018  01073C  0EFD               	movlw	high _dpowers
  5019  01073E  20F4               	addwfc	prodh,w,c
  5020  010740  6EF7               	movwf	tblptrh,c
  5021  010742                     	if	1	;There are 3 active tblptr bytes
  5022  010742  6AF8               	clrf	tblptru,c
  5023  010744  0E00               	movlw	low (__mediumconst shr (0+16))
  5024  010746  22F8               	addwfc	tblptru,f,c
  5025  010748                     	endif
  5026  010748  0009               	tblrd		*+
  5027  01074A  50F5               	movf	tablat,w,c
  5028  01074C  0100               	movlb	0	; () banked
  5029  01074E  5D8D               	subwf	sprintf@val& (0+255),w,b
  5030  010750  0009               	tblrd		*+
  5031  010752  50F5               	movf	tablat,w,c
  5032  010754  0100               	movlb	0	; () banked
  5033  010756  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  5034  010758  A0D8               	btfss	status,0,c
  5035  01075A  D003               	goto	l9386
  5036                           
  5037                           ; BSR set to: 0
  5038                           
  5039                           ; BSR set to: 0
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;doprnt.c: 1307: break;
  5043  01075C  0100               	movlb	0	; () banked
  5044  01075E  2B92               	incf	sprintf@c& (0+255),f,b
  5045  010760  D7E2               	goto	l9374
  5046  010762                     l9386:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5050  010762  0100               	movlb	0	; () banked
  5051  010764  5193               	movf	sprintf@width& (0+255),w,b
  5052  010766  0100               	movlb	0	; () banked
  5053  010768  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5054  01076A  B4D8               	btfsc	status,2,c
  5055  01076C  D00B               	goto	l9392
  5056                           
  5057                           ; BSR set to: 0
  5058  01076E  C091  F084         	movff	sprintf@flag,??_sprintf
  5059  010772  0E03               	movlw	3
  5060  010774  0100               	movlb	0	; () banked
  5061  010776  1784               	andwf	??_sprintf& (0+255),f,b
  5062  010778  B4D8               	btfsc	status,2,c
  5063  01077A  D004               	goto	l9392
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;doprnt.c: 1346: width--;
  5067  01077C  0100               	movlb	0	; () banked
  5068  01077E  0793               	decf	sprintf@width& (0+255),f,b
  5069  010780  A0D8               	btfss	status,0,c
  5070  010782  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5071  010784                     l9392:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;doprnt.c: 1381: if(width > c)
  5075  010784  0E80               	movlw	128
  5076  010786  0100               	movlb	0	; () banked
  5077  010788  BF92               	btfsc	sprintf@c& (0+255),7,b
  5078  01078A  0E7F               	movlw	127
  5079  01078C  0100               	movlb	0	; () banked
  5080  01078E  6F84               	movwf	??_sprintf& (0+255),b
  5081  010790  0100               	movlb	0	; () banked
  5082  010792  5193               	movf	sprintf@width& (0+255),w,b
  5083  010794  0100               	movlb	0	; () banked
  5084  010796  5D92               	subwf	sprintf@c& (0+255),w,b
  5085  010798  0100               	movlb	0	; () banked
  5086  01079A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5087  01079C  0A80               	xorlw	128
  5088  01079E  0100               	movlb	0	; () banked
  5089  0107A0  5984               	subwfb	??_sprintf& (0+255),w,b
  5090  0107A2  B0D8               	btfsc	status,0,c
  5091  0107A4  D00B               	goto	l9396
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;doprnt.c: 1382: width -= c;
  5095  0107A6  0100               	movlb	0	; () banked
  5096  0107A8  5192               	movf	sprintf@c& (0+255),w,b
  5097  0107AA  0100               	movlb	0	; () banked
  5098  0107AC  5F93               	subwf	sprintf@width& (0+255),f,b
  5099  0107AE  0E00               	movlw	0
  5100  0107B0  0100               	movlb	0	; () banked
  5101  0107B2  BF92               	btfsc	sprintf@c& (0+255),7,b
  5102  0107B4  0EFF               	movlw	255
  5103  0107B6  0100               	movlb	0	; () banked
  5104  0107B8  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5105  0107BA  D005               	goto	l9398
  5106  0107BC                     l9396:
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;doprnt.c: 1383: else
  5110                           ;doprnt.c: 1384: width = 0;
  5111  0107BC  0E00               	movlw	0
  5112  0107BE  0100               	movlb	0	; () banked
  5113  0107C0  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5114  0107C2  0E00               	movlw	0
  5115  0107C4  6F93               	movwf	sprintf@width& (0+255),b
  5116  0107C6                     l9398:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;doprnt.c: 1387: if(flag & 0x04) {
  5120  0107C6  0100               	movlb	0	; () banked
  5121  0107C8  A591               	btfss	sprintf@flag& (0+255),2,b
  5122  0107CA  D024               	goto	l9414
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;doprnt.c: 1392: if(flag & 0x03)
  5126  0107CC  C091  F084         	movff	sprintf@flag,??_sprintf
  5127  0107D0  0E03               	movlw	3
  5128  0107D2  0100               	movlb	0	; () banked
  5129  0107D4  1784               	andwf	??_sprintf& (0+255),f,b
  5130  0107D6  B4D8               	btfsc	status,2,c
  5131  0107D8  D009               	goto	l9406
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5135  0107DA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5136  0107DE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5137  0107E2  0E2D               	movlw	45
  5138  0107E4  6EDF               	movwf	indf2,c
  5139                           
  5140                           ; BSR set to: 0
  5141  0107E6  0100               	movlb	0	; () banked
  5142  0107E8  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5143  0107EA  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5144  0107EC                     l9406:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;doprnt.c: 1415: if(width)
  5148  0107EC  0100               	movlb	0	; () banked
  5149  0107EE  5193               	movf	sprintf@width& (0+255),w,b
  5150  0107F0  0100               	movlb	0	; () banked
  5151  0107F2  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5152  0107F4  B4D8               	btfsc	status,2,c
  5153  0107F6  D037               	goto	l9428
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5157                           
  5158                           ; BSR set to: 0
  5159                           
  5160                           ;doprnt.c: 1416: do
  5161  0107F8  C072  FFD9         	movff	sprintf@sp,fsr2l
  5162  0107FC  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5163  010800  0E30               	movlw	48
  5164  010802  6EDF               	movwf	indf2,c
  5165                           
  5166                           ; BSR set to: 0
  5167  010804  0100               	movlb	0	; () banked
  5168  010806  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5169  010808  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;doprnt.c: 1418: while(--width);
  5173  01080A  0100               	movlb	0	; () banked
  5174  01080C  0793               	decf	sprintf@width& (0+255),f,b
  5175  01080E  A0D8               	btfss	status,0,c
  5176  010810  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5177  010812  D7EC               	goto	l9406
  5178  010814                     l9414:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;doprnt.c: 1422: {
  5182                           ;doprnt.c: 1424: if(width
  5183                           ;doprnt.c: 1428: )
  5184  010814  0100               	movlb	0	; () banked
  5185  010816  5193               	movf	sprintf@width& (0+255),w,b
  5186  010818  0100               	movlb	0	; () banked
  5187  01081A  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5188  01081C  B4D8               	btfsc	status,2,c
  5189  01081E  D013               	goto	l9422
  5190  010820                     l9416:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5194  010820  C072  FFD9         	movff	sprintf@sp,fsr2l
  5195  010824  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5196  010828  0E20               	movlw	32
  5197  01082A  6EDF               	movwf	indf2,c
  5198                           
  5199                           ; BSR set to: 0
  5200  01082C  0100               	movlb	0	; () banked
  5201  01082E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5202  010830  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;doprnt.c: 1431: while(--width);
  5206  010832  0100               	movlb	0	; () banked
  5207  010834  0793               	decf	sprintf@width& (0+255),f,b
  5208  010836  A0D8               	btfss	status,0,c
  5209  010838  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5210  01083A  0100               	movlb	0	; () banked
  5211  01083C  5193               	movf	sprintf@width& (0+255),w,b
  5212  01083E  0100               	movlb	0	; () banked
  5213  010840  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5214  010842  A4D8               	btfss	status,2,c
  5215  010844  D7ED               	goto	l9416
  5216  010846                     l9422:
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;doprnt.c: 1438: if(flag & 0x03)
  5220  010846  C091  F084         	movff	sprintf@flag,??_sprintf
  5221  01084A  0E03               	movlw	3
  5222  01084C  0100               	movlb	0	; () banked
  5223  01084E  1784               	andwf	??_sprintf& (0+255),f,b
  5224  010850  B4D8               	btfsc	status,2,c
  5225  010852  D009               	goto	l9428
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5229  010854  C072  FFD9         	movff	sprintf@sp,fsr2l
  5230  010858  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5231  01085C  0E2D               	movlw	45
  5232  01085E  6EDF               	movwf	indf2,c
  5233                           
  5234                           ; BSR set to: 0
  5235  010860  0100               	movlb	0	; () banked
  5236  010862  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5237  010864  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5238  010866                     l9428:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;doprnt.c: 1469: }
  5242                           ;doprnt.c: 1472: prec = c;
  5243  010866  C092  F088         	movff	sprintf@c,sprintf@prec
  5244                           
  5245                           ;doprnt.c: 1474: while(prec--) {
  5246  01086A  D031               	goto	l9436
  5247  01086C                     l9430:
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;doprnt.c: 1478: {
  5251                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5252  01086C  0100               	movlb	0	; () banked
  5253  01086E  5188               	movf	sprintf@prec& (0+255),w,b
  5254  010870  0D02               	mullw	2
  5255  010872  0E03               	movlw	low _dpowers
  5256  010874  24F3               	addwf	prodl,w,c
  5257  010876  6EF6               	movwf	tblptrl,c
  5258  010878  0EFD               	movlw	high _dpowers
  5259  01087A  20F4               	addwfc	prodh,w,c
  5260  01087C  6EF7               	movwf	tblptrh,c
  5261  01087E                     	if	1	;There are 3 active tblptr bytes
  5262  01087E  6AF8               	clrf	tblptru,c
  5263  010880  0E00               	movlw	low (__mediumconst shr (0+16))
  5264  010882  22F8               	addwfc	tblptru,f,c
  5265  010884                     	endif
  5266  010884  0009               	tblrd		*+
  5267  010886  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5268  01088A  000A               	tblrd		*-
  5269  01088C  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5270  010890  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5271  010894  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5272  010898  ECE9  F09E         	call	___lwdiv	;wreg free
  5273  01089C  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5274  0108A0  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5275  0108A4  0E00               	movlw	0
  5276  0108A6  0100               	movlb	0	; () banked
  5277  0108A8  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5278  0108AA  0E0A               	movlw	10
  5279  0108AC  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5280  0108AE  EC2F  F0A0         	call	___lwmod	;wreg free
  5281  0108B2  0100               	movlb	0	; () banked
  5282  0108B4  516D               	movf	?___lwmod& (0+255),w,b
  5283  0108B6  0F30               	addlw	48
  5284  0108B8  0100               	movlb	0	; () banked
  5285  0108BA  6F92               	movwf	sprintf@c& (0+255),b
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;doprnt.c: 1523: }
  5289                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5290  0108BC  C072  FFD9         	movff	sprintf@sp,fsr2l
  5291  0108C0  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5292  0108C4  C092  FFDF         	movff	sprintf@c,indf2
  5293                           
  5294                           ; BSR set to: 0
  5295  0108C8  0100               	movlb	0	; () banked
  5296  0108CA  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5297  0108CC  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5298  0108CE                     l9436:
  5299                           
  5300                           ; BSR set to: 0
  5301  0108CE  0100               	movlb	0	; () banked
  5302  0108D0  0788               	decf	sprintf@prec& (0+255),f,b
  5303  0108D2  0100               	movlb	0	; () banked
  5304  0108D4  2988               	incf	sprintf@prec& (0+255),w,b
  5305  0108D6  A4D8               	btfss	status,2,c
  5306  0108D8  D7C9               	goto	l9430
  5307  0108DA                     l9438:
  5308                           
  5309                           ; BSR set to: 0
  5310  0108DA  C074  FFF6         	movff	sprintf@f,tblptrl
  5311  0108DE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5312  0108E2  0100               	movlb	0	; () banked
  5313  0108E4  4B74               	infsnz	sprintf@f& (0+255),f,b
  5314  0108E6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5315  0108E8                     	if	0	;tblptru may be non-zero
  5316  0108E8                     	endif
  5317  0108E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5318  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5319  0108EA  6EF8               	movwf	tblptru,c
  5320  0108EC                     	endif
  5321  0108EC  0008               	tblrd		*
  5322  0108EE  CFF5 F092          	movff	tablat,sprintf@c
  5323  0108F2  0100               	movlb	0	; () banked
  5324  0108F4  5192               	movf	sprintf@c& (0+255),w,b
  5325  0108F6  A4D8               	btfss	status,2,c
  5326  0108F8  D5E1               	goto	l9298
  5327  0108FA                     l9440:
  5328                           
  5329                           ;doprnt.c: 1538: *sp = 0;
  5330  0108FA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5331  0108FE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5332  010902  0E00               	movlw	0
  5333  010904  6EDF               	movwf	indf2,c
  5334  010906  0012               	return	
  5335  010908                     __end_of_sprintf:
  5336                           	opt stack 0
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           postinc0	equ	0xFEE
  5345                           wreg	equ	0xFE8
  5346                           postdec1	equ	0xFE5
  5347                           fsr1h	equ	0xFE2
  5348                           fsr1l	equ	0xFE1
  5349                           indf2	equ	0xFDF
  5350                           postinc2	equ	0xFDE
  5351                           postdec2	equ	0xFDD
  5352                           fsr2h	equ	0xFDA
  5353                           fsr2l	equ	0xFD9
  5354                           status	equ	0xFD8
  5355                           
  5356 ;; *************** function _ringbuf_put_str *****************
  5357 ;; Defined at:
  5358 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5361 ;;		 -> usb_tx(8), 
  5362 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5363 ;;		 -> STR_43(315), STR_24(8), print_time@str(30), STR_22(3), 
  5364 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;		None               void
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5379 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5380 ;;Total ram usage:        4 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:   13
  5383 ;; This function calls:
  5384 ;;		_ringbuf_put
  5385 ;; This function is called by:
  5386 ;;		_terminal_task
  5387 ;;		_print_time
  5388 ;;		_terminal_at_hand
  5389 ;;		_terminal_operation
  5390 ;;		_print_time_dec
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text7
  5395  013F98                     __ptext7:
  5396                           	opt stack 0
  5397  013F98                     _ringbuf_put_str:
  5398                           	opt stack 13
  5399                           
  5400                           ;My_ringbuf.c: 40: while (*str) {
  5401                           
  5402                           ;incstack = 0
  5403  013F98  D01C               	goto	l9210
  5404  013F9A                     l9206:
  5405                           
  5406                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5407  013F9A  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5408  013F9E  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5409  013FA2  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5410  013FA6  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5411  013FAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5412  013FAC  6EF8               	movwf	tblptru,c
  5413  013FAE  0E0E               	movlw	(high __ramtop+-1)
  5414  013FB0  64F7               	cpfsgt	tblptrh,c
  5415  013FB2  D003               	bra	u9087
  5416  013FB4  0008               	tblrd		*
  5417  013FB6  50F5               	movf	tablat,w,c
  5418  013FB8  D005               	bra	u9080
  5419  013FBA                     u9087:
  5420  013FBA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5421  013FBE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5422  013FC2  50EF               	movf	indf0,w,c
  5423  013FC4                     u9080:
  5424  013FC4  0100               	movlb	0	; () banked
  5425  013FC6  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5426  013FC8  ECE6  F096         	call	_ringbuf_put	;wreg free
  5427  013FCC  0100               	movlb	0	; () banked
  5428  013FCE  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5429  013FD0  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5430  013FD2                     l9210:
  5431  013FD2  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5432  013FD6  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5433  013FDA  0E00               	movlw	low (__mediumconst shr (0+16))
  5434  013FDC  6EF8               	movwf	tblptru,c
  5435  013FDE  0E0E               	movlw	(high __ramtop+-1)
  5436  013FE0  64F7               	cpfsgt	tblptrh,c
  5437  013FE2  D003               	bra	u9097
  5438  013FE4  0008               	tblrd		*
  5439  013FE6  50F5               	movf	tablat,w,c
  5440  013FE8  D005               	bra	u9090
  5441  013FEA                     u9097:
  5442  013FEA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5443  013FEE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5444  013FF2  50EF               	movf	indf0,w,c
  5445  013FF4                     u9090:
  5446  013FF4  0900               	iorlw	0
  5447  013FF6  B4D8               	btfsc	status,2,c
  5448  013FF8  0012               	return	
  5449  013FFA  D7CF               	goto	l9206
  5450  013FFC                     __end_of_ringbuf_put_str:
  5451                           	opt stack 0
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           indf0	equ	0xFEF
  5460                           postinc0	equ	0xFEE
  5461                           fsr0h	equ	0xFEA
  5462                           fsr0l	equ	0xFE9
  5463                           wreg	equ	0xFE8
  5464                           postdec1	equ	0xFE5
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           postdec2	equ	0xFDD
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474 ;; *************** function _RTCC_from_caltime *****************
  5475 ;; Defined at:
  5476 ;;		line 204 in file "../My_library/My_RTCC.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  tm              2   47[BANK0 ] PTR struct .
  5479 ;;		 -> now(14), 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:   14
  5498 ;; This function calls:
  5499 ;;		_caltime_to_RTCC
  5500 ;;		_caltime_to_epoch
  5501 ;;		_epoch_to_caltime
  5502 ;; This function is called by:
  5503 ;;		_terminal_at_hand
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text8
  5508  0145A2                     __ptext8:
  5509                           	opt stack 0
  5510  0145A2                     _RTCC_from_caltime:
  5511                           	opt stack 12
  5512                           
  5513                           ;My_RTCC.c: 205: caltime_to_epoch(tm);
  5514                           
  5515                           ;incstack = 0
  5516  0145A2  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5517  0145A6  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5518  0145AA  EC0F  F088         	call	_caltime_to_epoch	;wreg free
  5519                           
  5520                           ;My_RTCC.c: 206: epoch_to_caltime(tm);
  5521  0145AE  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5522  0145B2  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5523  0145B6  ECE7  F08C         	call	_epoch_to_caltime	;wreg free
  5524                           
  5525                           ;My_RTCC.c: 207: caltime_to_RTCC(tm);
  5526  0145BA  C08F  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5527  0145BE  C090  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5528  0145C2  EC11  F096         	call	_caltime_to_RTCC	;wreg free
  5529  0145C6  0012               	return		;funcret
  5530  0145C8                     __end_of_RTCC_from_caltime:
  5531                           	opt stack 0
  5532                           tblptru	equ	0xFF8
  5533                           tblptrh	equ	0xFF7
  5534                           tblptrl	equ	0xFF6
  5535                           tablat	equ	0xFF5
  5536                           prodh	equ	0xFF4
  5537                           prodl	equ	0xFF3
  5538                           intcon	equ	0xFF2
  5539                           indf0	equ	0xFEF
  5540                           postinc0	equ	0xFEE
  5541                           fsr0h	equ	0xFEA
  5542                           fsr0l	equ	0xFE9
  5543                           wreg	equ	0xFE8
  5544                           postdec1	equ	0xFE5
  5545                           fsr1h	equ	0xFE2
  5546                           fsr1l	equ	0xFE1
  5547                           indf2	equ	0xFDF
  5548                           postinc2	equ	0xFDE
  5549                           postdec2	equ	0xFDD
  5550                           fsr2h	equ	0xFDA
  5551                           fsr2l	equ	0xFD9
  5552                           status	equ	0xFD8
  5553                           
  5554 ;; *************** function _strcmp *****************
  5555 ;; Defined at:
  5556 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5559 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5560 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5561 ;;		 -> STR_60(6), STR_59(2), STR_58(2), STR_57(2), 
  5562 ;;		 -> STR_56(2), STR_55(2), STR_54(2), STR_53(2), 
  5563 ;;		 -> STR_52(2), STR_51(4), STR_50(4), STR_49(4), 
  5564 ;;		 -> STR_48(4), STR_47(5), STR_46(4), STR_45(9), 
  5565 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5566 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5567 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5568 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5569 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  r               1    5[BANK0 ] char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  2    0[BANK0 ] int 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5585 ;;Total ram usage:        6 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   11
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_terminal_time
  5592 ;;		_terminal_operation
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text9
  5597  0140C0                     __ptext9:
  5598                           	opt stack 0
  5599  0140C0                     _strcmp:
  5600                           	opt stack 16
  5601                           
  5602                           ;incstack = 0
  5603  0140C0  D006               	goto	l9510
  5604  0140C2                     l9508:
  5605  0140C2  0100               	movlb	0	; () banked
  5606  0140C4  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5607  0140C6  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5608  0140C8  0100               	movlb	0	; () banked
  5609  0140CA  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5610  0140CC  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5611  0140CE                     l9510:
  5612  0140CE  C060  FFD9         	movff	strcmp@s1,fsr2l
  5613  0140D2  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5614  0140D6  50DF               	movf	indf2,w,c
  5615  0140D8  0100               	movlb	0	; () banked
  5616  0140DA  6F64               	movwf	??_strcmp& (0+255),b
  5617  0140DC  C062  FFF6         	movff	strcmp@s2,tblptrl
  5618  0140E0  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5619  0140E4                     	if	0	;tblptru may be non-zero
  5620  0140E4                     	endif
  5621  0140E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5622  0140E4  0E00               	movlw	low (__mediumconst shr (0+16))
  5623  0140E6  6EF8               	movwf	tblptru,c
  5624  0140E8                     	endif
  5625  0140E8  0008               	tblrd		*
  5626  0140EA  50F5               	movf	tablat,w,c
  5627  0140EC  0800               	sublw	0
  5628  0140EE  0100               	movlb	0	; () banked
  5629  0140F0  2564               	addwf	??_strcmp& (0+255),w,b
  5630  0140F2  0100               	movlb	0	; () banked
  5631  0140F4  6F65               	movwf	strcmp@r& (0+255),b
  5632  0140F6  0100               	movlb	0	; () banked
  5633  0140F8  5165               	movf	strcmp@r& (0+255),w,b
  5634  0140FA  A4D8               	btfss	status,2,c
  5635  0140FC  D007               	goto	l9514
  5636                           
  5637                           ; BSR set to: 0
  5638  0140FE  C060  FFD9         	movff	strcmp@s1,fsr2l
  5639  014102  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5640  014106  50DF               	movf	indf2,w,c
  5641  014108  A4D8               	btfss	status,2,c
  5642  01410A  D7DB               	goto	l9508
  5643  01410C                     l9514:
  5644                           
  5645                           ; BSR set to: 0
  5646  01410C  0100               	movlb	0	; () banked
  5647  01410E  5165               	movf	strcmp@r& (0+255),w,b
  5648  014110  0100               	movlb	0	; () banked
  5649  014112  6F60               	movwf	?_strcmp& (0+255),b
  5650  014114  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5651  014116  BF60               	btfsc	?_strcmp& (0+255),7,b
  5652  014118  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5653  01411A  0012               	return	
  5654  01411C                     __end_of_strcmp:
  5655                           	opt stack 0
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodh	equ	0xFF4
  5661                           prodl	equ	0xFF3
  5662                           intcon	equ	0xFF2
  5663                           indf0	equ	0xFEF
  5664                           postinc0	equ	0xFEE
  5665                           fsr0h	equ	0xFEA
  5666                           fsr0l	equ	0xFE9
  5667                           wreg	equ	0xFE8
  5668                           postdec1	equ	0xFE5
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           postinc2	equ	0xFDE
  5673                           postdec2	equ	0xFDD
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678 ;; *************** function _atoi *****************
  5679 ;; Defined at:
  5680 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5683 ;;		 -> terminal_task@op2(25), 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  a               2   11[BANK0 ] int 
  5686 ;;  sign            1   10[BANK0 ] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  2    6[BANK0 ] int 
  5689 ;; Registers used:
  5690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5697 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5699 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5700 ;;Total ram usage:        7 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:   12
  5703 ;; This function calls:
  5704 ;;		___wmul
  5705 ;;		_isdigit
  5706 ;; This function is called by:
  5707 ;;		_terminal_time
  5708 ;;		_terminal_operation
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text10
  5713  0124FC                     __ptext10:
  5714                           	opt stack 0
  5715  0124FC                     _atoi:
  5716                           	opt stack 15
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;incstack = 0
  5720  0124FC  D003               	goto	l9522
  5721  0124FE                     l9520:
  5722  0124FE  0100               	movlb	0	; () banked
  5723  012500  4B66               	infsnz	atoi@s& (0+255),f,b
  5724  012502  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5725  012504                     l9522:
  5726  012504  C066  FFD9         	movff	atoi@s,fsr2l
  5727  012508  C067  FFDA         	movff	atoi@s+1,fsr2h
  5728  01250C  0E20               	movlw	32
  5729  01250E  18DE               	xorwf	postinc2,w,c
  5730  012510  B4D8               	btfsc	status,2,c
  5731  012512  D7F5               	goto	l9520
  5732  012514  C066  FFD9         	movff	atoi@s,fsr2l
  5733  012518  C067  FFDA         	movff	atoi@s+1,fsr2h
  5734  01251C  0E09               	movlw	9
  5735  01251E  18DE               	xorwf	postinc2,w,c
  5736  012520  B4D8               	btfsc	status,2,c
  5737  012522  D7ED               	goto	l9520
  5738  012524  0E00               	movlw	0
  5739  012526  0100               	movlb	0	; () banked
  5740  012528  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5741  01252A  0E00               	movlw	0
  5742  01252C  6F6B               	movwf	atoi@a& (0+255),b
  5743  01252E  0E00               	movlw	0
  5744  012530  0100               	movlb	0	; () banked
  5745  012532  6F6A               	movwf	atoi@sign& (0+255),b
  5746                           
  5747                           ; BSR set to: 0
  5748  012534  C066  FFD9         	movff	atoi@s,fsr2l
  5749  012538  C067  FFDA         	movff	atoi@s+1,fsr2h
  5750  01253C  0E2D               	movlw	45
  5751  01253E  18DE               	xorwf	postinc2,w,c
  5752  012540  A4D8               	btfss	status,2,c
  5753  012542  D003               	goto	l9532
  5754                           
  5755                           ; BSR set to: 0
  5756  012544  0100               	movlb	0	; () banked
  5757  012546  2B6A               	incf	atoi@sign& (0+255),f,b
  5758  012548  D02E               	goto	l9538
  5759  01254A                     l9532:
  5760                           
  5761                           ; BSR set to: 0
  5762  01254A  C066  FFD9         	movff	atoi@s,fsr2l
  5763  01254E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5764  012552  0E2B               	movlw	43
  5765  012554  18DE               	xorwf	postinc2,w,c
  5766  012556  A4D8               	btfss	status,2,c
  5767  012558  D029               	goto	l9540
  5768  01255A  D025               	goto	l9538
  5769  01255C                     l9536:
  5770  01255C  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5771  012560  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5772  012564  0E00               	movlw	0
  5773  012566  0100               	movlb	0	; () banked
  5774  012568  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5775  01256A  0E0A               	movlw	10
  5776  01256C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5777  01256E  ECEB  F0A1         	call	___wmul	;wreg free
  5778  012572  C066  FFD9         	movff	atoi@s,fsr2l
  5779  012576  C067  FFDA         	movff	atoi@s+1,fsr2h
  5780  01257A  50DF               	movf	indf2,w,c
  5781  01257C  0100               	movlb	0	; () banked
  5782  01257E  6F68               	movwf	??_atoi& (0+255),b
  5783  012580  6B69               	clrf	(??_atoi+1)& (0+255),b
  5784  012582  0100               	movlb	0	; () banked
  5785  012584  5160               	movf	?___wmul& (0+255),w,b
  5786  012586  0100               	movlb	0	; () banked
  5787  012588  2768               	addwf	??_atoi& (0+255),f,b
  5788  01258A  0100               	movlb	0	; () banked
  5789  01258C  5161               	movf	(?___wmul+1)& (0+255),w,b
  5790  01258E  0100               	movlb	0	; () banked
  5791  012590  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5792  012592  0ED0               	movlw	208
  5793  012594  0100               	movlb	0	; () banked
  5794  012596  2568               	addwf	??_atoi& (0+255),w,b
  5795  012598  0100               	movlb	0	; () banked
  5796  01259A  6F6B               	movwf	atoi@a& (0+255),b
  5797  01259C  0EFF               	movlw	255
  5798  01259E  0100               	movlb	0	; () banked
  5799  0125A0  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5800  0125A2  0100               	movlb	0	; () banked
  5801  0125A4  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5802  0125A6                     l9538:
  5803                           
  5804                           ; BSR set to: 0
  5805  0125A6  0100               	movlb	0	; () banked
  5806  0125A8  4B66               	infsnz	atoi@s& (0+255),f,b
  5807  0125AA  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5808  0125AC                     l9540:
  5809                           
  5810                           ; BSR set to: 0
  5811  0125AC  C066  FFD9         	movff	atoi@s,fsr2l
  5812  0125B0  C067  FFDA         	movff	atoi@s+1,fsr2h
  5813  0125B4  50DF               	movf	indf2,w,c
  5814  0125B6  ECA8  F0A2         	call	_isdigit
  5815  0125BA  B0D8               	btfsc	status,0,c
  5816  0125BC  D7CF               	goto	l9536
  5817  0125BE  0100               	movlb	0	; () banked
  5818  0125C0  516A               	movf	atoi@sign& (0+255),w,b
  5819  0125C2  0100               	movlb	0	; () banked
  5820  0125C4  B4D8               	btfsc	status,2,c
  5821  0125C6  D00E               	goto	l1900
  5822                           
  5823                           ; BSR set to: 0
  5824  0125C8  C06B  F068         	movff	atoi@a,??_atoi
  5825  0125CC  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5826  0125D0  0100               	movlb	0	; () banked
  5827  0125D2  1F68               	comf	??_atoi& (0+255),f,b
  5828  0125D4  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5829  0125D6  4B68               	infsnz	??_atoi& (0+255),f,b
  5830  0125D8  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5831  0125DA  C068  F066         	movff	??_atoi,?_atoi
  5832  0125DE  C069  F067         	movff	??_atoi+1,?_atoi+1
  5833  0125E2  0012               	return	
  5834  0125E4                     l1900:
  5835                           
  5836                           ; BSR set to: 0
  5837  0125E4  C06B  F066         	movff	atoi@a,?_atoi
  5838  0125E8  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5839                           
  5840                           ; BSR set to: 0
  5841  0125EC  0012               	return		;funcret
  5842  0125EE                     __end_of_atoi:
  5843                           	opt stack 0
  5844                           tblptru	equ	0xFF8
  5845                           tblptrh	equ	0xFF7
  5846                           tblptrl	equ	0xFF6
  5847                           tablat	equ	0xFF5
  5848                           prodh	equ	0xFF4
  5849                           prodl	equ	0xFF3
  5850                           intcon	equ	0xFF2
  5851                           indf0	equ	0xFEF
  5852                           postinc0	equ	0xFEE
  5853                           fsr0h	equ	0xFEA
  5854                           fsr0l	equ	0xFE9
  5855                           wreg	equ	0xFE8
  5856                           postdec1	equ	0xFE5
  5857                           fsr1h	equ	0xFE2
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           postinc2	equ	0xFDE
  5861                           postdec2	equ	0xFDD
  5862                           fsr2h	equ	0xFDA
  5863                           fsr2l	equ	0xFD9
  5864                           status	equ	0xFD8
  5865                           
  5866 ;; *************** function _isdigit *****************
  5867 ;; Defined at:
  5868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  c               1    wreg     unsigned char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  c               1    2[BANK0 ] unsigned char 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;		None               void
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;Total ram usage:        3 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:   11
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_sprintf
  5893 ;;		_atoi
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text11
  5898  014550                     __ptext11:
  5899                           	opt stack 0
  5900  014550                     _isdigit:
  5901                           	opt stack 13
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;incstack = 0
  5905                           ;isdigit@c stored from wreg
  5906  014550  0100               	movlb	0	; () banked
  5907  014552  6F62               	movwf	isdigit@c& (0+255),b
  5908  014554  0E00               	movlw	0
  5909  014556  0100               	movlb	0	; () banked
  5910  014558  6F61               	movwf	_isdigit$6364& (0+255),b
  5911                           
  5912                           ; BSR set to: 0
  5913  01455A  0E3A               	movlw	58
  5914  01455C  0100               	movlb	0	; () banked
  5915  01455E  6162               	cpfslt	isdigit@c& (0+255),b
  5916  014560  D007               	goto	l9156
  5917                           
  5918                           ; BSR set to: 0
  5919  014562  0E2F               	movlw	47
  5920  014564  0100               	movlb	0	; () banked
  5921  014566  6562               	cpfsgt	isdigit@c& (0+255),b
  5922  014568  D003               	goto	l9156
  5923                           
  5924                           ; BSR set to: 0
  5925  01456A  0E01               	movlw	1
  5926  01456C  0100               	movlb	0	; () banked
  5927  01456E  6F61               	movwf	_isdigit$6364& (0+255),b
  5928  014570                     l9156:
  5929                           
  5930                           ; BSR set to: 0
  5931  014570  C061  F060         	movff	_isdigit$6364,??_isdigit
  5932  014574  0100               	movlb	0	; () banked
  5933  014576  3160               	rrcf	??_isdigit& (0+255),w,b
  5934  014578  0012               	return	
  5935  01457A                     __end_of_isdigit:
  5936                           	opt stack 0
  5937                           tblptru	equ	0xFF8
  5938                           tblptrh	equ	0xFF7
  5939                           tblptrl	equ	0xFF6
  5940                           tablat	equ	0xFF5
  5941                           prodh	equ	0xFF4
  5942                           prodl	equ	0xFF3
  5943                           intcon	equ	0xFF2
  5944                           indf0	equ	0xFEF
  5945                           postinc0	equ	0xFEE
  5946                           fsr0h	equ	0xFEA
  5947                           fsr0l	equ	0xFE9
  5948                           wreg	equ	0xFE8
  5949                           postdec1	equ	0xFE5
  5950                           fsr1h	equ	0xFE2
  5951                           fsr1l	equ	0xFE1
  5952                           indf2	equ	0xFDF
  5953                           postinc2	equ	0xFDE
  5954                           postdec2	equ	0xFDD
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function _ringbuf_put_num *****************
  5960 ;; Defined at:
  5961 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  5964 ;;		 -> usb_tx(8), 
  5965 ;;  value           2   20[BANK0 ] const unsigned int 
  5966 ;;  digits          1   22[BANK0 ] unsigned char 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  i               1   23[BANK0 ] unsigned char 
  5969 ;;  temp            2   24[BANK0 ] unsigned int 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;		None               void
  5972 ;; Registers used:
  5973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5979 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;Total ram usage:        8 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:   13
  5986 ;; This function calls:
  5987 ;;		___lwdiv
  5988 ;;		___lwmod
  5989 ;;		_ringbuf_put
  5990 ;; This function is called by:
  5991 ;;		_terminal_task
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text12
  5996  013CCE                     __ptext12:
  5997                           	opt stack 0
  5998  013CCE                     _ringbuf_put_num:
  5999                           	opt stack 16
  6000                           
  6001                           ;My_ringbuf.c: 29: while (digits--) {
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;incstack = 0
  6005  013CCE  D039               	goto	l9934
  6006  013CD0                     l851:
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;My_ringbuf.c: 30: uint16_t temp = value;
  6010  013CD0  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  6011  013CD4  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  6015  013CD8  0E00               	movlw	0
  6016  013CDA  0100               	movlb	0	; () banked
  6017  013CDC  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  6018  013CDE  D011               	goto	l9928
  6019  013CE0                     l9924:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;My_ringbuf.c: 32: temp /= 10;
  6023  013CE0  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  6024  013CE4  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  6025  013CE8  0E00               	movlw	0
  6026  013CEA  0100               	movlb	0	; () banked
  6027  013CEC  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6028  013CEE  0E0A               	movlw	10
  6029  013CF0  6F68               	movwf	___lwdiv@divisor& (0+255),b
  6030  013CF2  ECE9  F09E         	call	___lwdiv	;wreg free
  6031  013CF6  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  6032  013CFA  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  6033  013CFE  0100               	movlb	0	; () banked
  6034  013D00  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  6035  013D02                     l9928:
  6036                           
  6037                           ; BSR set to: 0
  6038  013D02  0100               	movlb	0	; () banked
  6039  013D04  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  6040  013D06  0100               	movlb	0	; () banked
  6041  013D08  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  6042  013D0A  A0D8               	btfss	status,0,c
  6043  013D0C  D7E9               	goto	l9924
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;My_ringbuf.c: 33: }
  6047                           ;My_ringbuf.c: 34: temp %= 10;
  6048                           
  6049                           ; BSR set to: 0
  6050  013D0E  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  6051  013D12  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  6052  013D16  0E00               	movlw	0
  6053  013D18  0100               	movlb	0	; () banked
  6054  013D1A  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  6055  013D1C  0E0A               	movlw	10
  6056  013D1E  6F6F               	movwf	___lwmod@divisor& (0+255),b
  6057  013D20  EC2F  F0A0         	call	___lwmod	;wreg free
  6058  013D24  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  6059  013D28  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  6060                           
  6061                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  6062  013D2C  C072  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  6063  013D30  C073  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  6064  013D34  0100               	movlb	0	; () banked
  6065  013D36  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  6066  013D38  0F30               	addlw	48
  6067  013D3A  0100               	movlb	0	; () banked
  6068  013D3C  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  6069  013D3E  ECE6  F096         	call	_ringbuf_put	;wreg free
  6070  013D42                     l9934:
  6071  013D42  0100               	movlb	0	; () banked
  6072  013D44  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  6073  013D46  0100               	movlb	0	; () banked
  6074  013D48  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  6075  013D4A  B4D8               	btfsc	status,2,c
  6076  013D4C  0012               	return	
  6077  013D4E  D7C0               	goto	l851
  6078  013D50                     __end_of_ringbuf_put_num:
  6079                           	opt stack 0
  6080                           tblptru	equ	0xFF8
  6081                           tblptrh	equ	0xFF7
  6082                           tblptrl	equ	0xFF6
  6083                           tablat	equ	0xFF5
  6084                           prodh	equ	0xFF4
  6085                           prodl	equ	0xFF3
  6086                           intcon	equ	0xFF2
  6087                           indf0	equ	0xFEF
  6088                           postinc0	equ	0xFEE
  6089                           fsr0h	equ	0xFEA
  6090                           fsr0l	equ	0xFE9
  6091                           wreg	equ	0xFE8
  6092                           postdec1	equ	0xFE5
  6093                           fsr1h	equ	0xFE2
  6094                           fsr1l	equ	0xFE1
  6095                           indf2	equ	0xFDF
  6096                           postinc2	equ	0xFDE
  6097                           postdec2	equ	0xFDD
  6098                           fsr2h	equ	0xFDA
  6099                           fsr2l	equ	0xFD9
  6100                           status	equ	0xFD8
  6101                           
  6102 ;; *************** function ___lwmod *****************
  6103 ;; Defined at:
  6104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  dividend        2   13[BANK0 ] unsigned int 
  6107 ;;  divisor         2   15[BANK0 ] unsigned int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  counter         1   17[BANK0 ] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  2   13[BANK0 ] unsigned int 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6120 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;Total ram usage:        5 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:   11
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_ringbuf_put_num
  6130 ;;		_sprintf
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text13
  6135  01405E                     __ptext13:
  6136                           	opt stack 0
  6137  01405E                     ___lwmod:
  6138                           	opt stack 13
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;incstack = 0
  6142  01405E  0100               	movlb	0	; () banked
  6143  014060  516F               	movf	___lwmod@divisor& (0+255),w,b
  6144  014062  0100               	movlb	0	; () banked
  6145  014064  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6146  014066  B4D8               	btfsc	status,2,c
  6147  014068  D026               	goto	l2160
  6148                           
  6149                           ; BSR set to: 0
  6150  01406A  0E01               	movlw	1
  6151  01406C  0100               	movlb	0	; () banked
  6152  01406E  6F71               	movwf	___lwmod@counter& (0+255),b
  6153  014070  D006               	goto	l9194
  6154  014072                     l9192:
  6155                           
  6156                           ; BSR set to: 0
  6157  014072  0100               	movlb	0	; () banked
  6158  014074  90D8               	bcf	status,0,c
  6159  014076  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6160  014078  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6161  01407A  0100               	movlb	0	; () banked
  6162  01407C  2B71               	incf	___lwmod@counter& (0+255),f,b
  6163  01407E                     l9194:
  6164                           
  6165                           ; BSR set to: 0
  6166  01407E  0100               	movlb	0	; () banked
  6167  014080  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6168  014082  D7F7               	goto	l9192
  6169  014084                     l9196:
  6170                           
  6171                           ; BSR set to: 0
  6172  014084  0100               	movlb	0	; () banked
  6173  014086  516F               	movf	___lwmod@divisor& (0+255),w,b
  6174  014088  0100               	movlb	0	; () banked
  6175  01408A  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6176  01408C  0100               	movlb	0	; () banked
  6177  01408E  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6178  014090  0100               	movlb	0	; () banked
  6179  014092  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6180  014094  A0D8               	btfss	status,0,c
  6181  014096  D008               	goto	l9200
  6182                           
  6183                           ; BSR set to: 0
  6184  014098  0100               	movlb	0	; () banked
  6185  01409A  516F               	movf	___lwmod@divisor& (0+255),w,b
  6186  01409C  0100               	movlb	0	; () banked
  6187  01409E  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6188  0140A0  0100               	movlb	0	; () banked
  6189  0140A2  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6190  0140A4  0100               	movlb	0	; () banked
  6191  0140A6  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6192  0140A8                     l9200:
  6193                           
  6194                           ; BSR set to: 0
  6195  0140A8  0100               	movlb	0	; () banked
  6196  0140AA  90D8               	bcf	status,0,c
  6197  0140AC  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6198  0140AE  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6199                           
  6200                           ; BSR set to: 0
  6201  0140B0  0100               	movlb	0	; () banked
  6202  0140B2  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  6203  0140B4  D7E7               	goto	l9196
  6204  0140B6                     l2160:
  6205                           
  6206                           ; BSR set to: 0
  6207  0140B6  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6208  0140BA  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6209                           
  6210                           ; BSR set to: 0
  6211  0140BE  0012               	return		;funcret
  6212  0140C0                     __end_of___lwmod:
  6213                           	opt stack 0
  6214                           tblptru	equ	0xFF8
  6215                           tblptrh	equ	0xFF7
  6216                           tblptrl	equ	0xFF6
  6217                           tablat	equ	0xFF5
  6218                           prodh	equ	0xFF4
  6219                           prodl	equ	0xFF3
  6220                           intcon	equ	0xFF2
  6221                           indf0	equ	0xFEF
  6222                           postinc0	equ	0xFEE
  6223                           fsr0h	equ	0xFEA
  6224                           fsr0l	equ	0xFE9
  6225                           wreg	equ	0xFE8
  6226                           postdec1	equ	0xFE5
  6227                           fsr1h	equ	0xFE2
  6228                           fsr1l	equ	0xFE1
  6229                           indf2	equ	0xFDF
  6230                           postinc2	equ	0xFDE
  6231                           postdec2	equ	0xFDD
  6232                           fsr2h	equ	0xFDA
  6233                           fsr2l	equ	0xFD9
  6234                           status	equ	0xFD8
  6235                           
  6236 ;; *************** function _ringbuf_delete *****************
  6237 ;; Defined at:
  6238 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6241 ;;		 -> terminal_task@command(8), 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;		None               void
  6246 ;; Registers used:
  6247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;Total ram usage:        2 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:   11
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_terminal_task
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text14
  6268  0145C8                     __ptext14:
  6269                           	opt stack 0
  6270  0145C8                     _ringbuf_delete:
  6271                           	opt stack 18
  6272                           
  6273                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;incstack = 0
  6277  0145C8  0100               	movlb	0	; () banked
  6278  0145CA  EE20 F006          	lfsr	2,6
  6279  0145CE  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6280  0145D0  26D9               	addwf	fsr2l,f,c
  6281  0145D2  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6282  0145D4  22DA               	addwfc	fsr2h,f,c
  6283  0145D6  0100               	movlb	0	; () banked
  6284  0145D8  EE10 F004          	lfsr	1,4
  6285  0145DC  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6286  0145DE  26E1               	addwf	fsr1l,f,c
  6287  0145E0  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6288  0145E2  22E2               	addwfc	fsr1h,f,c
  6289  0145E4  CFDE FFE6          	movff	postinc2,postinc1
  6290  0145E8  CFDD FFE5          	movff	postdec2,postdec1
  6291                           
  6292                           ; BSR set to: 0
  6293  0145EC  0012               	return		;funcret
  6294  0145EE                     __end_of_ringbuf_delete:
  6295                           	opt stack 0
  6296                           tblptru	equ	0xFF8
  6297                           tblptrh	equ	0xFF7
  6298                           tblptrl	equ	0xFF6
  6299                           tablat	equ	0xFF5
  6300                           prodh	equ	0xFF4
  6301                           prodl	equ	0xFF3
  6302                           intcon	equ	0xFF2
  6303                           indf0	equ	0xFEF
  6304                           postinc0	equ	0xFEE
  6305                           fsr0h	equ	0xFEA
  6306                           fsr0l	equ	0xFE9
  6307                           wreg	equ	0xFE8
  6308                           postinc1	equ	0xFE6
  6309                           postdec1	equ	0xFE5
  6310                           fsr1h	equ	0xFE2
  6311                           fsr1l	equ	0xFE1
  6312                           indf2	equ	0xFDF
  6313                           postinc2	equ	0xFDE
  6314                           postdec2	equ	0xFDD
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function _ringbuf_backspace *****************
  6320 ;; Defined at:
  6321 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6324 ;;		 -> terminal_task@command(8), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;		None
  6327 ;; Return value:  Size  Location     Type
  6328 ;;		None               void
  6329 ;; Registers used:
  6330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;Total ram usage:        6 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:   12
  6343 ;; This function calls:
  6344 ;;		_ringbuf_num
  6345 ;; This function is called by:
  6346 ;;		_terminal_task
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text15
  6351  013B26                     __ptext15:
  6352                           	opt stack 0
  6353  013B26                     _ringbuf_backspace:
  6354                           	opt stack 17
  6355                           
  6356                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;incstack = 0
  6360  013B26  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6361  013B2A  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6362  013B2E  EC6F  F093         	call	_ringbuf_num	;wreg free
  6363  013B32  0100               	movlb	0	; () banked
  6364  013B34  5160               	movf	?_ringbuf_num& (0+255),w,b
  6365  013B36  0100               	movlb	0	; () banked
  6366  013B38  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6367  013B3A  B4D8               	btfsc	status,2,c
  6368  013B3C  0012               	return	
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6372  013B3E  0100               	movlb	0	; () banked
  6373  013B40  EE20 F004          	lfsr	2,4
  6374  013B44  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6375  013B46  26D9               	addwf	fsr2l,f,c
  6376  013B48  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6377  013B4A  22DA               	addwfc	fsr2h,f,c
  6378  013B4C  50DE               	movf	postinc2,w,c
  6379  013B4E  10DE               	iorwf	postinc2,w,c
  6380  013B50  B4D8               	btfsc	status,2,c
  6381  013B52  D00B               	goto	l9962
  6382                           
  6383                           ; BSR set to: 0
  6384  013B54  0100               	movlb	0	; () banked
  6385  013B56  EE20 F004          	lfsr	2,4
  6386  013B5A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6387  013B5C  26D9               	addwf	fsr2l,f,c
  6388  013B5E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6389  013B60  22DA               	addwfc	fsr2h,f,c
  6390  013B62  06DE               	decf	postinc2,f,c
  6391  013B64  0E00               	movlw	0
  6392  013B66  5ADD               	subwfb	postdec2,f,c
  6393  013B68  0012               	return	
  6394  013B6A                     l9962:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6398  013B6A  0EFF               	movlw	255
  6399  013B6C  0100               	movlb	0	; () banked
  6400  013B6E  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6401  013B70  0EFF               	movlw	255
  6402  013B72  0100               	movlb	0	; () banked
  6403  013B74  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6404  013B76  0100               	movlb	0	; () banked
  6405  013B78  EE20 F002          	lfsr	2,2
  6406  013B7C  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6407  013B7E  26D9               	addwf	fsr2l,f,c
  6408  013B80  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6409  013B82  22DA               	addwfc	fsr2h,f,c
  6410  013B84  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6411  013B88  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6412  013B8C  0100               	movlb	0	; () banked
  6413  013B8E  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6414  013B90  0100               	movlb	0	; () banked
  6415  013B92  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6416  013B94  0100               	movlb	0	; () banked
  6417  013B96  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6418  013B98  0100               	movlb	0	; () banked
  6419  013B9A  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6420  013B9C  0100               	movlb	0	; () banked
  6421  013B9E  EE20 F004          	lfsr	2,4
  6422  013BA2  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6423  013BA4  26D9               	addwf	fsr2l,f,c
  6424  013BA6  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6425  013BA8  22DA               	addwfc	fsr2h,f,c
  6426  013BAA  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6427  013BAE  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6428                           
  6429                           ; BSR set to: 0
  6430  013BB2  0012               	return	
  6431  013BB4                     __end_of_ringbuf_backspace:
  6432                           	opt stack 0
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           indf0	equ	0xFEF
  6441                           postinc0	equ	0xFEE
  6442                           fsr0h	equ	0xFEA
  6443                           fsr0l	equ	0xFE9
  6444                           wreg	equ	0xFE8
  6445                           postinc1	equ	0xFE6
  6446                           postdec1	equ	0xFE5
  6447                           fsr1h	equ	0xFE2
  6448                           fsr1l	equ	0xFE1
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function _main_init *****************
  6457 ;; Defined at:
  6458 ;;		line 285 in file "PIC18F27J53-killifish_light06.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:   16
  6479 ;; This function calls:
  6480 ;;		_ADC_init
  6481 ;;		_OSC_init
  6482 ;;		_PWM_init
  6483 ;;		_RTCC_init
  6484 ;;		_USB_init
  6485 ;;		_ringbuf_init
  6486 ;;		_timer0_init
  6487 ;;		_timer1_init
  6488 ;;		_timer3_init
  6489 ;; This function is called by:
  6490 ;;		_main
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text16
  6495  013962                     __ptext16:
  6496                           	opt stack 0
  6497  013962                     _main_init:
  6498                           	opt stack 14
  6499                           
  6500                           ;PIC18F27J53-killifish_light06.c: 286: OSC_init();
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;incstack = 0
  6504  013962  EC5E  F0A3         	call	_OSC_init	;wreg free
  6505                           
  6506                           ;PIC18F27J53-killifish_light06.c: 287: TRISA = 0b11100111;
  6507  013966  0EE7               	movlw	231
  6508  013968  6E92               	movwf	3986,c	;volatile
  6509                           
  6510                           ;PIC18F27J53-killifish_light06.c: 288: TRISB = 0b00000000;
  6511  01396A  0E00               	movlw	0
  6512  01396C  6E93               	movwf	3987,c	;volatile
  6513                           
  6514                           ;PIC18F27J53-killifish_light06.c: 289: TRISC = 0b10111010;
  6515  01396E  0EBA               	movlw	186
  6516  013970  6E94               	movwf	3988,c	;volatile
  6517                           
  6518                           ;PIC18F27J53-killifish_light06.c: 290: ANCON0 = 0b11111000;
  6519  013972  0EF8               	movlw	248
  6520  013974  010F               	movlb	15	; () banked
  6521  013976  6F48               	movwf	72,b	;volatile
  6522                           
  6523                           ; BSR set to: 15
  6524                           ;PIC18F27J53-killifish_light06.c: 291: ANCON1 = 0b00011111;
  6525  013978  0E1F               	movlw	31
  6526  01397A  010F               	movlb	15	; () banked
  6527  01397C  6F49               	movwf	73,b	;volatile
  6528                           
  6529                           ; BSR set to: 15
  6530                           ;PIC18F27J53-killifish_light06.c: 292: INTCON2bits.RBPU = 0;
  6531  01397E  9EF1               	bcf	intcon2,7,c	;volatile
  6532                           
  6533                           ; BSR set to: 15
  6534                           ;PIC18F27J53-killifish_light06.c: 294: timer0_init(8);
  6535  013980  0E08               	movlw	8
  6536  013982  ECB2  F0A1         	call	_timer0_init
  6537                           
  6538                           ;PIC18F27J53-killifish_light06.c: 295: timer1_init(0, 2);
  6539  013986  0E02               	movlw	2
  6540  013988  0100               	movlb	0	; () banked
  6541  01398A  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6542  01398C  0E00               	movlw	0
  6543  01398E  ECE6  F0A0         	call	_timer1_init
  6544                           
  6545                           ;PIC18F27J53-killifish_light06.c: 296: timer3_init(2);
  6546  013992  0E02               	movlw	2
  6547  013994  EC50  F0A2         	call	_timer3_init
  6548                           
  6549                           ;PIC18F27J53-killifish_light06.c: 297: ADC_init(0);
  6550  013998  0E00               	movlw	0
  6551  01399A  EC08  F0A3         	call	_ADC_init
  6552                           
  6553                           ;PIC18F27J53-killifish_light06.c: 298: RTCC_init();
  6554  01399E  EC97  F09F         	call	_RTCC_init	;wreg free
  6555                           
  6556                           ;PIC18F27J53-killifish_light06.c: 299: PWM_init(250);
  6557  0139A2  0EFA               	movlw	250
  6558  0139A4  EC46  F099         	call	_PWM_init
  6559                           
  6560                           ;PIC18F27J53-killifish_light06.c: 301: USB_init();
  6561  0139A8  EC28  F0A3         	call	_USB_init	;wreg free
  6562                           
  6563                           ;PIC18F27J53-killifish_light06.c: 302: static uint8_t txbuf[1000];
  6564                           ;PIC18F27J53-killifish_light06.c: 303: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  6565  0139AC  0E66               	movlw	low _usb_tx
  6566  0139AE  0100               	movlb	0	; () banked
  6567  0139B0  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6568  0139B2  0E01               	movlw	high _usb_tx
  6569  0139B4  0100               	movlb	0	; () banked
  6570  0139B6  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6571  0139B8  0EFA               	movlw	low main_init@txbuf
  6572  0139BA  0100               	movlb	0	; () banked
  6573  0139BC  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6574  0139BE  0E04               	movlw	high main_init@txbuf
  6575  0139C0  0100               	movlb	0	; () banked
  6576  0139C2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6577  0139C4  0E03               	movlw	3
  6578  0139C6  0100               	movlb	0	; () banked
  6579  0139C8  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6580  0139CA  0EE8               	movlw	232
  6581  0139CC  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6582  0139CE  ECBC  F0A0         	call	_ringbuf_init	;wreg free
  6583                           
  6584                           ;PIC18F27J53-killifish_light06.c: 304: static uint8_t rxbuf[250];
  6585                           ;PIC18F27J53-killifish_light06.c: 305: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  6586  0139D2  0E5E               	movlw	low _usb_rx
  6587  0139D4  0100               	movlb	0	; () banked
  6588  0139D6  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6589  0139D8  0E01               	movlw	high _usb_rx
  6590  0139DA  0100               	movlb	0	; () banked
  6591  0139DC  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6592  0139DE  0E00               	movlw	low main_init@rxbuf
  6593  0139E0  0100               	movlb	0	; () banked
  6594  0139E2  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6595  0139E4  0E04               	movlw	high main_init@rxbuf
  6596  0139E6  0100               	movlb	0	; () banked
  6597  0139E8  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6598  0139EA  0E00               	movlw	0
  6599  0139EC  0100               	movlb	0	; () banked
  6600  0139EE  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6601  0139F0  0EFA               	movlw	250
  6602  0139F2  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6603  0139F4  ECBC  F0A0         	call	_ringbuf_init	;wreg free
  6604  0139F8  0012               	return		;funcret
  6605  0139FA                     __end_of_main_init:
  6606                           	opt stack 0
  6607                           tblptru	equ	0xFF8
  6608                           tblptrh	equ	0xFF7
  6609                           tblptrl	equ	0xFF6
  6610                           tablat	equ	0xFF5
  6611                           prodh	equ	0xFF4
  6612                           prodl	equ	0xFF3
  6613                           intcon	equ	0xFF2
  6614                           intcon2	equ	0xFF1
  6615                           indf0	equ	0xFEF
  6616                           postinc0	equ	0xFEE
  6617                           fsr0h	equ	0xFEA
  6618                           fsr0l	equ	0xFE9
  6619                           wreg	equ	0xFE8
  6620                           postinc1	equ	0xFE6
  6621                           postdec1	equ	0xFE5
  6622                           fsr1h	equ	0xFE2
  6623                           fsr1l	equ	0xFE1
  6624                           indf2	equ	0xFDF
  6625                           postinc2	equ	0xFDE
  6626                           postdec2	equ	0xFDD
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _timer3_init *****************
  6632 ;; Defined at:
  6633 ;;		line 101 in file "../My_library/My_PIC.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  prescaler       1    wreg     unsigned char 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;		None               void
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;Total ram usage:        2 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   11
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_main_init
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text17
  6662  0144A0                     __ptext17:
  6663                           	opt stack 0
  6664  0144A0                     _timer3_init:
  6665                           	opt stack 18
  6666                           
  6667                           ;incstack = 0
  6668                           ;timer3_init@prescaler stored from wreg
  6669  0144A0  0100               	movlb	0	; () banked
  6670  0144A2  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6671                           
  6672                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6673  0144A4  0E3F               	movlw	-193
  6674  0144A6  1679               	andwf	3961,f,c	;volatile
  6675                           
  6676                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6677  0144A8  9679               	bcf	3961,3,c	;volatile
  6678                           
  6679                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6680  0144AA  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6681  0144AE  0100               	movlb	0	; () banked
  6682  0144B0  3B60               	swapf	??_timer3_init& (0+255),f,b
  6683  0144B2  5079               	movf	3961,w,c	;volatile
  6684  0144B4  0100               	movlb	0	; () banked
  6685  0144B6  1960               	xorwf	??_timer3_init& (0+255),w,b
  6686  0144B8  0BCF               	andlw	-49
  6687  0144BA  1960               	xorwf	??_timer3_init& (0+255),w,b
  6688  0144BC  6E79               	movwf	3961,c	;volatile
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6692  0144BE  9E79               	bcf	3961,7,c	;volatile
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6696  0144C0  8079               	bsf	3961,0,c	;volatile
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6700  0144C2  92A2               	bcf	4002,1,c	;volatile
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6704  0144C4  92A1               	bcf	4001,1,c	;volatile
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6708  0144C6  82A0               	bsf	4000,1,c	;volatile
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6712  0144C8  8CF2               	bsf	intcon,6,c	;volatile
  6713                           
  6714                           ; BSR set to: 0
  6715  0144CA  0012               	return		;funcret
  6716  0144CC                     __end_of_timer3_init:
  6717                           	opt stack 0
  6718                           tblptru	equ	0xFF8
  6719                           tblptrh	equ	0xFF7
  6720                           tblptrl	equ	0xFF6
  6721                           tablat	equ	0xFF5
  6722                           prodh	equ	0xFF4
  6723                           prodl	equ	0xFF3
  6724                           intcon	equ	0xFF2
  6725                           intcon2	equ	0xFF1
  6726                           indf0	equ	0xFEF
  6727                           postinc0	equ	0xFEE
  6728                           fsr0h	equ	0xFEA
  6729                           fsr0l	equ	0xFE9
  6730                           wreg	equ	0xFE8
  6731                           postinc1	equ	0xFE6
  6732                           postdec1	equ	0xFE5
  6733                           fsr1h	equ	0xFE2
  6734                           fsr1l	equ	0xFE1
  6735                           indf2	equ	0xFDF
  6736                           postinc2	equ	0xFDE
  6737                           postdec2	equ	0xFDD
  6738                           fsr2h	equ	0xFDA
  6739                           fsr2l	equ	0xFD9
  6740                           status	equ	0xFD8
  6741                           
  6742 ;; *************** function _timer1_init *****************
  6743 ;; Defined at:
  6744 ;;		line 70 in file "../My_library/My_PIC.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  prescaler       1    wreg     unsigned char 
  6747 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;		None               void
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6759 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6762 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;Total ram usage:        3 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:   11
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_main_init
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text18
  6774  0141CC                     __ptext18:
  6775                           	opt stack 0
  6776  0141CC                     _timer1_init:
  6777                           	opt stack 18
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;incstack = 0
  6781                           ;timer1_init@prescaler stored from wreg
  6782  0141CC  0100               	movlb	0	; () banked
  6783  0141CE  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6784                           
  6785                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6786  0141D0  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6787  0141D4  0100               	movlb	0	; () banked
  6788  0141D6  3B61               	swapf	??_timer1_init& (0+255),f,b
  6789  0141D8  4761               	rlncf	??_timer1_init& (0+255),f,b
  6790  0141DA  4761               	rlncf	??_timer1_init& (0+255),f,b
  6791  0141DC  50CD               	movf	4045,w,c	;volatile
  6792  0141DE  0100               	movlb	0	; () banked
  6793  0141E0  1961               	xorwf	??_timer1_init& (0+255),w,b
  6794  0141E2  0B3F               	andlw	-193
  6795  0141E4  1961               	xorwf	??_timer1_init& (0+255),w,b
  6796  0141E6  6ECD               	movwf	4045,c	;volatile
  6797                           
  6798                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6799  0141E8  0E02               	movlw	2
  6800  0141EA  0100               	movlb	0	; () banked
  6801  0141EC  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6802  0141EE  A4D8               	btfss	status,2,c
  6803  0141F0  D002               	goto	l787
  6804                           
  6805                           ; BSR set to: 0
  6806  0141F2  86CD               	bsf	4045,3,c	;volatile
  6807  0141F4  D001               	goto	l9868
  6808  0141F6                     l787:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6812  0141F6  96CD               	bcf	4045,3,c	;volatile
  6813  0141F8                     l9868:
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6817  0141F8  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6818  0141FC  0100               	movlb	0	; () banked
  6819  0141FE  3B61               	swapf	??_timer1_init& (0+255),f,b
  6820  014200  50CD               	movf	4045,w,c	;volatile
  6821  014202  0100               	movlb	0	; () banked
  6822  014204  1961               	xorwf	??_timer1_init& (0+255),w,b
  6823  014206  0BCF               	andlw	-49
  6824  014208  1961               	xorwf	??_timer1_init& (0+255),w,b
  6825  01420A  6ECD               	movwf	4045,c	;volatile
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6829  01420C  84CD               	bsf	4045,2,c	;volatile
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6833  01420E  92CD               	bcf	4045,1,c	;volatile
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6837  014210  80CD               	bsf	4045,0,c	;volatile
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6841  014212  909F               	bcf	3999,0,c	;volatile
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6845  014214  909E               	bcf	3998,0,c	;volatile
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6849  014216  809D               	bsf	3997,0,c	;volatile
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6853  014218  8CF2               	bsf	intcon,6,c	;volatile
  6854                           
  6855                           ; BSR set to: 0
  6856  01421A  0012               	return		;funcret
  6857  01421C                     __end_of_timer1_init:
  6858                           	opt stack 0
  6859                           tblptru	equ	0xFF8
  6860                           tblptrh	equ	0xFF7
  6861                           tblptrl	equ	0xFF6
  6862                           tablat	equ	0xFF5
  6863                           prodh	equ	0xFF4
  6864                           prodl	equ	0xFF3
  6865                           intcon	equ	0xFF2
  6866                           intcon2	equ	0xFF1
  6867                           indf0	equ	0xFEF
  6868                           postinc0	equ	0xFEE
  6869                           fsr0h	equ	0xFEA
  6870                           fsr0l	equ	0xFE9
  6871                           wreg	equ	0xFE8
  6872                           postinc1	equ	0xFE6
  6873                           postdec1	equ	0xFE5
  6874                           fsr1h	equ	0xFE2
  6875                           fsr1l	equ	0xFE1
  6876                           indf2	equ	0xFDF
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           fsr2h	equ	0xFDA
  6880                           fsr2l	equ	0xFD9
  6881                           status	equ	0xFD8
  6882                           
  6883 ;; *************** function _timer0_init *****************
  6884 ;; Defined at:
  6885 ;;		line 34 in file "../My_library/My_PIC.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  prescaler       1    wreg     unsigned char 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;		None               void
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6903 ;;Total ram usage:        2 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:   11
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_main_init
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text19
  6914  014364                     __ptext19:
  6915                           	opt stack 0
  6916  014364                     _timer0_init:
  6917                           	opt stack 18
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;incstack = 0
  6921                           ;timer0_init@prescaler stored from wreg
  6922  014364  0100               	movlb	0	; () banked
  6923  014366  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6924                           
  6925                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  6926  014368  8ED5               	bsf	4053,7,c	;volatile
  6927                           
  6928                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  6929  01436A  8CD5               	bsf	4053,6,c	;volatile
  6930                           
  6931                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  6932  01436C  9AD5               	bcf	4053,5,c	;volatile
  6933                           
  6934                           ;My_PIC.c: 38: if (prescaler == 0) {
  6935  01436E  0100               	movlb	0	; () banked
  6936  014370  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6937  014372  0100               	movlb	0	; () banked
  6938  014374  A4D8               	btfss	status,2,c
  6939  014376  D002               	goto	l782
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  6943  014378  86D5               	bsf	4053,3,c	;volatile
  6944                           
  6945                           ;My_PIC.c: 40: } else {
  6946  01437A  D00C               	goto	l9856
  6947  01437C                     l782:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  6951  01437C  96D5               	bcf	4053,3,c	;volatile
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  6955  01437E  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6956  014382  0EFF               	movlw	255
  6957  014384  0100               	movlb	0	; () banked
  6958  014386  2760               	addwf	??_timer0_init& (0+255),f,b
  6959  014388  50D5               	movf	4053,w,c	;volatile
  6960  01438A  0100               	movlb	0	; () banked
  6961  01438C  1960               	xorwf	??_timer0_init& (0+255),w,b
  6962  01438E  0BF8               	andlw	-8
  6963  014390  1960               	xorwf	??_timer0_init& (0+255),w,b
  6964  014392  6ED5               	movwf	4053,c	;volatile
  6965  014394                     l9856:
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;My_PIC.c: 43: }
  6969                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  6970  014394  8AF2               	bsf	intcon,5,c	;volatile
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  6974  014396  94F2               	bcf	intcon,2,c	;volatile
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  6978  014398  94F1               	bcf	intcon2,2,c	;volatile
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  6982  01439A  8CF2               	bsf	intcon,6,c	;volatile
  6983                           
  6984                           ; BSR set to: 0
  6985  01439C  0012               	return		;funcret
  6986  01439E                     __end_of_timer0_init:
  6987                           	opt stack 0
  6988                           tblptru	equ	0xFF8
  6989                           tblptrh	equ	0xFF7
  6990                           tblptrl	equ	0xFF6
  6991                           tablat	equ	0xFF5
  6992                           prodh	equ	0xFF4
  6993                           prodl	equ	0xFF3
  6994                           intcon	equ	0xFF2
  6995                           intcon2	equ	0xFF1
  6996                           indf0	equ	0xFEF
  6997                           postinc0	equ	0xFEE
  6998                           fsr0h	equ	0xFEA
  6999                           fsr0l	equ	0xFE9
  7000                           wreg	equ	0xFE8
  7001                           postinc1	equ	0xFE6
  7002                           postdec1	equ	0xFE5
  7003                           fsr1h	equ	0xFE2
  7004                           fsr1l	equ	0xFE1
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           fsr2h	equ	0xFDA
  7009                           fsr2l	equ	0xFD9
  7010                           status	equ	0xFD8
  7011                           
  7012 ;; *************** function _ringbuf_init *****************
  7013 ;; Defined at:
  7014 ;;		line 5 in file "../My_library/My_ringbuf.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  7017 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), lcd_tx(8), 
  7018 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  7019 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), terminal_task@buf(100), ST7032_init@buf(200), 
  7020 ;;  bufsize         2    4[BANK0 ] unsigned int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;		None               void
  7025 ;; Registers used:
  7026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;Total ram usage:        6 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:   11
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_terminal_task
  7043 ;;		_main_init
  7044 ;;		_ST7032_init
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text20
  7049  014178                     __ptext20:
  7050                           	opt stack 0
  7051  014178                     _ringbuf_init:
  7052                           	opt stack 18
  7053                           
  7054                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;incstack = 0
  7058  014178  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7059  01417C  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7060  014180  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7061  014184  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7062                           
  7063                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7064  014188  0100               	movlb	0	; () banked
  7065  01418A  EE20 F002          	lfsr	2,2
  7066  01418E  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7067  014190  26D9               	addwf	fsr2l,f,c
  7068  014192  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7069  014194  22DA               	addwfc	fsr2h,f,c
  7070  014196  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7071  01419A  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;My_ringbuf.c: 8: rb->head = 0;
  7075  01419E  0100               	movlb	0	; () banked
  7076  0141A0  EE20 F004          	lfsr	2,4
  7077  0141A4  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7078  0141A6  26D9               	addwf	fsr2l,f,c
  7079  0141A8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7080  0141AA  22DA               	addwfc	fsr2h,f,c
  7081  0141AC  0E00               	movlw	0
  7082  0141AE  6EDE               	movwf	postinc2,c
  7083  0141B0  0E00               	movlw	0
  7084  0141B2  6EDD               	movwf	postdec2,c
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;My_ringbuf.c: 9: rb->tail = 0;
  7088  0141B4  0100               	movlb	0	; () banked
  7089  0141B6  EE20 F006          	lfsr	2,6
  7090  0141BA  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7091  0141BC  26D9               	addwf	fsr2l,f,c
  7092  0141BE  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7093  0141C0  22DA               	addwfc	fsr2h,f,c
  7094  0141C2  0E00               	movlw	0
  7095  0141C4  6EDE               	movwf	postinc2,c
  7096  0141C6  0E00               	movlw	0
  7097  0141C8  6EDD               	movwf	postdec2,c
  7098                           
  7099                           ; BSR set to: 0
  7100  0141CA  0012               	return		;funcret
  7101  0141CC                     __end_of_ringbuf_init:
  7102                           	opt stack 0
  7103                           tblptru	equ	0xFF8
  7104                           tblptrh	equ	0xFF7
  7105                           tblptrl	equ	0xFF6
  7106                           tablat	equ	0xFF5
  7107                           prodh	equ	0xFF4
  7108                           prodl	equ	0xFF3
  7109                           intcon	equ	0xFF2
  7110                           intcon2	equ	0xFF1
  7111                           indf0	equ	0xFEF
  7112                           postinc0	equ	0xFEE
  7113                           fsr0h	equ	0xFEA
  7114                           fsr0l	equ	0xFE9
  7115                           wreg	equ	0xFE8
  7116                           postinc1	equ	0xFE6
  7117                           postdec1	equ	0xFE5
  7118                           fsr1h	equ	0xFE2
  7119                           fsr1l	equ	0xFE1
  7120                           indf2	equ	0xFDF
  7121                           postinc2	equ	0xFDE
  7122                           postdec2	equ	0xFDD
  7123                           fsr2h	equ	0xFDA
  7124                           fsr2l	equ	0xFD9
  7125                           status	equ	0xFD8
  7126                           
  7127 ;; *************** function _USB_init *****************
  7128 ;; Defined at:
  7129 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7147 ;;Total ram usage:        0 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:   13
  7150 ;; This function calls:
  7151 ;;		_USBDeviceAttach
  7152 ;;		_USBDeviceInit
  7153 ;; This function is called by:
  7154 ;;		_main_init
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text21
  7159  014650                     __ptext21:
  7160                           	opt stack 0
  7161  014650                     _USB_init:
  7162                           	opt stack 16
  7163                           
  7164                           ;My_usb_cdc.c: 12: USBDeviceInit();
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;incstack = 0
  7168  014650  EC71  F08F         	call	_USBDeviceInit	;wreg free
  7169                           
  7170                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  7171  014654  ECCF  F0A1         	call	_USBDeviceAttach	;wreg free
  7172                           
  7173                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  7174  014658  0E00               	movlw	0
  7175  01465A  0101               	movlb	1	; () banked
  7176  01465C  6F76               	movwf	_line_coding& (0+255),b
  7177  01465E  0EC2               	movlw	194
  7178  014660  6F77               	movwf	(_line_coding+1)& (0+255),b
  7179  014662  0E01               	movlw	1
  7180  014664  6F78               	movwf	(_line_coding+2)& (0+255),b
  7181  014666  0E00               	movlw	0
  7182  014668  6F79               	movwf	(_line_coding+3)& (0+255),b
  7183                           
  7184                           ; BSR set to: 1
  7185  01466A  0012               	return		;funcret
  7186  01466C                     __end_of_USB_init:
  7187                           	opt stack 0
  7188                           tblptru	equ	0xFF8
  7189                           tblptrh	equ	0xFF7
  7190                           tblptrl	equ	0xFF6
  7191                           tablat	equ	0xFF5
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           intcon	equ	0xFF2
  7195                           intcon2	equ	0xFF1
  7196                           indf0	equ	0xFEF
  7197                           postinc0	equ	0xFEE
  7198                           fsr0h	equ	0xFEA
  7199                           fsr0l	equ	0xFE9
  7200                           wreg	equ	0xFE8
  7201                           postinc1	equ	0xFE6
  7202                           postdec1	equ	0xFE5
  7203                           fsr1h	equ	0xFE2
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function _USBDeviceInit *****************
  7213 ;; Defined at:
  7214 ;;		line 298 in file "../My_library/usb/usb_device.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  i               1    8[BANK0 ] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;Total ram usage:        1 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:   12
  7235 ;; This function calls:
  7236 ;;		_memset
  7237 ;; This function is called by:
  7238 ;;		_USB_init
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text22
  7243  011EE2                     __ptext22:
  7244                           	opt stack 0
  7245  011EE2                     _USBDeviceInit:
  7246                           	opt stack 16
  7247                           
  7248                           ;usb_device.c: 300: uint8_t i;
  7249                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  7250                           
  7251                           ; BSR set to: 1
  7252                           ;incstack = 0
  7253  011EE2  98A0               	bcf	4000,4,c	;volatile
  7254                           
  7255                           ;usb_device.c: 305: {UEIR = 0;};
  7256  011EE4  0E00               	movlw	0
  7257  011EE6  6E63               	movwf	3939,c	;volatile
  7258                           
  7259                           ;usb_device.c: 308: {UIR = 0;};
  7260  011EE8  0E00               	movlw	0
  7261  011EEA  6E62               	movwf	3938,c	;volatile
  7262                           
  7263                           ;usb_device.c: 311: UEP0 = 0;
  7264  011EEC  0E00               	movlw	0
  7265  011EEE  010F               	movlb	15	; () banked
  7266  011EF0  6F26               	movwf	38,b	;volatile
  7267                           
  7268                           ; BSR set to: 15
  7269                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  7270  011EF2  0E27               	movlw	39
  7271  011EF4  0100               	movlb	0	; () banked
  7272  011EF6  6F60               	movwf	memset@p1& (0+255),b
  7273  011EF8  0E0F               	movlw	15
  7274  011EFA  0100               	movlb	0	; () banked
  7275  011EFC  6F61               	movwf	(memset@p1+1)& (0+255),b
  7276  011EFE  0E00               	movlw	0
  7277  011F00  0100               	movlb	0	; () banked
  7278  011F02  6F63               	movwf	(memset@c+1)& (0+255),b
  7279  011F04  0E00               	movlw	0
  7280  011F06  6F62               	movwf	memset@c& (0+255),b
  7281  011F08  0E00               	movlw	0
  7282  011F0A  0100               	movlb	0	; () banked
  7283  011F0C  6F65               	movwf	(memset@n+1)& (0+255),b
  7284  011F0E  0E02               	movlw	2
  7285  011F10  6F64               	movwf	memset@n& (0+255),b
  7286  011F12  EC06  F0A2         	call	_memset	;wreg free
  7287                           
  7288                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7289  011F16  0E16               	movlw	22
  7290  011F18  010F               	movlb	15	; () banked
  7291  011F1A  6F39               	movwf	57,b	;volatile
  7292                           
  7293                           ; BSR set to: 15
  7294  011F1C  0E9F               	movlw	159
  7295  011F1E  010F               	movlb	15	; () banked
  7296  011F20  6F37               	movwf	55,b	;volatile
  7297                           
  7298                           ; BSR set to: 15
  7299  011F22  0E7B               	movlw	123
  7300  011F24  010F               	movlb	15	; () banked
  7301  011F26  6F36               	movwf	54,b	;volatile
  7302                           
  7303                           ; BSR set to: 15
  7304                           ;usb_device.c: 318: ;
  7305                           ;usb_device.c: 321: ;
  7306                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  7307  011F28  0E00               	movlw	0
  7308  011F2A  0100               	movlb	0	; () banked
  7309  011F2C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7310  011F2E                     l9560:
  7311                           
  7312                           ; BSR set to: 0
  7313  011F2E  0E0B               	movlw	11
  7314  011F30  0100               	movlb	0	; () banked
  7315  011F32  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7316  011F34  D001               	goto	l9564
  7317  011F36  D010               	goto	l146
  7318  011F38                     l9564:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;usb_device.c: 325: {
  7322                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  7323  011F38  0100               	movlb	0	; () banked
  7324  011F3A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7325  011F3C  0D04               	mullw	4
  7326  011F3E  0E00               	movlw	0
  7327  011F40  24F3               	addwf	prodl,w,c
  7328  011F42  6ED9               	movwf	fsr2l,c
  7329  011F44  0E0D               	movlw	13
  7330  011F46  20F4               	addwfc	prodh,w,c
  7331  011F48  6EDA               	movwf	fsr2h,c
  7332  011F4A  6ADE               	clrf	postinc2,c
  7333  011F4C  6ADE               	clrf	postinc2,c
  7334  011F4E  6ADE               	clrf	postinc2,c
  7335  011F50  6ADD               	clrf	postdec2,c
  7336                           
  7337                           ; BSR set to: 0
  7338  011F52  0100               	movlb	0	; () banked
  7339  011F54  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7340  011F56  D7EB               	goto	l9560
  7341  011F58                     l146:
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;usb_device.c: 327: }
  7345                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  7346  011F58  8C65               	bsf	3941,6,c	;volatile
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;usb_device.c: 333: UADDR = 0x00;
  7350  011F5A  0E00               	movlw	0
  7351  011F5C  010F               	movlb	15	; () banked
  7352  011F5E  6F38               	movwf	56,b	;volatile
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  7356  011F60  9865               	bcf	3941,4,c	;volatile
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  7360  011F62  9C65               	bcf	3941,6,c	;volatile
  7361                           
  7362                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  7363  011F64  D009               	goto	l9584
  7364  011F66                     l9576:
  7365                           
  7366                           ;usb_device.c: 343: {
  7367                           ;usb_device.c: 344: (UIR &= 0xF7);
  7368  011F66  9662               	bcf	3938,3,c	;volatile
  7369                           
  7370                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  7371  011F68  0E00               	movlw	0
  7372  011F6A  6E0D               	movwf	_inPipes+3,c	;volatile
  7373                           
  7374                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  7375  011F6C  0E00               	movlw	0
  7376  011F6E  6E04               	movwf	_outPipes+3,c	;volatile
  7377                           
  7378                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  7379  011F70  0E00               	movlw	0
  7380  011F72  6E06               	movwf	_outPipes+5,c	;volatile
  7381  011F74  0E00               	movlw	0
  7382  011F76  6E05               	movwf	_outPipes+4,c	;volatile
  7383  011F78                     l9584:
  7384  011F78  B662               	btfsc	3938,3,c	;volatile
  7385  011F7A  D7F5               	goto	l9576
  7386                           
  7387                           ;usb_device.c: 349: }
  7388                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  7389  011F7C  0E01               	movlw	1
  7390  011F7E  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7391                           
  7392                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  7393  011F80  0E01               	movlw	1
  7394  011F82  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7395                           
  7396                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  7397  011F84  0E00               	movlw	0
  7398  011F86  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7399                           
  7400                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  7401  011F88  0E00               	movlw	0
  7402  011F8A  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7403                           
  7404                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  7405  011F8C  0E00               	movlw	0
  7406  011F8E  0100               	movlb	0	; () banked
  7407  011F90  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7408                           
  7409                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  7410  011F92  0E00               	movlw	0
  7411  011F94  0100               	movlb	0	; () banked
  7412  011F96  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7413  011F98                     l9588:
  7414                           
  7415                           ; BSR set to: 0
  7416  011F98  0E02               	movlw	2
  7417  011F9A  0100               	movlb	0	; () banked
  7418  011F9C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7419  011F9E  D001               	goto	l9592
  7420  011FA0  D033               	goto	l9598
  7421  011FA2                     l9592:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;usb_device.c: 363: {
  7425                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  7426  011FA2  0100               	movlb	0	; () banked
  7427  011FA4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7428  011FA6  0D02               	mullw	2
  7429  011FA8  0E10               	movlw	low _pBDTEntryIn
  7430  011FAA  24F3               	addwf	prodl,w,c
  7431  011FAC  6ED9               	movwf	fsr2l,c
  7432  011FAE  0E00               	movlw	high _pBDTEntryIn
  7433  011FB0  20F4               	addwfc	prodh,w,c
  7434  011FB2  6EDA               	movwf	fsr2h,c
  7435  011FB4  0E00               	movlw	0
  7436  011FB6  6EDE               	movwf	postinc2,c
  7437  011FB8  0E00               	movlw	0
  7438  011FBA  6EDD               	movwf	postdec2,c
  7439                           
  7440                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  7441  011FBC  0100               	movlb	0	; () banked
  7442  011FBE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7443  011FC0  0D02               	mullw	2
  7444  011FC2  0E0A               	movlw	low _pBDTEntryOut
  7445  011FC4  24F3               	addwf	prodl,w,c
  7446  011FC6  6ED9               	movwf	fsr2l,c
  7447  011FC8  0E01               	movlw	high _pBDTEntryOut
  7448  011FCA  20F4               	addwfc	prodh,w,c
  7449  011FCC  6EDA               	movwf	fsr2h,c
  7450  011FCE  0E00               	movlw	0
  7451  011FD0  6EDE               	movwf	postinc2,c
  7452  011FD2  0E00               	movlw	0
  7453  011FD4  6EDD               	movwf	postdec2,c
  7454                           
  7455                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  7456  011FD6  0100               	movlb	0	; () banked
  7457  011FD8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7458  011FDA  0D01               	mullw	1
  7459  011FDC  0E16               	movlw	low _ep_data_in
  7460  011FDE  24F3               	addwf	prodl,w,c
  7461  011FE0  6ED9               	movwf	fsr2l,c
  7462  011FE2  0E00               	movlw	high _ep_data_in
  7463  011FE4  20F4               	addwfc	prodh,w,c
  7464  011FE6  6EDA               	movwf	fsr2h,c
  7465  011FE8  0E00               	movlw	0
  7466  011FEA  6EDF               	movwf	indf2,c
  7467                           
  7468                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  7469  011FEC  0100               	movlb	0	; () banked
  7470  011FEE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7471  011FF0  0D01               	mullw	1
  7472  011FF2  0ED5               	movlw	low _ep_data_out
  7473  011FF4  24F3               	addwf	prodl,w,c
  7474  011FF6  6ED9               	movwf	fsr2l,c
  7475  011FF8  0E00               	movlw	high _ep_data_out
  7476  011FFA  20F4               	addwfc	prodh,w,c
  7477  011FFC  6EDA               	movwf	fsr2h,c
  7478  011FFE  0E00               	movlw	0
  7479  012000  6EDF               	movwf	indf2,c
  7480                           
  7481                           ; BSR set to: 0
  7482  012002  0100               	movlb	0	; () banked
  7483  012004  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7484  012006  D7C8               	goto	l9588
  7485  012008                     l9598:
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;usb_device.c: 368: }
  7489                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7490  012008  0E08               	movlw	8
  7491  01200A  6E10               	movwf	_pBDTEntryIn,c
  7492  01200C  0E0D               	movlw	13
  7493  01200E  6E11               	movwf	_pBDTEntryIn+1,c
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7497  012010  0E16               	movlw	22
  7498  012012  010F               	movlb	15	; () banked
  7499  012014  6F26               	movwf	38,b	;volatile
  7500                           
  7501                           ; BSR set to: 15
  7502                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7503  012016  0E0D               	movlw	13
  7504  012018  010D               	movlb	13	; () banked
  7505  01201A  6F03               	movwf	3,b	;volatile
  7506  01201C  0E30               	movlw	48
  7507  01201E  6F02               	movwf	2,b	;volatile
  7508                           
  7509                           ; BSR set to: 13
  7510                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7511  012020  0E08               	movlw	8
  7512  012022  010D               	movlb	13	; () banked
  7513  012024  6F01               	movwf	1,b	;volatile
  7514                           
  7515                           ; BSR set to: 13
  7516                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7517  012026  0E04               	movlw	4
  7518  012028  010D               	movlb	13	; () banked
  7519  01202A  6F00               	movwf	0,b	;volatile
  7520                           
  7521                           ; BSR set to: 13
  7522                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7523  01202C  010D               	movlb	13	; () banked
  7524  01202E  8F00               	bsf	0,7,b	;volatile
  7525                           
  7526                           ; BSR set to: 13
  7527                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7528  012030  0E00               	movlw	0
  7529  012032  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  7530                           
  7531                           ; BSR set to: 13
  7532                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7533  012034  0E00               	movlw	0
  7534  012036  6E24               	movwf	_USBDeviceState,c	;volatile
  7535                           
  7536                           ; BSR set to: 13
  7537  012038  0012               	return		;funcret
  7538  01203A                     __end_of_USBDeviceInit:
  7539                           	opt stack 0
  7540                           tblptru	equ	0xFF8
  7541                           tblptrh	equ	0xFF7
  7542                           tblptrl	equ	0xFF6
  7543                           tablat	equ	0xFF5
  7544                           prodh	equ	0xFF4
  7545                           prodl	equ	0xFF3
  7546                           intcon	equ	0xFF2
  7547                           intcon2	equ	0xFF1
  7548                           indf0	equ	0xFEF
  7549                           postinc0	equ	0xFEE
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           postinc1	equ	0xFE6
  7554                           postdec1	equ	0xFE5
  7555                           fsr1h	equ	0xFE2
  7556                           fsr1l	equ	0xFE1
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564 ;; *************** function _memset *****************
  7565 ;; Defined at:
  7566 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  p1              2    0[BANK0 ] PTR void 
  7569 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7570 ;;  c               2    2[BANK0 ] int 
  7571 ;;  n               2    4[BANK0 ] unsigned int 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7574 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  2    0[BANK0 ] PTR void 
  7577 ;; Registers used:
  7578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7584 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;Total ram usage:        8 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:   11
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_USBDeviceInit
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text23
  7599  01440C                     __ptext23:
  7600                           	opt stack 0
  7601  01440C                     _memset:
  7602                           	opt stack 16
  7603                           
  7604                           ; BSR set to: 13
  7605                           ;incstack = 0
  7606  01440C  C060  F066         	movff	memset@p1,memset@p
  7607  014410  C061  F067         	movff	memset@p1+1,memset@p+1
  7608  014414  D009               	goto	l9460
  7609  014416                     l9456:
  7610  014416  C066  FFD9         	movff	memset@p,fsr2l
  7611  01441A  C067  FFDA         	movff	memset@p+1,fsr2h
  7612  01441E  C062  FFDF         	movff	memset@c,indf2
  7613  014422  0100               	movlb	0	; () banked
  7614  014424  4B66               	infsnz	memset@p& (0+255),f,b
  7615  014426  2B67               	incf	(memset@p+1)& (0+255),f,b
  7616  014428                     l9460:
  7617  014428  0100               	movlb	0	; () banked
  7618  01442A  0764               	decf	memset@n& (0+255),f,b
  7619  01442C  A0D8               	btfss	status,0,c
  7620  01442E  0765               	decf	(memset@n+1)& (0+255),f,b
  7621  014430  0100               	movlb	0	; () banked
  7622  014432  2964               	incf	memset@n& (0+255),w,b
  7623  014434  E1F0               	bnz	l9456
  7624  014436  0100               	movlb	0	; () banked
  7625  014438  2965               	incf	(memset@n+1)& (0+255),w,b
  7626  01443A  B4D8               	btfsc	status,2,c
  7627  01443C  0012               	return	
  7628  01443E  D7EB               	goto	l9456
  7629  014440                     __end_of_memset:
  7630                           	opt stack 0
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           intcon2	equ	0xFF1
  7639                           indf0	equ	0xFEF
  7640                           postinc0	equ	0xFEE
  7641                           fsr0h	equ	0xFEA
  7642                           fsr0l	equ	0xFE9
  7643                           wreg	equ	0xFE8
  7644                           postinc1	equ	0xFE6
  7645                           postdec1	equ	0xFE5
  7646                           fsr1h	equ	0xFE2
  7647                           fsr1l	equ	0xFE1
  7648                           indf2	equ	0xFDF
  7649                           postinc2	equ	0xFDE
  7650                           postdec2	equ	0xFDD
  7651                           fsr2h	equ	0xFDA
  7652                           fsr2l	equ	0xFD9
  7653                           status	equ	0xFD8
  7654                           
  7655 ;; *************** function _USBDeviceAttach *****************
  7656 ;; Defined at:
  7657 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;		None               void
  7664 ;; Registers used:
  7665 ;;		wreg, status,2
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;Total ram usage:        0 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:   11
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_USB_init
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text24
  7686  01439E                     __ptext24:
  7687                           	opt stack 0
  7688  01439E                     _USBDeviceAttach:
  7689                           	opt stack 17
  7690                           
  7691                           ;usb_device.c: 1356: {
  7692                           ;usb_device.c: 1357: if(1 == 1)
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;incstack = 0
  7696  01439E  5024               	movf	_USBDeviceState,w,c	;volatile
  7697  0143A0  A4D8               	btfss	status,2,c
  7698  0143A2  0012               	return	
  7699                           
  7700                           ;usb_device.c: 1358: {
  7701                           ;usb_device.c: 1360: UCON = 0;
  7702  0143A4  0E00               	movlw	0
  7703  0143A6  6E65               	movwf	3941,c	;volatile
  7704                           
  7705                           ;usb_device.c: 1363: UIE = 0;
  7706  0143A8  0E00               	movlw	0
  7707  0143AA  010F               	movlb	15	; () banked
  7708  0143AC  6F36               	movwf	54,b	;volatile
  7709                           
  7710                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7711  0143AE  0E16               	movlw	22
  7712  0143B0  010F               	movlb	15	; () banked
  7713  0143B2  6F39               	movwf	57,b	;volatile
  7714  0143B4  0E9F               	movlw	159
  7715  0143B6  010F               	movlb	15	; () banked
  7716  0143B8  6F37               	movwf	55,b	;volatile
  7717  0143BA  0E7B               	movlw	123
  7718  0143BC  010F               	movlb	15	; () banked
  7719  0143BE  6F36               	movwf	54,b	;volatile
  7720                           
  7721                           ; BSR set to: 15
  7722                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7723  0143C0  8ED0               	bsf	4048,7,c	;volatile
  7724                           
  7725                           ; BSR set to: 15
  7726  0143C2  88A2               	bsf	4002,4,c	;volatile
  7727                           
  7728                           ; BSR set to: 15
  7729  0143C4  88A0               	bsf	4000,4,c	;volatile
  7730                           
  7731                           ; BSR set to: 15
  7732  0143C6  8EF2               	bsf	intcon,7,c	;volatile
  7733                           
  7734                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7735  0143C8  D001               	goto	l207
  7736  0143CA                     l208:
  7737  0143CA  8665               	bsf	3941,3,c	;volatile
  7738  0143CC                     l207:
  7739  0143CC  A665               	btfss	3941,3,c	;volatile
  7740  0143CE  D7FD               	goto	l208
  7741                           
  7742                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  7743  0143D0  0E01               	movlw	1
  7744  0143D2  6E24               	movwf	_USBDeviceState,c	;volatile
  7745  0143D4  0012               	return	
  7746  0143D6                     __end_of_USBDeviceAttach:
  7747                           	opt stack 0
  7748                           tblptru	equ	0xFF8
  7749                           tblptrh	equ	0xFF7
  7750                           tblptrl	equ	0xFF6
  7751                           tablat	equ	0xFF5
  7752                           prodh	equ	0xFF4
  7753                           prodl	equ	0xFF3
  7754                           intcon	equ	0xFF2
  7755                           intcon2	equ	0xFF1
  7756                           indf0	equ	0xFEF
  7757                           postinc0	equ	0xFEE
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           postinc1	equ	0xFE6
  7762                           postdec1	equ	0xFE5
  7763                           fsr1h	equ	0xFE2
  7764                           fsr1l	equ	0xFE1
  7765                           indf2	equ	0xFDF
  7766                           postinc2	equ	0xFDE
  7767                           postdec2	equ	0xFDD
  7768                           fsr2h	equ	0xFDA
  7769                           fsr2l	equ	0xFD9
  7770                           status	equ	0xFD8
  7771                           
  7772 ;; *************** function _RTCC_init *****************
  7773 ;; Defined at:
  7774 ;;		line 22 in file "../My_library/My_RTCC.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;		None               void
  7781 ;; Registers used:
  7782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;Total ram usage:        0 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:   15
  7795 ;; This function calls:
  7796 ;;		_RTCC_from_RTCC
  7797 ;;		_RTCC_from_epoch
  7798 ;; This function is called by:
  7799 ;;		_main_init
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text25
  7804  013F2E                     __ptext25:
  7805                           	opt stack 0
  7806  013F2E                     _RTCC_init:
  7807                           	opt stack 14
  7808                           
  7809                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7810                           
  7811                           ;incstack = 0
  7812  013F2E  010F               	movlb	15	; () banked
  7813  013F30  8B3F               	bsf	63,5,b	;volatile
  7814                           
  7815                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7816  013F32  010F               	movlb	15	; () banked
  7817  013F34  BB3F               	btfsc	63,5,b	;volatile
  7818  013F36  D006               	goto	l9972
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7822  013F38  0E55               	movlw	85
  7823  013F3A  6EA7               	movwf	4007,c	;volatile
  7824                           
  7825                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7826  013F3C  0EAA               	movlw	170
  7827  013F3E  6EA7               	movwf	4007,c	;volatile
  7828                           
  7829                           ; BSR set to: 15
  7830                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7831  013F40  010F               	movlb	15	; () banked
  7832  013F42  8B3F               	bsf	63,5,b	;volatile
  7833  013F44                     l9972:
  7834                           
  7835                           ; BSR set to: 15
  7836                           ;My_RTCC.c: 28: }
  7837                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7838  013F44  010F               	movlb	15	; () banked
  7839  013F46  8F3F               	bsf	63,7,b	;volatile
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7843  013F48  010F               	movlb	15	; () banked
  7844  013F4A  953F               	bcf	63,2,b	;volatile
  7845                           
  7846                           ; BSR set to: 15
  7847                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7848  013F4C  010F               	movlb	15	; () banked
  7849  013F4E  833C               	bsf	60,1,b	;volatile
  7850                           
  7851                           ; BSR set to: 15
  7852                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7853  013F50  010F               	movlb	15	; () banked
  7854  013F52  853C               	bsf	60,2,b	;volatile
  7855                           
  7856                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7857  013F54  0E00               	movlw	0
  7858  013F56  010F               	movlb	15	; () banked
  7859  013F58  6F3E               	movwf	62,b	;volatile
  7860                           
  7861                           ; BSR set to: 15
  7862                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7863  013F5A  86CD               	bsf	4045,3,c	;volatile
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;My_RTCC.c: 36: RTCC_from_RTCC(&now);
  7867  013F5C  0E38               	movlw	low _now
  7868  013F5E  0100               	movlb	0	; () banked
  7869  013F60  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7870  013F62  0E01               	movlw	high _now
  7871  013F64  0100               	movlb	0	; () banked
  7872  013F66  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7873  013F68  EC51  F0A3         	call	_RTCC_from_RTCC	;wreg free
  7874                           
  7875                           ;My_RTCC.c: 37: if (now.DD == 0) {
  7876  013F6C  0101               	movlb	1	; () banked
  7877  013F6E  5140               	movf	(_now+8)& (0+255),w,b
  7878  013F70  A4D8               	btfss	status,2,c
  7879  013F72  0012               	return	
  7880                           
  7881                           ; BSR set to: 1
  7882                           ;My_RTCC.c: 38: now.epoch = 0;
  7883  013F74  0E00               	movlw	0
  7884  013F76  0101               	movlb	1	; () banked
  7885  013F78  6F38               	movwf	_now& (0+255),b
  7886  013F7A  0E00               	movlw	0
  7887  013F7C  6F39               	movwf	(_now+1)& (0+255),b
  7888  013F7E  0E00               	movlw	0
  7889  013F80  6F3A               	movwf	(_now+2)& (0+255),b
  7890  013F82  0E00               	movlw	0
  7891  013F84  6F3B               	movwf	(_now+3)& (0+255),b
  7892                           
  7893                           ; BSR set to: 1
  7894                           ;My_RTCC.c: 39: RTCC_from_epoch(&now);
  7895  013F86  0E38               	movlw	low _now
  7896  013F88  0100               	movlb	0	; () banked
  7897  013F8A  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7898  013F8C  0E01               	movlw	high _now
  7899  013F8E  0100               	movlb	0	; () banked
  7900  013F90  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7901  013F92  EC44  F0A3         	call	_RTCC_from_epoch	;wreg free
  7902  013F96  0012               	return	
  7903  013F98                     __end_of_RTCC_init:
  7904                           	opt stack 0
  7905                           tblptru	equ	0xFF8
  7906                           tblptrh	equ	0xFF7
  7907                           tblptrl	equ	0xFF6
  7908                           tablat	equ	0xFF5
  7909                           prodh	equ	0xFF4
  7910                           prodl	equ	0xFF3
  7911                           intcon	equ	0xFF2
  7912                           intcon2	equ	0xFF1
  7913                           indf0	equ	0xFEF
  7914                           postinc0	equ	0xFEE
  7915                           fsr0h	equ	0xFEA
  7916                           fsr0l	equ	0xFE9
  7917                           wreg	equ	0xFE8
  7918                           postinc1	equ	0xFE6
  7919                           postdec1	equ	0xFE5
  7920                           fsr1h	equ	0xFE2
  7921                           fsr1l	equ	0xFE1
  7922                           indf2	equ	0xFDF
  7923                           postinc2	equ	0xFDE
  7924                           postdec2	equ	0xFDD
  7925                           fsr2h	equ	0xFDA
  7926                           fsr2l	equ	0xFD9
  7927                           status	equ	0xFD8
  7928                           
  7929 ;; *************** function _RTCC_from_epoch *****************
  7930 ;; Defined at:
  7931 ;;		line 210 in file "../My_library/My_RTCC.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  tm              2   47[BANK0 ] PTR struct .
  7934 ;;		 -> now(14), 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;		None               void
  7939 ;; Registers used:
  7940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7949 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7950 ;;Total ram usage:        2 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:   14
  7953 ;; This function calls:
  7954 ;;		_caltime_to_RTCC
  7955 ;;		_epoch_to_caltime
  7956 ;; This function is called by:
  7957 ;;		_RTCC_init
  7958 ;;		_RTCC_adjust_time_inc
  7959 ;;		_RTCC_adjust_time_dec
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text26
  7964  014688                     __ptext26:
  7965                           	opt stack 0
  7966  014688                     _RTCC_from_epoch:
  7967                           	opt stack 14
  7968                           
  7969                           ;My_RTCC.c: 211: epoch_to_caltime(tm);
  7970                           
  7971                           ;incstack = 0
  7972  014688  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7973  01468C  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7974  014690  ECE7  F08C         	call	_epoch_to_caltime	;wreg free
  7975                           
  7976                           ;My_RTCC.c: 212: caltime_to_RTCC(tm);
  7977  014694  C08F  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7978  014698  C090  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7979  01469C  EC11  F096         	call	_caltime_to_RTCC	;wreg free
  7980  0146A0  0012               	return		;funcret
  7981  0146A2                     __end_of_RTCC_from_epoch:
  7982                           	opt stack 0
  7983                           tblptru	equ	0xFF8
  7984                           tblptrh	equ	0xFF7
  7985                           tblptrl	equ	0xFF6
  7986                           tablat	equ	0xFF5
  7987                           prodh	equ	0xFF4
  7988                           prodl	equ	0xFF3
  7989                           intcon	equ	0xFF2
  7990                           intcon2	equ	0xFF1
  7991                           indf0	equ	0xFEF
  7992                           postinc0	equ	0xFEE
  7993                           fsr0h	equ	0xFEA
  7994                           fsr0l	equ	0xFE9
  7995                           wreg	equ	0xFE8
  7996                           postinc1	equ	0xFE6
  7997                           postdec1	equ	0xFE5
  7998                           fsr1h	equ	0xFE2
  7999                           fsr1l	equ	0xFE1
  8000                           indf2	equ	0xFDF
  8001                           postinc2	equ	0xFDE
  8002                           postdec2	equ	0xFDD
  8003                           fsr2h	equ	0xFDA
  8004                           fsr2l	equ	0xFD9
  8005                           status	equ	0xFD8
  8006                           
  8007 ;; *************** function _epoch_to_caltime *****************
  8008 ;; Defined at:
  8009 ;;		line 125 in file "../My_library/My_RTCC.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  tm              2   33[BANK0 ] PTR struct .
  8012 ;;		 -> now(14), 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  num             4   43[BANK0 ] unsigned long 
  8015 ;;  day             2   39[BANK0 ] unsigned int 
  8016 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  8017 ;;  month           1   42[BANK0 ] unsigned char 
  8018 ;;  year            1   41[BANK0 ] unsigned char 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;		None               void
  8021 ;; Registers used:
  8022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8029 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8032 ;;Total ram usage:       14 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:   13
  8035 ;; This function calls:
  8036 ;;		_get_quot_rem
  8037 ;;		_month_length
  8038 ;; This function is called by:
  8039 ;;		_RTCC_from_caltime
  8040 ;;		_RTCC_from_epoch
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text27
  8045  0119CE                     __ptext27:
  8046                           	opt stack 0
  8047  0119CE                     _epoch_to_caltime:
  8048                           	opt stack 12
  8049                           
  8050                           ;My_RTCC.c: 128: static uint16_t day_cache = 0;
  8051                           ;My_RTCC.c: 129: static uint8_t month_cache = 1;
  8052                           ;My_RTCC.c: 130: static uint8_t year_cache = 0;
  8053                           ;My_RTCC.c: 131: uint16_t day_since_epoch;
  8054                           ;My_RTCC.c: 132: uint16_t day;
  8055                           ;My_RTCC.c: 133: uint8_t year = 0;
  8056                           
  8057                           ;incstack = 0
  8058  0119CE  0E00               	movlw	0
  8059  0119D0  0100               	movlb	0	; () banked
  8060  0119D2  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8061                           
  8062                           ;My_RTCC.c: 134: uint8_t month = 1;
  8063  0119D4  0E01               	movlw	1
  8064  0119D6  0100               	movlb	0	; () banked
  8065  0119D8  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;My_RTCC.c: 135: epoch_t num;
  8069                           ;My_RTCC.c: 137: num = tm->epoch;
  8070  0119DA  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8071  0119DE  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8072  0119E2  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  8073  0119E6  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  8074  0119EA  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  8075  0119EE  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;My_RTCC.c: 138: tm->ss = get_quot_rem(&num, 60);
  8079  0119F2  0E8B               	movlw	low epoch_to_caltime@num
  8080  0119F4  0100               	movlb	0	; () banked
  8081  0119F6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8082  0119F8  0E00               	movlw	high epoch_to_caltime@num
  8083  0119FA  0100               	movlb	0	; () banked
  8084  0119FC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8085  0119FE  0E3C               	movlw	60
  8086  011A00  0100               	movlb	0	; () banked
  8087  011A02  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8088  011A04  EC7C  F096         	call	_get_quot_rem	;wreg free
  8089  011A08  0100               	movlb	0	; () banked
  8090  011A0A  EE20 F004          	lfsr	2,4
  8091  011A0E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8092  011A10  26D9               	addwf	fsr2l,f,c
  8093  011A12  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8094  011A14  22DA               	addwfc	fsr2h,f,c
  8095  011A16  0100               	movlb	0	; () banked
  8096  011A18  C079  FFDF         	movff	?_get_quot_rem,indf2
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;My_RTCC.c: 139: tm->mm = get_quot_rem(&num, 60);
  8100  011A1C  0E8B               	movlw	low epoch_to_caltime@num
  8101  011A1E  0100               	movlb	0	; () banked
  8102  011A20  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8103  011A22  0E00               	movlw	high epoch_to_caltime@num
  8104  011A24  0100               	movlb	0	; () banked
  8105  011A26  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8106  011A28  0E3C               	movlw	60
  8107  011A2A  0100               	movlb	0	; () banked
  8108  011A2C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8109  011A2E  EC7C  F096         	call	_get_quot_rem	;wreg free
  8110  011A32  0100               	movlb	0	; () banked
  8111  011A34  EE20 F005          	lfsr	2,5
  8112  011A38  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8113  011A3A  26D9               	addwf	fsr2l,f,c
  8114  011A3C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8115  011A3E  22DA               	addwfc	fsr2h,f,c
  8116  011A40  0100               	movlb	0	; () banked
  8117  011A42  C079  FFDF         	movff	?_get_quot_rem,indf2
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;My_RTCC.c: 140: tm->hh = get_quot_rem(&num, 24);
  8121  011A46  0E8B               	movlw	low epoch_to_caltime@num
  8122  011A48  0100               	movlb	0	; () banked
  8123  011A4A  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8124  011A4C  0E00               	movlw	high epoch_to_caltime@num
  8125  011A4E  0100               	movlb	0	; () banked
  8126  011A50  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8127  011A52  0E18               	movlw	24
  8128  011A54  0100               	movlb	0	; () banked
  8129  011A56  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8130  011A58  EC7C  F096         	call	_get_quot_rem	;wreg free
  8131  011A5C  0100               	movlb	0	; () banked
  8132  011A5E  EE20 F006          	lfsr	2,6
  8133  011A62  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8134  011A64  26D9               	addwf	fsr2l,f,c
  8135  011A66  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8136  011A68  22DA               	addwfc	fsr2h,f,c
  8137  011A6A  0100               	movlb	0	; () banked
  8138  011A6C  C079  FFDF         	movff	?_get_quot_rem,indf2
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;My_RTCC.c: 141: day = num;
  8142  011A70  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8143  011A74  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;My_RTCC.c: 142: day_since_epoch = day;
  8147  011A78  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8148  011A7C  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;My_RTCC.c: 144: num += 6;
  8152  011A80  0E06               	movlw	6
  8153  011A82  0100               	movlb	0	; () banked
  8154  011A84  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  8155  011A86  0E00               	movlw	0
  8156  011A88  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8157  011A8A  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8158  011A8C  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;My_RTCC.c: 145: tm->EE = get_quot_rem(&num, 7);
  8162  011A8E  0E8B               	movlw	low epoch_to_caltime@num
  8163  011A90  0100               	movlb	0	; () banked
  8164  011A92  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8165  011A94  0E00               	movlw	high epoch_to_caltime@num
  8166  011A96  0100               	movlb	0	; () banked
  8167  011A98  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8168  011A9A  0E07               	movlw	7
  8169  011A9C  0100               	movlb	0	; () banked
  8170  011A9E  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8171  011AA0  EC7C  F096         	call	_get_quot_rem	;wreg free
  8172  011AA4  0100               	movlb	0	; () banked
  8173  011AA6  EE20 F007          	lfsr	2,7
  8174  011AAA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8175  011AAC  26D9               	addwf	fsr2l,f,c
  8176  011AAE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8177  011AB0  22DA               	addwfc	fsr2h,f,c
  8178  011AB2  0100               	movlb	0	; () banked
  8179  011AB4  C079  FFDF         	movff	?_get_quot_rem,indf2
  8180                           
  8181                           ;My_RTCC.c: 154: while (day >= month_length(year, month)) {
  8182  011AB8  D03F               	goto	l9284
  8183  011ABA                     l951:
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;My_RTCC.c: 155: LATB2 = 1;
  8187  011ABA  848A               	bsf	3978,2,c	;volatile
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;My_RTCC.c: 156: day = day - month_length(year, month);
  8191  011ABC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8192  011AC0  0100               	movlb	0	; () banked
  8193  011AC2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8194  011AC4  EC5B  F094         	call	_month_length
  8195  011AC8  0100               	movlb	0	; () banked
  8196  011ACA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8197  011ACC  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8198  011ACE  0100               	movlb	0	; () banked
  8199  011AD0  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8200  011AD2  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8201  011AD4  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8202  011AD6  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8203  011AD8  0100               	movlb	0	; () banked
  8204  011ADA  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  8205  011ADC  0100               	movlb	0	; () banked
  8206  011ADE  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8207  011AE0  0100               	movlb	0	; () banked
  8208  011AE2  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  8209  011AE4  0100               	movlb	0	; () banked
  8210  011AE6  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8211  011AE8  0100               	movlb	0	; () banked
  8212  011AEA  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8213  011AEC  0100               	movlb	0	; () banked
  8214  011AEE  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;My_RTCC.c: 157: if (month == 12) {
  8218  011AF0  0E0C               	movlw	12
  8219  011AF2  0100               	movlb	0	; () banked
  8220  011AF4  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8221  011AF6  A4D8               	btfss	status,2,c
  8222  011AF8  D019               	goto	l9278
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;My_RTCC.c: 158: month = 1;
  8226  011AFA  0E01               	movlw	1
  8227  011AFC  0100               	movlb	0	; () banked
  8228  011AFE  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;My_RTCC.c: 159: year++;
  8232  011B00  0100               	movlb	0	; () banked
  8233  011B02  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;My_RTCC.c: 161: if (year >= 100) {
  8237  011B04  0E63               	movlw	99
  8238  011B06  0100               	movlb	0	; () banked
  8239  011B08  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8240  011B0A  D012               	goto	l9280
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;My_RTCC.c: 162: tm->epoch -= 3155760000;
  8244  011B0C  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8245  011B10  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8246  011B14  0E80               	movlw	128
  8247  011B16  5EDE               	subwf	postinc2,f,c
  8248  011B18  0E13               	movlw	19
  8249  011B1A  5ADE               	subwfb	postinc2,f,c
  8250  011B1C  0E19               	movlw	25
  8251  011B1E  5ADE               	subwfb	postinc2,f,c
  8252  011B20  0EBC               	movlw	188
  8253  011B22  5ADE               	subwfb	postinc2,f,c
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;My_RTCC.c: 163: year = 0;
  8257  011B24  0E00               	movlw	0
  8258  011B26  0100               	movlb	0	; () banked
  8259  011B28  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;My_RTCC.c: 164: }
  8263                           ;My_RTCC.c: 165: } else {
  8264  011B2A  D002               	goto	l9280
  8265  011B2C                     l9278:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;My_RTCC.c: 166: month++;
  8269  011B2C  0100               	movlb	0	; () banked
  8270  011B2E  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  8271  011B30                     l9280:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;My_RTCC.c: 167: }
  8275                           ;My_RTCC.c: 168: month_cache = month;
  8276  011B30  C08A  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;My_RTCC.c: 169: year_cache = year;
  8280  011B34  C089  F0F1         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8281  011B38                     l9284:
  8282                           
  8283                           ; BSR set to: 0
  8284  011B38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8285  011B3C  0100               	movlb	0	; () banked
  8286  011B3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8287  011B40  EC5B  F094         	call	_month_length
  8288  011B44  0100               	movlb	0	; () banked
  8289  011B46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8290  011B48  0100               	movlb	0	; () banked
  8291  011B4A  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  8292  011B4C  0100               	movlb	0	; () banked
  8293  011B4E  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  8294  011B50  0E00               	movlw	0
  8295  011B52  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8296  011B54  B0D8               	btfsc	status,0,c
  8297  011B56  D7B1               	goto	l951
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;My_RTCC.c: 170: }
  8301                           ;My_RTCC.c: 171: day_cache = day_since_epoch - day;
  8302                           
  8303                           ; BSR set to: 0
  8304  011B58  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8305  011B5C  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8306  011B60  0100               	movlb	0	; () banked
  8307  011B62  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8308  011B64  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8309  011B66  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8310  011B68  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8311  011B6A  0100               	movlb	0	; () banked
  8312  011B6C  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8313  011B6E  0100               	movlb	0	; () banked
  8314  011B70  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8315  011B72  0101               	movlb	1	; () banked
  8316  011B74  6F1D               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8317  011B76  0100               	movlb	0	; () banked
  8318  011B78  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8319  011B7A  0100               	movlb	0	; () banked
  8320  011B7C  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8321  011B7E  0101               	movlb	1	; () banked
  8322  011B80  6F1E               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8323                           
  8324                           ; BSR set to: 1
  8325                           ;My_RTCC.c: 172: day++;
  8326  011B82  0100               	movlb	0	; () banked
  8327  011B84  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8328  011B86  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;My_RTCC.c: 174: tm->YY = year;
  8332  011B88  0100               	movlb	0	; () banked
  8333  011B8A  EE20 F00A          	lfsr	2,10
  8334  011B8E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8335  011B90  26D9               	addwf	fsr2l,f,c
  8336  011B92  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8337  011B94  22DA               	addwfc	fsr2h,f,c
  8338  011B96  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;My_RTCC.c: 175: tm->MM = month;
  8342  011B9A  0100               	movlb	0	; () banked
  8343  011B9C  EE20 F009          	lfsr	2,9
  8344  011BA0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8345  011BA2  26D9               	addwf	fsr2l,f,c
  8346  011BA4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8347  011BA6  22DA               	addwfc	fsr2h,f,c
  8348  011BA8  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;My_RTCC.c: 176: tm->DD = day;
  8352  011BAC  0100               	movlb	0	; () banked
  8353  011BAE  EE20 F008          	lfsr	2,8
  8354  011BB2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8355  011BB4  26D9               	addwf	fsr2l,f,c
  8356  011BB6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8357  011BB8  22DA               	addwfc	fsr2h,f,c
  8358  011BBA  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8359                           
  8360                           ; BSR set to: 0
  8361  011BBE  0012               	return		;funcret
  8362  011BC0                     __end_of_epoch_to_caltime:
  8363                           	opt stack 0
  8364                           tblptru	equ	0xFF8
  8365                           tblptrh	equ	0xFF7
  8366                           tblptrl	equ	0xFF6
  8367                           tablat	equ	0xFF5
  8368                           prodh	equ	0xFF4
  8369                           prodl	equ	0xFF3
  8370                           intcon	equ	0xFF2
  8371                           intcon2	equ	0xFF1
  8372                           indf0	equ	0xFEF
  8373                           postinc0	equ	0xFEE
  8374                           fsr0h	equ	0xFEA
  8375                           fsr0l	equ	0xFE9
  8376                           wreg	equ	0xFE8
  8377                           postinc1	equ	0xFE6
  8378                           postdec1	equ	0xFE5
  8379                           fsr1h	equ	0xFE2
  8380                           fsr1l	equ	0xFE1
  8381                           indf2	equ	0xFDF
  8382                           postinc2	equ	0xFDE
  8383                           postdec2	equ	0xFDD
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8
  8387                           
  8388 ;; *************** function _get_quot_rem *****************
  8389 ;; Defined at:
  8390 ;;		line 80 in file "../My_library/My_RTCC.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8393 ;;		 -> epoch_to_caltime@num(4), 
  8394 ;;  div             1   27[BANK0 ] unsigned char 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  num             4   29[BANK0 ] unsigned long 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  4   25[BANK0 ] unsigned long 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;Total ram usage:        8 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:   12
  8413 ;; This function calls:
  8414 ;;		___lldiv
  8415 ;;		___lmul
  8416 ;; This function is called by:
  8417 ;;		_epoch_to_caltime
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text28
  8422  012CF8                     __ptext28:
  8423                           	opt stack 0
  8424  012CF8                     _get_quot_rem:
  8425                           	opt stack 12
  8426                           
  8427                           ;My_RTCC.c: 83: epoch_t num = *quot;
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;incstack = 0
  8431  012CF8  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8432  012CFC  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8433  012D00  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8434  012D04  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8435  012D08  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8436  012D0C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8437                           
  8438                           ;My_RTCC.c: 84: return num - (*quot = num / div) * div;
  8439  012D10  0100               	movlb	0	; () banked
  8440  012D12  517B               	movf	get_quot_rem@div& (0+255),w,b
  8441  012D14  0100               	movlb	0	; () banked
  8442  012D16  6F64               	movwf	___lldiv@divisor& (0+255),b
  8443  012D18  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8444  012D1A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8445  012D1C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8446  012D1E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8447  012D22  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8448  012D26  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8449  012D2A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8450  012D2E  ECA4  F099         	call	___lldiv	;wreg free
  8451  012D32  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8452  012D36  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8453  012D3A  0100               	movlb	0	; () banked
  8454  012D3C  C060  FFDE         	movff	?___lldiv,postinc2
  8455  012D40  0100               	movlb	0	; () banked
  8456  012D42  C061  FFDE         	movff	?___lldiv+1,postinc2
  8457  012D46  0100               	movlb	0	; () banked
  8458  012D48  C062  FFDE         	movff	?___lldiv+2,postinc2
  8459  012D4C  0100               	movlb	0	; () banked
  8460  012D4E  C063  FFDD         	movff	?___lldiv+3,postdec2
  8461  012D52  52DD               	movf	postdec2,f,c
  8462  012D54  52DD               	movf	postdec2,f,c
  8463  012D56  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8464  012D5A  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8465  012D5E  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8466  012D62  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8467  012D66  0100               	movlb	0	; () banked
  8468  012D68  517B               	movf	get_quot_rem@div& (0+255),w,b
  8469  012D6A  0100               	movlb	0	; () banked
  8470  012D6C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8471  012D6E  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8472  012D70  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8473  012D72  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8474  012D74  EC25  F09F         	call	___lmul	;wreg free
  8475  012D78  0100               	movlb	0	; () banked
  8476  012D7A  1F6D               	comf	?___lmul& (0+255),f,b
  8477  012D7C  0100               	movlb	0	; () banked
  8478  012D7E  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8479  012D80  0100               	movlb	0	; () banked
  8480  012D82  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8481  012D84  0100               	movlb	0	; () banked
  8482  012D86  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8483  012D88  0100               	movlb	0	; () banked
  8484  012D8A  2B6D               	incf	?___lmul& (0+255),f,b
  8485  012D8C  0E00               	movlw	0
  8486  012D8E  0100               	movlb	0	; () banked
  8487  012D90  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8488  012D92  0100               	movlb	0	; () banked
  8489  012D94  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8490  012D96  0100               	movlb	0	; () banked
  8491  012D98  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8492  012D9A  0100               	movlb	0	; () banked
  8493  012D9C  517D               	movf	get_quot_rem@num& (0+255),w,b
  8494  012D9E  0100               	movlb	0	; () banked
  8495  012DA0  256D               	addwf	?___lmul& (0+255),w,b
  8496  012DA2  0100               	movlb	0	; () banked
  8497  012DA4  6F79               	movwf	?_get_quot_rem& (0+255),b
  8498  012DA6  0100               	movlb	0	; () banked
  8499  012DA8  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8500  012DAA  0100               	movlb	0	; () banked
  8501  012DAC  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8502  012DAE  0100               	movlb	0	; () banked
  8503  012DB0  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8504  012DB2  0100               	movlb	0	; () banked
  8505  012DB4  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8506  012DB6  0100               	movlb	0	; () banked
  8507  012DB8  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8508  012DBA  0100               	movlb	0	; () banked
  8509  012DBC  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8510  012DBE  0100               	movlb	0	; () banked
  8511  012DC0  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8512  012DC2  0100               	movlb	0	; () banked
  8513  012DC4  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8514  012DC6  0100               	movlb	0	; () banked
  8515  012DC8  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8516  012DCA  0012               	return	
  8517  012DCC                     __end_of_get_quot_rem:
  8518                           	opt stack 0
  8519                           tblptru	equ	0xFF8
  8520                           tblptrh	equ	0xFF7
  8521                           tblptrl	equ	0xFF6
  8522                           tablat	equ	0xFF5
  8523                           prodh	equ	0xFF4
  8524                           prodl	equ	0xFF3
  8525                           intcon	equ	0xFF2
  8526                           intcon2	equ	0xFF1
  8527                           indf0	equ	0xFEF
  8528                           postinc0	equ	0xFEE
  8529                           fsr0h	equ	0xFEA
  8530                           fsr0l	equ	0xFE9
  8531                           wreg	equ	0xFE8
  8532                           postinc1	equ	0xFE6
  8533                           postdec1	equ	0xFE5
  8534                           fsr1h	equ	0xFE2
  8535                           fsr1l	equ	0xFE1
  8536                           indf2	equ	0xFDF
  8537                           postinc2	equ	0xFDE
  8538                           postdec2	equ	0xFDD
  8539                           fsr2h	equ	0xFDA
  8540                           fsr2l	equ	0xFD9
  8541                           status	equ	0xFD8
  8542                           
  8543 ;; *************** function _caltime_to_RTCC *****************
  8544 ;; Defined at:
  8545 ;;		line 105 in file "../My_library/My_RTCC.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;  tm              2   22[BANK0 ] PTR struct .
  8548 ;;		 -> now(14), 
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;		None
  8551 ;; Return value:  Size  Location     Type
  8552 ;;		None               void
  8553 ;; Registers used:
  8554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;Total ram usage:        2 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:   13
  8567 ;; This function calls:
  8568 ;;		_d_to_x
  8569 ;; This function is called by:
  8570 ;;		_RTCC_from_caltime
  8571 ;;		_RTCC_from_epoch
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text29
  8576  012C22                     __ptext29:
  8577                           	opt stack 0
  8578  012C22                     _caltime_to_RTCC:
  8579                           	opt stack 12
  8580  012C22                     l938:
  8581  012C22  010F               	movlb	15	; () banked
  8582  012C24  B93F               	btfsc	63,4,b	;volatile
  8583  012C26  D7FD               	goto	l938
  8584                           
  8585                           ; BSR set to: 15
  8586                           ;My_RTCC.c: 107: RTCCFGbits.RTCPTR0 = 1;
  8587  012C28  010F               	movlb	15	; () banked
  8588  012C2A  813F               	bsf	63,0,b	;volatile
  8589                           
  8590                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR1 = 1;
  8591  012C2C  010F               	movlb	15	; () banked
  8592  012C2E  833F               	bsf	63,1,b	;volatile
  8593                           
  8594                           ; BSR set to: 15
  8595                           ;My_RTCC.c: 109: RTCVALL = d_to_x(tm->YY);
  8596  012C30  0100               	movlb	0	; () banked
  8597  012C32  EE20 F00A          	lfsr	2,10
  8598  012C36  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8599  012C38  26D9               	addwf	fsr2l,f,c
  8600  012C3A  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8601  012C3C  22DA               	addwfc	fsr2h,f,c
  8602  012C3E  50DF               	movf	indf2,w,c
  8603  012C40  ECBD  F0A2         	call	_d_to_x
  8604  012C44  010F               	movlb	15	; () banked
  8605  012C46  6F3A               	movwf	58,b	;volatile
  8606                           
  8607                           ; BSR set to: 15
  8608                           ;My_RTCC.c: 110: RTCVALH = 0x00;
  8609  012C48  0E00               	movlw	0
  8610  012C4A  010F               	movlb	15	; () banked
  8611  012C4C  6F3B               	movwf	59,b	;volatile
  8612                           
  8613                           ; BSR set to: 15
  8614                           ;My_RTCC.c: 111: RTCCFGbits.RTCPTR0 = 0;
  8615  012C4E  010F               	movlb	15	; () banked
  8616  012C50  913F               	bcf	63,0,b	;volatile
  8617                           
  8618                           ; BSR set to: 15
  8619                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR1 = 1;
  8620  012C52  010F               	movlb	15	; () banked
  8621  012C54  833F               	bsf	63,1,b	;volatile
  8622                           
  8623                           ; BSR set to: 15
  8624                           ;My_RTCC.c: 113: RTCVALL = d_to_x(tm->DD);
  8625  012C56  0100               	movlb	0	; () banked
  8626  012C58  EE20 F008          	lfsr	2,8
  8627  012C5C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8628  012C5E  26D9               	addwf	fsr2l,f,c
  8629  012C60  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8630  012C62  22DA               	addwfc	fsr2h,f,c
  8631  012C64  50DF               	movf	indf2,w,c
  8632  012C66  ECBD  F0A2         	call	_d_to_x
  8633  012C6A  010F               	movlb	15	; () banked
  8634  012C6C  6F3A               	movwf	58,b	;volatile
  8635                           
  8636                           ; BSR set to: 15
  8637                           ;My_RTCC.c: 114: RTCVALH = d_to_x(tm->MM);
  8638  012C6E  0100               	movlb	0	; () banked
  8639  012C70  EE20 F009          	lfsr	2,9
  8640  012C74  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8641  012C76  26D9               	addwf	fsr2l,f,c
  8642  012C78  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8643  012C7A  22DA               	addwfc	fsr2h,f,c
  8644  012C7C  50DF               	movf	indf2,w,c
  8645  012C7E  ECBD  F0A2         	call	_d_to_x
  8646  012C82  010F               	movlb	15	; () banked
  8647  012C84  6F3B               	movwf	59,b	;volatile
  8648                           
  8649                           ; BSR set to: 15
  8650                           ;My_RTCC.c: 115: RTCCFGbits.RTCPTR0 = 1;
  8651  012C86  010F               	movlb	15	; () banked
  8652  012C88  813F               	bsf	63,0,b	;volatile
  8653                           
  8654                           ; BSR set to: 15
  8655                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR1 = 0;
  8656  012C8A  010F               	movlb	15	; () banked
  8657  012C8C  933F               	bcf	63,1,b	;volatile
  8658                           
  8659                           ; BSR set to: 15
  8660                           ;My_RTCC.c: 117: RTCVALL = d_to_x(tm->hh);
  8661  012C8E  0100               	movlb	0	; () banked
  8662  012C90  EE20 F006          	lfsr	2,6
  8663  012C94  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8664  012C96  26D9               	addwf	fsr2l,f,c
  8665  012C98  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8666  012C9A  22DA               	addwfc	fsr2h,f,c
  8667  012C9C  50DF               	movf	indf2,w,c
  8668  012C9E  ECBD  F0A2         	call	_d_to_x
  8669  012CA2  010F               	movlb	15	; () banked
  8670  012CA4  6F3A               	movwf	58,b	;volatile
  8671                           
  8672                           ; BSR set to: 15
  8673                           ;My_RTCC.c: 118: RTCVALH = d_to_x(tm->EE);
  8674  012CA6  0100               	movlb	0	; () banked
  8675  012CA8  EE20 F007          	lfsr	2,7
  8676  012CAC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8677  012CAE  26D9               	addwf	fsr2l,f,c
  8678  012CB0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8679  012CB2  22DA               	addwfc	fsr2h,f,c
  8680  012CB4  50DF               	movf	indf2,w,c
  8681  012CB6  ECBD  F0A2         	call	_d_to_x
  8682  012CBA  010F               	movlb	15	; () banked
  8683  012CBC  6F3B               	movwf	59,b	;volatile
  8684                           
  8685                           ; BSR set to: 15
  8686                           ;My_RTCC.c: 119: RTCCFGbits.RTCPTR0 = 0;
  8687  012CBE  010F               	movlb	15	; () banked
  8688  012CC0  913F               	bcf	63,0,b	;volatile
  8689                           
  8690                           ; BSR set to: 15
  8691                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR1 = 0;
  8692  012CC2  010F               	movlb	15	; () banked
  8693  012CC4  933F               	bcf	63,1,b	;volatile
  8694                           
  8695                           ; BSR set to: 15
  8696                           ;My_RTCC.c: 121: RTCVALL = d_to_x(tm->ss);
  8697  012CC6  0100               	movlb	0	; () banked
  8698  012CC8  EE20 F004          	lfsr	2,4
  8699  012CCC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8700  012CCE  26D9               	addwf	fsr2l,f,c
  8701  012CD0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8702  012CD2  22DA               	addwfc	fsr2h,f,c
  8703  012CD4  50DF               	movf	indf2,w,c
  8704  012CD6  ECBD  F0A2         	call	_d_to_x
  8705  012CDA  010F               	movlb	15	; () banked
  8706  012CDC  6F3A               	movwf	58,b	;volatile
  8707                           
  8708                           ; BSR set to: 15
  8709                           ;My_RTCC.c: 122: RTCVALH = d_to_x(tm->mm);
  8710  012CDE  0100               	movlb	0	; () banked
  8711  012CE0  EE20 F005          	lfsr	2,5
  8712  012CE4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8713  012CE6  26D9               	addwf	fsr2l,f,c
  8714  012CE8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8715  012CEA  22DA               	addwfc	fsr2h,f,c
  8716  012CEC  50DF               	movf	indf2,w,c
  8717  012CEE  ECBD  F0A2         	call	_d_to_x
  8718  012CF2  010F               	movlb	15	; () banked
  8719  012CF4  6F3B               	movwf	59,b	;volatile
  8720                           
  8721                           ; BSR set to: 15
  8722  012CF6  0012               	return		;funcret
  8723  012CF8                     __end_of_caltime_to_RTCC:
  8724                           	opt stack 0
  8725                           tblptru	equ	0xFF8
  8726                           tblptrh	equ	0xFF7
  8727                           tblptrl	equ	0xFF6
  8728                           tablat	equ	0xFF5
  8729                           prodh	equ	0xFF4
  8730                           prodl	equ	0xFF3
  8731                           intcon	equ	0xFF2
  8732                           intcon2	equ	0xFF1
  8733                           indf0	equ	0xFEF
  8734                           postinc0	equ	0xFEE
  8735                           fsr0h	equ	0xFEA
  8736                           fsr0l	equ	0xFE9
  8737                           wreg	equ	0xFE8
  8738                           postinc1	equ	0xFE6
  8739                           postdec1	equ	0xFE5
  8740                           fsr1h	equ	0xFE2
  8741                           fsr1l	equ	0xFE1
  8742                           indf2	equ	0xFDF
  8743                           postinc2	equ	0xFDE
  8744                           postdec2	equ	0xFDD
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           
  8749 ;; *************** function _d_to_x *****************
  8750 ;; Defined at:
  8751 ;;		line 45 in file "../My_library/My_RTCC.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  dec             1    wreg     unsigned char 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  dec             1   21[BANK0 ] unsigned char 
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  1    wreg      unsigned char 
  8758 ;; Registers used:
  8759 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;Total ram usage:        1 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; Hardware stack levels required when called:   12
  8772 ;; This function calls:
  8773 ;;		___awdiv
  8774 ;; This function is called by:
  8775 ;;		_caltime_to_RTCC
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text30
  8780  01457A                     __ptext30:
  8781                           	opt stack 0
  8782  01457A                     _d_to_x:
  8783                           	opt stack 12
  8784                           
  8785                           ; BSR set to: 15
  8786                           ;incstack = 0
  8787                           ;d_to_x@dec stored from wreg
  8788  01457A  0100               	movlb	0	; () banked
  8789  01457C  6F75               	movwf	d_to_x@dec& (0+255),b
  8790                           
  8791                           ;My_RTCC.c: 48: return dec / 10 * 6 + dec;
  8792  01457E  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
  8793  014582  0100               	movlb	0	; () banked
  8794  014584  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
  8795  014586  0E00               	movlw	0
  8796  014588  0100               	movlb	0	; () banked
  8797  01458A  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  8798  01458C  0E0A               	movlw	10
  8799  01458E  6F6F               	movwf	___awdiv@divisor& (0+255),b
  8800  014590  ECE7  F098         	call	___awdiv	;wreg free
  8801  014594  0100               	movlb	0	; () banked
  8802  014596  516D               	movf	?___awdiv& (0+255),w,b
  8803  014598  0D06               	mullw	6
  8804  01459A  50F3               	movf	prodl,w,c
  8805  01459C  0100               	movlb	0	; () banked
  8806  01459E  2575               	addwf	d_to_x@dec& (0+255),w,b
  8807  0145A0  0012               	return	
  8808  0145A2                     __end_of_d_to_x:
  8809                           	opt stack 0
  8810                           tblptru	equ	0xFF8
  8811                           tblptrh	equ	0xFF7
  8812                           tblptrl	equ	0xFF6
  8813                           tablat	equ	0xFF5
  8814                           prodh	equ	0xFF4
  8815                           prodl	equ	0xFF3
  8816                           intcon	equ	0xFF2
  8817                           intcon2	equ	0xFF1
  8818                           indf0	equ	0xFEF
  8819                           postinc0	equ	0xFEE
  8820                           fsr0h	equ	0xFEA
  8821                           fsr0l	equ	0xFE9
  8822                           wreg	equ	0xFE8
  8823                           postinc1	equ	0xFE6
  8824                           postdec1	equ	0xFE5
  8825                           fsr1h	equ	0xFE2
  8826                           fsr1l	equ	0xFE1
  8827                           indf2	equ	0xFDF
  8828                           postinc2	equ	0xFDE
  8829                           postdec2	equ	0xFDD
  8830                           fsr2h	equ	0xFDA
  8831                           fsr2l	equ	0xFD9
  8832                           status	equ	0xFD8
  8833                           
  8834 ;; *************** function ___awdiv *****************
  8835 ;; Defined at:
  8836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  dividend        2   13[BANK0 ] int 
  8839 ;;  divisor         2   15[BANK0 ] int 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  quotient        2   19[BANK0 ] int 
  8842 ;;  sign            1   18[BANK0 ] unsigned char 
  8843 ;;  counter         1   17[BANK0 ] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2   13[BANK0 ] int 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8854 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8856 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8857 ;;Total ram usage:        8 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   11
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_d_to_x
  8864 ;;		_terminal_operation
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text31
  8869  0131CE                     __ptext31:
  8870                           	opt stack 0
  8871  0131CE                     ___awdiv:
  8872                           	opt stack 12
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;incstack = 0
  8876  0131CE  0E00               	movlw	0
  8877  0131D0  0100               	movlb	0	; () banked
  8878  0131D2  6F72               	movwf	___awdiv@sign& (0+255),b
  8879                           
  8880                           ; BSR set to: 0
  8881  0131D4  0100               	movlb	0	; () banked
  8882  0131D6  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8883  0131D8  D008               	goto	l9032
  8884                           
  8885                           ; BSR set to: 0
  8886  0131DA  0100               	movlb	0	; () banked
  8887  0131DC  6D6F               	negf	___awdiv@divisor& (0+255),b
  8888  0131DE  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8889  0131E0  B0D8               	btfsc	status,0,c
  8890  0131E2  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8891                           
  8892                           ; BSR set to: 0
  8893  0131E4  0E01               	movlw	1
  8894  0131E6  0100               	movlb	0	; () banked
  8895  0131E8  6F72               	movwf	___awdiv@sign& (0+255),b
  8896  0131EA                     l9032:
  8897                           
  8898                           ; BSR set to: 0
  8899  0131EA  0100               	movlb	0	; () banked
  8900  0131EC  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8901  0131EE  D008               	goto	l9038
  8902                           
  8903                           ; BSR set to: 0
  8904  0131F0  0100               	movlb	0	; () banked
  8905  0131F2  6D6D               	negf	___awdiv@dividend& (0+255),b
  8906  0131F4  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8907  0131F6  B0D8               	btfsc	status,0,c
  8908  0131F8  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8909                           
  8910                           ; BSR set to: 0
  8911  0131FA  0E01               	movlw	1
  8912  0131FC  0100               	movlb	0	; () banked
  8913  0131FE  1B72               	xorwf	___awdiv@sign& (0+255),f,b
  8914  013200                     l9038:
  8915                           
  8916                           ; BSR set to: 0
  8917  013200  0E00               	movlw	0
  8918  013202  0100               	movlb	0	; () banked
  8919  013204  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
  8920  013206  0E00               	movlw	0
  8921  013208  6F73               	movwf	___awdiv@quotient& (0+255),b
  8922                           
  8923                           ; BSR set to: 0
  8924  01320A  0100               	movlb	0	; () banked
  8925  01320C  516F               	movf	___awdiv@divisor& (0+255),w,b
  8926  01320E  0100               	movlb	0	; () banked
  8927  013210  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8928  013212  B4D8               	btfsc	status,2,c
  8929  013214  D02C               	goto	l9060
  8930                           
  8931                           ; BSR set to: 0
  8932  013216  0E01               	movlw	1
  8933  013218  0100               	movlb	0	; () banked
  8934  01321A  6F71               	movwf	___awdiv@counter& (0+255),b
  8935  01321C  D006               	goto	l9046
  8936  01321E                     l9044:
  8937                           
  8938                           ; BSR set to: 0
  8939  01321E  0100               	movlb	0	; () banked
  8940  013220  90D8               	bcf	status,0,c
  8941  013222  376F               	rlcf	___awdiv@divisor& (0+255),f,b
  8942  013224  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8943  013226  0100               	movlb	0	; () banked
  8944  013228  2B71               	incf	___awdiv@counter& (0+255),f,b
  8945  01322A                     l9046:
  8946                           
  8947                           ; BSR set to: 0
  8948  01322A  0100               	movlb	0	; () banked
  8949  01322C  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8950  01322E  D7F7               	goto	l9044
  8951  013230                     l9048:
  8952                           
  8953                           ; BSR set to: 0
  8954  013230  0100               	movlb	0	; () banked
  8955  013232  90D8               	bcf	status,0,c
  8956  013234  3773               	rlcf	___awdiv@quotient& (0+255),f,b
  8957  013236  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8958                           
  8959                           ; BSR set to: 0
  8960  013238  0100               	movlb	0	; () banked
  8961  01323A  516F               	movf	___awdiv@divisor& (0+255),w,b
  8962  01323C  0100               	movlb	0	; () banked
  8963  01323E  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
  8964  013240  0100               	movlb	0	; () banked
  8965  013242  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8966  013244  0100               	movlb	0	; () banked
  8967  013246  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8968  013248  A0D8               	btfss	status,0,c
  8969  01324A  D00A               	goto	l9056
  8970                           
  8971                           ; BSR set to: 0
  8972  01324C  0100               	movlb	0	; () banked
  8973  01324E  516F               	movf	___awdiv@divisor& (0+255),w,b
  8974  013250  0100               	movlb	0	; () banked
  8975  013252  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
  8976  013254  0100               	movlb	0	; () banked
  8977  013256  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8978  013258  0100               	movlb	0	; () banked
  8979  01325A  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 0
  8982  01325C  0100               	movlb	0	; () banked
  8983  01325E  8173               	bsf	___awdiv@quotient& (0+255),0,b
  8984  013260                     l9056:
  8985                           
  8986                           ; BSR set to: 0
  8987  013260  0100               	movlb	0	; () banked
  8988  013262  90D8               	bcf	status,0,c
  8989  013264  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8990  013266  336F               	rrcf	___awdiv@divisor& (0+255),f,b
  8991                           
  8992                           ; BSR set to: 0
  8993  013268  0100               	movlb	0	; () banked
  8994  01326A  2F71               	decfsz	___awdiv@counter& (0+255),f,b
  8995  01326C  D7E1               	goto	l9048
  8996  01326E                     l9060:
  8997                           
  8998                           ; BSR set to: 0
  8999  01326E  0100               	movlb	0	; () banked
  9000  013270  5172               	movf	___awdiv@sign& (0+255),w,b
  9001  013272  0100               	movlb	0	; () banked
  9002  013274  B4D8               	btfsc	status,2,c
  9003  013276  D005               	goto	l9064
  9004                           
  9005                           ; BSR set to: 0
  9006  013278  0100               	movlb	0	; () banked
  9007  01327A  6D73               	negf	___awdiv@quotient& (0+255),b
  9008  01327C  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9009  01327E  B0D8               	btfsc	status,0,c
  9010  013280  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9011  013282                     l9064:
  9012                           
  9013                           ; BSR set to: 0
  9014  013282  C073  F06D         	movff	___awdiv@quotient,?___awdiv
  9015  013286  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
  9016  01328A  0012               	return	
  9017  01328C                     __end_of___awdiv:
  9018                           	opt stack 0
  9019                           tblptru	equ	0xFF8
  9020                           tblptrh	equ	0xFF7
  9021                           tblptrl	equ	0xFF6
  9022                           tablat	equ	0xFF5
  9023                           prodh	equ	0xFF4
  9024                           prodl	equ	0xFF3
  9025                           intcon	equ	0xFF2
  9026                           intcon2	equ	0xFF1
  9027                           indf0	equ	0xFEF
  9028                           postinc0	equ	0xFEE
  9029                           fsr0h	equ	0xFEA
  9030                           fsr0l	equ	0xFE9
  9031                           wreg	equ	0xFE8
  9032                           postinc1	equ	0xFE6
  9033                           postdec1	equ	0xFE5
  9034                           fsr1h	equ	0xFE2
  9035                           fsr1l	equ	0xFE1
  9036                           indf2	equ	0xFDF
  9037                           postinc2	equ	0xFDE
  9038                           postdec2	equ	0xFDD
  9039                           fsr2h	equ	0xFDA
  9040                           fsr2l	equ	0xFD9
  9041                           status	equ	0xFD8
  9042                           
  9043 ;; *************** function _PWM_init *****************
  9044 ;; Defined at:
  9045 ;;		line 80 in file "PIC18F27J53-killifish_light06.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  PR              1    wreg     unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  PR              1    0[BANK0 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;		None               void
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;Total ram usage:        1 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:   11
  9066 ;; This function calls:
  9067 ;;		Nothing
  9068 ;; This function is called by:
  9069 ;;		_main_init
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text32
  9074  01328C                     __ptext32:
  9075                           	opt stack 0
  9076  01328C                     _PWM_init:
  9077                           	opt stack 18
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;incstack = 0
  9081                           ;PWM_init@PR stored from wreg
  9082  01328C  0100               	movlb	0	; () banked
  9083  01328E  6F60               	movwf	PWM_init@PR& (0+255),b
  9084                           
  9085                           ;PIC18F27J53-killifish_light06.c: 81: PPSCONbits.IOLOCK = 0;
  9086  013290  010E               	movlb	14	; () banked
  9087  013292  91BF               	bcf	191,0,b	;volatile
  9088                           
  9089                           ;PIC18F27J53-killifish_light06.c: 82: if (PPSCONbits.IOLOCK != 0) {
  9090  013294  010E               	movlb	14	; () banked
  9091  013296  A1BF               	btfss	191,0,b	;volatile
  9092  013298  D006               	goto	l1578
  9093                           
  9094                           ; BSR set to: 14
  9095                           ;PIC18F27J53-killifish_light06.c: 83: EECON2 = 0x55;
  9096  01329A  0E55               	movlw	85
  9097  01329C  6EA7               	movwf	4007,c	;volatile
  9098                           
  9099                           ;PIC18F27J53-killifish_light06.c: 84: EECON2 = 0xAA;
  9100  01329E  0EAA               	movlw	170
  9101  0132A0  6EA7               	movwf	4007,c	;volatile
  9102                           
  9103                           ; BSR set to: 14
  9104                           ;PIC18F27J53-killifish_light06.c: 85: PPSCONbits.IOLOCK = 0;
  9105  0132A2  010E               	movlb	14	; () banked
  9106  0132A4  91BF               	bcf	191,0,b	;volatile
  9107  0132A6                     l1578:
  9108                           
  9109                           ; BSR set to: 14
  9110                           ;PIC18F27J53-killifish_light06.c: 86: }
  9111                           ;PIC18F27J53-killifish_light06.c: 88: RPOR3 = 14;
  9112  0132A6  0E0E               	movlw	14
  9113  0132A8  010E               	movlb	14	; () banked
  9114  0132AA  6FC3               	movwf	195,b	;volatile
  9115                           
  9116                           ;PIC18F27J53-killifish_light06.c: 89: RPOR4 = 18;
  9117  0132AC  0E12               	movlw	18
  9118  0132AE  010E               	movlb	14	; () banked
  9119  0132B0  6FC4               	movwf	196,b	;volatile
  9120                           
  9121                           ;PIC18F27J53-killifish_light06.c: 90: RPOR5 = 22;
  9122  0132B2  0E16               	movlw	22
  9123  0132B4  010E               	movlb	14	; () banked
  9124  0132B6  6FC5               	movwf	197,b	;volatile
  9125                           
  9126                           ; BSR set to: 14
  9127                           ;PIC18F27J53-killifish_light06.c: 92: CCP1CONbits.CCP1M = 12;
  9128  0132B8  50BA               	movf	4026,w,c	;volatile
  9129  0132BA  0BF0               	andlw	-16
  9130  0132BC  090C               	iorlw	12
  9131  0132BE  6EBA               	movwf	4026,c	;volatile
  9132                           
  9133                           ; BSR set to: 14
  9134                           ;PIC18F27J53-killifish_light06.c: 93: CCP1CONbits.P1M = 0;
  9135  0132C0  0E3F               	movlw	-193
  9136  0132C2  16BA               	andwf	4026,f,c	;volatile
  9137                           
  9138                           ; BSR set to: 14
  9139                           ;PIC18F27J53-killifish_light06.c: 94: CCPTMRS0bits.C1TSEL = 0;
  9140  0132C4  010F               	movlb	15	; () banked
  9141  0132C6  9152               	bcf	82,0,b	;volatile
  9142  0132C8  9352               	bcf	82,1,b	;volatile
  9143  0132CA  9552               	bcf	82,2,b	;volatile
  9144                           
  9145                           ; BSR set to: 15
  9146                           ;PIC18F27J53-killifish_light06.c: 95: CCPR1Lbits.CCPR1L = 0;
  9147  0132CC  0E00               	movlw	0
  9148  0132CE  6EBB               	movwf	4027,c	;volatile
  9149                           
  9150                           ; BSR set to: 15
  9151                           ;PIC18F27J53-killifish_light06.c: 96: CCP1CONbits.DC1B = 0;
  9152  0132D0  0ECF               	movlw	-49
  9153  0132D2  16BA               	andwf	4026,f,c	;volatile
  9154                           
  9155                           ; BSR set to: 15
  9156                           ;PIC18F27J53-killifish_light06.c: 98: CCP2CONbits.CCP2M = 12;
  9157  0132D4  50B4               	movf	4020,w,c	;volatile
  9158  0132D6  0BF0               	andlw	-16
  9159  0132D8  090C               	iorlw	12
  9160  0132DA  6EB4               	movwf	4020,c	;volatile
  9161                           
  9162                           ; BSR set to: 15
  9163                           ;PIC18F27J53-killifish_light06.c: 99: CCP2CONbits.P2M = 0;
  9164  0132DC  0E3F               	movlw	-193
  9165  0132DE  16B4               	andwf	4020,f,c	;volatile
  9166                           
  9167                           ; BSR set to: 15
  9168                           ;PIC18F27J53-killifish_light06.c: 100: CCPTMRS0bits.C2TSEL = 0;
  9169  0132E0  010F               	movlb	15	; () banked
  9170  0132E2  9752               	bcf	82,3,b	;volatile
  9171  0132E4  9952               	bcf	82,4,b	;volatile
  9172  0132E6  9B52               	bcf	82,5,b	;volatile
  9173                           
  9174                           ; BSR set to: 15
  9175                           ;PIC18F27J53-killifish_light06.c: 101: CCPR2Lbits.CCPR2L = 0;
  9176  0132E8  0E00               	movlw	0
  9177  0132EA  6EB5               	movwf	4021,c	;volatile
  9178                           
  9179                           ; BSR set to: 15
  9180                           ;PIC18F27J53-killifish_light06.c: 102: CCP2CONbits.DC2B = 0;
  9181  0132EC  0ECF               	movlw	-49
  9182  0132EE  16B4               	andwf	4020,f,c	;volatile
  9183                           
  9184                           ; BSR set to: 15
  9185                           ;PIC18F27J53-killifish_light06.c: 104: CCP3CONbits.CCP3M = 12;
  9186  0132F0  010F               	movlb	15	; () banked
  9187  0132F2  5115               	movf	21,w,b	;volatile
  9188  0132F4  0BF0               	andlw	-16
  9189  0132F6  090C               	iorlw	12
  9190  0132F8  6F15               	movwf	21,b	;volatile
  9191                           
  9192                           ; BSR set to: 15
  9193                           ;PIC18F27J53-killifish_light06.c: 105: CCP3CONbits.P3M = 0;
  9194  0132FA  0E3F               	movlw	-193
  9195  0132FC  010F               	movlb	15	; () banked
  9196  0132FE  1715               	andwf	21,f,b	;volatile
  9197                           
  9198                           ; BSR set to: 15
  9199                           ;PIC18F27J53-killifish_light06.c: 106: CCPTMRS0bits.C3TSEL = 0;
  9200  013300  0E3F               	movlw	-193
  9201  013302  010F               	movlb	15	; () banked
  9202  013304  1752               	andwf	82,f,b	;volatile
  9203                           
  9204                           ; BSR set to: 15
  9205                           ;PIC18F27J53-killifish_light06.c: 107: CCPR3Lbits.CCPR3L = 0;
  9206  013306  0E00               	movlw	0
  9207  013308  010F               	movlb	15	; () banked
  9208  01330A  6F16               	movwf	22,b	;volatile
  9209                           
  9210                           ; BSR set to: 15
  9211                           ;PIC18F27J53-killifish_light06.c: 108: CCP3CONbits.DC3B = 0;
  9212  01330C  0ECF               	movlw	-49
  9213  01330E  010F               	movlb	15	; () banked
  9214  013310  1715               	andwf	21,f,b	;volatile
  9215                           
  9216                           ; BSR set to: 15
  9217                           ;PIC18F27J53-killifish_light06.c: 110: CCP4CONbits.CCP4M = 12;
  9218  013312  010F               	movlb	15	; () banked
  9219  013314  5112               	movf	18,w,b	;volatile
  9220  013316  0BF0               	andlw	-16
  9221  013318  090C               	iorlw	12
  9222  01331A  6F12               	movwf	18,b	;volatile
  9223                           
  9224                           ; BSR set to: 15
  9225                           ;PIC18F27J53-killifish_light06.c: 111: CCPTMRS1bits.C4TSEL = 0;
  9226  01331C  0EFC               	movlw	-4
  9227  01331E  010F               	movlb	15	; () banked
  9228  013320  1751               	andwf	81,f,b	;volatile
  9229                           
  9230                           ; BSR set to: 15
  9231                           ;PIC18F27J53-killifish_light06.c: 112: CCPR4Lbits.CCPR4L = 0;
  9232  013322  0E00               	movlw	0
  9233  013324  010F               	movlb	15	; () banked
  9234  013326  6F13               	movwf	19,b	;volatile
  9235                           
  9236                           ; BSR set to: 15
  9237                           ;PIC18F27J53-killifish_light06.c: 113: CCP4CONbits.DC4B = 0;
  9238  013328  0ECF               	movlw	-49
  9239  01332A  010F               	movlb	15	; () banked
  9240  01332C  1712               	andwf	18,f,b	;volatile
  9241                           
  9242                           ; BSR set to: 15
  9243                           ;PIC18F27J53-killifish_light06.c: 115: T2CONbits.T2OUTPS = 0;
  9244  01332E  96CA               	bcf	4042,3,c	;volatile
  9245  013330  98CA               	bcf	4042,4,c	;volatile
  9246  013332  9ACA               	bcf	4042,5,c	;volatile
  9247  013334  9CCA               	bcf	4042,6,c	;volatile
  9248                           
  9249                           ; BSR set to: 15
  9250                           ;PIC18F27J53-killifish_light06.c: 116: T2CONbits.T2CKPS = 2;
  9251  013336  50CA               	movf	4042,w,c	;volatile
  9252  013338  0BFC               	andlw	-4
  9253  01333A  0902               	iorlw	2
  9254  01333C  6ECA               	movwf	4042,c	;volatile
  9255                           
  9256                           ; BSR set to: 15
  9257                           ;PIC18F27J53-killifish_light06.c: 117: PR2 = PR - 1;
  9258  01333E  0100               	movlb	0	; () banked
  9259  013340  0560               	decf	PWM_init@PR& (0+255),w,b
  9260  013342  6ECB               	movwf	4043,c	;volatile
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;PIC18F27J53-killifish_light06.c: 118: T2CONbits.TMR2ON = 1;
  9264  013344  84CA               	bsf	4042,2,c	;volatile
  9265                           
  9266                           ; BSR set to: 0
  9267  013346  0012               	return		;funcret
  9268  013348                     __end_of_PWM_init:
  9269                           	opt stack 0
  9270                           tblptru	equ	0xFF8
  9271                           tblptrh	equ	0xFF7
  9272                           tblptrl	equ	0xFF6
  9273                           tablat	equ	0xFF5
  9274                           prodh	equ	0xFF4
  9275                           prodl	equ	0xFF3
  9276                           intcon	equ	0xFF2
  9277                           intcon2	equ	0xFF1
  9278                           indf0	equ	0xFEF
  9279                           postinc0	equ	0xFEE
  9280                           fsr0h	equ	0xFEA
  9281                           fsr0l	equ	0xFE9
  9282                           wreg	equ	0xFE8
  9283                           postinc1	equ	0xFE6
  9284                           postdec1	equ	0xFE5
  9285                           fsr1h	equ	0xFE2
  9286                           fsr1l	equ	0xFE1
  9287                           indf2	equ	0xFDF
  9288                           postinc2	equ	0xFDE
  9289                           postdec2	equ	0xFDD
  9290                           fsr2h	equ	0xFDA
  9291                           fsr2l	equ	0xFD9
  9292                           status	equ	0xFD8
  9293                           
  9294 ;; *************** function _OSC_init *****************
  9295 ;; Defined at:
  9296 ;;		line 8 in file "../My_library/My_PIC.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;		None               void
  9303 ;; Registers used:
  9304 ;;		wreg, status,2
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9314 ;;Total ram usage:        0 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:   11
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_main_init
  9321 ;; This function uses a non-reentrant model
  9322 ;;
  9323                           
  9324                           	psect	text33
  9325  0146BC                     __ptext33:
  9326                           	opt stack 0
  9327  0146BC                     _OSC_init:
  9328                           	opt stack 18
  9329                           
  9330                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;incstack = 0
  9334  0146BC  88D3               	bsf	4051,4,c	;volatile
  9335  0146BE  8AD3               	bsf	4051,5,c	;volatile
  9336  0146C0  8CD3               	bsf	4051,6,c	;volatile
  9337                           
  9338                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  9339  0146C2  8C9B               	bsf	3995,6,c	;volatile
  9340                           
  9341                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  9342  0146C4  0EFC               	movlw	-4
  9343  0146C6  16D3               	andwf	4051,f,c	;volatile
  9344  0146C8  0012               	return		;funcret
  9345  0146CA                     __end_of_OSC_init:
  9346                           	opt stack 0
  9347                           tblptru	equ	0xFF8
  9348                           tblptrh	equ	0xFF7
  9349                           tblptrl	equ	0xFF6
  9350                           tablat	equ	0xFF5
  9351                           prodh	equ	0xFF4
  9352                           prodl	equ	0xFF3
  9353                           intcon	equ	0xFF2
  9354                           intcon2	equ	0xFF1
  9355                           indf0	equ	0xFEF
  9356                           postinc0	equ	0xFEE
  9357                           fsr0h	equ	0xFEA
  9358                           fsr0l	equ	0xFE9
  9359                           wreg	equ	0xFE8
  9360                           postinc1	equ	0xFE6
  9361                           postdec1	equ	0xFE5
  9362                           fsr1h	equ	0xFE2
  9363                           fsr1l	equ	0xFE1
  9364                           indf2	equ	0xFDF
  9365                           postinc2	equ	0xFDE
  9366                           postdec2	equ	0xFDD
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _ADC_init *****************
  9372 ;; Defined at:
  9373 ;;		line 133 in file "../My_library/My_PIC.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  p_ref           1    wreg     unsigned char 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  p_ref           1    0[BANK0 ] unsigned char 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;		None               void
  9380 ;; Registers used:
  9381 ;;		wreg, status,2
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9390 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9391 ;;Total ram usage:        1 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:   11
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_main_init
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text34
  9402  014610                     __ptext34:
  9403                           	opt stack 0
  9404  014610                     _ADC_init:
  9405                           	opt stack 18
  9406                           
  9407                           ;incstack = 0
  9408                           ;ADC_init@p_ref stored from wreg
  9409  014610  0100               	movlb	0	; () banked
  9410  014612  6F60               	movwf	ADC_init@p_ref& (0+255),b
  9411                           
  9412                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
  9413  014614  9EC2               	bcf	4034,7,c	;volatile
  9414                           
  9415                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
  9416  014616  0100               	movlb	0	; () banked
  9417  014618  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  9418  01461A  D002               	bra	u10015
  9419  01461C  9CC2               	bcf	4034,6,c	;volatile
  9420  01461E  D001               	bra	u10016
  9421  014620                     u10015:
  9422  014620  8CC2               	bsf	4034,6,c	;volatile
  9423  014622                     u10016:
  9424                           
  9425                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
  9426  014622  8EC1               	bsf	4033,7,c	;volatile
  9427                           
  9428                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
  9429  014624  9CC1               	bcf	4033,6,c	;volatile
  9430                           
  9431                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
  9432  014626  50C1               	movf	4033,w,c	;volatile
  9433  014628  0BF8               	andlw	-8
  9434  01462A  0906               	iorlw	6
  9435  01462C  6EC1               	movwf	4033,c	;volatile
  9436  01462E  0012               	return		;funcret
  9437  014630                     __end_of_ADC_init:
  9438                           	opt stack 0
  9439                           tblptru	equ	0xFF8
  9440                           tblptrh	equ	0xFF7
  9441                           tblptrl	equ	0xFF6
  9442                           tablat	equ	0xFF5
  9443                           prodh	equ	0xFF4
  9444                           prodl	equ	0xFF3
  9445                           intcon	equ	0xFF2
  9446                           intcon2	equ	0xFF1
  9447                           indf0	equ	0xFEF
  9448                           postinc0	equ	0xFEE
  9449                           fsr0h	equ	0xFEA
  9450                           fsr0l	equ	0xFE9
  9451                           wreg	equ	0xFE8
  9452                           postinc1	equ	0xFE6
  9453                           postdec1	equ	0xFE5
  9454                           fsr1h	equ	0xFE2
  9455                           fsr1l	equ	0xFE1
  9456                           indf2	equ	0xFDF
  9457                           postinc2	equ	0xFDE
  9458                           postdec2	equ	0xFDD
  9459                           fsr2h	equ	0xFDA
  9460                           fsr2l	equ	0xFD9
  9461                           status	equ	0xFD8
  9462                           
  9463 ;; *************** function _light_task *****************
  9464 ;; Defined at:
  9465 ;;		line 229 in file "PIC18F27J53-killifish_light06.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  temp            4   46[BANK0 ] unsigned long 
  9470 ;;  value           1   45[BANK0 ] unsigned char 
  9471 ;;  value           1   44[BANK0 ] unsigned char 
  9472 ;;  i               1   50[BANK0 ] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;		None               void
  9475 ;; Registers used:
  9476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9483 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9484 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9485 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;Total ram usage:       11 bytes
  9487 ;; Hardware stack levels used:    1
  9488 ;; Hardware stack levels required when called:   15
  9489 ;; This function calls:
  9490 ;;		_PWM_set
  9491 ;;		_RTCC_from_RTCC
  9492 ;;		___lldiv
  9493 ;;		___llmod
  9494 ;;		___lmul
  9495 ;; This function is called by:
  9496 ;;		_main
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text35
  9501  0117B6                     __ptext35:
  9502                           	opt stack 0
  9503  0117B6                     _light_task:
  9504                           	opt stack 15
  9505                           
  9506                           ;PIC18F27J53-killifish_light06.c: 230: uint8_t i;
  9507                           ;PIC18F27J53-killifish_light06.c: 231: if (time_change_flag) {
  9508                           
  9509                           ;incstack = 0
  9510  0117B6  0100               	movlb	0	; () banked
  9511  0117B8  51F0               	movf	_time_change_flag& (0+255),w,b
  9512  0117BA  B4D8               	btfsc	status,2,c
  9513  0117BC  D0AE               	goto	l1632
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;PIC18F27J53-killifish_light06.c: 232: time_change_flag = 0;
  9517  0117BE  0E00               	movlw	0
  9518  0117C0  0100               	movlb	0	; () banked
  9519  0117C2  6FF0               	movwf	_time_change_flag& (0+255),b
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;PIC18F27J53-killifish_light06.c: 233: RTCC_from_RTCC(&now);
  9523  0117C4  0E38               	movlw	low _now
  9524  0117C6  0100               	movlb	0	; () banked
  9525  0117C8  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9526  0117CA  0E01               	movlw	high _now
  9527  0117CC  0100               	movlb	0	; () banked
  9528  0117CE  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9529  0117D0  EC51  F0A3         	call	_RTCC_from_RTCC	;wreg free
  9530                           
  9531                           ;PIC18F27J53-killifish_light06.c: 234: if (light_mode == TIME_SYNC_mode) {
  9532  0117D4  0100               	movlb	0	; () banked
  9533  0117D6  51EE               	movf	_light_mode& (0+255),w,b
  9534  0117D8  A4D8               	btfss	status,2,c
  9535  0117DA  D09F               	goto	l1632
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;PIC18F27J53-killifish_light06.c: 235: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9539  0117DC  C138  F060         	movff	_now,___llmod@dividend
  9540  0117E0  C139  F061         	movff	_now+1,___llmod@dividend+1
  9541  0117E4  C13A  F062         	movff	_now+2,___llmod@dividend+2
  9542  0117E8  C13B  F063         	movff	_now+3,___llmod@dividend+3
  9543  0117EC  0E80               	movlw	128
  9544  0117EE  0100               	movlb	0	; () banked
  9545  0117F0  6F64               	movwf	___llmod@divisor& (0+255),b
  9546  0117F2  0E51               	movlw	81
  9547  0117F4  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  9548  0117F6  0E01               	movlw	1
  9549  0117F8  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  9550  0117FA  0E00               	movlw	0
  9551  0117FC  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  9552  0117FE  EC18  F09C         	call	___llmod	;wreg free
  9553  011802  C060  F08E         	movff	?___llmod,light_task@temp
  9554  011806  C061  F08F         	movff	?___llmod+1,light_task@temp+1
  9555  01180A  C062  F090         	movff	?___llmod+2,light_task@temp+2
  9556  01180E  C063  F091         	movff	?___llmod+3,light_task@temp+3
  9557                           
  9558                           ;PIC18F27J53-killifish_light06.c: 236: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9559  011812  0100               	movlb	0	; () banked
  9560  011814  5191               	movf	(light_task@temp+3)& (0+255),w,b
  9561  011816  0100               	movlb	0	; () banked
  9562  011818  1190               	iorwf	(light_task@temp+2)& (0+255),w,b
  9563  01181A  E108               	bnz	u10640
  9564  01181C  0EC1               	movlw	193
  9565  01181E  0100               	movlb	0	; () banked
  9566  011820  5D8E               	subwf	light_task@temp& (0+255),w,b
  9567  011822  0EA8               	movlw	168
  9568  011824  0100               	movlb	0	; () banked
  9569  011826  598F               	subwfb	(light_task@temp+1)& (0+255),w,b
  9570  011828  A0D8               	btfss	status,0,c
  9571  01182A  D026               	goto	l10396
  9572  01182C                     u10640:
  9573                           
  9574                           ; BSR set to: 0
  9575  01182C  C08E  F088         	movff	light_task@temp,??_light_task
  9576  011830  C08F  F089         	movff	light_task@temp+1,??_light_task+1
  9577  011834  C090  F08A         	movff	light_task@temp+2,??_light_task+2
  9578  011838  C091  F08B         	movff	light_task@temp+3,??_light_task+3
  9579  01183C  0100               	movlb	0	; () banked
  9580  01183E  1F88               	comf	??_light_task& (0+255),f,b
  9581  011840  1F89               	comf	(??_light_task+1)& (0+255),f,b
  9582  011842  1F8A               	comf	(??_light_task+2)& (0+255),f,b
  9583  011844  1F8B               	comf	(??_light_task+3)& (0+255),f,b
  9584  011846  2B88               	incf	??_light_task& (0+255),f,b
  9585  011848  0E00               	movlw	0
  9586  01184A  2389               	addwfc	(??_light_task+1)& (0+255),f,b
  9587  01184C  238A               	addwfc	(??_light_task+2)& (0+255),f,b
  9588  01184E  238B               	addwfc	(??_light_task+3)& (0+255),f,b
  9589  011850  0E80               	movlw	128
  9590  011852  0100               	movlb	0	; () banked
  9591  011854  2588               	addwf	??_light_task& (0+255),w,b
  9592  011856  0100               	movlb	0	; () banked
  9593  011858  6F8E               	movwf	light_task@temp& (0+255),b
  9594  01185A  0E51               	movlw	81
  9595  01185C  0100               	movlb	0	; () banked
  9596  01185E  2189               	addwfc	(??_light_task+1)& (0+255),w,b
  9597  011860  0100               	movlb	0	; () banked
  9598  011862  6F8F               	movwf	(light_task@temp+1)& (0+255),b
  9599  011864  0E01               	movlw	1
  9600  011866  0100               	movlb	0	; () banked
  9601  011868  218A               	addwfc	(??_light_task+2)& (0+255),w,b
  9602  01186A  0100               	movlb	0	; () banked
  9603  01186C  6F90               	movwf	(light_task@temp+2)& (0+255),b
  9604  01186E  0E00               	movlw	0
  9605  011870  0100               	movlb	0	; () banked
  9606  011872  218B               	addwfc	(??_light_task+3)& (0+255),w,b
  9607  011874  0100               	movlb	0	; () banked
  9608  011876  6F91               	movwf	(light_task@temp+3)& (0+255),b
  9609  011878                     l10396:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;PIC18F27J53-killifish_light06.c: 237: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9613  011878  90D8               	bcf	status,0,c
  9614  01187A  0100               	movlb	0	; () banked
  9615  01187C  358E               	rlcf	light_task@temp& (0+255),w,b
  9616  01187E  0100               	movlb	0	; () banked
  9617  011880  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9618  011882  0100               	movlb	0	; () banked
  9619  011884  358F               	rlcf	(light_task@temp+1)& (0+255),w,b
  9620  011886  0100               	movlb	0	; () banked
  9621  011888  6F6E               	movwf	(___lmul@multiplier+1)& (0+255),b
  9622  01188A  0100               	movlb	0	; () banked
  9623  01188C  3590               	rlcf	(light_task@temp+2)& (0+255),w,b
  9624  01188E  0100               	movlb	0	; () banked
  9625  011890  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9626  011892  0100               	movlb	0	; () banked
  9627  011894  3591               	rlcf	(light_task@temp+3)& (0+255),w,b
  9628  011896  0100               	movlb	0	; () banked
  9629  011898  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9630  01189A  0EFA               	movlw	250
  9631  01189C  0100               	movlb	0	; () banked
  9632  01189E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9633  0118A0  0E00               	movlw	0
  9634  0118A2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9635  0118A4  0E00               	movlw	0
  9636  0118A6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9637  0118A8  0E00               	movlw	0
  9638  0118AA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9639  0118AC  EC25  F09F         	call	___lmul	;wreg free
  9640  0118B0  C06D  F060         	movff	?___lmul,___lldiv@dividend
  9641  0118B4  C06E  F061         	movff	?___lmul+1,___lldiv@dividend+1
  9642  0118B8  C06F  F062         	movff	?___lmul+2,___lldiv@dividend+2
  9643  0118BC  C070  F063         	movff	?___lmul+3,___lldiv@dividend+3
  9644  0118C0  0E80               	movlw	128
  9645  0118C2  0100               	movlb	0	; () banked
  9646  0118C4  6F64               	movwf	___lldiv@divisor& (0+255),b
  9647  0118C6  0E51               	movlw	81
  9648  0118C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9649  0118CA  0E01               	movlw	1
  9650  0118CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9651  0118CE  0E00               	movlw	0
  9652  0118D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9653  0118D2  ECA4  F099         	call	___lldiv	;wreg free
  9654  0118D6  C060  F08E         	movff	?___lldiv,light_task@temp
  9655  0118DA  C061  F08F         	movff	?___lldiv+1,light_task@temp+1
  9656  0118DE  C062  F090         	movff	?___lldiv+2,light_task@temp+2
  9657  0118E2  C063  F091         	movff	?___lldiv+3,light_task@temp+3
  9658                           
  9659                           ;PIC18F27J53-killifish_light06.c: 238: PWM_set(3, temp);
  9660  0118E6  C08E  F075         	movff	light_task@temp,PWM_set@value
  9661  0118EA  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9662  0118EE  0E03               	movlw	3
  9663  0118F0  ECE0  F08D         	call	_PWM_set
  9664                           
  9665                           ;PIC18F27J53-killifish_light06.c: 239: for (i = 0; i < 3; i++) {
  9666  0118F4  0E00               	movlw	0
  9667  0118F6  0100               	movlb	0	; () banked
  9668  0118F8  6F92               	movwf	light_task@i& (0+255),b
  9669  0118FA                     l10402:
  9670                           
  9671                           ; BSR set to: 0
  9672  0118FA  0E02               	movlw	2
  9673  0118FC  0100               	movlb	0	; () banked
  9674  0118FE  6592               	cpfsgt	light_task@i& (0+255),b
  9675  011900  D001               	goto	l10406
  9676  011902  D00B               	goto	l1632
  9677  011904                     l10406:
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;PIC18F27J53-killifish_light06.c: 240: PWM_set(i, temp);
  9681  011904  C08E  F075         	movff	light_task@temp,PWM_set@value
  9682  011908  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9683  01190C  0100               	movlb	0	; () banked
  9684  01190E  5192               	movf	light_task@i& (0+255),w,b
  9685  011910  ECE0  F08D         	call	_PWM_set
  9686  011914  0100               	movlb	0	; () banked
  9687  011916  2B92               	incf	light_task@i& (0+255),f,b
  9688  011918  D7F0               	goto	l10402
  9689  01191A                     l1632:
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;PIC18F27J53-killifish_light06.c: 241: }
  9693                           ;PIC18F27J53-killifish_light06.c: 242: }
  9694                           ;PIC18F27J53-killifish_light06.c: 243: }
  9695                           ;PIC18F27J53-killifish_light06.c: 244: if (sw_G.flag.press) {
  9696  01191A  0101               	movlb	1	; () banked
  9697  01191C  A183               	btfss	(_sw_G+2)& (0+255),0,b
  9698  01191E  D02A               	goto	l1637
  9699                           
  9700                           ; BSR set to: 1
  9701                           ;PIC18F27J53-killifish_light06.c: 245: sw_G.flags = 0;
  9702  011920  0E00               	movlw	0
  9703  011922  0101               	movlb	1	; () banked
  9704  011924  6F84               	movwf	(_sw_G+3)& (0+255),b
  9705  011926  0E00               	movlw	0
  9706  011928  6F83               	movwf	(_sw_G+2)& (0+255),b
  9707                           
  9708                           ;PIC18F27J53-killifish_light06.c: 246: light_mode = COMMAND_mode;
  9709  01192A  0E02               	movlw	2
  9710  01192C  0100               	movlb	0	; () banked
  9711  01192E  6FEE               	movwf	_light_mode& (0+255),b
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;PIC18F27J53-killifish_light06.c: 247: static uint8_t n = 0;
  9715                           ;PIC18F27J53-killifish_light06.c: 248: if (n >= 3) n = 0;
  9716  011930  0E02               	movlw	2
  9717  011932  0100               	movlb	0	; () banked
  9718  011934  65FE               	cpfsgt	light_task@n& (0+255),b
  9719  011936  D004               	goto	l10418
  9720                           
  9721                           ; BSR set to: 0
  9722  011938  0E00               	movlw	0
  9723  01193A  0100               	movlb	0	; () banked
  9724  01193C  6FFE               	movwf	light_task@n& (0+255),b
  9725  01193E  D002               	goto	l10420
  9726  011940                     l10418:
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;PIC18F27J53-killifish_light06.c: 249: else n++;
  9730  011940  0100               	movlb	0	; () banked
  9731  011942  2BFE               	incf	light_task@n& (0+255),f,b
  9732  011944                     l10420:
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;PIC18F27J53-killifish_light06.c: 250: uint8_t value = 250 / 3 * n;
  9736  011944  0100               	movlb	0	; () banked
  9737  011946  51FE               	movf	light_task@n& (0+255),w,b
  9738  011948  0D53               	mullw	83
  9739  01194A  CFF3 F08C          	movff	prodl,light_task@value
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;PIC18F27J53-killifish_light06.c: 251: for (i = 0; i < 3; i++) {
  9743  01194E  0E00               	movlw	0
  9744  011950  0100               	movlb	0	; () banked
  9745  011952  6F92               	movwf	light_task@i& (0+255),b
  9746  011954                     l10424:
  9747                           
  9748                           ; BSR set to: 0
  9749  011954  0E02               	movlw	2
  9750  011956  0100               	movlb	0	; () banked
  9751  011958  6592               	cpfsgt	light_task@i& (0+255),b
  9752  01195A  D001               	goto	l10428
  9753  01195C  D00B               	goto	l1637
  9754  01195E                     l10428:
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;PIC18F27J53-killifish_light06.c: 252: PWM_set(i, value);
  9758  01195E  C08C  F075         	movff	light_task@value,PWM_set@value
  9759  011962  0100               	movlb	0	; () banked
  9760  011964  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9761  011966  0100               	movlb	0	; () banked
  9762  011968  5192               	movf	light_task@i& (0+255),w,b
  9763  01196A  ECE0  F08D         	call	_PWM_set
  9764  01196E  0100               	movlb	0	; () banked
  9765  011970  2B92               	incf	light_task@i& (0+255),f,b
  9766  011972  D7F0               	goto	l10424
  9767  011974                     l1637:
  9768                           
  9769                           ;PIC18F27J53-killifish_light06.c: 253: }
  9770                           ;PIC18F27J53-killifish_light06.c: 254: }
  9771                           ;PIC18F27J53-killifish_light06.c: 255: if (sw_B.flag.press) {
  9772  011974  0101               	movlb	1	; () banked
  9773  011976  A17F               	btfss	(_sw_B+2)& (0+255),0,b
  9774  011978  D01E               	goto	l10446
  9775                           
  9776                           ; BSR set to: 1
  9777                           ;PIC18F27J53-killifish_light06.c: 256: sw_B.flags = 0;
  9778  01197A  0E00               	movlw	0
  9779  01197C  0101               	movlb	1	; () banked
  9780  01197E  6F80               	movwf	(_sw_B+3)& (0+255),b
  9781  011980  0E00               	movlw	0
  9782  011982  6F7F               	movwf	(_sw_B+2)& (0+255),b
  9783                           
  9784                           ;PIC18F27J53-killifish_light06.c: 257: light_mode = COMMAND_mode;
  9785  011984  0E02               	movlw	2
  9786  011986  0100               	movlb	0	; () banked
  9787  011988  6FEE               	movwf	_light_mode& (0+255),b
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;PIC18F27J53-killifish_light06.c: 258: static uint8_t n = 0;
  9791                           ;PIC18F27J53-killifish_light06.c: 259: if (n >= 3) n = 0;
  9792  01198A  0E02               	movlw	2
  9793  01198C  0100               	movlb	0	; () banked
  9794  01198E  65FD               	cpfsgt	light_task@_6072& (0+255),b
  9795  011990  D004               	goto	l10440
  9796                           
  9797                           ; BSR set to: 0
  9798  011992  0E00               	movlw	0
  9799  011994  0100               	movlb	0	; () banked
  9800  011996  6FFD               	movwf	light_task@_6072& (0+255),b
  9801  011998  D002               	goto	l10442
  9802  01199A                     l10440:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;PIC18F27J53-killifish_light06.c: 260: else n++;
  9806  01199A  0100               	movlb	0	; () banked
  9807  01199C  2BFD               	incf	light_task@_6072& (0+255),f,b
  9808  01199E                     l10442:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;PIC18F27J53-killifish_light06.c: 261: uint8_t value = 250 / 3 * n;
  9812  01199E  0100               	movlb	0	; () banked
  9813  0119A0  51FD               	movf	light_task@_6072& (0+255),w,b
  9814  0119A2  0D53               	mullw	83
  9815  0119A4  CFF3 F08D          	movff	prodl,light_task@value_6073
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;PIC18F27J53-killifish_light06.c: 262: PWM_set(3, value);
  9819  0119A8  C08D  F075         	movff	light_task@value_6073,PWM_set@value
  9820  0119AC  0100               	movlb	0	; () banked
  9821  0119AE  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9822  0119B0  0E03               	movlw	3
  9823  0119B2  ECE0  F08D         	call	_PWM_set
  9824  0119B6                     l10446:
  9825                           
  9826                           ;PIC18F27J53-killifish_light06.c: 263: }
  9827                           ;PIC18F27J53-killifish_light06.c: 264: if (sw_R.flag.press) {
  9828  0119B6  0101               	movlb	1	; () banked
  9829  0119B8  A187               	btfss	(_sw_R+2)& (0+255),0,b
  9830  0119BA  0012               	return	
  9831                           
  9832                           ; BSR set to: 1
  9833                           ;PIC18F27J53-killifish_light06.c: 265: sw_R.flags = 0;
  9834  0119BC  0E00               	movlw	0
  9835  0119BE  0101               	movlb	1	; () banked
  9836  0119C0  6F88               	movwf	(_sw_R+3)& (0+255),b
  9837  0119C2  0E00               	movlw	0
  9838  0119C4  6F87               	movwf	(_sw_R+2)& (0+255),b
  9839                           
  9840                           ;PIC18F27J53-killifish_light06.c: 266: light_mode = TIME_SYNC_mode;
  9841  0119C6  0E00               	movlw	0
  9842  0119C8  0100               	movlb	0	; () banked
  9843  0119CA  6FEE               	movwf	_light_mode& (0+255),b
  9844  0119CC  0012               	return	
  9845  0119CE                     __end_of_light_task:
  9846                           	opt stack 0
  9847                           tblptru	equ	0xFF8
  9848                           tblptrh	equ	0xFF7
  9849                           tblptrl	equ	0xFF6
  9850                           tablat	equ	0xFF5
  9851                           prodh	equ	0xFF4
  9852                           prodl	equ	0xFF3
  9853                           intcon	equ	0xFF2
  9854                           intcon2	equ	0xFF1
  9855                           indf0	equ	0xFEF
  9856                           postinc0	equ	0xFEE
  9857                           fsr0h	equ	0xFEA
  9858                           fsr0l	equ	0xFE9
  9859                           wreg	equ	0xFE8
  9860                           postinc1	equ	0xFE6
  9861                           postdec1	equ	0xFE5
  9862                           fsr1h	equ	0xFE2
  9863                           fsr1l	equ	0xFE1
  9864                           indf2	equ	0xFDF
  9865                           postinc2	equ	0xFDE
  9866                           postdec2	equ	0xFDD
  9867                           fsr2h	equ	0xFDA
  9868                           fsr2l	equ	0xFD9
  9869                           status	equ	0xFD8
  9870                           
  9871 ;; *************** function ___llmod *****************
  9872 ;; Defined at:
  9873 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  dividend        4    0[BANK0 ] unsigned long 
  9876 ;;  divisor         4    4[BANK0 ] unsigned long 
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  counter         1    8[BANK0 ] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  4    0[BANK0 ] unsigned long 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9888 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9891 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9892 ;;Total ram usage:        9 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:   11
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		_light_task
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text36
  9903  013830                     __ptext36:
  9904                           	opt stack 0
  9905  013830                     ___llmod:
  9906                           	opt stack 18
  9907                           
  9908                           ;incstack = 0
  9909  013830  0100               	movlb	0	; () banked
  9910  013832  5164               	movf	___llmod@divisor& (0+255),w,b
  9911  013834  0100               	movlb	0	; () banked
  9912  013836  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9913  013838  0100               	movlb	0	; () banked
  9914  01383A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9915  01383C  0100               	movlb	0	; () banked
  9916  01383E  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9917  013840  B4D8               	btfsc	status,2,c
  9918  013842  D03A               	goto	l2107
  9919                           
  9920                           ; BSR set to: 0
  9921  013844  0E01               	movlw	1
  9922  013846  0100               	movlb	0	; () banked
  9923  013848  6F68               	movwf	___llmod@counter& (0+255),b
  9924  01384A  D008               	goto	l10178
  9925  01384C                     l10176:
  9926                           
  9927                           ; BSR set to: 0
  9928  01384C  0100               	movlb	0	; () banked
  9929  01384E  90D8               	bcf	status,0,c
  9930  013850  3764               	rlcf	___llmod@divisor& (0+255),f,b
  9931  013852  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9932  013854  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9933  013856  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9934  013858  0100               	movlb	0	; () banked
  9935  01385A  2B68               	incf	___llmod@counter& (0+255),f,b
  9936  01385C                     l10178:
  9937                           
  9938                           ; BSR set to: 0
  9939  01385C  0100               	movlb	0	; () banked
  9940  01385E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9941  013860  D7F5               	goto	l10176
  9942  013862                     l10180:
  9943                           
  9944                           ; BSR set to: 0
  9945  013862  0100               	movlb	0	; () banked
  9946  013864  5164               	movf	___llmod@divisor& (0+255),w,b
  9947  013866  0100               	movlb	0	; () banked
  9948  013868  5D60               	subwf	___llmod@dividend& (0+255),w,b
  9949  01386A  0100               	movlb	0	; () banked
  9950  01386C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9951  01386E  0100               	movlb	0	; () banked
  9952  013870  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9953  013872  0100               	movlb	0	; () banked
  9954  013874  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9955  013876  0100               	movlb	0	; () banked
  9956  013878  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9957  01387A  0100               	movlb	0	; () banked
  9958  01387C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9959  01387E  0100               	movlb	0	; () banked
  9960  013880  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9961  013882  A0D8               	btfss	status,0,c
  9962  013884  D010               	goto	l10184
  9963                           
  9964                           ; BSR set to: 0
  9965  013886  0100               	movlb	0	; () banked
  9966  013888  5164               	movf	___llmod@divisor& (0+255),w,b
  9967  01388A  0100               	movlb	0	; () banked
  9968  01388C  5F60               	subwf	___llmod@dividend& (0+255),f,b
  9969  01388E  0100               	movlb	0	; () banked
  9970  013890  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9971  013892  0100               	movlb	0	; () banked
  9972  013894  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9973  013896  0100               	movlb	0	; () banked
  9974  013898  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9975  01389A  0100               	movlb	0	; () banked
  9976  01389C  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9977  01389E  0100               	movlb	0	; () banked
  9978  0138A0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9979  0138A2  0100               	movlb	0	; () banked
  9980  0138A4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9981  0138A6                     l10184:
  9982                           
  9983                           ; BSR set to: 0
  9984  0138A6  0100               	movlb	0	; () banked
  9985  0138A8  90D8               	bcf	status,0,c
  9986  0138AA  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9987  0138AC  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9988  0138AE  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9989  0138B0  3364               	rrcf	___llmod@divisor& (0+255),f,b
  9990                           
  9991                           ; BSR set to: 0
  9992  0138B2  0100               	movlb	0	; () banked
  9993  0138B4  2F68               	decfsz	___llmod@counter& (0+255),f,b
  9994  0138B6  D7D5               	goto	l10180
  9995  0138B8                     l2107:
  9996                           
  9997                           ; BSR set to: 0
  9998  0138B8  C060  F060         	movff	___llmod@dividend,?___llmod
  9999  0138BC  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 10000  0138C0  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 10001  0138C4  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 10002                           
 10003                           ; BSR set to: 0
 10004  0138C8  0012               	return		;funcret
 10005  0138CA                     __end_of___llmod:
 10006                           	opt stack 0
 10007                           tblptru	equ	0xFF8
 10008                           tblptrh	equ	0xFF7
 10009                           tblptrl	equ	0xFF6
 10010                           tablat	equ	0xFF5
 10011                           prodh	equ	0xFF4
 10012                           prodl	equ	0xFF3
 10013                           intcon	equ	0xFF2
 10014                           intcon2	equ	0xFF1
 10015                           indf0	equ	0xFEF
 10016                           postinc0	equ	0xFEE
 10017                           fsr0h	equ	0xFEA
 10018                           fsr0l	equ	0xFE9
 10019                           wreg	equ	0xFE8
 10020                           postinc1	equ	0xFE6
 10021                           postdec1	equ	0xFE5
 10022                           fsr1h	equ	0xFE2
 10023                           fsr1l	equ	0xFE1
 10024                           indf2	equ	0xFDF
 10025                           postinc2	equ	0xFDE
 10026                           postdec2	equ	0xFDD
 10027                           fsr2h	equ	0xFDA
 10028                           fsr2l	equ	0xFD9
 10029                           status	equ	0xFD8
 10030                           
 10031 ;; *************** function ___lldiv *****************
 10032 ;; Defined at:
 10033 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  dividend        4    0[BANK0 ] unsigned long 
 10036 ;;  divisor         4    4[BANK0 ] unsigned long 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  quotient        4    8[BANK0 ] unsigned long 
 10039 ;;  counter         1   12[BANK0 ] unsigned char 
 10040 ;; Return value:  Size  Location     Type
 10041 ;;                  4    0[BANK0 ] unsigned long 
 10042 ;; Registers used:
 10043 ;;		wreg, status,2, status,0
 10044 ;; Tracked objects:
 10045 ;;		On entry : 0/0
 10046 ;;		On exit  : 0/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10049 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10050 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10052 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;Total ram usage:       13 bytes
 10054 ;; Hardware stack levels used:    1
 10055 ;; Hardware stack levels required when called:   11
 10056 ;; This function calls:
 10057 ;;		Nothing
 10058 ;; This function is called by:
 10059 ;;		_get_quot_rem
 10060 ;;		_light_task
 10061 ;;		_CTMU_read
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text37
 10066  013348                     __ptext37:
 10067                           	opt stack 0
 10068  013348                     ___lldiv:
 10069                           	opt stack 12
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;incstack = 0
 10073  013348  0E00               	movlw	0
 10074  01334A  0100               	movlb	0	; () banked
 10075  01334C  6F68               	movwf	___lldiv@quotient& (0+255),b
 10076  01334E  0E00               	movlw	0
 10077  013350  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 10078  013352  0E00               	movlw	0
 10079  013354  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 10080  013356  0E00               	movlw	0
 10081  013358  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 10082                           
 10083                           ; BSR set to: 0
 10084  01335A  0100               	movlb	0	; () banked
 10085  01335C  5164               	movf	___lldiv@divisor& (0+255),w,b
 10086  01335E  0100               	movlb	0	; () banked
 10087  013360  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10088  013362  0100               	movlb	0	; () banked
 10089  013364  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10090  013366  0100               	movlb	0	; () banked
 10091  013368  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10092  01336A  B4D8               	btfsc	status,2,c
 10093  01336C  D042               	goto	l2097
 10094                           
 10095                           ; BSR set to: 0
 10096  01336E  0E01               	movlw	1
 10097  013370  0100               	movlb	0	; () banked
 10098  013372  6F6C               	movwf	___lldiv@counter& (0+255),b
 10099  013374  D008               	goto	l9076
 10100  013376                     l9074:
 10101                           
 10102                           ; BSR set to: 0
 10103  013376  0100               	movlb	0	; () banked
 10104  013378  90D8               	bcf	status,0,c
 10105  01337A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 10106  01337C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10107  01337E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10108  013380  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10109  013382  0100               	movlb	0	; () banked
 10110  013384  2B6C               	incf	___lldiv@counter& (0+255),f,b
 10111  013386                     l9076:
 10112                           
 10113                           ; BSR set to: 0
 10114  013386  0100               	movlb	0	; () banked
 10115  013388  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10116  01338A  D7F5               	goto	l9074
 10117  01338C                     l9078:
 10118                           
 10119                           ; BSR set to: 0
 10120  01338C  0100               	movlb	0	; () banked
 10121  01338E  90D8               	bcf	status,0,c
 10122  013390  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 10123  013392  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10124  013394  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10125  013396  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10126                           
 10127                           ; BSR set to: 0
 10128  013398  0100               	movlb	0	; () banked
 10129  01339A  5164               	movf	___lldiv@divisor& (0+255),w,b
 10130  01339C  0100               	movlb	0	; () banked
 10131  01339E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 10132  0133A0  0100               	movlb	0	; () banked
 10133  0133A2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10134  0133A4  0100               	movlb	0	; () banked
 10135  0133A6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10136  0133A8  0100               	movlb	0	; () banked
 10137  0133AA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10138  0133AC  0100               	movlb	0	; () banked
 10139  0133AE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10140  0133B0  0100               	movlb	0	; () banked
 10141  0133B2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10142  0133B4  0100               	movlb	0	; () banked
 10143  0133B6  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10144  0133B8  A0D8               	btfss	status,0,c
 10145  0133BA  D012               	goto	l9086
 10146                           
 10147                           ; BSR set to: 0
 10148  0133BC  0100               	movlb	0	; () banked
 10149  0133BE  5164               	movf	___lldiv@divisor& (0+255),w,b
 10150  0133C0  0100               	movlb	0	; () banked
 10151  0133C2  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 10152  0133C4  0100               	movlb	0	; () banked
 10153  0133C6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10154  0133C8  0100               	movlb	0	; () banked
 10155  0133CA  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10156  0133CC  0100               	movlb	0	; () banked
 10157  0133CE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10158  0133D0  0100               	movlb	0	; () banked
 10159  0133D2  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10160  0133D4  0100               	movlb	0	; () banked
 10161  0133D6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10162  0133D8  0100               	movlb	0	; () banked
 10163  0133DA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10164                           
 10165                           ; BSR set to: 0
 10166  0133DC  0100               	movlb	0	; () banked
 10167  0133DE  8168               	bsf	___lldiv@quotient& (0+255),0,b
 10168  0133E0                     l9086:
 10169                           
 10170                           ; BSR set to: 0
 10171  0133E0  0100               	movlb	0	; () banked
 10172  0133E2  90D8               	bcf	status,0,c
 10173  0133E4  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10174  0133E6  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10175  0133E8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10176  0133EA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 10177                           
 10178                           ; BSR set to: 0
 10179  0133EC  0100               	movlb	0	; () banked
 10180  0133EE  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 10181  0133F0  D7CD               	goto	l9078
 10182  0133F2                     l2097:
 10183                           
 10184                           ; BSR set to: 0
 10185  0133F2  C068  F060         	movff	___lldiv@quotient,?___lldiv
 10186  0133F6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 10187  0133FA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 10188  0133FE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 10189                           
 10190                           ; BSR set to: 0
 10191  013402  0012               	return		;funcret
 10192  013404                     __end_of___lldiv:
 10193                           	opt stack 0
 10194                           tblptru	equ	0xFF8
 10195                           tblptrh	equ	0xFF7
 10196                           tblptrl	equ	0xFF6
 10197                           tablat	equ	0xFF5
 10198                           prodh	equ	0xFF4
 10199                           prodl	equ	0xFF3
 10200                           intcon	equ	0xFF2
 10201                           intcon2	equ	0xFF1
 10202                           indf0	equ	0xFEF
 10203                           postinc0	equ	0xFEE
 10204                           fsr0h	equ	0xFEA
 10205                           fsr0l	equ	0xFE9
 10206                           wreg	equ	0xFE8
 10207                           postinc1	equ	0xFE6
 10208                           postdec1	equ	0xFE5
 10209                           fsr1h	equ	0xFE2
 10210                           fsr1l	equ	0xFE1
 10211                           indf2	equ	0xFDF
 10212                           postinc2	equ	0xFDE
 10213                           postdec2	equ	0xFDD
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8
 10217                           
 10218 ;; *************** function _PWM_set *****************
 10219 ;; Defined at:
 10220 ;;		line 121 in file "PIC18F27J53-killifish_light06.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  color           1    wreg     unsigned char 
 10223 ;;  value           2   21[BANK0 ] unsigned int 
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  color           1   25[BANK0 ] unsigned char 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;		None               void
 10228 ;; Registers used:
 10229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10238 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;Total ram usage:        5 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:   12
 10242 ;; This function calls:
 10243 ;;		___lwdiv
 10244 ;;		___wmul
 10245 ;; This function is called by:
 10246 ;;		_terminal_operation
 10247 ;;		_light_task
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text38
 10252  011BC0                     __ptext38:
 10253                           	opt stack 0
 10254  011BC0                     _PWM_set:
 10255                           	opt stack 16
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;incstack = 0
 10259                           ;PWM_set@color stored from wreg
 10260  011BC0  0100               	movlb	0	; () banked
 10261  011BC2  6F79               	movwf	PWM_set@color& (0+255),b
 10262                           
 10263                           ;PIC18F27J53-killifish_light06.c: 122: value = value * value / 250;
 10264  011BC4  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10265  011BC8  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10266  011BCC  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10267  011BD0  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10268  011BD4  ECEB  F0A1         	call	___wmul	;wreg free
 10269  011BD8  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10270  011BDC  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10271  011BE0  0E00               	movlw	0
 10272  011BE2  0100               	movlb	0	; () banked
 10273  011BE4  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10274  011BE6  0EFA               	movlw	250
 10275  011BE8  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10276  011BEA  ECE9  F09E         	call	___lwdiv	;wreg free
 10277  011BEE  C066  F075         	movff	?___lwdiv,PWM_set@value
 10278  011BF2  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10279                           
 10280                           ;PIC18F27J53-killifish_light06.c: 123: value = value * value / 250;
 10281  011BF6  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10282  011BFA  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10283  011BFE  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10284  011C02  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10285  011C06  ECEB  F0A1         	call	___wmul	;wreg free
 10286  011C0A  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10287  011C0E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10288  011C12  0E00               	movlw	0
 10289  011C14  0100               	movlb	0	; () banked
 10290  011C16  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10291  011C18  0EFA               	movlw	250
 10292  011C1A  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10293  011C1C  ECE9  F09E         	call	___lwdiv	;wreg free
 10294  011C20  C066  F075         	movff	?___lwdiv,PWM_set@value
 10295  011C24  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10296                           
 10297                           ;PIC18F27J53-killifish_light06.c: 124: value = value * 3 / 4;
 10298  011C28  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10299  011C2C  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10300  011C30  0E00               	movlw	0
 10301  011C32  0100               	movlb	0	; () banked
 10302  011C34  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10303  011C36  0E03               	movlw	3
 10304  011C38  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10305  011C3A  ECEB  F0A1         	call	___wmul	;wreg free
 10306  011C3E  0100               	movlb	0	; () banked
 10307  011C40  90D8               	bcf	status,0,c
 10308  011C42  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10309  011C44  3360               	rrcf	?___wmul& (0+255),f,b
 10310  011C46  0100               	movlb	0	; () banked
 10311  011C48  90D8               	bcf	status,0,c
 10312  011C4A  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10313  011C4C  3360               	rrcf	?___wmul& (0+255),f,b
 10314  011C4E  C060  F075         	movff	?___wmul,PWM_set@value
 10315  011C52  C061  F076         	movff	?___wmul+1,PWM_set@value+1
 10316                           
 10317                           ;PIC18F27J53-killifish_light06.c: 125: switch (color) {
 10318  011C56  D056               	goto	l9822
 10319  011C58                     l9804:
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;PIC18F27J53-killifish_light06.c: 127: if (value < 250 / 4) {
 10323  011C58  0100               	movlb	0	; () banked
 10324  011C5A  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10325  011C5C  E105               	bnz	l9808
 10326  011C5E  0E3E               	movlw	62
 10327  011C60  0100               	movlb	0	; () banked
 10328  011C62  5D75               	subwf	PWM_set@value& (0+255),w,b
 10329  011C64  A0D8               	btfss	status,0,c
 10330  011C66  D071               	goto	l9842
 10331  011C68                     l9808:
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;PIC18F27J53-killifish_light06.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
 10335  011C68  C075  F077         	movff	PWM_set@value,??_PWM_set
 10336  011C6C  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
 10337  011C70  90D8               	bcf	status,0,c
 10338  011C72  0100               	movlb	0	; () banked
 10339  011C74  3777               	rlcf	??_PWM_set& (0+255),f,b
 10340  011C76  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
 10341  011C78  0E84               	movlw	132
 10342  011C7A  0100               	movlb	0	; () banked
 10343  011C7C  2577               	addwf	??_PWM_set& (0+255),w,b
 10344  011C7E  0100               	movlb	0	; () banked
 10345  011C80  6F66               	movwf	___lwdiv@dividend& (0+255),b
 10346  011C82  0EFF               	movlw	255
 10347  011C84  0100               	movlb	0	; () banked
 10348  011C86  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
 10349  011C88  0100               	movlb	0	; () banked
 10350  011C8A  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
 10351  011C8C  0E00               	movlw	0
 10352  011C8E  0100               	movlb	0	; () banked
 10353  011C90  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10354  011C92  0E03               	movlw	3
 10355  011C94  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10356  011C96  ECE9  F09E         	call	___lwdiv	;wreg free
 10357  011C9A  0E3E               	movlw	62
 10358  011C9C  0100               	movlb	0	; () banked
 10359  011C9E  2566               	addwf	?___lwdiv& (0+255),w,b
 10360  011CA0  0100               	movlb	0	; () banked
 10361  011CA2  6F75               	movwf	PWM_set@value& (0+255),b
 10362  011CA4  0E00               	movlw	0
 10363  011CA6  0100               	movlb	0	; () banked
 10364  011CA8  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
 10365  011CAA  D029               	goto	L1
 10366  011CAC                     l9814:
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;PIC18F27J53-killifish_light06.c: 141: if (value < 250 / 4) {
 10370  011CAC  0100               	movlb	0	; () banked
 10371  011CAE  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10372  011CB0  E105               	bnz	l9818
 10373  011CB2  0E3E               	movlw	62
 10374  011CB4  0100               	movlb	0	; () banked
 10375  011CB6  5D75               	subwf	PWM_set@value& (0+255),w,b
 10376  011CB8  A0D8               	btfss	status,0,c
 10377  011CBA  D047               	goto	l9842
 10378  011CBC                     l9818:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;PIC18F27J53-killifish_light06.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
 10382  011CBC  0EC2               	movlw	194
 10383  011CBE  0100               	movlb	0	; () banked
 10384  011CC0  2575               	addwf	PWM_set@value& (0+255),w,b
 10385  011CC2  0100               	movlb	0	; () banked
 10386  011CC4  6F60               	movwf	___wmul@multiplier& (0+255),b
 10387  011CC6  0EFF               	movlw	255
 10388  011CC8  0100               	movlb	0	; () banked
 10389  011CCA  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
 10390  011CCC  0100               	movlb	0	; () banked
 10391  011CCE  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
 10392  011CD0  0E00               	movlw	0
 10393  011CD2  0100               	movlb	0	; () banked
 10394  011CD4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10395  011CD6  0E03               	movlw	3
 10396  011CD8  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10397  011CDA  ECEB  F0A1         	call	___wmul	;wreg free
 10398  011CDE  0100               	movlb	0	; () banked
 10399  011CE0  90D8               	bcf	status,0,c
 10400  011CE2  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10401  011CE4  3360               	rrcf	?___wmul& (0+255),f,b
 10402  011CE6  0100               	movlb	0	; () banked
 10403  011CE8  90D8               	bcf	status,0,c
 10404  011CEA  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10405  011CEC  3360               	rrcf	?___wmul& (0+255),f,b
 10406  011CEE  0E3E               	movlw	62
 10407  011CF0  0100               	movlb	0	; () banked
 10408  011CF2  2560               	addwf	?___wmul& (0+255),w,b
 10409  011CF4  0100               	movlb	0	; () banked
 10410  011CF6  6F75               	movwf	PWM_set@value& (0+255),b
 10411  011CF8  0E00               	movlw	0
 10412  011CFA  0100               	movlb	0	; () banked
 10413  011CFC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 10414  011CFE                     L1:
 10415  011CFE  0100               	movlb	0	; () banked
 10416  011D00  6F76               	movwf	(PWM_set@value+1)& (0+255),b
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;PIC18F27J53-killifish_light06.c: 149: }
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;PIC18F27J53-killifish_light06.c: 148: break;
 10423                           
 10424                           ;PIC18F27J53-killifish_light06.c: 147: case 3:
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;PIC18F27J53-killifish_light06.c: 145: }
 10428                           ;PIC18F27J53-killifish_light06.c: 146: break;
 10429  011D02  D023               	goto	l9842
 10430  011D04                     l9822:
 10431                           
 10432                           ; BSR set to: 0
 10433  011D04  0100               	movlb	0	; () banked
 10434  011D06  5179               	movf	PWM_set@color& (0+255),w,b
 10435                           
 10436                           ; Switch size 1, requested type "space"
 10437                           ; Number of cases is 4, Range of values is 0 to 3
 10438                           ; switch strategies available:
 10439                           ; Name         Instructions Cycles
 10440                           ; simple_byte           13     7 (average)
 10441                           ;	Chosen strategy is simple_byte
 10442  011D08  0A00               	xorlw	0	; case 0
 10443  011D0A  B4D8               	btfsc	status,2,c
 10444  011D0C  D7A5               	goto	l9804
 10445  011D0E  0A01               	xorlw	1	; case 1
 10446  011D10  B4D8               	btfsc	status,2,c
 10447  011D12  D01B               	goto	l9842
 10448  011D14  0A03               	xorlw	3	; case 2
 10449  011D16  B4D8               	btfsc	status,2,c
 10450  011D18  D7C9               	goto	l9814
 10451  011D1A  0A01               	xorlw	1	; case 3
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;PIC18F27J53-killifish_light06.c: 150: switch (color) {
 10455  011D1C  D016               	goto	l9842
 10456  011D1E                     l9824:
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;PIC18F27J53-killifish_light06.c: 152: CCP1CONbits.DC1B = 0;
 10460  011D1E  0ECF               	movlw	-49
 10461  011D20  16BA               	andwf	4026,f,c	;volatile
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;PIC18F27J53-killifish_light06.c: 153: CCPR1L = value;
 10465  011D22  C075  FFBB         	movff	PWM_set@value,4027	;volatile
 10466                           
 10467                           ;PIC18F27J53-killifish_light06.c: 154: break;
 10468  011D26  0012               	return	
 10469  011D28                     l9828:
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;PIC18F27J53-killifish_light06.c: 156: CCP2CONbits.DC2B = 0;
 10473  011D28  0ECF               	movlw	-49
 10474  011D2A  16B4               	andwf	4020,f,c	;volatile
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;PIC18F27J53-killifish_light06.c: 157: CCPR2L = value;
 10478  011D2C  C075  FFB5         	movff	PWM_set@value,4021	;volatile
 10479                           
 10480                           ;PIC18F27J53-killifish_light06.c: 158: break;
 10481  011D30  0012               	return	
 10482  011D32                     l9832:
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;PIC18F27J53-killifish_light06.c: 160: CCP3CONbits.DC3B = 0;
 10486  011D32  0ECF               	movlw	-49
 10487  011D34  010F               	movlb	15	; () banked
 10488  011D36  1715               	andwf	21,f,b	;volatile
 10489                           
 10490                           ; BSR set to: 15
 10491                           ;PIC18F27J53-killifish_light06.c: 161: CCPR3L = value;
 10492  011D38  C075  FF16         	movff	PWM_set@value,3862	;volatile
 10493                           
 10494                           ;PIC18F27J53-killifish_light06.c: 162: break;
 10495  011D3C  0012               	return	
 10496  011D3E                     l9836:
 10497                           
 10498                           ;PIC18F27J53-killifish_light06.c: 164: CCP4CONbits.DC4B = 0;
 10499  011D3E  0ECF               	movlw	-49
 10500  011D40  010F               	movlb	15	; () banked
 10501  011D42  1712               	andwf	18,f,b	;volatile
 10502                           
 10503                           ; BSR set to: 15
 10504                           ;PIC18F27J53-killifish_light06.c: 165: CCPR4L = value;
 10505  011D44  C075  FF13         	movff	PWM_set@value,3859	;volatile
 10506                           
 10507                           ; BSR set to: 15
 10508                           ;PIC18F27J53-killifish_light06.c: 167: }
 10509                           
 10510                           ;PIC18F27J53-killifish_light06.c: 166: break;
 10511  011D48  0012               	return	
 10512  011D4A                     l9842:
 10513  011D4A  0100               	movlb	0	; () banked
 10514  011D4C  5179               	movf	PWM_set@color& (0+255),w,b
 10515                           
 10516                           ; Switch size 1, requested type "space"
 10517                           ; Number of cases is 4, Range of values is 0 to 3
 10518                           ; switch strategies available:
 10519                           ; Name         Instructions Cycles
 10520                           ; simple_byte           13     7 (average)
 10521                           ;	Chosen strategy is simple_byte
 10522  011D4E  0A00               	xorlw	0	; case 0
 10523  011D50  B4D8               	btfsc	status,2,c
 10524  011D52  D7E5               	goto	l9824
 10525  011D54  0A01               	xorlw	1	; case 1
 10526  011D56  B4D8               	btfsc	status,2,c
 10527  011D58  D7E7               	goto	l9828
 10528  011D5A  0A03               	xorlw	3	; case 2
 10529  011D5C  B4D8               	btfsc	status,2,c
 10530  011D5E  D7E9               	goto	l9832
 10531  011D60  0A01               	xorlw	1	; case 3
 10532  011D62  A4D8               	btfss	status,2,c
 10533  011D64  0012               	return	
 10534  011D66  D7EB               	goto	l9836
 10535  011D68                     __end_of_PWM_set:
 10536                           	opt stack 0
 10537                           tblptru	equ	0xFF8
 10538                           tblptrh	equ	0xFF7
 10539                           tblptrl	equ	0xFF6
 10540                           tablat	equ	0xFF5
 10541                           prodh	equ	0xFF4
 10542                           prodl	equ	0xFF3
 10543                           intcon	equ	0xFF2
 10544                           intcon2	equ	0xFF1
 10545                           indf0	equ	0xFEF
 10546                           postinc0	equ	0xFEE
 10547                           fsr0h	equ	0xFEA
 10548                           fsr0l	equ	0xFE9
 10549                           wreg	equ	0xFE8
 10550                           postinc1	equ	0xFE6
 10551                           postdec1	equ	0xFE5
 10552                           fsr1h	equ	0xFE2
 10553                           fsr1l	equ	0xFE1
 10554                           indf2	equ	0xFDF
 10555                           postinc2	equ	0xFDE
 10556                           postdec2	equ	0xFDD
 10557                           fsr2h	equ	0xFDA
 10558                           fsr2l	equ	0xFD9
 10559                           status	equ	0xFD8
 10560                           
 10561 ;; *************** function ___wmul *****************
 10562 ;; Defined at:
 10563 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10566 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;  product         2    4[BANK0 ] unsigned int 
 10569 ;; Return value:  Size  Location     Type
 10570 ;;                  2    0[BANK0 ] unsigned int 
 10571 ;; Registers used:
 10572 ;;		wreg, status,2, status,0, prodl, prodh
 10573 ;; Tracked objects:
 10574 ;;		On entry : 0/0
 10575 ;;		On exit  : 0/0
 10576 ;;		Unchanged: 0/0
 10577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;Total ram usage:        6 bytes
 10583 ;; Hardware stack levels used:    1
 10584 ;; Hardware stack levels required when called:   11
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_PWM_set
 10589 ;;		_terminal_operation
 10590 ;;		_sprintf
 10591 ;;		_atoi
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text39
 10596  0143D6                     __ptext39:
 10597                           	opt stack 0
 10598  0143D6                     ___wmul:
 10599                           	opt stack 13
 10600                           
 10601                           ;incstack = 0
 10602  0143D6  0100               	movlb	0	; () banked
 10603  0143D8  5160               	movf	___wmul@multiplier& (0+255),w,b
 10604  0143DA  0100               	movlb	0	; () banked
 10605  0143DC  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10606  0143DE  CFF3 F064          	movff	prodl,___wmul@product
 10607  0143E2  CFF4 F065          	movff	prodh,___wmul@product+1
 10608  0143E6  0100               	movlb	0	; () banked
 10609  0143E8  5160               	movf	___wmul@multiplier& (0+255),w,b
 10610  0143EA  0100               	movlb	0	; () banked
 10611  0143EC  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10612  0143EE  50F3               	movf	prodl,w,c
 10613  0143F0  0100               	movlb	0	; () banked
 10614  0143F2  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10615  0143F4  0100               	movlb	0	; () banked
 10616  0143F6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10617  0143F8  0100               	movlb	0	; () banked
 10618  0143FA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10619  0143FC  50F3               	movf	prodl,w,c
 10620  0143FE  0100               	movlb	0	; () banked
 10621  014400  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10622                           
 10623                           ; BSR set to: 0
 10624  014402  C064  F060         	movff	___wmul@product,?___wmul
 10625  014406  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10626  01440A  0012               	return	
 10627  01440C                     __end_of___wmul:
 10628                           	opt stack 0
 10629                           tblptru	equ	0xFF8
 10630                           tblptrh	equ	0xFF7
 10631                           tblptrl	equ	0xFF6
 10632                           tablat	equ	0xFF5
 10633                           prodh	equ	0xFF4
 10634                           prodl	equ	0xFF3
 10635                           intcon	equ	0xFF2
 10636                           intcon2	equ	0xFF1
 10637                           indf0	equ	0xFEF
 10638                           postinc0	equ	0xFEE
 10639                           fsr0h	equ	0xFEA
 10640                           fsr0l	equ	0xFE9
 10641                           wreg	equ	0xFE8
 10642                           postinc1	equ	0xFE6
 10643                           postdec1	equ	0xFE5
 10644                           fsr1h	equ	0xFE2
 10645                           fsr1l	equ	0xFE1
 10646                           indf2	equ	0xFDF
 10647                           postinc2	equ	0xFDE
 10648                           postdec2	equ	0xFDD
 10649                           fsr2h	equ	0xFDA
 10650                           fsr2l	equ	0xFD9
 10651                           status	equ	0xFD8
 10652                           
 10653 ;; *************** function ___lwdiv *****************
 10654 ;; Defined at:
 10655 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  dividend        2    6[BANK0 ] unsigned int 
 10658 ;;  divisor         2    8[BANK0 ] unsigned int 
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;  quotient        2   11[BANK0 ] unsigned int 
 10661 ;;  counter         1   10[BANK0 ] unsigned char 
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  2    6[BANK0 ] unsigned int 
 10664 ;; Registers used:
 10665 ;;		wreg, status,2, status,0
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10672 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10674 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10675 ;;Total ram usage:        7 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:   11
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_ringbuf_put_num
 10682 ;;		_PWM_set
 10683 ;;		_sprintf
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	text40
 10688  013DD2                     __ptext40:
 10689                           	opt stack 0
 10690  013DD2                     ___lwdiv:
 10691                           	opt stack 13
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;incstack = 0
 10695  013DD2  0E00               	movlw	0
 10696  013DD4  0100               	movlb	0	; () banked
 10697  013DD6  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10698  013DD8  0E00               	movlw	0
 10699  013DDA  6F6B               	movwf	___lwdiv@quotient& (0+255),b
 10700                           
 10701                           ; BSR set to: 0
 10702  013DDC  0100               	movlb	0	; () banked
 10703  013DDE  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10704  013DE0  0100               	movlb	0	; () banked
 10705  013DE2  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10706  013DE4  B4D8               	btfsc	status,2,c
 10707  013DE6  D02C               	goto	l2150
 10708                           
 10709                           ; BSR set to: 0
 10710  013DE8  0E01               	movlw	1
 10711  013DEA  0100               	movlb	0	; () banked
 10712  013DEC  6F6A               	movwf	___lwdiv@counter& (0+255),b
 10713  013DEE  D006               	goto	l9174
 10714  013DF0                     l9172:
 10715                           
 10716                           ; BSR set to: 0
 10717  013DF0  0100               	movlb	0	; () banked
 10718  013DF2  90D8               	bcf	status,0,c
 10719  013DF4  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 10720  013DF6  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10721  013DF8  0100               	movlb	0	; () banked
 10722  013DFA  2B6A               	incf	___lwdiv@counter& (0+255),f,b
 10723  013DFC                     l9174:
 10724                           
 10725                           ; BSR set to: 0
 10726  013DFC  0100               	movlb	0	; () banked
 10727  013DFE  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10728  013E00  D7F7               	goto	l9172
 10729  013E02                     l9176:
 10730                           
 10731                           ; BSR set to: 0
 10732  013E02  0100               	movlb	0	; () banked
 10733  013E04  90D8               	bcf	status,0,c
 10734  013E06  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
 10735  013E08  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10736                           
 10737                           ; BSR set to: 0
 10738  013E0A  0100               	movlb	0	; () banked
 10739  013E0C  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10740  013E0E  0100               	movlb	0	; () banked
 10741  013E10  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 10742  013E12  0100               	movlb	0	; () banked
 10743  013E14  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10744  013E16  0100               	movlb	0	; () banked
 10745  013E18  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10746  013E1A  A0D8               	btfss	status,0,c
 10747  013E1C  D00A               	goto	l9184
 10748                           
 10749                           ; BSR set to: 0
 10750  013E1E  0100               	movlb	0	; () banked
 10751  013E20  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10752  013E22  0100               	movlb	0	; () banked
 10753  013E24  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 10754  013E26  0100               	movlb	0	; () banked
 10755  013E28  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10756  013E2A  0100               	movlb	0	; () banked
 10757  013E2C  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10758                           
 10759                           ; BSR set to: 0
 10760  013E2E  0100               	movlb	0	; () banked
 10761  013E30  816B               	bsf	___lwdiv@quotient& (0+255),0,b
 10762  013E32                     l9184:
 10763                           
 10764                           ; BSR set to: 0
 10765  013E32  0100               	movlb	0	; () banked
 10766  013E34  90D8               	bcf	status,0,c
 10767  013E36  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10768  013E38  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 10769                           
 10770                           ; BSR set to: 0
 10771  013E3A  0100               	movlb	0	; () banked
 10772  013E3C  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
 10773  013E3E  D7E1               	goto	l9176
 10774  013E40                     l2150:
 10775                           
 10776                           ; BSR set to: 0
 10777  013E40  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
 10778  013E44  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10779                           
 10780                           ; BSR set to: 0
 10781  013E48  0012               	return		;funcret
 10782  013E4A                     __end_of___lwdiv:
 10783                           	opt stack 0
 10784                           tblptru	equ	0xFF8
 10785                           tblptrh	equ	0xFF7
 10786                           tblptrl	equ	0xFF6
 10787                           tablat	equ	0xFF5
 10788                           prodh	equ	0xFF4
 10789                           prodl	equ	0xFF3
 10790                           intcon	equ	0xFF2
 10791                           intcon2	equ	0xFF1
 10792                           indf0	equ	0xFEF
 10793                           postinc0	equ	0xFEE
 10794                           fsr0h	equ	0xFEA
 10795                           fsr0l	equ	0xFE9
 10796                           wreg	equ	0xFE8
 10797                           postinc1	equ	0xFE6
 10798                           postdec1	equ	0xFE5
 10799                           fsr1h	equ	0xFE2
 10800                           fsr1l	equ	0xFE1
 10801                           indf2	equ	0xFDF
 10802                           postinc2	equ	0xFDE
 10803                           postdec2	equ	0xFDD
 10804                           fsr2h	equ	0xFDA
 10805                           fsr2l	equ	0xFD9
 10806                           status	equ	0xFD8
 10807                           
 10808 ;; *************** function _USB_task *****************
 10809 ;; Defined at:
 10810 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;		None
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  rx_len          2   20[BANK0 ] int 
 10815 ;;  data            1   22[BANK0 ] unsigned char 
 10816 ;; Return value:  Size  Location     Type
 10817 ;;		None               void
 10818 ;; Registers used:
 10819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10826 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10828 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10829 ;;Total ram usage:        3 bytes
 10830 ;; Hardware stack levels used:    1
 10831 ;; Hardware stack levels required when called:   14
 10832 ;; This function calls:
 10833 ;;		_get_string_usb
 10834 ;;		_put_string_usb
 10835 ;;		_ringbuf_num
 10836 ;;		_ringbuf_pop
 10837 ;;		_ringbuf_put
 10838 ;; This function is called by:
 10839 ;;		_main
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           	psect	text41
 10844  013BB4                     __ptext41:
 10845                           	opt stack 0
 10846  013BB4                     _USB_task:
 10847                           	opt stack 16
 10848                           
 10849                           ;My_usb_cdc.c: 67: char data;
 10850                           ;My_usb_cdc.c: 68: int rx_len;
 10851                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;incstack = 0
 10855  013BB4  0E76               	movlw	low USB_task@data
 10856  013BB6  0100               	movlb	0	; () banked
 10857  013BB8  6F6D               	movwf	get_string_usb@s& (0+255),b
 10858  013BBA  0E00               	movlw	high USB_task@data
 10859  013BBC  0100               	movlb	0	; () banked
 10860  013BBE  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10861  013BC0  0E00               	movlw	0
 10862  013BC2  0100               	movlb	0	; () banked
 10863  013BC4  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10864  013BC6  0E01               	movlw	1
 10865  013BC8  6F6F               	movwf	get_string_usb@len& (0+255),b
 10866  013BCA  EC0E  F0A1         	call	_get_string_usb	;wreg free
 10867  013BCE  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 10868  013BD2  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 10869                           
 10870                           ;My_usb_cdc.c: 70: if (rx_len) {
 10871  013BD6  0100               	movlb	0	; () banked
 10872  013BD8  5174               	movf	USB_task@rx_len& (0+255),w,b
 10873  013BDA  0100               	movlb	0	; () banked
 10874  013BDC  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 10875  013BDE  B4D8               	btfsc	status,2,c
 10876  013BE0  D00A               	goto	l1447
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 10880  013BE2  0E5E               	movlw	low _usb_rx
 10881  013BE4  0100               	movlb	0	; () banked
 10882  013BE6  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10883  013BE8  0E01               	movlw	high _usb_rx
 10884  013BEA  0100               	movlb	0	; () banked
 10885  013BEC  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10886  013BEE  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 10887  013BF2  ECE6  F096         	call	_ringbuf_put	;wreg free
 10888  013BF6                     l1447:
 10889                           
 10890                           ;My_usb_cdc.c: 72: }
 10891                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 10892  013BF6  0E66               	movlw	low _usb_tx
 10893  013BF8  0100               	movlb	0	; () banked
 10894  013BFA  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10895  013BFC  0E01               	movlw	high _usb_tx
 10896  013BFE  0100               	movlb	0	; () banked
 10897  013C00  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10898  013C02  EC6F  F093         	call	_ringbuf_num	;wreg free
 10899  013C06  0100               	movlb	0	; () banked
 10900  013C08  5160               	movf	?_ringbuf_num& (0+255),w,b
 10901  013C0A  0100               	movlb	0	; () banked
 10902  013C0C  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10903  013C0E  B4D8               	btfsc	status,2,c
 10904  013C10  0012               	return	
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 10908  013C12  0E66               	movlw	low _usb_tx
 10909  013C14  0100               	movlb	0	; () banked
 10910  013C16  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10911  013C18  0E01               	movlw	high _usb_tx
 10912  013C1A  0100               	movlb	0	; () banked
 10913  013C1C  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10914  013C1E  EC20  F098         	call	_ringbuf_pop	;wreg free
 10915  013C22  0100               	movlb	0	; () banked
 10916  013C24  6F76               	movwf	USB_task@data& (0+255),b
 10917                           
 10918                           ; BSR set to: 0
 10919                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 10920  013C26  0E76               	movlw	low USB_task@data
 10921  013C28  0100               	movlb	0	; () banked
 10922  013C2A  6F6C               	movwf	put_string_usb@s& (0+255),b
 10923  013C2C  0E00               	movlw	high USB_task@data
 10924  013C2E  0100               	movlb	0	; () banked
 10925  013C30  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10926  013C32  0E00               	movlw	0
 10927  013C34  0100               	movlb	0	; () banked
 10928  013C36  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10929  013C38  0E01               	movlw	1
 10930  013C3A  6F6E               	movwf	put_string_usb@len& (0+255),b
 10931  013C3C  EC66  F0A2         	call	_put_string_usb	;wreg free
 10932  013C40  0012               	return	
 10933  013C42                     __end_of_USB_task:
 10934                           	opt stack 0
 10935                           tblptru	equ	0xFF8
 10936                           tblptrh	equ	0xFF7
 10937                           tblptrl	equ	0xFF6
 10938                           tablat	equ	0xFF5
 10939                           prodh	equ	0xFF4
 10940                           prodl	equ	0xFF3
 10941                           intcon	equ	0xFF2
 10942                           intcon2	equ	0xFF1
 10943                           indf0	equ	0xFEF
 10944                           postinc0	equ	0xFEE
 10945                           fsr0h	equ	0xFEA
 10946                           fsr0l	equ	0xFE9
 10947                           wreg	equ	0xFE8
 10948                           postinc1	equ	0xFE6
 10949                           postdec1	equ	0xFE5
 10950                           fsr1h	equ	0xFE2
 10951                           fsr1l	equ	0xFE1
 10952                           indf2	equ	0xFDF
 10953                           postinc2	equ	0xFDE
 10954                           postdec2	equ	0xFDD
 10955                           fsr2h	equ	0xFDA
 10956                           fsr2l	equ	0xFD9
 10957                           status	equ	0xFD8
 10958                           
 10959 ;; *************** function _ringbuf_put *****************
 10960 ;; Defined at:
 10961 ;;		line 20 in file "../My_library/My_ringbuf.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10964 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 10965 ;;		 -> lcd_tx(8), 
 10966 ;;  asciicode       1   10[BANK0 ] unsigned char 
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;		None               void
 10971 ;; Registers used:
 10972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10978 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10981 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10982 ;;Total ram usage:        7 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:   12
 10985 ;; This function calls:
 10986 ;;		_ringbuf_num
 10987 ;; This function is called by:
 10988 ;;		_ringbuf_put_num
 10989 ;;		_ringbuf_put_str
 10990 ;;		_terminal_task
 10991 ;;		_USB_task
 10992 ;;		_ST7032_command
 10993 ;;		_ST7032_put
 10994 ;;		_ST7032_create_char
 10995 ;;		_ST7032_init
 10996 ;;		_UART_ISR
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           	psect	text42
 11001  012DCC                     __ptext42:
 11002                           	opt stack 0
 11003  012DCC                     _ringbuf_put:
 11004                           	opt stack 13
 11005                           
 11006                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 11007                           
 11008                           ;incstack = 0
 11009  012DCC  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 11010  012DD0  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 11011  012DD4  EC6F  F093         	call	_ringbuf_num	;wreg free
 11012  012DD8  0100               	movlb	0	; () banked
 11013  012DDA  EE20 F002          	lfsr	2,2
 11014  012DDE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11015  012DE0  26D9               	addwf	fsr2l,f,c
 11016  012DE2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11017  012DE4  22DA               	addwfc	fsr2h,f,c
 11018  012DE6  50DE               	movf	postinc2,w,c
 11019  012DE8  0100               	movlb	0	; () banked
 11020  012DEA  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 11021  012DEC  50DE               	movf	postinc2,w,c
 11022  012DEE  0100               	movlb	0	; () banked
 11023  012DF0  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 11024  012DF2  B0D8               	btfsc	status,0,c
 11025  012DF4  0012               	return	
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 11029  012DF6  0100               	movlb	0	; () banked
 11030  012DF8  EE20 F004          	lfsr	2,4
 11031  012DFC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11032  012DFE  26D9               	addwf	fsr2l,f,c
 11033  012E00  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11034  012E02  22DA               	addwfc	fsr2h,f,c
 11035  012E04  CFDE F06B          	movff	postinc2,??_ringbuf_put
 11036  012E08  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 11037  012E0C  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 11038  012E10  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 11039  012E14  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 11040  012E18  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 11041  012E1C  0100               	movlb	0	; () banked
 11042  012E1E  516B               	movf	??_ringbuf_put& (0+255),w,b
 11043  012E20  0100               	movlb	0	; () banked
 11044  012E22  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 11045  012E24  6ED9               	movwf	fsr2l,c
 11046  012E26  0100               	movlb	0	; () banked
 11047  012E28  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 11048  012E2A  0100               	movlb	0	; () banked
 11049  012E2C  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 11050  012E2E  6EDA               	movwf	fsr2h,c
 11051  012E30  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 11055  012E34  0100               	movlb	0	; () banked
 11056  012E36  EE20 F002          	lfsr	2,2
 11057  012E3A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11058  012E3C  26D9               	addwf	fsr2l,f,c
 11059  012E3E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11060  012E40  22DA               	addwfc	fsr2h,f,c
 11061  012E42  0100               	movlb	0	; () banked
 11062  012E44  EE10 F004          	lfsr	1,4
 11063  012E48  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11064  012E4A  26E1               	addwf	fsr1l,f,c
 11065  012E4C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11066  012E4E  22E2               	addwfc	fsr1h,f,c
 11067  012E50  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 11068  012E54  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 11069  012E58  0E01               	movlw	1
 11070  012E5A  0100               	movlb	0	; () banked
 11071  012E5C  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 11072  012E5E  0E00               	movlw	0
 11073  012E60  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 11074  012E62  50DE               	movf	postinc2,w,c
 11075  012E64  0100               	movlb	0	; () banked
 11076  012E66  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 11077  012E68  50DE               	movf	postinc2,w,c
 11078  012E6A  0100               	movlb	0	; () banked
 11079  012E6C  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 11080  012E6E  B0D8               	btfsc	status,0,c
 11081  012E70  D00B               	goto	l9098
 11082                           
 11083                           ; BSR set to: 0
 11084  012E72  0100               	movlb	0	; () banked
 11085  012E74  EE20 F004          	lfsr	2,4
 11086  012E78  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11087  012E7A  26D9               	addwf	fsr2l,f,c
 11088  012E7C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11089  012E7E  22DA               	addwfc	fsr2h,f,c
 11090  012E80  2ADE               	incf	postinc2,f,c
 11091  012E82  0E00               	movlw	0
 11092  012E84  22DD               	addwfc	postdec2,f,c
 11093  012E86  0012               	return	
 11094  012E88                     l9098:
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;My_ringbuf.c: 24: else rb->head = 0;
 11098  012E88  0100               	movlb	0	; () banked
 11099  012E8A  EE20 F004          	lfsr	2,4
 11100  012E8E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11101  012E90  26D9               	addwf	fsr2l,f,c
 11102  012E92  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11103  012E94  22DA               	addwfc	fsr2h,f,c
 11104  012E96  0E00               	movlw	0
 11105  012E98  6EDE               	movwf	postinc2,c
 11106  012E9A  0E00               	movlw	0
 11107  012E9C  6EDD               	movwf	postdec2,c
 11108                           
 11109                           ; BSR set to: 0
 11110  012E9E  0012               	return	
 11111  012EA0                     __end_of_ringbuf_put:
 11112                           	opt stack 0
 11113                           tblptru	equ	0xFF8
 11114                           tblptrh	equ	0xFF7
 11115                           tblptrl	equ	0xFF6
 11116                           tablat	equ	0xFF5
 11117                           prodh	equ	0xFF4
 11118                           prodl	equ	0xFF3
 11119                           intcon	equ	0xFF2
 11120                           intcon2	equ	0xFF1
 11121                           indf0	equ	0xFEF
 11122                           postinc0	equ	0xFEE
 11123                           fsr0h	equ	0xFEA
 11124                           fsr0l	equ	0xFE9
 11125                           wreg	equ	0xFE8
 11126                           postinc1	equ	0xFE6
 11127                           postdec1	equ	0xFE5
 11128                           fsr1h	equ	0xFE2
 11129                           fsr1l	equ	0xFE1
 11130                           indf2	equ	0xFDF
 11131                           postinc2	equ	0xFDE
 11132                           postdec2	equ	0xFDD
 11133                           fsr2h	equ	0xFDA
 11134                           fsr2l	equ	0xFD9
 11135                           status	equ	0xFD8
 11136                           
 11137 ;; *************** function _ringbuf_pop *****************
 11138 ;; Defined at:
 11139 ;;		line 45 in file "../My_library/My_ringbuf.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11142 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 11143 ;;		 -> lcd_tx(8), 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  ret             1   14[BANK0 ] unsigned char 
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  1    wreg      unsigned char 
 11148 ;; Registers used:
 11149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11157 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11158 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11159 ;;Total ram usage:        7 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:   12
 11162 ;; This function calls:
 11163 ;;		_ringbuf_num
 11164 ;; This function is called by:
 11165 ;;		_terminal_task
 11166 ;;		_USB_task
 11167 ;;		_ST7032_task
 11168 ;;		_UART_ISR
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172                           	psect	text43
 11173  013040                     __ptext43:
 11174                           	opt stack 0
 11175  013040                     _ringbuf_pop:
 11176                           	opt stack 17
 11177                           
 11178                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;incstack = 0
 11182  013040  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 11183  013044  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 11184  013048  EC6F  F093         	call	_ringbuf_num	;wreg free
 11185  01304C  0100               	movlb	0	; () banked
 11186  01304E  5160               	movf	?_ringbuf_num& (0+255),w,b
 11187  013050  0100               	movlb	0	; () banked
 11188  013052  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11189  013054  B4D8               	btfsc	status,2,c
 11190  013056  D058               	goto	l9952
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 11194  013058  0100               	movlb	0	; () banked
 11195  01305A  EE20 F006          	lfsr	2,6
 11196  01305E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11197  013060  26D9               	addwf	fsr2l,f,c
 11198  013062  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11199  013064  22DA               	addwfc	fsr2h,f,c
 11200  013066  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 11201  01306A  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 11202  01306E  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 11203  013072  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 11204  013076  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 11205  01307A  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 11206  01307E  0100               	movlb	0	; () banked
 11207  013080  516A               	movf	??_ringbuf_pop& (0+255),w,b
 11208  013082  0100               	movlb	0	; () banked
 11209  013084  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 11210  013086  6ED9               	movwf	fsr2l,c
 11211  013088  0100               	movlb	0	; () banked
 11212  01308A  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 11213  01308C  0100               	movlb	0	; () banked
 11214  01308E  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 11215  013090  6EDA               	movwf	fsr2h,c
 11216  013092  50DF               	movf	indf2,w,c
 11217  013094  0100               	movlb	0	; () banked
 11218  013096  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 11222  013098  0100               	movlb	0	; () banked
 11223  01309A  EE20 F002          	lfsr	2,2
 11224  01309E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11225  0130A0  26D9               	addwf	fsr2l,f,c
 11226  0130A2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11227  0130A4  22DA               	addwfc	fsr2h,f,c
 11228  0130A6  0100               	movlb	0	; () banked
 11229  0130A8  EE10 F006          	lfsr	1,6
 11230  0130AC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11231  0130AE  26E1               	addwf	fsr1l,f,c
 11232  0130B0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11233  0130B2  22E2               	addwfc	fsr1h,f,c
 11234  0130B4  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 11235  0130B8  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 11236  0130BC  0E01               	movlw	1
 11237  0130BE  0100               	movlb	0	; () banked
 11238  0130C0  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 11239  0130C2  0E00               	movlw	0
 11240  0130C4  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 11241  0130C6  50DE               	movf	postinc2,w,c
 11242  0130C8  0100               	movlb	0	; () banked
 11243  0130CA  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 11244  0130CC  50DE               	movf	postinc2,w,c
 11245  0130CE  0100               	movlb	0	; () banked
 11246  0130D0  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 11247  0130D2  B0D8               	btfsc	status,0,c
 11248  0130D4  D00B               	goto	l9944
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;My_ringbuf.c: 49: rb->tail++;
 11252  0130D6  0100               	movlb	0	; () banked
 11253  0130D8  EE20 F006          	lfsr	2,6
 11254  0130DC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11255  0130DE  26D9               	addwf	fsr2l,f,c
 11256  0130E0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11257  0130E2  22DA               	addwfc	fsr2h,f,c
 11258  0130E4  2ADE               	incf	postinc2,f,c
 11259  0130E6  0E00               	movlw	0
 11260  0130E8  22DD               	addwfc	postdec2,f,c
 11261                           
 11262                           ;My_ringbuf.c: 50: } else {
 11263  0130EA  D00B               	goto	l9946
 11264  0130EC                     l9944:
 11265                           
 11266                           ; BSR set to: 0
 11267                           ;My_ringbuf.c: 51: rb->tail = 0;
 11268  0130EC  0100               	movlb	0	; () banked
 11269  0130EE  EE20 F006          	lfsr	2,6
 11270  0130F2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11271  0130F4  26D9               	addwf	fsr2l,f,c
 11272  0130F6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11273  0130F8  22DA               	addwfc	fsr2h,f,c
 11274  0130FA  0E00               	movlw	0
 11275  0130FC  6EDE               	movwf	postinc2,c
 11276  0130FE  0E00               	movlw	0
 11277  013100  6EDD               	movwf	postdec2,c
 11278  013102                     l9946:
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;My_ringbuf.c: 52: }
 11282                           ;My_ringbuf.c: 53: return ret;
 11283  013102  0100               	movlb	0	; () banked
 11284  013104  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;My_ringbuf.c: 54: } else {
 11288                           
 11289                           ; BSR set to: 0
 11290  013106  0012               	return	
 11291  013108                     l9952:
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;My_ringbuf.c: 55: return 0;
 11295  013108  0E00               	movlw	0
 11296                           
 11297                           ; BSR set to: 0
 11298  01310A  0012               	return	
 11299  01310C                     __end_of_ringbuf_pop:
 11300                           	opt stack 0
 11301                           tblptru	equ	0xFF8
 11302                           tblptrh	equ	0xFF7
 11303                           tblptrl	equ	0xFF6
 11304                           tablat	equ	0xFF5
 11305                           prodh	equ	0xFF4
 11306                           prodl	equ	0xFF3
 11307                           intcon	equ	0xFF2
 11308                           intcon2	equ	0xFF1
 11309                           indf0	equ	0xFEF
 11310                           postinc0	equ	0xFEE
 11311                           fsr0h	equ	0xFEA
 11312                           fsr0l	equ	0xFE9
 11313                           wreg	equ	0xFE8
 11314                           postinc1	equ	0xFE6
 11315                           postdec1	equ	0xFE5
 11316                           fsr1h	equ	0xFE2
 11317                           fsr1l	equ	0xFE1
 11318                           indf2	equ	0xFDF
 11319                           postinc2	equ	0xFDE
 11320                           postdec2	equ	0xFDD
 11321                           fsr2h	equ	0xFDA
 11322                           fsr2l	equ	0xFD9
 11323                           status	equ	0xFD8
 11324                           
 11325 ;; *************** function _ringbuf_num *****************
 11326 ;; Defined at:
 11327 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11330 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 11331 ;;		 -> terminal_task@command(8), lcd_tx(8), 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  2    0[BANK0 ] unsigned int 
 11336 ;; Registers used:
 11337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11345 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;Total ram usage:        8 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:   11
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_ringbuf_put
 11354 ;;		_ringbuf_pop
 11355 ;;		_ringbuf_backspace
 11356 ;;		_terminal_task
 11357 ;;		_USB_task
 11358 ;;		_ST7032_task
 11359 ;;		_UART_ISR
 11360 ;;		_UART_task
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text44
 11365  0126DE                     __ptext44:
 11366                           	opt stack 0
 11367  0126DE                     _ringbuf_num:
 11368                           	opt stack 13
 11369                           
 11370                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;incstack = 0
 11374  0126DE  0100               	movlb	0	; () banked
 11375  0126E0  EE20 F006          	lfsr	2,6
 11376  0126E4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11377  0126E6  26D9               	addwf	fsr2l,f,c
 11378  0126E8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11379  0126EA  22DA               	addwfc	fsr2h,f,c
 11380  0126EC  0100               	movlb	0	; () banked
 11381  0126EE  EE10 F004          	lfsr	1,4
 11382  0126F2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11383  0126F4  26E1               	addwf	fsr1l,f,c
 11384  0126F6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11385  0126F8  22E2               	addwfc	fsr1h,f,c
 11386  0126FA  50DE               	movf	postinc2,w,c
 11387  0126FC  5CE6               	subwf	postinc1,w,c
 11388  0126FE  50DE               	movf	postinc2,w,c
 11389  012700  58E6               	subwfb	postinc1,w,c
 11390  012702  A0D8               	btfss	status,0,c
 11391  012704  D028               	goto	l8994
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11395  012706  0100               	movlb	0	; () banked
 11396  012708  EE20 F004          	lfsr	2,4
 11397  01270C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11398  01270E  26D9               	addwf	fsr2l,f,c
 11399  012710  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11400  012712  22DA               	addwfc	fsr2h,f,c
 11401  012714  CFDE F062          	movff	postinc2,??_ringbuf_num
 11402  012718  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11403  01271C  0100               	movlb	0	; () banked
 11404  01271E  EE20 F006          	lfsr	2,6
 11405  012722  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11406  012724  26D9               	addwf	fsr2l,f,c
 11407  012726  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11408  012728  22DA               	addwfc	fsr2h,f,c
 11409  01272A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11410  01272E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11411  012732  0100               	movlb	0	; () banked
 11412  012734  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11413  012736  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11414  012738  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11415  01273A  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11416  01273C  0100               	movlb	0	; () banked
 11417  01273E  5162               	movf	??_ringbuf_num& (0+255),w,b
 11418  012740  0100               	movlb	0	; () banked
 11419  012742  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11420  012744  0100               	movlb	0	; () banked
 11421  012746  6F60               	movwf	?_ringbuf_num& (0+255),b
 11422  012748  0100               	movlb	0	; () banked
 11423  01274A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11424  01274C  0100               	movlb	0	; () banked
 11425  01274E  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11426  012750  0100               	movlb	0	; () banked
 11427  012752  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;My_ringbuf.c: 15: } else {
 11431                           
 11432                           ; BSR set to: 0
 11433  012754  0012               	return	
 11434  012756                     l8994:
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11438  012756  0100               	movlb	0	; () banked
 11439  012758  EE20 F004          	lfsr	2,4
 11440  01275C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11441  01275E  26D9               	addwf	fsr2l,f,c
 11442  012760  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11443  012762  22DA               	addwfc	fsr2h,f,c
 11444  012764  CFDE F062          	movff	postinc2,??_ringbuf_num
 11445  012768  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11446  01276C  0100               	movlb	0	; () banked
 11447  01276E  EE20 F002          	lfsr	2,2
 11448  012772  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11449  012774  26D9               	addwf	fsr2l,f,c
 11450  012776  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11451  012778  22DA               	addwfc	fsr2h,f,c
 11452  01277A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11453  01277E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11454  012782  0100               	movlb	0	; () banked
 11455  012784  EE20 F006          	lfsr	2,6
 11456  012788  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11457  01278A  26D9               	addwf	fsr2l,f,c
 11458  01278C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11459  01278E  22DA               	addwfc	fsr2h,f,c
 11460  012790  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 11461  012794  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 11462  012798  0100               	movlb	0	; () banked
 11463  01279A  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 11464  01279C  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 11465  01279E  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 11466  0127A0  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 11467  0127A2  0100               	movlb	0	; () banked
 11468  0127A4  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 11469  0127A6  0100               	movlb	0	; () banked
 11470  0127A8  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 11471  0127AA  0100               	movlb	0	; () banked
 11472  0127AC  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 11473  0127AE  0100               	movlb	0	; () banked
 11474  0127B0  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 11475  0127B2  0100               	movlb	0	; () banked
 11476  0127B4  5162               	movf	??_ringbuf_num& (0+255),w,b
 11477  0127B6  0100               	movlb	0	; () banked
 11478  0127B8  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 11479  0127BA  0100               	movlb	0	; () banked
 11480  0127BC  6F60               	movwf	?_ringbuf_num& (0+255),b
 11481  0127BE  0100               	movlb	0	; () banked
 11482  0127C0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11483  0127C2  0100               	movlb	0	; () banked
 11484  0127C4  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 11485  0127C6  0100               	movlb	0	; () banked
 11486  0127C8  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11487                           
 11488                           ; BSR set to: 0
 11489  0127CA  0012               	return	
 11490  0127CC                     __end_of_ringbuf_num:
 11491                           	opt stack 0
 11492                           tblptru	equ	0xFF8
 11493                           tblptrh	equ	0xFF7
 11494                           tblptrl	equ	0xFF6
 11495                           tablat	equ	0xFF5
 11496                           prodh	equ	0xFF4
 11497                           prodl	equ	0xFF3
 11498                           intcon	equ	0xFF2
 11499                           intcon2	equ	0xFF1
 11500                           indf0	equ	0xFEF
 11501                           postinc0	equ	0xFEE
 11502                           fsr0h	equ	0xFEA
 11503                           fsr0l	equ	0xFE9
 11504                           wreg	equ	0xFE8
 11505                           postinc1	equ	0xFE6
 11506                           postdec1	equ	0xFE5
 11507                           fsr1h	equ	0xFE2
 11508                           fsr1l	equ	0xFE1
 11509                           indf2	equ	0xFDF
 11510                           postinc2	equ	0xFDE
 11511                           postdec2	equ	0xFDD
 11512                           fsr2h	equ	0xFDA
 11513                           fsr2l	equ	0xFD9
 11514                           status	equ	0xFD8
 11515                           
 11516 ;; *************** function _put_string_usb *****************
 11517 ;; Defined at:
 11518 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;  s               2   12[BANK0 ] PTR unsigned char 
 11521 ;;		 -> USB_task@data(1), 
 11522 ;;  len             2   14[BANK0 ] int 
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;		None
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  2   12[BANK0 ] int 
 11527 ;; Registers used:
 11528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11529 ;; Tracked objects:
 11530 ;;		On entry : 0/0
 11531 ;;		On exit  : 0/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11537 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11538 ;;Total ram usage:        4 bytes
 11539 ;; Hardware stack levels used:    1
 11540 ;; Hardware stack levels required when called:   13
 11541 ;; This function calls:
 11542 ;;		_CDCTxService
 11543 ;;		_is_usb_available
 11544 ;;		_putUSBUSART
 11545 ;; This function is called by:
 11546 ;;		_USB_task
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text45
 11551  0144CC                     __ptext45:
 11552                           	opt stack 0
 11553  0144CC                     _put_string_usb:
 11554                           	opt stack 16
 11555                           
 11556                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;incstack = 0
 11560  0144CC  EC36  F0A3         	call	_is_usb_available	;wreg free
 11561  0144D0  0900               	iorlw	0
 11562  0144D2  B4D8               	btfsc	status,2,c
 11563  0144D4  0012               	return	
 11564  0144D6  D002               	goto	l10096
 11565  0144D8                     l10094:
 11566  0144D8  ECB4  F08E         	call	_CDCTxService	;wreg free
 11567  0144DC                     l10096:
 11568  0144DC  5028               	movf	_cdc_trf_state,w,c
 11569  0144DE  A4D8               	btfss	status,2,c
 11570  0144E0  D7FB               	goto	l10094
 11571                           
 11572                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 11573  0144E2  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 11574  0144E6  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 11575  0144EA  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 11576  0144EE  ECF7  F0A2         	call	_putUSBUSART	;wreg free
 11577                           
 11578                           ;My_usb_cdc.c: 28: CDCTxService();
 11579  0144F2  ECB4  F08E         	call	_CDCTxService	;wreg free
 11580  0144F6  0012               	return	
 11581  0144F8                     __end_of_put_string_usb:
 11582                           	opt stack 0
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           intcon2	equ	0xFF1
 11591                           indf0	equ	0xFEF
 11592                           postinc0	equ	0xFEE
 11593                           fsr0h	equ	0xFEA
 11594                           fsr0l	equ	0xFE9
 11595                           wreg	equ	0xFE8
 11596                           postinc1	equ	0xFE6
 11597                           postdec1	equ	0xFE5
 11598                           fsr1h	equ	0xFE2
 11599                           fsr1l	equ	0xFE1
 11600                           indf2	equ	0xFDF
 11601                           postinc2	equ	0xFDE
 11602                           postdec2	equ	0xFDD
 11603                           fsr2h	equ	0xFDA
 11604                           fsr2l	equ	0xFD9
 11605                           status	equ	0xFD8
 11606                           
 11607 ;; *************** function _putUSBUSART *****************
 11608 ;; Defined at:
 11609 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11612 ;;		 -> USB_task@data(1), 
 11613 ;;  length          1    2[BANK0 ] unsigned char 
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;		None
 11616 ;; Return value:  Size  Location     Type
 11617 ;;		None               void
 11618 ;; Registers used:
 11619 ;;		wreg, status,2, status,0
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11625 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11628 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;Total ram usage:        3 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; Hardware stack levels required when called:   11
 11632 ;; This function calls:
 11633 ;;		Nothing
 11634 ;; This function is called by:
 11635 ;;		_put_string_usb
 11636 ;; This function uses a non-reentrant model
 11637 ;;
 11638                           
 11639                           	psect	text46
 11640  0145EE                     __ptext46:
 11641                           	opt stack 0
 11642  0145EE                     _putUSBUSART:
 11643                           	opt stack 17
 11644                           
 11645                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 11646                           
 11647                           ;incstack = 0
 11648  0145EE  98A0               	bcf	4000,4,c	;volatile
 11649                           
 11650                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 11651  0145F0  5028               	movf	_cdc_trf_state,w,c
 11652  0145F2  A4D8               	btfss	status,2,c
 11653  0145F4  D00B               	goto	l9668
 11654                           
 11655                           ;usb_device_cdc.c: 640: {
 11656                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 11657  0145F6  C060  F0D8         	movff	putUSBUSART@data,_pCDCSrc
 11658  0145FA  C061  F0D9         	movff	putUSBUSART@data+1,_pCDCSrc+1
 11659  0145FE  C062  F0EC         	movff	putUSBUSART@length,_cdc_tx_len
 11660  014602  0E01               	movlw	1
 11661  014604  0100               	movlb	0	; () banked
 11662  014606  6FEA               	movwf	_cdc_mem_type& (0+255),b
 11663                           
 11664                           ; BSR set to: 0
 11665  014608  0E01               	movlw	1
 11666  01460A  6E28               	movwf	_cdc_trf_state,c
 11667  01460C                     l9668:
 11668                           
 11669                           ;usb_device_cdc.c: 642: }
 11670                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 11671  01460C  88A0               	bsf	4000,4,c	;volatile
 11672  01460E  0012               	return		;funcret
 11673  014610                     __end_of_putUSBUSART:
 11674                           	opt stack 0
 11675                           tblptru	equ	0xFF8
 11676                           tblptrh	equ	0xFF7
 11677                           tblptrl	equ	0xFF6
 11678                           tablat	equ	0xFF5
 11679                           prodh	equ	0xFF4
 11680                           prodl	equ	0xFF3
 11681                           intcon	equ	0xFF2
 11682                           intcon2	equ	0xFF1
 11683                           indf0	equ	0xFEF
 11684                           postinc0	equ	0xFEE
 11685                           fsr0h	equ	0xFEA
 11686                           fsr0l	equ	0xFE9
 11687                           wreg	equ	0xFE8
 11688                           postinc1	equ	0xFE6
 11689                           postdec1	equ	0xFE5
 11690                           fsr1h	equ	0xFE2
 11691                           fsr1l	equ	0xFE1
 11692                           indf2	equ	0xFDF
 11693                           postinc2	equ	0xFDE
 11694                           postdec2	equ	0xFDD
 11695                           fsr2h	equ	0xFDA
 11696                           fsr2l	equ	0xFD9
 11697                           status	equ	0xFD8
 11698                           
 11699 ;; *************** function _get_string_usb *****************
 11700 ;; Defined at:
 11701 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;  s               2   13[BANK0 ] PTR unsigned char 
 11704 ;;		 -> USB_task@data(1), 
 11705 ;;  len             2   15[BANK0 ] int 
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;  rx_len          2   18[BANK0 ] int 
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  2   13[BANK0 ] int 
 11710 ;; Registers used:
 11711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11718 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11720 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11721 ;;Total ram usage:        7 bytes
 11722 ;; Hardware stack levels used:    1
 11723 ;; Hardware stack levels required when called:   13
 11724 ;; This function calls:
 11725 ;;		_CDCTxService
 11726 ;;		_getsUSBUSART
 11727 ;;		_is_usb_available
 11728 ;; This function is called by:
 11729 ;;		_USB_task
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text47
 11734  01421C                     __ptext47:
 11735                           	opt stack 0
 11736  01421C                     _get_string_usb:
 11737                           	opt stack 16
 11738                           
 11739                           ;My_usb_cdc.c: 33: int rx_len;
 11740                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 11741                           
 11742                           ;incstack = 0
 11743  01421C  EC36  F0A3         	call	_is_usb_available	;wreg free
 11744  014220  0900               	iorlw	0
 11745  014222  A4D8               	btfss	status,2,c
 11746  014224  D008               	goto	l10112
 11747                           
 11748                           ;My_usb_cdc.c: 36: return 0;
 11749  014226  0E00               	movlw	0
 11750  014228  0100               	movlb	0	; () banked
 11751  01422A  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 11752  01422C  0E00               	movlw	0
 11753  01422E  6F6D               	movwf	?_get_string_usb& (0+255),b
 11754                           
 11755                           ; BSR set to: 0
 11756  014230  0012               	return	
 11757  014232                     l10110:
 11758  014232  ECB4  F08E         	call	_CDCTxService	;wreg free
 11759  014236                     l10112:
 11760  014236  5028               	movf	_cdc_trf_state,w,c
 11761  014238  A4D8               	btfss	status,2,c
 11762  01423A  D7FB               	goto	l10110
 11763                           
 11764                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 11765  01423C  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 11766  014240  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 11767  014244  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 11768  014248  ECE6  F093         	call	_getsUSBUSART	;wreg free
 11769  01424C  0100               	movlb	0	; () banked
 11770  01424E  6F71               	movwf	??_get_string_usb& (0+255),b
 11771  014250  0100               	movlb	0	; () banked
 11772  014252  5171               	movf	??_get_string_usb& (0+255),w,b
 11773  014254  0100               	movlb	0	; () banked
 11774  014256  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 11775  014258  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 11776                           
 11777                           ;My_usb_cdc.c: 40: CDCTxService();
 11778  01425A  ECB4  F08E         	call	_CDCTxService	;wreg free
 11779                           
 11780                           ;My_usb_cdc.c: 41: return rx_len;
 11781  01425E  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 11782  014262  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 11783  014266  0012               	return	
 11784  014268                     __end_of_get_string_usb:
 11785                           	opt stack 0
 11786                           tblptru	equ	0xFF8
 11787                           tblptrh	equ	0xFF7
 11788                           tblptrl	equ	0xFF6
 11789                           tablat	equ	0xFF5
 11790                           prodh	equ	0xFF4
 11791                           prodl	equ	0xFF3
 11792                           intcon	equ	0xFF2
 11793                           intcon2	equ	0xFF1
 11794                           indf0	equ	0xFEF
 11795                           postinc0	equ	0xFEE
 11796                           fsr0h	equ	0xFEA
 11797                           fsr0l	equ	0xFE9
 11798                           wreg	equ	0xFE8
 11799                           postinc1	equ	0xFE6
 11800                           postdec1	equ	0xFE5
 11801                           fsr1h	equ	0xFE2
 11802                           fsr1l	equ	0xFE1
 11803                           indf2	equ	0xFDF
 11804                           postinc2	equ	0xFDE
 11805                           postdec2	equ	0xFDD
 11806                           fsr2h	equ	0xFDA
 11807                           fsr2l	equ	0xFD9
 11808                           status	equ	0xFD8
 11809                           
 11810 ;; *************** function _is_usb_available *****************
 11811 ;; Defined at:
 11812 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;		None
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;		None
 11817 ;; Return value:  Size  Location     Type
 11818 ;;                  1    wreg      unsigned char 
 11819 ;; Registers used:
 11820 ;;		wreg, status,2, status,0
 11821 ;; Tracked objects:
 11822 ;;		On entry : 0/0
 11823 ;;		On exit  : 0/0
 11824 ;;		Unchanged: 0/0
 11825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11830 ;;Total ram usage:        1 bytes
 11831 ;; Hardware stack levels used:    1
 11832 ;; Hardware stack levels required when called:   11
 11833 ;; This function calls:
 11834 ;;		Nothing
 11835 ;; This function is called by:
 11836 ;;		_put_string_usb
 11837 ;;		_get_string_usb
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text48
 11842  01466C                     __ptext48:
 11843                           	opt stack 0
 11844  01466C                     _is_usb_available:
 11845                           	opt stack 17
 11846                           
 11847                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 11848                           
 11849                           ;incstack = 0
 11850  01466C  0E00               	movlw	0
 11851  01466E  0100               	movlb	0	; () banked
 11852  014670  6F60               	movwf	_is_usb_available$5196& (0+255),b
 11853                           
 11854                           ; BSR set to: 0
 11855  014672  0E1F               	movlw	31
 11856  014674  6424               	cpfsgt	_USBDeviceState,c	;volatile
 11857  014676  D005               	goto	l1415
 11858                           
 11859                           ; BSR set to: 0
 11860  014678  B265               	btfsc	3941,1,c	;volatile
 11861  01467A  D003               	goto	l1415
 11862                           
 11863                           ; BSR set to: 0
 11864  01467C  0E01               	movlw	1
 11865  01467E  0100               	movlb	0	; () banked
 11866  014680  6F60               	movwf	_is_usb_available$5196& (0+255),b
 11867  014682                     l1415:
 11868                           
 11869                           ; BSR set to: 0
 11870  014682  0100               	movlb	0	; () banked
 11871  014684  5160               	movf	_is_usb_available$5196& (0+255),w,b
 11872  014686  0012               	return	
 11873  014688                     __end_of_is_usb_available:
 11874                           	opt stack 0
 11875                           tblptru	equ	0xFF8
 11876                           tblptrh	equ	0xFF7
 11877                           tblptrl	equ	0xFF6
 11878                           tablat	equ	0xFF5
 11879                           prodh	equ	0xFF4
 11880                           prodl	equ	0xFF3
 11881                           intcon	equ	0xFF2
 11882                           intcon2	equ	0xFF1
 11883                           indf0	equ	0xFEF
 11884                           postinc0	equ	0xFEE
 11885                           fsr0h	equ	0xFEA
 11886                           fsr0l	equ	0xFE9
 11887                           wreg	equ	0xFE8
 11888                           postinc1	equ	0xFE6
 11889                           postdec1	equ	0xFE5
 11890                           fsr1h	equ	0xFE2
 11891                           fsr1l	equ	0xFE1
 11892                           indf2	equ	0xFDF
 11893                           postinc2	equ	0xFDE
 11894                           postdec2	equ	0xFDD
 11895                           fsr2h	equ	0xFDA
 11896                           fsr2l	equ	0xFD9
 11897                           status	equ	0xFD8
 11898                           
 11899 ;; *************** function _getsUSBUSART *****************
 11900 ;; Defined at:
 11901 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 11904 ;;		 -> USB_task@data(1), 
 11905 ;;  len             1    9[BANK0 ] unsigned char 
 11906 ;; Auto vars:     Size  Location     Type
 11907 ;;		None
 11908 ;; Return value:  Size  Location     Type
 11909 ;;                  1    wreg      unsigned char 
 11910 ;; Registers used:
 11911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11912 ;; Tracked objects:
 11913 ;;		On entry : 0/0
 11914 ;;		On exit  : 0/0
 11915 ;;		Unchanged: 0/0
 11916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11917 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11921 ;;Total ram usage:        6 bytes
 11922 ;; Hardware stack levels used:    1
 11923 ;; Hardware stack levels required when called:   12
 11924 ;; This function calls:
 11925 ;;		_USBTransferOnePacket
 11926 ;; This function is called by:
 11927 ;;		_get_string_usb
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           	psect	text49
 11932  0127CC                     __ptext49:
 11933                           	opt stack 0
 11934  0127CC                     _getsUSBUSART:
 11935                           	opt stack 16
 11936                           
 11937                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;incstack = 0
 11941  0127CC  0E00               	movlw	0
 11942  0127CE  0100               	movlb	0	; () banked
 11943  0127D0  6FEB               	movwf	_cdc_rx_len& (0+255),b
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 11947  0127D2  0100               	movlb	0	; () banked
 11948  0127D4  51DF               	movf	_CDCDataOutHandle& (0+255),w,b
 11949  0127D6  0100               	movlb	0	; () banked
 11950  0127D8  11E0               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 11951  0127DA  B4D8               	btfsc	status,2,c
 11952  0127DC  D013               	goto	l9634
 11953                           
 11954                           ; BSR set to: 0
 11955  0127DE  C0DF  FFD9         	movff	_CDCDataOutHandle,fsr2l
 11956  0127E2  C0E0  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 11957  0127E6  0100               	movlb	0	; () banked
 11958  0127E8  AEDF               	btfss	indf2,7,c
 11959  0127EA  D004               	goto	u9610
 11960  0127EC  0100               	movlb	0	; () banked
 11961  0127EE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11962  0127F0  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 11963  0127F2  D002               	goto	u9618
 11964  0127F4                     u9610:
 11965  0127F4  0100               	movlb	0	; () banked
 11966  0127F6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11967  0127F8                     u9618:
 11968  0127F8  0100               	movlb	0	; () banked
 11969  0127FA  516A               	movf	??_getsUSBUSART& (0+255),w,b
 11970  0127FC  0100               	movlb	0	; () banked
 11971  0127FE  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 11972  012800  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 11973  012802  D005               	goto	l9636
 11974  012804                     l9634:
 11975                           
 11976                           ; BSR set to: 0
 11977  012804  0E00               	movlw	0
 11978  012806  0100               	movlb	0	; () banked
 11979  012808  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 11980  01280A  0E00               	movlw	0
 11981  01280C  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 11982  01280E                     l9636:
 11983                           
 11984                           ; BSR set to: 0
 11985  01280E  0100               	movlb	0	; () banked
 11986  012810  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 11987  012812  0100               	movlb	0	; () banked
 11988  012814  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 11989  012816  A4D8               	btfss	status,2,c
 11990  012818  D04B               	goto	l9652
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;usb_device_cdc.c: 547: {
 11994                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 11995  01281A  0100               	movlb	0	; () banked
 11996  01281C  EE20 F001          	lfsr	2,1
 11997  012820  51DF               	movf	_CDCDataOutHandle& (0+255),w,b
 11998  012822  26D9               	addwf	fsr2l,f,c
 11999  012824  51E0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12000  012826  22DA               	addwfc	fsr2h,f,c
 12001  012828  0100               	movlb	0	; () banked
 12002  01282A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 12003  01282C  5CDE               	subwf	postinc2,w,c
 12004  01282E  B0D8               	btfsc	status,0,c
 12005  012830  D00A               	goto	l9642
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 12009  012832  0100               	movlb	0	; () banked
 12010  012834  EE20 F001          	lfsr	2,1
 12011  012838  51DF               	movf	_CDCDataOutHandle& (0+255),w,b
 12012  01283A  26D9               	addwf	fsr2l,f,c
 12013  01283C  51E0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 12014  01283E  22DA               	addwfc	fsr2h,f,c
 12015  012840  50DF               	movf	indf2,w,c
 12016  012842  0100               	movlb	0	; () banked
 12017  012844  6F69               	movwf	getsUSBUSART@len& (0+255),b
 12018  012846                     l9642:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 12022  012846  0E00               	movlw	0
 12023  012848  0100               	movlb	0	; () banked
 12024  01284A  6FEB               	movwf	_cdc_rx_len& (0+255),b
 12025  01284C  D018               	goto	l9648
 12026  01284E                     l9644:
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 12030  01284E  0100               	movlb	0	; () banked
 12031  012850  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12032  012852  0D01               	mullw	1
 12033  012854  0E00               	movlw	low _cdc_data_rx
 12034  012856  24F3               	addwf	prodl,w,c
 12035  012858  6ED9               	movwf	fsr2l,c
 12036  01285A  0E02               	movlw	high _cdc_data_rx
 12037  01285C  20F4               	addwfc	prodh,w,c
 12038  01285E  6EDA               	movwf	fsr2h,c
 12039  012860  0100               	movlb	0	; () banked
 12040  012862  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12041  012864  0D01               	mullw	1
 12042  012866  50F3               	movf	prodl,w,c
 12043  012868  0100               	movlb	0	; () banked
 12044  01286A  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 12045  01286C  6EE1               	movwf	fsr1l,c
 12046  01286E  50F4               	movf	prodh,w,c
 12047  012870  0100               	movlb	0	; () banked
 12048  012872  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 12049  012874  6EE2               	movwf	fsr1h,c
 12050  012876  CFDF FFE7          	movff	indf2,indf1
 12051                           
 12052                           ; BSR set to: 0
 12053  01287A  0100               	movlb	0	; () banked
 12054  01287C  2BEB               	incf	_cdc_rx_len& (0+255),f,b
 12055  01287E                     l9648:
 12056                           
 12057                           ; BSR set to: 0
 12058  01287E  0100               	movlb	0	; () banked
 12059  012880  5169               	movf	getsUSBUSART@len& (0+255),w,b
 12060  012882  0100               	movlb	0	; () banked
 12061  012884  5DEB               	subwf	_cdc_rx_len& (0+255),w,b
 12062  012886  A0D8               	btfss	status,0,c
 12063  012888  D7E2               	goto	l9644
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12067                           
 12068                           ; BSR set to: 0
 12069  01288A  0E00               	movlw	0
 12070  01288C  0100               	movlb	0	; () banked
 12071  01288E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12072  012890  0E00               	movlw	low _cdc_data_rx
 12073  012892  0100               	movlb	0	; () banked
 12074  012894  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12075  012896  0E02               	movlw	high _cdc_data_rx
 12076  012898  0100               	movlb	0	; () banked
 12077  01289A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12078  01289C  0E40               	movlw	64
 12079  01289E  0100               	movlb	0	; () banked
 12080  0128A0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12081  0128A2  0E02               	movlw	2
 12082  0128A4  ECA5  F095         	call	_USBTransferOnePacket
 12083  0128A8  C060  F0DF         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12084  0128AC  C061  F0E0         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12085  0128B0                     l9652:
 12086                           
 12087                           ;usb_device_cdc.c: 567: }
 12088                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 12089  0128B0  0100               	movlb	0	; () banked
 12090  0128B2  51EB               	movf	_cdc_rx_len& (0+255),w,b
 12091  0128B4  0012               	return	
 12092  0128B6                     __end_of_getsUSBUSART:
 12093                           	opt stack 0
 12094                           tblptru	equ	0xFF8
 12095                           tblptrh	equ	0xFF7
 12096                           tblptrl	equ	0xFF6
 12097                           tablat	equ	0xFF5
 12098                           prodh	equ	0xFF4
 12099                           prodl	equ	0xFF3
 12100                           intcon	equ	0xFF2
 12101                           intcon2	equ	0xFF1
 12102                           indf0	equ	0xFEF
 12103                           postinc0	equ	0xFEE
 12104                           fsr0h	equ	0xFEA
 12105                           fsr0l	equ	0xFE9
 12106                           wreg	equ	0xFE8
 12107                           indf1	equ	0xFE7
 12108                           postinc1	equ	0xFE6
 12109                           postdec1	equ	0xFE5
 12110                           fsr1h	equ	0xFE2
 12111                           fsr1l	equ	0xFE1
 12112                           indf2	equ	0xFDF
 12113                           postinc2	equ	0xFDE
 12114                           postdec2	equ	0xFDD
 12115                           fsr2h	equ	0xFDA
 12116                           fsr2l	equ	0xFD9
 12117                           status	equ	0xFD8
 12118                           
 12119 ;; *************** function _CDCTxService *****************
 12120 ;; Defined at:
 12121 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;		None
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 12126 ;;  i               1   10[BANK0 ] unsigned char 
 12127 ;; Return value:  Size  Location     Type
 12128 ;;		None               void
 12129 ;; Registers used:
 12130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12131 ;; Tracked objects:
 12132 ;;		On entry : 0/0
 12133 ;;		On exit  : 0/0
 12134 ;;		Unchanged: 0/0
 12135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12137 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12139 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12140 ;;Total ram usage:        5 bytes
 12141 ;; Hardware stack levels used:    1
 12142 ;; Hardware stack levels required when called:   12
 12143 ;; This function calls:
 12144 ;;		_USBTransferOnePacket
 12145 ;; This function is called by:
 12146 ;;		_put_string_usb
 12147 ;;		_get_string_usb
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text50
 12152  011D68                     __ptext50:
 12153                           	opt stack 0
 12154  011D68                     _CDCTxService:
 12155                           	opt stack 16
 12156                           
 12157                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 12158                           ;usb_device_cdc.c: 896: uint8_t i;
 12159                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;incstack = 0
 12163  011D68  98A0               	bcf	4000,4,c	;volatile
 12164                           
 12165                           ;usb_device_cdc.c: 900: {};
 12166                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 12167  011D6A  0100               	movlb	0	; () banked
 12168  011D6C  51DD               	movf	_CDCDataInHandle& (0+255),w,b
 12169  011D6E  0100               	movlb	0	; () banked
 12170  011D70  11DE               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12171  011D72  B4D8               	btfsc	status,2,c
 12172  011D74  D013               	goto	l9676
 12173                           
 12174                           ; BSR set to: 0
 12175  011D76  C0DD  FFD9         	movff	_CDCDataInHandle,fsr2l
 12176  011D7A  C0DE  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12177  011D7E  0100               	movlb	0	; () banked
 12178  011D80  AEDF               	btfss	indf2,7,c
 12179  011D82  D004               	goto	u9670
 12180  011D84  0100               	movlb	0	; () banked
 12181  011D86  6B67               	clrf	??_CDCTxService& (0+255),b
 12182  011D88  2B67               	incf	??_CDCTxService& (0+255),f,b
 12183  011D8A  D002               	goto	u9678
 12184  011D8C                     u9670:
 12185  011D8C  0100               	movlb	0	; () banked
 12186  011D8E  6B67               	clrf	??_CDCTxService& (0+255),b
 12187  011D90                     u9678:
 12188  011D90  0100               	movlb	0	; () banked
 12189  011D92  5167               	movf	??_CDCTxService& (0+255),w,b
 12190  011D94  0100               	movlb	0	; () banked
 12191  011D96  6F68               	movwf	_CDCTxService$2005& (0+255),b
 12192  011D98  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 12193  011D9A  D005               	goto	l9678
 12194  011D9C                     l9676:
 12195                           
 12196                           ; BSR set to: 0
 12197  011D9C  0E00               	movlw	0
 12198  011D9E  0100               	movlb	0	; () banked
 12199  011DA0  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 12200  011DA2  0E00               	movlw	0
 12201  011DA4  6F68               	movwf	_CDCTxService$2005& (0+255),b
 12202  011DA6                     l9678:
 12203                           
 12204                           ; BSR set to: 0
 12205  011DA6  0100               	movlb	0	; () banked
 12206  011DA8  5168               	movf	_CDCTxService$2005& (0+255),w,b
 12207  011DAA  0100               	movlb	0	; () banked
 12208  011DAC  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 12209  011DAE  B4D8               	btfsc	status,2,c
 12210  011DB0  D002               	goto	l9682
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;usb_device_cdc.c: 903: {
 12214                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 12215  011DB2  88A0               	bsf	4000,4,c	;volatile
 12216                           
 12217                           ;usb_device_cdc.c: 905: return;
 12218  011DB4  0012               	return	
 12219  011DB6                     l9682:
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;usb_device_cdc.c: 906: }
 12223                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 12224  011DB6  0E03               	movlw	3
 12225  011DB8  1828               	xorwf	_cdc_trf_state,w,c
 12226  011DBA  A4D8               	btfss	status,2,c
 12227  011DBC  D002               	goto	l504
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 12231  011DBE  0E00               	movlw	0
 12232  011DC0  6E28               	movwf	_cdc_trf_state,c
 12233  011DC2                     l504:
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 12237  011DC2  5028               	movf	_cdc_trf_state,w,c
 12238  011DC4  A4D8               	btfss	status,2,c
 12239  011DC6  D002               	goto	l9688
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;usb_device_cdc.c: 920: {
 12243                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 12244  011DC8  88A0               	bsf	4000,4,c	;volatile
 12245                           
 12246                           ;usb_device_cdc.c: 922: return;
 12247  011DCA  0012               	return	
 12248  011DCC                     l9688:
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;usb_device_cdc.c: 923: }
 12252                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 12253  011DCC  0E02               	movlw	2
 12254  011DCE  1828               	xorwf	_cdc_trf_state,w,c
 12255  011DD0  A4D8               	btfss	status,2,c
 12256  011DD2  D016               	goto	l9694
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;usb_device_cdc.c: 929: {
 12260                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 12261  011DD4  0E01               	movlw	1
 12262  011DD6  0100               	movlb	0	; () banked
 12263  011DD8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12264  011DDA  0E00               	movlw	0
 12265  011DDC  0100               	movlb	0	; () banked
 12266  011DDE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12267  011DE0  0E00               	movlw	0
 12268  011DE2  0100               	movlb	0	; () banked
 12269  011DE4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12270  011DE6  0E00               	movlw	0
 12271  011DE8  0100               	movlb	0	; () banked
 12272  011DEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12273  011DEC  0E02               	movlw	2
 12274  011DEE  ECA5  F095         	call	_USBTransferOnePacket
 12275  011DF2  C060  F0DD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12276  011DF6  C061  F0DE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12277                           
 12278                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 12279  011DFA  0E03               	movlw	3
 12280  011DFC  6E28               	movwf	_cdc_trf_state,c
 12281                           
 12282                           ;usb_device_cdc.c: 933: }
 12283  011DFE  D06F               	goto	l9738
 12284  011E00                     l9694:
 12285                           
 12286                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 12287  011E00  0428               	decf	_cdc_trf_state,w,c
 12288  011E02  A4D8               	btfss	status,2,c
 12289  011E04  D06C               	goto	l9738
 12290                           
 12291                           ;usb_device_cdc.c: 935: {
 12292                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 12293  011E06  0E40               	movlw	64
 12294  011E08  0100               	movlb	0	; () banked
 12295  011E0A  65EC               	cpfsgt	_cdc_tx_len& (0+255),b
 12296  011E0C  D004               	goto	l509
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 12300  011E0E  0E40               	movlw	64
 12301  011E10  0100               	movlb	0	; () banked
 12302  011E12  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 12303  011E14  D002               	goto	l9700
 12304  011E16                     l509:
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;usb_device_cdc.c: 941: else
 12308                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 12309  011E16  C0EC  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 12310  011E1A                     l9700:
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 12314  011E1A  0100               	movlb	0	; () banked
 12315  011E1C  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 12316  011E1E  0800               	sublw	0
 12317  011E20  0100               	movlb	0	; () banked
 12318  011E22  25EC               	addwf	_cdc_tx_len& (0+255),w,b
 12319  011E24  0100               	movlb	0	; () banked
 12320  011E26  6FEC               	movwf	_cdc_tx_len& (0+255),b
 12321                           
 12322                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 12323  011E28  0E40               	movlw	low _cdc_data_tx
 12324  011E2A  0101               	movlb	1	; () banked
 12325  011E2C  6F18               	movwf	_pCDCDst& (0+255),b
 12326  011E2E  0E02               	movlw	high _cdc_data_tx
 12327  011E30  0101               	movlb	1	; () banked
 12328  011E32  6F19               	movwf	(_pCDCDst+1)& (0+255),b
 12329                           
 12330                           ; BSR set to: 1
 12331                           ;usb_device_cdc.c: 951: i = byte_to_send;
 12332  011E34  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 12333                           
 12334                           ; BSR set to: 1
 12335                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 12336  011E38  0100               	movlb	0	; () banked
 12337  011E3A  51EA               	movf	_cdc_mem_type& (0+255),w,b
 12338  011E3C  B4D8               	btfsc	status,2,c
 12339  011E3E  D013               	goto	l9716
 12340  011E40  D02A               	goto	l9726
 12341  011E42                     l9708:
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;usb_device_cdc.c: 955: {
 12345                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 12346  011E42  C0D8  FFD9         	movff	_pCDCSrc,fsr2l
 12347  011E46  C0D9  FFDA         	movff	_pCDCSrc+1,fsr2h
 12348  011E4A  C118  FFE1         	movff	_pCDCDst,fsr1l
 12349  011E4E  C119  FFE2         	movff	_pCDCDst+1,fsr1h
 12350  011E52  CFDF FFE7          	movff	indf2,indf1
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 12354  011E56  0101               	movlb	1	; () banked
 12355  011E58  4B18               	infsnz	_pCDCDst& (0+255),f,b
 12356  011E5A  2B19               	incf	(_pCDCDst+1)& (0+255),f,b
 12357                           
 12358                           ; BSR set to: 1
 12359                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 12360  011E5C  0100               	movlb	0	; () banked
 12361  011E5E  4BD8               	infsnz	_pCDCSrc& (0+255),f,b
 12362  011E60  2BD9               	incf	(_pCDCSrc+1)& (0+255),f,b
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;usb_device_cdc.c: 959: i--;
 12366  011E62  0100               	movlb	0	; () banked
 12367  011E64  076A               	decf	CDCTxService@i& (0+255),f,b
 12368  011E66                     l9716:
 12369                           
 12370                           ; BSR set to: 0
 12371  011E66  0100               	movlb	0	; () banked
 12372  011E68  516A               	movf	CDCTxService@i& (0+255),w,b
 12373  011E6A  0100               	movlb	0	; () banked
 12374  011E6C  B4D8               	btfsc	status,2,c
 12375  011E6E  D018               	goto	l9728
 12376  011E70  D7E8               	goto	l9708
 12377  011E72                     l9718:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;usb_device_cdc.c: 965: {
 12381                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 12382  011E72  C0D8  FFD9         	movff	_pCDCSrc,fsr2l
 12383  011E76  C0D9  FFDA         	movff	_pCDCSrc+1,fsr2h
 12384  011E7A  C118  FFE1         	movff	_pCDCDst,fsr1l
 12385  011E7E  C119  FFE2         	movff	_pCDCDst+1,fsr1h
 12386  011E82  CFDF FFE7          	movff	indf2,indf1
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 12390  011E86  0101               	movlb	1	; () banked
 12391  011E88  4B18               	infsnz	_pCDCDst& (0+255),f,b
 12392  011E8A  2B19               	incf	(_pCDCDst+1)& (0+255),f,b
 12393                           
 12394                           ; BSR set to: 1
 12395                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 12396  011E8C  0100               	movlb	0	; () banked
 12397  011E8E  4BD8               	infsnz	_pCDCSrc& (0+255),f,b
 12398  011E90  2BD9               	incf	(_pCDCSrc+1)& (0+255),f,b
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;usb_device_cdc.c: 969: i--;
 12402  011E92  0100               	movlb	0	; () banked
 12403  011E94  076A               	decf	CDCTxService@i& (0+255),f,b
 12404  011E96                     l9726:
 12405                           
 12406                           ; BSR set to: 0
 12407  011E96  0100               	movlb	0	; () banked
 12408  011E98  516A               	movf	CDCTxService@i& (0+255),w,b
 12409  011E9A  0100               	movlb	0	; () banked
 12410  011E9C  A4D8               	btfss	status,2,c
 12411  011E9E  D7E9               	goto	l9718
 12412  011EA0                     l9728:
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;usb_device_cdc.c: 970: }
 12416                           ;usb_device_cdc.c: 971: }
 12417                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 12418  011EA0  0100               	movlb	0	; () banked
 12419  011EA2  51EC               	movf	_cdc_tx_len& (0+255),w,b
 12420  011EA4  A4D8               	btfss	status,2,c
 12421  011EA6  D009               	goto	l9736
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;usb_device_cdc.c: 978: {
 12425                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 12426  011EA8  0E40               	movlw	64
 12427  011EAA  0100               	movlb	0	; () banked
 12428  011EAC  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12429  011EAE  A4D8               	btfss	status,2,c
 12430  011EB0  D002               	goto	l9734
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 12434  011EB2  0E02               	movlw	2
 12435  011EB4  D001               	goto	L2
 12436  011EB6                     l9734:
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;usb_device_cdc.c: 981: else
 12440                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 12441  011EB6  0E03               	movlw	3
 12442  011EB8                     L2:
 12443  011EB8  6E28               	movwf	_cdc_trf_state,c
 12444  011EBA                     l9736:
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;usb_device_cdc.c: 983: }
 12448                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12449  011EBA  0E01               	movlw	1
 12450  011EBC  0100               	movlb	0	; () banked
 12451  011EBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12452  011EC0  0E40               	movlw	low _cdc_data_tx
 12453  011EC2  0100               	movlb	0	; () banked
 12454  011EC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12455  011EC6  0E02               	movlw	high _cdc_data_tx
 12456  011EC8  0100               	movlb	0	; () banked
 12457  011ECA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12458  011ECC  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12459  011ED0  0E02               	movlw	2
 12460  011ED2  ECA5  F095         	call	_USBTransferOnePacket
 12461  011ED6  C060  F0DD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12462  011EDA  C061  F0DE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12463  011EDE                     l9738:
 12464                           
 12465                           ;usb_device_cdc.c: 986: }
 12466                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 12467  011EDE  88A0               	bsf	4000,4,c	;volatile
 12468  011EE0  0012               	return		;funcret
 12469  011EE2                     __end_of_CDCTxService:
 12470                           	opt stack 0
 12471                           tblptru	equ	0xFF8
 12472                           tblptrh	equ	0xFF7
 12473                           tblptrl	equ	0xFF6
 12474                           tablat	equ	0xFF5
 12475                           prodh	equ	0xFF4
 12476                           prodl	equ	0xFF3
 12477                           intcon	equ	0xFF2
 12478                           intcon2	equ	0xFF1
 12479                           indf0	equ	0xFEF
 12480                           postinc0	equ	0xFEE
 12481                           fsr0h	equ	0xFEA
 12482                           fsr0l	equ	0xFE9
 12483                           wreg	equ	0xFE8
 12484                           indf1	equ	0xFE7
 12485                           postinc1	equ	0xFE6
 12486                           postdec1	equ	0xFE5
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           indf2	equ	0xFDF
 12490                           postinc2	equ	0xFDE
 12491                           postdec2	equ	0xFDD
 12492                           fsr2h	equ	0xFDA
 12493                           fsr2l	equ	0xFD9
 12494                           status	equ	0xFD8
 12495                           
 12496 ;; *************** function _USBTransferOnePacket *****************
 12497 ;; Defined at:
 12498 ;;		line 995 in file "../My_library/usb/usb_device.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;  ep              1    wreg     unsigned char 
 12501 ;;  dir             1    0[BANK0 ] unsigned char 
 12502 ;;  data            2    1[BANK0 ] PTR unsigned char 
 12503 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 12504 ;;  len             1    3[BANK0 ] unsigned char 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  ep              1    4[BANK0 ] unsigned char 
 12507 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12508 ;;		 -> NULL(0), BDT(48), 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  2    0[BANK0 ] PTR void 
 12511 ;; Registers used:
 12512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12519 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12521 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12522 ;;Total ram usage:        7 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:   11
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		_getsUSBUSART
 12529 ;;		_CDCTxService
 12530 ;;		_USBCDCEventHandler
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           	psect	text51
 12535  012B4A                     __ptext51:
 12536                           	opt stack 0
 12537  012B4A                     _USBTransferOnePacket:
 12538                           	opt stack 16
 12539                           
 12540                           ;incstack = 0
 12541                           ;USBTransferOnePacket@ep stored from wreg
 12542  012B4A  0100               	movlb	0	; () banked
 12543  012B4C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 12544                           
 12545                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12546                           ;usb_device.c: 1000: if(dir != 0)
 12547  012B4E  0100               	movlb	0	; () banked
 12548  012B50  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12549  012B52  0100               	movlb	0	; () banked
 12550  012B54  B4D8               	btfsc	status,2,c
 12551  012B56  D008               	goto	l9466
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;usb_device.c: 1001: {
 12555                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12556  012B58  0100               	movlb	0	; () banked
 12557  012B5A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12558  012B5C  0D02               	mullw	2
 12559  012B5E  0E10               	movlw	low _pBDTEntryIn
 12560  012B60  24F3               	addwf	prodl,w,c
 12561  012B62  6ED9               	movwf	fsr2l,c
 12562  012B64  0E00               	movlw	high _pBDTEntryIn
 12563  012B66  D007               	goto	L3
 12564  012B68                     l9466:
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;usb_device.c: 1005: else
 12568                           ;usb_device.c: 1006: {
 12569                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12570  012B68  0100               	movlb	0	; () banked
 12571  012B6A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12572  012B6C  0D02               	mullw	2
 12573  012B6E  0E0A               	movlw	low _pBDTEntryOut
 12574  012B70  24F3               	addwf	prodl,w,c
 12575  012B72  6ED9               	movwf	fsr2l,c
 12576  012B74  0E01               	movlw	high _pBDTEntryOut
 12577  012B76                     L3:
 12578  012B76  20F4               	addwfc	prodh,w,c
 12579  012B78  6EDA               	movwf	fsr2h,c
 12580  012B7A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 12581  012B7E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;usb_device.c: 1009: }
 12585                           ;usb_device.c: 1013: if(handle == 0)
 12586                           
 12587                           ; BSR set to: 0
 12588  012B82  0100               	movlb	0	; () banked
 12589  012B84  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12590  012B86  0100               	movlb	0	; () banked
 12591  012B88  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12592  012B8A  A4D8               	btfss	status,2,c
 12593  012B8C  D007               	goto	l9474
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;usb_device.c: 1014: {
 12597                           ;usb_device.c: 1015: return 0;
 12598  012B8E  0E00               	movlw	0
 12599  012B90  0100               	movlb	0	; () banked
 12600  012B92  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 12601  012B94  0E00               	movlw	0
 12602  012B96  0100               	movlb	0	; () banked
 12603  012B98  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12604                           
 12605                           ; BSR set to: 0
 12606  012B9A  0012               	return	
 12607  012B9C                     l9474:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 1016: }
 12611                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12612  012B9C  0100               	movlb	0	; () banked
 12613  012B9E  EE20 F002          	lfsr	2,2
 12614  012BA2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12615  012BA4  26D9               	addwf	fsr2l,f,c
 12616  012BA6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12617  012BA8  22DA               	addwfc	fsr2h,f,c
 12618  012BAA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12619  012BAE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12620                           
 12621                           ;usb_device.c: 1030: handle->CNT = len;
 12622  012BB2  0100               	movlb	0	; () banked
 12623  012BB4  EE20 F001          	lfsr	2,1
 12624  012BB8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12625  012BBA  26D9               	addwf	fsr2l,f,c
 12626  012BBC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12627  012BBE  22DA               	addwfc	fsr2h,f,c
 12628  012BC0  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12632  012BC4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12633  012BC8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12634  012BCC  0E40               	movlw	64
 12635  012BCE  16DF               	andwf	indf2,f,c
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12639  012BD0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12640  012BD4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12641  012BD8  0E00               	movlw	0
 12642  012BDA  86DB               	bsf	plusw2,3,c
 12643                           
 12644                           ; BSR set to: 0
 12645                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12646  012BDC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12647  012BE0  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12648  012BE4  0E00               	movlw	0
 12649  012BE6  8EDB               	bsf	plusw2,7,c
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;usb_device.c: 1036: if(dir != 0)
 12653  012BE8  0100               	movlb	0	; () banked
 12654  012BEA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12655  012BEC  0100               	movlb	0	; () banked
 12656  012BEE  B4D8               	btfsc	status,2,c
 12657  012BF0  D008               	goto	l9486
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;usb_device.c: 1037: {
 12661                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12662  012BF2  0100               	movlb	0	; () banked
 12663  012BF4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12664  012BF6  0D02               	mullw	2
 12665  012BF8  0E10               	movlw	low _pBDTEntryIn
 12666  012BFA  24F3               	addwf	prodl,w,c
 12667  012BFC  6ED9               	movwf	fsr2l,c
 12668  012BFE  0E00               	movlw	high _pBDTEntryIn
 12669  012C00  D007               	goto	L4
 12670  012C02                     l9486:
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;usb_device.c: 1041: else
 12674                           ;usb_device.c: 1042: {
 12675                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12676  012C02  0100               	movlb	0	; () banked
 12677  012C04  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12678  012C06  0D02               	mullw	2
 12679  012C08  0E0A               	movlw	low _pBDTEntryOut
 12680  012C0A  24F3               	addwf	prodl,w,c
 12681  012C0C  6ED9               	movwf	fsr2l,c
 12682  012C0E  0E01               	movlw	high _pBDTEntryOut
 12683  012C10                     L4:
 12684  012C10  20F4               	addwfc	prodh,w,c
 12685  012C12  6EDA               	movwf	fsr2h,c
 12686  012C14  0E04               	movlw	4
 12687  012C16  1ADF               	xorwf	indf2,f,c
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;usb_device.c: 1045: }
 12691                           ;usb_device.c: 1046: return (void*)handle;
 12692                           
 12693                           ; BSR set to: 0
 12694  012C18  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12695  012C1C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12696  012C20  0012               	return	
 12697  012C22                     __end_of_USBTransferOnePacket:
 12698                           	opt stack 0
 12699                           tblptru	equ	0xFF8
 12700                           tblptrh	equ	0xFF7
 12701                           tblptrl	equ	0xFF6
 12702                           tablat	equ	0xFF5
 12703                           prodh	equ	0xFF4
 12704                           prodl	equ	0xFF3
 12705                           intcon	equ	0xFF2
 12706                           intcon2	equ	0xFF1
 12707                           indf0	equ	0xFEF
 12708                           postinc0	equ	0xFEE
 12709                           fsr0h	equ	0xFEA
 12710                           fsr0l	equ	0xFE9
 12711                           wreg	equ	0xFE8
 12712                           indf1	equ	0xFE7
 12713                           postinc1	equ	0xFE6
 12714                           postdec1	equ	0xFE5
 12715                           fsr1h	equ	0xFE2
 12716                           fsr1l	equ	0xFE1
 12717                           indf2	equ	0xFDF
 12718                           postinc2	equ	0xFDE
 12719                           postdec2	equ	0xFDD
 12720                           plusw2	equ	0xFDB
 12721                           fsr2h	equ	0xFDA
 12722                           fsr2l	equ	0xFD9
 12723                           status	equ	0xFD8
 12724                           
 12725 ;; *************** function _RTCC_task *****************
 12726 ;; Defined at:
 12727 ;;		line 352 in file "../My_library/My_RTCC.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;		None
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;		None
 12732 ;; Return value:  Size  Location     Type
 12733 ;;		None               void
 12734 ;; Registers used:
 12735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12745 ;;Total ram usage:        0 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:   15
 12748 ;; This function calls:
 12749 ;;		_RTCC_from_RTCC
 12750 ;; This function is called by:
 12751 ;;		_main
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text52
 12756  0142EC                     __ptext52:
 12757                           	opt stack 0
 12758  0142EC                     _RTCC_task:
 12759                           	opt stack 15
 12760                           
 12761                           ;My_RTCC.c: 353: static uint8_t prev_halfsec;
 12762                           ;My_RTCC.c: 354: if (RTCCFGbits.RTCSYNC)return;
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;incstack = 0
 12766  0142EC  010F               	movlb	15	; () banked
 12767  0142EE  B93F               	btfsc	63,4,b	;volatile
 12768  0142F0  0012               	return	
 12769                           
 12770                           ; BSR set to: 15
 12771                           ;My_RTCC.c: 355: now.halfsec = RTCCFGbits.HALFSEC;
 12772                           
 12773                           ; BSR set to: 15
 12774                           
 12775                           ; BSR set to: 15
 12776  0142F2  0E00               	movlw	0
 12777  0142F4  B73F               	btfsc	63,3,b	;volatile
 12778  0142F6  0E01               	movlw	1
 12779  0142F8  0101               	movlb	1	; () banked
 12780  0142FA  6F44               	movwf	(_now+12)& (0+255),b
 12781                           
 12782                           ; BSR set to: 1
 12783                           ;My_RTCC.c: 356: if (prev_halfsec != now.halfsec) {
 12784  0142FC  0100               	movlb	0	; () banked
 12785  0142FE  51E5               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 12786  014300  0101               	movlb	1	; () banked
 12787  014302  1944               	xorwf	(_now+12)& (0+255),w,b
 12788  014304  B4D8               	btfsc	status,2,c
 12789  014306  0012               	return	
 12790                           
 12791                           ; BSR set to: 1
 12792                           ;My_RTCC.c: 357: prev_halfsec = now.halfsec;
 12793  014308  C144  F0E5         	movff	_now+12,RTCC_task@prev_halfsec
 12794                           
 12795                           ;My_RTCC.c: 358: now.colon = now.halfsec;
 12796  01430C  C144  F143         	movff	_now+12,_now+11
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;My_RTCC.c: 359: time_change_flag = 1;
 12800  014310  0E01               	movlw	1
 12801  014312  0100               	movlb	0	; () banked
 12802  014314  6FF0               	movwf	_time_change_flag& (0+255),b
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;My_RTCC.c: 360: RTCC_from_RTCC(&now);
 12806  014316  0E38               	movlw	low _now
 12807  014318  0100               	movlb	0	; () banked
 12808  01431A  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12809  01431C  0E01               	movlw	high _now
 12810  01431E  0100               	movlb	0	; () banked
 12811  014320  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12812  014322  EC51  F0A3         	call	_RTCC_from_RTCC	;wreg free
 12813  014326  0012               	return	
 12814  014328                     __end_of_RTCC_task:
 12815                           	opt stack 0
 12816                           tblptru	equ	0xFF8
 12817                           tblptrh	equ	0xFF7
 12818                           tblptrl	equ	0xFF6
 12819                           tablat	equ	0xFF5
 12820                           prodh	equ	0xFF4
 12821                           prodl	equ	0xFF3
 12822                           intcon	equ	0xFF2
 12823                           intcon2	equ	0xFF1
 12824                           indf0	equ	0xFEF
 12825                           postinc0	equ	0xFEE
 12826                           fsr0h	equ	0xFEA
 12827                           fsr0l	equ	0xFE9
 12828                           wreg	equ	0xFE8
 12829                           indf1	equ	0xFE7
 12830                           postinc1	equ	0xFE6
 12831                           postdec1	equ	0xFE5
 12832                           fsr1h	equ	0xFE2
 12833                           fsr1l	equ	0xFE1
 12834                           indf2	equ	0xFDF
 12835                           postinc2	equ	0xFDE
 12836                           postdec2	equ	0xFDD
 12837                           plusw2	equ	0xFDB
 12838                           fsr2h	equ	0xFDA
 12839                           fsr2l	equ	0xFD9
 12840                           status	equ	0xFD8
 12841                           
 12842 ;; *************** function _RTCC_from_RTCC *****************
 12843 ;; Defined at:
 12844 ;;		line 199 in file "../My_library/My_RTCC.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  tm              2   38[BANK0 ] PTR struct .
 12847 ;;		 -> now(14), 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;		None
 12850 ;; Return value:  Size  Location     Type
 12851 ;;		None               void
 12852 ;; Registers used:
 12853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/0
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12862 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12863 ;;Total ram usage:        2 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:   14
 12866 ;; This function calls:
 12867 ;;		_RTCC_to_caltime
 12868 ;;		_caltime_to_epoch
 12869 ;; This function is called by:
 12870 ;;		_RTCC_init
 12871 ;;		_RTCC_task
 12872 ;;		_print_time
 12873 ;;		_light_task
 12874 ;;		_display_time_0802
 12875 ;;		_display_time_1602
 12876 ;;		_RTCC_adjust_time_inc
 12877 ;;		_RTCC_adjust_time_dec
 12878 ;; This function uses a non-reentrant model
 12879 ;;
 12880                           
 12881                           	psect	text53
 12882  0146A2                     __ptext53:
 12883                           	opt stack 0
 12884  0146A2                     _RTCC_from_RTCC:
 12885                           	opt stack 11
 12886                           
 12887                           ;My_RTCC.c: 200: RTCC_to_caltime(tm);
 12888                           
 12889                           ;incstack = 0
 12890  0146A2  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12891  0146A6  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12892  0146AA  EC02  F09A         	call	_RTCC_to_caltime	;wreg free
 12893                           
 12894                           ;My_RTCC.c: 201: caltime_to_epoch(tm);
 12895  0146AE  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12896  0146B2  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12897  0146B6  EC0F  F088         	call	_caltime_to_epoch	;wreg free
 12898  0146BA  0012               	return		;funcret
 12899  0146BC                     __end_of_RTCC_from_RTCC:
 12900                           	opt stack 0
 12901                           tblptru	equ	0xFF8
 12902                           tblptrh	equ	0xFF7
 12903                           tblptrl	equ	0xFF6
 12904                           tablat	equ	0xFF5
 12905                           prodh	equ	0xFF4
 12906                           prodl	equ	0xFF3
 12907                           intcon	equ	0xFF2
 12908                           intcon2	equ	0xFF1
 12909                           indf0	equ	0xFEF
 12910                           postinc0	equ	0xFEE
 12911                           fsr0h	equ	0xFEA
 12912                           fsr0l	equ	0xFE9
 12913                           wreg	equ	0xFE8
 12914                           indf1	equ	0xFE7
 12915                           postinc1	equ	0xFE6
 12916                           postdec1	equ	0xFE5
 12917                           fsr1h	equ	0xFE2
 12918                           fsr1l	equ	0xFE1
 12919                           indf2	equ	0xFDF
 12920                           postinc2	equ	0xFDE
 12921                           postdec2	equ	0xFDD
 12922                           plusw2	equ	0xFDB
 12923                           fsr2h	equ	0xFDA
 12924                           fsr2l	equ	0xFD9
 12925                           status	equ	0xFD8
 12926                           
 12927 ;; *************** function _caltime_to_epoch *****************
 12928 ;; Defined at:
 12929 ;;		line 179 in file "../My_library/My_RTCC.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;  tm              2   25[BANK0 ] PTR struct .
 12932 ;;		 -> now(14), 
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;  month           1   37[BANK0 ] unsigned char 
 12935 ;;  month           1   32[BANK0 ] unsigned char 
 12936 ;;  year            1   31[BANK0 ] unsigned char 
 12937 ;;  epoch           4   33[BANK0 ] unsigned long 
 12938 ;; Return value:  Size  Location     Type
 12939 ;;		None               void
 12940 ;; Registers used:
 12941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12947 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12950 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12951 ;;Total ram usage:       13 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:   13
 12954 ;; This function calls:
 12955 ;;		___lmul
 12956 ;;		_month_length
 12957 ;; This function is called by:
 12958 ;;		_RTCC_from_RTCC
 12959 ;;		_RTCC_from_caltime
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text54
 12964  01101E                     __ptext54:
 12965                           	opt stack 0
 12966  01101E                     _caltime_to_epoch:
 12967                           	opt stack 11
 12968                           
 12969                           ;My_RTCC.c: 180: epoch_t epoch = 0;
 12970                           
 12971                           ;incstack = 0
 12972  01101E  0E00               	movlw	0
 12973  011020  0100               	movlb	0	; () banked
 12974  011022  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 12975  011024  0E00               	movlw	0
 12976  011026  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 12977  011028  0E00               	movlw	0
 12978  01102A  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 12979  01102C  0E00               	movlw	0
 12980  01102E  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 12981                           
 12982                           ;My_RTCC.c: 181: for (uint8_t year = 0; year < tm->YY; year++) {
 12983  011030  0E00               	movlw	0
 12984  011032  0100               	movlb	0	; () banked
 12985  011034  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 12986  011036  D037               	goto	l9132
 12987  011038                     l9118:
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;My_RTCC.c: 182: for (uint8_t month = 1; month <= 12; month++) {
 12991  011038  0E01               	movlw	1
 12992  01103A  0100               	movlb	0	; () banked
 12993  01103C  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 12994  01103E                     l9120:
 12995                           
 12996                           ; BSR set to: 0
 12997  01103E  0E0C               	movlw	12
 12998  011040  0100               	movlb	0	; () banked
 12999  011042  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 13000  011044  D001               	goto	l9124
 13001  011046  D02D               	goto	l9130
 13002  011048                     l9124:
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 13006  011048  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 13007  01104C  0100               	movlb	0	; () banked
 13008  01104E  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 13009  011050  EC5B  F094         	call	_month_length
 13010  011054  0100               	movlb	0	; () banked
 13011  011056  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13012  011058  0100               	movlb	0	; () banked
 13013  01105A  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13014  01105C  0100               	movlb	0	; () banked
 13015  01105E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13016  011060  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13017  011062  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13018  011064  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13019  011066  0E80               	movlw	128
 13020  011068  0100               	movlb	0	; () banked
 13021  01106A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13022  01106C  0E51               	movlw	81
 13023  01106E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13024  011070  0E01               	movlw	1
 13025  011072  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13026  011074  0E00               	movlw	0
 13027  011076  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13028  011078  EC25  F09F         	call	___lmul	;wreg free
 13029  01107C  0100               	movlb	0	; () banked
 13030  01107E  516D               	movf	?___lmul& (0+255),w,b
 13031  011080  0100               	movlb	0	; () banked
 13032  011082  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13033  011084  0100               	movlb	0	; () banked
 13034  011086  516E               	movf	(?___lmul+1)& (0+255),w,b
 13035  011088  0100               	movlb	0	; () banked
 13036  01108A  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13037  01108C  0100               	movlb	0	; () banked
 13038  01108E  516F               	movf	(?___lmul+2)& (0+255),w,b
 13039  011090  0100               	movlb	0	; () banked
 13040  011092  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13041  011094  0100               	movlb	0	; () banked
 13042  011096  5170               	movf	(?___lmul+3)& (0+255),w,b
 13043  011098  0100               	movlb	0	; () banked
 13044  01109A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13045                           
 13046                           ; BSR set to: 0
 13047  01109C  0100               	movlb	0	; () banked
 13048  01109E  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 13049  0110A0  D7CE               	goto	l9120
 13050  0110A2                     l9130:
 13051                           
 13052                           ; BSR set to: 0
 13053  0110A2  0100               	movlb	0	; () banked
 13054  0110A4  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 13055  0110A6                     l9132:
 13056                           
 13057                           ; BSR set to: 0
 13058  0110A6  0100               	movlb	0	; () banked
 13059  0110A8  EE20 F00A          	lfsr	2,10
 13060  0110AC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13061  0110AE  26D9               	addwf	fsr2l,f,c
 13062  0110B0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13063  0110B2  22DA               	addwfc	fsr2h,f,c
 13064  0110B4  50DE               	movf	postinc2,w,c
 13065  0110B6  0100               	movlb	0	; () banked
 13066  0110B8  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 13067  0110BA  A0D8               	btfss	status,0,c
 13068  0110BC  D7BD               	goto	l9118
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;My_RTCC.c: 184: }
 13072                           ;My_RTCC.c: 185: }
 13073                           ;My_RTCC.c: 186: for (uint8_t month = 1; month < tm->MM; month++) {
 13074                           
 13075                           ; BSR set to: 0
 13076  0110BE  0E01               	movlw	1
 13077  0110C0  0100               	movlb	0	; () banked
 13078  0110C2  6F80               	movwf	caltime_to_epoch@month_3722& (0+255),b
 13079  0110C4  D032               	goto	l9140
 13080  0110C6                     l9136:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;My_RTCC.c: 187: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 13084  0110C6  C080  F066         	movff	caltime_to_epoch@month_3722,month_length@month
 13085  0110CA  0100               	movlb	0	; () banked
 13086  0110CC  EE20 F00A          	lfsr	2,10
 13087  0110D0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13088  0110D2  26D9               	addwf	fsr2l,f,c
 13089  0110D4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13090  0110D6  22DA               	addwfc	fsr2h,f,c
 13091  0110D8  50DF               	movf	indf2,w,c
 13092  0110DA  EC5B  F094         	call	_month_length
 13093  0110DE  0100               	movlb	0	; () banked
 13094  0110E0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13095  0110E2  0100               	movlb	0	; () banked
 13096  0110E4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13097  0110E6  0100               	movlb	0	; () banked
 13098  0110E8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13099  0110EA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13100  0110EC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13101  0110EE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13102  0110F0  0E80               	movlw	128
 13103  0110F2  0100               	movlb	0	; () banked
 13104  0110F4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13105  0110F6  0E51               	movlw	81
 13106  0110F8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13107  0110FA  0E01               	movlw	1
 13108  0110FC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13109  0110FE  0E00               	movlw	0
 13110  011100  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13111  011102  EC25  F09F         	call	___lmul	;wreg free
 13112  011106  0100               	movlb	0	; () banked
 13113  011108  516D               	movf	?___lmul& (0+255),w,b
 13114  01110A  0100               	movlb	0	; () banked
 13115  01110C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13116  01110E  0100               	movlb	0	; () banked
 13117  011110  516E               	movf	(?___lmul+1)& (0+255),w,b
 13118  011112  0100               	movlb	0	; () banked
 13119  011114  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13120  011116  0100               	movlb	0	; () banked
 13121  011118  516F               	movf	(?___lmul+2)& (0+255),w,b
 13122  01111A  0100               	movlb	0	; () banked
 13123  01111C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13124  01111E  0100               	movlb	0	; () banked
 13125  011120  5170               	movf	(?___lmul+3)& (0+255),w,b
 13126  011122  0100               	movlb	0	; () banked
 13127  011124  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13128                           
 13129                           ; BSR set to: 0
 13130  011126  0100               	movlb	0	; () banked
 13131  011128  2B80               	incf	caltime_to_epoch@month_3722& (0+255),f,b
 13132  01112A                     l9140:
 13133                           
 13134                           ; BSR set to: 0
 13135  01112A  0100               	movlb	0	; () banked
 13136  01112C  EE20 F009          	lfsr	2,9
 13137  011130  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13138  011132  26D9               	addwf	fsr2l,f,c
 13139  011134  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13140  011136  22DA               	addwfc	fsr2h,f,c
 13141  011138  50DE               	movf	postinc2,w,c
 13142  01113A  0100               	movlb	0	; () banked
 13143  01113C  5D80               	subwf	caltime_to_epoch@month_3722& (0+255),w,b
 13144  01113E  A0D8               	btfss	status,0,c
 13145  011140  D7C2               	goto	l9136
 13146                           
 13147                           ; BSR set to: 0
 13148                           ;My_RTCC.c: 188: }
 13149                           ;My_RTCC.c: 189: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 13150                           
 13151                           ; BSR set to: 0
 13152  011142  0EFF               	movlw	255
 13153  011144  0100               	movlb	0	; () banked
 13154  011146  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13155  011148  0EFF               	movlw	255
 13156  01114A  0100               	movlb	0	; () banked
 13157  01114C  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 13158  01114E  0100               	movlb	0	; () banked
 13159  011150  EE20 F008          	lfsr	2,8
 13160  011154  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13161  011156  26D9               	addwf	fsr2l,f,c
 13162  011158  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13163  01115A  22DA               	addwfc	fsr2h,f,c
 13164  01115C  50DF               	movf	indf2,w,c
 13165  01115E  0100               	movlb	0	; () banked
 13166  011160  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 13167  011162  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 13168  011164  0100               	movlb	0	; () banked
 13169  011166  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13170  011168  0100               	movlb	0	; () banked
 13171  01116A  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 13172  01116C  0100               	movlb	0	; () banked
 13173  01116E  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 13174  011170  0100               	movlb	0	; () banked
 13175  011172  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 13176  011174  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 13177  011178  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 13178  01117C  0100               	movlb	0	; () banked
 13179  01117E  0E00               	movlw	0
 13180  011180  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13181  011182  0EFF               	movlw	-1
 13182  011184  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 13183  011186  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 13184  011188  0E80               	movlw	128
 13185  01118A  0100               	movlb	0	; () banked
 13186  01118C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13187  01118E  0E51               	movlw	81
 13188  011190  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13189  011192  0E01               	movlw	1
 13190  011194  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13191  011196  0E00               	movlw	0
 13192  011198  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13193  01119A  EC25  F09F         	call	___lmul	;wreg free
 13194  01119E  0100               	movlb	0	; () banked
 13195  0111A0  516D               	movf	?___lmul& (0+255),w,b
 13196  0111A2  0100               	movlb	0	; () banked
 13197  0111A4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13198  0111A6  0100               	movlb	0	; () banked
 13199  0111A8  516E               	movf	(?___lmul+1)& (0+255),w,b
 13200  0111AA  0100               	movlb	0	; () banked
 13201  0111AC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13202  0111AE  0100               	movlb	0	; () banked
 13203  0111B0  516F               	movf	(?___lmul+2)& (0+255),w,b
 13204  0111B2  0100               	movlb	0	; () banked
 13205  0111B4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13206  0111B6  0100               	movlb	0	; () banked
 13207  0111B8  5170               	movf	(?___lmul+3)& (0+255),w,b
 13208  0111BA  0100               	movlb	0	; () banked
 13209  0111BC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13210                           
 13211                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60) * tm->hh;
 13212  0111BE  0100               	movlb	0	; () banked
 13213  0111C0  EE20 F006          	lfsr	2,6
 13214  0111C4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13215  0111C6  26D9               	addwf	fsr2l,f,c
 13216  0111C8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13217  0111CA  22DA               	addwfc	fsr2h,f,c
 13218  0111CC  50DF               	movf	indf2,w,c
 13219  0111CE  0100               	movlb	0	; () banked
 13220  0111D0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13221  0111D2  0100               	movlb	0	; () banked
 13222  0111D4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13223  0111D6  0100               	movlb	0	; () banked
 13224  0111D8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13225  0111DA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13226  0111DC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13227  0111DE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13228  0111E0  0E10               	movlw	16
 13229  0111E2  0100               	movlb	0	; () banked
 13230  0111E4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13231  0111E6  0E0E               	movlw	14
 13232  0111E8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13233  0111EA  0E00               	movlw	0
 13234  0111EC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13235  0111EE  0E00               	movlw	0
 13236  0111F0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13237  0111F2  EC25  F09F         	call	___lmul	;wreg free
 13238  0111F6  0100               	movlb	0	; () banked
 13239  0111F8  516D               	movf	?___lmul& (0+255),w,b
 13240  0111FA  0100               	movlb	0	; () banked
 13241  0111FC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13242  0111FE  0100               	movlb	0	; () banked
 13243  011200  516E               	movf	(?___lmul+1)& (0+255),w,b
 13244  011202  0100               	movlb	0	; () banked
 13245  011204  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13246  011206  0100               	movlb	0	; () banked
 13247  011208  516F               	movf	(?___lmul+2)& (0+255),w,b
 13248  01120A  0100               	movlb	0	; () banked
 13249  01120C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13250  01120E  0100               	movlb	0	; () banked
 13251  011210  5170               	movf	(?___lmul+3)& (0+255),w,b
 13252  011212  0100               	movlb	0	; () banked
 13253  011214  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13254                           
 13255                           ;My_RTCC.c: 191: epoch += ((epoch_t)60) * tm->mm;
 13256  011216  0100               	movlb	0	; () banked
 13257  011218  EE20 F005          	lfsr	2,5
 13258  01121C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13259  01121E  26D9               	addwf	fsr2l,f,c
 13260  011220  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13261  011222  22DA               	addwfc	fsr2h,f,c
 13262  011224  50DF               	movf	indf2,w,c
 13263  011226  0100               	movlb	0	; () banked
 13264  011228  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13265  01122A  0100               	movlb	0	; () banked
 13266  01122C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13267  01122E  0100               	movlb	0	; () banked
 13268  011230  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13269  011232  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13270  011234  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13271  011236  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13272  011238  0E3C               	movlw	60
 13273  01123A  0100               	movlb	0	; () banked
 13274  01123C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13275  01123E  0E00               	movlw	0
 13276  011240  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13277  011242  0E00               	movlw	0
 13278  011244  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13279  011246  0E00               	movlw	0
 13280  011248  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13281  01124A  EC25  F09F         	call	___lmul	;wreg free
 13282  01124E  0100               	movlb	0	; () banked
 13283  011250  516D               	movf	?___lmul& (0+255),w,b
 13284  011252  0100               	movlb	0	; () banked
 13285  011254  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13286  011256  0100               	movlb	0	; () banked
 13287  011258  516E               	movf	(?___lmul+1)& (0+255),w,b
 13288  01125A  0100               	movlb	0	; () banked
 13289  01125C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13290  01125E  0100               	movlb	0	; () banked
 13291  011260  516F               	movf	(?___lmul+2)& (0+255),w,b
 13292  011262  0100               	movlb	0	; () banked
 13293  011264  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13294  011266  0100               	movlb	0	; () banked
 13295  011268  5170               	movf	(?___lmul+3)& (0+255),w,b
 13296  01126A  0100               	movlb	0	; () banked
 13297  01126C  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;My_RTCC.c: 192: epoch += tm->ss;
 13301  01126E  0100               	movlb	0	; () banked
 13302  011270  EE20 F004          	lfsr	2,4
 13303  011274  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13304  011276  26D9               	addwf	fsr2l,f,c
 13305  011278  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13306  01127A  22DA               	addwfc	fsr2h,f,c
 13307  01127C  50DF               	movf	indf2,w,c
 13308  01127E  0100               	movlb	0	; () banked
 13309  011280  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13310  011282  0100               	movlb	0	; () banked
 13311  011284  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13312  011286  0100               	movlb	0	; () banked
 13313  011288  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13314  01128A  0E00               	movlw	0
 13315  01128C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13316  01128E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13317  011290  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;My_RTCC.c: 194: tm->epoch = epoch;
 13321  011292  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 13322  011296  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 13323  01129A  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 13324  01129E  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 13325  0112A2  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 13326  0112A6  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 13327                           
 13328                           ; BSR set to: 0
 13329  0112AA  0012               	return		;funcret
 13330  0112AC                     __end_of_caltime_to_epoch:
 13331                           	opt stack 0
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           intcon	equ	0xFF2
 13339                           intcon2	equ	0xFF1
 13340                           indf0	equ	0xFEF
 13341                           postinc0	equ	0xFEE
 13342                           fsr0h	equ	0xFEA
 13343                           fsr0l	equ	0xFE9
 13344                           wreg	equ	0xFE8
 13345                           indf1	equ	0xFE7
 13346                           postinc1	equ	0xFE6
 13347                           postdec1	equ	0xFE5
 13348                           fsr1h	equ	0xFE2
 13349                           fsr1l	equ	0xFE1
 13350                           indf2	equ	0xFDF
 13351                           postinc2	equ	0xFDE
 13352                           postdec2	equ	0xFDD
 13353                           plusw2	equ	0xFDB
 13354                           fsr2h	equ	0xFDA
 13355                           fsr2l	equ	0xFD9
 13356                           status	equ	0xFD8
 13357                           
 13358 ;; *************** function _month_length *****************
 13359 ;; Defined at:
 13360 ;;		line 55 in file "../My_library/My_RTCC.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  year            1    wreg     unsigned char 
 13363 ;;  month           1    6[BANK0 ] unsigned char 
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;  year            1   11[BANK0 ] unsigned char 
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  1    wreg      unsigned char 
 13368 ;; Registers used:
 13369 ;;		wreg, status,2, status,0, cstack
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13375 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13377 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13378 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13379 ;;Total ram usage:        6 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:   12
 13382 ;; This function calls:
 13383 ;;		___awmod
 13384 ;; This function is called by:
 13385 ;;		_epoch_to_caltime
 13386 ;;		_caltime_to_epoch
 13387 ;;		_terminal_time
 13388 ;;		_RTCC_adjust_time_inc
 13389 ;;		_RTCC_adjust_time_dec
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text55
 13394  0128B6                     __ptext55:
 13395                           	opt stack 0
 13396  0128B6                     _month_length:
 13397                           	opt stack 11
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;incstack = 0
 13401                           ;month_length@year stored from wreg
 13402  0128B6  0100               	movlb	0	; () banked
 13403  0128B8  6F6B               	movwf	month_length@year& (0+255),b
 13404                           
 13405                           ;My_RTCC.c: 56: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 13406  0128BA  0E02               	movlw	2
 13407  0128BC  0100               	movlb	0	; () banked
 13408  0128BE  1966               	xorwf	month_length@month& (0+255),w,b
 13409  0128C0  A4D8               	btfss	status,2,c
 13410  0128C2  D03E               	goto	l9010
 13411                           
 13412                           ; BSR set to: 0
 13413  0128C4  C06B  F060         	movff	month_length@year,___awmod@dividend
 13414  0128C8  0100               	movlb	0	; () banked
 13415  0128CA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13416  0128CC  0E00               	movlw	0
 13417  0128CE  0100               	movlb	0	; () banked
 13418  0128D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13419  0128D2  0E64               	movlw	100
 13420  0128D4  6F62               	movwf	___awmod@divisor& (0+255),b
 13421  0128D6  ECC7  F09B         	call	___awmod	;wreg free
 13422  0128DA  0100               	movlb	0	; () banked
 13423  0128DC  5160               	movf	?___awmod& (0+255),w,b
 13424  0128DE  0100               	movlb	0	; () banked
 13425  0128E0  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13426  0128E2  A4D8               	btfss	status,2,c
 13427  0128E4  D002               	goto	u8740
 13428  0128E6  0E01               	movlw	1
 13429  0128E8  D001               	goto	u8750
 13430  0128EA                     u8740:
 13431  0128EA  0E00               	movlw	0
 13432  0128EC                     u8750:
 13433  0128EC  0800               	sublw	0
 13434  0128EE  0100               	movlb	0	; () banked
 13435  0128F0  6F67               	movwf	??_month_length& (0+255),b
 13436  0128F2  C06B  F060         	movff	month_length@year,___awmod@dividend
 13437  0128F6  0100               	movlb	0	; () banked
 13438  0128F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13439  0128FA  0E01               	movlw	1
 13440  0128FC  0100               	movlb	0	; () banked
 13441  0128FE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13442  012900  0E90               	movlw	144
 13443  012902  6F62               	movwf	___awmod@divisor& (0+255),b
 13444  012904  ECC7  F09B         	call	___awmod	;wreg free
 13445  012908  0100               	movlb	0	; () banked
 13446  01290A  5160               	movf	?___awmod& (0+255),w,b
 13447  01290C  0100               	movlb	0	; () banked
 13448  01290E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13449  012910  A4D8               	btfss	status,2,c
 13450  012912  D004               	goto	u8760
 13451  012914  0100               	movlb	0	; () banked
 13452  012916  6B68               	clrf	(??_month_length+1)& (0+255),b
 13453  012918  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13454  01291A  D002               	goto	u8778
 13455  01291C                     u8760:
 13456  01291C  0100               	movlb	0	; () banked
 13457  01291E  6B68               	clrf	(??_month_length+1)& (0+255),b
 13458  012920                     u8778:
 13459  012920  C06B  F069         	movff	month_length@year,??_month_length+2
 13460  012924  0E03               	movlw	3
 13461  012926  0100               	movlb	0	; () banked
 13462  012928  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13463  01292A  A4D8               	btfss	status,2,c
 13464  01292C  D002               	goto	u8780
 13465  01292E  0E01               	movlw	1
 13466  012930  D001               	goto	u8790
 13467  012932                     u8780:
 13468  012932  0E00               	movlw	0
 13469  012934                     u8790:
 13470  012934  0100               	movlb	0	; () banked
 13471  012936  2568               	addwf	(??_month_length+1)& (0+255),w,b
 13472  012938  0100               	movlb	0	; () banked
 13473  01293A  2567               	addwf	??_month_length& (0+255),w,b
 13474  01293C  0F1C               	addlw	28
 13475                           
 13476                           ; BSR set to: 0
 13477                           
 13478                           ; BSR set to: 0
 13479  01293E  0012               	return	
 13480  012940                     l9010:
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;My_RTCC.c: 57: else return 31 - (((-(month & 1)^month)&13) == 4);
 13484  012940  0100               	movlb	0	; () banked
 13485  012942  5166               	movf	month_length@month& (0+255),w,b
 13486  012944  0B01               	andlw	1
 13487  012946  0100               	movlb	0	; () banked
 13488  012948  6F67               	movwf	??_month_length& (0+255),b
 13489  01294A  6B68               	clrf	(??_month_length+1)& (0+255),b
 13490  01294C  0100               	movlb	0	; () banked
 13491  01294E  1F67               	comf	??_month_length& (0+255),f,b
 13492  012950  1F68               	comf	(??_month_length+1)& (0+255),f,b
 13493  012952  4B67               	infsnz	??_month_length& (0+255),f,b
 13494  012954  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13495  012956  0100               	movlb	0	; () banked
 13496  012958  5166               	movf	month_length@month& (0+255),w,b
 13497  01295A  0100               	movlb	0	; () banked
 13498  01295C  6F69               	movwf	(??_month_length+2)& (0+255),b
 13499  01295E  6B6A               	clrf	(??_month_length+3)& (0+255),b
 13500  012960  0100               	movlb	0	; () banked
 13501  012962  5167               	movf	??_month_length& (0+255),w,b
 13502  012964  0100               	movlb	0	; () banked
 13503  012966  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 13504  012968  0100               	movlb	0	; () banked
 13505  01296A  5168               	movf	(??_month_length+1)& (0+255),w,b
 13506  01296C  0100               	movlb	0	; () banked
 13507  01296E  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 13508  012970  0E0D               	movlw	13
 13509  012972  0100               	movlb	0	; () banked
 13510  012974  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13511  012976  0E00               	movlw	0
 13512  012978  176A               	andwf	(??_month_length+3)& (0+255),f,b
 13513  01297A  0E04               	movlw	4
 13514  01297C  0100               	movlb	0	; () banked
 13515  01297E  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 13516  012980  0100               	movlb	0	; () banked
 13517  012982  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 13518  012984  A4D8               	btfss	status,2,c
 13519  012986  D002               	goto	u8800
 13520  012988  0E01               	movlw	1
 13521  01298A  D001               	goto	u8810
 13522  01298C                     u8800:
 13523  01298C  0E00               	movlw	0
 13524  01298E                     u8810:
 13525  01298E  0800               	sublw	0
 13526  012990  0F1F               	addlw	31
 13527                           
 13528                           ; BSR set to: 0
 13529  012992  0012               	return	
 13530  012994                     __end_of_month_length:
 13531                           	opt stack 0
 13532                           tblptru	equ	0xFF8
 13533                           tblptrh	equ	0xFF7
 13534                           tblptrl	equ	0xFF6
 13535                           tablat	equ	0xFF5
 13536                           prodh	equ	0xFF4
 13537                           prodl	equ	0xFF3
 13538                           intcon	equ	0xFF2
 13539                           intcon2	equ	0xFF1
 13540                           indf0	equ	0xFEF
 13541                           postinc0	equ	0xFEE
 13542                           fsr0h	equ	0xFEA
 13543                           fsr0l	equ	0xFE9
 13544                           wreg	equ	0xFE8
 13545                           indf1	equ	0xFE7
 13546                           postinc1	equ	0xFE6
 13547                           postdec1	equ	0xFE5
 13548                           fsr1h	equ	0xFE2
 13549                           fsr1l	equ	0xFE1
 13550                           indf2	equ	0xFDF
 13551                           postinc2	equ	0xFDE
 13552                           postdec2	equ	0xFDD
 13553                           plusw2	equ	0xFDB
 13554                           fsr2h	equ	0xFDA
 13555                           fsr2l	equ	0xFD9
 13556                           status	equ	0xFD8
 13557                           
 13558 ;; *************** function ___awmod *****************
 13559 ;; Defined at:
 13560 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  dividend        2    0[BANK0 ] int 
 13563 ;;  divisor         2    2[BANK0 ] int 
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;  sign            1    5[BANK0 ] unsigned char 
 13566 ;;  counter         1    4[BANK0 ] unsigned char 
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  2    0[BANK0 ] int 
 13569 ;; Registers used:
 13570 ;;		wreg, status,2, status,0
 13571 ;; Tracked objects:
 13572 ;;		On entry : 0/0
 13573 ;;		On exit  : 0/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13576 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13579 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13580 ;;Total ram usage:        6 bytes
 13581 ;; Hardware stack levels used:    1
 13582 ;; Hardware stack levels required when called:   11
 13583 ;; This function calls:
 13584 ;;		Nothing
 13585 ;; This function is called by:
 13586 ;;		_month_length
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           	psect	text56
 13591  01378E                     __ptext56:
 13592                           	opt stack 0
 13593  01378E                     ___awmod:
 13594                           	opt stack 11
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;incstack = 0
 13598  01378E  0E00               	movlw	0
 13599  013790  0100               	movlb	0	; () banked
 13600  013792  6F65               	movwf	___awmod@sign& (0+255),b
 13601                           
 13602                           ; BSR set to: 0
 13603  013794  0100               	movlb	0	; () banked
 13604  013796  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13605  013798  D008               	goto	l8958
 13606                           
 13607                           ; BSR set to: 0
 13608  01379A  0100               	movlb	0	; () banked
 13609  01379C  6D60               	negf	___awmod@dividend& (0+255),b
 13610  01379E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13611  0137A0  B0D8               	btfsc	status,0,c
 13612  0137A2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13613                           
 13614                           ; BSR set to: 0
 13615  0137A4  0E01               	movlw	1
 13616  0137A6  0100               	movlb	0	; () banked
 13617  0137A8  6F65               	movwf	___awmod@sign& (0+255),b
 13618  0137AA                     l8958:
 13619                           
 13620                           ; BSR set to: 0
 13621  0137AA  0100               	movlb	0	; () banked
 13622  0137AC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13623  0137AE  D005               	goto	l8962
 13624                           
 13625                           ; BSR set to: 0
 13626  0137B0  0100               	movlb	0	; () banked
 13627  0137B2  6D62               	negf	___awmod@divisor& (0+255),b
 13628  0137B4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13629  0137B6  B0D8               	btfsc	status,0,c
 13630  0137B8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13631  0137BA                     l8962:
 13632                           
 13633                           ; BSR set to: 0
 13634  0137BA  0100               	movlb	0	; () banked
 13635  0137BC  5162               	movf	___awmod@divisor& (0+255),w,b
 13636  0137BE  0100               	movlb	0	; () banked
 13637  0137C0  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13638  0137C2  B4D8               	btfsc	status,2,c
 13639  0137C4  D026               	goto	l8978
 13640                           
 13641                           ; BSR set to: 0
 13642  0137C6  0E01               	movlw	1
 13643  0137C8  0100               	movlb	0	; () banked
 13644  0137CA  6F64               	movwf	___awmod@counter& (0+255),b
 13645  0137CC  D006               	goto	l8968
 13646  0137CE                     l8966:
 13647                           
 13648                           ; BSR set to: 0
 13649  0137CE  0100               	movlb	0	; () banked
 13650  0137D0  90D8               	bcf	status,0,c
 13651  0137D2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13652  0137D4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13653  0137D6  0100               	movlb	0	; () banked
 13654  0137D8  2B64               	incf	___awmod@counter& (0+255),f,b
 13655  0137DA                     l8968:
 13656                           
 13657                           ; BSR set to: 0
 13658  0137DA  0100               	movlb	0	; () banked
 13659  0137DC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13660  0137DE  D7F7               	goto	l8966
 13661  0137E0                     l8970:
 13662                           
 13663                           ; BSR set to: 0
 13664  0137E0  0100               	movlb	0	; () banked
 13665  0137E2  5162               	movf	___awmod@divisor& (0+255),w,b
 13666  0137E4  0100               	movlb	0	; () banked
 13667  0137E6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13668  0137E8  0100               	movlb	0	; () banked
 13669  0137EA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13670  0137EC  0100               	movlb	0	; () banked
 13671  0137EE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13672  0137F0  A0D8               	btfss	status,0,c
 13673  0137F2  D008               	goto	l8974
 13674                           
 13675                           ; BSR set to: 0
 13676  0137F4  0100               	movlb	0	; () banked
 13677  0137F6  5162               	movf	___awmod@divisor& (0+255),w,b
 13678  0137F8  0100               	movlb	0	; () banked
 13679  0137FA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13680  0137FC  0100               	movlb	0	; () banked
 13681  0137FE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13682  013800  0100               	movlb	0	; () banked
 13683  013802  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13684  013804                     l8974:
 13685                           
 13686                           ; BSR set to: 0
 13687  013804  0100               	movlb	0	; () banked
 13688  013806  90D8               	bcf	status,0,c
 13689  013808  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13690  01380A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13691                           
 13692                           ; BSR set to: 0
 13693  01380C  0100               	movlb	0	; () banked
 13694  01380E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13695  013810  D7E7               	goto	l8970
 13696  013812                     l8978:
 13697                           
 13698                           ; BSR set to: 0
 13699  013812  0100               	movlb	0	; () banked
 13700  013814  5165               	movf	___awmod@sign& (0+255),w,b
 13701  013816  0100               	movlb	0	; () banked
 13702  013818  B4D8               	btfsc	status,2,c
 13703  01381A  D005               	goto	l8982
 13704                           
 13705                           ; BSR set to: 0
 13706  01381C  0100               	movlb	0	; () banked
 13707  01381E  6D60               	negf	___awmod@dividend& (0+255),b
 13708  013820  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13709  013822  B0D8               	btfsc	status,0,c
 13710  013824  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13711  013826                     l8982:
 13712                           
 13713                           ; BSR set to: 0
 13714  013826  C060  F060         	movff	___awmod@dividend,?___awmod
 13715  01382A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13716  01382E  0012               	return	
 13717  013830                     __end_of___awmod:
 13718                           	opt stack 0
 13719                           tblptru	equ	0xFF8
 13720                           tblptrh	equ	0xFF7
 13721                           tblptrl	equ	0xFF6
 13722                           tablat	equ	0xFF5
 13723                           prodh	equ	0xFF4
 13724                           prodl	equ	0xFF3
 13725                           intcon	equ	0xFF2
 13726                           intcon2	equ	0xFF1
 13727                           indf0	equ	0xFEF
 13728                           postinc0	equ	0xFEE
 13729                           fsr0h	equ	0xFEA
 13730                           fsr0l	equ	0xFE9
 13731                           wreg	equ	0xFE8
 13732                           indf1	equ	0xFE7
 13733                           postinc1	equ	0xFE6
 13734                           postdec1	equ	0xFE5
 13735                           fsr1h	equ	0xFE2
 13736                           fsr1l	equ	0xFE1
 13737                           indf2	equ	0xFDF
 13738                           postinc2	equ	0xFDE
 13739                           postdec2	equ	0xFDD
 13740                           plusw2	equ	0xFDB
 13741                           fsr2h	equ	0xFDA
 13742                           fsr2l	equ	0xFD9
 13743                           status	equ	0xFD8
 13744                           
 13745 ;; *************** function ___lmul *****************
 13746 ;; Defined at:
 13747 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13748 ;; Parameters:    Size  Location     Type
 13749 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13750 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  product         4   21[BANK0 ] unsigned long 
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  4   13[BANK0 ] unsigned long 
 13755 ;; Registers used:
 13756 ;;		wreg, status,2, status,0
 13757 ;; Tracked objects:
 13758 ;;		On entry : 0/0
 13759 ;;		On exit  : 0/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13762 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13765 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13766 ;;Total ram usage:       12 bytes
 13767 ;; Hardware stack levels used:    1
 13768 ;; Hardware stack levels required when called:   11
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_get_quot_rem
 13773 ;;		_caltime_to_epoch
 13774 ;;		_light_task
 13775 ;;		_RTCC_adjust_time_inc
 13776 ;;		_RTCC_adjust_time_dec
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           	psect	text57
 13781  013E4A                     __ptext57:
 13782                           	opt stack 0
 13783  013E4A                     ___lmul:
 13784                           	opt stack 12
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;incstack = 0
 13788  013E4A  0E00               	movlw	0
 13789  013E4C  0100               	movlb	0	; () banked
 13790  013E4E  6F75               	movwf	___lmul@product& (0+255),b
 13791  013E50  0E00               	movlw	0
 13792  013E52  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13793  013E54  0E00               	movlw	0
 13794  013E56  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13795  013E58  0E00               	movlw	0
 13796  013E5A  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13797  013E5C                     l9016:
 13798                           
 13799                           ; BSR set to: 0
 13800  013E5C  0100               	movlb	0	; () banked
 13801  013E5E  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13802  013E60  D010               	goto	l9020
 13803                           
 13804                           ; BSR set to: 0
 13805  013E62  0100               	movlb	0	; () banked
 13806  013E64  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13807  013E66  0100               	movlb	0	; () banked
 13808  013E68  2775               	addwf	___lmul@product& (0+255),f,b
 13809  013E6A  0100               	movlb	0	; () banked
 13810  013E6C  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13811  013E6E  0100               	movlb	0	; () banked
 13812  013E70  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13813  013E72  0100               	movlb	0	; () banked
 13814  013E74  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13815  013E76  0100               	movlb	0	; () banked
 13816  013E78  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13817  013E7A  0100               	movlb	0	; () banked
 13818  013E7C  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13819  013E7E  0100               	movlb	0	; () banked
 13820  013E80  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13821  013E82                     l9020:
 13822                           
 13823                           ; BSR set to: 0
 13824  013E82  0100               	movlb	0	; () banked
 13825  013E84  90D8               	bcf	status,0,c
 13826  013E86  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13827  013E88  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13828  013E8A  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13829  013E8C  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13830                           
 13831                           ; BSR set to: 0
 13832  013E8E  0100               	movlb	0	; () banked
 13833  013E90  90D8               	bcf	status,0,c
 13834  013E92  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13835  013E94  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13836  013E96  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13837  013E98  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13838  013E9A  0100               	movlb	0	; () banked
 13839  013E9C  516D               	movf	___lmul@multiplier& (0+255),w,b
 13840  013E9E  0100               	movlb	0	; () banked
 13841  013EA0  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13842  013EA2  0100               	movlb	0	; () banked
 13843  013EA4  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13844  013EA6  0100               	movlb	0	; () banked
 13845  013EA8  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13846  013EAA  A4D8               	btfss	status,2,c
 13847  013EAC  D7D7               	goto	l9016
 13848                           
 13849                           ; BSR set to: 0
 13850  013EAE  C075  F06D         	movff	___lmul@product,?___lmul
 13851  013EB2  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13852  013EB6  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13853  013EBA  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13854                           
 13855                           ; BSR set to: 0
 13856  013EBE  0012               	return		;funcret
 13857  013EC0                     __end_of___lmul:
 13858                           	opt stack 0
 13859                           tblptru	equ	0xFF8
 13860                           tblptrh	equ	0xFF7
 13861                           tblptrl	equ	0xFF6
 13862                           tablat	equ	0xFF5
 13863                           prodh	equ	0xFF4
 13864                           prodl	equ	0xFF3
 13865                           intcon	equ	0xFF2
 13866                           intcon2	equ	0xFF1
 13867                           indf0	equ	0xFEF
 13868                           postinc0	equ	0xFEE
 13869                           fsr0h	equ	0xFEA
 13870                           fsr0l	equ	0xFE9
 13871                           wreg	equ	0xFE8
 13872                           indf1	equ	0xFE7
 13873                           postinc1	equ	0xFE6
 13874                           postdec1	equ	0xFE5
 13875                           fsr1h	equ	0xFE2
 13876                           fsr1l	equ	0xFE1
 13877                           indf2	equ	0xFDF
 13878                           postinc2	equ	0xFDE
 13879                           postdec2	equ	0xFDD
 13880                           plusw2	equ	0xFDB
 13881                           fsr2h	equ	0xFDA
 13882                           fsr2l	equ	0xFD9
 13883                           status	equ	0xFD8
 13884                           
 13885 ;; *************** function _RTCC_to_caltime *****************
 13886 ;; Defined at:
 13887 ;;		line 89 in file "../My_library/My_RTCC.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;  tm              2    2[BANK0 ] PTR struct .
 13890 ;;		 -> now(14), 
 13891 ;; Auto vars:     Size  Location     Type
 13892 ;;  dumy            1    4[BANK0 ] unsigned char 
 13893 ;; Return value:  Size  Location     Type
 13894 ;;		None               void
 13895 ;; Registers used:
 13896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13897 ;; Tracked objects:
 13898 ;;		On entry : 0/0
 13899 ;;		On exit  : 0/0
 13900 ;;		Unchanged: 0/0
 13901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13902 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13906 ;;Total ram usage:        3 bytes
 13907 ;; Hardware stack levels used:    1
 13908 ;; Hardware stack levels required when called:   12
 13909 ;; This function calls:
 13910 ;;		_x_to_d
 13911 ;; This function is called by:
 13912 ;;		_RTCC_from_RTCC
 13913 ;; This function uses a non-reentrant model
 13914 ;;
 13915                           
 13916                           	psect	text58
 13917  013404                     __ptext58:
 13918                           	opt stack 0
 13919  013404                     _RTCC_to_caltime:
 13920                           	opt stack 12
 13921  013404                     l932:
 13922  013404  010F               	movlb	15	; () banked
 13923  013406  B93F               	btfsc	63,4,b	;volatile
 13924  013408  D7FD               	goto	l932
 13925                           
 13926                           ; BSR set to: 15
 13927                           ;My_RTCC.c: 92: RTCCFGbits.RTCPTR0 = 1;
 13928  01340A  010F               	movlb	15	; () banked
 13929  01340C  813F               	bsf	63,0,b	;volatile
 13930                           
 13931                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR1 = 1;
 13932  01340E  010F               	movlb	15	; () banked
 13933  013410  833F               	bsf	63,1,b	;volatile
 13934                           
 13935                           ; BSR set to: 15
 13936                           ;My_RTCC.c: 95: tm->YY = x_to_d(RTCVALL);
 13937  013412  0100               	movlb	0	; () banked
 13938  013414  EE20 F00A          	lfsr	2,10
 13939  013418  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13940  01341A  26D9               	addwf	fsr2l,f,c
 13941  01341C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13942  01341E  22DA               	addwfc	fsr2h,f,c
 13943  013420  010F               	movlb	15	; () banked
 13944  013422  513A               	movf	58,w,b	;volatile
 13945  013424  EC18  F0A3         	call	_x_to_d
 13946  013428  6EDF               	movwf	indf2,c
 13947                           
 13948                           ;My_RTCC.c: 96: uint8_t dumy = RTCVALH;
 13949  01342A  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13950                           
 13951                           ;My_RTCC.c: 97: tm->DD = x_to_d(RTCVALL);
 13952  01342E  0100               	movlb	0	; () banked
 13953  013430  EE20 F008          	lfsr	2,8
 13954  013434  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13955  013436  26D9               	addwf	fsr2l,f,c
 13956  013438  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13957  01343A  22DA               	addwfc	fsr2h,f,c
 13958  01343C  010F               	movlb	15	; () banked
 13959  01343E  513A               	movf	58,w,b	;volatile
 13960  013440  EC18  F0A3         	call	_x_to_d
 13961  013444  6EDF               	movwf	indf2,c
 13962                           
 13963                           ;My_RTCC.c: 98: tm->MM = x_to_d(RTCVALH);
 13964  013446  0100               	movlb	0	; () banked
 13965  013448  EE20 F009          	lfsr	2,9
 13966  01344C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13967  01344E  26D9               	addwf	fsr2l,f,c
 13968  013450  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13969  013452  22DA               	addwfc	fsr2h,f,c
 13970  013454  010F               	movlb	15	; () banked
 13971  013456  513B               	movf	59,w,b	;volatile
 13972  013458  EC18  F0A3         	call	_x_to_d
 13973  01345C  6EDF               	movwf	indf2,c
 13974                           
 13975                           ;My_RTCC.c: 99: tm->hh = x_to_d(RTCVALL);
 13976  01345E  0100               	movlb	0	; () banked
 13977  013460  EE20 F006          	lfsr	2,6
 13978  013464  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13979  013466  26D9               	addwf	fsr2l,f,c
 13980  013468  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13981  01346A  22DA               	addwfc	fsr2h,f,c
 13982  01346C  010F               	movlb	15	; () banked
 13983  01346E  513A               	movf	58,w,b	;volatile
 13984  013470  EC18  F0A3         	call	_x_to_d
 13985  013474  6EDF               	movwf	indf2,c
 13986                           
 13987                           ;My_RTCC.c: 100: tm->EE = x_to_d(RTCVALH);
 13988  013476  0100               	movlb	0	; () banked
 13989  013478  EE20 F007          	lfsr	2,7
 13990  01347C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13991  01347E  26D9               	addwf	fsr2l,f,c
 13992  013480  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13993  013482  22DA               	addwfc	fsr2h,f,c
 13994  013484  010F               	movlb	15	; () banked
 13995  013486  513B               	movf	59,w,b	;volatile
 13996  013488  EC18  F0A3         	call	_x_to_d
 13997  01348C  6EDF               	movwf	indf2,c
 13998                           
 13999                           ;My_RTCC.c: 101: tm->ss = x_to_d(RTCVALL);
 14000  01348E  0100               	movlb	0	; () banked
 14001  013490  EE20 F004          	lfsr	2,4
 14002  013494  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14003  013496  26D9               	addwf	fsr2l,f,c
 14004  013498  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14005  01349A  22DA               	addwfc	fsr2h,f,c
 14006  01349C  010F               	movlb	15	; () banked
 14007  01349E  513A               	movf	58,w,b	;volatile
 14008  0134A0  EC18  F0A3         	call	_x_to_d
 14009  0134A4  6EDF               	movwf	indf2,c
 14010                           
 14011                           ;My_RTCC.c: 102: tm->mm = x_to_d(RTCVALH);
 14012  0134A6  0100               	movlb	0	; () banked
 14013  0134A8  EE20 F005          	lfsr	2,5
 14014  0134AC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 14015  0134AE  26D9               	addwf	fsr2l,f,c
 14016  0134B0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 14017  0134B2  22DA               	addwfc	fsr2h,f,c
 14018  0134B4  010F               	movlb	15	; () banked
 14019  0134B6  513B               	movf	59,w,b	;volatile
 14020  0134B8  EC18  F0A3         	call	_x_to_d
 14021  0134BC  6EDF               	movwf	indf2,c
 14022  0134BE  0012               	return		;funcret
 14023  0134C0                     __end_of_RTCC_to_caltime:
 14024                           	opt stack 0
 14025                           tblptru	equ	0xFF8
 14026                           tblptrh	equ	0xFF7
 14027                           tblptrl	equ	0xFF6
 14028                           tablat	equ	0xFF5
 14029                           prodh	equ	0xFF4
 14030                           prodl	equ	0xFF3
 14031                           intcon	equ	0xFF2
 14032                           intcon2	equ	0xFF1
 14033                           indf0	equ	0xFEF
 14034                           postinc0	equ	0xFEE
 14035                           fsr0h	equ	0xFEA
 14036                           fsr0l	equ	0xFE9
 14037                           wreg	equ	0xFE8
 14038                           indf1	equ	0xFE7
 14039                           postinc1	equ	0xFE6
 14040                           postdec1	equ	0xFE5
 14041                           fsr1h	equ	0xFE2
 14042                           fsr1l	equ	0xFE1
 14043                           indf2	equ	0xFDF
 14044                           postinc2	equ	0xFDE
 14045                           postdec2	equ	0xFDD
 14046                           plusw2	equ	0xFDB
 14047                           fsr2h	equ	0xFDA
 14048                           fsr2l	equ	0xFD9
 14049                           status	equ	0xFD8
 14050                           
 14051 ;; *************** function _x_to_d *****************
 14052 ;; Defined at:
 14053 ;;		line 51 in file "../My_library/My_RTCC.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;  hex             1    wreg     unsigned char 
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;  hex             1    1[BANK0 ] unsigned char 
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      unsigned char 
 14060 ;; Registers used:
 14061 ;;		wreg, status,2, status,0, prodl, prodh
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14069 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14070 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14071 ;;Total ram usage:        2 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; Hardware stack levels required when called:   11
 14074 ;; This function calls:
 14075 ;;		Nothing
 14076 ;; This function is called by:
 14077 ;;		_RTCC_to_caltime
 14078 ;; This function uses a non-reentrant model
 14079 ;;
 14080                           
 14081                           	psect	text59
 14082  014630                     __ptext59:
 14083                           	opt stack 0
 14084  014630                     _x_to_d:
 14085                           	opt stack 12
 14086                           
 14087                           ;incstack = 0
 14088                           ;x_to_d@hex stored from wreg
 14089  014630  0100               	movlb	0	; () banked
 14090  014632  6F61               	movwf	x_to_d@hex& (0+255),b
 14091                           
 14092                           ;My_RTCC.c: 52: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 14093  014634  C061  F060         	movff	x_to_d@hex,??_x_to_d
 14094  014638  0E0F               	movlw	15
 14095  01463A  0100               	movlb	0	; () banked
 14096  01463C  1760               	andwf	??_x_to_d& (0+255),f,b
 14097  01463E  0100               	movlb	0	; () banked
 14098  014640  3961               	swapf	x_to_d@hex& (0+255),w,b
 14099  014642  0B0F               	andlw	15
 14100  014644  0B0F               	andlw	15
 14101  014646  0D0A               	mullw	10
 14102  014648  50F3               	movf	prodl,w,c
 14103  01464A  0100               	movlb	0	; () banked
 14104  01464C  2560               	addwf	??_x_to_d& (0+255),w,b
 14105  01464E  0012               	return	
 14106  014650                     __end_of_x_to_d:
 14107                           	opt stack 0
 14108                           tblptru	equ	0xFF8
 14109                           tblptrh	equ	0xFF7
 14110                           tblptrl	equ	0xFF6
 14111                           tablat	equ	0xFF5
 14112                           prodh	equ	0xFF4
 14113                           prodl	equ	0xFF3
 14114                           intcon	equ	0xFF2
 14115                           intcon2	equ	0xFF1
 14116                           indf0	equ	0xFEF
 14117                           postinc0	equ	0xFEE
 14118                           fsr0h	equ	0xFEA
 14119                           fsr0l	equ	0xFE9
 14120                           wreg	equ	0xFE8
 14121                           indf1	equ	0xFE7
 14122                           postinc1	equ	0xFE6
 14123                           postdec1	equ	0xFE5
 14124                           fsr1h	equ	0xFE2
 14125                           fsr1l	equ	0xFE1
 14126                           indf2	equ	0xFDF
 14127                           postinc2	equ	0xFDE
 14128                           postdec2	equ	0xFDD
 14129                           plusw2	equ	0xFDB
 14130                           fsr2h	equ	0xFDA
 14131                           fsr2l	equ	0xFD9
 14132                           status	equ	0xFD8
 14133                           
 14134 ;; *************** function _ISR *****************
 14135 ;; Defined at:
 14136 ;;		line 61 in file "PIC18F27J53-killifish_light06.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;		None
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;		None
 14141 ;; Return value:  Size  Location     Type
 14142 ;;		None               void
 14143 ;; Registers used:
 14144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;Total ram usage:       15 bytes
 14155 ;; Hardware stack levels used:    1
 14156 ;; Hardware stack levels required when called:   10
 14157 ;; This function calls:
 14158 ;;		_USB_ISR
 14159 ;;		_button_timer_interrupt
 14160 ;; This function is called by:
 14161 ;;		Interrupt level 2
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165                           	psect	intcode
 14166  001008                     __pintcode:
 14167                           	opt stack 0
 14168  001008                     _ISR:
 14169                           	opt stack 11
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;incstack = 0
 14173  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14174  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14175  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14176  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14177  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14178  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14179  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14180  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14181  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14182  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14183  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14184  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14185  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14186  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14187  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14188                           
 14189                           ;PIC18F27J53-killifish_light06.c: 62: USB_ISR();
 14190  001042  EC65  F0A3         	call	_USB_ISR	;wreg free
 14191                           
 14192                           ;PIC18F27J53-killifish_light06.c: 63: if (INTCONbits.T0IF) {
 14193  001046  B4F2               	btfsc	intcon,2,c	;volatile
 14194                           
 14195                           ;PIC18F27J53-killifish_light06.c: 64: INTCONbits.T0IF = 0;
 14196  001048  94F2               	bcf	intcon,2,c	;volatile
 14197                           
 14198                           ;PIC18F27J53-killifish_light06.c: 65: }
 14199                           ;PIC18F27J53-killifish_light06.c: 66: if (PIR1bits.TMR1IF) {
 14200  00104A  A09E               	btfss	3998,0,c	;volatile
 14201  00104C  D010               	goto	i2l8896
 14202                           
 14203                           ;PIC18F27J53-killifish_light06.c: 67: PIR1bits.TMR1IF = 0;
 14204  00104E  909E               	bcf	3998,0,c	;volatile
 14205                           
 14206                           ;PIC18F27J53-killifish_light06.c: 68: TMR1H = 0x80;
 14207  001050  0E80               	movlw	128
 14208  001052  6ECF               	movwf	4047,c	;volatile
 14209                           
 14210                           ;PIC18F27J53-killifish_light06.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 14211  001054  BA8A               	btfsc	3978,5,c	;volatile
 14212  001056  D003               	goto	i2u857_40
 14213  001058  6A4C               	clrf	??_ISR& (0+255),c
 14214  00105A  2A4C               	incf	??_ISR& (0+255),f,c
 14215  00105C  D001               	goto	i2u858_48
 14216  00105E                     i2u857_40:
 14217  00105E  6A4C               	clrf	??_ISR& (0+255),c
 14218  001060                     i2u858_48:
 14219  001060  3A4C               	swapf	??_ISR,f,c
 14220  001062  464C               	rlncf	??_ISR,f,c
 14221  001064  508A               	movf	3978,w,c	;volatile
 14222  001066  184C               	xorwf	??_ISR,w,c
 14223  001068  0BDF               	andlw	-33
 14224  00106A  184C               	xorwf	??_ISR,w,c
 14225  00106C  6E8A               	movwf	3978,c	;volatile
 14226  00106E                     i2l8896:
 14227                           
 14228                           ;PIC18F27J53-killifish_light06.c: 70: }
 14229                           ;PIC18F27J53-killifish_light06.c: 71: if (PIR2bits.TMR3IF) {
 14230  00106E  A2A1               	btfss	4001,1,c	;volatile
 14231  001070  D028               	goto	i2l1575
 14232                           
 14233                           ;PIC18F27J53-killifish_light06.c: 72: PIR2bits.TMR3IF = 0;
 14234  001072  92A1               	bcf	4001,1,c	;volatile
 14235                           
 14236                           ;PIC18F27J53-killifish_light06.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 14237  001074  0E85               	movlw	low _sw_R
 14238  001076  6E2E               	movwf	button_timer_interrupt@bt,c
 14239  001078  0E01               	movlw	high _sw_R
 14240  00107A  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14241  00107C  BA80               	btfsc	3968,5,c	;volatile
 14242  00107E  D002               	goto	i2u860_40
 14243  001080  0E01               	movlw	1
 14244  001082  D001               	goto	i2u861_40
 14245  001084                     i2u860_40:
 14246  001084  0E00               	movlw	0
 14247  001086                     i2u861_40:
 14248  001086  6E30               	movwf	button_timer_interrupt@sw_value,c
 14249  001088  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14250                           
 14251                           ;PIC18F27J53-killifish_light06.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 14252  00108C  0E81               	movlw	low _sw_G
 14253  00108E  6E2E               	movwf	button_timer_interrupt@bt,c
 14254  001090  0E01               	movlw	high _sw_G
 14255  001092  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14256  001094  BC80               	btfsc	3968,6,c	;volatile
 14257  001096  D002               	goto	i2u862_40
 14258  001098  0E01               	movlw	1
 14259  00109A  D001               	goto	i2u863_40
 14260  00109C                     i2u862_40:
 14261  00109C  0E00               	movlw	0
 14262  00109E                     i2u863_40:
 14263  00109E  6E30               	movwf	button_timer_interrupt@sw_value,c
 14264  0010A0  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14265                           
 14266                           ;PIC18F27J53-killifish_light06.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 14267  0010A4  0E7D               	movlw	low _sw_B
 14268  0010A6  6E2E               	movwf	button_timer_interrupt@bt,c
 14269  0010A8  0E01               	movlw	high _sw_B
 14270  0010AA  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14271  0010AC  BE80               	btfsc	3968,7,c	;volatile
 14272  0010AE  D002               	goto	i2u864_40
 14273  0010B0  0E01               	movlw	1
 14274  0010B2  D001               	goto	i2u865_40
 14275  0010B4                     i2u864_40:
 14276  0010B4  0E00               	movlw	0
 14277  0010B6                     i2u865_40:
 14278  0010B6  6E30               	movwf	button_timer_interrupt@sw_value,c
 14279  0010B8  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14280                           
 14281                           ;PIC18F27J53-killifish_light06.c: 76: ADC_flag = 1;
 14282  0010BC  0E01               	movlw	1
 14283  0010BE  0100               	movlb	0	; () banked
 14284  0010C0  6FE6               	movwf	_ADC_flag& (0+255),b
 14285  0010C2                     i2l1575:
 14286  0010C2  C05A  FFF5         	movff	??_ISR+14,tablat
 14287  0010C6  C059  FFF8         	movff	??_ISR+13,tblptru
 14288  0010CA  C058  FFF7         	movff	??_ISR+12,tblptrh
 14289  0010CE  C057  FFF6         	movff	??_ISR+11,tblptrl
 14290  0010D2  C056  FFF4         	movff	??_ISR+10,prodh
 14291  0010D6  C055  FFF3         	movff	??_ISR+9,prodl
 14292  0010DA  C054  FFDA         	movff	??_ISR+8,fsr2h
 14293  0010DE  C053  FFD9         	movff	??_ISR+7,fsr2l
 14294  0010E2  C052  FFE2         	movff	??_ISR+6,fsr1h
 14295  0010E6  C051  FFE1         	movff	??_ISR+5,fsr1l
 14296  0010EA  C050  FFEA         	movff	??_ISR+4,fsr0h
 14297  0010EE  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14298  0010F2  C04E  FFFB         	movff	??_ISR+2,pclatu
 14299  0010F6  C04D  FFFA         	movff	??_ISR+1,pclath
 14300  0010FA  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14301  0010FC  0011               	retfie		f
 14302  0010FE                     __end_of_ISR:
 14303                           	opt stack 0
 14304                           pclatu	equ	0xFFB
 14305                           pclath	equ	0xFFA
 14306                           tblptru	equ	0xFF8
 14307                           tblptrh	equ	0xFF7
 14308                           tblptrl	equ	0xFF6
 14309                           tablat	equ	0xFF5
 14310                           prodh	equ	0xFF4
 14311                           prodl	equ	0xFF3
 14312                           intcon	equ	0xFF2
 14313                           intcon2	equ	0xFF1
 14314                           indf0	equ	0xFEF
 14315                           postinc0	equ	0xFEE
 14316                           fsr0h	equ	0xFEA
 14317                           fsr0l	equ	0xFE9
 14318                           wreg	equ	0xFE8
 14319                           indf1	equ	0xFE7
 14320                           postinc1	equ	0xFE6
 14321                           postdec1	equ	0xFE5
 14322                           fsr1h	equ	0xFE2
 14323                           fsr1l	equ	0xFE1
 14324                           indf2	equ	0xFDF
 14325                           postinc2	equ	0xFDE
 14326                           postdec2	equ	0xFDD
 14327                           plusw2	equ	0xFDB
 14328                           fsr2h	equ	0xFDA
 14329                           fsr2l	equ	0xFD9
 14330                           status	equ	0xFD8
 14331                           
 14332 ;; *************** function _button_timer_interrupt *****************
 14333 ;; Defined at:
 14334 ;;		line 3 in file "../My_library/My_button.c"
 14335 ;; Parameters:    Size  Location     Type
 14336 ;;  bt              2    0[COMRAM] PTR struct button
 14337 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 14338 ;;  sw_value        1    2[COMRAM] unsigned char 
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;		None
 14341 ;; Return value:  Size  Location     Type
 14342 ;;		None               void
 14343 ;; Registers used:
 14344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/0
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14353 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14354 ;;Total ram usage:        5 bytes
 14355 ;; Hardware stack levels used:    1
 14356 ;; This function calls:
 14357 ;;		Nothing
 14358 ;; This function is called by:
 14359 ;;		_ISR
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text61
 14364  011534                     __ptext61:
 14365                           	opt stack 0
 14366  011534                     _button_timer_interrupt:
 14367                           	opt stack 20
 14368                           
 14369                           ;My_button.c: 4: if (sw_value) {
 14370                           
 14371                           ;incstack = 0
 14372  011534  5030               	movf	button_timer_interrupt@sw_value,w,c
 14373  011536  B4D8               	btfsc	status,2,c
 14374  011538  D098               	goto	i2l7912
 14375                           
 14376                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 14377  01153A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14378  01153E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14379  011542  0E84               	movlw	132
 14380  011544  18DE               	xorwf	postinc2,w,c
 14381  011546  E10B               	bnz	i2l525
 14382  011548  0E03               	movlw	3
 14383  01154A  18DE               	xorwf	postinc2,w,c
 14384  01154C  A4D8               	btfss	status,2,c
 14385  01154E  D007               	goto	i2l525
 14386  011550  EE20 F003          	lfsr	2,3
 14387  011554  502E               	movf	button_timer_interrupt@bt,w,c
 14388  011556  26D9               	addwf	fsr2l,f,c
 14389  011558  502F               	movf	button_timer_interrupt@bt+1,w,c
 14390  01155A  22DA               	addwfc	fsr2h,f,c
 14391  01155C  8EDF               	bsf	indf2,7,c
 14392  01155E                     i2l525:
 14393                           
 14394                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 14395  01155E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14396  011562  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14397  011566  0EBC               	movlw	188
 14398  011568  18DE               	xorwf	postinc2,w,c
 14399  01156A  E10B               	bnz	i2l526
 14400  01156C  0E02               	movlw	2
 14401  01156E  18DE               	xorwf	postinc2,w,c
 14402  011570  A4D8               	btfss	status,2,c
 14403  011572  D007               	goto	i2l526
 14404  011574  EE20 F003          	lfsr	2,3
 14405  011578  502E               	movf	button_timer_interrupt@bt,w,c
 14406  01157A  26D9               	addwf	fsr2l,f,c
 14407  01157C  502F               	movf	button_timer_interrupt@bt+1,w,c
 14408  01157E  22DA               	addwfc	fsr2h,f,c
 14409  011580  8CDF               	bsf	indf2,6,c
 14410  011582                     i2l526:
 14411                           
 14412                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 14413  011582  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14414  011586  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14415  01158A  0EF4               	movlw	244
 14416  01158C  18DE               	xorwf	postinc2,w,c
 14417  01158E  E10A               	bnz	i2l527
 14418  011590  04DE               	decf	postinc2,w,c
 14419  011592  A4D8               	btfss	status,2,c
 14420  011594  D007               	goto	i2l527
 14421  011596  EE20 F003          	lfsr	2,3
 14422  01159A  502E               	movf	button_timer_interrupt@bt,w,c
 14423  01159C  26D9               	addwf	fsr2l,f,c
 14424  01159E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14425  0115A0  22DA               	addwfc	fsr2h,f,c
 14426  0115A2  8ADF               	bsf	indf2,5,c
 14427  0115A4                     i2l527:
 14428                           
 14429                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 14430  0115A4  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14431  0115A8  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14432  0115AC  0E2C               	movlw	44
 14433  0115AE  18DE               	xorwf	postinc2,w,c
 14434  0115B0  E10A               	bnz	i2l528
 14435  0115B2  04DE               	decf	postinc2,w,c
 14436  0115B4  A4D8               	btfss	status,2,c
 14437  0115B6  D007               	goto	i2l528
 14438  0115B8  EE20 F003          	lfsr	2,3
 14439  0115BC  502E               	movf	button_timer_interrupt@bt,w,c
 14440  0115BE  26D9               	addwf	fsr2l,f,c
 14441  0115C0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14442  0115C2  22DA               	addwfc	fsr2h,f,c
 14443  0115C4  88DF               	bsf	indf2,4,c
 14444  0115C6                     i2l528:
 14445                           
 14446                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 14447  0115C6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14448  0115CA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14449  0115CE  0E96               	movlw	150
 14450  0115D0  18DE               	xorwf	postinc2,w,c
 14451  0115D2  10DE               	iorwf	postinc2,w,c
 14452  0115D4  A4D8               	btfss	status,2,c
 14453  0115D6  D007               	goto	i2l529
 14454  0115D8  EE20 F003          	lfsr	2,3
 14455  0115DC  502E               	movf	button_timer_interrupt@bt,w,c
 14456  0115DE  26D9               	addwf	fsr2l,f,c
 14457  0115E0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14458  0115E2  22DA               	addwfc	fsr2h,f,c
 14459  0115E4  86DF               	bsf	indf2,3,c
 14460  0115E6                     i2l529:
 14461                           
 14462                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 14463  0115E6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14464  0115EA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14465  0115EE  0E3C               	movlw	60
 14466  0115F0  18DE               	xorwf	postinc2,w,c
 14467  0115F2  10DE               	iorwf	postinc2,w,c
 14468  0115F4  A4D8               	btfss	status,2,c
 14469  0115F6  D007               	goto	i2l530
 14470  0115F8  EE20 F003          	lfsr	2,3
 14471  0115FC  502E               	movf	button_timer_interrupt@bt,w,c
 14472  0115FE  26D9               	addwf	fsr2l,f,c
 14473  011600  502F               	movf	button_timer_interrupt@bt+1,w,c
 14474  011602  22DA               	addwfc	fsr2h,f,c
 14475  011604  84DF               	bsf	indf2,2,c
 14476  011606                     i2l530:
 14477                           
 14478                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 14479  011606  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14480  01160A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14481  01160E  0E10               	movlw	16
 14482  011610  18DE               	xorwf	postinc2,w,c
 14483  011612  10DE               	iorwf	postinc2,w,c
 14484  011614  A4D8               	btfss	status,2,c
 14485  011616  D007               	goto	i2l531
 14486  011618  EE20 F003          	lfsr	2,3
 14487  01161C  502E               	movf	button_timer_interrupt@bt,w,c
 14488  01161E  26D9               	addwf	fsr2l,f,c
 14489  011620  502F               	movf	button_timer_interrupt@bt+1,w,c
 14490  011622  22DA               	addwfc	fsr2h,f,c
 14491  011624  82DF               	bsf	indf2,1,c
 14492  011626                     i2l531:
 14493                           
 14494                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 14495  011626  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14496  01162A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14497  01162E  0E02               	movlw	2
 14498  011630  18DE               	xorwf	postinc2,w,c
 14499  011632  10DE               	iorwf	postinc2,w,c
 14500  011634  A4D8               	btfss	status,2,c
 14501  011636  D007               	goto	i2l532
 14502  011638  EE20 F003          	lfsr	2,3
 14503  01163C  502E               	movf	button_timer_interrupt@bt,w,c
 14504  01163E  26D9               	addwf	fsr2l,f,c
 14505  011640  502F               	movf	button_timer_interrupt@bt+1,w,c
 14506  011642  22DA               	addwfc	fsr2h,f,c
 14507  011644  80DF               	bsf	indf2,0,c
 14508  011646                     i2l532:
 14509                           
 14510                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 14511  011646  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14512  01164A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14513  01164E  0E85               	movlw	133
 14514  011650  5CDE               	subwf	postinc2,w,c
 14515  011652  0E03               	movlw	3
 14516  011654  58DE               	subwfb	postinc2,w,c
 14517  011656  B0D8               	btfsc	status,0,c
 14518  011658  0012               	return	
 14519  01165A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14520  01165E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14521  011662  2ADE               	incf	postinc2,f,c
 14522  011664  0E00               	movlw	0
 14523  011666  22DD               	addwfc	postdec2,f,c
 14524                           
 14525                           ;My_button.c: 14: } else {
 14526  011668  0012               	return	
 14527  01166A                     i2l7912:
 14528                           
 14529                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 14530  01166A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14531  01166E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14532  011672  0E84               	movlw	132
 14533  011674  5CDE               	subwf	postinc2,w,c
 14534  011676  0E03               	movlw	3
 14535  011678  58DE               	subwfb	postinc2,w,c
 14536  01167A  A0D8               	btfss	status,0,c
 14537  01167C  D008               	goto	i2l7916
 14538  01167E  EE20 F002          	lfsr	2,2
 14539  011682  502E               	movf	button_timer_interrupt@bt,w,c
 14540  011684  26D9               	addwf	fsr2l,f,c
 14541  011686  502F               	movf	button_timer_interrupt@bt+1,w,c
 14542  011688  22DA               	addwfc	fsr2h,f,c
 14543  01168A  8EDF               	bsf	indf2,7,c
 14544  01168C  D081               	goto	i2l7944
 14545  01168E                     i2l7916:
 14546                           
 14547                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 14548  01168E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14549  011692  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14550  011696  0EBC               	movlw	188
 14551  011698  5CDE               	subwf	postinc2,w,c
 14552  01169A  0E02               	movlw	2
 14553  01169C  58DE               	subwfb	postinc2,w,c
 14554  01169E  A0D8               	btfss	status,0,c
 14555  0116A0  D008               	goto	i2l7920
 14556  0116A2  EE20 F002          	lfsr	2,2
 14557  0116A6  502E               	movf	button_timer_interrupt@bt,w,c
 14558  0116A8  26D9               	addwf	fsr2l,f,c
 14559  0116AA  502F               	movf	button_timer_interrupt@bt+1,w,c
 14560  0116AC  22DA               	addwfc	fsr2h,f,c
 14561  0116AE  8CDF               	bsf	indf2,6,c
 14562  0116B0  D06F               	goto	i2l7944
 14563  0116B2                     i2l7920:
 14564                           
 14565                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 14566  0116B2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14567  0116B6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14568  0116BA  0EF4               	movlw	244
 14569  0116BC  5CDE               	subwf	postinc2,w,c
 14570  0116BE  0E01               	movlw	1
 14571  0116C0  58DE               	subwfb	postinc2,w,c
 14572  0116C2  A0D8               	btfss	status,0,c
 14573  0116C4  D008               	goto	i2l7924
 14574  0116C6  EE20 F002          	lfsr	2,2
 14575  0116CA  502E               	movf	button_timer_interrupt@bt,w,c
 14576  0116CC  26D9               	addwf	fsr2l,f,c
 14577  0116CE  502F               	movf	button_timer_interrupt@bt+1,w,c
 14578  0116D0  22DA               	addwfc	fsr2h,f,c
 14579  0116D2  8ADF               	bsf	indf2,5,c
 14580  0116D4  D05D               	goto	i2l7944
 14581  0116D6                     i2l7924:
 14582                           
 14583                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 14584  0116D6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14585  0116DA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14586  0116DE  0E2C               	movlw	44
 14587  0116E0  5CDE               	subwf	postinc2,w,c
 14588  0116E2  0E01               	movlw	1
 14589  0116E4  58DE               	subwfb	postinc2,w,c
 14590  0116E6  A0D8               	btfss	status,0,c
 14591  0116E8  D008               	goto	i2l7928
 14592  0116EA  EE20 F002          	lfsr	2,2
 14593  0116EE  502E               	movf	button_timer_interrupt@bt,w,c
 14594  0116F0  26D9               	addwf	fsr2l,f,c
 14595  0116F2  502F               	movf	button_timer_interrupt@bt+1,w,c
 14596  0116F4  22DA               	addwfc	fsr2h,f,c
 14597  0116F6  88DF               	bsf	indf2,4,c
 14598  0116F8  D04B               	goto	i2l7944
 14599  0116FA                     i2l7928:
 14600                           
 14601                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 14602  0116FA  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14603  0116FE  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14604  011702  0E01               	movlw	1
 14605  011704  50DB               	movf	plusw2,w,c
 14606  011706  E104               	bnz	i2u742_40
 14607  011708  0E96               	movlw	150
 14608  01170A  5CDE               	subwf	postinc2,w,c
 14609  01170C  A0D8               	btfss	status,0,c
 14610  01170E  D008               	goto	i2l7932
 14611  011710                     i2u742_40:
 14612  011710  EE20 F002          	lfsr	2,2
 14613  011714  502E               	movf	button_timer_interrupt@bt,w,c
 14614  011716  26D9               	addwf	fsr2l,f,c
 14615  011718  502F               	movf	button_timer_interrupt@bt+1,w,c
 14616  01171A  22DA               	addwfc	fsr2h,f,c
 14617  01171C  86DF               	bsf	indf2,3,c
 14618  01171E  D038               	goto	i2l7944
 14619  011720                     i2l7932:
 14620                           
 14621                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 14622  011720  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14623  011724  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14624  011728  0E01               	movlw	1
 14625  01172A  50DB               	movf	plusw2,w,c
 14626  01172C  E104               	bnz	i2u743_40
 14627  01172E  0E3C               	movlw	60
 14628  011730  5CDE               	subwf	postinc2,w,c
 14629  011732  A0D8               	btfss	status,0,c
 14630  011734  D008               	goto	i2l7936
 14631  011736                     i2u743_40:
 14632  011736  EE20 F002          	lfsr	2,2
 14633  01173A  502E               	movf	button_timer_interrupt@bt,w,c
 14634  01173C  26D9               	addwf	fsr2l,f,c
 14635  01173E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14636  011740  22DA               	addwfc	fsr2h,f,c
 14637  011742  84DF               	bsf	indf2,2,c
 14638  011744  D025               	goto	i2l7944
 14639  011746                     i2l7936:
 14640                           
 14641                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 14642  011746  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14643  01174A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14644  01174E  0E01               	movlw	1
 14645  011750  50DB               	movf	plusw2,w,c
 14646  011752  E104               	bnz	i2u744_40
 14647  011754  0E10               	movlw	16
 14648  011756  5CDE               	subwf	postinc2,w,c
 14649  011758  A0D8               	btfss	status,0,c
 14650  01175A  D008               	goto	i2l7940
 14651  01175C                     i2u744_40:
 14652  01175C  EE20 F002          	lfsr	2,2
 14653  011760  502E               	movf	button_timer_interrupt@bt,w,c
 14654  011762  26D9               	addwf	fsr2l,f,c
 14655  011764  502F               	movf	button_timer_interrupt@bt+1,w,c
 14656  011766  22DA               	addwfc	fsr2h,f,c
 14657  011768  82DF               	bsf	indf2,1,c
 14658  01176A  D012               	goto	i2l7944
 14659  01176C                     i2l7940:
 14660                           
 14661                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 14662  01176C  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14663  011770  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14664  011774  0E01               	movlw	1
 14665  011776  50DB               	movf	plusw2,w,c
 14666  011778  E104               	bnz	i2u745_40
 14667  01177A  0E02               	movlw	2
 14668  01177C  5CDE               	subwf	postinc2,w,c
 14669  01177E  A0D8               	btfss	status,0,c
 14670  011780  D007               	goto	i2l7944
 14671  011782                     i2u745_40:
 14672  011782  EE20 F002          	lfsr	2,2
 14673  011786  502E               	movf	button_timer_interrupt@bt,w,c
 14674  011788  26D9               	addwf	fsr2l,f,c
 14675  01178A  502F               	movf	button_timer_interrupt@bt+1,w,c
 14676  01178C  22DA               	addwfc	fsr2h,f,c
 14677  01178E  80DF               	bsf	indf2,0,c
 14678  011790                     i2l7944:
 14679                           
 14680                           ;My_button.c: 23: bt->cnt_sw = 0;
 14681  011790  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14682  011794  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14683  011798  0E00               	movlw	0
 14684  01179A  6EDE               	movwf	postinc2,c
 14685  01179C  0E00               	movlw	0
 14686  01179E  6EDD               	movwf	postdec2,c
 14687                           
 14688                           ;My_button.c: 24: bt->flags &= 0x00FF;
 14689  0117A0  EE20 F002          	lfsr	2,2
 14690  0117A4  502E               	movf	button_timer_interrupt@bt,w,c
 14691  0117A6  26D9               	addwf	fsr2l,f,c
 14692  0117A8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14693  0117AA  22DA               	addwfc	fsr2h,f,c
 14694  0117AC  0EFF               	movlw	255
 14695  0117AE  16DE               	andwf	postinc2,f,c
 14696  0117B0  0E00               	movlw	0
 14697  0117B2  16DD               	andwf	postdec2,f,c
 14698  0117B4  0012               	return	
 14699  0117B6                     __end_of_button_timer_interrupt:
 14700                           	opt stack 0
 14701                           pclatu	equ	0xFFB
 14702                           pclath	equ	0xFFA
 14703                           tblptru	equ	0xFF8
 14704                           tblptrh	equ	0xFF7
 14705                           tblptrl	equ	0xFF6
 14706                           tablat	equ	0xFF5
 14707                           prodh	equ	0xFF4
 14708                           prodl	equ	0xFF3
 14709                           intcon	equ	0xFF2
 14710                           intcon2	equ	0xFF1
 14711                           indf0	equ	0xFEF
 14712                           postinc0	equ	0xFEE
 14713                           fsr0h	equ	0xFEA
 14714                           fsr0l	equ	0xFE9
 14715                           wreg	equ	0xFE8
 14716                           indf1	equ	0xFE7
 14717                           postinc1	equ	0xFE6
 14718                           postdec1	equ	0xFE5
 14719                           fsr1h	equ	0xFE2
 14720                           fsr1l	equ	0xFE1
 14721                           indf2	equ	0xFDF
 14722                           postinc2	equ	0xFDE
 14723                           postdec2	equ	0xFDD
 14724                           plusw2	equ	0xFDB
 14725                           fsr2h	equ	0xFDA
 14726                           fsr2l	equ	0xFD9
 14727                           status	equ	0xFD8
 14728                           
 14729 ;; *************** function _USB_ISR *****************
 14730 ;; Defined at:
 14731 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 14732 ;; Parameters:    Size  Location     Type
 14733 ;;		None
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;		None
 14736 ;; Return value:  Size  Location     Type
 14737 ;;		None               void
 14738 ;; Registers used:
 14739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/0
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14749 ;;Total ram usage:        0 bytes
 14750 ;; Hardware stack levels used:    1
 14751 ;; Hardware stack levels required when called:    9
 14752 ;; This function calls:
 14753 ;;		_USBDeviceTasks
 14754 ;; This function is called by:
 14755 ;;		_ISR
 14756 ;; This function uses a non-reentrant model
 14757 ;;
 14758                           
 14759                           	psect	text62
 14760  0146CA                     __ptext62:
 14761                           	opt stack 0
 14762  0146CA                     _USB_ISR:
 14763                           	opt stack 11
 14764                           
 14765                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 14766                           
 14767                           ;incstack = 0
 14768  0146CA  EC1D  F090         	call	_USBDeviceTasks	;wreg free
 14769  0146CE  0012               	return		;funcret
 14770  0146D0                     __end_of_USB_ISR:
 14771                           	opt stack 0
 14772                           pclatu	equ	0xFFB
 14773                           pclath	equ	0xFFA
 14774                           tblptru	equ	0xFF8
 14775                           tblptrh	equ	0xFF7
 14776                           tblptrl	equ	0xFF6
 14777                           tablat	equ	0xFF5
 14778                           prodh	equ	0xFF4
 14779                           prodl	equ	0xFF3
 14780                           intcon	equ	0xFF2
 14781                           intcon2	equ	0xFF1
 14782                           indf0	equ	0xFEF
 14783                           postinc0	equ	0xFEE
 14784                           fsr0h	equ	0xFEA
 14785                           fsr0l	equ	0xFE9
 14786                           wreg	equ	0xFE8
 14787                           indf1	equ	0xFE7
 14788                           postinc1	equ	0xFE6
 14789                           postdec1	equ	0xFE5
 14790                           fsr1h	equ	0xFE2
 14791                           fsr1l	equ	0xFE1
 14792                           indf2	equ	0xFDF
 14793                           postinc2	equ	0xFDE
 14794                           postdec2	equ	0xFDD
 14795                           plusw2	equ	0xFDB
 14796                           fsr2h	equ	0xFDA
 14797                           fsr2l	equ	0xFD9
 14798                           status	equ	0xFD8
 14799                           
 14800 ;; *************** function _USBDeviceTasks *****************
 14801 ;; Defined at:
 14802 ;;		line 489 in file "../My_library/usb/usb_device.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;  i               1   29[COMRAM] unsigned char 
 14807 ;; Return value:  Size  Location     Type
 14808 ;;		None               void
 14809 ;; Registers used:
 14810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14820 ;;Total ram usage:        1 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:    8
 14823 ;; This function calls:
 14824 ;;		_USBCtrlEPAllowStatusStage
 14825 ;;		_USBCtrlEPService
 14826 ;;		_USBStallHandler
 14827 ;;		_USBSuspend
 14828 ;;		_USBWakeFromSuspend
 14829 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14830 ;;		i2_USBDeviceInit
 14831 ;; This function is called by:
 14832 ;;		_USB_ISR
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text63
 14837  01203A                     __ptext63:
 14838                           	opt stack 0
 14839  01203A                     _USBDeviceTasks:
 14840                           	opt stack 11
 14841                           
 14842                           ;usb_device.c: 491: uint8_t i;
 14843                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 14844                           
 14845                           ;incstack = 0
 14846  01203A  0424               	decf	_USBDeviceState,w,c	;volatile
 14847  01203C  B4D8               	btfsc	status,2,c
 14848                           
 14849                           ;usb_device.c: 603: {
 14850                           ;usb_device.c: 613: if(!UCONbits.SE0)
 14851  01203E  BA65               	btfsc	3941,5,c	;volatile
 14852  012040  D008               	goto	i2l7446
 14853                           
 14854                           ;usb_device.c: 614: {
 14855                           ;usb_device.c: 615: {UIR = 0;};
 14856  012042  0E00               	movlw	0
 14857  012044  6E62               	movwf	3938,c	;volatile
 14858                           
 14859                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 14860  012046  010F               	movlb	15	; () banked
 14861  012048  8136               	bsf	54,0,b	;volatile
 14862                           
 14863                           ; BSR set to: 15
 14864                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 14865  01204A  010F               	movlb	15	; () banked
 14866  01204C  8936               	bsf	54,4,b	;volatile
 14867                           
 14868                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 14869  01204E  0E02               	movlw	2
 14870  012050  6E24               	movwf	_USBDeviceState,c	;volatile
 14871  012052                     i2l7446:
 14872                           
 14873                           ;usb_device.c: 622: }
 14874                           ;usb_device.c: 623: }
 14875                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14876  012052  A462               	btfss	3938,2,c	;volatile
 14877  012054  D006               	goto	i2l7454
 14878  012056  010F               	movlb	15	; () banked
 14879  012058  A536               	btfss	54,2,b	;volatile
 14880  01205A  D003               	goto	i2l7454
 14881                           
 14882                           ; BSR set to: 15
 14883                           ;usb_device.c: 640: {
 14884                           ;usb_device.c: 641: (UIR &= 0xFB);
 14885  01205C  9462               	bcf	3938,2,c	;volatile
 14886                           
 14887                           ; BSR set to: 15
 14888                           ;usb_device.c: 645: USBWakeFromSuspend();
 14889  01205E  EC20  F0A2         	call	_USBWakeFromSuspend	;wreg free
 14890  012062                     i2l7454:
 14891                           
 14892                           ;usb_device.c: 647: }
 14893                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14894  012062  A265               	btfss	3941,1,c	;volatile
 14895  012064  D002               	goto	i2l158
 14896                           
 14897                           ;usb_device.c: 653: {
 14898                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14899  012066  98A1               	bcf	4001,4,c	;volatile
 14900                           
 14901                           ;usb_device.c: 655: return;
 14902  012068  0012               	return	
 14903  01206A                     i2l158:
 14904                           
 14905                           ;usb_device.c: 656: }
 14906                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14907  01206A  A062               	btfss	3938,0,c	;volatile
 14908  01206C  D009               	goto	i2l7468
 14909  01206E  010F               	movlb	15	; () banked
 14910  012070  A136               	btfss	54,0,b	;volatile
 14911  012072  D006               	goto	i2l7468
 14912                           
 14913                           ; BSR set to: 15
 14914                           ;usb_device.c: 669: {
 14915                           ;usb_device.c: 670: USBDeviceInit();
 14916  012074  ECC2  F090         	call	i2_USBDeviceInit	;wreg free
 14917                           
 14918                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14919  012078  88A0               	bsf	4000,4,c	;volatile
 14920                           
 14921                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14922  01207A  0E04               	movlw	4
 14923  01207C  6E24               	movwf	_USBDeviceState,c	;volatile
 14924                           
 14925                           ;usb_device.c: 686: (UIR &= 0xFE);
 14926  01207E  9062               	bcf	3938,0,c	;volatile
 14927  012080                     i2l7468:
 14928                           
 14929                           ;usb_device.c: 687: }
 14930                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14931  012080  A862               	btfss	3938,4,c	;volatile
 14932  012082  D006               	goto	i2l7476
 14933  012084  010F               	movlb	15	; () banked
 14934  012086  A936               	btfss	54,4,b	;volatile
 14935  012088  D003               	goto	i2l7476
 14936                           
 14937                           ; BSR set to: 15
 14938                           ;usb_device.c: 693: {
 14939                           ;usb_device.c: 698: USBSuspend();
 14940  01208A  EC7C  F0A2         	call	_USBSuspend	;wreg free
 14941                           
 14942                           ;usb_device.c: 701: (UIR &= 0xEF);
 14943  01208E  9862               	bcf	3938,4,c	;volatile
 14944  012090                     i2l7476:
 14945                           
 14946                           ;usb_device.c: 702: }
 14947                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 14948  012090  AC62               	btfss	3938,6,c	;volatile
 14949  012092  D019               	goto	i2l7492
 14950                           
 14951                           ;usb_device.c: 705: {
 14952                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 14953  012094  010F               	movlb	15	; () banked
 14954  012096  AD36               	btfss	54,6,b	;volatile
 14955  012098  D00E               	goto	i2l7482
 14956                           
 14957                           ; BSR set to: 15
 14958                           ;usb_device.c: 707: {
 14959                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14960  01209A  0E00               	movlw	0
 14961  01209C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14962  01209E  0E73               	movlw	115
 14963  0120A0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14964  0120A2  0E00               	movlw	0
 14965  0120A4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14966  0120A6  0E00               	movlw	0
 14967  0120A8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14968  0120AA  0E00               	movlw	0
 14969  0120AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14970  0120AE  0E01               	movlw	1
 14971  0120B0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14972  0120B2  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14973  0120B6                     i2l7482:
 14974                           
 14975                           ;usb_device.c: 709: }
 14976                           ;usb_device.c: 710: (UIR &= 0xBF);
 14977  0120B6  9C62               	bcf	3938,6,c	;volatile
 14978                           
 14979                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14980  0120B8  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14981  0120BA  A4D8               	btfss	status,2,c
 14982                           
 14983                           ;usb_device.c: 736: {
 14984                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14985  0120BC  0627               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14986                           
 14987                           ;usb_device.c: 738: }
 14988                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14989  0120BE  5027               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14990  0120C0  B4D8               	btfsc	status,2,c
 14991                           
 14992                           ;usb_device.c: 745: {
 14993                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14994  0120C2  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14995  0120C6                     i2l7492:
 14996                           
 14997                           ;usb_device.c: 747: }
 14998                           ;usb_device.c: 749: }
 14999                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 15000  0120C6  AA62               	btfss	3938,5,c	;volatile
 15001  0120C8  D004               	goto	i2l7498
 15002  0120CA  010F               	movlb	15	; () banked
 15003  0120CC  BB36               	btfsc	54,5,b	;volatile
 15004                           
 15005                           ; BSR set to: 15
 15006                           ;usb_device.c: 752: {
 15007                           ;usb_device.c: 753: USBStallHandler();
 15008  0120CE  EC34  F0A1         	call	_USBStallHandler	;wreg free
 15009  0120D2                     i2l7498:
 15010                           
 15011                           ;usb_device.c: 754: }
 15012                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15013  0120D2  A262               	btfss	3938,1,c	;volatile
 15014  0120D4  D012               	goto	i2l7506
 15015  0120D6  010F               	movlb	15	; () banked
 15016  0120D8  A336               	btfss	54,1,b	;volatile
 15017  0120DA  D00F               	goto	i2l7506
 15018                           
 15019                           ; BSR set to: 15
 15020                           ;usb_device.c: 757: {
 15021                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 15022  0120DC  0E7F               	movlw	127
 15023  0120DE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15024  0120E0  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15025  0120E2  0E00               	movlw	0
 15026  0120E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15027  0120E6  0E00               	movlw	0
 15028  0120E8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15029  0120EA  0E00               	movlw	0
 15030  0120EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15031  0120EE  0E01               	movlw	1
 15032  0120F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15033  0120F2  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15034                           
 15035                           ;usb_device.c: 759: {UEIR = 0;};
 15036  0120F6  0E00               	movlw	0
 15037  0120F8  6E63               	movwf	3939,c	;volatile
 15038  0120FA                     i2l7506:
 15039                           
 15040                           ;usb_device.c: 767: }
 15041                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 15042  0120FA  0E04               	movlw	4
 15043  0120FC  6024               	cpfslt	_USBDeviceState,c	;volatile
 15044  0120FE  D002               	goto	i2l168
 15045                           
 15046                           ;usb_device.c: 775: {
 15047                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 15048  012100  98A1               	bcf	4001,4,c	;volatile
 15049                           
 15050                           ;usb_device.c: 777: return;
 15051  012102  0012               	return	
 15052  012104                     i2l168:
 15053                           
 15054                           ;usb_device.c: 778: }
 15055                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 15056  012104  010F               	movlb	15	; () banked
 15057  012106  A736               	btfss	54,3,b	;volatile
 15058  012108  D03B               	goto	i2l169
 15059                           
 15060                           ; BSR set to: 15
 15061                           ;usb_device.c: 784: {
 15062                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 15063  01210A  0E00               	movlw	0
 15064  01210C  6E4B               	movwf	USBDeviceTasks@i,c
 15065  01210E                     i2l7512:
 15066                           
 15067                           ; BSR set to: 15
 15068  01210E  0E03               	movlw	3
 15069  012110  644B               	cpfsgt	USBDeviceTasks@i,c
 15070  012112  D001               	goto	i2l170
 15071  012114  D035               	goto	i2l169
 15072  012116                     i2l170:
 15073                           
 15074                           ;usb_device.c: 786: {
 15075                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 15076  012116  A662               	btfss	3938,3,c	;volatile
 15077  012118  D033               	goto	i2l169
 15078                           
 15079                           ;usb_device.c: 788: {
 15080                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 15081  01211A  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 15082                           
 15083                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 15084  01211E  302D               	rrcf	_USTATcopy,w,c	;volatile
 15085  012120  32E8               	rrcf	wreg,f,c
 15086  012122  32E8               	rrcf	wreg,f,c
 15087  012124  0B0F               	andlw	15
 15088  012126  6E2A               	movwf	_endpoint_number,c	;volatile
 15089                           
 15090                           ;usb_device.c: 793: (UIR &= 0xF7);
 15091  012128  9662               	bcf	3938,3,c	;volatile
 15092                           
 15093                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 15094  01212A  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15095  01212C  D00A               	goto	i2l7526
 15096                           
 15097                           ;usb_device.c: 799: {
 15098                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15099  01212E  502A               	movf	_endpoint_number,w,c	;volatile
 15100  012130  0D01               	mullw	1
 15101  012132  0ED5               	movlw	low _ep_data_out
 15102  012134  24F3               	addwf	prodl,w,c
 15103  012136  6ED9               	movwf	fsr2l,c
 15104  012138  0E00               	movlw	high _ep_data_out
 15105  01213A  20F4               	addwfc	prodh,w,c
 15106  01213C  6EDA               	movwf	fsr2h,c
 15107  01213E  0100               	movlb	0	; () banked
 15108  012140  D008               	goto	L5
 15109  012142                     i2l7526:
 15110                           
 15111                           ;usb_device.c: 802: else
 15112                           ;usb_device.c: 803: {
 15113                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15114  012142  502A               	movf	_endpoint_number,w,c	;volatile
 15115  012144  0D01               	mullw	1
 15116  012146  0E16               	movlw	low _ep_data_in
 15117  012148  24F3               	addwf	prodl,w,c
 15118  01214A  6ED9               	movwf	fsr2l,c
 15119  01214C  0E00               	movlw	high _ep_data_in
 15120  01214E  20F4               	addwfc	prodh,w,c
 15121  012150  6EDA               	movwf	fsr2h,c
 15122  012152                     L5:
 15123  012152  70DF               	btg	indf2,0,c
 15124                           
 15125                           ;usb_device.c: 805: }
 15126                           ;usb_device.c: 810: if(endpoint_number == 0)
 15127  012154  502A               	movf	_endpoint_number,w,c	;volatile
 15128  012156  A4D8               	btfss	status,2,c
 15129  012158  D003               	goto	i2l7532
 15130                           
 15131                           ;usb_device.c: 811: {
 15132                           ;usb_device.c: 812: USBCtrlEPService();
 15133  01215A  ECB9  F097         	call	_USBCtrlEPService	;wreg free
 15134                           
 15135                           ;usb_device.c: 813: }
 15136  01215E  D00E               	goto	i2l7534
 15137  012160                     i2l7532:
 15138                           
 15139                           ;usb_device.c: 814: else
 15140                           ;usb_device.c: 815: {
 15141                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15142  012160  0E00               	movlw	0
 15143  012162  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15144  012164  0E72               	movlw	114
 15145  012166  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15146  012168  0E2D               	movlw	low _USTATcopy
 15147  01216A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15148  01216C  0E00               	movlw	high _USTATcopy
 15149  01216E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15150  012170  0E00               	movlw	0
 15151  012172  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15152  012174  0E00               	movlw	0
 15153  012176  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15154  012178  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15155  01217C                     i2l7534:
 15156  01217C  2A4B               	incf	USBDeviceTasks@i,f,c
 15157  01217E  D7C7               	goto	i2l7512
 15158  012180                     i2l169:
 15159                           
 15160                           ;usb_device.c: 822: }
 15161                           ;usb_device.c: 823: }
 15162                           ;usb_device.c: 824: }
 15163                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 15164  012180  98A1               	bcf	4001,4,c	;volatile
 15165  012182  0012               	return		;funcret
 15166  012184                     __end_of_USBDeviceTasks:
 15167                           	opt stack 0
 15168                           pclatu	equ	0xFFB
 15169                           pclath	equ	0xFFA
 15170                           tblptru	equ	0xFF8
 15171                           tblptrh	equ	0xFF7
 15172                           tblptrl	equ	0xFF6
 15173                           tablat	equ	0xFF5
 15174                           prodh	equ	0xFF4
 15175                           prodl	equ	0xFF3
 15176                           intcon	equ	0xFF2
 15177                           intcon2	equ	0xFF1
 15178                           indf0	equ	0xFEF
 15179                           postinc0	equ	0xFEE
 15180                           fsr0h	equ	0xFEA
 15181                           fsr0l	equ	0xFE9
 15182                           wreg	equ	0xFE8
 15183                           indf1	equ	0xFE7
 15184                           postinc1	equ	0xFE6
 15185                           postdec1	equ	0xFE5
 15186                           fsr1h	equ	0xFE2
 15187                           fsr1l	equ	0xFE1
 15188                           indf2	equ	0xFDF
 15189                           postinc2	equ	0xFDE
 15190                           postdec2	equ	0xFDD
 15191                           plusw2	equ	0xFDB
 15192                           fsr2h	equ	0xFDA
 15193                           fsr2l	equ	0xFD9
 15194                           status	equ	0xFD8
 15195                           
 15196 ;; *************** function i2_USBDeviceInit *****************
 15197 ;; Defined at:
 15198 ;;		line 298 in file "../My_library/usb/usb_device.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;		None
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15203 ;; Return value:  Size  Location     Type
 15204 ;;		None               void
 15205 ;; Registers used:
 15206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15207 ;; Tracked objects:
 15208 ;;		On entry : 0/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15216 ;;Total ram usage:        1 bytes
 15217 ;; Hardware stack levels used:    1
 15218 ;; Hardware stack levels required when called:    1
 15219 ;; This function calls:
 15220 ;;		i2_memset
 15221 ;; This function is called by:
 15222 ;;		_USBDeviceTasks
 15223 ;; This function uses a non-reentrant model
 15224 ;;
 15225                           
 15226                           	psect	text64
 15227  012184                     __ptext64:
 15228                           	opt stack 0
 15229  012184                     i2_USBDeviceInit:
 15230                           	opt stack 17
 15231                           
 15232                           ;usb_device.c: 300: uint8_t i;
 15233                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 15234                           
 15235                           ;incstack = 0
 15236  012184  98A0               	bcf	4000,4,c	;volatile
 15237                           
 15238                           ;usb_device.c: 305: {UEIR = 0;};
 15239  012186  0E00               	movlw	0
 15240  012188  6E63               	movwf	3939,c	;volatile
 15241                           
 15242                           ;usb_device.c: 308: {UIR = 0;};
 15243  01218A  0E00               	movlw	0
 15244  01218C  6E62               	movwf	3938,c	;volatile
 15245                           
 15246                           ;usb_device.c: 311: UEP0 = 0;
 15247  01218E  0E00               	movlw	0
 15248  012190  010F               	movlb	15	; () banked
 15249  012192  6F26               	movwf	38,b	;volatile
 15250                           
 15251                           ; BSR set to: 15
 15252                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 15253  012194  0E27               	movlw	39
 15254  012196  6E2E               	movwf	i2memset@p1,c
 15255  012198  0E0F               	movlw	15
 15256  01219A  6E2F               	movwf	i2memset@p1+1,c
 15257  01219C  0E00               	movlw	0
 15258  01219E  6E31               	movwf	i2memset@c+1,c
 15259  0121A0  0E00               	movlw	0
 15260  0121A2  6E30               	movwf	i2memset@c,c
 15261  0121A4  0E00               	movlw	0
 15262  0121A6  6E33               	movwf	i2memset@n+1,c
 15263  0121A8  0E02               	movlw	2
 15264  0121AA  6E32               	movwf	i2memset@n,c
 15265  0121AC  EC92  F0A2         	call	i2_memset	;wreg free
 15266                           
 15267                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15268  0121B0  0E16               	movlw	22
 15269  0121B2  010F               	movlb	15	; () banked
 15270  0121B4  6F39               	movwf	57,b	;volatile
 15271                           
 15272                           ; BSR set to: 15
 15273  0121B6  0E9F               	movlw	159
 15274  0121B8  010F               	movlb	15	; () banked
 15275  0121BA  6F37               	movwf	55,b	;volatile
 15276                           
 15277                           ; BSR set to: 15
 15278  0121BC  0E7B               	movlw	123
 15279  0121BE  010F               	movlb	15	; () banked
 15280  0121C0  6F36               	movwf	54,b	;volatile
 15281                           
 15282                           ; BSR set to: 15
 15283                           ;usb_device.c: 318: ;
 15284                           ;usb_device.c: 321: ;
 15285                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15286  0121C2  0E00               	movlw	0
 15287  0121C4  6E36               	movwf	i2USBDeviceInit@i,c
 15288  0121C6                     i2l7382:
 15289                           
 15290                           ; BSR set to: 15
 15291  0121C6  0E0B               	movlw	11
 15292  0121C8  6436               	cpfsgt	i2USBDeviceInit@i,c
 15293  0121CA  D001               	goto	i2l7386
 15294  0121CC  D00E               	goto	i2l146
 15295  0121CE                     i2l7386:
 15296                           
 15297                           ;usb_device.c: 325: {
 15298                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 15299  0121CE  5036               	movf	i2USBDeviceInit@i,w,c
 15300  0121D0  0D04               	mullw	4
 15301  0121D2  0E00               	movlw	0
 15302  0121D4  24F3               	addwf	prodl,w,c
 15303  0121D6  6ED9               	movwf	fsr2l,c
 15304  0121D8  0E0D               	movlw	13
 15305  0121DA  20F4               	addwfc	prodh,w,c
 15306  0121DC  6EDA               	movwf	fsr2h,c
 15307  0121DE  6ADE               	clrf	postinc2,c
 15308  0121E0  6ADE               	clrf	postinc2,c
 15309  0121E2  6ADE               	clrf	postinc2,c
 15310  0121E4  6ADD               	clrf	postdec2,c
 15311  0121E6  2A36               	incf	i2USBDeviceInit@i,f,c
 15312  0121E8  D7EE               	goto	i2l7382
 15313  0121EA                     i2l146:
 15314                           
 15315                           ;usb_device.c: 327: }
 15316                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 15317  0121EA  8C65               	bsf	3941,6,c	;volatile
 15318                           
 15319                           ;usb_device.c: 333: UADDR = 0x00;
 15320  0121EC  0E00               	movlw	0
 15321  0121EE  010F               	movlb	15	; () banked
 15322  0121F0  6F38               	movwf	56,b	;volatile
 15323                           
 15324                           ; BSR set to: 15
 15325                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 15326  0121F2  9865               	bcf	3941,4,c	;volatile
 15327                           
 15328                           ; BSR set to: 15
 15329                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 15330  0121F4  9C65               	bcf	3941,6,c	;volatile
 15331                           
 15332                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 15333  0121F6  D009               	goto	i2l7406
 15334  0121F8                     i2l7398:
 15335                           
 15336                           ;usb_device.c: 343: {
 15337                           ;usb_device.c: 344: (UIR &= 0xF7);
 15338  0121F8  9662               	bcf	3938,3,c	;volatile
 15339                           
 15340                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 15341  0121FA  0E00               	movlw	0
 15342  0121FC  6E0D               	movwf	_inPipes+3,c	;volatile
 15343                           
 15344                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 15345  0121FE  0E00               	movlw	0
 15346  012200  6E04               	movwf	_outPipes+3,c	;volatile
 15347                           
 15348                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 15349  012202  0E00               	movlw	0
 15350  012204  6E06               	movwf	_outPipes+5,c	;volatile
 15351  012206  0E00               	movlw	0
 15352  012208  6E05               	movwf	_outPipes+4,c	;volatile
 15353  01220A                     i2l7406:
 15354  01220A  B662               	btfsc	3938,3,c	;volatile
 15355  01220C  D7F5               	goto	i2l7398
 15356                           
 15357                           ;usb_device.c: 349: }
 15358                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 15359  01220E  0E01               	movlw	1
 15360  012210  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15361                           
 15362                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 15363  012212  0E01               	movlw	1
 15364  012214  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15365                           
 15366                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 15367  012216  0E00               	movlw	0
 15368  012218  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15369                           
 15370                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 15371  01221A  0E00               	movlw	0
 15372  01221C  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15373                           
 15374                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 15375  01221E  0E00               	movlw	0
 15376  012220  0100               	movlb	0	; () banked
 15377  012222  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15378                           
 15379                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 15380  012224  0E00               	movlw	0
 15381  012226  6E36               	movwf	i2USBDeviceInit@i,c
 15382  012228                     i2l7410:
 15383                           
 15384                           ; BSR set to: 0
 15385  012228  0E02               	movlw	2
 15386  01222A  6436               	cpfsgt	i2USBDeviceInit@i,c
 15387  01222C  D001               	goto	i2l7414
 15388  01222E  D02E               	goto	i2l7420
 15389  012230                     i2l7414:
 15390                           
 15391                           ;usb_device.c: 363: {
 15392                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 15393  012230  5036               	movf	i2USBDeviceInit@i,w,c
 15394  012232  0D02               	mullw	2
 15395  012234  0E10               	movlw	low _pBDTEntryIn
 15396  012236  24F3               	addwf	prodl,w,c
 15397  012238  6ED9               	movwf	fsr2l,c
 15398  01223A  0E00               	movlw	high _pBDTEntryIn
 15399  01223C  20F4               	addwfc	prodh,w,c
 15400  01223E  6EDA               	movwf	fsr2h,c
 15401  012240  0E00               	movlw	0
 15402  012242  6EDE               	movwf	postinc2,c
 15403  012244  0E00               	movlw	0
 15404  012246  6EDD               	movwf	postdec2,c
 15405                           
 15406                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 15407  012248  5036               	movf	i2USBDeviceInit@i,w,c
 15408  01224A  0D02               	mullw	2
 15409  01224C  0E0A               	movlw	low _pBDTEntryOut
 15410  01224E  24F3               	addwf	prodl,w,c
 15411  012250  6ED9               	movwf	fsr2l,c
 15412  012252  0E01               	movlw	high _pBDTEntryOut
 15413  012254  20F4               	addwfc	prodh,w,c
 15414  012256  6EDA               	movwf	fsr2h,c
 15415  012258  0E00               	movlw	0
 15416  01225A  6EDE               	movwf	postinc2,c
 15417  01225C  0E00               	movlw	0
 15418  01225E  6EDD               	movwf	postdec2,c
 15419                           
 15420                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 15421  012260  5036               	movf	i2USBDeviceInit@i,w,c
 15422  012262  0D01               	mullw	1
 15423  012264  0E16               	movlw	low _ep_data_in
 15424  012266  24F3               	addwf	prodl,w,c
 15425  012268  6ED9               	movwf	fsr2l,c
 15426  01226A  0E00               	movlw	high _ep_data_in
 15427  01226C  20F4               	addwfc	prodh,w,c
 15428  01226E  6EDA               	movwf	fsr2h,c
 15429  012270  0E00               	movlw	0
 15430  012272  6EDF               	movwf	indf2,c
 15431                           
 15432                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 15433  012274  5036               	movf	i2USBDeviceInit@i,w,c
 15434  012276  0D01               	mullw	1
 15435  012278  0ED5               	movlw	low _ep_data_out
 15436  01227A  24F3               	addwf	prodl,w,c
 15437  01227C  6ED9               	movwf	fsr2l,c
 15438  01227E  0E00               	movlw	high _ep_data_out
 15439  012280  20F4               	addwfc	prodh,w,c
 15440  012282  6EDA               	movwf	fsr2h,c
 15441  012284  0E00               	movlw	0
 15442  012286  6EDF               	movwf	indf2,c
 15443  012288  2A36               	incf	i2USBDeviceInit@i,f,c
 15444  01228A  D7CE               	goto	i2l7410
 15445  01228C                     i2l7420:
 15446                           
 15447                           ;usb_device.c: 368: }
 15448                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15449  01228C  0E08               	movlw	8
 15450  01228E  6E10               	movwf	_pBDTEntryIn,c
 15451  012290  0E0D               	movlw	13
 15452  012292  6E11               	movwf	_pBDTEntryIn+1,c
 15453                           
 15454                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15455  012294  0E16               	movlw	22
 15456  012296  010F               	movlb	15	; () banked
 15457  012298  6F26               	movwf	38,b	;volatile
 15458                           
 15459                           ; BSR set to: 15
 15460                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15461  01229A  0E0D               	movlw	13
 15462  01229C  010D               	movlb	13	; () banked
 15463  01229E  6F03               	movwf	3,b	;volatile
 15464  0122A0  0E30               	movlw	48
 15465  0122A2  6F02               	movwf	2,b	;volatile
 15466                           
 15467                           ; BSR set to: 13
 15468                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15469  0122A4  0E08               	movlw	8
 15470  0122A6  010D               	movlb	13	; () banked
 15471  0122A8  6F01               	movwf	1,b	;volatile
 15472                           
 15473                           ; BSR set to: 13
 15474                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15475  0122AA  0E04               	movlw	4
 15476  0122AC  010D               	movlb	13	; () banked
 15477  0122AE  6F00               	movwf	0,b	;volatile
 15478                           
 15479                           ; BSR set to: 13
 15480                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15481  0122B0  010D               	movlb	13	; () banked
 15482  0122B2  8F00               	bsf	0,7,b	;volatile
 15483                           
 15484                           ; BSR set to: 13
 15485                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15486  0122B4  0E00               	movlw	0
 15487  0122B6  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15488                           
 15489                           ; BSR set to: 13
 15490                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15491  0122B8  0E00               	movlw	0
 15492  0122BA  6E24               	movwf	_USBDeviceState,c	;volatile
 15493                           
 15494                           ; BSR set to: 13
 15495  0122BC  0012               	return		;funcret
 15496  0122BE                     __end_ofi2_USBDeviceInit:
 15497                           	opt stack 0
 15498                           pclatu	equ	0xFFB
 15499                           pclath	equ	0xFFA
 15500                           tblptru	equ	0xFF8
 15501                           tblptrh	equ	0xFF7
 15502                           tblptrl	equ	0xFF6
 15503                           tablat	equ	0xFF5
 15504                           prodh	equ	0xFF4
 15505                           prodl	equ	0xFF3
 15506                           intcon	equ	0xFF2
 15507                           intcon2	equ	0xFF1
 15508                           indf0	equ	0xFEF
 15509                           postinc0	equ	0xFEE
 15510                           fsr0h	equ	0xFEA
 15511                           fsr0l	equ	0xFE9
 15512                           wreg	equ	0xFE8
 15513                           indf1	equ	0xFE7
 15514                           postinc1	equ	0xFE6
 15515                           postdec1	equ	0xFE5
 15516                           fsr1h	equ	0xFE2
 15517                           fsr1l	equ	0xFE1
 15518                           indf2	equ	0xFDF
 15519                           postinc2	equ	0xFDE
 15520                           postdec2	equ	0xFDD
 15521                           plusw2	equ	0xFDB
 15522                           fsr2h	equ	0xFDA
 15523                           fsr2l	equ	0xFD9
 15524                           status	equ	0xFD8
 15525                           
 15526 ;; *************** function _USBWakeFromSuspend *****************
 15527 ;; Defined at:
 15528 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;		None
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;		None
 15533 ;; Return value:  Size  Location     Type
 15534 ;;		None               void
 15535 ;; Registers used:
 15536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15546 ;;Total ram usage:        0 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:    4
 15549 ;; This function calls:
 15550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15551 ;; This function is called by:
 15552 ;;		_USBDeviceTasks
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           	psect	text65
 15557  014440                     __ptext65:
 15558                           	opt stack 0
 15559  014440                     _USBWakeFromSuspend:
 15560                           	opt stack 14
 15561                           
 15562                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 15563                           
 15564                           ; BSR set to: 13
 15565                           ;incstack = 0
 15566  014440  0E00               	movlw	0
 15567  014442  0100               	movlb	0	; () banked
 15568  014444  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15572  014446  0E00               	movlw	0
 15573  014448  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15574  01444A  0E74               	movlw	116
 15575  01444C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15576  01444E  0E00               	movlw	0
 15577  014450  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15578  014452  0E00               	movlw	0
 15579  014454  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15580  014456  0E00               	movlw	0
 15581  014458  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15582  01445A  0E00               	movlw	0
 15583  01445C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15584  01445E  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15585                           
 15586                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 15587  014462  9265               	bcf	3941,1,c	;volatile
 15588                           
 15589                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 15590  014464  010F               	movlb	15	; () banked
 15591  014466  9536               	bcf	54,2,b	;volatile
 15592                           
 15593                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 15594  014468  D001               	goto	i2l7052
 15595  01446A                     i2l7050:
 15596                           
 15597                           ;usb_device.c: 2342: {
 15598                           ;usb_device.c: 2343: (UIR &= 0xFB);
 15599  01446A  9462               	bcf	3938,2,c	;volatile
 15600  01446C                     i2l7052:
 15601  01446C  A462               	btfss	3938,2,c	;volatile
 15602  01446E  0012               	return	
 15603  014470  D7FC               	goto	i2l7050
 15604  014472                     __end_of_USBWakeFromSuspend:
 15605                           	opt stack 0
 15606                           pclatu	equ	0xFFB
 15607                           pclath	equ	0xFFA
 15608                           tblptru	equ	0xFF8
 15609                           tblptrh	equ	0xFF7
 15610                           tblptrl	equ	0xFF6
 15611                           tablat	equ	0xFF5
 15612                           prodh	equ	0xFF4
 15613                           prodl	equ	0xFF3
 15614                           intcon	equ	0xFF2
 15615                           intcon2	equ	0xFF1
 15616                           indf0	equ	0xFEF
 15617                           postinc0	equ	0xFEE
 15618                           fsr0h	equ	0xFEA
 15619                           fsr0l	equ	0xFE9
 15620                           wreg	equ	0xFE8
 15621                           indf1	equ	0xFE7
 15622                           postinc1	equ	0xFE6
 15623                           postdec1	equ	0xFE5
 15624                           fsr1h	equ	0xFE2
 15625                           fsr1l	equ	0xFE1
 15626                           indf2	equ	0xFDF
 15627                           postinc2	equ	0xFDE
 15628                           postdec2	equ	0xFDD
 15629                           plusw2	equ	0xFDB
 15630                           fsr2h	equ	0xFDA
 15631                           fsr2l	equ	0xFD9
 15632                           status	equ	0xFD8
 15633                           
 15634 ;; *************** function _USBSuspend *****************
 15635 ;; Defined at:
 15636 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;		None
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;		None
 15641 ;; Return value:  Size  Location     Type
 15642 ;;		None               void
 15643 ;; Registers used:
 15644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15645 ;; Tracked objects:
 15646 ;;		On entry : 0/0
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15654 ;;Total ram usage:        0 bytes
 15655 ;; Hardware stack levels used:    1
 15656 ;; Hardware stack levels required when called:    4
 15657 ;; This function calls:
 15658 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15659 ;; This function is called by:
 15660 ;;		_USBDeviceTasks
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664                           	psect	text66
 15665  0144F8                     __ptext66:
 15666                           	opt stack 0
 15667  0144F8                     _USBSuspend:
 15668                           	opt stack 14
 15669                           
 15670                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15671                           
 15672                           ;incstack = 0
 15673  0144F8  010F               	movlb	15	; () banked
 15674  0144FA  8536               	bsf	54,2,b	;volatile
 15675                           
 15676                           ; BSR set to: 15
 15677                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15678  0144FC  9862               	bcf	3938,4,c	;volatile
 15679                           
 15680                           ; BSR set to: 15
 15681                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15682  0144FE  8265               	bsf	3941,1,c	;volatile
 15683                           
 15684                           ; BSR set to: 15
 15685                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15686  014500  0E01               	movlw	1
 15687  014502  0100               	movlb	0	; () banked
 15688  014504  6FE9               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15689                           
 15690                           ; BSR set to: 0
 15691                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15692  014506  0E00               	movlw	0
 15693  014508  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15694  01450A  0E75               	movlw	117
 15695  01450C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15696  01450E  0E00               	movlw	0
 15697  014510  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15698  014512  0E00               	movlw	0
 15699  014514  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15700  014516  0E00               	movlw	0
 15701  014518  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15702  01451A  0E00               	movlw	0
 15703  01451C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15704  01451E  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15705  014522  0012               	return		;funcret
 15706  014524                     __end_of_USBSuspend:
 15707                           	opt stack 0
 15708                           pclatu	equ	0xFFB
 15709                           pclath	equ	0xFFA
 15710                           tblptru	equ	0xFF8
 15711                           tblptrh	equ	0xFF7
 15712                           tblptrl	equ	0xFF6
 15713                           tablat	equ	0xFF5
 15714                           prodh	equ	0xFF4
 15715                           prodl	equ	0xFF3
 15716                           intcon	equ	0xFF2
 15717                           intcon2	equ	0xFF1
 15718                           indf0	equ	0xFEF
 15719                           postinc0	equ	0xFEE
 15720                           fsr0h	equ	0xFEA
 15721                           fsr0l	equ	0xFE9
 15722                           wreg	equ	0xFE8
 15723                           indf1	equ	0xFE7
 15724                           postinc1	equ	0xFE6
 15725                           postdec1	equ	0xFE5
 15726                           fsr1h	equ	0xFE2
 15727                           fsr1l	equ	0xFE1
 15728                           indf2	equ	0xFDF
 15729                           postinc2	equ	0xFDE
 15730                           postdec2	equ	0xFDD
 15731                           plusw2	equ	0xFDB
 15732                           fsr2h	equ	0xFDA
 15733                           fsr2l	equ	0xFD9
 15734                           status	equ	0xFD8
 15735                           
 15736 ;; *************** function _USBStallHandler *****************
 15737 ;; Defined at:
 15738 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 15739 ;; Parameters:    Size  Location     Type
 15740 ;;		None
 15741 ;; Auto vars:     Size  Location     Type
 15742 ;;		None
 15743 ;; Return value:  Size  Location     Type
 15744 ;;		None               void
 15745 ;; Registers used:
 15746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15747 ;; Tracked objects:
 15748 ;;		On entry : 0/0
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15756 ;;Total ram usage:        1 bytes
 15757 ;; Hardware stack levels used:    1
 15758 ;; This function calls:
 15759 ;;		Nothing
 15760 ;; This function is called by:
 15761 ;;		_USBDeviceTasks
 15762 ;; This function uses a non-reentrant model
 15763 ;;
 15764                           
 15765                           	psect	text67
 15766  014268                     __ptext67:
 15767                           	opt stack 0
 15768  014268                     _USBStallHandler:
 15769                           	opt stack 18
 15770                           
 15771                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15772                           
 15773                           ;incstack = 0
 15774  014268  010F               	movlb	15	; () banked
 15775  01426A  A126               	btfss	38,0,b	;volatile
 15776  01426C  D01E               	goto	i2l308
 15777                           
 15778                           ; BSR set to: 15
 15779                           ;usb_device.c: 2215: {
 15780                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15781  01426E  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15782  014272  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15783  014276  0E80               	movlw	128
 15784  014278  18DE               	xorwf	postinc2,w,c
 15785  01427A  A4D8               	btfss	status,2,c
 15786  01427C  D014               	goto	i2l7074
 15787                           
 15788                           ; BSR set to: 15
 15789  01427E  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15790  014282  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15791  014286  0E84               	movlw	132
 15792  014288  18DE               	xorwf	postinc2,w,c
 15793  01428A  A4D8               	btfss	status,2,c
 15794  01428C  D00C               	goto	i2l7074
 15795                           
 15796                           ; BSR set to: 15
 15797                           ;usb_device.c: 2218: {
 15798                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15799  01428E  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15800  014292  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15801  014296  0E0C               	movlw	12
 15802  014298  6EDF               	movwf	indf2,c
 15803                           
 15804                           ; BSR set to: 15
 15805                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15806  01429A  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15807  01429E  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15808  0142A2  0E00               	movlw	0
 15809  0142A4  8EDB               	bsf	plusw2,7,c
 15810  0142A6                     i2l7074:
 15811                           
 15812                           ; BSR set to: 15
 15813                           ;usb_device.c: 2222: }
 15814                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15815  0142A6  010F               	movlb	15	; () banked
 15816  0142A8  9126               	bcf	38,0,b	;volatile
 15817  0142AA                     i2l308:
 15818                           
 15819                           ; BSR set to: 15
 15820                           ;usb_device.c: 2224: }
 15821                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15822  0142AA  9A62               	bcf	3938,5,c	;volatile
 15823                           
 15824                           ; BSR set to: 15
 15825  0142AC  0012               	return		;funcret
 15826  0142AE                     __end_of_USBStallHandler:
 15827                           	opt stack 0
 15828                           pclatu	equ	0xFFB
 15829                           pclath	equ	0xFFA
 15830                           tblptru	equ	0xFF8
 15831                           tblptrh	equ	0xFF7
 15832                           tblptrl	equ	0xFF6
 15833                           tablat	equ	0xFF5
 15834                           prodh	equ	0xFF4
 15835                           prodl	equ	0xFF3
 15836                           intcon	equ	0xFF2
 15837                           intcon2	equ	0xFF1
 15838                           indf0	equ	0xFEF
 15839                           postinc0	equ	0xFEE
 15840                           fsr0h	equ	0xFEA
 15841                           fsr0l	equ	0xFE9
 15842                           wreg	equ	0xFE8
 15843                           indf1	equ	0xFE7
 15844                           postinc1	equ	0xFE6
 15845                           postdec1	equ	0xFE5
 15846                           fsr1h	equ	0xFE2
 15847                           fsr1l	equ	0xFE1
 15848                           indf2	equ	0xFDF
 15849                           postinc2	equ	0xFDE
 15850                           postdec2	equ	0xFDD
 15851                           plusw2	equ	0xFDB
 15852                           fsr2h	equ	0xFDA
 15853                           fsr2l	equ	0xFD9
 15854                           status	equ	0xFD8
 15855                           
 15856 ;; *************** function _USBCtrlEPService *****************
 15857 ;; Defined at:
 15858 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;		None
 15861 ;; Auto vars:     Size  Location     Type
 15862 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15863 ;; Return value:  Size  Location     Type
 15864 ;;		None               void
 15865 ;; Registers used:
 15866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15867 ;; Tracked objects:
 15868 ;;		On entry : 0/0
 15869 ;;		On exit  : 0/0
 15870 ;;		Unchanged: 0/0
 15871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15875 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15876 ;;Total ram usage:        3 bytes
 15877 ;; Hardware stack levels used:    1
 15878 ;; Hardware stack levels required when called:    7
 15879 ;; This function calls:
 15880 ;;		_USBCtrlTrfInHandler
 15881 ;;		_USBCtrlTrfOutHandler
 15882 ;;		_USBCtrlTrfSetupHandler
 15883 ;; This function is called by:
 15884 ;;		_USBDeviceTasks
 15885 ;; This function uses a non-reentrant model
 15886 ;;
 15887                           
 15888                           	psect	text68
 15889  012F72                     __ptext68:
 15890                           	opt stack 0
 15891  012F72                     _USBCtrlEPService:
 15892                           	opt stack 11
 15893                           
 15894                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15895                           
 15896                           ; BSR set to: 15
 15897                           ;incstack = 0
 15898  012F72  0E2D               	movlw	45
 15899  012F74  6E27               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15900                           
 15901                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15902  012F76  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15903  012F7A  0EFD               	movlw	253
 15904  012F7C  1648               	andwf	??_USBCtrlEPService,f,c
 15905  012F7E  A4D8               	btfss	status,2,c
 15906  012F80  D057               	goto	i2l7108
 15907                           
 15908                           ;usb_device.c: 2380: {
 15909                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15910  012F82  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15911  012F86  90D8               	bcf	status,0,c
 15912  012F88  3248               	rrcf	??_USBCtrlEPService,f,c
 15913  012F8A  0E3F               	movlw	63
 15914  012F8C  1648               	andwf	??_USBCtrlEPService,f,c
 15915  012F8E  5048               	movf	??_USBCtrlEPService,w,c
 15916  012F90  0D04               	mullw	4
 15917  012F92  0E00               	movlw	0
 15918  012F94  24F3               	addwf	prodl,w,c
 15919  012F96  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 15920  012F98  0E0D               	movlw	13
 15921  012F9A  20F4               	addwfc	prodh,w,c
 15922  012F9C  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15923                           
 15924                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15925  012F9E  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15926  012FA2  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15927                           
 15928                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15929  012FA6  0E04               	movlw	4
 15930  012FA8  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 15931                           
 15932                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15933  012FAA  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15934  012FAE  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15935  012FB2  30DF               	rrcf	indf2,w,c
 15936  012FB4  32E8               	rrcf	wreg,f,c
 15937  012FB6  0B0F               	andlw	15
 15938  012FB8  0A0D               	xorlw	13
 15939  012FBA  A4D8               	btfss	status,2,c
 15940  012FBC  D036               	goto	i2l7106
 15941                           
 15942                           ;usb_device.c: 2397: {
 15943                           ;usb_device.c: 2398: unsigned char setup_cnt;
 15944                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15945  012FBE  0E00               	movlw	0
 15946  012FC0  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 15947  012FC2                     i2l7090:
 15948  012FC2  0E07               	movlw	7
 15949  012FC4  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15950  012FC6  D001               	goto	i2l7094
 15951  012FC8  D023               	goto	i2l7102
 15952  012FCA                     i2l7094:
 15953                           
 15954                           ;usb_device.c: 2405: {
 15955                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15956  012FCA  EE20 F002          	lfsr	2,2
 15957  012FCE  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15958  012FD0  26D9               	addwf	fsr2l,f,c
 15959  012FD2  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15960  012FD4  22DA               	addwfc	fsr2h,f,c
 15961  012FD6  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 15962  012FDA  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 15963  012FDE  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 15964  012FE2  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 15965  012FE6  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 15966  012FE8  0D01               	mullw	1
 15967  012FEA  0E30               	movlw	48
 15968  012FEC  24F3               	addwf	prodl,w,c
 15969  012FEE  6EE1               	movwf	fsr1l,c
 15970  012FF0  0E0D               	movlw	13
 15971  012FF2  20F4               	addwfc	prodh,w,c
 15972  012FF4  6EE2               	movwf	fsr1h,c
 15973  012FF6  CFDF FFE7          	movff	indf2,indf1
 15974                           
 15975                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 15976  012FFA  EE20 F002          	lfsr	2,2
 15977  012FFE  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15978  013000  26D9               	addwf	fsr2l,f,c
 15979  013002  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15980  013004  22DA               	addwfc	fsr2h,f,c
 15981  013006  2ADE               	incf	postinc2,f,c
 15982  013008  0E00               	movlw	0
 15983  01300A  22DD               	addwfc	postdec2,f,c
 15984  01300C  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 15985  01300E  D7D9               	goto	i2l7090
 15986  013010                     i2l7102:
 15987                           
 15988                           ;usb_device.c: 2408: }
 15989                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15990  013010  EE20 F002          	lfsr	2,2
 15991  013014  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15992  013016  26D9               	addwf	fsr2l,f,c
 15993  013018  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15994  01301A  22DA               	addwfc	fsr2h,f,c
 15995  01301C  0E30               	movlw	48
 15996  01301E  6EDE               	movwf	postinc2,c
 15997  013020  0E0D               	movlw	13
 15998  013022  6EDD               	movwf	postdec2,c
 15999                           
 16000                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 16001  013024  ECA8  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 16002                           
 16003                           ;usb_device.c: 2413: }
 16004  013028  0012               	return	
 16005  01302A                     i2l7106:
 16006                           
 16007                           ;usb_device.c: 2414: else
 16008                           ;usb_device.c: 2415: {
 16009                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 16010  01302A  EC8E  F0A0         	call	_USBCtrlTrfOutHandler	;wreg free
 16011                           
 16012                           ;usb_device.c: 2418: }
 16013                           ;usb_device.c: 2419: }
 16014  01302E  0012               	return	
 16015  013030                     i2l7108:
 16016                           
 16017                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 16018  013030  502D               	movf	_USTATcopy,w,c	;volatile
 16019  013032  0BFD               	andlw	253
 16020  013034  0A04               	xorlw	4
 16021  013036  A4D8               	btfss	status,2,c
 16022  013038  0012               	return	
 16023                           
 16024                           ;usb_device.c: 2421: {
 16025                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 16026  01303A  ECBD  F09A         	call	_USBCtrlTrfInHandler	;wreg free
 16027  01303E  0012               	return	
 16028  013040                     __end_of_USBCtrlEPService:
 16029                           	opt stack 0
 16030                           pclatu	equ	0xFFB
 16031                           pclath	equ	0xFFA
 16032                           tblptru	equ	0xFF8
 16033                           tblptrh	equ	0xFF7
 16034                           tblptrl	equ	0xFF6
 16035                           tablat	equ	0xFF5
 16036                           prodh	equ	0xFF4
 16037                           prodl	equ	0xFF3
 16038                           intcon	equ	0xFF2
 16039                           intcon2	equ	0xFF1
 16040                           indf0	equ	0xFEF
 16041                           postinc0	equ	0xFEE
 16042                           fsr0h	equ	0xFEA
 16043                           fsr0l	equ	0xFE9
 16044                           wreg	equ	0xFE8
 16045                           indf1	equ	0xFE7
 16046                           postinc1	equ	0xFE6
 16047                           postdec1	equ	0xFE5
 16048                           fsr1h	equ	0xFE2
 16049                           fsr1l	equ	0xFE1
 16050                           indf2	equ	0xFDF
 16051                           postinc2	equ	0xFDE
 16052                           postdec2	equ	0xFDD
 16053                           plusw2	equ	0xFDB
 16054                           fsr2h	equ	0xFDA
 16055                           fsr2l	equ	0xFD9
 16056                           status	equ	0xFD8
 16057                           
 16058 ;; *************** function _USBCtrlTrfSetupHandler *****************
 16059 ;; Defined at:
 16060 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 16061 ;; Parameters:    Size  Location     Type
 16062 ;;		None
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;		None
 16065 ;; Return value:  Size  Location     Type
 16066 ;;		None               void
 16067 ;; Registers used:
 16068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16069 ;; Tracked objects:
 16070 ;;		On entry : 0/0
 16071 ;;		On exit  : 0/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16078 ;;Total ram usage:        0 bytes
 16079 ;; Hardware stack levels used:    1
 16080 ;; Hardware stack levels required when called:    6
 16081 ;; This function calls:
 16082 ;;		_USBCheckStdRequest
 16083 ;;		_USBCtrlEPServiceComplete
 16084 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16085 ;; This function is called by:
 16086 ;;		_USBCtrlEPService
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text69
 16091  013D50                     __ptext69:
 16092                           	opt stack 0
 16093  013D50                     _USBCtrlTrfSetupHandler:
 16094                           	opt stack 11
 16095                           
 16096                           ;usb_device.c: 2474: shortPacketStatus = 0;
 16097                           
 16098                           ;incstack = 0
 16099  013D50  0E00               	movlw	0
 16100  013D52  6E2B               	movwf	_shortPacketStatus,c	;volatile
 16101                           
 16102                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 16103  013D54  0E00               	movlw	0
 16104  013D56  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 16105                           
 16106                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 16107  013D58  0E00               	movlw	0
 16108  013D5A  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16109                           
 16110                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 16111  013D5C  0E00               	movlw	0
 16112  013D5E  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16113                           
 16114                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 16115  013D60  0E00               	movlw	0
 16116  013D62  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16117                           
 16118                           ;usb_device.c: 2479: controlTransferState = 0;
 16119  013D64  0E00               	movlw	0
 16120  013D66  6E29               	movwf	_controlTransferState,c	;volatile
 16121                           
 16122                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16123  013D68  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16124  013D6C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16125  013D70  0E7F               	movlw	127
 16126  013D72  16DF               	andwf	indf2,f,c
 16127                           
 16128                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16129  013D74  0E04               	movlw	4
 16130  013D76  1A10               	xorwf	_pBDTEntryIn,f,c
 16131                           
 16132                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16133  013D78  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16134  013D7C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16135  013D80  0E7F               	movlw	127
 16136  013D82  16DF               	andwf	indf2,f,c
 16137                           
 16138                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16139  013D84  0E04               	movlw	4
 16140  013D86  1A10               	xorwf	_pBDTEntryIn,f,c
 16141                           
 16142                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16143  013D88  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16144  013D8C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16145  013D90  0E7F               	movlw	127
 16146  013D92  16DF               	andwf	indf2,f,c
 16147                           
 16148                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 16149  013D94  0E00               	movlw	0
 16150  013D96  6E0D               	movwf	_inPipes+3,c	;volatile
 16151                           
 16152                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 16153  013D98  0E00               	movlw	0
 16154  013D9A  6E0F               	movwf	_inPipes+5,c	;volatile
 16155  013D9C  0E00               	movlw	0
 16156  013D9E  6E0E               	movwf	_inPipes+4,c	;volatile
 16157                           
 16158                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 16159  013DA0  0E00               	movlw	0
 16160  013DA2  6E04               	movwf	_outPipes+3,c	;volatile
 16161                           
 16162                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 16163  013DA4  0E00               	movlw	0
 16164  013DA6  6E06               	movwf	_outPipes+5,c	;volatile
 16165  013DA8  0E00               	movlw	0
 16166  013DAA  6E05               	movwf	_outPipes+4,c	;volatile
 16167                           
 16168                           ;usb_device.c: 2503: USBCheckStdRequest();
 16169  013DAC  EC38  F095         	call	_USBCheckStdRequest	;wreg free
 16170                           
 16171                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16172  013DB0  0E00               	movlw	0
 16173  013DB2  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16174  013DB4  0E03               	movlw	3
 16175  013DB6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16176  013DB8  0E00               	movlw	0
 16177  013DBA  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16178  013DBC  0E00               	movlw	0
 16179  013DBE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16180  013DC0  0E00               	movlw	0
 16181  013DC2  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16182  013DC4  0E00               	movlw	0
 16183  013DC6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16184  013DC8  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16185                           
 16186                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 16187  013DCC  ECF7  F092         	call	_USBCtrlEPServiceComplete	;wreg free
 16188  013DD0  0012               	return		;funcret
 16189  013DD2                     __end_of_USBCtrlTrfSetupHandler:
 16190                           	opt stack 0
 16191                           pclatu	equ	0xFFB
 16192                           pclath	equ	0xFFA
 16193                           tblptru	equ	0xFF8
 16194                           tblptrh	equ	0xFF7
 16195                           tblptrl	equ	0xFF6
 16196                           tablat	equ	0xFF5
 16197                           prodh	equ	0xFF4
 16198                           prodl	equ	0xFF3
 16199                           intcon	equ	0xFF2
 16200                           intcon2	equ	0xFF1
 16201                           indf0	equ	0xFEF
 16202                           postinc0	equ	0xFEE
 16203                           fsr0h	equ	0xFEA
 16204                           fsr0l	equ	0xFE9
 16205                           wreg	equ	0xFE8
 16206                           indf1	equ	0xFE7
 16207                           postinc1	equ	0xFE6
 16208                           postdec1	equ	0xFE5
 16209                           fsr1h	equ	0xFE2
 16210                           fsr1l	equ	0xFE1
 16211                           indf2	equ	0xFDF
 16212                           postinc2	equ	0xFDE
 16213                           postdec2	equ	0xFDD
 16214                           plusw2	equ	0xFDB
 16215                           fsr2h	equ	0xFDA
 16216                           fsr2l	equ	0xFD9
 16217                           status	equ	0xFD8
 16218                           
 16219 ;; *************** function _USBCtrlEPServiceComplete *****************
 16220 ;; Defined at:
 16221 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;		None
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;		None
 16226 ;; Return value:  Size  Location     Type
 16227 ;;		None               void
 16228 ;; Registers used:
 16229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16239 ;;Total ram usage:        0 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:    2
 16242 ;; This function calls:
 16243 ;;		_USBCtrlEPAllowDataStage
 16244 ;;		_USBCtrlEPAllowStatusStage
 16245 ;; This function is called by:
 16246 ;;		_USBCtrlTrfSetupHandler
 16247 ;; This function uses a non-reentrant model
 16248 ;;
 16249                           
 16250                           	psect	text70
 16251  0125EE                     __ptext70:
 16252                           	opt stack 0
 16253  0125EE                     _USBCtrlEPServiceComplete:
 16254                           	opt stack 14
 16255                           
 16256                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 16257                           
 16258                           ;incstack = 0
 16259  0125EE  9865               	bcf	3941,4,c	;volatile
 16260                           
 16261                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 16262  0125F0  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 16263  0125F2  D038               	goto	i2l232
 16264                           
 16265                           ;usb_device.c: 1629: {
 16266                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 16267  0125F4  AE04               	btfss	_outPipes+3,7,c	;volatile
 16268  0125F6  D00B               	goto	i2l6668
 16269                           
 16270                           ;usb_device.c: 1631: {
 16271                           ;usb_device.c: 1632: controlTransferState = 2;
 16272  0125F8  0E02               	movlw	2
 16273  0125FA  6E29               	movwf	_controlTransferState,c	;volatile
 16274                           
 16275                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 16276  0125FC  5022               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 16277  0125FE  B4D8               	btfsc	status,2,c
 16278                           
 16279                           ;usb_device.c: 1644: {
 16280                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 16281  012600  ECFD  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16282                           
 16283                           ;usb_device.c: 1646: }
 16284                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 16285  012604  0E00               	movlw	0
 16286  012606  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16287                           
 16288                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 16289  012608  0E00               	movlw	0
 16290  01260A  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16291                           
 16292                           ;usb_device.c: 1652: }
 16293  01260C  0012               	return	
 16294  01260E                     i2l6668:
 16295                           
 16296                           ;usb_device.c: 1653: else
 16297                           ;usb_device.c: 1654: {
 16298                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 16299  01260E  EE20 F001          	lfsr	2,1
 16300  012612  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16301  012614  26D9               	addwf	fsr2l,f,c
 16302  012616  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16303  012618  22DA               	addwfc	fsr2h,f,c
 16304  01261A  0E08               	movlw	8
 16305  01261C  6EDF               	movwf	indf2,c
 16306                           
 16307                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16308  01261E  EE20 F002          	lfsr	2,2
 16309  012622  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16310  012624  26D9               	addwf	fsr2l,f,c
 16311  012626  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16312  012628  22DA               	addwfc	fsr2h,f,c
 16313  01262A  0E30               	movlw	48
 16314  01262C  6EDE               	movwf	postinc2,c
 16315  01262E  0E0D               	movlw	13
 16316  012630  6EDD               	movwf	postdec2,c
 16317                           
 16318                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16319  012632  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16320  012636  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16321  01263A  0E0C               	movlw	12
 16322  01263C  6EDF               	movwf	indf2,c
 16323                           
 16324                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16325  01263E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16326  012642  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16327  012646  0E00               	movlw	0
 16328  012648  8EDB               	bsf	plusw2,7,c
 16329                           
 16330                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 16331  01264A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16332  01264E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16333  012652  0E04               	movlw	4
 16334  012654  6EDF               	movwf	indf2,c
 16335                           
 16336                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16337  012656  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16338  01265A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16339  01265E  0E00               	movlw	0
 16340  012660  8EDB               	bsf	plusw2,7,c
 16341                           
 16342                           ;usb_device.c: 1665: }
 16343                           ;usb_device.c: 1666: }
 16344  012662  0012               	return	
 16345  012664                     i2l232:
 16346                           
 16347                           ;usb_device.c: 1667: else
 16348                           ;usb_device.c: 1668: {
 16349                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 16350  012664  010D               	movlb	13	; () banked
 16351  012666  AF30               	btfss	48,7,b	;volatile
 16352  012668  D010               	goto	i2l6688
 16353                           
 16354                           ; BSR set to: 13
 16355                           ;usb_device.c: 1670: {
 16356                           ;usb_device.c: 1671: controlTransferState = 1;
 16357  01266A  0E01               	movlw	1
 16358  01266C  6E29               	movwf	_controlTransferState,c	;volatile
 16359                           
 16360                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 16361  01266E  5021               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 16362  012670  B4D8               	btfsc	status,2,c
 16363                           
 16364                           ; BSR set to: 13
 16365                           ;usb_device.c: 1686: {
 16366                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 16367  012672  ECFD  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16368                           
 16369                           ;usb_device.c: 1688: }
 16370                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 16371  012676  0E00               	movlw	0
 16372  012678  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16373                           
 16374                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 16375  01267A  0E00               	movlw	0
 16376  01267C  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16377                           
 16378                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 16379  01267E  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16380  012680  A4D8               	btfss	status,2,c
 16381  012682  0012               	return	
 16382                           
 16383                           ;usb_device.c: 1713: {
 16384                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 16385  012684  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16386                           
 16387                           ;usb_device.c: 1715: }
 16388                           ;usb_device.c: 1716: }
 16389  012688  0012               	return	
 16390  01268A                     i2l6688:
 16391                           
 16392                           ;usb_device.c: 1717: else
 16393                           ;usb_device.c: 1718: {
 16394                           ;usb_device.c: 1729: controlTransferState = 2;
 16395  01268A  0E02               	movlw	2
 16396  01268C  6E29               	movwf	_controlTransferState,c	;volatile
 16397                           
 16398                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 16399  01268E  EE20 F001          	lfsr	2,1
 16400  012692  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16401  012694  26D9               	addwf	fsr2l,f,c
 16402  012696  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16403  012698  22DA               	addwfc	fsr2h,f,c
 16404  01269A  0E08               	movlw	8
 16405  01269C  6EDF               	movwf	indf2,c
 16406                           
 16407                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16408  01269E  EE20 F002          	lfsr	2,2
 16409  0126A2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16410  0126A4  26D9               	addwf	fsr2l,f,c
 16411  0126A6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16412  0126A8  22DA               	addwfc	fsr2h,f,c
 16413  0126AA  0E30               	movlw	48
 16414  0126AC  6EDE               	movwf	postinc2,c
 16415  0126AE  0E0D               	movlw	13
 16416  0126B0  6EDD               	movwf	postdec2,c
 16417                           
 16418                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16419  0126B2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16420  0126B6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16421  0126BA  0E04               	movlw	4
 16422  0126BC  6EDF               	movwf	indf2,c
 16423                           
 16424                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16425  0126BE  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16426  0126C2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16427  0126C6  0E00               	movlw	0
 16428  0126C8  8EDB               	bsf	plusw2,7,c
 16429                           
 16430                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 16431  0126CA  0E00               	movlw	0
 16432  0126CC  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16433                           
 16434                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 16435  0126CE  0E00               	movlw	0
 16436  0126D0  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16437                           
 16438                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 16439  0126D2  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16440  0126D4  A4D8               	btfss	status,2,c
 16441  0126D6  0012               	return	
 16442                           
 16443                           ;usb_device.c: 1741: {
 16444                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16445  0126D8  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16446  0126DC  0012               	return	
 16447  0126DE                     __end_of_USBCtrlEPServiceComplete:
 16448                           	opt stack 0
 16449                           pclatu	equ	0xFFB
 16450                           pclath	equ	0xFFA
 16451                           tblptru	equ	0xFF8
 16452                           tblptrh	equ	0xFF7
 16453                           tblptrl	equ	0xFF6
 16454                           tablat	equ	0xFF5
 16455                           prodh	equ	0xFF4
 16456                           prodl	equ	0xFF3
 16457                           intcon	equ	0xFF2
 16458                           intcon2	equ	0xFF1
 16459                           indf0	equ	0xFEF
 16460                           postinc0	equ	0xFEE
 16461                           fsr0h	equ	0xFEA
 16462                           fsr0l	equ	0xFE9
 16463                           wreg	equ	0xFE8
 16464                           indf1	equ	0xFE7
 16465                           postinc1	equ	0xFE6
 16466                           postdec1	equ	0xFE5
 16467                           fsr1h	equ	0xFE2
 16468                           fsr1l	equ	0xFE1
 16469                           indf2	equ	0xFDF
 16470                           postinc2	equ	0xFDE
 16471                           postdec2	equ	0xFDD
 16472                           plusw2	equ	0xFDB
 16473                           fsr2h	equ	0xFDA
 16474                           fsr2l	equ	0xFD9
 16475                           status	equ	0xFD8
 16476                           
 16477 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16478 ;; Defined at:
 16479 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 16480 ;; Parameters:    Size  Location     Type
 16481 ;;		None
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;		None
 16484 ;; Return value:  Size  Location     Type
 16485 ;;		None               void
 16486 ;; Registers used:
 16487 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16488 ;; Tracked objects:
 16489 ;;		On entry : 0/0
 16490 ;;		On exit  : 0/0
 16491 ;;		Unchanged: 0/0
 16492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16497 ;;Total ram usage:        0 bytes
 16498 ;; Hardware stack levels used:    1
 16499 ;; Hardware stack levels required when called:    1
 16500 ;; This function calls:
 16501 ;;		_USBCtrlTrfTxService
 16502 ;; This function is called by:
 16503 ;;		_USBCtrlEPServiceComplete
 16504 ;; This function uses a non-reentrant model
 16505 ;;
 16506                           
 16507                           	psect	text71
 16508  0139FA                     __ptext71:
 16509                           	opt stack 0
 16510  0139FA                     _USBCtrlEPAllowDataStage:
 16511                           	opt stack 14
 16512                           
 16513                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16514                           
 16515                           ;incstack = 0
 16516  0139FA  0E00               	movlw	0
 16517  0139FC  6E21               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16518                           
 16519                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16520  0139FE  0E00               	movlw	0
 16521  013A00  6E22               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16522                           
 16523                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16524  013A02  0E02               	movlw	2
 16525  013A04  1829               	xorwf	_controlTransferState,w,c	;volatile
 16526  013A06  A4D8               	btfss	status,2,c
 16527  013A08  D01F               	goto	i2l6222
 16528                           
 16529                           ;usb_device.c: 1494: {
 16530                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16531  013A0A  EE20 F001          	lfsr	2,1
 16532  013A0E  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16533  013A10  26D9               	addwf	fsr2l,f,c
 16534  013A12  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16535  013A14  22DA               	addwfc	fsr2h,f,c
 16536  013A16  0E08               	movlw	8
 16537  013A18  6EDF               	movwf	indf2,c
 16538                           
 16539                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16540  013A1A  EE20 F002          	lfsr	2,2
 16541  013A1E  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16542  013A20  26D9               	addwf	fsr2l,f,c
 16543  013A22  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16544  013A24  22DA               	addwfc	fsr2h,f,c
 16545  013A26  0E38               	movlw	56
 16546  013A28  6EDE               	movwf	postinc2,c
 16547  013A2A  0E0D               	movlw	13
 16548  013A2C  6EDD               	movwf	postdec2,c
 16549                           
 16550                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16551  013A2E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16552  013A32  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16553  013A36  0E48               	movlw	72
 16554  013A38  6EDF               	movwf	indf2,c
 16555                           
 16556                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16557  013A3A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16558  013A3E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16559  013A42  0E00               	movlw	0
 16560  013A44  8EDB               	bsf	plusw2,7,c
 16561                           
 16562                           ;usb_device.c: 1500: }
 16563  013A46  0012               	return	
 16564  013A48                     i2l6222:
 16565                           
 16566                           ;usb_device.c: 1501: else
 16567                           ;usb_device.c: 1502: {
 16568                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16569  013A48  500E               	movf	_inPipes+4,w,c	;volatile
 16570  013A4A  010D               	movlb	13	; () banked
 16571  013A4C  5D36               	subwf	54,w,b	;volatile
 16572  013A4E  500F               	movf	_inPipes+5,w,c	;volatile
 16573  013A50  010D               	movlb	13	; () banked
 16574  013A52  5937               	subwfb	55,w,b	;volatile
 16575  013A54  B0D8               	btfsc	status,0,c
 16576  013A56  D004               	goto	i2l6226
 16577                           
 16578                           ; BSR set to: 13
 16579                           ;usb_device.c: 1506: {
 16580                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16581  013A58  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16582  013A5C  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16583  013A60                     i2l6226:
 16584                           
 16585                           ; BSR set to: 13
 16586                           ;usb_device.c: 1508: }
 16587                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16588  013A60  EC50  F097         	call	_USBCtrlTrfTxService	;wreg free
 16589                           
 16590                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16591  013A64  EE20 F002          	lfsr	2,2
 16592  013A68  5010               	movf	_pBDTEntryIn,w,c
 16593  013A6A  26D9               	addwf	fsr2l,f,c
 16594  013A6C  5011               	movf	_pBDTEntryIn+1,w,c
 16595  013A6E  22DA               	addwfc	fsr2h,f,c
 16596  013A70  0E38               	movlw	56
 16597  013A72  6EDE               	movwf	postinc2,c
 16598  013A74  0E0D               	movlw	13
 16599  013A76  6EDD               	movwf	postdec2,c
 16600                           
 16601                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16602  013A78  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16603  013A7C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16604  013A80  0E48               	movlw	72
 16605  013A82  6EDF               	movwf	indf2,c
 16606                           
 16607                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16608  013A84  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16609  013A88  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16610  013A8C  0E00               	movlw	0
 16611  013A8E  8EDB               	bsf	plusw2,7,c
 16612  013A90  0012               	return	
 16613  013A92                     __end_of_USBCtrlEPAllowDataStage:
 16614                           	opt stack 0
 16615                           pclatu	equ	0xFFB
 16616                           pclath	equ	0xFFA
 16617                           tblptru	equ	0xFF8
 16618                           tblptrh	equ	0xFF7
 16619                           tblptrl	equ	0xFF6
 16620                           tablat	equ	0xFF5
 16621                           prodh	equ	0xFF4
 16622                           prodl	equ	0xFF3
 16623                           intcon	equ	0xFF2
 16624                           intcon2	equ	0xFF1
 16625                           indf0	equ	0xFEF
 16626                           postinc0	equ	0xFEE
 16627                           fsr0h	equ	0xFEA
 16628                           fsr0l	equ	0xFE9
 16629                           wreg	equ	0xFE8
 16630                           indf1	equ	0xFE7
 16631                           postinc1	equ	0xFE6
 16632                           postdec1	equ	0xFE5
 16633                           fsr1h	equ	0xFE2
 16634                           fsr1l	equ	0xFE1
 16635                           indf2	equ	0xFDF
 16636                           postinc2	equ	0xFDE
 16637                           postdec2	equ	0xFDD
 16638                           plusw2	equ	0xFDB
 16639                           fsr2h	equ	0xFDA
 16640                           fsr2l	equ	0xFD9
 16641                           status	equ	0xFD8
 16642                           
 16643 ;; *************** function _USBCheckStdRequest *****************
 16644 ;; Defined at:
 16645 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;		None
 16648 ;; Auto vars:     Size  Location     Type
 16649 ;;		None
 16650 ;; Return value:  Size  Location     Type
 16651 ;;		None               void
 16652 ;; Registers used:
 16653 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16654 ;; Tracked objects:
 16655 ;;		On entry : 0/0
 16656 ;;		On exit  : 0/0
 16657 ;;		Unchanged: 0/0
 16658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16663 ;;Total ram usage:        0 bytes
 16664 ;; Hardware stack levels used:    1
 16665 ;; Hardware stack levels required when called:    5
 16666 ;; This function calls:
 16667 ;;		_USBStdFeatureReqHandler
 16668 ;;		_USBStdGetDscHandler
 16669 ;;		_USBStdGetStatusHandler
 16670 ;;		_USBStdSetCfgHandler
 16671 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16672 ;; This function is called by:
 16673 ;;		_USBCtrlTrfSetupHandler
 16674 ;; This function uses a non-reentrant model
 16675 ;;
 16676                           
 16677                           	psect	text72
 16678  012A70                     __ptext72:
 16679                           	opt stack 0
 16680  012A70                     _USBCheckStdRequest:
 16681                           	opt stack 11
 16682                           
 16683                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 16684                           
 16685                           ;incstack = 0
 16686  012A70  010D               	movlb	13	; () banked
 16687  012A72  3930               	swapf	48,w,b	;volatile
 16688  012A74  32E8               	rrcf	wreg,f,c
 16689  012A76  0B03               	andlw	3
 16690  012A78  0900               	iorlw	0
 16691  012A7A  A4D8               	btfss	status,2,c
 16692  012A7C  0012               	return	
 16693  012A7E  D043               	goto	i2l6786
 16694  012A80                     i2l359:
 16695                           
 16696                           ; BSR set to: 13
 16697                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 16698  012A80  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16699                           
 16700                           ; BSR set to: 13
 16701                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 16702  012A82  0E08               	movlw	8
 16703  012A84  6E24               	movwf	_USBDeviceState,c	;volatile
 16704                           
 16705                           ;usb_device.c: 2699: break;
 16706  012A86  0012               	return	
 16707  012A88                     i2l6756:
 16708                           
 16709                           ; BSR set to: 13
 16710                           ;usb_device.c: 2701: USBStdGetDscHandler();
 16711  012A88  EC5F  F091         	call	_USBStdGetDscHandler	;wreg free
 16712                           
 16713                           ;usb_device.c: 2702: break;
 16714  012A8C  0012               	return	
 16715  012A8E                     i2l6758:
 16716                           
 16717                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 16718  012A8E  ECCA  F094         	call	_USBStdSetCfgHandler	;wreg free
 16719                           
 16720                           ;usb_device.c: 2705: break;
 16721  012A92  0012               	return	
 16722  012A94                     i2l6760:
 16723                           
 16724                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16725  012A94  0E2C               	movlw	low _USBActiveConfiguration
 16726  012A96  6E0A               	movwf	_inPipes,c	;volatile
 16727  012A98  0E00               	movlw	high _USBActiveConfiguration
 16728  012A9A  6E0B               	movwf	_inPipes+1,c	;volatile
 16729                           
 16730                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16731  012A9C  800D               	bsf	_inPipes+3,0,c	;volatile
 16732                           
 16733                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 16734  012A9E  0E01               	movlw	1
 16735  012AA0  6E0E               	movwf	_inPipes+4,c	;volatile
 16736                           
 16737                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 16738  012AA2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16739                           
 16740                           ;usb_device.c: 2711: break;
 16741  012AA4  0012               	return	
 16742  012AA6                     i2l6768:
 16743                           
 16744                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 16745  012AA6  EC72  F09B         	call	_USBStdGetStatusHandler	;wreg free
 16746                           
 16747                           ;usb_device.c: 2714: break;
 16748  012AAA  0012               	return	
 16749  012AAC                     i2l6770:
 16750                           
 16751                           ;usb_device.c: 2716: case 3:
 16752                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 16753  012AAC  EC56  F089         	call	_USBStdFeatureReqHandler	;wreg free
 16754                           
 16755                           ;usb_device.c: 2718: break;
 16756  012AB0  0012               	return	
 16757  012AB2                     i2l6772:
 16758                           
 16759                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16760  012AB2  010D               	movlb	13	; () banked
 16761  012AB4  5134               	movf	52,w,b	;volatile
 16762  012AB6  0D01               	mullw	1
 16763  012AB8  0EFB               	movlw	low _USBAlternateInterface
 16764  012ABA  24F3               	addwf	prodl,w,c
 16765  012ABC  6E0A               	movwf	_inPipes,c	;volatile
 16766  012ABE  0E00               	movlw	high _USBAlternateInterface
 16767  012AC0  20F4               	addwfc	prodh,w,c
 16768  012AC2  6E0B               	movwf	_inPipes+1,c	;volatile
 16769                           
 16770                           ; BSR set to: 13
 16771                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16772  012AC4  800D               	bsf	_inPipes+3,0,c	;volatile
 16773                           
 16774                           ; BSR set to: 13
 16775                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 16776  012AC6  0E01               	movlw	1
 16777  012AC8  6E0E               	movwf	_inPipes+4,c	;volatile
 16778                           
 16779                           ; BSR set to: 13
 16780                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16781  012ACA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16782                           
 16783                           ;usb_device.c: 2724: break;
 16784  012ACC  0012               	return	
 16785  012ACE                     i2l368:
 16786                           
 16787                           ; BSR set to: 13
 16788                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 16789  012ACE  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16790                           
 16791                           ; BSR set to: 13
 16792                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16793  012AD0  010D               	movlb	13	; () banked
 16794  012AD2  5134               	movf	52,w,b	;volatile
 16795  012AD4  0D01               	mullw	1
 16796  012AD6  0EFB               	movlw	low _USBAlternateInterface
 16797  012AD8  24F3               	addwf	prodl,w,c
 16798  012ADA  6ED9               	movwf	fsr2l,c
 16799  012ADC  0E00               	movlw	high _USBAlternateInterface
 16800  012ADE  20F4               	addwfc	prodh,w,c
 16801  012AE0  6EDA               	movwf	fsr2h,c
 16802  012AE2  CD32 FFDF          	movff	3378,indf2	;volatile
 16803                           
 16804                           ;usb_device.c: 2728: break;
 16805  012AE6  0012               	return	
 16806  012AE8                     i2l6782:
 16807                           
 16808                           ; BSR set to: 13
 16809                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16810  012AE8  0E00               	movlw	0
 16811  012AEA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16812  012AEC  0E02               	movlw	2
 16813  012AEE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16814  012AF0  0E00               	movlw	0
 16815  012AF2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16816  012AF4  0E00               	movlw	0
 16817  012AF6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16818  012AF8  0E00               	movlw	0
 16819  012AFA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16820  012AFC  0E00               	movlw	0
 16821  012AFE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16822  012B00  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16823                           
 16824                           ;usb_device.c: 2735: }
 16825                           
 16826                           ;usb_device.c: 2734: break;
 16827                           
 16828                           ;usb_device.c: 2733: default:
 16829                           
 16830                           ;usb_device.c: 2732: case 12:
 16831                           
 16832                           ;usb_device.c: 2731: break;
 16833  012B04  0012               	return	
 16834  012B06                     i2l6786:
 16835  012B06  010D               	movlb	13	; () banked
 16836  012B08  5131               	movf	49,w,b	;volatile
 16837                           
 16838                           ; Switch size 1, requested type "space"
 16839                           ; Number of cases is 11, Range of values is 0 to 12
 16840                           ; switch strategies available:
 16841                           ; Name         Instructions Cycles
 16842                           ; simple_byte           34    18 (average)
 16843                           ;	Chosen strategy is simple_byte
 16844  012B0A  0A00               	xorlw	0	; case 0
 16845  012B0C  B4D8               	btfsc	status,2,c
 16846  012B0E  D7CB               	goto	i2l6768
 16847  012B10  0A01               	xorlw	1	; case 1
 16848  012B12  B4D8               	btfsc	status,2,c
 16849  012B14  D7CB               	goto	i2l6770
 16850  012B16  0A02               	xorlw	2	; case 3
 16851  012B18  B4D8               	btfsc	status,2,c
 16852  012B1A  D7C8               	goto	i2l6770
 16853  012B1C  0A06               	xorlw	6	; case 5
 16854  012B1E  B4D8               	btfsc	status,2,c
 16855  012B20  D7AF               	goto	i2l359
 16856  012B22  0A03               	xorlw	3	; case 6
 16857  012B24  B4D8               	btfsc	status,2,c
 16858  012B26  D7B0               	goto	i2l6756
 16859  012B28  0A01               	xorlw	1	; case 7
 16860  012B2A  B4D8               	btfsc	status,2,c
 16861  012B2C  D7DD               	goto	i2l6782
 16862  012B2E  0A0F               	xorlw	15	; case 8
 16863  012B30  B4D8               	btfsc	status,2,c
 16864  012B32  D7B0               	goto	i2l6760
 16865  012B34  0A01               	xorlw	1	; case 9
 16866  012B36  B4D8               	btfsc	status,2,c
 16867  012B38  D7AA               	goto	i2l6758
 16868  012B3A  0A03               	xorlw	3	; case 10
 16869  012B3C  B4D8               	btfsc	status,2,c
 16870  012B3E  D7B9               	goto	i2l6772
 16871  012B40  0A01               	xorlw	1	; case 11
 16872  012B42  B4D8               	btfsc	status,2,c
 16873  012B44  D7C4               	goto	i2l368
 16874  012B46  0A07               	xorlw	7	; case 12
 16875  012B48  0012               	return	
 16876  012B4A                     __end_of_USBCheckStdRequest:
 16877                           	opt stack 0
 16878                           pclatu	equ	0xFFB
 16879                           pclath	equ	0xFFA
 16880                           tblptru	equ	0xFF8
 16881                           tblptrh	equ	0xFF7
 16882                           tblptrl	equ	0xFF6
 16883                           tablat	equ	0xFF5
 16884                           prodh	equ	0xFF4
 16885                           prodl	equ	0xFF3
 16886                           intcon	equ	0xFF2
 16887                           intcon2	equ	0xFF1
 16888                           indf0	equ	0xFEF
 16889                           postinc0	equ	0xFEE
 16890                           fsr0h	equ	0xFEA
 16891                           fsr0l	equ	0xFE9
 16892                           wreg	equ	0xFE8
 16893                           indf1	equ	0xFE7
 16894                           postinc1	equ	0xFE6
 16895                           postdec1	equ	0xFE5
 16896                           fsr1h	equ	0xFE2
 16897                           fsr1l	equ	0xFE1
 16898                           indf2	equ	0xFDF
 16899                           postinc2	equ	0xFDE
 16900                           postdec2	equ	0xFDD
 16901                           plusw2	equ	0xFDB
 16902                           fsr2h	equ	0xFDA
 16903                           fsr2l	equ	0xFD9
 16904                           status	equ	0xFD8
 16905                           
 16906 ;; *************** function _USBStdSetCfgHandler *****************
 16907 ;; Defined at:
 16908 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;		None
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;  i               1   20[COMRAM] unsigned char 
 16913 ;; Return value:  Size  Location     Type
 16914 ;;		None               void
 16915 ;; Registers used:
 16916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16926 ;;Total ram usage:        1 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; Hardware stack levels required when called:    4
 16929 ;; This function calls:
 16930 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16931 ;;		i2_memset
 16932 ;; This function is called by:
 16933 ;;		_USBCheckStdRequest
 16934 ;; This function uses a non-reentrant model
 16935 ;;
 16936                           
 16937                           	psect	text73
 16938  012994                     __ptext73:
 16939                           	opt stack 0
 16940  012994                     _USBStdSetCfgHandler:
 16941                           	opt stack 11
 16942                           
 16943                           ;usb_device.c: 1970: uint8_t i;
 16944                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16945                           
 16946                           ;incstack = 0
 16947  012994  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16948                           
 16949                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16950  012996  0E27               	movlw	39
 16951  012998  6E2E               	movwf	i2memset@p1,c
 16952  01299A  0E0F               	movlw	15
 16953  01299C  6E2F               	movwf	i2memset@p1+1,c
 16954  01299E  0E00               	movlw	0
 16955  0129A0  6E31               	movwf	i2memset@c+1,c
 16956  0129A2  0E00               	movlw	0
 16957  0129A4  6E30               	movwf	i2memset@c,c
 16958  0129A6  0E00               	movlw	0
 16959  0129A8  6E33               	movwf	i2memset@n+1,c
 16960  0129AA  0E02               	movlw	2
 16961  0129AC  6E32               	movwf	i2memset@n,c
 16962  0129AE  EC92  F0A2         	call	i2_memset	;wreg free
 16963                           
 16964                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16965  0129B2  0E00               	movlw	0
 16966  0129B4  6E2E               	movwf	i2memset@p1,c
 16967  0129B6  0E0D               	movlw	13
 16968  0129B8  6E2F               	movwf	i2memset@p1+1,c
 16969  0129BA  0E00               	movlw	0
 16970  0129BC  6E31               	movwf	i2memset@c+1,c
 16971  0129BE  0E00               	movlw	0
 16972  0129C0  6E30               	movwf	i2memset@c,c
 16973  0129C2  0E00               	movlw	0
 16974  0129C4  6E33               	movwf	i2memset@n+1,c
 16975  0129C6  0E30               	movlw	48
 16976  0129C8  6E32               	movwf	i2memset@n,c
 16977  0129CA  EC92  F0A2         	call	i2_memset	;wreg free
 16978                           
 16979                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16980  0129CE  8C65               	bsf	3941,6,c	;volatile
 16981                           
 16982                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16983  0129D0  0E00               	movlw	0
 16984  0129D2  6E42               	movwf	USBStdSetCfgHandler@i,c
 16985  0129D4                     i2l6242:
 16986  0129D4  0E02               	movlw	2
 16987  0129D6  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 16988  0129D8  D001               	goto	i2l6246
 16989  0129DA  D016               	goto	i2l6252
 16990  0129DC                     i2l6246:
 16991                           
 16992                           ;usb_device.c: 1988: {
 16993                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16994  0129DC  5042               	movf	USBStdSetCfgHandler@i,w,c
 16995  0129DE  0D01               	mullw	1
 16996  0129E0  0E16               	movlw	low _ep_data_in
 16997  0129E2  24F3               	addwf	prodl,w,c
 16998  0129E4  6ED9               	movwf	fsr2l,c
 16999  0129E6  0E00               	movlw	high _ep_data_in
 17000  0129E8  20F4               	addwfc	prodh,w,c
 17001  0129EA  6EDA               	movwf	fsr2h,c
 17002  0129EC  0E00               	movlw	0
 17003  0129EE  6EDF               	movwf	indf2,c
 17004                           
 17005                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 17006  0129F0  5042               	movf	USBStdSetCfgHandler@i,w,c
 17007  0129F2  0D01               	mullw	1
 17008  0129F4  0ED5               	movlw	low _ep_data_out
 17009  0129F6  24F3               	addwf	prodl,w,c
 17010  0129F8  6ED9               	movwf	fsr2l,c
 17011  0129FA  0E00               	movlw	high _ep_data_out
 17012  0129FC  20F4               	addwfc	prodh,w,c
 17013  0129FE  6EDA               	movwf	fsr2h,c
 17014  012A00  0E00               	movlw	0
 17015  012A02  6EDF               	movwf	indf2,c
 17016  012A04  2A42               	incf	USBStdSetCfgHandler@i,f,c
 17017  012A06  D7E6               	goto	i2l6242
 17018  012A08                     i2l6252:
 17019                           
 17020                           ;usb_device.c: 1991: }
 17021                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 17022  012A08  0EFB               	movlw	low _USBAlternateInterface
 17023  012A0A  6E2E               	movwf	i2memset@p1,c
 17024  012A0C  0E00               	movlw	high _USBAlternateInterface
 17025  012A0E  6E2F               	movwf	i2memset@p1+1,c
 17026  012A10  0E00               	movlw	0
 17027  012A12  6E31               	movwf	i2memset@c+1,c
 17028  012A14  0E00               	movlw	0
 17029  012A16  6E30               	movwf	i2memset@c,c
 17030  012A18  0E00               	movlw	0
 17031  012A1A  6E33               	movwf	i2memset@n+1,c
 17032  012A1C  0E02               	movlw	2
 17033  012A1E  6E32               	movwf	i2memset@n,c
 17034  012A20  EC92  F0A2         	call	i2_memset	;wreg free
 17035                           
 17036                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 17037  012A24  9C65               	bcf	3941,6,c	;volatile
 17038                           
 17039                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17040  012A26  0E08               	movlw	8
 17041  012A28  6E10               	movwf	_pBDTEntryIn,c
 17042  012A2A  0E0D               	movlw	13
 17043  012A2C  6E11               	movwf	_pBDTEntryIn+1,c
 17044                           
 17045                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 17046  012A2E  0E00               	movlw	0
 17047  012A30  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 17048  012A32  0E0D               	movlw	13
 17049  012A34  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 17050                           
 17051                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17052  012A36  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17053  012A3A  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17054                           
 17055                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 17056  012A3E  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 17057                           
 17058                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 17059  012A42  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17060  012A44  A4D8               	btfss	status,2,c
 17061  012A46  D003               	goto	i2l6268
 17062                           
 17063                           ;usb_device.c: 2010: {
 17064                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 17065  012A48  0E10               	movlw	16
 17066  012A4A  6E24               	movwf	_USBDeviceState,c	;volatile
 17067                           
 17068                           ;usb_device.c: 2013: }
 17069  012A4C  0012               	return	
 17070  012A4E                     i2l6268:
 17071                           
 17072                           ;usb_device.c: 2014: else
 17073                           ;usb_device.c: 2015: {
 17074                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17075  012A4E  0E00               	movlw	0
 17076  012A50  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17077  012A52  0E01               	movlw	1
 17078  012A54  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17079  012A56  0E2C               	movlw	low _USBActiveConfiguration
 17080  012A58  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17081  012A5A  0E00               	movlw	high _USBActiveConfiguration
 17082  012A5C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17083  012A5E  0E00               	movlw	0
 17084  012A60  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17085  012A62  0E01               	movlw	1
 17086  012A64  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17087  012A66  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17088                           
 17089                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 17090  012A6A  0E20               	movlw	32
 17091  012A6C  6E24               	movwf	_USBDeviceState,c	;volatile
 17092  012A6E  0012               	return	
 17093  012A70                     __end_of_USBStdSetCfgHandler:
 17094                           	opt stack 0
 17095                           pclatu	equ	0xFFB
 17096                           pclath	equ	0xFFA
 17097                           tblptru	equ	0xFF8
 17098                           tblptrh	equ	0xFF7
 17099                           tblptrl	equ	0xFF6
 17100                           tablat	equ	0xFF5
 17101                           prodh	equ	0xFF4
 17102                           prodl	equ	0xFF3
 17103                           intcon	equ	0xFF2
 17104                           intcon2	equ	0xFF1
 17105                           indf0	equ	0xFEF
 17106                           postinc0	equ	0xFEE
 17107                           fsr0h	equ	0xFEA
 17108                           fsr0l	equ	0xFE9
 17109                           wreg	equ	0xFE8
 17110                           indf1	equ	0xFE7
 17111                           postinc1	equ	0xFE6
 17112                           postdec1	equ	0xFE5
 17113                           fsr1h	equ	0xFE2
 17114                           fsr1l	equ	0xFE1
 17115                           indf2	equ	0xFDF
 17116                           postinc2	equ	0xFDE
 17117                           postdec2	equ	0xFDD
 17118                           plusw2	equ	0xFDB
 17119                           fsr2h	equ	0xFDA
 17120                           fsr2l	equ	0xFD9
 17121                           status	equ	0xFD8
 17122                           
 17123 ;; *************** function i2_memset *****************
 17124 ;; Defined at:
 17125 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17126 ;; Parameters:    Size  Location     Type
 17127 ;;  p1              2    0[COMRAM] PTR void 
 17128 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17129 ;;  c               2    2[COMRAM] int 
 17130 ;;  n               2    4[COMRAM] unsigned int 
 17131 ;; Auto vars:     Size  Location     Type
 17132 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17133 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17134 ;; Return value:  Size  Location     Type
 17135 ;;                  2    0[COMRAM] PTR void 
 17136 ;; Registers used:
 17137 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17138 ;; Tracked objects:
 17139 ;;		On entry : 0/0
 17140 ;;		On exit  : 0/0
 17141 ;;		Unchanged: 0/0
 17142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17143 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17146 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17147 ;;Total ram usage:        8 bytes
 17148 ;; Hardware stack levels used:    1
 17149 ;; This function calls:
 17150 ;;		Nothing
 17151 ;; This function is called by:
 17152 ;;		_USBStdSetCfgHandler
 17153 ;;		i2_USBDeviceInit
 17154 ;; This function uses a non-reentrant model
 17155 ;;
 17156                           
 17157                           	psect	text74
 17158  014524                     __ptext74:
 17159                           	opt stack 0
 17160  014524                     i2_memset:
 17161                           	opt stack 17
 17162                           
 17163                           ;incstack = 0
 17164  014524  C02E  F034         	movff	i2memset@p1,i2memset@p
 17165  014528  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17166  01452C  D008               	goto	i2l6176
 17167  01452E                     i2l6172:
 17168  01452E  C034  FFD9         	movff	i2memset@p,fsr2l
 17169  014532  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17170  014536  C030  FFDF         	movff	i2memset@c,indf2
 17171  01453A  4A34               	infsnz	i2memset@p,f,c
 17172  01453C  2A35               	incf	i2memset@p+1,f,c
 17173  01453E                     i2l6176:
 17174  01453E  0632               	decf	i2memset@n,f,c
 17175  014540  A0D8               	btfss	status,0,c
 17176  014542  0633               	decf	i2memset@n+1,f,c
 17177  014544  2832               	incf	i2memset@n,w,c
 17178  014546  E1F3               	bnz	i2l6172
 17179  014548  2833               	incf	i2memset@n+1,w,c
 17180  01454A  B4D8               	btfsc	status,2,c
 17181  01454C  0012               	return	
 17182  01454E  D7EF               	goto	i2l6172
 17183  014550                     __end_ofi2_memset:
 17184                           	opt stack 0
 17185                           pclatu	equ	0xFFB
 17186                           pclath	equ	0xFFA
 17187                           tblptru	equ	0xFF8
 17188                           tblptrh	equ	0xFF7
 17189                           tblptrl	equ	0xFF6
 17190                           tablat	equ	0xFF5
 17191                           prodh	equ	0xFF4
 17192                           prodl	equ	0xFF3
 17193                           intcon	equ	0xFF2
 17194                           intcon2	equ	0xFF1
 17195                           indf0	equ	0xFEF
 17196                           postinc0	equ	0xFEE
 17197                           fsr0h	equ	0xFEA
 17198                           fsr0l	equ	0xFE9
 17199                           wreg	equ	0xFE8
 17200                           indf1	equ	0xFE7
 17201                           postinc1	equ	0xFE6
 17202                           postdec1	equ	0xFE5
 17203                           fsr1h	equ	0xFE2
 17204                           fsr1l	equ	0xFE1
 17205                           indf2	equ	0xFDF
 17206                           postinc2	equ	0xFDE
 17207                           postdec2	equ	0xFDD
 17208                           plusw2	equ	0xFDB
 17209                           fsr2h	equ	0xFDA
 17210                           fsr2l	equ	0xFD9
 17211                           status	equ	0xFD8
 17212                           
 17213 ;; *************** function _USBStdGetStatusHandler *****************
 17214 ;; Defined at:
 17215 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;		None
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;  p               2    1[COMRAM] PTR struct __BDT
 17220 ;;		 -> NULL(0), BDT(48), 
 17221 ;; Return value:  Size  Location     Type
 17222 ;;		None               void
 17223 ;; Registers used:
 17224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17225 ;; Tracked objects:
 17226 ;;		On entry : 0/0
 17227 ;;		On exit  : 0/0
 17228 ;;		Unchanged: 0/0
 17229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17234 ;;Total ram usage:        3 bytes
 17235 ;; Hardware stack levels used:    1
 17236 ;; This function calls:
 17237 ;;		Nothing
 17238 ;; This function is called by:
 17239 ;;		_USBCheckStdRequest
 17240 ;; This function uses a non-reentrant model
 17241 ;;
 17242                           
 17243                           	psect	text75
 17244  0136E4                     __ptext75:
 17245                           	opt stack 0
 17246  0136E4                     _USBStdGetStatusHandler:
 17247                           	opt stack 15
 17248                           
 17249                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 17250                           
 17251                           ;incstack = 0
 17252  0136E4  0E00               	movlw	0
 17253  0136E6  010D               	movlb	13	; () banked
 17254  0136E8  6F38               	movwf	56,b	;volatile
 17255                           
 17256                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 17257  0136EA  0E00               	movlw	0
 17258  0136EC  010D               	movlb	13	; () banked
 17259  0136EE  6F39               	movwf	57,b	;volatile
 17260                           
 17261                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 17262  0136F0  D038               	goto	i2l6324
 17263  0136F2                     i2l295:
 17264                           
 17265                           ; BSR set to: 13
 17266                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 17267  0136F2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17268                           
 17269                           ; BSR set to: 13
 17270                           ;usb_device.c: 2145: }
 17271                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 17272                           
 17273                           ; BSR set to: 13
 17274                           
 17275                           ; BSR set to: 13
 17276                           ;usb_device.c: 2143: {
 17277                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 17278                           
 17279                           ;usb_device.c: 2142: if(0 == 1)
 17280  0136F4  0420               	decf	_RemoteWakeup,w,c	;volatile
 17281  0136F6  A4D8               	btfss	status,2,c
 17282  0136F8  D040               	goto	i2l298
 17283                           
 17284                           ; BSR set to: 13
 17285                           ;usb_device.c: 2148: {
 17286                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 17287  0136FA  010D               	movlb	13	; () banked
 17288  0136FC  8338               	bsf	56,1,b	;volatile
 17289                           
 17290                           ; BSR set to: 13
 17291                           ;usb_device.c: 2150: }
 17292                           ;usb_device.c: 2151: break;
 17293  0136FE  D03D               	goto	i2l298
 17294  013700                     i2l299:
 17295                           
 17296                           ; BSR set to: 13
 17297                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 17298  013700  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17299                           
 17300                           ;usb_device.c: 2154: break;
 17301  013702  D03B               	goto	i2l298
 17302  013704                     i2l300:
 17303                           
 17304                           ; BSR set to: 13
 17305                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 17306  013704  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17307                           
 17308                           ;usb_device.c: 2160: {
 17309                           ;usb_device.c: 2161: BDT_ENTRY *p;
 17310                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 17311  013706  010D               	movlb	13	; () banked
 17312  013708  BF34               	btfsc	52,7,b	;volatile
 17313  01370A  D00B               	goto	i2l6314
 17314                           
 17315                           ; BSR set to: 13
 17316                           ;usb_device.c: 2164: {
 17317                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17318  01370C  010D               	movlb	13	; () banked
 17319  01370E  5134               	movf	52,w,b	;volatile
 17320  013710  0B0F               	andlw	15
 17321  013712  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17322  013714  502E               	movf	??_USBStdGetStatusHandler,w,c
 17323  013716  0D02               	mullw	2
 17324  013718  0E0A               	movlw	low _pBDTEntryOut
 17325  01371A  24F3               	addwf	prodl,w,c
 17326  01371C  6ED9               	movwf	fsr2l,c
 17327  01371E  0E01               	movlw	high _pBDTEntryOut
 17328  013720  D00A               	goto	L6
 17329  013722                     i2l6314:
 17330                           
 17331                           ; BSR set to: 13
 17332                           ;usb_device.c: 2167: else
 17333                           ;usb_device.c: 2168: {
 17334                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17335  013722  010D               	movlb	13	; () banked
 17336  013724  5134               	movf	52,w,b	;volatile
 17337  013726  0B0F               	andlw	15
 17338  013728  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17339  01372A  502E               	movf	??_USBStdGetStatusHandler,w,c
 17340  01372C  0D02               	mullw	2
 17341  01372E  0E10               	movlw	low _pBDTEntryIn
 17342  013730  24F3               	addwf	prodl,w,c
 17343  013732  6ED9               	movwf	fsr2l,c
 17344  013734  0E00               	movlw	high _pBDTEntryIn
 17345  013736                     L6:
 17346  013736  20F4               	addwfc	prodh,w,c
 17347  013738  6EDA               	movwf	fsr2h,c
 17348  01373A  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 17349  01373E  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 17350                           
 17351                           ; BSR set to: 13
 17352                           ;usb_device.c: 2170: }
 17353                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17354                           
 17355                           ; BSR set to: 13
 17356  013742  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17357  013746  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17358  01374A  AEDF               	btfss	indf2,7,c
 17359  01374C  D016               	goto	i2l298
 17360                           
 17361                           ; BSR set to: 13
 17362  01374E  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17363  013752  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17364  013756  A4DF               	btfss	indf2,2,c
 17365  013758  D010               	goto	i2l298
 17366                           
 17367                           ; BSR set to: 13
 17368                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 17369  01375A  0E01               	movlw	1
 17370  01375C  010D               	movlb	13	; () banked
 17371  01375E  6F38               	movwf	56,b	;volatile
 17372                           
 17373                           ; BSR set to: 13
 17374                           ;usb_device.c: 2175: }
 17375                           ;usb_device.c: 2176: }
 17376                           
 17377                           ; BSR set to: 13
 17378                           ;usb_device.c: 2174: break;
 17379  013760  D00C               	goto	i2l298
 17380  013762                     i2l6324:
 17381                           
 17382                           ; BSR set to: 13
 17383  013762  010D               	movlb	13	; () banked
 17384  013764  5130               	movf	48,w,b	;volatile
 17385  013766  0B1F               	andlw	31
 17386                           
 17387                           ; Switch size 1, requested type "space"
 17388                           ; Number of cases is 3, Range of values is 0 to 2
 17389                           ; switch strategies available:
 17390                           ; Name         Instructions Cycles
 17391                           ; simple_byte           10     6 (average)
 17392                           ;	Chosen strategy is simple_byte
 17393  013768  0A00               	xorlw	0	; case 0
 17394  01376A  B4D8               	btfsc	status,2,c
 17395  01376C  D7C2               	goto	i2l295
 17396  01376E  0A01               	xorlw	1	; case 1
 17397  013770  B4D8               	btfsc	status,2,c
 17398  013772  D7C6               	goto	i2l299
 17399  013774  0A03               	xorlw	3	; case 2
 17400  013776  B4D8               	btfsc	status,2,c
 17401  013778  D7C5               	goto	i2l300
 17402  01377A                     i2l298:
 17403                           
 17404                           ; BSR set to: 13
 17405                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 17406  01377A  AE0D               	btfss	_inPipes+3,7,c	;volatile
 17407  01377C  0012               	return	
 17408                           
 17409                           ; BSR set to: 13
 17410                           ;usb_device.c: 2179: {
 17411                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17412  01377E  0E38               	movlw	56
 17413  013780  6E0A               	movwf	_inPipes,c	;volatile
 17414  013782  0E0D               	movlw	13
 17415  013784  6E0B               	movwf	_inPipes+1,c	;volatile
 17416                           
 17417                           ; BSR set to: 13
 17418                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17419  013786  800D               	bsf	_inPipes+3,0,c	;volatile
 17420                           
 17421                           ; BSR set to: 13
 17422                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 17423  013788  0E02               	movlw	2
 17424  01378A  6E0E               	movwf	_inPipes+4,c	;volatile
 17425  01378C  0012               	return	
 17426  01378E                     __end_of_USBStdGetStatusHandler:
 17427                           	opt stack 0
 17428                           pclatu	equ	0xFFB
 17429                           pclath	equ	0xFFA
 17430                           tblptru	equ	0xFF8
 17431                           tblptrh	equ	0xFF7
 17432                           tblptrl	equ	0xFF6
 17433                           tablat	equ	0xFF5
 17434                           prodh	equ	0xFF4
 17435                           prodl	equ	0xFF3
 17436                           intcon	equ	0xFF2
 17437                           intcon2	equ	0xFF1
 17438                           indf0	equ	0xFEF
 17439                           postinc0	equ	0xFEE
 17440                           fsr0h	equ	0xFEA
 17441                           fsr0l	equ	0xFE9
 17442                           wreg	equ	0xFE8
 17443                           indf1	equ	0xFE7
 17444                           postinc1	equ	0xFE6
 17445                           postdec1	equ	0xFE5
 17446                           fsr1h	equ	0xFE2
 17447                           fsr1l	equ	0xFE1
 17448                           indf2	equ	0xFDF
 17449                           postinc2	equ	0xFDE
 17450                           postdec2	equ	0xFDD
 17451                           plusw2	equ	0xFDB
 17452                           fsr2h	equ	0xFDA
 17453                           fsr2l	equ	0xFD9
 17454                           status	equ	0xFD8
 17455                           
 17456 ;; *************** function _USBStdGetDscHandler *****************
 17457 ;; Defined at:
 17458 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;		None
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;		None
 17463 ;; Return value:  Size  Location     Type
 17464 ;;		None               void
 17465 ;; Registers used:
 17466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17476 ;;Total ram usage:        2 bytes
 17477 ;; Hardware stack levels used:    1
 17478 ;; This function calls:
 17479 ;;		Nothing
 17480 ;; This function is called by:
 17481 ;;		_USBCheckStdRequest
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           	psect	text76
 17486  0122BE                     __ptext76:
 17487                           	opt stack 0
 17488  0122BE                     _USBStdGetDscHandler:
 17489                           	opt stack 15
 17490                           
 17491                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17492                           
 17493                           ; BSR set to: 13
 17494                           ;incstack = 0
 17495  0122BE  0E80               	movlw	128
 17496  0122C0  010D               	movlb	13	; () banked
 17497  0122C2  1930               	xorwf	48,w,b	;volatile
 17498  0122C4  A4D8               	btfss	status,2,c
 17499  0122C6  0012               	return	
 17500                           
 17501                           ; BSR set to: 13
 17502                           ;usb_device.c: 2046: {
 17503                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17504  0122C8  0EC0               	movlw	192
 17505  0122CA  6E0D               	movwf	_inPipes+3,c	;volatile
 17506                           
 17507                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17508  0122CC  D085               	goto	i2l6302
 17509  0122CE                     i2l6276:
 17510                           
 17511                           ; BSR set to: 13
 17512                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17513  0122CE  0EDC               	movlw	low _device_dsc
 17514  0122D0  6E0A               	movwf	_inPipes,c	;volatile
 17515  0122D2  0EFD               	movlw	high _device_dsc
 17516  0122D4  6E0B               	movwf	_inPipes+1,c	;volatile
 17517                           
 17518                           ; BSR set to: 13
 17519                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17520  0122D6  0E00               	movlw	0
 17521  0122D8  6E0F               	movwf	_inPipes+5,c	;volatile
 17522  0122DA  0E12               	movlw	18
 17523  0122DC  6E0E               	movwf	_inPipes+4,c	;volatile
 17524                           
 17525                           ;usb_device.c: 2058: break;
 17526  0122DE  0012               	return	
 17527  0122E0                     i2l6280:
 17528                           
 17529                           ; BSR set to: 13
 17530                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17531  0122E0  010D               	movlb	13	; () banked
 17532  0122E2  5132               	movf	50,w,b	;volatile
 17533  0122E4  A4D8               	btfss	status,2,c
 17534  0122E6  D043               	goto	i2l6288
 17535                           
 17536                           ; BSR set to: 13
 17537                           ;usb_device.c: 2064: {
 17538                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17539  0122E8  010D               	movlb	13	; () banked
 17540  0122EA  5132               	movf	50,w,b	;volatile
 17541  0122EC  0D02               	mullw	2
 17542  0122EE  0E13               	movlw	low _USB_CD_Ptr
 17543  0122F0  24F3               	addwf	prodl,w,c
 17544  0122F2  6EF6               	movwf	tblptrl,c
 17545  0122F4  0EFD               	movlw	high _USB_CD_Ptr
 17546  0122F6  20F4               	addwfc	prodh,w,c
 17547  0122F8  6EF7               	movwf	tblptrh,c
 17548  0122FA                     	if	1	;There are 3 active tblptr bytes
 17549  0122FA  6AF8               	clrf	tblptru,c
 17550  0122FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17551  0122FE  22F8               	addwfc	tblptru,f,c
 17552  012300                     	endif
 17553  012300  0009               	tblrd		*+
 17554  012302  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17555  012306  000A               	tblrd		*-
 17556  012308  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17557                           
 17558                           ; BSR set to: 13
 17559                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17560  01230C  0E02               	movlw	2
 17561  01230E  240A               	addwf	_inPipes,w,c	;volatile
 17562  012310  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17563  012312  0E00               	movlw	0
 17564  012314  200B               	addwfc	_inPipes+1,w,c	;volatile
 17565  012316  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17566  012318  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17567  01231C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17568  012320  0E00               	movlw	low (__mediumconst shr (0+16))
 17569  012322  6EF8               	movwf	tblptru,c
 17570  012324  0E0E               	movlw	(high __ramtop+-1)
 17571  012326  64F7               	cpfsgt	tblptrh,c
 17572  012328  D003               	bra	i2u508_47
 17573  01232A  0008               	tblrd		*
 17574  01232C  50F5               	movf	tablat,w,c
 17575  01232E  D005               	bra	i2u508_40
 17576  012330                     i2u508_47:
 17577  012330  CFF6 FFE9          	movff	tblptrl,fsr0l
 17578  012334  CFF7 FFEA          	movff	tblptrh,fsr0h
 17579  012338  50EF               	movf	indf0,w,c
 17580  01233A                     i2u508_40:
 17581  01233A  6E0E               	movwf	_inPipes+4,c	;volatile
 17582                           
 17583                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17584  01233C  0E03               	movlw	3
 17585  01233E  240A               	addwf	_inPipes,w,c	;volatile
 17586  012340  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17587  012342  0E00               	movlw	0
 17588  012344  200B               	addwfc	_inPipes+1,w,c	;volatile
 17589  012346  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17590  012348  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17591  01234C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17592  012350  0E00               	movlw	low (__mediumconst shr (0+16))
 17593  012352  6EF8               	movwf	tblptru,c
 17594  012354  0E0E               	movlw	(high __ramtop+-1)
 17595  012356  64F7               	cpfsgt	tblptrh,c
 17596  012358  D003               	bra	i2u509_47
 17597  01235A  0008               	tblrd		*
 17598  01235C  50F5               	movf	tablat,w,c
 17599  01235E  D005               	bra	i2u509_40
 17600  012360                     i2u509_47:
 17601  012360  CFF6 FFE9          	movff	tblptrl,fsr0l
 17602  012364  CFF7 FFEA          	movff	tblptrh,fsr0h
 17603  012368  50EF               	movf	indf0,w,c
 17604  01236A                     i2u509_40:
 17605  01236A  6E0F               	movwf	_inPipes+5,c	;volatile
 17606                           
 17607                           ;usb_device.c: 2076: }
 17608  01236C  0012               	return	
 17609  01236E                     i2l6288:
 17610                           
 17611                           ;usb_device.c: 2077: else
 17612                           ;usb_device.c: 2078: {
 17613                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17614  01236E  0E00               	movlw	0
 17615  012370  6E0D               	movwf	_inPipes+3,c	;volatile
 17616                           
 17617                           ;usb_device.c: 2080: }
 17618                           ;usb_device.c: 2081: break;
 17619  012372  0012               	return	
 17620  012374                     i2l6290:
 17621                           
 17622                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17623  012374  0E03               	movlw	3
 17624  012376  010D               	movlb	13	; () banked
 17625  012378  6132               	cpfslt	50,b	;volatile
 17626  01237A  D028               	goto	i2l6296
 17627                           
 17628                           ; BSR set to: 13
 17629                           ;usb_device.c: 2087: {
 17630                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17631  01237C  010D               	movlb	13	; () banked
 17632  01237E  5132               	movf	50,w,b	;volatile
 17633  012380  0D02               	mullw	2
 17634  012382  0E0D               	movlw	low _USB_SD_Ptr
 17635  012384  24F3               	addwf	prodl,w,c
 17636  012386  6EF6               	movwf	tblptrl,c
 17637  012388  0EFD               	movlw	high _USB_SD_Ptr
 17638  01238A  20F4               	addwfc	prodh,w,c
 17639  01238C  6EF7               	movwf	tblptrh,c
 17640  01238E                     	if	1	;There are 3 active tblptr bytes
 17641  01238E  6AF8               	clrf	tblptru,c
 17642  012390  0E00               	movlw	low (__mediumconst shr (0+16))
 17643  012392  22F8               	addwfc	tblptru,f,c
 17644  012394                     	endif
 17645  012394  0009               	tblrd		*+
 17646  012396  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17647  01239A  000A               	tblrd		*-
 17648  01239C  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17649                           
 17650                           ; BSR set to: 13
 17651                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17652  0123A0  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17653  0123A4  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17654  0123A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17655  0123AA  6EF8               	movwf	tblptru,c
 17656  0123AC  0E0E               	movlw	(high __ramtop+-1)
 17657  0123AE  64F7               	cpfsgt	tblptrh,c
 17658  0123B0  D003               	bra	i2u511_47
 17659  0123B2  0008               	tblrd		*
 17660  0123B4  50F5               	movf	tablat,w,c
 17661  0123B6  D005               	bra	i2u511_40
 17662  0123B8                     i2u511_47:
 17663  0123B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17664  0123BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17665  0123C0  50EF               	movf	indf0,w,c
 17666  0123C2                     i2u511_40:
 17667  0123C2  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17668  0123C4  502E               	movf	??_USBStdGetDscHandler,w,c
 17669  0123C6  6E0E               	movwf	_inPipes+4,c	;volatile
 17670  0123C8  6A0F               	clrf	_inPipes+5,c	;volatile
 17671                           
 17672                           ;usb_device.c: 2092: }
 17673  0123CA  0012               	return	
 17674  0123CC                     i2l6296:
 17675                           
 17676                           ;usb_device.c: 2102: else
 17677                           ;usb_device.c: 2103: {
 17678                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17679  0123CC  0E00               	movlw	0
 17680  0123CE  6E0D               	movwf	_inPipes+3,c	;volatile
 17681                           
 17682                           ;usb_device.c: 2105: }
 17683                           ;usb_device.c: 2106: break;
 17684  0123D0  0012               	return	
 17685  0123D2                     i2l6298:
 17686                           
 17687                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17688  0123D2  0E00               	movlw	0
 17689  0123D4  6E0D               	movwf	_inPipes+3,c	;volatile
 17690                           
 17691                           ;usb_device.c: 2110: }
 17692                           
 17693                           ;usb_device.c: 2109: break;
 17694  0123D6  0012               	return	
 17695  0123D8                     i2l6302:
 17696  0123D8  010D               	movlb	13	; () banked
 17697  0123DA  5133               	movf	51,w,b	;volatile
 17698                           
 17699                           ; Switch size 1, requested type "space"
 17700                           ; Number of cases is 3, Range of values is 1 to 3
 17701                           ; switch strategies available:
 17702                           ; Name         Instructions Cycles
 17703                           ; simple_byte           10     6 (average)
 17704                           ;	Chosen strategy is simple_byte
 17705  0123DC  0A01               	xorlw	1	; case 1
 17706  0123DE  B4D8               	btfsc	status,2,c
 17707  0123E0  D776               	goto	i2l6276
 17708  0123E2  0A03               	xorlw	3	; case 2
 17709  0123E4  B4D8               	btfsc	status,2,c
 17710  0123E6  D77C               	goto	i2l6280
 17711  0123E8  0A01               	xorlw	1	; case 3
 17712  0123EA  B4D8               	btfsc	status,2,c
 17713  0123EC  D7C3               	goto	i2l6290
 17714  0123EE  D7F1               	goto	i2l6298
 17715  0123F0                     __end_of_USBStdGetDscHandler:
 17716                           	opt stack 0
 17717                           pclatu	equ	0xFFB
 17718                           pclath	equ	0xFFA
 17719                           tblptru	equ	0xFF8
 17720                           tblptrh	equ	0xFF7
 17721                           tblptrl	equ	0xFF6
 17722                           tablat	equ	0xFF5
 17723                           prodh	equ	0xFF4
 17724                           prodl	equ	0xFF3
 17725                           intcon	equ	0xFF2
 17726                           intcon2	equ	0xFF1
 17727                           indf0	equ	0xFEF
 17728                           postinc0	equ	0xFEE
 17729                           fsr0h	equ	0xFEA
 17730                           fsr0l	equ	0xFE9
 17731                           wreg	equ	0xFE8
 17732                           indf1	equ	0xFE7
 17733                           postinc1	equ	0xFE6
 17734                           postdec1	equ	0xFE5
 17735                           fsr1h	equ	0xFE2
 17736                           fsr1l	equ	0xFE1
 17737                           indf2	equ	0xFDF
 17738                           postinc2	equ	0xFDE
 17739                           postdec2	equ	0xFDD
 17740                           plusw2	equ	0xFDB
 17741                           fsr2h	equ	0xFDA
 17742                           fsr2l	equ	0xFD9
 17743                           status	equ	0xFD8
 17744                           
 17745 ;; *************** function _USBStdFeatureReqHandler *****************
 17746 ;; Defined at:
 17747 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 17748 ;; Parameters:    Size  Location     Type
 17749 ;;		None
 17750 ;; Auto vars:     Size  Location     Type
 17751 ;;  p               2   24[COMRAM] PTR struct __BDT
 17752 ;;		 -> NULL(0), BDT(48), 
 17753 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17754 ;;		 -> UEP0(1), 
 17755 ;;  current_ep_d    1   23[COMRAM] struct .
 17756 ;; Return value:  Size  Location     Type
 17757 ;;		None               void
 17758 ;; Registers used:
 17759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17766 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17769 ;;Total ram usage:        6 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; Hardware stack levels required when called:    4
 17772 ;; This function calls:
 17773 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17774 ;; This function is called by:
 17775 ;;		_USBCheckStdRequest
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           	psect	text77
 17780  0112AC                     __ptext77:
 17781                           	opt stack 0
 17782  0112AC                     _USBStdFeatureReqHandler:
 17783                           	opt stack 11
 17784                           
 17785                           ;usb_device.c: 2759: BDT_ENTRY *p;
 17786                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 17787                           ;usb_device.c: 2764: unsigned char* pUEP;
 17788                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 17789                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 17790                           
 17791                           ;incstack = 0
 17792  0112AC  010D               	movlb	13	; () banked
 17793  0112AE  0532               	decf	50,w,b	;volatile
 17794  0112B0  A4D8               	btfss	status,2,c
 17795  0112B2  D010               	goto	i2l374
 17796                           
 17797                           ; BSR set to: 13
 17798  0112B4  010D               	movlb	13	; () banked
 17799  0112B6  5130               	movf	48,w,b	;volatile
 17800  0112B8  0B1F               	andlw	31
 17801  0112BA  0900               	iorlw	0
 17802  0112BC  A4D8               	btfss	status,2,c
 17803  0112BE  D00A               	goto	i2l374
 17804                           
 17805                           ; BSR set to: 13
 17806                           ;usb_device.c: 2804: {
 17807                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 17808  0112C0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17809                           
 17810                           ; BSR set to: 13
 17811                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17812  0112C2  0E03               	movlw	3
 17813  0112C4  010D               	movlb	13	; () banked
 17814  0112C6  1931               	xorwf	49,w,b	;volatile
 17815  0112C8  A4D8               	btfss	status,2,c
 17816  0112CA  D002               	goto	i2l6342
 17817                           
 17818                           ; BSR set to: 13
 17819                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17820  0112CC  0E01               	movlw	1
 17821  0112CE  D001               	goto	L7
 17822  0112D0                     i2l6342:
 17823                           
 17824                           ; BSR set to: 13
 17825                           ;usb_device.c: 2808: else
 17826                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17827  0112D0  0E00               	movlw	0
 17828  0112D2                     L7:
 17829  0112D2  6E20               	movwf	_RemoteWakeup,c	;volatile
 17830  0112D4                     i2l374:
 17831                           
 17832                           ; BSR set to: 13
 17833                           ;usb_device.c: 2810: }
 17834                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17835                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17836                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17837                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17838  0112D4  010D               	movlb	13	; () banked
 17839  0112D6  5132               	movf	50,w,b	;volatile
 17840  0112D8  A4D8               	btfss	status,2,c
 17841  0112DA  0012               	return	
 17842                           
 17843                           ; BSR set to: 13
 17844  0112DC  010D               	movlb	13	; () banked
 17845  0112DE  5130               	movf	48,w,b	;volatile
 17846  0112E0  0B1F               	andlw	31
 17847  0112E2  0A02               	xorlw	2
 17848  0112E4  A4D8               	btfss	status,2,c
 17849  0112E6  0012               	return	
 17850                           
 17851                           ; BSR set to: 13
 17852  0112E8  010D               	movlb	13	; () banked
 17853  0112EA  5134               	movf	52,w,b	;volatile
 17854  0112EC  0B0F               	andlw	15
 17855  0112EE  0900               	iorlw	0
 17856  0112F0  B4D8               	btfsc	status,2,c
 17857  0112F2  0012               	return	
 17858                           
 17859                           ; BSR set to: 13
 17860  0112F4  010D               	movlb	13	; () banked
 17861  0112F6  5134               	movf	52,w,b	;volatile
 17862  0112F8  0B0F               	andlw	15
 17863  0112FA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17864  0112FC  0E03               	movlw	3
 17865  0112FE  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17866  011300  0012               	return	
 17867                           
 17868                           ; BSR set to: 13
 17869  011302  0E20               	movlw	32
 17870  011304  1824               	xorwf	_USBDeviceState,w,c	;volatile
 17871  011306  A4D8               	btfss	status,2,c
 17872  011308  0012               	return	
 17873                           
 17874                           ; BSR set to: 13
 17875                           ;usb_device.c: 2817: {
 17876                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17877  01130A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17878                           
 17879                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17880  01130C  010D               	movlb	13	; () banked
 17881  01130E  BF34               	btfsc	52,7,b	;volatile
 17882  011310  D01B               	goto	i2l6356
 17883                           
 17884                           ; BSR set to: 13
 17885                           ;usb_device.c: 2824: {
 17886                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17887  011312  010D               	movlb	13	; () banked
 17888  011314  5134               	movf	52,w,b	;volatile
 17889  011316  0B0F               	andlw	15
 17890  011318  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17891  01131A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17892  01131C  0D02               	mullw	2
 17893  01131E  0E0A               	movlw	low _pBDTEntryOut
 17894  011320  24F3               	addwf	prodl,w,c
 17895  011322  6ED9               	movwf	fsr2l,c
 17896  011324  0E01               	movlw	high _pBDTEntryOut
 17897  011326  20F4               	addwfc	prodh,w,c
 17898  011328  6EDA               	movwf	fsr2h,c
 17899  01132A  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17900  01132E  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17901                           
 17902                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17903  011332  010D               	movlb	13	; () banked
 17904  011334  5134               	movf	52,w,b	;volatile
 17905  011336  0B0F               	andlw	15
 17906  011338  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17907  01133A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17908  01133C  0D01               	mullw	1
 17909  01133E  0ED5               	movlw	low _ep_data_out
 17910  011340  24F3               	addwf	prodl,w,c
 17911  011342  6ED9               	movwf	fsr2l,c
 17912  011344  0E00               	movlw	high _ep_data_out
 17913  011346  D01A               	goto	L8
 17914  011348                     i2l6356:
 17915                           
 17916                           ; BSR set to: 13
 17917                           ;usb_device.c: 2828: else
 17918                           ;usb_device.c: 2829: {
 17919                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17920  011348  010D               	movlb	13	; () banked
 17921  01134A  5134               	movf	52,w,b	;volatile
 17922  01134C  0B0F               	andlw	15
 17923  01134E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17924  011350  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17925  011352  0D02               	mullw	2
 17926  011354  0E10               	movlw	low _pBDTEntryIn
 17927  011356  24F3               	addwf	prodl,w,c
 17928  011358  6ED9               	movwf	fsr2l,c
 17929  01135A  0E00               	movlw	high _pBDTEntryIn
 17930  01135C  20F4               	addwfc	prodh,w,c
 17931  01135E  6EDA               	movwf	fsr2h,c
 17932  011360  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17933  011364  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17934                           
 17935                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17936  011368  010D               	movlb	13	; () banked
 17937  01136A  5134               	movf	52,w,b	;volatile
 17938  01136C  0B0F               	andlw	15
 17939  01136E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17940  011370  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17941  011372  0D01               	mullw	1
 17942  011374  0E16               	movlw	low _ep_data_in
 17943  011376  24F3               	addwf	prodl,w,c
 17944  011378  6ED9               	movwf	fsr2l,c
 17945  01137A  0E00               	movlw	high _ep_data_in
 17946  01137C                     L8:
 17947  01137C  20F4               	addwfc	prodh,w,c
 17948  01137E  6EDA               	movwf	fsr2h,c
 17949  011380  50DF               	movf	indf2,w,c
 17950  011382  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17951                           
 17952                           ; BSR set to: 13
 17953                           ;usb_device.c: 2832: }
 17954                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 17955                           
 17956                           ; BSR set to: 13
 17957  011384  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17958  011386  D002               	goto	i2l6362
 17959                           
 17960                           ; BSR set to: 13
 17961                           ;usb_device.c: 2839: {
 17962                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17963  011388  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 17964                           
 17965                           ;usb_device.c: 2841: }
 17966  01138A  D001               	goto	i2l6364
 17967  01138C                     i2l6362:
 17968                           
 17969                           ; BSR set to: 13
 17970                           ;usb_device.c: 2842: else
 17971                           ;usb_device.c: 2843: {
 17972                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17973  01138C  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 17974  01138E                     i2l6364:
 17975                           
 17976                           ; BSR set to: 13
 17977                           ;usb_device.c: 2845: }
 17978                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 17979  01138E  010D               	movlb	13	; () banked
 17980  011390  BF34               	btfsc	52,7,b	;volatile
 17981  011392  D00B               	goto	i2l6368
 17982                           
 17983                           ; BSR set to: 13
 17984                           ;usb_device.c: 2851: {
 17985                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17986  011394  010D               	movlb	13	; () banked
 17987  011396  5134               	movf	52,w,b	;volatile
 17988  011398  0B0F               	andlw	15
 17989  01139A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17990  01139C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17991  01139E  0D02               	mullw	2
 17992  0113A0  0E0A               	movlw	low _pBDTEntryOut
 17993  0113A2  24F3               	addwf	prodl,w,c
 17994  0113A4  6ED9               	movwf	fsr2l,c
 17995  0113A6  0E01               	movlw	high _pBDTEntryOut
 17996  0113A8  D00A               	goto	L9
 17997  0113AA                     i2l6368:
 17998                           
 17999                           ; BSR set to: 13
 18000                           ;usb_device.c: 2854: else
 18001                           ;usb_device.c: 2855: {
 18002                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 18003  0113AA  010D               	movlb	13	; () banked
 18004  0113AC  5134               	movf	52,w,b	;volatile
 18005  0113AE  0B0F               	andlw	15
 18006  0113B0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18007  0113B2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18008  0113B4  0D02               	mullw	2
 18009  0113B6  0E10               	movlw	low _pBDTEntryIn
 18010  0113B8  24F3               	addwf	prodl,w,c
 18011  0113BA  6ED9               	movwf	fsr2l,c
 18012  0113BC  0E00               	movlw	high _pBDTEntryIn
 18013  0113BE                     L9:
 18014  0113BE  20F4               	addwfc	prodh,w,c
 18015  0113C0  6EDA               	movwf	fsr2h,c
 18016  0113C2  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 18017  0113C6  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 18018                           
 18019                           ; BSR set to: 13
 18020                           ;usb_device.c: 2857: }
 18021                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 18022                           
 18023                           ; BSR set to: 13
 18024  0113CA  0E03               	movlw	3
 18025  0113CC  010D               	movlb	13	; () banked
 18026  0113CE  1931               	xorwf	49,w,b	;volatile
 18027  0113D0  A4D8               	btfss	status,2,c
 18028  0113D2  D031               	goto	i2l6384
 18029                           
 18030                           ; BSR set to: 13
 18031                           ;usb_device.c: 2861: {
 18032                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 18033  0113D4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18034  0113D8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18035  0113DC  AEDF               	btfss	indf2,7,c
 18036  0113DE  D01E               	goto	i2l6380
 18037                           
 18038                           ; BSR set to: 13
 18039                           ;usb_device.c: 2863: {
 18040                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 18041  0113E0  010D               	movlb	13	; () banked
 18042  0113E2  BF34               	btfsc	52,7,b	;volatile
 18043  0113E4  D00E               	goto	i2l6378
 18044                           
 18045                           ; BSR set to: 13
 18046                           ;usb_device.c: 2867: {
 18047                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18048  0113E6  010D               	movlb	13	; () banked
 18049  0113E8  5134               	movf	52,w,b	;volatile
 18050  0113EA  0B0F               	andlw	15
 18051  0113EC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18052  0113EE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18053  0113F0  0D01               	mullw	1
 18054  0113F2  0ED5               	movlw	low _ep_data_out
 18055  0113F4  24F3               	addwf	prodl,w,c
 18056  0113F6  6ED9               	movwf	fsr2l,c
 18057  0113F8  0E00               	movlw	high _ep_data_out
 18058  0113FA  20F4               	addwfc	prodh,w,c
 18059  0113FC  6EDA               	movwf	fsr2h,c
 18060  0113FE  0100               	movlb	0	; () banked
 18061  011400  D00C               	goto	L10
 18062  011402                     i2l6378:
 18063                           
 18064                           ;usb_device.c: 2870: else
 18065                           ;usb_device.c: 2871: {
 18066                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18067  011402  010D               	movlb	13	; () banked
 18068  011404  5134               	movf	52,w,b	;volatile
 18069  011406  0B0F               	andlw	15
 18070  011408  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18071  01140A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18072  01140C  0D01               	mullw	1
 18073  01140E  0E16               	movlw	low _ep_data_in
 18074  011410  24F3               	addwf	prodl,w,c
 18075  011412  6ED9               	movwf	fsr2l,c
 18076  011414  0E00               	movlw	high _ep_data_in
 18077  011416  20F4               	addwfc	prodh,w,c
 18078  011418  6EDA               	movwf	fsr2h,c
 18079  01141A                     L10:
 18080  01141A  82DF               	bsf	indf2,1,c
 18081  01141C                     i2l6380:
 18082                           
 18083                           ;usb_device.c: 2873: }
 18084                           ;usb_device.c: 2874: }
 18085                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 18086  01141C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18087  011420  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18088  011424  0E00               	movlw	0
 18089  011426  84DB               	bsf	plusw2,2,c
 18090                           
 18091                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 18092  011428  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18093  01142C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18094  011430  0E00               	movlw	0
 18095  011432  8EDB               	bsf	plusw2,7,c
 18096                           
 18097                           ;usb_device.c: 2879: }
 18098  011434  0012               	return	
 18099  011436                     i2l6384:
 18100                           
 18101                           ;usb_device.c: 2880: else
 18102                           ;usb_device.c: 2881: {
 18103                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18104  011436  0E04               	movlw	4
 18105  011438  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18106                           
 18107                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 18108  01143A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18109  01143E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18110  011442  AEDF               	btfss	indf2,7,c
 18111  011444  D01B               	goto	i2l6394
 18112                           
 18113                           ;usb_device.c: 2888: {
 18114                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 18115  011446  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18116  01144A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18117  01144E  0E7F               	movlw	127
 18118  011450  16DF               	andwf	indf2,f,c
 18119                           
 18120                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 18121  011452  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18122  011456  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18123  01145A  0E00               	movlw	0
 18124  01145C  8CDB               	bsf	plusw2,6,c
 18125                           
 18126                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18127  01145E  0E00               	movlw	0
 18128  011460  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18129  011462  0E05               	movlw	5
 18130  011464  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18131  011466  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18132  01146A  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18133  01146E  0E00               	movlw	0
 18134  011470  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18135  011472  0E02               	movlw	2
 18136  011474  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18137  011476  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18138                           
 18139                           ;usb_device.c: 2894: }
 18140  01147A  D006               	goto	i2l6396
 18141  01147C                     i2l6394:
 18142                           
 18143                           ;usb_device.c: 2895: else
 18144                           ;usb_device.c: 2896: {
 18145                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 18146  01147C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18147  011480  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18148  011484  0E00               	movlw	0
 18149  011486  8CDB               	bsf	plusw2,6,c
 18150  011488                     i2l6396:
 18151                           
 18152                           ;usb_device.c: 2899: }
 18153                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18154  011488  0E04               	movlw	4
 18155  01148A  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18156                           
 18157                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18158  01148C  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18159  01148E  D006               	goto	i2l393
 18160  011490  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18161  011494  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18162  011498  AEDF               	btfss	indf2,7,c
 18163  01149A  D033               	goto	i2l6410
 18164  01149C                     i2l393:
 18165                           
 18166                           ;usb_device.c: 2910: {
 18167                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 18168  01149C  010D               	movlb	13	; () banked
 18169  01149E  BF34               	btfsc	52,7,b	;volatile
 18170  0114A0  D00E               	goto	i2l6404
 18171                           
 18172                           ; BSR set to: 13
 18173                           ;usb_device.c: 2912: {
 18174                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18175  0114A2  010D               	movlb	13	; () banked
 18176  0114A4  5134               	movf	52,w,b	;volatile
 18177  0114A6  0B0F               	andlw	15
 18178  0114A8  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18179  0114AA  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18180  0114AC  0D01               	mullw	1
 18181  0114AE  0ED5               	movlw	low _ep_data_out
 18182  0114B0  24F3               	addwf	prodl,w,c
 18183  0114B2  6ED9               	movwf	fsr2l,c
 18184  0114B4  0E00               	movlw	high _ep_data_out
 18185  0114B6  20F4               	addwfc	prodh,w,c
 18186  0114B8  6EDA               	movwf	fsr2h,c
 18187  0114BA  0100               	movlb	0	; () banked
 18188  0114BC  D00C               	goto	L11
 18189  0114BE                     i2l6404:
 18190                           
 18191                           ;usb_device.c: 2915: else
 18192                           ;usb_device.c: 2916: {
 18193                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18194  0114BE  010D               	movlb	13	; () banked
 18195  0114C0  5134               	movf	52,w,b	;volatile
 18196  0114C2  0B0F               	andlw	15
 18197  0114C4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18198  0114C6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18199  0114C8  0D01               	mullw	1
 18200  0114CA  0E16               	movlw	low _ep_data_in
 18201  0114CC  24F3               	addwf	prodl,w,c
 18202  0114CE  6ED9               	movwf	fsr2l,c
 18203  0114D0  0E00               	movlw	high _ep_data_in
 18204  0114D2  20F4               	addwfc	prodh,w,c
 18205  0114D4  6EDA               	movwf	fsr2h,c
 18206  0114D6                     L11:
 18207  0114D6  92DF               	bcf	indf2,1,c
 18208                           
 18209                           ;usb_device.c: 2918: }
 18210                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18211                           
 18212                           ; BSR set to: 13
 18213  0114D8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18214  0114DC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18215  0114E0  0E3B               	movlw	59
 18216  0114E2  16DF               	andwf	indf2,f,c
 18217                           
 18218                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18219  0114E4  0E00               	movlw	0
 18220  0114E6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18221  0114E8  0E05               	movlw	5
 18222  0114EA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18223  0114EC  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18224  0114F0  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18225  0114F4  0E00               	movlw	0
 18226  0114F6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18227  0114F8  0E02               	movlw	2
 18228  0114FA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18229  0114FC  EC39  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18230                           
 18231                           ;usb_device.c: 2924: }
 18232  011500  D006               	goto	i2l6412
 18233  011502                     i2l6410:
 18234                           
 18235                           ;usb_device.c: 2925: else
 18236                           ;usb_device.c: 2926: {
 18237                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18238  011502  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18239  011506  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18240  01150A  0E3B               	movlw	59
 18241  01150C  16DF               	andwf	indf2,f,c
 18242  01150E                     i2l6412:
 18243                           
 18244                           ;usb_device.c: 2929: }
 18245                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18246  01150E  010D               	movlb	13	; () banked
 18247  011510  5134               	movf	52,w,b	;volatile
 18248  011512  0B0F               	andlw	15
 18249  011514  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18250  011516  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18251  011518  0D01               	mullw	1
 18252  01151A  0E26               	movlw	38
 18253  01151C  24F3               	addwf	prodl,w,c
 18254  01151E  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 18255  011520  0E0F               	movlw	15
 18256  011522  20F4               	addwfc	prodh,w,c
 18257  011524  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18258                           
 18259                           ; BSR set to: 13
 18260                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 18261  011526  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18262  01152A  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18263  01152E  0EFE               	movlw	254
 18264  011530  16DF               	andwf	indf2,f,c
 18265                           
 18266                           ; BSR set to: 13
 18267  011532  0012               	return	
 18268  011534                     __end_of_USBStdFeatureReqHandler:
 18269                           	opt stack 0
 18270                           pclatu	equ	0xFFB
 18271                           pclath	equ	0xFFA
 18272                           tblptru	equ	0xFF8
 18273                           tblptrh	equ	0xFF7
 18274                           tblptrl	equ	0xFF6
 18275                           tablat	equ	0xFF5
 18276                           prodh	equ	0xFF4
 18277                           prodl	equ	0xFF3
 18278                           intcon	equ	0xFF2
 18279                           intcon2	equ	0xFF1
 18280                           indf0	equ	0xFEF
 18281                           postinc0	equ	0xFEE
 18282                           fsr0h	equ	0xFEA
 18283                           fsr0l	equ	0xFE9
 18284                           wreg	equ	0xFE8
 18285                           indf1	equ	0xFE7
 18286                           postinc1	equ	0xFE6
 18287                           postdec1	equ	0xFE5
 18288                           fsr1h	equ	0xFE2
 18289                           fsr1l	equ	0xFE1
 18290                           indf2	equ	0xFDF
 18291                           postinc2	equ	0xFDE
 18292                           postdec2	equ	0xFDD
 18293                           plusw2	equ	0xFDB
 18294                           fsr2h	equ	0xFDA
 18295                           fsr2l	equ	0xFD9
 18296                           status	equ	0xFD8
 18297                           
 18298 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18299 ;; Defined at:
 18300 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 18301 ;; Parameters:    Size  Location     Type
 18302 ;;  event           2   12[COMRAM] enum E8545
 18303 ;;  pdata           2   14[COMRAM] PTR void 
 18304 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 18305 ;;  size            2   16[COMRAM] unsigned int 
 18306 ;; Auto vars:     Size  Location     Type
 18307 ;;		None
 18308 ;; Return value:  Size  Location     Type
 18309 ;;                  1    wreg      unsigned char 
 18310 ;; Registers used:
 18311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18312 ;; Tracked objects:
 18313 ;;		On entry : 0/0
 18314 ;;		On exit  : 0/0
 18315 ;;		Unchanged: 0/0
 18316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18317 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;Total ram usage:        8 bytes
 18322 ;; Hardware stack levels used:    1
 18323 ;; Hardware stack levels required when called:    3
 18324 ;; This function calls:
 18325 ;;		_CDCInitEP
 18326 ;;		_USBCheckCDCRequest
 18327 ;; This function is called by:
 18328 ;;		_USBDeviceTasks
 18329 ;;		_USBStdSetCfgHandler
 18330 ;;		_USBSuspend
 18331 ;;		_USBWakeFromSuspend
 18332 ;;		_USBCtrlTrfSetupHandler
 18333 ;;		_USBCheckStdRequest
 18334 ;;		_USBStdFeatureReqHandler
 18335 ;; This function uses a non-reentrant model
 18336 ;;
 18337                           
 18338                           	psect	text78
 18339  014472                     __ptext78:
 18340                           	opt stack 0
 18341  014472                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18342                           	opt stack 15
 18343                           
 18344                           ;My_usb_cdc.c: 45: switch ((int) event) {
 18345                           
 18346                           ;incstack = 0
 18347  014472  D006               	goto	i2l6006
 18348  014474                     i2l6000:
 18349                           
 18350                           ;My_usb_cdc.c: 47: CDCInitEP();
 18351  014474  EC60  F09F         	call	_CDCInitEP	;wreg free
 18352                           
 18353                           ;My_usb_cdc.c: 48: break;
 18354  014478  0012               	return	
 18355  01447A                     i2l6002:
 18356                           
 18357                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 18358  01447A  EC1A  F09B         	call	_USBCheckCDCRequest	;wreg free
 18359                           
 18360                           ;My_usb_cdc.c: 52: }
 18361                           
 18362                           ;My_usb_cdc.c: 51: break;
 18363  01447E  0012               	return	
 18364  014480                     i2l6006:
 18365  014480  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18366  014484  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18367                           
 18368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18369                           ; Switch size 1, requested type "space"
 18370                           ; Number of cases is 1, Range of values is 0 to 0
 18371                           ; switch strategies available:
 18372                           ; Name         Instructions Cycles
 18373                           ; simple_byte            4     3 (average)
 18374                           ;	Chosen strategy is simple_byte
 18375  014488  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18376  01448A  0A00               	xorlw	0	; case 0
 18377  01448C  A4D8               	btfss	status,2,c
 18378  01448E  0012               	return	
 18379                           
 18380                           ; Switch size 1, requested type "space"
 18381                           ; Number of cases is 2, Range of values is 1 to 3
 18382                           ; switch strategies available:
 18383                           ; Name         Instructions Cycles
 18384                           ; simple_byte            7     4 (average)
 18385                           ;	Chosen strategy is simple_byte
 18386  014490  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18387  014492  0A01               	xorlw	1	; case 1
 18388  014494  B4D8               	btfsc	status,2,c
 18389  014496  D7EE               	goto	i2l6000
 18390  014498  0A02               	xorlw	2	; case 3
 18391  01449A  A4D8               	btfss	status,2,c
 18392  01449C  0012               	return	
 18393  01449E  D7ED               	goto	i2l6002
 18394  0144A0                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18395                           	opt stack 0
 18396                           pclatu	equ	0xFFB
 18397                           pclath	equ	0xFFA
 18398                           tblptru	equ	0xFF8
 18399                           tblptrh	equ	0xFF7
 18400                           tblptrl	equ	0xFF6
 18401                           tablat	equ	0xFF5
 18402                           prodh	equ	0xFF4
 18403                           prodl	equ	0xFF3
 18404                           intcon	equ	0xFF2
 18405                           intcon2	equ	0xFF1
 18406                           indf0	equ	0xFEF
 18407                           postinc0	equ	0xFEE
 18408                           fsr0h	equ	0xFEA
 18409                           fsr0l	equ	0xFE9
 18410                           wreg	equ	0xFE8
 18411                           indf1	equ	0xFE7
 18412                           postinc1	equ	0xFE6
 18413                           postdec1	equ	0xFE5
 18414                           fsr1h	equ	0xFE2
 18415                           fsr1l	equ	0xFE1
 18416                           indf2	equ	0xFDF
 18417                           postinc2	equ	0xFDE
 18418                           postdec2	equ	0xFDD
 18419                           plusw2	equ	0xFDB
 18420                           fsr2h	equ	0xFDA
 18421                           fsr2l	equ	0xFD9
 18422                           status	equ	0xFD8
 18423                           
 18424 ;; *************** function _USBCheckCDCRequest *****************
 18425 ;; Defined at:
 18426 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;		None
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;		None
 18431 ;; Return value:  Size  Location     Type
 18432 ;;		None               void
 18433 ;; Registers used:
 18434 ;;		wreg, status,2, status,0
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/0
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18444 ;;Total ram usage:        0 bytes
 18445 ;; Hardware stack levels used:    1
 18446 ;; This function calls:
 18447 ;;		Nothing
 18448 ;; This function is called by:
 18449 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18450 ;; This function uses a non-reentrant model
 18451 ;;
 18452                           
 18453                           	psect	text79
 18454  013634                     __ptext79:
 18455                           	opt stack 0
 18456  013634                     _USBCheckCDCRequest:
 18457                           	opt stack 17
 18458                           
 18459                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18460                           
 18461                           ;incstack = 0
 18462  013634  010D               	movlb	13	; () banked
 18463  013636  5130               	movf	48,w,b	;volatile
 18464  013638  0B1F               	andlw	31
 18465  01363A  06E8               	decf	wreg,f,c
 18466  01363C  A4D8               	btfss	status,2,c
 18467  01363E  0012               	return	
 18468                           
 18469                           ; BSR set to: 13
 18470                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18471                           
 18472                           ; BSR set to: 13
 18473                           
 18474                           ; BSR set to: 13
 18475  013640  010D               	movlb	13	; () banked
 18476  013642  3930               	swapf	48,w,b	;volatile
 18477  013644  32E8               	rrcf	wreg,f,c
 18478  013646  0B03               	andlw	3
 18479  013648  06E8               	decf	wreg,f,c
 18480  01364A  A4D8               	btfss	status,2,c
 18481  01364C  0012               	return	
 18482                           
 18483                           ; BSR set to: 13
 18484                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18485                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18486                           
 18487                           ; BSR set to: 13
 18488                           
 18489                           ; BSR set to: 13
 18490  01364E  010D               	movlb	13	; () banked
 18491  013650  5134               	movf	52,w,b	;volatile
 18492  013652  B4D8               	btfsc	status,2,c
 18493  013654  D035               	goto	i2l5880
 18494                           
 18495                           ; BSR set to: 13
 18496  013656  010D               	movlb	13	; () banked
 18497  013658  0534               	decf	52,w,b	;volatile
 18498  01365A  A4D8               	btfss	status,2,c
 18499  01365C  0012               	return	
 18500  01365E  D030               	goto	i2l5880
 18501  013660                     i2l5856:
 18502                           
 18503                           ; BSR set to: 13
 18504                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18505  013660  0E46               	movlw	low _dummy_encapsulated_cmd_response
 18506  013662  6E0A               	movwf	_inPipes,c	;volatile
 18507  013664  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18508  013666  6E0B               	movwf	_inPipes+1,c	;volatile
 18509                           
 18510                           ; BSR set to: 13
 18511                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18512  013668  0E00               	movlw	0
 18513  01366A  6E0F               	movwf	_inPipes+5,c	;volatile
 18514  01366C  0E08               	movlw	8
 18515  01366E  6E0E               	movwf	_inPipes+4,c	;volatile
 18516                           
 18517                           ; BSR set to: 13
 18518                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18519  013670  800D               	bsf	_inPipes+3,0,c	;volatile
 18520                           
 18521                           ; BSR set to: 13
 18522                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18523  013672  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18524                           
 18525                           ;usb_device_cdc.c: 232: break;
 18526  013674  0012               	return	
 18527  013676                     i2l5864:
 18528                           
 18529                           ; BSR set to: 13
 18530                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18531  013676  0E46               	movlw	low _dummy_encapsulated_cmd_response
 18532  013678  6E0A               	movwf	_inPipes,c	;volatile
 18533  01367A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18534  01367C  6E0B               	movwf	_inPipes+1,c	;volatile
 18535                           
 18536                           ; BSR set to: 13
 18537                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18538  01367E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18539                           
 18540                           ;usb_device_cdc.c: 237: break;
 18541  013680  0012               	return	
 18542  013682                     i2l450:
 18543                           
 18544                           ; BSR set to: 13
 18545                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18546  013682  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18547  013686  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18548                           
 18549                           ; BSR set to: 13
 18550                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18551  01368A  0E76               	movlw	low _line_coding
 18552  01368C  6E01               	movwf	_outPipes,c	;volatile
 18553  01368E  0E01               	movlw	high _line_coding
 18554  013690  6E02               	movwf	_outPipes+1,c	;volatile
 18555                           
 18556                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18557  013692  0E00               	movlw	0
 18558  013694  6E07               	movwf	_outPipes+6,c	;volatile
 18559  013696  0E00               	movlw	0
 18560  013698  6E08               	movwf	_outPipes+7,c	;volatile
 18561  01369A  0E00               	movlw	0
 18562  01369C  6E09               	movwf	_outPipes+8,c	;volatile
 18563                           
 18564                           ; BSR set to: 13
 18565                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18566  01369E  8E04               	bsf	_outPipes+3,7,c	;volatile
 18567                           
 18568                           ;usb_device_cdc.c: 246: break;
 18569  0136A0  0012               	return	
 18570  0136A2                     i2l5872:
 18571                           
 18572                           ; BSR set to: 13
 18573                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18574  0136A2  0E76               	movlw	low _line_coding
 18575  0136A4  6E0A               	movwf	_inPipes,c	;volatile
 18576  0136A6  0E01               	movlw	high _line_coding
 18577  0136A8  6E0B               	movwf	_inPipes+1,c	;volatile
 18578                           
 18579                           ; BSR set to: 13
 18580  0136AA  0E00               	movlw	0
 18581  0136AC  6E0F               	movwf	_inPipes+5,c	;volatile
 18582  0136AE  0E07               	movlw	7
 18583  0136B0  6E0E               	movwf	_inPipes+4,c	;volatile
 18584                           
 18585                           ; BSR set to: 13
 18586  0136B2  0EC1               	movlw	193
 18587  0136B4  6E0D               	movwf	_inPipes+3,c	;volatile
 18588                           
 18589                           ;usb_device_cdc.c: 253: break;
 18590  0136B6  0012               	return	
 18591  0136B8                     i2l452:
 18592                           
 18593                           ; BSR set to: 13
 18594                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18595  0136B8  CD32 F0ED          	movff	3378,_control_signal_bitmap	;volatile
 18596                           
 18597                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18598  0136BC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18599                           
 18600                           ; BSR set to: 13
 18601                           ;usb_device_cdc.c: 315: }
 18602                           
 18603                           ; BSR set to: 13
 18604                           ;usb_device_cdc.c: 314: break;
 18605                           
 18606                           ;usb_device_cdc.c: 313: default:
 18607                           
 18608                           ;usb_device_cdc.c: 289: break;
 18609  0136BE  0012               	return	
 18610  0136C0                     i2l5880:
 18611                           
 18612                           ; BSR set to: 13
 18613  0136C0  010D               	movlb	13	; () banked
 18614  0136C2  5131               	movf	49,w,b	;volatile
 18615                           
 18616                           ; Switch size 1, requested type "space"
 18617                           ; Number of cases is 5, Range of values is 0 to 34
 18618                           ; switch strategies available:
 18619                           ; Name         Instructions Cycles
 18620                           ; simple_byte           16     9 (average)
 18621                           ;	Chosen strategy is simple_byte
 18622  0136C4  0A00               	xorlw	0	; case 0
 18623  0136C6  B4D8               	btfsc	status,2,c
 18624  0136C8  D7CB               	goto	i2l5856
 18625  0136CA  0A01               	xorlw	1	; case 1
 18626  0136CC  B4D8               	btfsc	status,2,c
 18627  0136CE  D7D3               	goto	i2l5864
 18628  0136D0  0A21               	xorlw	33	; case 32
 18629  0136D2  B4D8               	btfsc	status,2,c
 18630  0136D4  D7D6               	goto	i2l450
 18631  0136D6  0A01               	xorlw	1	; case 33
 18632  0136D8  B4D8               	btfsc	status,2,c
 18633  0136DA  D7E3               	goto	i2l5872
 18634  0136DC  0A03               	xorlw	3	; case 34
 18635  0136DE  A4D8               	btfss	status,2,c
 18636  0136E0  0012               	return	
 18637  0136E2  D7EA               	goto	i2l452
 18638  0136E4                     __end_of_USBCheckCDCRequest:
 18639                           	opt stack 0
 18640                           pclatu	equ	0xFFB
 18641                           pclath	equ	0xFFA
 18642                           tblptru	equ	0xFF8
 18643                           tblptrh	equ	0xFF7
 18644                           tblptrl	equ	0xFF6
 18645                           tablat	equ	0xFF5
 18646                           prodh	equ	0xFF4
 18647                           prodl	equ	0xFF3
 18648                           intcon	equ	0xFF2
 18649                           intcon2	equ	0xFF1
 18650                           indf0	equ	0xFEF
 18651                           postinc0	equ	0xFEE
 18652                           fsr0h	equ	0xFEA
 18653                           fsr0l	equ	0xFE9
 18654                           wreg	equ	0xFE8
 18655                           indf1	equ	0xFE7
 18656                           postinc1	equ	0xFE6
 18657                           postdec1	equ	0xFE5
 18658                           fsr1h	equ	0xFE2
 18659                           fsr1l	equ	0xFE1
 18660                           indf2	equ	0xFDF
 18661                           postinc2	equ	0xFDE
 18662                           postdec2	equ	0xFDD
 18663                           plusw2	equ	0xFDB
 18664                           fsr2h	equ	0xFDA
 18665                           fsr2l	equ	0xFD9
 18666                           status	equ	0xFD8
 18667                           
 18668 ;; *************** function _CDCInitEP *****************
 18669 ;; Defined at:
 18670 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 18671 ;; Parameters:    Size  Location     Type
 18672 ;;		None
 18673 ;; Auto vars:     Size  Location     Type
 18674 ;;		None
 18675 ;; Return value:  Size  Location     Type
 18676 ;;		None               void
 18677 ;; Registers used:
 18678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18679 ;; Tracked objects:
 18680 ;;		On entry : 0/0
 18681 ;;		On exit  : 0/0
 18682 ;;		Unchanged: 0/0
 18683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18688 ;;Total ram usage:        0 bytes
 18689 ;; Hardware stack levels used:    1
 18690 ;; Hardware stack levels required when called:    2
 18691 ;; This function calls:
 18692 ;;		_USBEnableEndpoint
 18693 ;;		i2_USBTransferOnePacket
 18694 ;; This function is called by:
 18695 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18696 ;; This function uses a non-reentrant model
 18697 ;;
 18698                           
 18699                           	psect	text80
 18700  013EC0                     __ptext80:
 18701                           	opt stack 0
 18702  013EC0                     _CDCInitEP:
 18703                           	opt stack 15
 18704                           
 18705                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18706                           
 18707                           ; BSR set to: 13
 18708                           ;incstack = 0
 18709  013EC0  0E00               	movlw	0
 18710  013EC2  0101               	movlb	1	; () banked
 18711  013EC4  6F76               	movwf	_line_coding& (0+255),b
 18712  013EC6  0E4B               	movlw	75
 18713  013EC8  6F77               	movwf	(_line_coding+1)& (0+255),b
 18714  013ECA  0E00               	movlw	0
 18715  013ECC  6F78               	movwf	(_line_coding+2)& (0+255),b
 18716  013ECE  0E00               	movlw	0
 18717  013ED0  6F79               	movwf	(_line_coding+3)& (0+255),b
 18718                           
 18719                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18720  013ED2  0E00               	movlw	0
 18721  013ED4  0101               	movlb	1	; () banked
 18722  013ED6  6F7A               	movwf	(_line_coding+4)& (0+255),b
 18723                           
 18724                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18725  013ED8  0E00               	movlw	0
 18726  013EDA  0101               	movlb	1	; () banked
 18727  013EDC  6F7B               	movwf	(_line_coding+5)& (0+255),b
 18728                           
 18729                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18730  013EDE  0E08               	movlw	8
 18731  013EE0  0101               	movlb	1	; () banked
 18732  013EE2  6F7C               	movwf	(_line_coding+6)& (0+255),b
 18733                           
 18734                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18735  013EE4  0E00               	movlw	0
 18736  013EE6  0100               	movlb	0	; () banked
 18737  013EE8  6FEB               	movwf	_cdc_rx_len& (0+255),b
 18738                           
 18739                           ; BSR set to: 0
 18740                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18741  013EEA  0E1A               	movlw	26
 18742  013EEC  6E36               	movwf	USBEnableEndpoint@options,c
 18743  013EEE  0E01               	movlw	1
 18744  013EF0  EC94  F0A1         	call	_USBEnableEndpoint
 18745                           
 18746                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18747  013EF4  0E1E               	movlw	30
 18748  013EF6  6E36               	movwf	USBEnableEndpoint@options,c
 18749  013EF8  0E02               	movlw	2
 18750  013EFA  EC94  F0A1         	call	_USBEnableEndpoint
 18751                           
 18752                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18753  013EFE  0E00               	movlw	0
 18754  013F00  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18755  013F02  0E00               	movlw	low _cdc_data_rx
 18756  013F04  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18757  013F06  0E02               	movlw	high _cdc_data_rx
 18758  013F08  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18759  013F0A  0E40               	movlw	64
 18760  013F0C  6E31               	movwf	i2USBTransferOnePacket@len,c
 18761  013F0E  0E02               	movlw	2
 18762  013F10  EC60  F09A         	call	i2_USBTransferOnePacket
 18763  013F14  C02E  F0DF         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18764  013F18  C02F  F0E0         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18765                           
 18766                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18767  013F1C  0E00               	movlw	0
 18768  013F1E  0100               	movlb	0	; () banked
 18769  013F20  6FDD               	movwf	_CDCDataInHandle& (0+255),b
 18770  013F22  0E00               	movlw	0
 18771  013F24  0100               	movlb	0	; () banked
 18772  013F26  6FDE               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18776  013F28  0E00               	movlw	0
 18777  013F2A  6E28               	movwf	_cdc_trf_state,c
 18778                           
 18779                           ; BSR set to: 0
 18780  013F2C  0012               	return		;funcret
 18781  013F2E                     __end_of_CDCInitEP:
 18782                           	opt stack 0
 18783                           pclatu	equ	0xFFB
 18784                           pclath	equ	0xFFA
 18785                           tblptru	equ	0xFF8
 18786                           tblptrh	equ	0xFF7
 18787                           tblptrl	equ	0xFF6
 18788                           tablat	equ	0xFF5
 18789                           prodh	equ	0xFF4
 18790                           prodl	equ	0xFF3
 18791                           intcon	equ	0xFF2
 18792                           intcon2	equ	0xFF1
 18793                           indf0	equ	0xFEF
 18794                           postinc0	equ	0xFEE
 18795                           fsr0h	equ	0xFEA
 18796                           fsr0l	equ	0xFE9
 18797                           wreg	equ	0xFE8
 18798                           indf1	equ	0xFE7
 18799                           postinc1	equ	0xFE6
 18800                           postdec1	equ	0xFE5
 18801                           fsr1h	equ	0xFE2
 18802                           fsr1l	equ	0xFE1
 18803                           indf2	equ	0xFDF
 18804                           postinc2	equ	0xFDE
 18805                           postdec2	equ	0xFDD
 18806                           plusw2	equ	0xFDB
 18807                           fsr2h	equ	0xFDA
 18808                           fsr2l	equ	0xFD9
 18809                           status	equ	0xFD8
 18810                           
 18811 ;; *************** function i2_USBTransferOnePacket *****************
 18812 ;; Defined at:
 18813 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  ep              1    wreg     unsigned char 
 18816 ;;  dir             1    0[COMRAM] unsigned char 
 18817 ;;  data            2    1[COMRAM] PTR unsigned char 
 18818 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18819 ;;  len             1    3[COMRAM] unsigned char 
 18820 ;; Auto vars:     Size  Location     Type
 18821 ;;  ep              1    4[COMRAM] unsigned char 
 18822 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18823 ;;		 -> NULL(0), BDT(48), 
 18824 ;; Return value:  Size  Location     Type
 18825 ;;                  2    0[COMRAM] PTR void 
 18826 ;; Registers used:
 18827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18828 ;; Tracked objects:
 18829 ;;		On entry : 0/0
 18830 ;;		On exit  : 0/0
 18831 ;;		Unchanged: 0/0
 18832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18834 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;Total ram usage:        7 bytes
 18838 ;; Hardware stack levels used:    1
 18839 ;; This function calls:
 18840 ;;		Nothing
 18841 ;; This function is called by:
 18842 ;;		_CDCInitEP
 18843 ;; This function uses a non-reentrant model
 18844 ;;
 18845                           
 18846                           	psect	text81
 18847  0134C0                     __ptext81:
 18848                           	opt stack 0
 18849  0134C0                     i2_USBTransferOnePacket:
 18850                           	opt stack 16
 18851                           
 18852                           ; BSR set to: 0
 18853                           ;incstack = 0
 18854                           ;i2USBTransferOnePacket@ep stored from wreg
 18855  0134C0  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18856                           
 18857                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18858                           ;usb_device.c: 1000: if(dir != 0)
 18859  0134C2  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18860  0134C4  B4D8               	btfsc	status,2,c
 18861  0134C6  D007               	goto	i2l5816
 18862                           
 18863                           ;usb_device.c: 1001: {
 18864                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18865  0134C8  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18866  0134CA  0D02               	mullw	2
 18867  0134CC  0E10               	movlw	low _pBDTEntryIn
 18868  0134CE  24F3               	addwf	prodl,w,c
 18869  0134D0  6ED9               	movwf	fsr2l,c
 18870  0134D2  0E00               	movlw	high _pBDTEntryIn
 18871  0134D4  D006               	goto	L12
 18872  0134D6                     i2l5816:
 18873                           
 18874                           ;usb_device.c: 1005: else
 18875                           ;usb_device.c: 1006: {
 18876                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18877  0134D6  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18878  0134D8  0D02               	mullw	2
 18879  0134DA  0E0A               	movlw	low _pBDTEntryOut
 18880  0134DC  24F3               	addwf	prodl,w,c
 18881  0134DE  6ED9               	movwf	fsr2l,c
 18882  0134E0  0E01               	movlw	high _pBDTEntryOut
 18883  0134E2                     L12:
 18884  0134E2  20F4               	addwfc	prodh,w,c
 18885  0134E4  6EDA               	movwf	fsr2h,c
 18886  0134E6  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18887  0134EA  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18888                           
 18889                           ;usb_device.c: 1009: }
 18890                           ;usb_device.c: 1013: if(handle == 0)
 18891  0134EE  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18892  0134F0  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18893  0134F2  A4D8               	btfss	status,2,c
 18894  0134F4  D005               	goto	i2l5824
 18895                           
 18896                           ;usb_device.c: 1014: {
 18897                           ;usb_device.c: 1015: return 0;
 18898  0134F6  0E00               	movlw	0
 18899  0134F8  6E2E               	movwf	?i2_USBTransferOnePacket,c
 18900  0134FA  0E00               	movlw	0
 18901  0134FC  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 18902  0134FE  0012               	return	
 18903  013500                     i2l5824:
 18904                           
 18905                           ;usb_device.c: 1016: }
 18906                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18907  013500  EE20 F002          	lfsr	2,2
 18908  013504  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18909  013506  26D9               	addwf	fsr2l,f,c
 18910  013508  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18911  01350A  22DA               	addwfc	fsr2h,f,c
 18912  01350C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18913  013510  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18914                           
 18915                           ;usb_device.c: 1030: handle->CNT = len;
 18916  013514  EE20 F001          	lfsr	2,1
 18917  013518  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18918  01351A  26D9               	addwf	fsr2l,f,c
 18919  01351C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18920  01351E  22DA               	addwfc	fsr2h,f,c
 18921  013520  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18922                           
 18923                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18924  013524  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18925  013528  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18926  01352C  0E40               	movlw	64
 18927  01352E  16DF               	andwf	indf2,f,c
 18928                           
 18929                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18930  013530  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18931  013534  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18932  013538  0E00               	movlw	0
 18933  01353A  86DB               	bsf	plusw2,3,c
 18934                           
 18935                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18936  01353C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18937  013540  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18938  013544  0E00               	movlw	0
 18939  013546  8EDB               	bsf	plusw2,7,c
 18940                           
 18941                           ;usb_device.c: 1036: if(dir != 0)
 18942  013548  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18943  01354A  B4D8               	btfsc	status,2,c
 18944  01354C  D007               	goto	i2l5836
 18945                           
 18946                           ;usb_device.c: 1037: {
 18947                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18948  01354E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18949  013550  0D02               	mullw	2
 18950  013552  0E10               	movlw	low _pBDTEntryIn
 18951  013554  24F3               	addwf	prodl,w,c
 18952  013556  6ED9               	movwf	fsr2l,c
 18953  013558  0E00               	movlw	high _pBDTEntryIn
 18954  01355A  D006               	goto	L13
 18955  01355C                     i2l5836:
 18956                           
 18957                           ;usb_device.c: 1041: else
 18958                           ;usb_device.c: 1042: {
 18959                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18960  01355C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18961  01355E  0D02               	mullw	2
 18962  013560  0E0A               	movlw	low _pBDTEntryOut
 18963  013562  24F3               	addwf	prodl,w,c
 18964  013564  6ED9               	movwf	fsr2l,c
 18965  013566  0E01               	movlw	high _pBDTEntryOut
 18966  013568                     L13:
 18967  013568  20F4               	addwfc	prodh,w,c
 18968  01356A  6EDA               	movwf	fsr2h,c
 18969  01356C  0E04               	movlw	4
 18970  01356E  1ADF               	xorwf	indf2,f,c
 18971                           
 18972                           ;usb_device.c: 1045: }
 18973                           ;usb_device.c: 1046: return (void*)handle;
 18974  013570  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18975  013574  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18976  013578  0012               	return	
 18977  01357A                     __end_ofi2_USBTransferOnePacket:
 18978                           	opt stack 0
 18979                           pclatu	equ	0xFFB
 18980                           pclath	equ	0xFFA
 18981                           tblptru	equ	0xFF8
 18982                           tblptrh	equ	0xFF7
 18983                           tblptrl	equ	0xFF6
 18984                           tablat	equ	0xFF5
 18985                           prodh	equ	0xFF4
 18986                           prodl	equ	0xFF3
 18987                           intcon	equ	0xFF2
 18988                           intcon2	equ	0xFF1
 18989                           indf0	equ	0xFEF
 18990                           postinc0	equ	0xFEE
 18991                           fsr0h	equ	0xFEA
 18992                           fsr0l	equ	0xFE9
 18993                           wreg	equ	0xFE8
 18994                           indf1	equ	0xFE7
 18995                           postinc1	equ	0xFE6
 18996                           postdec1	equ	0xFE5
 18997                           fsr1h	equ	0xFE2
 18998                           fsr1l	equ	0xFE1
 18999                           indf2	equ	0xFDF
 19000                           postinc2	equ	0xFDE
 19001                           postdec2	equ	0xFDD
 19002                           plusw2	equ	0xFDB
 19003                           fsr2h	equ	0xFDA
 19004                           fsr2l	equ	0xFD9
 19005                           status	equ	0xFD8
 19006                           
 19007 ;; *************** function _USBEnableEndpoint *****************
 19008 ;; Defined at:
 19009 ;;		line 878 in file "../My_library/usb/usb_device.c"
 19010 ;; Parameters:    Size  Location     Type
 19011 ;;  ep              1    wreg     unsigned char 
 19012 ;;  options         1    8[COMRAM] unsigned char 
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;  ep              1   11[COMRAM] unsigned char 
 19015 ;;  p               2    9[COMRAM] PTR unsigned char 
 19016 ;;		 -> UEP0(1), 
 19017 ;; Return value:  Size  Location     Type
 19018 ;;		None               void
 19019 ;; Registers used:
 19020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19026 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19027 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;Total ram usage:        4 bytes
 19031 ;; Hardware stack levels used:    1
 19032 ;; Hardware stack levels required when called:    1
 19033 ;; This function calls:
 19034 ;;		_USBConfigureEndpoint
 19035 ;; This function is called by:
 19036 ;;		_CDCInitEP
 19037 ;; This function uses a non-reentrant model
 19038 ;;
 19039                           
 19040                           	psect	text82
 19041  014328                     __ptext82:
 19042                           	opt stack 0
 19043  014328                     _USBEnableEndpoint:
 19044                           	opt stack 15
 19045                           
 19046                           ;incstack = 0
 19047                           ;USBEnableEndpoint@ep stored from wreg
 19048  014328  6E39               	movwf	USBEnableEndpoint@ep,c
 19049                           
 19050                           ;usb_device.c: 880: unsigned char* p;
 19051                           ;usb_device.c: 884: if(options & 0x04)
 19052  01432A  A436               	btfss	USBEnableEndpoint@options,2,c
 19053  01432C  D005               	goto	i2l5768
 19054                           
 19055                           ;usb_device.c: 885: {
 19056                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 19057  01432E  0E00               	movlw	0
 19058  014330  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19059  014332  5039               	movf	USBEnableEndpoint@ep,w,c
 19060  014334  EC49  F09D         	call	_USBConfigureEndpoint
 19061  014338                     i2l5768:
 19062                           
 19063                           ;usb_device.c: 887: }
 19064                           ;usb_device.c: 888: if(options & 0x02)
 19065  014338  A236               	btfss	USBEnableEndpoint@options,1,c
 19066  01433A  D005               	goto	i2l5772
 19067                           
 19068                           ;usb_device.c: 889: {
 19069                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 19070  01433C  0E01               	movlw	1
 19071  01433E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19072  014340  5039               	movf	USBEnableEndpoint@ep,w,c
 19073  014342  EC49  F09D         	call	_USBConfigureEndpoint
 19074  014346                     i2l5772:
 19075                           
 19076                           ;usb_device.c: 891: }
 19077                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 19078  014346  5039               	movf	USBEnableEndpoint@ep,w,c
 19079  014348  0D01               	mullw	1
 19080  01434A  0E26               	movlw	38
 19081  01434C  24F3               	addwf	prodl,w,c
 19082  01434E  6E37               	movwf	USBEnableEndpoint@p,c
 19083  014350  0E0F               	movlw	15
 19084  014352  20F4               	addwfc	prodh,w,c
 19085  014354  6E38               	movwf	USBEnableEndpoint@p+1,c
 19086                           
 19087                           ;usb_device.c: 901: *p = options;
 19088  014356  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19089  01435A  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19090  01435E  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19091  014362  0012               	return		;funcret
 19092  014364                     __end_of_USBEnableEndpoint:
 19093                           	opt stack 0
 19094                           pclatu	equ	0xFFB
 19095                           pclath	equ	0xFFA
 19096                           tblptru	equ	0xFF8
 19097                           tblptrh	equ	0xFF7
 19098                           tblptrl	equ	0xFF6
 19099                           tablat	equ	0xFF5
 19100                           prodh	equ	0xFF4
 19101                           prodl	equ	0xFF3
 19102                           intcon	equ	0xFF2
 19103                           intcon2	equ	0xFF1
 19104                           indf0	equ	0xFEF
 19105                           postinc0	equ	0xFEE
 19106                           fsr0h	equ	0xFEA
 19107                           fsr0l	equ	0xFE9
 19108                           wreg	equ	0xFE8
 19109                           indf1	equ	0xFE7
 19110                           postinc1	equ	0xFE6
 19111                           postdec1	equ	0xFE5
 19112                           fsr1h	equ	0xFE2
 19113                           fsr1l	equ	0xFE1
 19114                           indf2	equ	0xFDF
 19115                           postinc2	equ	0xFDE
 19116                           postdec2	equ	0xFDD
 19117                           plusw2	equ	0xFDB
 19118                           fsr2h	equ	0xFDA
 19119                           fsr2l	equ	0xFD9
 19120                           status	equ	0xFD8
 19121                           
 19122 ;; *************** function _USBConfigureEndpoint *****************
 19123 ;; Defined at:
 19124 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 19125 ;; Parameters:    Size  Location     Type
 19126 ;;  EPNum           1    wreg     unsigned char 
 19127 ;;  direction       1    0[COMRAM] unsigned char 
 19128 ;; Auto vars:     Size  Location     Type
 19129 ;;  EPNum           1    5[COMRAM] unsigned char 
 19130 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19131 ;;		 -> BDT(48), 
 19132 ;; Return value:  Size  Location     Type
 19133 ;;		None               void
 19134 ;; Registers used:
 19135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19136 ;; Tracked objects:
 19137 ;;		On entry : 0/0
 19138 ;;		On exit  : 0/0
 19139 ;;		Unchanged: 0/0
 19140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19141 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19142 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19144 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19145 ;;Total ram usage:        8 bytes
 19146 ;; Hardware stack levels used:    1
 19147 ;; This function calls:
 19148 ;;		Nothing
 19149 ;; This function is called by:
 19150 ;;		_USBEnableEndpoint
 19151 ;; This function uses a non-reentrant model
 19152 ;;
 19153                           
 19154                           	psect	text83
 19155  013A92                     __ptext83:
 19156                           	opt stack 0
 19157  013A92                     _USBConfigureEndpoint:
 19158                           	opt stack 15
 19159                           
 19160                           ;incstack = 0
 19161                           ;USBConfigureEndpoint@EPNum stored from wreg
 19162  013A92  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19163                           
 19164                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 19165                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 19166  013A94  0E00               	movlw	0
 19167  013A96  6E34               	movwf	USBConfigureEndpoint@handle,c
 19168  013A98  0E0D               	movlw	13
 19169  013A9A  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19170                           
 19171                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 19172  013A9C  502E               	movf	USBConfigureEndpoint@direction,w,c
 19173  013A9E  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19174  013AA0  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19175  013AA2  90D8               	bcf	status,0,c
 19176  013AA4  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19177  013AA6  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19178  013AA8  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19179  013AAA  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19180  013AAC  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19181  013AAE  90D8               	bcf	status,0,c
 19182  013AB0  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19183  013AB2  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19184  013AB4  90D8               	bcf	status,0,c
 19185  013AB6  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19186  013AB8  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19187  013ABA  502F               	movf	??_USBConfigureEndpoint,w,c
 19188  013ABC  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19189  013ABE  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19190  013AC0  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19191  013AC2  90D8               	bcf	status,0,c
 19192  013AC4  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19193  013AC6  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19194  013AC8  90D8               	bcf	status,0,c
 19195  013ACA  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19196  013ACC  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19197  013ACE  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19198  013AD0  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19199  013AD2  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19200  013AD4  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19201                           
 19202                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 19203  013AD6  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19204  013ADA  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19205  013ADE  9EDF               	bcf	indf2,7,c
 19206                           
 19207                           ;usb_device.c: 1557: if(direction == 0)
 19208  013AE0  502E               	movf	USBConfigureEndpoint@direction,w,c
 19209  013AE2  A4D8               	btfss	status,2,c
 19210  013AE4  D007               	goto	i2l5758
 19211                           
 19212                           ;usb_device.c: 1558: {
 19213                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 19214  013AE6  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19215  013AE8  0D02               	mullw	2
 19216  013AEA  0E0A               	movlw	low _pBDTEntryOut
 19217  013AEC  24F3               	addwf	prodl,w,c
 19218  013AEE  6ED9               	movwf	fsr2l,c
 19219  013AF0  0E01               	movlw	high _pBDTEntryOut
 19220  013AF2  D006               	goto	L14
 19221  013AF4                     i2l5758:
 19222                           
 19223                           ;usb_device.c: 1561: else
 19224                           ;usb_device.c: 1562: {
 19225                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 19226  013AF4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19227  013AF6  0D02               	mullw	2
 19228  013AF8  0E10               	movlw	low _pBDTEntryIn
 19229  013AFA  24F3               	addwf	prodl,w,c
 19230  013AFC  6ED9               	movwf	fsr2l,c
 19231  013AFE  0E00               	movlw	high _pBDTEntryIn
 19232  013B00                     L14:
 19233  013B00  20F4               	addwfc	prodh,w,c
 19234  013B02  6EDA               	movwf	fsr2h,c
 19235  013B04  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19236  013B08  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19237                           
 19238                           ;usb_device.c: 1564: }
 19239                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 19240  013B0C  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19241  013B10  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19242  013B14  9CDF               	bcf	indf2,6,c
 19243                           
 19244                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 19245  013B16  EE20 F004          	lfsr	2,4
 19246  013B1A  5034               	movf	USBConfigureEndpoint@handle,w,c
 19247  013B1C  26D9               	addwf	fsr2l,f,c
 19248  013B1E  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19249  013B20  22DA               	addwfc	fsr2h,f,c
 19250  013B22  8CDF               	bsf	indf2,6,c
 19251  013B24  0012               	return		;funcret
 19252  013B26                     __end_of_USBConfigureEndpoint:
 19253                           	opt stack 0
 19254                           pclatu	equ	0xFFB
 19255                           pclath	equ	0xFFA
 19256                           tblptru	equ	0xFF8
 19257                           tblptrh	equ	0xFF7
 19258                           tblptrl	equ	0xFF6
 19259                           tablat	equ	0xFF5
 19260                           prodh	equ	0xFF4
 19261                           prodl	equ	0xFF3
 19262                           intcon	equ	0xFF2
 19263                           intcon2	equ	0xFF1
 19264                           indf0	equ	0xFEF
 19265                           postinc0	equ	0xFEE
 19266                           fsr0h	equ	0xFEA
 19267                           fsr0l	equ	0xFE9
 19268                           wreg	equ	0xFE8
 19269                           indf1	equ	0xFE7
 19270                           postinc1	equ	0xFE6
 19271                           postdec1	equ	0xFE5
 19272                           fsr1h	equ	0xFE2
 19273                           fsr1l	equ	0xFE1
 19274                           indf2	equ	0xFDF
 19275                           postinc2	equ	0xFDE
 19276                           postdec2	equ	0xFDD
 19277                           plusw2	equ	0xFDB
 19278                           fsr2h	equ	0xFDA
 19279                           fsr2l	equ	0xFD9
 19280                           status	equ	0xFD8
 19281                           
 19282 ;; *************** function _USBCtrlTrfOutHandler *****************
 19283 ;; Defined at:
 19284 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 19285 ;; Parameters:    Size  Location     Type
 19286 ;;		None
 19287 ;; Auto vars:     Size  Location     Type
 19288 ;;		None
 19289 ;; Return value:  Size  Location     Type
 19290 ;;		None               void
 19291 ;; Registers used:
 19292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19293 ;; Tracked objects:
 19294 ;;		On entry : 0/0
 19295 ;;		On exit  : 0/0
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19302 ;;Total ram usage:        0 bytes
 19303 ;; Hardware stack levels used:    1
 19304 ;; Hardware stack levels required when called:    2
 19305 ;; This function calls:
 19306 ;;		_USBCtrlTrfRxService
 19307 ;; This function is called by:
 19308 ;;		_USBCtrlEPService
 19309 ;; This function uses a non-reentrant model
 19310 ;;
 19311                           
 19312                           	psect	text84
 19313  01411C                     __ptext84:
 19314                           	opt stack 0
 19315  01411C                     _USBCtrlTrfOutHandler:
 19316                           	opt stack 15
 19317                           
 19318                           ;usb_device.c: 2543: if(controlTransferState == 2)
 19319                           
 19320                           ;incstack = 0
 19321  01411C  0E02               	movlw	2
 19322  01411E  1829               	xorwf	_controlTransferState,w,c	;volatile
 19323  014120  A4D8               	btfss	status,2,c
 19324  014122  D003               	goto	i2l6866
 19325                           
 19326                           ;usb_device.c: 2544: {
 19327                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 19328  014124  ECF8  F091         	call	_USBCtrlTrfRxService	;wreg free
 19329                           
 19330                           ;usb_device.c: 2546: }
 19331  014128  0012               	return	
 19332  01412A                     i2l6866:
 19333                           
 19334                           ;usb_device.c: 2547: else
 19335                           ;usb_device.c: 2548: {
 19336                           ;usb_device.c: 2551: controlTransferState = 0;
 19337  01412A  0E00               	movlw	0
 19338  01412C  6E29               	movwf	_controlTransferState,c	;volatile
 19339                           
 19340                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 19341  01412E  501E               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 19342  014130  A4D8               	btfss	status,2,c
 19343  014132  D01F               	goto	i2l6874
 19344                           
 19345                           ;usb_device.c: 2559: {
 19346                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 19347  014134  EE20 F001          	lfsr	2,1
 19348  014138  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19349  01413A  26D9               	addwf	fsr2l,f,c
 19350  01413C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19351  01413E  22DA               	addwfc	fsr2h,f,c
 19352  014140  0E08               	movlw	8
 19353  014142  6EDF               	movwf	indf2,c
 19354                           
 19355                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19356  014144  EE20 F002          	lfsr	2,2
 19357  014148  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19358  01414A  26D9               	addwf	fsr2l,f,c
 19359  01414C  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19360  01414E  22DA               	addwfc	fsr2h,f,c
 19361  014150  0E30               	movlw	48
 19362  014152  6EDE               	movwf	postinc2,c
 19363  014154  0E0D               	movlw	13
 19364  014156  6EDD               	movwf	postdec2,c
 19365                           
 19366                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19367  014158  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19368  01415C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19369  014160  0E0C               	movlw	12
 19370  014162  6EDF               	movwf	indf2,c
 19371                           
 19372                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19373  014164  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19374  014168  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19375  01416C  0E00               	movlw	0
 19376  01416E  8EDB               	bsf	plusw2,7,c
 19377                           
 19378                           ;usb_device.c: 2564: }
 19379  014170  0012               	return	
 19380  014172                     i2l6874:
 19381                           
 19382                           ;usb_device.c: 2565: else
 19383                           ;usb_device.c: 2566: {
 19384                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 19385  014172  0E00               	movlw	0
 19386  014174  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19387  014176  0012               	return	
 19388  014178                     __end_of_USBCtrlTrfOutHandler:
 19389                           	opt stack 0
 19390                           pclatu	equ	0xFFB
 19391                           pclath	equ	0xFFA
 19392                           tblptru	equ	0xFF8
 19393                           tblptrh	equ	0xFF7
 19394                           tblptrl	equ	0xFF6
 19395                           tablat	equ	0xFF5
 19396                           prodh	equ	0xFF4
 19397                           prodl	equ	0xFF3
 19398                           intcon	equ	0xFF2
 19399                           intcon2	equ	0xFF1
 19400                           indf0	equ	0xFEF
 19401                           postinc0	equ	0xFEE
 19402                           fsr0h	equ	0xFEA
 19403                           fsr0l	equ	0xFE9
 19404                           wreg	equ	0xFE8
 19405                           indf1	equ	0xFE7
 19406                           postinc1	equ	0xFE6
 19407                           postdec1	equ	0xFE5
 19408                           fsr1h	equ	0xFE2
 19409                           fsr1l	equ	0xFE1
 19410                           indf2	equ	0xFDF
 19411                           postinc2	equ	0xFDE
 19412                           postdec2	equ	0xFDD
 19413                           plusw2	equ	0xFDB
 19414                           fsr2h	equ	0xFDA
 19415                           fsr2l	equ	0xFD9
 19416                           status	equ	0xFD8
 19417                           
 19418 ;; *************** function _USBCtrlTrfRxService *****************
 19419 ;; Defined at:
 19420 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 19421 ;; Parameters:    Size  Location     Type
 19422 ;;		None
 19423 ;; Auto vars:     Size  Location     Type
 19424 ;;  byteToRead      1    1[COMRAM] unsigned char 
 19425 ;;  i               1    0[COMRAM] unsigned char 
 19426 ;; Return value:  Size  Location     Type
 19427 ;;		None               void
 19428 ;; Registers used:
 19429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19430 ;; Tracked objects:
 19431 ;;		On entry : 0/0
 19432 ;;		On exit  : 0/0
 19433 ;;		Unchanged: 0/0
 19434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19439 ;;Total ram usage:        2 bytes
 19440 ;; Hardware stack levels used:    1
 19441 ;; Hardware stack levels required when called:    1
 19442 ;; This function calls:
 19443 ;;		_USBCtrlEPAllowStatusStage
 19444 ;; This function is called by:
 19445 ;;		_USBCtrlTrfOutHandler
 19446 ;; This function uses a non-reentrant model
 19447 ;;
 19448                           
 19449                           	psect	text85
 19450  0123F0                     __ptext85:
 19451                           	opt stack 0
 19452  0123F0                     _USBCtrlTrfRxService:
 19453                           	opt stack 15
 19454                           
 19455                           ;usb_device.c: 1854: uint8_t byteToRead;
 19456                           ;usb_device.c: 1855: uint8_t i;
 19457                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19458                           
 19459                           ;incstack = 0
 19460  0123F0  EE20 F001          	lfsr	2,1
 19461  0123F4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19462  0123F6  26D9               	addwf	fsr2l,f,c
 19463  0123F8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19464  0123FA  22DA               	addwfc	fsr2h,f,c
 19465  0123FC  50DF               	movf	indf2,w,c
 19466  0123FE  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19467                           
 19468                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19469  012400  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19470  012402  5C05               	subwf	_outPipes+4,w,c	;volatile
 19471  012404  0E00               	movlw	0
 19472  012406  5806               	subwfb	_outPipes+5,w,c	;volatile
 19473  012408  A0D8               	btfss	status,0,c
 19474                           
 19475                           ;usb_device.c: 1866: {
 19476                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19477  01240A  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19478                           
 19479                           ;usb_device.c: 1868: }
 19480                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19481  01240E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19482  012410  5E05               	subwf	_outPipes+4,f,c	;volatile
 19483  012412  0E00               	movlw	0
 19484  012414  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19485                           
 19486                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19487  012416  0E00               	movlw	0
 19488  012418  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19489  01241A  D011               	goto	i2l6722
 19490  01241C                     i2l6716:
 19491                           
 19492                           ;usb_device.c: 1875: {
 19493                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19494  01241C  502E               	movf	USBCtrlTrfRxService@i,w,c
 19495  01241E  0D01               	mullw	1
 19496  012420  0E38               	movlw	56
 19497  012422  24F3               	addwf	prodl,w,c
 19498  012424  6ED9               	movwf	fsr2l,c
 19499  012426  0E0D               	movlw	13
 19500  012428  20F4               	addwfc	prodh,w,c
 19501  01242A  6EDA               	movwf	fsr2h,c
 19502  01242C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19503  012430  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19504  012434  CFDF FFE7          	movff	indf2,indf1
 19505  012438  4A01               	infsnz	_outPipes,f,c	;volatile
 19506  01243A  2A02               	incf	_outPipes+1,f,c	;volatile
 19507  01243C  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19508  01243E                     i2l6722:
 19509  01243E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19510  012440  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19511  012442  A0D8               	btfss	status,0,c
 19512  012444  D7EB               	goto	i2l6716
 19513                           
 19514                           ;usb_device.c: 1877: }
 19515                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19516  012446  5005               	movf	_outPipes+4,w,c	;volatile
 19517  012448  1006               	iorwf	_outPipes+5,w,c	;volatile
 19518  01244A  B4D8               	btfsc	status,2,c
 19519  01244C  D032               	goto	i2l6738
 19520                           
 19521                           ;usb_device.c: 1882: {
 19522                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19523  01244E  EE20 F001          	lfsr	2,1
 19524  012452  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19525  012454  26D9               	addwf	fsr2l,f,c
 19526  012456  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19527  012458  22DA               	addwfc	fsr2h,f,c
 19528  01245A  0E08               	movlw	8
 19529  01245C  6EDF               	movwf	indf2,c
 19530                           
 19531                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19532  01245E  EE20 F002          	lfsr	2,2
 19533  012462  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19534  012464  26D9               	addwf	fsr2l,f,c
 19535  012466  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19536  012468  22DA               	addwfc	fsr2h,f,c
 19537  01246A  0E38               	movlw	56
 19538  01246C  6EDE               	movwf	postinc2,c
 19539  01246E  0E0D               	movlw	13
 19540  012470  6EDD               	movwf	postdec2,c
 19541                           
 19542                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19543  012472  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19544  012476  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19545  01247A  BCDF               	btfsc	indf2,6,c
 19546  01247C  D00D               	goto	i2l6734
 19547                           
 19548                           ;usb_device.c: 1886: {
 19549                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19550  01247E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19551  012482  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19552  012486  0E48               	movlw	72
 19553  012488  6EDF               	movwf	indf2,c
 19554                           
 19555                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19556  01248A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19557  01248E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19558  012492  0E00               	movlw	0
 19559  012494  8EDB               	bsf	plusw2,7,c
 19560                           
 19561                           ;usb_device.c: 1889: }
 19562  012496  0012               	return	
 19563  012498                     i2l6734:
 19564                           
 19565                           ;usb_device.c: 1890: else
 19566                           ;usb_device.c: 1891: {
 19567                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19568  012498  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19569  01249C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19570  0124A0  0E08               	movlw	8
 19571  0124A2  6EDF               	movwf	indf2,c
 19572                           
 19573                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19574  0124A4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19575  0124A8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19576  0124AC  0E00               	movlw	0
 19577  0124AE  8EDB               	bsf	plusw2,7,c
 19578                           
 19579                           ;usb_device.c: 1894: }
 19580                           ;usb_device.c: 1895: }
 19581  0124B0  0012               	return	
 19582  0124B2                     i2l6738:
 19583                           
 19584                           ;usb_device.c: 1896: else
 19585                           ;usb_device.c: 1897: {
 19586                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19587  0124B2  EE20 F001          	lfsr	2,1
 19588  0124B6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19589  0124B8  26D9               	addwf	fsr2l,f,c
 19590  0124BA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19591  0124BC  22DA               	addwfc	fsr2h,f,c
 19592  0124BE  0E08               	movlw	8
 19593  0124C0  6EDF               	movwf	indf2,c
 19594                           
 19595                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19596  0124C2  EE20 F002          	lfsr	2,2
 19597  0124C6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19598  0124C8  26D9               	addwf	fsr2l,f,c
 19599  0124CA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19600  0124CC  22DA               	addwfc	fsr2h,f,c
 19601  0124CE  0E30               	movlw	48
 19602  0124D0  6EDE               	movwf	postinc2,c
 19603  0124D2  0E0D               	movlw	13
 19604  0124D4  6EDD               	movwf	postdec2,c
 19605                           
 19606                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19607  0124D6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19608  0124DA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19609  0124DE  0E04               	movlw	4
 19610  0124E0  6EDF               	movwf	indf2,c
 19611                           
 19612                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19613  0124E2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19614  0124E6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19615  0124EA  0E00               	movlw	0
 19616  0124EC  8EDB               	bsf	plusw2,7,c
 19617                           
 19618                           ;usb_device.c: 1926: }
 19619                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19620                           
 19621                           ;usb_device.c: 1915: {
 19622                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19623  0124EE  9E04               	bcf	_outPipes+3,7,c	;volatile
 19624                           
 19625                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19626  0124F0  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19627  0124F2  A4D8               	btfss	status,2,c
 19628  0124F4  0012               	return	
 19629                           
 19630                           ;usb_device.c: 1942: {
 19631                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19632  0124F6  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19633  0124FA  0012               	return	
 19634  0124FC                     __end_of_USBCtrlTrfRxService:
 19635                           	opt stack 0
 19636                           pclatu	equ	0xFFB
 19637                           pclath	equ	0xFFA
 19638                           tblptru	equ	0xFF8
 19639                           tblptrh	equ	0xFF7
 19640                           tblptrl	equ	0xFF6
 19641                           tablat	equ	0xFF5
 19642                           prodh	equ	0xFF4
 19643                           prodl	equ	0xFF3
 19644                           intcon	equ	0xFF2
 19645                           intcon2	equ	0xFF1
 19646                           indf0	equ	0xFEF
 19647                           postinc0	equ	0xFEE
 19648                           fsr0h	equ	0xFEA
 19649                           fsr0l	equ	0xFE9
 19650                           wreg	equ	0xFE8
 19651                           indf1	equ	0xFE7
 19652                           postinc1	equ	0xFE6
 19653                           postdec1	equ	0xFE5
 19654                           fsr1h	equ	0xFE2
 19655                           fsr1l	equ	0xFE1
 19656                           indf2	equ	0xFDF
 19657                           postinc2	equ	0xFDE
 19658                           postdec2	equ	0xFDD
 19659                           plusw2	equ	0xFDB
 19660                           fsr2h	equ	0xFDA
 19661                           fsr2l	equ	0xFD9
 19662                           status	equ	0xFD8
 19663                           
 19664 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19665 ;; Defined at:
 19666 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;		None
 19669 ;; Auto vars:     Size  Location     Type
 19670 ;;		None
 19671 ;; Return value:  Size  Location     Type
 19672 ;;		None               void
 19673 ;; Registers used:
 19674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19675 ;; Tracked objects:
 19676 ;;		On entry : 0/0
 19677 ;;		On exit  : 0/0
 19678 ;;		Unchanged: 0/0
 19679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19684 ;;Total ram usage:        0 bytes
 19685 ;; Hardware stack levels used:    1
 19686 ;; This function calls:
 19687 ;;		Nothing
 19688 ;; This function is called by:
 19689 ;;		_USBDeviceTasks
 19690 ;;		_USBCtrlEPServiceComplete
 19691 ;;		_USBCtrlTrfRxService
 19692 ;; This function uses a non-reentrant model
 19693 ;;
 19694                           
 19695                           	psect	text86
 19696  01310C                     __ptext86:
 19697                           	opt stack 0
 19698  01310C                     _USBCtrlEPAllowStatusStage:
 19699                           	opt stack 15
 19700                           
 19701                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19702                           
 19703                           ;incstack = 0
 19704  01310C  5025               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19705  01310E  A4D8               	btfss	status,2,c
 19706  013110  0012               	return	
 19707                           
 19708                           ;usb_device.c: 1424: {
 19709                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19710  013112  0E01               	movlw	1
 19711  013114  6E25               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19712                           
 19713                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19714  013116  5026               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19715  013118  A4D8               	btfss	status,2,c
 19716  01311A  0012               	return	
 19717                           
 19718                           ;usb_device.c: 1427: {
 19719                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19720  01311C  0E01               	movlw	1
 19721  01311E  6E26               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19722                           
 19723                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19724  013120  0E02               	movlw	2
 19725  013122  1829               	xorwf	_controlTransferState,w,c	;volatile
 19726  013124  A4D8               	btfss	status,2,c
 19727  013126  D015               	goto	i2l6192
 19728                           
 19729                           ;usb_device.c: 1433: {
 19730                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19731  013128  EE20 F001          	lfsr	2,1
 19732  01312C  5010               	movf	_pBDTEntryIn,w,c
 19733  01312E  26D9               	addwf	fsr2l,f,c
 19734  013130  5011               	movf	_pBDTEntryIn+1,w,c
 19735  013132  22DA               	addwfc	fsr2h,f,c
 19736  013134  0E00               	movlw	0
 19737  013136  6EDF               	movwf	indf2,c
 19738                           
 19739                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19740  013138  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19741  01313C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19742  013140  0E48               	movlw	72
 19743  013142  6EDF               	movwf	indf2,c
 19744                           
 19745                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19746  013144  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19747  013148  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19748  01314C  0E00               	movlw	0
 19749  01314E  8EDB               	bsf	plusw2,7,c
 19750                           
 19751                           ;usb_device.c: 1437: }
 19752  013150  0012               	return	
 19753  013152                     i2l6192:
 19754                           
 19755                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19756  013152  0429               	decf	_controlTransferState,w,c	;volatile
 19757  013154  A4D8               	btfss	status,2,c
 19758  013156  0012               	return	
 19759                           
 19760                           ;usb_device.c: 1439: {
 19761                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19762  013158  0E00               	movlw	0
 19763  01315A  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19764                           
 19765                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19766  01315C  EE20 F001          	lfsr	2,1
 19767  013160  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19768  013162  26D9               	addwf	fsr2l,f,c
 19769  013164  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19770  013166  22DA               	addwfc	fsr2h,f,c
 19771  013168  0E08               	movlw	8
 19772  01316A  6EDF               	movwf	indf2,c
 19773                           
 19774                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19775  01316C  EE20 F002          	lfsr	2,2
 19776  013170  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19777  013172  26D9               	addwf	fsr2l,f,c
 19778  013174  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19779  013176  22DA               	addwfc	fsr2h,f,c
 19780  013178  0E30               	movlw	48
 19781  01317A  6EDE               	movwf	postinc2,c
 19782  01317C  0E0D               	movlw	13
 19783  01317E  6EDD               	movwf	postdec2,c
 19784                           
 19785                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19786  013180  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19787  013184  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19788  013188  0E04               	movlw	4
 19789  01318A  6EDF               	movwf	indf2,c
 19790                           
 19791                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19792  01318C  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19793  013190  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19794  013194  0E00               	movlw	0
 19795  013196  8EDB               	bsf	plusw2,7,c
 19796                           
 19797                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19798  013198  0E01               	movlw	1
 19799  01319A  6E1E               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19800                           
 19801                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19802  01319C  EE20 F001          	lfsr	2,1
 19803  0131A0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19804  0131A2  26D9               	addwf	fsr2l,f,c
 19805  0131A4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19806  0131A6  22DA               	addwfc	fsr2h,f,c
 19807  0131A8  0E08               	movlw	8
 19808  0131AA  6EDF               	movwf	indf2,c
 19809                           
 19810                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19811  0131AC  EE20 F002          	lfsr	2,2
 19812  0131B0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19813  0131B2  26D9               	addwf	fsr2l,f,c
 19814  0131B4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19815  0131B6  22DA               	addwfc	fsr2h,f,c
 19816  0131B8  0E30               	movlw	48
 19817  0131BA  6EDE               	movwf	postinc2,c
 19818  0131BC  0E0D               	movlw	13
 19819  0131BE  6EDD               	movwf	postdec2,c
 19820                           
 19821                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19822  0131C0  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19823  0131C4  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19824  0131C8  0E80               	movlw	128
 19825  0131CA  6EDF               	movwf	indf2,c
 19826  0131CC  0012               	return	
 19827  0131CE                     __end_of_USBCtrlEPAllowStatusStage:
 19828                           	opt stack 0
 19829                           pclatu	equ	0xFFB
 19830                           pclath	equ	0xFFA
 19831                           tblptru	equ	0xFF8
 19832                           tblptrh	equ	0xFF7
 19833                           tblptrl	equ	0xFF6
 19834                           tablat	equ	0xFF5
 19835                           prodh	equ	0xFF4
 19836                           prodl	equ	0xFF3
 19837                           intcon	equ	0xFF2
 19838                           intcon2	equ	0xFF1
 19839                           indf0	equ	0xFEF
 19840                           postinc0	equ	0xFEE
 19841                           fsr0h	equ	0xFEA
 19842                           fsr0l	equ	0xFE9
 19843                           wreg	equ	0xFE8
 19844                           indf1	equ	0xFE7
 19845                           postinc1	equ	0xFE6
 19846                           postdec1	equ	0xFE5
 19847                           fsr1h	equ	0xFE2
 19848                           fsr1l	equ	0xFE1
 19849                           indf2	equ	0xFDF
 19850                           postinc2	equ	0xFDE
 19851                           postdec2	equ	0xFDD
 19852                           plusw2	equ	0xFDB
 19853                           fsr2h	equ	0xFDA
 19854                           fsr2l	equ	0xFD9
 19855                           status	equ	0xFD8
 19856                           
 19857 ;; *************** function _USBCtrlTrfInHandler *****************
 19858 ;; Defined at:
 19859 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;		None
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19864 ;; Return value:  Size  Location     Type
 19865 ;;		None               void
 19866 ;; Registers used:
 19867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/0
 19870 ;;		On exit  : 0/0
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19877 ;;Total ram usage:        1 bytes
 19878 ;; Hardware stack levels used:    1
 19879 ;; Hardware stack levels required when called:    1
 19880 ;; This function calls:
 19881 ;;		_USBCtrlTrfTxService
 19882 ;; This function is called by:
 19883 ;;		_USBCtrlEPService
 19884 ;; This function uses a non-reentrant model
 19885 ;;
 19886                           
 19887                           	psect	text87
 19888  01357A                     __ptext87:
 19889                           	opt stack 0
 19890  01357A                     _USBCtrlTrfInHandler:
 19891                           	opt stack 16
 19892                           
 19893                           ;usb_device.c: 2597: uint8_t lastDTS;
 19894                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19895                           
 19896                           ;incstack = 0
 19897  01357A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19898  01357E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19899  013582  0E00               	movlw	0
 19900  013584  BCDF               	btfsc	indf2,6,c
 19901  013586  0E01               	movlw	1
 19902  013588  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19903                           
 19904                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19905  01358A  0E04               	movlw	4
 19906  01358C  1A10               	xorwf	_pBDTEntryIn,f,c
 19907                           
 19908                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19909  01358E  0E08               	movlw	8
 19910  013590  1824               	xorwf	_USBDeviceState,w,c	;volatile
 19911  013592  A4D8               	btfss	status,2,c
 19912  013594  D00D               	goto	i2l6890
 19913                           
 19914                           ;usb_device.c: 2608: {
 19915                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19916  013596  010D               	movlb	13	; () banked
 19917  013598  5132               	movf	50,w,b	;volatile
 19918  01359A  0B7F               	andlw	127
 19919  01359C  010F               	movlb	15	; () banked
 19920  01359E  6F38               	movwf	56,b	;volatile
 19921                           
 19922                           ; BSR set to: 15
 19923                           ;usb_device.c: 2610: if(UADDR != 0u)
 19924  0135A0  010F               	movlb	15	; () banked
 19925  0135A2  5138               	movf	56,w,b	;volatile
 19926  0135A4  B4D8               	btfsc	status,2,c
 19927  0135A6  D002               	goto	i2l6888
 19928                           
 19929                           ; BSR set to: 15
 19930                           ;usb_device.c: 2611: {
 19931                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19932  0135A8  0E10               	movlw	16
 19933  0135AA  D001               	goto	L15
 19934  0135AC                     i2l6888:
 19935                           
 19936                           ; BSR set to: 15
 19937                           ;usb_device.c: 2614: else
 19938                           ;usb_device.c: 2615: {
 19939                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 19940  0135AC  0E04               	movlw	4
 19941  0135AE                     L15:
 19942  0135AE  6E24               	movwf	_USBDeviceState,c	;volatile
 19943  0135B0                     i2l6890:
 19944                           
 19945                           ;usb_device.c: 2617: }
 19946                           ;usb_device.c: 2618: }
 19947                           ;usb_device.c: 2621: if(controlTransferState == 1)
 19948  0135B0  0429               	decf	_controlTransferState,w,c	;volatile
 19949  0135B2  A4D8               	btfss	status,2,c
 19950  0135B4  D03A               	goto	i2l345
 19951                           
 19952                           ;usb_device.c: 2622: {
 19953                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19954  0135B6  EE20 F002          	lfsr	2,2
 19955  0135BA  5010               	movf	_pBDTEntryIn,w,c
 19956  0135BC  26D9               	addwf	fsr2l,f,c
 19957  0135BE  5011               	movf	_pBDTEntryIn+1,w,c
 19958  0135C0  22DA               	addwfc	fsr2h,f,c
 19959  0135C2  0E38               	movlw	56
 19960  0135C4  6EDE               	movwf	postinc2,c
 19961  0135C6  0E0D               	movlw	13
 19962  0135C8  6EDD               	movwf	postdec2,c
 19963                           
 19964                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 19965  0135CA  EC50  F097         	call	_USBCtrlTrfTxService	;wreg free
 19966                           
 19967                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 19968  0135CE  0E02               	movlw	2
 19969  0135D0  182B               	xorwf	_shortPacketStatus,w,c	;volatile
 19970  0135D2  A4D8               	btfss	status,2,c
 19971  0135D4  D00D               	goto	i2l6902
 19972                           
 19973                           ;usb_device.c: 2631: {
 19974                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 19975  0135D6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19976  0135DA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19977  0135DE  0E04               	movlw	4
 19978  0135E0  6EDF               	movwf	indf2,c
 19979                           
 19980                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19981  0135E2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19982  0135E6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19983  0135EA  0E00               	movlw	0
 19984  0135EC  8EDB               	bsf	plusw2,7,c
 19985                           
 19986                           ;usb_device.c: 2636: }
 19987  0135EE  0012               	return	
 19988  0135F0                     i2l6902:
 19989                           
 19990                           ;usb_device.c: 2637: else
 19991                           ;usb_device.c: 2638: {
 19992                           ;usb_device.c: 2639: if(lastDTS == 0)
 19993  0135F0  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19994  0135F2  A4D8               	btfss	status,2,c
 19995  0135F4  D00D               	goto	i2l6908
 19996                           
 19997                           ;usb_device.c: 2640: {
 19998                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19999  0135F6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20000  0135FA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20001  0135FE  0E48               	movlw	72
 20002  013600  6EDF               	movwf	indf2,c
 20003                           
 20004                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20005  013602  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20006  013606  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20007  01360A  0E00               	movlw	0
 20008  01360C  8EDB               	bsf	plusw2,7,c
 20009                           
 20010                           ;usb_device.c: 2643: }
 20011  01360E  0012               	return	
 20012  013610                     i2l6908:
 20013                           
 20014                           ;usb_device.c: 2644: else
 20015                           ;usb_device.c: 2645: {
 20016                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 20017  013610  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20018  013614  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20019  013618  0E08               	movlw	8
 20020  01361A  6EDF               	movwf	indf2,c
 20021                           
 20022                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20023  01361C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 20024  013620  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20025  013624  0E00               	movlw	0
 20026  013626  8EDB               	bsf	plusw2,7,c
 20027                           
 20028                           ;usb_device.c: 2648: }
 20029                           ;usb_device.c: 2649: }
 20030                           ;usb_device.c: 2650: }
 20031  013628  0012               	return	
 20032  01362A                     i2l345:
 20033                           
 20034                           ;usb_device.c: 2651: else
 20035                           ;usb_device.c: 2652: {
 20036                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 20037  01362A  BE04               	btfsc	_outPipes+3,7,c	;volatile
 20038                           
 20039                           ;usb_device.c: 2661: }
 20040                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 20041                           
 20042                           ;usb_device.c: 2659: {
 20043                           ;usb_device.c: 2660: outPipes[0].pFunc();
 20044  01362C  9E04               	bcf	_outPipes+3,7,c	;volatile
 20045                           
 20046                           ;usb_device.c: 2663: }
 20047                           ;usb_device.c: 2665: controlTransferState = 0;
 20048  01362E  0E00               	movlw	0
 20049  013630  6E29               	movwf	_controlTransferState,c	;volatile
 20050  013632  0012               	return	
 20051  013634                     __end_of_USBCtrlTrfInHandler:
 20052                           	opt stack 0
 20053                           pclatu	equ	0xFFB
 20054                           pclath	equ	0xFFA
 20055                           tblptru	equ	0xFF8
 20056                           tblptrh	equ	0xFF7
 20057                           tblptrl	equ	0xFF6
 20058                           tablat	equ	0xFF5
 20059                           prodh	equ	0xFF4
 20060                           prodl	equ	0xFF3
 20061                           intcon	equ	0xFF2
 20062                           intcon2	equ	0xFF1
 20063                           indf0	equ	0xFEF
 20064                           postinc0	equ	0xFEE
 20065                           fsr0h	equ	0xFEA
 20066                           fsr0l	equ	0xFE9
 20067                           wreg	equ	0xFE8
 20068                           indf1	equ	0xFE7
 20069                           postinc1	equ	0xFE6
 20070                           postdec1	equ	0xFE5
 20071                           fsr1h	equ	0xFE2
 20072                           fsr1l	equ	0xFE1
 20073                           indf2	equ	0xFDF
 20074                           postinc2	equ	0xFDE
 20075                           postdec2	equ	0xFDD
 20076                           plusw2	equ	0xFDB
 20077                           fsr2h	equ	0xFDA
 20078                           fsr2l	equ	0xFD9
 20079                           status	equ	0xFD8
 20080                           
 20081 ;; *************** function _USBCtrlTrfTxService *****************
 20082 ;; Defined at:
 20083 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;		None
 20086 ;; Auto vars:     Size  Location     Type
 20087 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20088 ;; Return value:  Size  Location     Type
 20089 ;;		None               void
 20090 ;; Registers used:
 20091 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20092 ;; Tracked objects:
 20093 ;;		On entry : 0/0
 20094 ;;		On exit  : 0/0
 20095 ;;		Unchanged: 0/0
 20096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20101 ;;Total ram usage:        1 bytes
 20102 ;; Hardware stack levels used:    1
 20103 ;; This function calls:
 20104 ;;		Nothing
 20105 ;; This function is called by:
 20106 ;;		_USBCtrlEPAllowDataStage
 20107 ;;		_USBCtrlTrfInHandler
 20108 ;; This function uses a non-reentrant model
 20109 ;;
 20110                           
 20111                           	psect	text88
 20112  012EA0                     __ptext88:
 20113                           	opt stack 0
 20114  012EA0                     _USBCtrlTrfTxService:
 20115                           	opt stack 14
 20116                           
 20117                           ;usb_device.c: 1773: uint8_t byteToSend;
 20118                           ;usb_device.c: 1777: byteToSend = 8;
 20119                           
 20120                           ;incstack = 0
 20121  012EA0  0E08               	movlw	8
 20122  012EA2  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20123                           
 20124                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 20125  012EA4  500F               	movf	_inPipes+5,w,c	;volatile
 20126  012EA6  E110               	bnz	i2l6026
 20127  012EA8  0E08               	movlw	8
 20128  012EAA  5C0E               	subwf	_inPipes+4,w,c	;volatile
 20129  012EAC  B0D8               	btfsc	status,0,c
 20130  012EAE  D00C               	goto	i2l6026
 20131                           
 20132                           ;usb_device.c: 1779: {
 20133                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 20134  012EB0  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20135                           
 20136                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 20137  012EB4  502B               	movf	_shortPacketStatus,w,c	;volatile
 20138  012EB6  A4D8               	btfss	status,2,c
 20139  012EB8  D002               	goto	i2l6022
 20140                           
 20141                           ;usb_device.c: 1788: {
 20142                           ;usb_device.c: 1789: shortPacketStatus = 1;
 20143  012EBA  0E01               	movlw	1
 20144  012EBC  D004               	goto	L16
 20145  012EBE                     i2l6022:
 20146                           
 20147                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 20148  012EBE  042B               	decf	_shortPacketStatus,w,c	;volatile
 20149  012EC0  A4D8               	btfss	status,2,c
 20150  012EC2  D002               	goto	i2l6026
 20151                           
 20152                           ;usb_device.c: 1792: {
 20153                           ;usb_device.c: 1793: shortPacketStatus = 2;
 20154  012EC4  0E02               	movlw	2
 20155  012EC6                     L16:
 20156  012EC6  6E2B               	movwf	_shortPacketStatus,c	;volatile
 20157  012EC8                     i2l6026:
 20158                           
 20159                           ;usb_device.c: 1794: }
 20160                           ;usb_device.c: 1795: }
 20161                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 20162  012EC8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20163  012ECA  5E0E               	subwf	_inPipes+4,f,c	;volatile
 20164  012ECC  0E00               	movlw	0
 20165  012ECE  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 20166                           
 20167                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 20168  012ED0  EE20 F001          	lfsr	2,1
 20169  012ED4  5010               	movf	_pBDTEntryIn,w,c
 20170  012ED6  26D9               	addwf	fsr2l,f,c
 20171  012ED8  5011               	movf	_pBDTEntryIn+1,w,c
 20172  012EDA  22DA               	addwfc	fsr2h,f,c
 20173  012EDC  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20174                           
 20175                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 20176  012EE0  0E38               	movlw	56
 20177  012EE2  0100               	movlb	0	; () banked
 20178  012EE4  6FE1               	movwf	_pDst& (0+255),b
 20179  012EE6  0E0D               	movlw	13
 20180  012EE8  0100               	movlb	0	; () banked
 20181  012EEA  6FE2               	movwf	(_pDst+1)& (0+255),b
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20185  012EEC  A00D               	btfss	_inPipes+3,0,c	;volatile
 20186  012EEE  D01D               	goto	i2l6044
 20187  012EF0  D03C               	goto	i2l6054
 20188  012EF2                     i2l6036:
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;usb_device.c: 1812: {
 20192                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 20193  012EF2  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20194  012EF6  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20195  012EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 20196  012EFC  6EF8               	movwf	tblptru,c
 20197  012EFE  C0E1  FFD9         	movff	_pDst,fsr2l
 20198  012F02  C0E2  FFDA         	movff	_pDst+1,fsr2h
 20199  012F06  0E0E               	movlw	(high __ramtop+-1)
 20200  012F08  64F7               	cpfsgt	tblptrh,c
 20201  012F0A  D003               	bra	i2u477_47
 20202  012F0C  0008               	tblrd		*
 20203  012F0E  50F5               	movf	tablat,w,c
 20204  012F10  D005               	bra	i2u477_40
 20205  012F12                     i2u477_47:
 20206  012F12  CFF6 FFE9          	movff	tblptrl,fsr0l
 20207  012F16  CFF7 FFEA          	movff	tblptrh,fsr0h
 20208  012F1A  50EF               	movf	indf0,w,c
 20209  012F1C                     i2u477_40:
 20210  012F1C  6EDF               	movwf	indf2,c
 20211  012F1E  4A0A               	infsnz	_inPipes,f,c	;volatile
 20212  012F20  2A0B               	incf	_inPipes+1,f,c	;volatile
 20213  012F22  0100               	movlb	0	; () banked
 20214  012F24  4BE1               	infsnz	_pDst& (0+255),f,b
 20215  012F26  2BE2               	incf	(_pDst+1)& (0+255),f,b
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;usb_device.c: 1814: byteToSend--;
 20219  012F28  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20220  012F2A                     i2l6044:
 20221                           
 20222                           ; BSR set to: 0
 20223  012F2A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20224  012F2C  B4D8               	btfsc	status,2,c
 20225  012F2E  0012               	return	
 20226  012F30  D7E0               	goto	i2l6036
 20227  012F32                     i2l6046:
 20228                           
 20229                           ; BSR set to: 0
 20230                           ;usb_device.c: 1820: {
 20231                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 20232  012F32  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20233  012F36  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20234  012F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 20235  012F3C  6EF8               	movwf	tblptru,c
 20236  012F3E  C0E1  FFD9         	movff	_pDst,fsr2l
 20237  012F42  C0E2  FFDA         	movff	_pDst+1,fsr2h
 20238  012F46  0E0E               	movlw	(high __ramtop+-1)
 20239  012F48  64F7               	cpfsgt	tblptrh,c
 20240  012F4A  D003               	bra	i2u479_47
 20241  012F4C  0008               	tblrd		*
 20242  012F4E  50F5               	movf	tablat,w,c
 20243  012F50  D005               	bra	i2u479_40
 20244  012F52                     i2u479_47:
 20245  012F52  CFF6 FFE9          	movff	tblptrl,fsr0l
 20246  012F56  CFF7 FFEA          	movff	tblptrh,fsr0h
 20247  012F5A  50EF               	movf	indf0,w,c
 20248  012F5C                     i2u479_40:
 20249  012F5C  6EDF               	movwf	indf2,c
 20250  012F5E  4A0A               	infsnz	_inPipes,f,c	;volatile
 20251  012F60  2A0B               	incf	_inPipes+1,f,c	;volatile
 20252  012F62  0100               	movlb	0	; () banked
 20253  012F64  4BE1               	infsnz	_pDst& (0+255),f,b
 20254  012F66  2BE2               	incf	(_pDst+1)& (0+255),f,b
 20255                           
 20256                           ; BSR set to: 0
 20257                           ;usb_device.c: 1822: byteToSend--;
 20258  012F68  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20259  012F6A                     i2l6054:
 20260                           
 20261                           ; BSR set to: 0
 20262  012F6A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20263  012F6C  B4D8               	btfsc	status,2,c
 20264  012F6E  0012               	return	
 20265  012F70  D7E0               	goto	i2l6046
 20266  012F72                     __end_of_USBCtrlTrfTxService:
 20267                           	opt stack 0
 20268                           pclatu	equ	0xFFB
 20269                           pclath	equ	0xFFA
 20270                           tblptru	equ	0xFF8
 20271                           tblptrh	equ	0xFF7
 20272                           tblptrl	equ	0xFF6
 20273                           tablat	equ	0xFF5
 20274                           prodh	equ	0xFF4
 20275                           prodl	equ	0xFF3
 20276                           intcon	equ	0xFF2
 20277                           intcon2	equ	0xFF1
 20278                           indf0	equ	0xFEF
 20279                           postinc0	equ	0xFEE
 20280                           fsr0h	equ	0xFEA
 20281                           fsr0l	equ	0xFE9
 20282                           wreg	equ	0xFE8
 20283                           indf1	equ	0xFE7
 20284                           postinc1	equ	0xFE6
 20285                           postdec1	equ	0xFE5
 20286                           fsr1h	equ	0xFE2
 20287                           fsr1l	equ	0xFE1
 20288                           indf2	equ	0xFDF
 20289                           postinc2	equ	0xFDE
 20290                           postdec2	equ	0xFDD
 20291                           plusw2	equ	0xFDB
 20292                           fsr2h	equ	0xFDA
 20293                           fsr2l	equ	0xFD9
 20294                           status	equ	0xFD8
 20295                           pclatu	equ	0xFFB
 20296                           pclath	equ	0xFFA
 20297                           tblptru	equ	0xFF8
 20298                           tblptrh	equ	0xFF7
 20299                           tblptrl	equ	0xFF6
 20300                           tablat	equ	0xFF5
 20301                           prodh	equ	0xFF4
 20302                           prodl	equ	0xFF3
 20303                           intcon	equ	0xFF2
 20304                           intcon2	equ	0xFF1
 20305                           indf0	equ	0xFEF
 20306                           postinc0	equ	0xFEE
 20307                           fsr0h	equ	0xFEA
 20308                           fsr0l	equ	0xFE9
 20309                           wreg	equ	0xFE8
 20310                           indf1	equ	0xFE7
 20311                           postinc1	equ	0xFE6
 20312                           postdec1	equ	0xFE5
 20313                           fsr1h	equ	0xFE2
 20314                           fsr1l	equ	0xFE1
 20315                           indf2	equ	0xFDF
 20316                           postinc2	equ	0xFDE
 20317                           postdec2	equ	0xFDD
 20318                           plusw2	equ	0xFDB
 20319                           fsr2h	equ	0xFDA
 20320                           fsr2l	equ	0xFD9
 20321                           status	equ	0xFD8
 20322                           
 20323                           	psect	rparam
 20324  0000                     pclatu	equ	0xFFB
 20325                           pclath	equ	0xFFA
 20326                           tblptru	equ	0xFF8
 20327                           tblptrh	equ	0xFF7
 20328                           tblptrl	equ	0xFF6
 20329                           tablat	equ	0xFF5
 20330                           prodh	equ	0xFF4
 20331                           prodl	equ	0xFF3
 20332                           intcon	equ	0xFF2
 20333                           intcon2	equ	0xFF1
 20334                           indf0	equ	0xFEF
 20335                           postinc0	equ	0xFEE
 20336                           fsr0h	equ	0xFEA
 20337                           fsr0l	equ	0xFE9
 20338                           wreg	equ	0xFE8
 20339                           indf1	equ	0xFE7
 20340                           postinc1	equ	0xFE6
 20341                           postdec1	equ	0xFE5
 20342                           fsr1h	equ	0xFE2
 20343                           fsr1l	equ	0xFE1
 20344                           indf2	equ	0xFDF
 20345                           postinc2	equ	0xFDE
 20346                           postdec2	equ	0xFDD
 20347                           plusw2	equ	0xFDB
 20348                           fsr2h	equ	0xFDA
 20349                           fsr2l	equ	0xFD9
 20350                           status	equ	0xFD8
 20351                           
 20352                           	psect	temp
 20353  00005B                     btemp:
 20354                           	opt stack 0
 20355  00005B                     	ds	1
 20356  0000                     int$flags	set	btemp
 20357                           pclatu	equ	0xFFB
 20358                           pclath	equ	0xFFA
 20359                           tblptru	equ	0xFF8
 20360                           tblptrh	equ	0xFF7
 20361                           tblptrl	equ	0xFF6
 20362                           tablat	equ	0xFF5
 20363                           prodh	equ	0xFF4
 20364                           prodl	equ	0xFF3
 20365                           intcon	equ	0xFF2
 20366                           intcon2	equ	0xFF1
 20367                           indf0	equ	0xFEF
 20368                           postinc0	equ	0xFEE
 20369                           fsr0h	equ	0xFEA
 20370                           fsr0l	equ	0xFE9
 20371                           wreg	equ	0xFE8
 20372                           indf1	equ	0xFE7
 20373                           postinc1	equ	0xFE6
 20374                           postdec1	equ	0xFE5
 20375                           fsr1h	equ	0xFE2
 20376                           fsr1l	equ	0xFE1
 20377                           indf2	equ	0xFDF
 20378                           postinc2	equ	0xFDE
 20379                           postdec2	equ	0xFDD
 20380                           plusw2	equ	0xFDB
 20381                           fsr2h	equ	0xFDA
 20382                           fsr2l	equ	0xFD9
 20383                           status	equ	0xFD8


Data Sizes:
    Strings     525
    Constant    239
    Data        5
    BSS         1877
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    117     160
    BANK1           256    109     250
    BANK2           256      0     203
    BANK3           256      0     200
    BANK4           256      0     250
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_60(CODE[6]), STR_59(CODE[2]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), STR_53(CODE[2]), 
		 -> STR_52(CODE[2]), STR_51(CODE[4]), STR_50(CODE[4]), STR_49(CODE[4]), 
		 -> STR_48(CODE[4]), STR_47(CODE[5]), STR_46(CODE[4]), STR_45(CODE[9]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_61(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK2[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    lcd_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_43(CODE[315]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK1[8]), 
		 -> lcd_tx(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    S3374ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK4[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK1[100]), ST7032_init@buf(BANK3[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), terminal_task@command(BANK1[8]), lcd_tx(BANK0[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  301858
                          _RTCC_task
                           _USB_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  224019
                                            115 BANK0      2     2      0
                                              0 BANK1    109   105      4
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  26    16     10  184319
                                            101 BANK0     14     4     10
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  124049
                                             92 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   65553
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   33917
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15358
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4   10588
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12303
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   11585
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1681
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   22374
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1614
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   18852
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11272
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26473
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14050
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10680
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   21412
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    8826
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2729
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1407
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7580
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7580
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33581
                                             30 COMRAM    15    15      0
                            _USB_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      FA      14       97.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      CB      10       79.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6D      FA       7       97.7%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     481       8        0.0%
DATA                 0      0     869       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jan 02 21:29:58 2016

                         get_string_usb@s 006D                                _USB_SD_Ptr FD0D  
                         _ringbuf_put_num 3CCE                           _ringbuf_put_str 3F98  
                            ___awdiv@sign 0072                                        _ms 0114  
                           _USBDeviceInit 1EE2                       ___wmul@multiplicand 0062  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 006E  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 003A  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C                                       l207 43CC  
                                     l208 43CA                                       l146 1F58  
             __end_of_USBStdGetDscHandler 23F0                                       l504 1DC2  
                                     l509 1E16                                       l851 3CD0  
                                     l932 3404                                       _BDT 000D00  
                                     l782 437C                                       l951 1ABA  
                                     l938 2C22                                       l787 41F6  
                                     _PR2 000FCB                                       _ISR 1008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 44F8  
                                     _now 0138                         _RTCC_from_caltime 45A2  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0042  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 203A                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0024                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002E                  __size_ofi2_USBDeviceInit 013A  
                          ??_getsUSBUSART 006A                  USBEnableEndpoint@options 0036  
                                    ?_ISR 002E                    __end_of_get_string_usb 4268  
                        _terminal_at_hand 3FFC                                      l2107 38B8  
                                    l2150 3E40                                      l1415 4682  
                                    l2160 40B6                                      l1447 3BF6  
                                    l1632 191A                                      l2097 33F2  
                                    l1900 25E4                USBConfigureEndpoint@handle 0034  
                                    l1637 1974                                      l1578 32A6  
                                    l9010 2940                                      l9020 3E82  
                                    l9016 3E5C                                      l9120 103E  
                                    l9032 31EA                                      l9200 40A8  
                      __CFG_WPFP$PAGE_127 000000                                      l9130 10A2  
                                    l9210 3FD2                                      l9140 112A  
                                    l9124 1048                                      l9132 10A6  
                                    l9044 321E                                      l9060 326E  
                                    l9118 1038                                      l9046 322A  
                                    l9038 3200                                      l9206 3F9A  
                                    l9310 04F6                                      l9136 10C6  
                                    l9064 3282                                      l9056 3260  
                                    l9048 3230                                      l9304 04DA  
                                    l9074 3376                                      l9306 04EC  
                                    l9172 3DF0                                      l9076 3386  
                                    l9156 4570                                      l9332 05E0  
                                    l9324 05AE                                      l9316 052E  
                                    l9174 3DFC                                      l9086 33E0  
                                    l9078 338C                                      l9510 40CE  
                                    l9430 086C                                      l9422 0846  
                                    l9406 07EC                                      l9414 0814  
                                    l9350 067C                                      l9342 0646  
                                    l9334 05EC                                      l9184 3E32  
                                    l9176 3E02                                      l9280 1B30  
                                    l9192 4072                                      l9520 24FE  
                                    l9416 0820                                      l9344 0652  
                                    l9336 05F2                                      l9440 08FA  
                                    l9360 06BA                                      l9504 4044  
                                    l9098 2E88                                      l9194 407E  
                                    l9522 2504                                      l9514 410C  
                                    l9362 06F0                                      l9700 1E1A  
                                    l9284 1B38                                      l9460 4428  
                                    l9196 4084                                      l9540 25AC  
                                    l9532 254A                                      l9508 40C2  
                                    l9436 08CE                                      l9428 0866  
                                    l9372 0720                                      l9356 06A2  
                                    l9348 0664                                      l9278 1B2C  
                                    l9374 0726                                      l9438 08DA  
                                    l9456 4416                                      l9560 1F2E  
                                    l9536 255C                                      l9392 0784  
                                    l9474 2B9C                                      l9466 2B68  
                                    l9642 2846                                      l9634 2804  
                                    l9538 25A6                                      l9386 0762  
                                    l9298 04BC                                      l9708 1E42  
                                    l9716 1E66                                      l9644 284E  
                                    l9652 28B0                                      l9636 280E  
                                    l9804 1C58                                      l9564 1F38  
                                    l9396 07BC                                      l9486 2C02  
                                    l9734 1EB6                                      l9718 1E72  
                                    l9726 1E96                                      l9814 1CAC  
                                    l9822 1D04                                      l9398 07C6  
                                    l9750 095C                                      l9736 1EBA  
                                    l9728 1EA0                                      l9648 287E  
                                    l9832 1D32                                      l9824 1D1E  
                                    l9808 1C68                                      l9592 1FA2  
                                    l9576 1F66                                      l9584 1F78  
                                    l9760 0A24                                      l8970 37E0  
                                    l8962 37BA                                      l9738 1EDE  
                                    l9682 1DB6                                      l9818 1CBC  
                                    l9842 1D4A                                      l9770 0AEC  
                                    l9754 09A4                                      l9676 1D9C  
                                    l9668 460C                                      l9836 1D3E  
                                    l9828 1D28                                      l9588 1F98  
                                    l9924 3CE0                                      l9780 0BB2  
                                    l9764 0A6C                                      l9748 0950  
                                    l8982 3826                                      l8974 3804  
                                    l8966 37CE                                      l8958 37AA  
                                    l9694 1E00                                      l9678 1DA6  
                                    l9598 2008                                      l9934 3D42  
                                    l9790 0C7A                                      l9774 0B32  
                                    l9766 0AA4                                      l9758 09EC  
                                    STR_1 FFC1                                      l8968 37DA  
                                    l9688 1DCC                                      l9944 30EC  
                                    l9952 3108                                      l9856 4394  
                                    l9928 3D02                                      l9784 0BFA  
                                    l8978 3812                                      l8994 2756  
                                    l9946 3102                                      l9962 3B6A  
                                    l9786 0C32                                      l9778 0B7A  
                                    STR_4 FFFB                                      l9972 3F44  
                                    l9868 41F8                                      STR_7 FFFD  
                                    STR_9 FFF9                                      l9996 0048  
                                    l9998 0060                     ??_USBCtrlTrfTxService 002E  
                                    _UCFG 000F39                                      u9080 3FC4  
                                    u9090 3FF4                                      _UEP0 000F26  
                                    _UEP1 000F27                                      u9087 3FBA  
                                    u8800 298C                                      u9097 3FEA  
                                    u8810 298E                                      u9610 27F4  
                                    _UEIE 000F37                                      u8740 28EA  
                                    u8750 28EC                                      u8760 291C  
                                    u9618 27F8                                      u8780 2932  
                                    u8790 2934                                      u9670 1D8C  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u8778 2920                                      u9678 1D90  
                         _CDCDataInHandle 00DD                       ??_RTCC_from_caltime 0091  
  USBStdFeatureReqHandler@current_ep_data 0045                                      _pDst 00E1  
                                    _atoi 24FC                                      _main 42AE  
                ??i2_USBTransferOnePacket 0032                  button_timer_interrupt@bt 002E  
                                    _sw_B 017D                                      _sw_G 0181  
                                    _sw_R 0185                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 0110  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                           _USBDeviceAttach 439E  
                                    btemp 005B                    __CFG_DSWDTOSC$T1OSCREF 000000  
                         __end_of_USB_ISR 46D0                                      pclat 000FFA  
                                    prodh 000FF4                                      prodl 000FF3  
                         __end_of_PWM_set 1D68                                      start 10FE  
                        __end_of_ADC_init 4630                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 2B4A                    ??_USBCtrlTrfOutHandler 0030  
                          terminal_task@i 01F5                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0042                           ??_terminal_task 00D3  
                         ??_terminal_time 00C4                        terminal_task@ascii 01F4  
                           ADC_init@p_ref 0060                                     ??_ISR 004C  
                ??_USBStdGetStatusHandler 002E                              print_time@tx 0095  
                          ?_USBDeviceInit 002E                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
                                   l10020 016A                                     l10110 4232  
                                   l10014 011C                                     l10112 4236  
                                   l10040 029E                                     l10024 01B2  
                                   l10018 0164                                     l10060 039E  
                                   l10052 0342                                     l10036 0256  
                                   l10028 01FA                                     l10310 0D14  
                                   l10072 0442                                     l10064 03E6  
                                   l10048 02FA                                     l10402 18FA  
                                   l10330 0E38                                     l10322 0DE6  
                                   l10314 0D94                                     l10306 0CEA  
                                   l10180 3862                                     l10420 1944  
                                   l10340 0E8E                                     l10332 0E3C  
                                   l10324 0DEA                                     l10316 0D98  
                                   l10094 44D8                                     l10406 1904  
                                   l10096 44DC                                     l10184 38A6  
                                   l10176 384C                                     l10440 199A  
                                   l10424 1954                                     l10352 0F66  
                                   l10178 385C                                     l10442 199E  
                                   l10418 1940                                     l10362 0FCA  
                                   l10354 0F6E                                     l10346 0F12  
                                   l10338 0E8A                                     l10370 1000  
                                   l10428 195E                                     l10348 0F3C  
                                   l10446 19B6                                     l10358 0F8A  
                                   l10396 1878                                     l10778 42B2  
               __end_of_RTCC_from_caltime 45C8                                     ?_atoi 0066  
                                   ?_main 002E                   __size_of_put_string_usb 002C  
                          ??_get_quot_rem 007D                           __end_of___awdiv 328C  
                                   _ADRES 000FC3                                     STR_20 FFDA  
                                   STR_13 FFF7                                     STR_30 FFB7  
                                   STR_31 FFCC                                     STR_15 FF7B  
                                   STR_23 FF2D                                     STR_32 FFA7  
                                   STR_40 FF93                                     STR_24 FF84  
                                   STR_33 FFC4                                     STR_41 FFB2  
                                   STR_25 FF5E                                     STR_26 FFE3  
                                   STR_42 FFE5                                     STR_34 FFDE  
                                   STR_50 FFD2                                     STR_35 FFAB  
                                   STR_27 FFE2                                     STR_19 FFDA  
                                   STR_51 FFCA                                     STR_43 FDF2  
                                   STR_52 FFA5                                     STR_36 FFBC  
                                   STR_60 FFA1                                     STR_44 FF69  
                                   STR_28 FF52                           __end_of___awmod 3830  
                                   STR_37 FFD4                                     STR_29 FFE0  
                                   STR_53 FFEB                                     STR_61 FF8C  
                                   STR_45 FF72                                     STR_54 FFF1  
                                   STR_46 FFD6                                     STR_38 FF9A  
                                   STR_39 FFF5                                     STR_55 FFE9  
                                   STR_47 FFAD                                     STR_56 FFEF  
                                   STR_48 FFCE                                     STR_57 FFE7  
                                   STR_49 FFC6                                     STR_58 FFF3  
                                   STR_59 FFED         __size_of_USBCtrlEPServiceComplete 00F0  
                         __end_of___lldiv 3404                                     u10015 4620  
                                   u10016 4622                           ___awdiv@divisor 006F  
                                   u10640 182C                           __end_of___llmod 38CA  
                  __end_of_USBDeviceTasks 2184                                     _LATB2 007C52  
               ?_USBCtrlEPServiceComplete 002E                           __end_of___lwdiv 3E4A  
                         __end_of___lwmod 40C0                                     i2l300 3704  
                                   i2l232 2664                                     i2l146 21EA  
                                   i2l170 2116                                     i2l308 42AA  
                                   i2l158 206A                                     i2l168 2104  
                                   i2l345 362A                                     i2l169 2180  
                                   i2l450 3682                                     i2l530 1606  
                                   i2l531 1626                                     i2l452 36B8  
                                   i2l532 1646                                     i2l525 155E  
                                   i2l374 12D4                                     i2l526 1582  
                                   i2l295 36F2                                     i2l359 2A80  
                                   i2l527 15A4                                     i2l368 2ACE  
                                   i2l528 15C6                                     i2l393 149C  
                                   i2l529 15E6                                     i2l298 377A  
                                   i2l299 3700                                     _UADDR 000F38  
                         ___awdiv@counter 0071                   ST7032_task@st7032_state 001D  
                                   _TMR1H 000FCF                                     _RPOR3 000EC3  
                                   _RPOR4 000EC4                                     _RPOR5 000EC5  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C2                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 3A92  
                                   _sd000 FDEE                                     _sd001 FD58  
                                   _sd002 FD8C                      caltime_to_epoch@year 007F  
                              i2memset@p1 002E                           __end_of_dpowers FD0D  
                        __end_of_OSC_init 46CA                           __end_of_isdigit 457A  
                      __size_of_RTCC_init 006A                           ?_get_string_usb 006D  
                      __size_of_RTCC_task 003C                          ringbuf_delete@rb 0060  
                                   atoi@a 006B                                     atoi@s 0066  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 3F2E                          __end_of_PWM_init 3348  
                        __end_of_USB_init 466C                          __end_of_USB_task 3C42  
              __size_of_ringbuf_backspace 008E                                     status 000FD8  
                         __end_of_sprintf 0908                          __end_ofi2_memset 4550  
                       month_length@month 0066                   __end_of_ringbuf_put_num 3D50  
                 __end_of_ringbuf_put_str 3FFC                       terminal_task@i_4621 01F3  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00DC  
                         __initialization 38CA                           terminal_task@rx 018B  
                         terminal_task@tx 0189                           terminal_time@tx 00BC  
                            __end_of_atoi 25EE                              __end_of_main 42EC  
                   _control_signal_bitmap 00ED                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 0097                                    ??_atoi 0068  
                                  ??_main 00D5                             __activetblptr 000003  
                         ?_USBDeviceTasks 002E                               ?_USBSuspend 002E  
                            _cdc_mem_type 00EA                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 43D6                          _CDCDataOutHandle 00DF  
                       _getsUSBUSART$1957 006B                          ___llmod@dividend 0060  
                                  _CCPR1L 000FBB                                    _CCPR2L 000FB5  
                                  _CCPR3L 000F16                                    _CCPR4L 000F13  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 006D  
                               ??_USB_ISR 004C                           getsUSBUSART@len 0069  
                 _terminal_operation$6980 00D1                   _terminal_operation$6979 00CF  
                               ??_PWM_set 0077                     __size_of_CDCTxService 017A  
                          __CFG_WDTEN$OFF 000000                                    i2l1575 10C2  
                                  i2l6000 4474                                    i2l6002 447A  
                                  i2l6022 2EBE                                    i2l6006 4480  
                                  i2l6026 2EC8                                    i2l6036 2EF2  
                                  i2l6044 2F2A                                    i2l6046 2F32  
                                  i2l6054 2F6A                                    i2l6302 23D8  
                                  i2l6222 3A48                                    i2l7102 3010  
                                  i2l6410 1502                                    i2l6314 3722  
                                  i2l6242 29D4                                    i2l6226 3A60  
                                  i2l7106 302A                                    i2l7050 446A  
                                  i2l6412 150E                                    i2l6404 14BE  
                                  i2l6324 3762                                    i2l6172 452E  
                                  i2l6252 2A08                                    i2l7108 3030  
                                  i2l7052 446C                                    i2l6342 12D0  
                                  i2l6246 29DC                                    i2l6192 3152  
                                  i2l6280 22E0                                    i2l6176 453E  
                                  i2l6362 138C                                    i2l6290 2374  
                                  i2l7090 2FC2                                    i2l7074 42A6  
                                  i2l7410 2228                                    i2l6380 141C  
                                  i2l6364 138E                                    i2l6356 1348  
                                  i2l6276 22CE                                    i2l6268 2A4E  
                                  i2l7420 228C                                    i2l7094 2FCA  
                                  i2l7414 2230                                    i2l7406 220A  
                                  i2l5824 3500                                    i2l5816 34D6  
                                  i2l6384 1436                                    i2l6368 13AA  
                                  i2l6296 23CC                                    i2l6288 236E  
                                  i2l7512 210E                                    i2l6722 243E  
                                  i2l6394 147C                                    i2l6378 1402  
                                  i2l6298 23D2                                    i2l7506 20FA  
                                  i2l6716 241C                                    i2l5772 4346  
                                  i2l5836 355C                                    i2l6396 1488  
                                  i2l7532 2160                                    i2l6902 35F0  
                                  i2l6734 2498                                    i2l5758 3AF4  
                                  i2l7382 21C6                                    i2l7534 217C  
                                  i2l7526 2142                                    i2l7454 2062  
                                  i2l7446 2052                                    i2l5768 4338  
                                  i2l5872 36A2                                    i2l5864 3676  
                                  i2l5856 3660                                    i2l5880 36C0  
                                  i2l6760 2A94                                    i2l6738 24B2  
                                  i2l6770 2AAC                                    i2l7386 21CE  
                                  i2l7482 20B6                                    i2l6908 3610  
                                  i2l6772 2AB2                                    i2l6756 2A88  
                                  i2l6668 260E                                    i2l7492 20C6  
                                  i2l7476 2090                                    i2l7468 2080  
                                  i2l6782 2AE8                                    i2l6758 2A8E  
                                  i2l7398 21F8                                    i2l6768 2AA6  
                                  i2l6688 268A                                    i2l7920 16B2  
                                  i2l7912 166A                                    i2l6890 35B0  
                                  i2l6874 4172                                    i2l6866 412A  
                                  i2l6786 2B06                                    i2l7498 20D2  
                                  i2l7940 176C                                    i2l7932 1720  
                                  i2l7924 16D6                                    i2l7916 168E  
                                  i2l6888 35AC                                    i2l7936 1746  
                                  i2l7928 16FA                                    i2l7944 1790  
                                  i2l8896 106E                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _SSPBUF 000FC9  
                                  _TXREG1 000FAE                  i2USBTransferOnePacket@ep 0032  
                       ??i2_USBDeviceInit 0036           __size_ofi2_USBTransferOnePacket 00BA  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 4688  
                      epoch_to_caltime@tm 0081                        _terminal_task$6977 01F1  
                    get_string_usb@rx_len 0072                         _shortPacketStatus 002B  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                        ringbuf_put_num@i 0077                           USBDeviceTasks@i 004B  
                            _CCPTMRS0bits 000F52                              _CCPTMRS1bits 000F51  
                   caltime_to_epoch@epoch 0081               USBStdFeatureReqHandler@pUEP 0043  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 002F  
                      _terminal_time$6978 00C4                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                                  ___lmul 3E4A                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 2C22                                    ___wmul 43D6  
                      ??_epoch_to_caltime 0083                               light_task@i 0092  
                             light_task@n 00FE                                 ??___awdiv 0071  
                               ??___awmod 0064                                    _d_to_x 457A  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 28B6  
                    ringbuf_put_num@value 0074                              ?_timer0_init 002E  
                               ??___llmod 0068                         __end_of_RTCC_init 3F98  
                            ?_timer1_init 0060                                 ??___lwdiv 006A  
                       __end_of_RTCC_task 4328                                 ??___lwmod 0071  
                            ?_timer3_init 002E                                    _lcd_tx 00F3  
                       _USBEnableEndpoint 4328           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 440C                                    clear_0 38D2  
                                  clear_1 38E4                                    clear_2 38F0  
                         put_string_usb@s 006C                                    clear_3 38FC  
                                  clear_4 3908                                    clear_5 3914  
                                  clear_6 3920                           __CFG_CLKOEC$OFF 000000  
                        ___awdiv@quotient 0073                           ___awmod@divisor 0062  
                         ___awmod@counter 0064                                    _x_to_d 4630  
                      ?_USBEnableEndpoint 0036                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 015E                                    _usb_tx 0166  
                                  _strcmp 40C0             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 028E                        _terminal_operation 0000  
                               ??_isdigit 0060                              _st7032_state 00EF  
                            _CDCTxService 1D68                              __mediumconst FD02  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002E  
                     ??_USBEnableEndpoint 0037                                 ??_sprintf 0084  
                     ?_terminal_operation 00C5                               _CtrlTrfData 000D38  
                    _controlTransferState 0029                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 3958  
                            __pbssBIGRAMl 04FA                      __end_of_get_quot_rem 2DCC  
                           ___rparam_used 000001                           _RTCC_from_epoch 4688  
                __size_of_USBStallHandler 0046                          ?_ringbuf_put_num 0072  
                        ?_ringbuf_put_str 006F                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          terminal_task@op0 011F  
                        terminal_task@op1 0280                          terminal_task@op2 0299  
                        terminal_task@op3 02B2                          terminal_task@buf 018D  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 4364  
                           __end_of_sd000 FDF2                             __end_of_sd001 FD8C  
                           __end_of_sd002 FDC0                          terminal_time@op0 00BE  
                        terminal_time@op1 00C0                          terminal_time@op2 00C2  
                            __pidataBANK0 1004                              __pidataBANK1 46D0  
                    ??_terminal_operation 00CF                  __end_of_terminal_at_hand 405E  
        __size_of_USBCtrlEPAllowDataStage 0098             __size_of_USBConfigureEndpoint 0094  
                               ?_OSC_init 002E               __end_of_USBCtrlTrfInHandler 3634  
                         __CFG_DSWDTPS$G2 000000                            _put_string_usb 44CC  
                  i2_USBTransferOnePacket 34C0                           light_task@_6072 00FD  
                               ?_PWM_init 002E                      terminal_task@command 016E  
                               ?_USB_init 002E                                 ?_USB_task 002E  
                           _I2C_cfct_flag 00E8                         _CDCTxService$2005 0068  
                              _cdc_notice 0100                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 002E                                _cdc_rx_len 00EB  
                              _cdc_tx_len 00EC                                ??_ADC_init 0060  
              caltime_to_epoch@month_3722 0080                  ??_USBCtrlTrfSetupHandler 0048  
                         light_task@value 008C                          ?_USBDeviceAttach 002E  
                  _USBStdGetStatusHandler 36E4                              sprintf@width 0093  
                      __size_of_main_init 0098                                __pbssBANK0 00D5  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0400  
                 __end_of_caltime_to_RTCC 2CF8                           _RTCC_to_caltime 3404  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 0010  
        __end_of_USBCtrlEPServiceComplete 26DE               __size_of_USBCheckCDCRequest 00B0  
                   __end_of_weekday_3char FDDC                     RTCC_task@prev_halfsec 00E5  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006D  
                                 ?___wmul 0060                            ST7032_init@buf 0300  
                                 ?_d_to_x 002E                    __end_of_put_string_usb 44F8  
                              ??_OSC_init 0060                                   ?_memset 0060  
                          ___lmul@product 0075                                _device_dsc FDDC  
                        _USBCtrlEPService 2F72                                   ?_x_to_d 002E  
                              _ep_data_in 0016                                   ?_strcmp 0060  
             __end_of_USBCtrlTrfRxService 24FC                                ??_PWM_init 0060  
                      _USBCheckStdRequest 2A70                                ??_USB_init 0069  
                       _configDescriptor1 FD15                                ??_USB_task 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                              ??i2_memset 0034               __end_of_USBCtrlTrfTxService 2F72  
                     _USBStdSetCfgHandler 2994                    I2C_LCD_SetCursor@F8685 01F6  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                           _I2C_sent_flag 001F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00C5  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 002E              __size_of_USBStdGetDscHandler 0132  
                                 _UIEbits 000F36                                   _USB_ISR 46CA  
                 __end_of_RTCC_from_epoch 46A2                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                                   _PWM_set 1BC0  
                            PWM_set@color 0079                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0031                             _cdc_trf_state 0028  
                            PWM_set@value 0075                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                       RTCC_from_epoch@tm 008F                                   _pCDCDst 0118  
                                 _pCDCSrc 00D8                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002E  
                               _CDCInitEP 3EC0                                   __Lparam 0000  
                       ringbuf_put_num@rb 0072                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 006F                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0048             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 31CE  
                         __size_of___lmul 0076                                   ___awmod 378E  
                                 ___lldiv 3348                          ??_USBDeviceTasks 004B  
                         __size_of___wmul 0036                                   ___llmod 3830  
                   ringbuf_put_num@digits 0076                                _light_mode 00EE  
                                 ___lwdiv 3DD2                           ?_put_string_usb 006C  
                              _light_task 17B6                         ??_USBStallHandler 002E  
                                 ___lwmod 405E                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 101E                     __end_of_terminal_time 0CB4  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 39FA                      __size_of_putUSBUSART 0022  
             epoch_to_caltime@month_cache 00FF                                   __pcinit 38CA  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FD58                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 42AE                                   __ptext1 0CB4  
                                 __ptext2 0000                                   __ptext3 0908  
                                 __ptext4 3FFC                                   __ptext5 3C42  
                                 __ptext6 04AE                                   __ptext7 3F98  
                                 __ptext8 45A2                                   __ptext9 40C0  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0022  
                               _T0CONbits 000FD5                          _time_change_flag 00F0  
                        _caltime_to_epoch 101E                           __size_of_strcmp 005C  
                            __size_of_ISR 00F6                                 _T1CONbits 000FCD  
                                 _dpowers FD03                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                 _T2CONbits 000FCA  
                                 _isdigit 4550                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                                 _T5CONbits 000F22  
                         i2_USBDeviceInit 2184                          i2USBDeviceInit@i 0036  
                                 _uart_rx 014E                                   _uart_tx 0156  
                      __end_of_USB_CD_Ptr FD15                                   _sprintf 04AE  
         __size_of_USBCtrlTrfSetupHandler 0082                   __end_of_RTCC_to_caltime 34C0  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 3958  
                            _getsUSBUSART 27CC                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FD13                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 001B                            ??_month_length 0067  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066           _dummy_encapsulated_cmd_response 0146  
                ?_USBStdFeatureReqHandler 002E                          ?_caltime_to_RTCC 0076  
                   ??_USBStdSetCfgHandler 0042                           ___lldiv@divisor 0064  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002E  
                         ___lldiv@counter 006C                         ?_is_usb_available 002E  
                      __end_of_USBSuspend 4524                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 39FA                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 25EE  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0025  
              _USBStatusStageEnabledFlag2 0026                        USBEnableEndpoint@p 0037  
                               _PORTAbits 000F80                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 3F2E                                 _RTCC_task 42EC  
               epoch_to_caltime@day_cache 011D                        ST7032_cursor@F8640 01F8  
                            _get_quot_rem 2CF8                                _print_time 3C42  
                          _ringbuf_delete 45C8                 __size_of_epoch_to_caltime 01F2  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 001E  
                     RTCC_from_caltime@tm 008F                 USBConfigureEndpoint@EPNum 0033  
                       __size_of_ADC_init 0020                ?_USBCtrlEPAllowStatusStage 002E  
                        ?_RTCC_from_epoch 008F       USER_USB_CALLBACK_EVENT_HANDLER@size 003E  
                               _USTATcopy 002D           __size_of_button_timer_interrupt 0282  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 2C22  
                             _CCP1CONbits 000FBA                               _CCP2CONbits 000FB4  
                        __CFG_IOL1WAY$OFF 000000                               _CCP3CONbits 000F15  
                             _CCP4CONbits 000F12                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 3D50                            ringbuf_pop@ret 006E  
                 ?i2_USBTransferOnePacket 002E                               ?_light_task 002E  
                   __end_of_USBDeviceInit 203A                         ?_terminal_at_hand 00B5  
                          __end_of___lmul 3EC0                            __end_of___wmul 440C  
                          __end_of_d_to_x 45A2                   __end_ofi2_USBDeviceInit 22BE  
                  __end_of_ringbuf_delete 45EE                        ??_terminal_at_hand 00BC  
                               i2memset@c 0030                                 i2memset@n 0032  
                               i2memset@p 0034                            __end_of_memset 4440  
                              ?_RTCC_init 002E                         __size_of_OSC_init 000E  
                              ?_RTCC_task 002E                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 00E9                            __end_of_x_to_d 4650  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 411C  
                     start_initialization 38CA                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002E                               __end_of_ISR 10FE  
           USBCtrlTrfRxService@byteToRead 002F                         __size_of_PWM_init 00BC  
                       __size_of_USB_init 001C                         __size_of_USB_task 008E  
                             _cdc_data_rx 0200                               _cdc_data_tx 0240  
                       __size_ofi2_memset 002C              __end_of_USBConfigureEndpoint 3B26  
                        ?_RTCC_to_caltime 0062           __end_of_USBStdFeatureReqHandler 1534  
       __end_of_USBCtrlEPAllowStatusStage 31CE                  __end_of_USBCtrlEPService 3040  
                         ___llmod@divisor 0064                           ___llmod@counter 0068  
               ??_USBCtrlEPAllowDataStage 002F                               ??_CDCInitEP 003A  
                          USBDeviceInit@i 0068                    _pBDTEntryEP0OutCurrent 0019  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 357A                       ringbuf_put_num@temp 0078  
                                ??___lmul 0075                                  ??___wmul 0064  
                     _USBStdGetDscHandler 22BE                                  ??_d_to_x 0075  
             __size_of_terminal_operation 04AE                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK0 00FF                               __pdataBANK1 01F6  
                                ??_memset 0066                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                    _button_timer_interrupt 1534  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcmp 0064                      __end_of_month_length 2994  
                          _RTCC_from_RTCC 46A2                    _USBActiveConfiguration 002C  
          __end_of_USBStdGetStatusHandler 378E                               ?_print_time 0095  
                             __pbssCOMRAM 0001                            USB_task@rx_len 0074  
                     RTCC_to_caltime@dumy 0064                             __pcstackBANK0 0060  
                           __pcstackBANK1 0189              __size_of_USBCtrlTrfInHandler 00BA  
                    __end_of_ringbuf_init 41CC                      ?_USBStdGetDscHandler 002E  
                            _isdigit$6364 0061                                  ?_USB_ISR 002E  
                                ?_PWM_set 0075                       __size_of_light_task 0218  
              __end_of_USBWakeFromSuspend 4472                               sprintf@flag 0091  
                          light_task@temp 008E                               sprintf@prec 0088  
                         _USBStallHandler 4268                              _pBDTEntryOut 010A  
              __end_of_USBCheckCDCRequest 36E4                  __end_of_caltime_to_epoch 12AC  
                         millis_timer@cnt 00E3                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0066  
                               __pintcode 1008                             __pmediumconst FD02  
                                ?___awdiv 006D                                  ?___awmod 0060  
                                ?___lldiv 0060                                  ?___llmod 0060  
                                ?___lwdiv 0066                                  ?___lwmod 006D  
                   _is_usb_available$5196 0060                    __end_of_RTCC_from_RTCC 46BC  
                        ?i2_USBDeviceInit 002E                USBCBSendResume@delay_count 011B  
                             ??_RTCC_init 0091                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 2B4A                                 _main_init 3962  
                                ?_isdigit 002E                          _epoch_to_caltime 19CE  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _I2C_busy 00E7  
                                _ADC_flag 00E6                                  _ADC_init 4610  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 4178  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002E  
                             _ep_data_out 00D5                          ___lwdiv@quotient 006B  
                   terminal_at_hand@value 00BB                           ST7032_task@wait 00DB  
                                ?_sprintf 0072              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 002E                                 d_to_x@dec 0075  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
                                _LATBbits 000F8A                ??_USBCtrlEPServiceComplete 002F  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                                  i2u511_40 23C2  
                                i2u511_47 23B8                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i2u508_40 233A  
                                i2u508_47 2330                                  i2u509_40 236A  
                                i2u509_47 2360                                  _PIR5bits 000F98  
              epoch_to_caltime@year_cache 00F1                                  i2u477_40 2F1C  
                                i2u477_47 2F12                                  i2u742_40 1710  
                                i2u479_40 2F5C                                  i2u743_40 1736  
                                i2u479_47 2F52                                  i2u744_40 175C  
               USBCtrlEPService@setup_cnt 004A                                  i2u745_40 1782  
                                i2u860_40 1084                                  i2u861_40 1086  
                                i2u862_40 109C                                  i2u863_40 109E  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                                i2u864_40 10B4                                  i2u865_40 10B6  
                                i2u857_40 105E                             ??_ringbuf_put 006B  
                                i2u858_48 1060                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 0021                     terminal_operation@op0 00C7  
                   terminal_operation@op1 00C9                     terminal_operation@op2 00CB  
                   terminal_operation@op3 00CD                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00DA  
                           ??_timer3_init 0060                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                      _USBConfigureEndpoint 3A92  
                                _OSC_init 46BC                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0288                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _PWM_init 328C            button_timer_interrupt@sw_value 0030  
                                _USB_init 4650                                  _USB_task 3BB4  
                              ?_main_init 002E                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002E                              _RemoteWakeup 0020  
                                i2_memset 4524                         ??_ringbuf_put_num 0077  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 42AE  
                           ringbuf_put@rb 0068                         ___lmul@multiplier 006D  
                             _INTCON2bits 000FF1                                 copy_data0 393A  
             ??_USBCtrlEPAllowStatusStage 002E               __end_of_USBStdSetCfgHandler 2A70  
                        __size_of_USB_ISR 0006                      epoch_to_caltime@year 0089  
                  __size_of_terminal_task 036A                    __size_of_terminal_time 03AC  
                        __size_of_PWM_set 01A8                   __size_of_get_string_usb 004C  
                              _CCPR1Lbits 000FBB                                _CCPR2Lbits 000FB5  
                              _CCPR3Lbits 000F16                        __end_of_device_dsc FDEE  
                              _CCPR4Lbits 000F13                   ?_USBCtrlTrfSetupHandler 002E  
                 USBStdGetStatusHandler@p 002F                                  __Hrparam 0000  
                    light_task@value_6073 008D                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                                  _SetupPkt 000D30  
                           _weekday_3char FDC0                     __size_of_month_length 00DE  
                      ringbuf_put_str@str 0071                              ??_light_task 0088  
                   ?_USBConfigureEndpoint 002E                  __size_of_caltime_to_RTCC 00D6  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00BE  
                        __size_of___awmod 00A2                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                       __end_of_ringbuf_pop 310C  
                     __end_of_ringbuf_num 27CC                       __end_of_ringbuf_put 2EA0  
                     __end_of_putUSBUSART 4610                               _line_coding 0176  
                          ??_CDCTxService 0067                       __end_of_timer0_init 439E  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 421C  
                              sprintf@len 008F                       __end_of_timer3_init 44CC  
                              sprintf@val 008D                          __size_of_isdigit 002A  
                 __size_of_USBDeviceTasks 014A                           ___lwdiv@divisor 0068  
                         ___lwdiv@counter 006A                      timer0_init@prescaler 0061  
                                __ptext10 24FC                                  __ptext11 4550  
                                __ptext20 4178                                  __ptext12 3CCE  
                                __ptext21 4650                                  __ptext13 405E  
                                __ptext30 457A                                  __ptext22 1EE2  
                                __ptext14 45C8                                  __ptext31 31CE  
                                __ptext23 440C                                  __ptext15 3B26  
                                __ptext40 3DD2                                  __ptext32 328C  
                                __ptext24 439E                                  __ptext16 3962  
                                __ptext41 3BB4                                  __ptext33 46BC  
                                __ptext25 3F2E                                  __ptext17 44A0  
                                __ptext50 1D68                                  __ptext42 2DCC  
                                __ptext34 4610                                  __ptext26 4688  
                                __ptext18 41CC                                  __ptext51 2B4A  
                                __ptext43 3040                                  __ptext35 17B6  
                                __ptext27 19CE                                  __ptext19 4364  
                                __ptext52 42EC                                  __ptext44 26DE  
                                __ptext36 3830                                  __ptext28 2CF8  
                                __ptext61 1534                                  __ptext53 46A2  
                                __ptext45 44CC                                  __ptext37 3348  
                                __ptext29 2C22                                  __ptext70 25EE  
                                __ptext62 46CA                                  __ptext54 101E  
                                __ptext46 45EE                                  __ptext38 1BC0  
                                __ptext71 39FA                                  __ptext63 203A  
                                __ptext55 28B6                                  __ptext47 421C  
                                __ptext39 43D6                                  __ptext80 3EC0  
                                __ptext72 2A70                                  __ptext64 2184  
                                __ptext56 378E                                  __ptext48 466C  
                                __ptext81 34C0                                  __ptext73 2994  
                                __ptext65 4440                                  __ptext57 3E4A  
                                __ptext49 27CC                                  __ptext82 4328  
                                __ptext74 4524                                  __ptext66 44F8  
                                __ptext58 3404                                  __ptext83 3A92  
                                __ptext75 36E4                                  __ptext67 4268  
                                __ptext59 4630                                  __ptext84 411C  
                                __ptext76 22BE                                  __ptext68 2F72  
                                __ptext85 23F0                                  __ptext77 12AC  
                                __ptext69 3D50                                  __ptext86 310C  
                                __ptext78 4472                                  __ptext87 357A  
                                __ptext79 3634                                  __ptext88 2EA0  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
                              PWM_init@PR 0060                 __size_of_terminal_at_hand 0062  
                        __size_of_sprintf 045A                      terminal_at_hand@hand 00B7  
                      __end_of_light_task 19CE                             __size_of_atoi 00F2  
          __end_of_USBCtrlTrfSetupHandler 3DD2                             __size_of_main 003E  
                       ?_USBCtrlEPService 002E                              _month_length 28B6  
                       put_string_usb@len 006E                        ??_USBCtrlEPService 0048  
                __size_of_RTCC_from_epoch 001A                       _USBCtrlTrfInHandler 357A  
                                _outPipes 0001                          ??_ringbuf_delete 0062  
                 ?_button_timer_interrupt 002E                      _USBCtrlTrfOutHandler 411C  
                                int$flags 005B                              _ringbuf_init 4178  
                                atoi@sign 006A                 _USBCtrlEPAllowStatusStage 310C  
                               x_to_d@hex 0061                              _SSP1STATbits 000FC7  
                  ??_USBTransferOnePacket 0064                             _terminal_task 0CB4  
                           _terminal_time 0908                 _USBDeferStatusStagePacket 0023  
                            ??_print_time 0097                  CDCTxService@byte_to_send 006B  
                          main_init@rxbuf 0400                            main_init@txbuf 04FA  
                             ??_main_init 0091                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 006A  
                    ?_USBCtrlTrfInHandler 002E             USBCtrlTrfTxService@byteToSend 002E  
                                isdigit@c 0062                                  memset@p1 0060  
                        ?_USBStallHandler 002E                  USBStdFeatureReqHandler@p 0046  
                        get_quot_rem@quot 0079                 terminal_task@command_init 00F2  
                       RTCC_to_caltime@tm 0062                                  intlevel2 0000  
                               sprintf@ap 0089                                 sprintf@cp 008B  
                               sprintf@sp 0072                    __size_of_USBDeviceInit 0158  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 44A0  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0040          ?_USER_USB_CALLBACK_EVENT_HANDLER 003A  
         _USER_USB_CALLBACK_EVENT_HANDLER 4472                          ___lwmod@dividend 006D  
            i2USBTransferOnePacket@handle 0033                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                       terminal_at_hand@max 00BA  
                     terminal_at_hand@min 00B9                         ?_caltime_to_epoch 0079  
                       _ringbuf_backspace 3B26                  __end_of_epoch_to_caltime 1BC0  
                __size_of_RTCC_to_caltime 00BC                                _OSCCONbits 000FD3  
          __end_of_button_timer_interrupt 17B6                __end_of_terminal_operation 04AE  
                      __end_of_print_time 3CCE                i2USBTransferOnePacket@data 002F  
                      ??_caltime_to_epoch 007B                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 002F                     ?_USBCtrlTrfOutHandler 002E  
                             _ringbuf_pop 3040                               _ringbuf_num 26DE  
                             _ringbuf_put 2DCC                               _putUSBUSART 45EE  
                     _USBCtrlTrfRxService 23F0                               _timer0_init 4364  
                      _USBWakeFromSuspend 4440                               _timer1_init 41CC  
                             _timer3_init 44A0                            ?_terminal_task 0189  
                          ?_terminal_time 00BC                   _USBStdFeatureReqHandler 12AC  
                      _USBCheckCDCRequest 3634                       _USBCtrlTrfTxService 2EA0  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                                sprintf@c 0092                                  sprintf@f 0074  
                     ?_USBWakeFromSuspend 002E                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 466C  
                              _PPSCONbits 000EBF                          ___lldiv@quotient 0068  
                         ___lwmod@divisor 006F                         caltime_to_RTCC@tm 0076  
                       ??_caltime_to_RTCC 0078                     ??_USBCtrlTrfInHandler 002F  
                   _USBAlternateInterface 00FB                           ___lwmod@counter 0071  
                      terminal_at_hand@tx 00B5                       ?_USBCheckCDCRequest 002E  
               i2USBTransferOnePacket@dir 002E                 i2USBTransferOnePacket@len 0031  
                     USBEnableEndpoint@ep 0039                           _endpoint_number 002A  
                    ?_USBCtrlTrfRxService 002E           epoch_to_caltime@day_since_epoch 0085  
                           ?_getsUSBUSART 0067                  ?_USBCtrlEPAllowDataStage 002E  
                          _get_string_usb 421C                      ?_USBCtrlTrfTxService 002E  
               __end_of_ringbuf_backspace 3BB4              _USBStatusStageTimeoutCounter 0027  
                    ??_USBWakeFromSuspend 0042                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 1EE2                      ??_USBCheckCDCRequest 002E  
                              _USB_CD_Ptr FD13                          ??_RTCC_from_RTCC 0088  
