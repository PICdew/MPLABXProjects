

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 12 22:34:10 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   111                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   112                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   113                           	dabs	1,0xD00,48,_BDT
   114                           	dabs	1,0xD38,8,_CtrlTrfData
   115                           	dabs	1,0xD30,8,_SetupPkt
   116  0000                     
   117                           	psect	idataBANK0
   118  0146BC                     __pidataBANK0:
   119                           	opt stack 0
   120                           
   121                           ;initializer for epoch_to_caltime@month_cache
   122  0146BC  01                 	db	1
   123                           
   124                           	psect	idataBANK1
   125  001004                     __pidataBANK1:
   126                           	opt stack 0
   127                           
   128                           ;initializer for I2C_LCD_SetCursor@F8620
   129  001004  00                 	db	0
   130  001005  40                 	db	64
   131                           
   132                           	psect	mediumconst
   133  00FD02                     __pmediumconst:
   134                           	opt stack 0
   135  00FD02  00                 	db	0
   136  00FD03                     _dpowers:
   137                           	opt stack 0
   138  00FD03  0001               	dw	1
   139  00FD05  000A               	dw	10
   140  00FD07  0064               	dw	100
   141  00FD09  03E8               	dw	1000
   142  00FD0B  2710               	dw	10000
   143  00FD0D                     __end_of_dpowers:
   144                           	opt stack 0
   145  00FD0D                     _USB_SD_Ptr:
   146                           	opt stack 0
   147  00FD0D  EE                 	db	low _sd000
   148  00FD0E  FD                 	db	high _sd000
   149  00FD0F  58                 	db	low _sd001
   150  00FD10  FD                 	db	high _sd001
   151  00FD11  8C                 	db	low _sd002
   152  00FD12  FD                 	db	high _sd002
   153  00FD13                     __end_of_USB_SD_Ptr:
   154                           	opt stack 0
   155  00FD13                     _USB_CD_Ptr:
   156                           	opt stack 0
   157  00FD13  15                 	db	low _configDescriptor1
   158  00FD14  FD                 	db	high _configDescriptor1
   159  00FD15                     __end_of_USB_CD_Ptr:
   160                           	opt stack 0
   161  00FD15                     _configDescriptor1:
   162                           	opt stack 0
   163  00FD15  09                 	db	9
   164  00FD16  02                 	db	2
   165  00FD17  43                 	db	67
   166  00FD18  00                 	db	0
   167  00FD19  02                 	db	2
   168  00FD1A  01                 	db	1
   169  00FD1B  00                 	db	0
   170  00FD1C  C0                 	db	192
   171  00FD1D  32                 	db	50
   172  00FD1E  09                 	db	9
   173  00FD1F  04                 	db	4
   174  00FD20  00                 	db	0
   175  00FD21  00                 	db	0
   176  00FD22  01                 	db	1
   177  00FD23  02                 	db	2
   178  00FD24  02                 	db	2
   179  00FD25  01                 	db	1
   180  00FD26  00                 	db	0
   181  00FD27  05                 	db	5
   182  00FD28  24                 	db	36
   183  00FD29  00                 	db	0
   184  00FD2A  10                 	db	16
   185  00FD2B  01                 	db	1
   186  00FD2C  04                 	db	4
   187  00FD2D  24                 	db	36
   188  00FD2E  02                 	db	2
   189  00FD2F  02                 	db	2
   190  00FD30  05                 	db	5
   191  00FD31  24                 	db	36
   192  00FD32  06                 	db	6
   193  00FD33  00                 	db	0
   194  00FD34  01                 	db	1
   195  00FD35  05                 	db	5
   196  00FD36  24                 	db	36
   197  00FD37  01                 	db	1
   198  00FD38  00                 	db	0
   199  00FD39  01                 	db	1
   200  00FD3A  07                 	db	7
   201  00FD3B  05                 	db	5
   202  00FD3C  81                 	db	129
   203  00FD3D  03                 	db	3
   204  00FD3E  08                 	db	8
   205  00FD3F  00                 	db	0
   206  00FD40  02                 	db	2
   207  00FD41  09                 	db	9
   208  00FD42  04                 	db	4
   209  00FD43  01                 	db	1
   210  00FD44  00                 	db	0
   211  00FD45  02                 	db	2
   212  00FD46  0A                 	db	10
   213  00FD47  00                 	db	0
   214  00FD48  00                 	db	0
   215  00FD49  00                 	db	0
   216  00FD4A  07                 	db	7
   217  00FD4B  05                 	db	5
   218  00FD4C  02                 	db	2
   219  00FD4D  02                 	db	2
   220  00FD4E  40                 	db	64
   221  00FD4F  00                 	db	0
   222  00FD50  00                 	db	0
   223  00FD51  07                 	db	7
   224  00FD52  05                 	db	5
   225  00FD53  82                 	db	130
   226  00FD54  02                 	db	2
   227  00FD55  40                 	db	64
   228  00FD56  00                 	db	0
   229  00FD57  00                 	db	0
   230  00FD58                     __end_of_configDescriptor1:
   231                           	opt stack 0
   232  00FD58                     _sd001:
   233                           	opt stack 0
   234  00FD58  34                 	db	52
   235  00FD59  03                 	db	3
   236  00FD5A  004D               	dw	77
   237  00FD5C  0069               	dw	105
   238  00FD5E  0063               	dw	99
   239  00FD60  0072               	dw	114
   240  00FD62  006F               	dw	111
   241  00FD64  0063               	dw	99
   242  00FD66  0068               	dw	104
   243  00FD68  0069               	dw	105
   244  00FD6A  0070               	dw	112
   245  00FD6C  0020               	dw	32
   246  00FD6E  0054               	dw	84
   247  00FD70  0065               	dw	101
   248  00FD72  0063               	dw	99
   249  00FD74  0068               	dw	104
   250  00FD76  006E               	dw	110
   251  00FD78  006F               	dw	111
   252  00FD7A  006C               	dw	108
   253  00FD7C  006F               	dw	111
   254  00FD7E  0067               	dw	103
   255  00FD80  0079               	dw	121
   256  00FD82  0020               	dw	32
   257  00FD84  0049               	dw	73
   258  00FD86  006E               	dw	110
   259  00FD88  0063               	dw	99
   260  00FD8A  002E               	dw	46
   261  00FD8C                     __end_of_sd001:
   262                           	opt stack 0
   263  00FD8C                     _sd002:
   264                           	opt stack 0
   265  00FD8C  34                 	db	52
   266  00FD8D  03                 	db	3
   267  00FD8E  0043               	dw	67
   268  00FD90  0044               	dw	68
   269  00FD92  0043               	dw	67
   270  00FD94  0020               	dw	32
   271  00FD96  0052               	dw	82
   272  00FD98  0053               	dw	83
   273  00FD9A  002D               	dw	45
   274  00FD9C  0032               	dw	50
   275  00FD9E  0033               	dw	51
   276  00FDA0  0032               	dw	50
   277  00FDA2  0020               	dw	32
   278  00FDA4  0045               	dw	69
   279  00FDA6  006D               	dw	109
   280  00FDA8  0075               	dw	117
   281  00FDAA  006C               	dw	108
   282  00FDAC  0061               	dw	97
   283  00FDAE  0074               	dw	116
   284  00FDB0  0069               	dw	105
   285  00FDB2  006F               	dw	111
   286  00FDB4  006E               	dw	110
   287  00FDB6  0020               	dw	32
   288  00FDB8  0044               	dw	68
   289  00FDBA  0065               	dw	101
   290  00FDBC  006D               	dw	109
   291  00FDBE  006F               	dw	111
   292  00FDC0                     __end_of_sd002:
   293                           	opt stack 0
   294  00FDC0                     _weekday_3char:
   295                           	opt stack 0
   296  00FDC0  53                 	db	83
   297  00FDC1  55                 	db	85
   298  00FDC2  4E                 	db	78
   299  00FDC3  00                 	db	0
   300  00FDC4  4D                 	db	77
   301  00FDC5  4F                 	db	79
   302  00FDC6  4E                 	db	78
   303  00FDC7  00                 	db	0
   304  00FDC8  54                 	db	84
   305  00FDC9  55                 	db	85
   306  00FDCA  45                 	db	69
   307  00FDCB  00                 	db	0
   308  00FDCC  57                 	db	87
   309  00FDCD  45                 	db	69
   310  00FDCE  44                 	db	68
   311  00FDCF  00                 	db	0
   312  00FDD0  54                 	db	84
   313  00FDD1  48                 	db	72
   314  00FDD2  55                 	db	85
   315  00FDD3  00                 	db	0
   316  00FDD4  46                 	db	70
   317  00FDD5  52                 	db	82
   318  00FDD6  49                 	db	73
   319  00FDD7  00                 	db	0
   320  00FDD8  53                 	db	83
   321  00FDD9  41                 	db	65
   322  00FDDA  54                 	db	84
   323  00FDDB  00                 	db	0
   324  00FDDC                     __end_of_weekday_3char:
   325                           	opt stack 0
   326  00FDDC                     _device_dsc:
   327                           	opt stack 0
   328  00FDDC  12                 	db	18
   329  00FDDD  01                 	db	1
   330  00FDDE  0200               	dw	512
   331  00FDE0  02                 	db	2
   332  00FDE1  00                 	db	0
   333  00FDE2  00                 	db	0
   334  00FDE3  08                 	db	8
   335  00FDE4  04D8               	dw	1240
   336  00FDE6  000A               	dw	10
   337  00FDE8  0100               	dw	256
   338  00FDEA  01                 	db	1
   339  00FDEB  02                 	db	2
   340  00FDEC  00                 	db	0
   341  00FDED  01                 	db	1
   342  00FDEE                     __end_of_device_dsc:
   343                           	opt stack 0
   344  00FDEE                     _sd000:
   345                           	opt stack 0
   346  00FDEE  04                 	db	4
   347  00FDEF  03                 	db	3
   348  00FDF0  0409               	dw	1033
   349  00FDF2                     __end_of_sd000:
   350                           	opt stack 0
   351  0000                     _PPSCONbits	set	3775
   352  0000                     _RPOR3	set	3779
   353  0000                     _RPOR4	set	3780
   354  0000                     _RPOR5	set	3781
   355  0000                     _ANCON0	set	3912
   356  0000                     _ANCON1	set	3913
   357  0000                     _CCP3CONbits	set	3861
   358  0000                     _CCP4CONbits	set	3858
   359  0000                     _CCPR3L	set	3862
   360  0000                     _CCPR3Lbits	set	3862
   361  0000                     _CCPR4L	set	3859
   362  0000                     _CCPR4Lbits	set	3859
   363  0000                     _CCPTMRS0bits	set	3922
   364  0000                     _CCPTMRS1bits	set	3921
   365  0000                     _PADCFG1bits	set	3900
   366  0000                     _RTCCAL	set	3902
   367  0000                     _RTCCFGbits	set	3903
   368  0000                     _RTCVALH	set	3899
   369  0000                     _RTCVALL	set	3898
   370  0000                     _T5CONbits	set	3874
   371  0000                     _UADDR	set	3896
   372  0000                     _UCFG	set	3897
   373  0000                     _UEIE	set	3895
   374  0000                     _UEP0bits	set	3878
   375  0000                     _UIE	set	3894
   376  0000                     _UIEbits	set	3894
   377  0000                     _UEP0	set	3878
   378  0000                     _UEP1	set	3879
   379  0000                     _ADRES	set	4035
   380  0000                     _ADCON0bits	set	4034
   381  0000                     _ADCON1bits	set	4033
   382  0000                     _BAUDCON1bits	set	3966
   383  0000                     _CCP1CONbits	set	4026
   384  0000                     _CCP2CONbits	set	4020
   385  0000                     _CCPR1L	set	4027
   386  0000                     _CCPR1Lbits	set	4027
   387  0000                     _CCPR2L	set	4021
   388  0000                     _CCPR2Lbits	set	4021
   389  0000                     _CTMUCONH	set	4019
   390  0000                     _CTMUCONHbits	set	4019
   391  0000                     _CTMUCONL	set	4018
   392  0000                     _CTMUCONLbits	set	4018
   393  0000                     _CTMUICON	set	4017
   394  0000                     _EECON2	set	4007
   395  0000                     _INTCON2bits	set	4081
   396  0000                     _INTCONbits	set	4082
   397  0000                     _IPR1bits	set	3999
   398  0000                     _IPR2bits	set	4002
   399  0000                     _IPR5bits	set	3993
   400  0000                     _LATBbits	set	3978
   401  0000                     _OSCCONbits	set	4051
   402  0000                     _OSCTUNEbits	set	3995
   403  0000                     _PIE1bits	set	3997
   404  0000                     _PIE2bits	set	4000
   405  0000                     _PIE5bits	set	3985
   406  0000                     _PIR1bits	set	3998
   407  0000                     _PIR2bits	set	4001
   408  0000                     _PIR5bits	set	3992
   409  0000                     _PORTAbits	set	3968
   410  0000                     _PR2	set	4043
   411  0000                     _RCONbits	set	4048
   412  0000                     _RCREG1	set	4015
   413  0000                     _RCSTA1bits	set	4012
   414  0000                     _SPBRG1	set	4016
   415  0000                     _SPBRGH1	set	3967
   416  0000                     _SSP1ADD	set	4040
   417  0000                     _SSP1BUF	set	4041
   418  0000                     _SSP1CON1	set	4038
   419  0000                     _SSP1CON1bits	set	4038
   420  0000                     _SSP1CON2	set	4037
   421  0000                     _SSP1CON2bits	set	4037
   422  0000                     _SSP1STAT	set	4039
   423  0000                     _SSP1STATbits	set	4039
   424  0000                     _T0CONbits	set	4053
   425  0000                     _T1CONbits	set	4045
   426  0000                     _T2CONbits	set	4042
   427  0000                     _T3CONbits	set	3961
   428  0000                     _TMR1H	set	4047
   429  0000                     _TRISA	set	3986
   430  0000                     _TRISB	set	3987
   431  0000                     _TRISC	set	3988
   432  0000                     _TXREG1	set	4014
   433  0000                     _TXSTA1bits	set	4013
   434  0000                     _UCON	set	3941
   435  0000                     _UCONbits	set	3941
   436  0000                     _UEIR	set	3939
   437  0000                     _UIR	set	3938
   438  0000                     _UIRbits	set	3938
   439  0000                     _USTAT	set	3940
   440  0000                     _BCL1IF	set	32011
   441  0000                     _LATB2	set	31826
   442  0000                     _SSP1IF	set	31987
   443  00FDF2                     STR_43:
   444                           
   445                           ; BSR set to: 0
   446  00FDF2  09                 	db	9
   447  00FDF3  2A                 	db	42
   448  00FDF4  2A                 	db	42
   449  00FDF5  2A                 	db	42
   450  00FDF6  2A                 	db	42
   451  00FDF7  2A                 	db	42
   452  00FDF8  2A                 	db	42
   453  00FDF9  2A                 	db	42
   454  00FDFA  2A                 	db	42
   455  00FDFB  2A                 	db	42
   456  00FDFC  2A                 	db	42
   457  00FDFD  2A                 	db	42
   458  00FDFE  2A                 	db	42
   459  00FDFF  2A                 	db	42
   460  00FE00  2A                 	db	42
   461  00FE01  2A                 	db	42
   462  00FE02  2A                 	db	42
   463  00FE03  2A                 	db	42
   464  00FE04  2A                 	db	42
   465  00FE05  2A                 	db	42
   466  00FE06  2A                 	db	42
   467  00FE07  2A                 	db	42
   468  00FE08  2A                 	db	42
   469  00FE09  2A                 	db	42
   470  00FE0A  2A                 	db	42
   471  00FE0B  2A                 	db	42
   472  00FE0C  2A                 	db	42
   473  00FE0D  0A                 	db	10
   474  00FE0E  09                 	db	9
   475  00FE0F  2A                 	db	42
   476  00FE10  2A                 	db	42
   477  00FE11  2A                 	db	42
   478  00FE12  2A                 	db	42
   479  00FE13  20                 	db	32
   480  00FE14  4B                 	db	75	;'K'
   481  00FE15  69                 	db	105	;'i'
   482  00FE16  6C                 	db	108	;'l'
   483  00FE17  6C                 	db	108	;'l'
   484  00FE18  69                 	db	105	;'i'
   485  00FE19  66                 	db	102	;'f'
   486  00FE1A  69                 	db	105	;'i'
   487  00FE1B  73                 	db	115	;'s'
   488  00FE1C  68                 	db	104	;'h'
   489  00FE1D  20                 	db	32
   490  00FE1E  4C                 	db	76	;'L'
   491  00FE1F  69                 	db	105	;'i'
   492  00FE20  67                 	db	103	;'g'
   493  00FE21  68                 	db	104	;'h'
   494  00FE22  74                 	db	116	;'t'
   495  00FE23  20                 	db	32
   496  00FE24  20                 	db	32
   497  00FE25  2A                 	db	42
   498  00FE26  2A                 	db	42
   499  00FE27  2A                 	db	42
   500  00FE28  2A                 	db	42
   501  00FE29  0A                 	db	10
   502  00FE2A  09                 	db	9
   503  00FE2B  2A                 	db	42
   504  00FE2C  2A                 	db	42
   505  00FE2D  2A                 	db	42
   506  00FE2E  2A                 	db	42
   507  00FE2F  20                 	db	32
   508  00FE30  4D                 	db	77	;'M'
   509  00FE31  61                 	db	97	;'a'
   510  00FE32  64                 	db	100	;'d'
   511  00FE33  65                 	db	101	;'e'
   512  00FE34  20                 	db	32
   513  00FE35  62                 	db	98	;'b'
   514  00FE36  79                 	db	121	;'y'
   515  00FE37  20                 	db	32
   516  00FE38  40                 	db	64	;'@'
   517  00FE39  52                 	db	82	;'R'
   518  00FE3A  79                 	db	121	;'y'
   519  00FE3B  6F                 	db	111	;'o'
   520  00FE3C  6B                 	db	107	;'k'
   521  00FE3D  65                 	db	101	;'e'
   522  00FE3E  72                 	db	114	;'r'
   523  00FE3F  69                 	db	105	;'i'
   524  00FE40  20                 	db	32
   525  00FE41  2A                 	db	42
   526  00FE42  2A                 	db	42
   527  00FE43  2A                 	db	42
   528  00FE44  2A                 	db	42
   529  00FE45  0A                 	db	10
   530  00FE46  09                 	db	9
   531  00FE47  2A                 	db	42
   532  00FE48  2A                 	db	42
   533  00FE49  2A                 	db	42
   534  00FE4A  2A                 	db	42
   535  00FE4B  2A                 	db	42
   536  00FE4C  2A                 	db	42
   537  00FE4D  2A                 	db	42
   538  00FE4E  2A                 	db	42
   539  00FE4F  2A                 	db	42
   540  00FE50  2A                 	db	42
   541  00FE51  2A                 	db	42
   542  00FE52  2A                 	db	42
   543  00FE53  2A                 	db	42
   544  00FE54  2A                 	db	42
   545  00FE55  2A                 	db	42
   546  00FE56  2A                 	db	42
   547  00FE57  2A                 	db	42
   548  00FE58  2A                 	db	42
   549  00FE59  2A                 	db	42
   550  00FE5A  2A                 	db	42
   551  00FE5B  2A                 	db	42
   552  00FE5C  2A                 	db	42
   553  00FE5D  2A                 	db	42
   554  00FE5E  2A                 	db	42
   555  00FE5F  2A                 	db	42
   556  00FE60  2A                 	db	42
   557  00FE61  0A                 	db	10
   558  00FE62  0A                 	db	10
   559  00FE63  09                 	db	9
   560  00FE64  63                 	db	99	;'c'
   561  00FE65  6F                 	db	111	;'o'
   562  00FE66  6D                 	db	109	;'m'
   563  00FE67  6D                 	db	109	;'m'
   564  00FE68  61                 	db	97	;'a'
   565  00FE69  6E                 	db	110	;'n'
   566  00FE6A  64                 	db	100	;'d'
   567  00FE6B  20                 	db	32
   568  00FE6C  09                 	db	9
   569  00FE6D  6F                 	db	111	;'o'
   570  00FE6E  70                 	db	112	;'p'
   571  00FE6F  65                 	db	101	;'e'
   572  00FE70  6C                 	db	108	;'l'
   573  00FE71  61                 	db	97	;'a'
   574  00FE72  6E                 	db	110	;'n'
   575  00FE73  64                 	db	100	;'d'
   576  00FE74  31                 	db	49	;'1'
   577  00FE75  09                 	db	9
   578  00FE76  6F                 	db	111	;'o'
   579  00FE77  70                 	db	112	;'p'
   580  00FE78  65                 	db	101	;'e'
   581  00FE79  6C                 	db	108	;'l'
   582  00FE7A  61                 	db	97	;'a'
   583  00FE7B  6E                 	db	110	;'n'
   584  00FE7C  64                 	db	100	;'d'
   585  00FE7D  32                 	db	50	;'2'
   586  00FE7E  0A                 	db	10
   587  00FE7F  0A                 	db	10
   588  00FE80  09                 	db	9
   589  00FE81  70                 	db	112	;'p'
   590  00FE82  72                 	db	114	;'r'
   591  00FE83  69                 	db	105	;'i'
   592  00FE84  6E                 	db	110	;'n'
   593  00FE85  74                 	db	116	;'t'
   594  00FE86  5F                 	db	95	;'_'
   595  00FE87  74                 	db	116	;'t'
   596  00FE88  69                 	db	105	;'i'
   597  00FE89  6D                 	db	109	;'m'
   598  00FE8A  65                 	db	101	;'e'
   599  00FE8B  28                 	db	40
   600  00FE8C  74                 	db	116	;'t'
   601  00FE8D  29                 	db	41
   602  00FE8E  0A                 	db	10
   603  00FE8F  09                 	db	9
   604  00FE90  61                 	db	97	;'a'
   605  00FE91  64                 	db	100	;'d'
   606  00FE92  6A                 	db	106	;'j'
   607  00FE93  75                 	db	117	;'u'
   608  00FE94  73                 	db	115	;'s'
   609  00FE95  74                 	db	116	;'t'
   610  00FE96  5F                 	db	95	;'_'
   611  00FE97  74                 	db	116	;'t'
   612  00FE98  69                 	db	105	;'i'
   613  00FE99  6D                 	db	109	;'m'
   614  00FE9A  65                 	db	101	;'e'
   615  00FE9B  28                 	db	40
   616  00FE9C  61                 	db	97	;'a'
   617  00FE9D  74                 	db	116	;'t'
   618  00FE9E  29                 	db	41
   619  00FE9F  20                 	db	32
   620  00FEA0  5B                 	db	91	;'['
   621  00FEA1  68                 	db	104	;'h'
   622  00FEA2  61                 	db	97	;'a'
   623  00FEA3  6E                 	db	110	;'n'
   624  00FEA4  64                 	db	100	;'d'
   625  00FEA5  3A                 	db	58	;':'
   626  00FEA6  79                 	db	121	;'y'
   627  00FEA7  2C                 	db	44
   628  00FEA8  4D                 	db	77	;'M'
   629  00FEA9  2C                 	db	44
   630  00FEAA  64                 	db	100	;'d'
   631  00FEAB  2C                 	db	44
   632  00FEAC  68                 	db	104	;'h'
   633  00FEAD  2C                 	db	44
   634  00FEAE  6D                 	db	109	;'m'
   635  00FEAF  2C                 	db	44
   636  00FEB0  73                 	db	115	;'s'
   637  00FEB1  5D                 	db	93	;']'
   638  00FEB2  20                 	db	32
   639  00FEB3  5B                 	db	91	;'['
   640  00FEB4  76                 	db	118	;'v'
   641  00FEB5  61                 	db	97	;'a'
   642  00FEB6  6C                 	db	108	;'l'
   643  00FEB7  75                 	db	117	;'u'
   644  00FEB8  65                 	db	101	;'e'
   645  00FEB9  28                 	db	40
   646  00FEBA  64                 	db	100	;'d'
   647  00FEBB  65                 	db	101	;'e'
   648  00FEBC  63                 	db	99	;'c'
   649  00FEBD  69                 	db	105	;'i'
   650  00FEBE  6D                 	db	109	;'m'
   651  00FEBF  61                 	db	97	;'a'
   652  00FEC0  6C                 	db	108	;'l'
   653  00FEC1  29                 	db	41
   654  00FEC2  5D                 	db	93	;']'
   655  00FEC3  0A                 	db	10
   656  00FEC4  09                 	db	9
   657  00FEC5  70                 	db	112	;'p'
   658  00FEC6  77                 	db	119	;'w'
   659  00FEC7  6D                 	db	109	;'m'
   660  00FEC8  20                 	db	32
   661  00FEC9  5B                 	db	91	;'['
   662  00FECA  63                 	db	99	;'c'
   663  00FECB  6F                 	db	111	;'o'
   664  00FECC  6C                 	db	108	;'l'
   665  00FECD  6F                 	db	111	;'o'
   666  00FECE  72                 	db	114	;'r'
   667  00FECF  3A                 	db	58	;':'
   668  00FED0  52                 	db	82	;'R'
   669  00FED1  2C                 	db	44
   670  00FED2  47                 	db	71	;'G'
   671  00FED3  2C                 	db	44
   672  00FED4  42                 	db	66	;'B'
   673  00FED5  2C                 	db	44
   674  00FED6  57                 	db	87	;'W'
   675  00FED7  5D                 	db	93	;']'
   676  00FED8  20                 	db	32
   677  00FED9  5B                 	db	91	;'['
   678  00FEDA  76                 	db	118	;'v'
   679  00FEDB  61                 	db	97	;'a'
   680  00FEDC  6C                 	db	108	;'l'
   681  00FEDD  75                 	db	117	;'u'
   682  00FEDE  65                 	db	101	;'e'
   683  00FEDF  28                 	db	40
   684  00FEE0  25                 	db	37
   685  00FEE1  29                 	db	41
   686  00FEE2  3A                 	db	58	;':'
   687  00FEE3  30                 	db	48	;'0'
   688  00FEE4  7E                 	db	126
   689  00FEE5  31                 	db	49	;'1'
   690  00FEE6  30                 	db	48	;'0'
   691  00FEE7  30                 	db	48	;'0'
   692  00FEE8  5D                 	db	93	;']'
   693  00FEE9  0A                 	db	10
   694  00FEEA  09                 	db	9
   695  00FEEB  70                 	db	112	;'p'
   696  00FEEC  77                 	db	119	;'w'
   697  00FEED  6D                 	db	109	;'m'
   698  00FEEE  20                 	db	32
   699  00FEEF  63                 	db	99	;'c'
   700  00FEF0  6C                 	db	108	;'l'
   701  00FEF1  65                 	db	101	;'e'
   702  00FEF2  61                 	db	97	;'a'
   703  00FEF3  72                 	db	114	;'r'
   704  00FEF4  0A                 	db	10
   705  00FEF5  09                 	db	9
   706  00FEF6  73                 	db	115	;'s'
   707  00FEF7  65                 	db	101	;'e'
   708  00FEF8  74                 	db	116	;'t'
   709  00FEF9  20                 	db	32
   710  00FEFA  74                 	db	116	;'t'
   711  00FEFB  69                 	db	105	;'i'
   712  00FEFC  6D                 	db	109	;'m'
   713  00FEFD  65                 	db	101	;'e'
   714  00FEFE  5F                 	db	95	;'_'
   715  00FEFF  73                 	db	115	;'s'
   716  00FF00  79                 	db	121	;'y'
   717  00FF01  6E                 	db	110	;'n'
   718  00FF02  63                 	db	99	;'c'
   719  00FF03  5F                 	db	95	;'_'
   720  00FF04  6D                 	db	109	;'m'
   721  00FF05  6F                 	db	111	;'o'
   722  00FF06  64                 	db	100	;'d'
   723  00FF07  65                 	db	101	;'e'
   724  00FF08  28                 	db	40
   725  00FF09  73                 	db	115	;'s'
   726  00FF0A  79                 	db	121	;'y'
   727  00FF0B  6E                 	db	110	;'n'
   728  00FF0C  63                 	db	99	;'c'
   729  00FF0D  29                 	db	41
   730  00FF0E  0A                 	db	10
   731  00FF0F  09                 	db	9
   732  00FF10  73                 	db	115	;'s'
   733  00FF11  65                 	db	101	;'e'
   734  00FF12  74                 	db	116	;'t'
   735  00FF13  20                 	db	32
   736  00FF14  41                 	db	65	;'A'
   737  00FF15  44                 	db	68	;'D'
   738  00FF16  43                 	db	67	;'C'
   739  00FF17  5F                 	db	95	;'_'
   740  00FF18  6D                 	db	109	;'m'
   741  00FF19  6F                 	db	111	;'o'
   742  00FF1A  64                 	db	100	;'d'
   743  00FF1B  65                 	db	101	;'e'
   744  00FF1C  28                 	db	40
   745  00FF1D  61                 	db	97	;'a'
   746  00FF1E  64                 	db	100	;'d'
   747  00FF1F  63                 	db	99	;'c'
   748  00FF20  29                 	db	41
   749  00FF21  0A                 	db	10
   750  00FF22  09                 	db	9
   751  00FF23  52                 	db	82	;'R'
   752  00FF24  45                 	db	69	;'E'
   753  00FF25  53                 	db	83	;'S'
   754  00FF26  45                 	db	69	;'E'
   755  00FF27  54                 	db	84	;'T'
   756  00FF28  28                 	db	40
   757  00FF29  29                 	db	41
   758  00FF2A  3B                 	db	59	;';'
   759  00FF2B  0A                 	db	10
   760  00FF2C  00                 	db	0
   761  00FF2D                     STR_23:
   762                           
   763                           ; BSR set to: 0
   764  00FF2D  09                 	db	9
   765  00FF2E  32                 	db	50	;'2'
   766  00FF2F  30                 	db	48	;'0'
   767  00FF30  25                 	db	37
   768  00FF31  30                 	db	48	;'0'
   769  00FF32  32                 	db	50	;'2'
   770  00FF33  64                 	db	100	;'d'
   771  00FF34  2F                 	db	47
   772  00FF35  25                 	db	37
   773  00FF36  30                 	db	48	;'0'
   774  00FF37  32                 	db	50	;'2'
   775  00FF38  64                 	db	100	;'d'
   776  00FF39  2F                 	db	47
   777  00FF3A  25                 	db	37
   778  00FF3B  30                 	db	48	;'0'
   779  00FF3C  32                 	db	50	;'2'
   780  00FF3D  64                 	db	100	;'d'
   781  00FF3E  28                 	db	40
   782  00FF3F  25                 	db	37
   783  00FF40  73                 	db	115	;'s'
   784  00FF41  29                 	db	41
   785  00FF42  25                 	db	37
   786  00FF43  30                 	db	48	;'0'
   787  00FF44  32                 	db	50	;'2'
   788  00FF45  64                 	db	100	;'d'
   789  00FF46  3A                 	db	58	;':'
   790  00FF47  25                 	db	37
   791  00FF48  30                 	db	48	;'0'
   792  00FF49  32                 	db	50	;'2'
   793  00FF4A  64                 	db	100	;'d'
   794  00FF4B  2D                 	db	45
   795  00FF4C  25                 	db	37
   796  00FF4D  30                 	db	48	;'0'
   797  00FF4E  32                 	db	50	;'2'
   798  00FF4F  64                 	db	100	;'d'
   799  00FF50  0A                 	db	10
   800  00FF51  00                 	db	0
   801  00FF52                     STR_28:
   802                           
   803                           ; BSR set to: 0
   804  00FF52  61                 	db	97	;'a'
   805  00FF53  64                 	db	100	;'d'
   806  00FF54  6A                 	db	106	;'j'
   807  00FF55  75                 	db	117	;'u'
   808  00FF56  73                 	db	115	;'s'
   809  00FF57  74                 	db	116	;'t'
   810  00FF58  5F                 	db	95	;'_'
   811  00FF59  74                 	db	116	;'t'
   812  00FF5A  69                 	db	105	;'i'
   813  00FF5B  6D                 	db	109	;'m'
   814  00FF5C  65                 	db	101	;'e'
   815  00FF5D  00                 	db	0
   816  00FF5E                     STR_25:
   817                           
   818                           ; BSR set to: 0
   819  00FF5E  70                 	db	112	;'p'
   820  00FF5F  72                 	db	114	;'r'
   821  00FF60  69                 	db	105	;'i'
   822  00FF61  6E                 	db	110	;'n'
   823  00FF62  74                 	db	116	;'t'
   824  00FF63  5F                 	db	95	;'_'
   825  00FF64  74                 	db	116	;'t'
   826  00FF65  69                 	db	105	;'i'
   827  00FF66  6D                 	db	109	;'m'
   828  00FF67  65                 	db	101	;'e'
   829  00FF68  00                 	db	0
   830  00FF69                     STR_44:
   831                           
   832                           ; BSR set to: 0
   833  00FF69  52                 	db	82	;'R'
   834  00FF6A  45                 	db	69	;'E'
   835  00FF6B  53                 	db	83	;'S'
   836  00FF6C  45                 	db	69	;'E'
   837  00FF6D  54                 	db	84	;'T'
   838  00FF6E  28                 	db	40
   839  00FF6F  29                 	db	41
   840  00FF70  3B                 	db	59	;';'
   841  00FF71  00                 	db	0
   842  00FF72                     STR_45:
   843                           
   844                           ; BSR set to: 0
   845  00FF72  62                 	db	98	;'b'
   846  00FF73  6F                 	db	111	;'o'
   847  00FF74  6F                 	db	111	;'o'
   848  00FF75  74                 	db	116	;'t'
   849  00FF76  6C                 	db	108	;'l'
   850  00FF77  6F                 	db	111	;'o'
   851  00FF78  61                 	db	97	;'a'
   852  00FF79  64                 	db	100	;'d'
   853  00FF7A  00                 	db	0
   854  00FF7B                     STR_15:
   855                           
   856                           ; BSR set to: 0
   857  00FF7B  20                 	db	32
   858  00FF7C  20                 	db	32
   859  00FF7D  20                 	db	32
   860  00FF7E  20                 	db	32
   861  00FF7F  20                 	db	32
   862  00FF80  20                 	db	32
   863  00FF81  20                 	db	32
   864  00FF82  20                 	db	32
   865  00FF83  00                 	db	0
   866  00FF84                     STR_24:
   867                           
   868                           ; BSR set to: 0
   869  00FF84  09                 	db	9
   870  00FF85  65                 	db	101	;'e'
   871  00FF86  72                 	db	114	;'r'
   872  00FF87  72                 	db	114	;'r'
   873  00FF88  6F                 	db	111	;'o'
   874  00FF89  72                 	db	114	;'r'
   875  00FF8A  0A                 	db	10
   876  00FF8B  00                 	db	0
   877  00FF8C                     STR_61:
   878                           
   879                           ; BSR set to: 0
   880  00FF8C  28                 	db	40
   881  00FF8D  6E                 	db	110	;'n'
   882  00FF8E  75                 	db	117	;'u'
   883  00FF8F  6C                 	db	108	;'l'
   884  00FF90  6C                 	db	108	;'l'
   885  00FF91  29                 	db	41
   886  00FF92  00                 	db	0
   887  00FF93                     STR_40:
   888                           
   889                           ; BSR set to: 0
   890  00FF93  73                 	db	115	;'s'
   891  00FF94  65                 	db	101	;'e'
   892  00FF95  63                 	db	99	;'c'
   893  00FF96  6F                 	db	111	;'o'
   894  00FF97  6E                 	db	110	;'n'
   895  00FF98  64                 	db	100	;'d'
   896  00FF99  00                 	db	0
   897  00FF9A                     STR_38:
   898                           
   899                           ; BSR set to: 0
   900  00FF9A  6D                 	db	109	;'m'
   901  00FF9B  69                 	db	105	;'i'
   902  00FF9C  6E                 	db	110	;'n'
   903  00FF9D  75                 	db	117	;'u'
   904  00FF9E  74                 	db	116	;'t'
   905  00FF9F  65                 	db	101	;'e'
   906  00FFA0  00                 	db	0
   907  00FFA1                     STR_60:
   908                           
   909                           ; BSR set to: 0
   910  00FFA1  63                 	db	99	;'c'
   911  00FFA2  6C                 	db	108	;'l'
   912  00FFA3  65                 	db	101	;'e'
   913  00FFA4  61                 	db	97	;'a'
   914  00FFA5  72                 	db	114	;'r'
   915  00FFA6  00                 	db	0
   916  00FFA7                     STR_32:
   917                           
   918                           ; BSR set to: 0
   919  00FFA7  6D                 	db	109	;'m'
   920  00FFA8  6F                 	db	111	;'o'
   921  00FFA9  6E                 	db	110	;'n'
   922  00FFAA  74                 	db	116	;'t'
   923  00FFAB  68                 	db	104	;'h'
   924  00FFAC  00                 	db	0
   925  00FFAD                     STR_47:
   926                           
   927                           ; BSR set to: 0
   928  00FFAD  73                 	db	115	;'s'
   929  00FFAE  79                 	db	121	;'y'
   930  00FFAF  6E                 	db	110	;'n'
   931  00FFB0  63                 	db	99	;'c'
   932  00FFB1  00                 	db	0
   933  00FFB2                     STR_41:
   934                           
   935                           ; BSR set to: 0
   936  00FFB2  68                 	db	104	;'h'
   937  00FFB3  65                 	db	101	;'e'
   938  00FFB4  6C                 	db	108	;'l'
   939  00FFB5  70                 	db	112	;'p'
   940  00FFB6  00                 	db	0
   941  00FFB7                     STR_30:
   942                           
   943                           ; BSR set to: 0
   944  00FFB7  79                 	db	121	;'y'
   945  00FFB8  65                 	db	101	;'e'
   946  00FFB9  61                 	db	97	;'a'
   947  00FFBA  72                 	db	114	;'r'
   948  00FFBB  00                 	db	0
   949  00FFBC                     STR_36:
   950                           
   951                           ; BSR set to: 0
   952  00FFBC  68                 	db	104	;'h'
   953  00FFBD  6F                 	db	111	;'o'
   954  00FFBE  75                 	db	117	;'u'
   955  00FFBF  72                 	db	114	;'r'
   956  00FFC0  00                 	db	0
   957  00FFC1                     STR_1:
   958                           
   959                           ; BSR set to: 0
   960  00FFC1  25                 	db	37
   961  00FFC2  30                 	db	48	;'0'
   962  00FFC3  32                 	db	50	;'2'
   963  00FFC4  64                 	db	100	;'d'
   964  00FFC5  00                 	db	0
   965  00FFC6                     STR_49:
   966                           
   967                           ; BSR set to: 0
   968  00FFC6  41                 	db	65	;'A'
   969  00FFC7  44                 	db	68	;'D'
   970  00FFC8  43                 	db	67	;'C'
   971  00FFC9  00                 	db	0
   972  00FFCA                     STR_51:
   973                           
   974                           ; BSR set to: 0
   975  00FFCA  50                 	db	80	;'P'
   976  00FFCB  57                 	db	87	;'W'
   977  00FFCC  4D                 	db	77	;'M'
   978  00FFCD  00                 	db	0
   979  00FFCE                     STR_48:
   980                           
   981                           ; BSR set to: 0
   982  00FFCE  61                 	db	97	;'a'
   983  00FFCF  64                 	db	100	;'d'
   984  00FFD0  63                 	db	99	;'c'
   985  00FFD1  00                 	db	0
   986  00FFD2                     STR_50:
   987                           
   988                           ; BSR set to: 0
   989  00FFD2  70                 	db	112	;'p'
   990  00FFD3  77                 	db	119	;'w'
   991  00FFD4  6D                 	db	109	;'m'
   992  00FFD5  00                 	db	0
   993  00FFD6                     STR_46:
   994                           
   995                           ; BSR set to: 0
   996  00FFD6  73                 	db	115	;'s'
   997  00FFD7  65                 	db	101	;'e'
   998  00FFD8  74                 	db	116	;'t'
   999  00FFD9  00                 	db	0
  1000  00FFDA                     STR_19:
  1001                           
  1002                           ; BSR set to: 0
  1003  00FFDA  08                 	db	8
  1004  00FFDB  20                 	db	32
  1005  00FFDC  08                 	db	8
  1006  00FFDD  00                 	db	0
  1007  00FFDE                     STR_34:
  1008                           
  1009                           ; BSR set to: 0
  1010  00FFDE  64                 	db	100	;'d'
  1011  00FFDF  61                 	db	97	;'a'
  1012  00FFE0  79                 	db	121	;'y'
  1013  00FFE1  00                 	db	0
  1014  00FFE2                     STR_27:
  1015                           
  1016                           ; BSR set to: 0
  1017  00FFE2  61                 	db	97	;'a'
  1018  00FFE3  74                 	db	116	;'t'
  1019  00FFE4  00                 	db	0
  1020  00FFE5                     STR_42:
  1021                           
  1022                           ; BSR set to: 0
  1023  00FFE5  3F                 	db	63	;'?'
  1024  00FFE6  00                 	db	0
  1025  00FFE7                     STR_57:
  1026                           
  1027                           ; BSR set to: 0
  1028  00FFE7  42                 	db	66	;'B'
  1029  00FFE8  00                 	db	0
  1030  00FFE9                     STR_55:
  1031                           
  1032                           ; BSR set to: 0
  1033  00FFE9  47                 	db	71	;'G'
  1034  00FFEA  00                 	db	0
  1035  00FFEB                     STR_53:
  1036                           
  1037                           ; BSR set to: 0
  1038  00FFEB  52                 	db	82	;'R'
  1039  00FFEC  00                 	db	0
  1040  00FFED                     STR_59:
  1041                           
  1042                           ; BSR set to: 0
  1043  00FFED  57                 	db	87	;'W'
  1044  00FFEE  00                 	db	0
  1045  00FFEF                     STR_56:
  1046                           
  1047                           ; BSR set to: 0
  1048  00FFEF  62                 	db	98	;'b'
  1049  00FFF0  00                 	db	0
  1050  00FFF1                     STR_54:
  1051                           
  1052                           ; BSR set to: 0
  1053  00FFF1  67                 	db	103	;'g'
  1054  00FFF2  00                 	db	0
  1055  00FFF3                     STR_58:
  1056                           
  1057                           ; BSR set to: 0
  1058  00FFF3  77                 	db	119	;'w'
  1059  00FFF4  00                 	db	0
  1060  00FFF5                     STR_39:
  1061                           
  1062                           ; BSR set to: 0
  1063  00FFF5  73                 	db	115	;'s'
  1064  00FFF6  00                 	db	0
  1065  00FFF7                     
  1066                           ; BSR set to: 0
  1067  00FFF7  28                 	db	40
  1068  00FFF8  00                 	db	0
  1069  00FFF9                     STR_9:
  1070                           
  1071                           ; BSR set to: 0
  1072  00FFF9  2D                 	db	45
  1073  00FFFA  00                 	db	0
  1074  00FFFB                     STR_4:
  1075                           
  1076                           ; BSR set to: 0
  1077  00FFFB  2F                 	db	47
  1078  00FFFC  00                 	db	0
  1079  00FFFD                     STR_7:
  1080                           
  1081                           ; BSR set to: 0
  1082  00FFFD  3A                 	db	58	;':'
  1083  00FFFE  00                 	db	0
  1084  0000                     
  1085                           ; #config settings
  1086  00FFFF  00                 	db	0	; dummy byte at the end
  1087  0000                     
  1088                           	psect	cinit
  1089  013C36                     __pcinit:
  1090                           	opt stack 0
  1091  013C36                     start_initialization:
  1092                           	opt stack 0
  1093  013C36                     __initialization:
  1094                           	opt stack 0
  1095                           
  1096                           ; Clear objects allocated to BIGRAMl (1000 bytes)
  1097  013C36  EE04  F069         	lfsr	0,__pbssBIGRAMl
  1098  013C3A  EE13 F0E8          	lfsr	1,1000
  1099  013C3E                     clear_0:
  1100  013C3E  6AEE               	clrf	postinc0,c
  1101  013C40  50E5               	movf	postdec1,w,c
  1102  013C42  50E1               	movf	fsr1l,w,c
  1103  013C44  E1FC               	bnz	clear_0
  1104  013C46  50E2               	movf	fsr1h,w,c
  1105  013C48  E1FA               	bnz	clear_0
  1106                           
  1107                           ; Clear objects allocated to BANK3 (250 bytes)
  1108  013C4A  EE03  F000         	lfsr	0,__pbssBANK3
  1109  013C4E  0EFA               	movlw	250
  1110  013C50                     clear_1:
  1111  013C50  6AEE               	clrf	postinc0,c
  1112  013C52  06E8               	decf	wreg,f,c
  1113  013C54  E1FD               	bnz	clear_1
  1114                           
  1115                           ; Clear objects allocated to BANK2 (178 bytes)
  1116  013C56  EE02  F000         	lfsr	0,__pbssBANK2
  1117  013C5A  0EB2               	movlw	178
  1118  013C5C                     clear_2:
  1119  013C5C  6AEE               	clrf	postinc0,c
  1120  013C5E  06E8               	decf	wreg,f,c
  1121  013C60  E1FD               	bnz	clear_2
  1122                           
  1123                           ; Clear objects allocated to BANK1 (147 bytes)
  1124  013C62  EE01  F000         	lfsr	0,__pbssBANK1
  1125  013C66  0E93               	movlw	147
  1126  013C68                     clear_3:
  1127  013C68  6AEE               	clrf	postinc0,c
  1128  013C6A  06E8               	decf	wreg,f,c
  1129  013C6C  E1FD               	bnz	clear_3
  1130                           
  1131                           ; Clear objects allocated to BANK0 (42 bytes)
  1132  013C6E  EE00  F0D5         	lfsr	0,__pbssBANK0
  1133  013C72  0E2A               	movlw	42
  1134  013C74                     clear_4:
  1135  013C74  6AEE               	clrf	postinc0,c
  1136  013C76  06E8               	decf	wreg,f,c
  1137  013C78  E1FD               	bnz	clear_4
  1138                           
  1139                           ; Clear objects allocated to COMRAM (45 bytes)
  1140  013C7A  EE00  F001         	lfsr	0,__pbssCOMRAM
  1141  013C7E  0E2D               	movlw	45
  1142  013C80                     clear_5:
  1143  013C80  6AEE               	clrf	postinc0,c
  1144  013C82  06E8               	decf	wreg,f,c
  1145  013C84  E1FD               	bnz	clear_5
  1146                           
  1147                           ; Initialize objects allocated to BANK1 (2 bytes)
  1148                           ; load TBLPTR registers with __pidataBANK1
  1149  013C86  0E04               	movlw	low __pidataBANK1
  1150  013C88  6EF6               	movwf	tblptrl,c
  1151  013C8A  0E10               	movlw	high __pidataBANK1
  1152  013C8C  6EF7               	movwf	tblptrh,c
  1153  013C8E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1154  013C90  6EF8               	movwf	tblptru,c
  1155  013C92  0009               	tblrd		*+	;fetch initializer
  1156  013C94  CFF5 F197          	movff	tablat,__pdataBANK1
  1157  013C98  0009               	tblrd		*+	;fetch initializer
  1158  013C9A  CFF5 F198          	movff	tablat,__pdataBANK1+1
  1159                           
  1160                           ; Initialize objects allocated to BANK0 (1 bytes)
  1161                           ; load TBLPTR registers with __pidataBANK0
  1162  013C9E  0EBC               	movlw	low __pidataBANK0
  1163  013CA0  6EF6               	movwf	tblptrl,c
  1164  013CA2  0E46               	movlw	high __pidataBANK0
  1165  013CA4  6EF7               	movwf	tblptrh,c
  1166  013CA6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1167  013CA8  6EF8               	movwf	tblptru,c
  1168  013CAA  0009               	tblrd		*+	;fetch initializer
  1169  013CAC  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1170  013CB0                     end_of_initialization:
  1171                           	opt stack 0
  1172  013CB0                     __end_of__initialization:
  1173                           	opt stack 0
  1174  013CB0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1175  013CB2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1176  013CB4  0100               	movlb	0
  1177  013CB6  EF4D  F0A1         	goto	_main	;jump to C main() function
  1178                           tblptru	equ	0xFF8
  1179                           tblptrh	equ	0xFF7
  1180                           tblptrl	equ	0xFF6
  1181                           tablat	equ	0xFF5
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec1	equ	0xFE5
  1185                           fsr1h	equ	0xFE2
  1186                           fsr1l	equ	0xFE1
  1187                           
  1188                           	psect	bssCOMRAM
  1189  000001                     __pbssCOMRAM:
  1190                           	opt stack 0
  1191  000001                     _outPipes:
  1192                           	opt stack 0
  1193  000001                     	ds	9
  1194  00000A                     _inPipes:
  1195                           	opt stack 0
  1196  00000A                     	ds	6
  1197  000010                     _pBDTEntryIn:
  1198                           	opt stack 0
  1199  000010                     	ds	6
  1200  000016                     _ep_data_in:
  1201                           	opt stack 0
  1202  000016                     	ds	3
  1203  000019                     _pBDTEntryEP0OutCurrent:
  1204                           	opt stack 0
  1205  000019                     	ds	2
  1206  00001B                     _pBDTEntryEP0OutNext:
  1207                           	opt stack 0
  1208  00001B                     	ds	2
  1209  00001D                     _BothEP0OutUOWNsSet:
  1210                           	opt stack 0
  1211  00001D                     	ds	1
  1212  00001E                     _RemoteWakeup:
  1213                           	opt stack 0
  1214  00001E                     	ds	1
  1215  00001F                     _USBDeferINDataStagePackets:
  1216                           	opt stack 0
  1217  00001F                     	ds	1
  1218  000020                     _USBDeferOUTDataStagePackets:
  1219                           	opt stack 0
  1220  000020                     	ds	1
  1221  000021                     _USBDeferStatusStagePacket:
  1222                           	opt stack 0
  1223  000021                     	ds	1
  1224  000022                     _USBDeviceState:
  1225                           	opt stack 0
  1226  000022                     	ds	1
  1227  000023                     _USBStatusStageEnabledFlag1:
  1228                           	opt stack 0
  1229  000023                     	ds	1
  1230  000024                     _USBStatusStageEnabledFlag2:
  1231                           	opt stack 0
  1232  000024                     	ds	1
  1233  000025                     _USBStatusStageTimeoutCounter:
  1234                           	opt stack 0
  1235  000025                     	ds	1
  1236  000026                     _cdc_trf_state:
  1237                           	opt stack 0
  1238  000026                     	ds	1
  1239  000027                     _controlTransferState:
  1240                           	opt stack 0
  1241  000027                     	ds	1
  1242  000028                     _endpoint_number:
  1243                           	opt stack 0
  1244  000028                     	ds	1
  1245  000029                     _shortPacketStatus:
  1246                           	opt stack 0
  1247  000029                     	ds	1
  1248  00002A                     _USBAlternateInterface:
  1249                           	opt stack 0
  1250  00002A                     	ds	2
  1251  00002C                     _USBActiveConfiguration:
  1252                           	opt stack 0
  1253  00002C                     	ds	1
  1254  00002D                     _USTATcopy:
  1255                           	opt stack 0
  1256  00002D                     	ds	1
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           postinc0	equ	0xFEE
  1262                           wreg	equ	0xFE8
  1263                           postdec1	equ	0xFE5
  1264                           fsr1h	equ	0xFE2
  1265                           fsr1l	equ	0xFE1
  1266                           
  1267                           	psect	bssBANK0
  1268  0000D5                     __pbssBANK0:
  1269                           	opt stack 0
  1270  0000D5                     _pBDTEntryOut:
  1271                           	opt stack 0
  1272  0000D5                     	ds	6
  1273  0000DB                     _ep_data_out:
  1274                           	opt stack 0
  1275  0000DB                     	ds	3
  1276  0000DE                     _pCDCDst:
  1277                           	opt stack 0
  1278  0000DE                     	ds	3
  1279  0000E1                     _pCDCSrc:
  1280                           	opt stack 0
  1281  0000E1                     	ds	3
  1282  0000E4                     _CDCDataInHandle:
  1283                           	opt stack 0
  1284  0000E4                     	ds	2
  1285  0000E6                     _CDCDataOutHandle:
  1286                           	opt stack 0
  1287  0000E6                     	ds	2
  1288  0000E8                     _pDst:
  1289                           	opt stack 0
  1290  0000E8                     	ds	2
  1291  0000EA                     RTCC_task@prev_halfsec:
  1292                           	opt stack 0
  1293  0000EA                     	ds	1
  1294  0000EB                     _ADC_flag:
  1295                           	opt stack 0
  1296  0000EB                     	ds	1
  1297  0000EC                     _USBBusIsSuspended:
  1298                           	opt stack 0
  1299  0000EC                     	ds	1
  1300  0000ED                     _cdc_mem_type:
  1301                           	opt stack 0
  1302  0000ED                     	ds	1
  1303  0000EE                     _cdc_rx_len:
  1304                           	opt stack 0
  1305  0000EE                     	ds	1
  1306  0000EF                     _cdc_tx_len:
  1307                           	opt stack 0
  1308  0000EF                     	ds	1
  1309  0000F0                     _control_signal_bitmap:
  1310                           	opt stack 0
  1311  0000F0                     	ds	1
  1312  0000F1                     _light_mode:
  1313                           	opt stack 0
  1314  0000F1                     	ds	1
  1315  0000F2                     _time_change_flag:
  1316                           	opt stack 0
  1317  0000F2                     	ds	1
  1318  0000F3                     epoch_to_caltime@year_cache:
  1319                           	opt stack 0
  1320  0000F3                     	ds	1
  1321  0000F4                     terminal_task@command_init:
  1322                           	opt stack 0
  1323  0000F4                     	ds	1
  1324  0000F5                     terminal_task@command:
  1325                           	opt stack 0
  1326  0000F5                     	ds	8
  1327  0000FD                     light_task@_5760:
  1328                           	opt stack 0
  1329  0000FD                     	ds	1
  1330  0000FE                     light_task@n:
  1331                           	opt stack 0
  1332  0000FE                     	ds	1
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           postdec1	equ	0xFE5
  1340                           fsr1h	equ	0xFE2
  1341                           fsr1l	equ	0xFE1
  1342                           
  1343                           	psect	dataBANK0
  1344  0000FF                     __pdataBANK0:
  1345                           	opt stack 0
  1346  0000FF                     epoch_to_caltime@month_cache:
  1347                           	opt stack 0
  1348  0000FF                     	ds	1
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           postdec1	equ	0xFE5
  1356                           fsr1h	equ	0xFE2
  1357                           fsr1l	equ	0xFE1
  1358                           
  1359                           	psect	bssBANK1
  1360  000100                     __pbssBANK1:
  1361                           	opt stack 0
  1362  000100                     _cdc_notice:
  1363                           	opt stack 0
  1364  000100                     	ds	10
  1365  00010A                     _BaudRateGen:
  1366                           	opt stack 0
  1367  00010A                     	ds	4
  1368  00010E                     _ms:
  1369                           	opt stack 0
  1370  00010E                     	ds	4
  1371  000112                     USBCBSendResume@delay_count:
  1372                           	opt stack 0
  1373  000112                     	ds	2
  1374  000114                     epoch_to_caltime@day_cache:
  1375                           	opt stack 0
  1376  000114                     	ds	2
  1377  000116                     millis_timer@cnt:
  1378                           	opt stack 0
  1379  000116                     	ds	2
  1380  000118                     terminal_task@op0:
  1381                           	opt stack 0
  1382  000118                     	ds	25
  1383  000131                     terminal_task@op1:
  1384                           	opt stack 0
  1385  000131                     	ds	25
  1386  00014A                     _now:
  1387                           	opt stack 0
  1388  00014A                     	ds	14
  1389  000158                     _dummy_encapsulated_cmd_response:
  1390                           	opt stack 0
  1391  000158                     	ds	8
  1392  000160                     _uart_rx:
  1393                           	opt stack 0
  1394  000160                     	ds	8
  1395  000168                     _uart_tx:
  1396                           	opt stack 0
  1397  000168                     	ds	8
  1398  000170                     _usb_rx:
  1399                           	opt stack 0
  1400  000170                     	ds	8
  1401  000178                     _usb_tx:
  1402                           	opt stack 0
  1403  000178                     	ds	8
  1404  000180                     _line_coding:
  1405                           	opt stack 0
  1406  000180                     	ds	7
  1407  000187                     _sw_B:
  1408                           	opt stack 0
  1409  000187                     	ds	4
  1410  00018B                     _sw_G:
  1411                           	opt stack 0
  1412  00018B                     	ds	4
  1413  00018F                     _sw_R:
  1414                           	opt stack 0
  1415  00018F                     	ds	4
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec1	equ	0xFE5
  1423                           fsr1h	equ	0xFE2
  1424                           fsr1l	equ	0xFE1
  1425                           
  1426                           	psect	dataBANK1
  1427  000197                     __pdataBANK1:
  1428                           	opt stack 0
  1429  000197                     I2C_LCD_SetCursor@F8620:
  1430                           	opt stack 0
  1431  000197                     	ds	2
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           postinc0	equ	0xFEE
  1437                           wreg	equ	0xFE8
  1438                           postdec1	equ	0xFE5
  1439                           fsr1h	equ	0xFE2
  1440                           fsr1l	equ	0xFE1
  1441                           
  1442                           	psect	bssBANK2
  1443  000200                     __pbssBANK2:
  1444                           	opt stack 0
  1445  000200                     _cdc_data_rx:
  1446                           	opt stack 0
  1447  000200                     	ds	64
  1448  000240                     _cdc_data_tx:
  1449                           	opt stack 0
  1450  000240                     	ds	64
  1451  000280                     terminal_task@op2:
  1452                           	opt stack 0
  1453  000280                     	ds	25
  1454  000299                     terminal_task@op3:
  1455                           	opt stack 0
  1456  000299                     	ds	25
  1457                           tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           
  1467                           	psect	bssBANK3
  1468  000300                     __pbssBANK3:
  1469                           	opt stack 0
  1470  000300                     main_init@rxbuf:
  1471                           	opt stack 0
  1472  000300                     	ds	250
  1473                           tblptru	equ	0xFF8
  1474                           tblptrh	equ	0xFF7
  1475                           tblptrl	equ	0xFF6
  1476                           tablat	equ	0xFF5
  1477                           postinc0	equ	0xFEE
  1478                           wreg	equ	0xFE8
  1479                           postdec1	equ	0xFE5
  1480                           fsr1h	equ	0xFE2
  1481                           fsr1l	equ	0xFE1
  1482                           
  1483                           	psect	bssBIGRAMl
  1484  000469                     __pbssBIGRAMl:
  1485                           	opt stack 0
  1486  000469                     main_init@txbuf:
  1487                           	opt stack 0
  1488  000469                     	ds	1000
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1h	equ	0xFE2
  1497                           fsr1l	equ	0xFE1
  1498                           
  1499                           	psect	cstackBANK4
  1500  000400                     __pcstackBANK4:
  1501                           	opt stack 0
  1502  000400                     terminal_task@buf:
  1503                           	opt stack 0
  1504                           
  1505                           ; 100 bytes @ 0x0
  1506  000400                     	ds	100
  1507  000464                     _terminal_task$6608:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x64
  1511  000464                     	ds	2
  1512  000466                     terminal_task@i_4309:
  1513                           	opt stack 0
  1514                           
  1515                           ; 1 bytes @ 0x66
  1516  000466                     	ds	1
  1517  000467                     terminal_task@ascii:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x67
  1521  000467                     	ds	1
  1522  000468                     terminal_task@i:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x68
  1526  000468                     	ds	1
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1h	equ	0xFE2
  1535                           fsr1l	equ	0xFE1
  1536                           
  1537                           	psect	cstackBANK1
  1538  000193                     __pcstackBANK1:
  1539                           	opt stack 0
  1540  000193                     terminal_task@tx:
  1541                           	opt stack 0
  1542                           
  1543                           ; 2 bytes @ 0x0
  1544  000193                     	ds	2
  1545  000195                     terminal_task@rx:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x2
  1549  000195                     	ds	2
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           postdec1	equ	0xFE5
  1557                           fsr1h	equ	0xFE2
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	cstackBANK0
  1561  000060                     __pcstackBANK0:
  1562                           	opt stack 0
  1563  000060                     ??_isdigit:
  1564  000060                     ??_timer0_init:
  1565  000060                     ??_timer3_init:
  1566  000060                     ??_x_to_d:
  1567  000060                     ?_strcmp:
  1568                           	opt stack 0
  1569  000060                     ?_USBTransferOnePacket:
  1570                           	opt stack 0
  1571  000060                     ?_ringbuf_num:
  1572                           	opt stack 0
  1573  000060                     ?___wmul:
  1574                           	opt stack 0
  1575  000060                     ?___awmod:
  1576                           	opt stack 0
  1577  000060                     ?___lldiv:
  1578                           	opt stack 0
  1579  000060                     ?___llmod:
  1580                           	opt stack 0
  1581  000060                     USBTransferOnePacket@dir:
  1582                           	opt stack 0
  1583  000060                     timer1_init@clock_select:
  1584                           	opt stack 0
  1585  000060                     ADC_init@p_ref:
  1586                           	opt stack 0
  1587  000060                     _is_usb_available$4884:
  1588                           	opt stack 0
  1589  000060                     PWM_init@PR:
  1590                           	opt stack 0
  1591  000060                     putUSBUSART@data:
  1592                           	opt stack 0
  1593  000060                     ringbuf_init@rb:
  1594                           	opt stack 0
  1595  000060                     ringbuf_num@rb:
  1596                           	opt stack 0
  1597  000060                     ringbuf_delete@rb:
  1598                           	opt stack 0
  1599  000060                     ___wmul@multiplier:
  1600                           	opt stack 0
  1601  000060                     ___awmod@dividend:
  1602                           	opt stack 0
  1603  000060                     memset@p1:
  1604                           	opt stack 0
  1605  000060                     strcmp@s1:
  1606                           	opt stack 0
  1607  000060                     ___lldiv@dividend:
  1608                           	opt stack 0
  1609  000060                     ___llmod@dividend:
  1610                           	opt stack 0
  1611                           
  1612                           ; 4 bytes @ 0x0
  1613  000060                     	ds	1
  1614  000061                     ??_timer1_init:
  1615  000061                     timer0_init@prescaler:
  1616                           	opt stack 0
  1617  000061                     timer3_init@prescaler:
  1618                           	opt stack 0
  1619  000061                     x_to_d@hex:
  1620                           	opt stack 0
  1621  000061                     _isdigit$6052:
  1622                           	opt stack 0
  1623  000061                     USBTransferOnePacket@data:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x1
  1627  000061                     	ds	1
  1628  000062                     ??_ringbuf_num:
  1629  000062                     putUSBUSART@length:
  1630                           	opt stack 0
  1631  000062                     timer1_init@prescaler:
  1632                           	opt stack 0
  1633  000062                     isdigit@c:
  1634                           	opt stack 0
  1635  000062                     ringbuf_init@internal_buf:
  1636                           	opt stack 0
  1637  000062                     RTCC_to_caltime@tm:
  1638                           	opt stack 0
  1639  000062                     ___wmul@multiplicand:
  1640                           	opt stack 0
  1641  000062                     ___awmod@divisor:
  1642                           	opt stack 0
  1643  000062                     memset@c:
  1644                           	opt stack 0
  1645  000062                     strcmp@s2:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x2
  1649  000062                     	ds	1
  1650  000063                     USBTransferOnePacket@len:
  1651                           	opt stack 0
  1652                           
  1653                           ; 1 bytes @ 0x3
  1654  000063                     	ds	1
  1655  000064                     ??_strcmp:
  1656  000064                     USBTransferOnePacket@ep:
  1657                           	opt stack 0
  1658  000064                     RTCC_to_caltime@dumy:
  1659                           	opt stack 0
  1660  000064                     ___awmod@counter:
  1661                           	opt stack 0
  1662  000064                     ringbuf_init@bufsize:
  1663                           	opt stack 0
  1664  000064                     ___wmul@product:
  1665                           	opt stack 0
  1666  000064                     memset@n:
  1667                           	opt stack 0
  1668  000064                     ___lldiv@divisor:
  1669                           	opt stack 0
  1670  000064                     ___llmod@divisor:
  1671                           	opt stack 0
  1672                           
  1673                           ; 4 bytes @ 0x4
  1674  000064                     	ds	1
  1675  000065                     ___awmod@sign:
  1676                           	opt stack 0
  1677  000065                     strcmp@r:
  1678                           	opt stack 0
  1679  000065                     USBTransferOnePacket@handle:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x5
  1683  000065                     	ds	1
  1684  000066                     ?_atoi:
  1685                           	opt stack 0
  1686  000066                     ?___lwdiv:
  1687                           	opt stack 0
  1688  000066                     month_length@month:
  1689                           	opt stack 0
  1690  000066                     atoi@s:
  1691                           	opt stack 0
  1692  000066                     ___lwdiv@dividend:
  1693                           	opt stack 0
  1694  000066                     memset@p:
  1695                           	opt stack 0
  1696                           
  1697                           ; 2 bytes @ 0x6
  1698  000066                     	ds	1
  1699  000067                     ??_CDCTxService:
  1700  000067                     ??_month_length:
  1701  000067                     getsUSBUSART@buffer:
  1702                           	opt stack 0
  1703                           
  1704                           ; 2 bytes @ 0x7
  1705  000067                     	ds	1
  1706  000068                     ??_atoi:
  1707  000068                     USBDeviceInit@i:
  1708                           	opt stack 0
  1709  000068                     ___llmod@counter:
  1710                           	opt stack 0
  1711  000068                     _CDCTxService$2005:
  1712                           	opt stack 0
  1713  000068                     ringbuf_put@rb:
  1714                           	opt stack 0
  1715  000068                     ringbuf_pop@rb:
  1716                           	opt stack 0
  1717  000068                     ringbuf_backspace@rb:
  1718                           	opt stack 0
  1719  000068                     ___lwdiv@divisor:
  1720                           	opt stack 0
  1721  000068                     ___lldiv@quotient:
  1722                           	opt stack 0
  1723                           
  1724                           ; 4 bytes @ 0x8
  1725  000068                     	ds	1
  1726  000069                     getsUSBUSART@len:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x9
  1730  000069                     	ds	1
  1731  00006A                     ??_getsUSBUSART:
  1732  00006A                     ??_ringbuf_pop:
  1733  00006A                     ??_ringbuf_backspace:
  1734  00006A                     CDCTxService@i:
  1735                           	opt stack 0
  1736  00006A                     ringbuf_put@asciicode:
  1737                           	opt stack 0
  1738  00006A                     atoi@sign:
  1739                           	opt stack 0
  1740  00006A                     ___lwdiv@counter:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0xA
  1744  00006A                     	ds	1
  1745  00006B                     ??_ringbuf_put:
  1746  00006B                     CDCTxService@byte_to_send:
  1747                           	opt stack 0
  1748  00006B                     month_length@year:
  1749                           	opt stack 0
  1750  00006B                     _getsUSBUSART$1957:
  1751                           	opt stack 0
  1752  00006B                     atoi@a:
  1753                           	opt stack 0
  1754  00006B                     ___lwdiv@quotient:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0xB
  1758  00006B                     	ds	1
  1759  00006C                     ___lldiv@counter:
  1760                           	opt stack 0
  1761  00006C                     put_string_usb@s:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0xC
  1765  00006C                     	ds	1
  1766  00006D                     ?_get_string_usb:
  1767                           	opt stack 0
  1768  00006D                     ?___awdiv:
  1769                           	opt stack 0
  1770  00006D                     ?___lwmod:
  1771                           	opt stack 0
  1772  00006D                     ?___lmul:
  1773                           	opt stack 0
  1774  00006D                     get_string_usb@s:
  1775                           	opt stack 0
  1776  00006D                     ___awdiv@dividend:
  1777                           	opt stack 0
  1778  00006D                     ___lwmod@dividend:
  1779                           	opt stack 0
  1780  00006D                     ___lmul@multiplier:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0xD
  1784  00006D                     	ds	1
  1785  00006E                     ringbuf_pop@ret:
  1786                           	opt stack 0
  1787  00006E                     put_string_usb@len:
  1788                           	opt stack 0
  1789                           
  1790                           ; 2 bytes @ 0xE
  1791  00006E                     	ds	1
  1792  00006F                     ringbuf_put_str@rb:
  1793                           	opt stack 0
  1794  00006F                     get_string_usb@len:
  1795                           	opt stack 0
  1796  00006F                     ___awdiv@divisor:
  1797                           	opt stack 0
  1798  00006F                     ___lwmod@divisor:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0xF
  1802  00006F                     	ds	1
  1803  000070                     
  1804                           ; 0 bytes @ 0x10
  1805  000070                     	ds	1
  1806  000071                     ??_get_string_usb:
  1807  000071                     ___awdiv@counter:
  1808                           	opt stack 0
  1809  000071                     ___lwmod@counter:
  1810                           	opt stack 0
  1811  000071                     ringbuf_put_str@str:
  1812                           	opt stack 0
  1813  000071                     ___lmul@multiplicand:
  1814                           	opt stack 0
  1815                           
  1816                           ; 4 bytes @ 0x11
  1817  000071                     	ds	1
  1818  000072                     ?_sprintf:
  1819                           	opt stack 0
  1820  000072                     ___awdiv@sign:
  1821                           	opt stack 0
  1822  000072                     ringbuf_put_num@rb:
  1823                           	opt stack 0
  1824  000072                     get_string_usb@rx_len:
  1825                           	opt stack 0
  1826  000072                     sprintf@sp:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x12
  1830  000072                     	ds	1
  1831  000073                     ___awdiv@quotient:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0x13
  1835  000073                     	ds	1
  1836  000074                     ringbuf_put_num@value:
  1837                           	opt stack 0
  1838  000074                     USB_task@rx_len:
  1839                           	opt stack 0
  1840  000074                     sprintf@f:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x14
  1844  000074                     	ds	1
  1845  000075                     d_to_x@dec:
  1846                           	opt stack 0
  1847  000075                     PWM_set@value:
  1848                           	opt stack 0
  1849  000075                     ___lmul@product:
  1850                           	opt stack 0
  1851                           
  1852                           ; 4 bytes @ 0x15
  1853  000075                     	ds	1
  1854  000076                     ringbuf_put_num@digits:
  1855                           	opt stack 0
  1856  000076                     USB_task@data:
  1857                           	opt stack 0
  1858  000076                     caltime_to_RTCC@tm:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x16
  1862  000076                     	ds	1
  1863  000077                     ??_PWM_set:
  1864  000077                     ringbuf_put_num@i:
  1865                           	opt stack 0
  1866                           
  1867                           ; 1 bytes @ 0x17
  1868  000077                     	ds	1
  1869  000078                     ringbuf_put_num@temp:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x18
  1873  000078                     	ds	1
  1874  000079                     ?_get_quot_rem:
  1875                           	opt stack 0
  1876  000079                     PWM_set@color:
  1877                           	opt stack 0
  1878  000079                     get_quot_rem@quot:
  1879                           	opt stack 0
  1880  000079                     caltime_to_epoch@tm:
  1881                           	opt stack 0
  1882                           
  1883                           ; 2 bytes @ 0x19
  1884  000079                     	ds	2
  1885  00007B                     ??_caltime_to_epoch:
  1886  00007B                     get_quot_rem@div:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x1B
  1890  00007B                     	ds	2
  1891  00007D                     get_quot_rem@num:
  1892                           	opt stack 0
  1893                           
  1894                           ; 4 bytes @ 0x1D
  1895  00007D                     	ds	2
  1896  00007F                     caltime_to_epoch@year:
  1897                           	opt stack 0
  1898                           
  1899                           ; 1 bytes @ 0x1F
  1900  00007F                     	ds	1
  1901  000080                     caltime_to_epoch@month_3467:
  1902                           	opt stack 0
  1903                           
  1904                           ; 1 bytes @ 0x20
  1905  000080                     	ds	1
  1906  000081                     epoch_to_caltime@tm:
  1907                           	opt stack 0
  1908  000081                     caltime_to_epoch@epoch:
  1909                           	opt stack 0
  1910                           
  1911                           ; 4 bytes @ 0x21
  1912  000081                     	ds	2
  1913  000083                     ??_epoch_to_caltime:
  1914                           
  1915                           ; 0 bytes @ 0x23
  1916  000083                     	ds	1
  1917  000084                     ??_sprintf:
  1918                           
  1919                           ; 0 bytes @ 0x24
  1920  000084                     	ds	1
  1921  000085                     caltime_to_epoch@month:
  1922                           	opt stack 0
  1923  000085                     epoch_to_caltime@day_since_epoch:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x25
  1927  000085                     	ds	1
  1928  000086                     RTCC_from_RTCC@tm:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x26
  1932  000086                     	ds	1
  1933  000087                     epoch_to_caltime@day:
  1934                           	opt stack 0
  1935                           
  1936                           ; 2 bytes @ 0x27
  1937  000087                     	ds	1
  1938  000088                     ??_light_task:
  1939  000088                     sprintf@prec:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0x28
  1943  000088                     	ds	1
  1944  000089                     epoch_to_caltime@year:
  1945                           	opt stack 0
  1946  000089                     sprintf@ap:
  1947                           	opt stack 0
  1948                           
  1949                           ; 2 bytes @ 0x29
  1950  000089                     	ds	1
  1951  00008A                     epoch_to_caltime@month:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x2A
  1955  00008A                     	ds	1
  1956  00008B                     sprintf@cp:
  1957                           	opt stack 0
  1958  00008B                     epoch_to_caltime@num:
  1959                           	opt stack 0
  1960                           
  1961                           ; 4 bytes @ 0x2B
  1962  00008B                     	ds	1
  1963  00008C                     light_task@value:
  1964                           	opt stack 0
  1965                           
  1966                           ; 1 bytes @ 0x2C
  1967  00008C                     	ds	1
  1968  00008D                     light_task@value_5761:
  1969                           	opt stack 0
  1970  00008D                     sprintf@val:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x2D
  1974  00008D                     	ds	1
  1975  00008E                     light_task@temp:
  1976                           	opt stack 0
  1977                           
  1978                           ; 4 bytes @ 0x2E
  1979  00008E                     	ds	1
  1980  00008F                     RTCC_from_caltime@tm:
  1981                           	opt stack 0
  1982  00008F                     RTCC_from_epoch@tm:
  1983                           	opt stack 0
  1984  00008F                     sprintf@len:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0x2F
  1988  00008F                     	ds	2
  1989  000091                     sprintf@flag:
  1990                           	opt stack 0
  1991                           
  1992                           ; 1 bytes @ 0x31
  1993  000091                     	ds	1
  1994  000092                     light_task@i:
  1995                           	opt stack 0
  1996  000092                     sprintf@c:
  1997                           	opt stack 0
  1998                           
  1999                           ; 1 bytes @ 0x32
  2000  000092                     	ds	1
  2001  000093                     sprintf@width:
  2002                           	opt stack 0
  2003                           
  2004                           ; 2 bytes @ 0x33
  2005  000093                     	ds	2
  2006  000095                     print_time@tx:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0x35
  2010  000095                     	ds	2
  2011  000097                     print_time@str:
  2012                           	opt stack 0
  2013                           
  2014                           ; 30 bytes @ 0x37
  2015  000097                     	ds	30
  2016  0000B5                     terminal_at_hand@tx:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x55
  2020  0000B5                     	ds	2
  2021  0000B7                     terminal_at_hand@hand:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x57
  2025  0000B7                     	ds	2
  2026  0000B9                     terminal_at_hand@min:
  2027                           	opt stack 0
  2028                           
  2029                           ; 1 bytes @ 0x59
  2030  0000B9                     	ds	1
  2031  0000BA                     terminal_at_hand@max:
  2032                           	opt stack 0
  2033                           
  2034                           ; 1 bytes @ 0x5A
  2035  0000BA                     	ds	1
  2036  0000BB                     terminal_at_hand@value:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x5B
  2040  0000BB                     	ds	1
  2041  0000BC                     terminal_time@tx:
  2042                           	opt stack 0
  2043                           
  2044                           ; 2 bytes @ 0x5C
  2045  0000BC                     	ds	2
  2046  0000BE                     terminal_time@op0:
  2047                           	opt stack 0
  2048                           
  2049                           ; 2 bytes @ 0x5E
  2050  0000BE                     	ds	2
  2051  0000C0                     terminal_time@op1:
  2052                           	opt stack 0
  2053                           
  2054                           ; 2 bytes @ 0x60
  2055  0000C0                     	ds	2
  2056  0000C2                     terminal_time@op2:
  2057                           	opt stack 0
  2058                           
  2059                           ; 2 bytes @ 0x62
  2060  0000C2                     	ds	2
  2061  0000C4                     _terminal_time$6609:
  2062                           	opt stack 0
  2063                           
  2064                           ; 1 bytes @ 0x64
  2065  0000C4                     	ds	1
  2066  0000C5                     terminal_operation@tx:
  2067                           	opt stack 0
  2068                           
  2069                           ; 2 bytes @ 0x65
  2070  0000C5                     	ds	2
  2071  0000C7                     terminal_operation@op0:
  2072                           	opt stack 0
  2073                           
  2074                           ; 2 bytes @ 0x67
  2075  0000C7                     	ds	2
  2076  0000C9                     terminal_operation@op1:
  2077                           	opt stack 0
  2078                           
  2079                           ; 2 bytes @ 0x69
  2080  0000C9                     	ds	2
  2081  0000CB                     terminal_operation@op2:
  2082                           	opt stack 0
  2083                           
  2084                           ; 2 bytes @ 0x6B
  2085  0000CB                     	ds	2
  2086  0000CD                     terminal_operation@op3:
  2087                           	opt stack 0
  2088                           
  2089                           ; 2 bytes @ 0x6D
  2090  0000CD                     	ds	2
  2091  0000CF                     _terminal_operation$6610:
  2092                           	opt stack 0
  2093                           
  2094                           ; 2 bytes @ 0x6F
  2095  0000CF                     	ds	2
  2096  0000D1                     _terminal_operation$6611:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x71
  2100  0000D1                     	ds	2
  2101  0000D3                     ??_terminal_task:
  2102                           
  2103                           ; 0 bytes @ 0x73
  2104  0000D3                     	ds	2
  2105  0000D5                     tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1h	equ	0xFE2
  2113                           fsr1l	equ	0xFE1
  2114                           
  2115                           ; 0 bytes @ 0x75
  2116                           
  2117                           	psect	cstackCOMRAM
  2118  00002E                     __pcstackCOMRAM:
  2119                           	opt stack 0
  2120  00002E                     ??_USBStdGetDscHandler:
  2121  00002E                     ??_USBStdGetStatusHandler:
  2122  00002E                     ?i2_USBTransferOnePacket:
  2123                           	opt stack 0
  2124  00002E                     USBConfigureEndpoint@direction:
  2125                           	opt stack 0
  2126  00002E                     USBCtrlTrfTxService@byteToSend:
  2127                           	opt stack 0
  2128  00002E                     USBCtrlTrfRxService@i:
  2129                           	opt stack 0
  2130  00002E                     i2USBTransferOnePacket@dir:
  2131                           	opt stack 0
  2132  00002E                     button_timer_interrupt@bt:
  2133                           	opt stack 0
  2134  00002E                     i2memset@p1:
  2135                           	opt stack 0
  2136                           
  2137                           ; 2 bytes @ 0x0
  2138  00002E                     	ds	1
  2139  00002F                     ??_USBConfigureEndpoint:
  2140  00002F                     USBCtrlTrfRxService@byteToRead:
  2141                           	opt stack 0
  2142  00002F                     USBCtrlTrfInHandler@lastDTS:
  2143                           	opt stack 0
  2144  00002F                     USBStdGetStatusHandler@p:
  2145                           	opt stack 0
  2146  00002F                     i2USBTransferOnePacket@data:
  2147                           	opt stack 0
  2148                           
  2149                           ; 2 bytes @ 0x1
  2150  00002F                     	ds	1
  2151  000030                     button_timer_interrupt@sw_value:
  2152                           	opt stack 0
  2153  000030                     i2memset@c:
  2154                           	opt stack 0
  2155                           
  2156                           ; 2 bytes @ 0x2
  2157  000030                     	ds	1
  2158  000031                     i2USBTransferOnePacket@len:
  2159                           	opt stack 0
  2160                           
  2161                           ; 1 bytes @ 0x3
  2162  000031                     	ds	1
  2163  000032                     i2USBTransferOnePacket@ep:
  2164                           	opt stack 0
  2165  000032                     i2memset@n:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0x4
  2169  000032                     	ds	1
  2170  000033                     USBConfigureEndpoint@EPNum:
  2171                           	opt stack 0
  2172  000033                     i2USBTransferOnePacket@handle:
  2173                           	opt stack 0
  2174                           
  2175                           ; 2 bytes @ 0x5
  2176  000033                     	ds	1
  2177  000034                     USBConfigureEndpoint@handle:
  2178                           	opt stack 0
  2179  000034                     i2memset@p:
  2180                           	opt stack 0
  2181                           
  2182                           ; 2 bytes @ 0x6
  2183  000034                     	ds	2
  2184  000036                     USBEnableEndpoint@options:
  2185                           	opt stack 0
  2186  000036                     i2USBDeviceInit@i:
  2187                           	opt stack 0
  2188                           
  2189                           ; 1 bytes @ 0x8
  2190  000036                     	ds	1
  2191  000037                     USBEnableEndpoint@p:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x9
  2195  000037                     	ds	2
  2196  000039                     USBEnableEndpoint@ep:
  2197                           	opt stack 0
  2198                           
  2199                           ; 1 bytes @ 0xB
  2200  000039                     	ds	1
  2201  00003A                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2202                           	opt stack 0
  2203                           
  2204                           ; 2 bytes @ 0xC
  2205  00003A                     	ds	2
  2206  00003C                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2207                           	opt stack 0
  2208                           
  2209                           ; 2 bytes @ 0xE
  2210  00003C                     	ds	2
  2211  00003E                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2212                           	opt stack 0
  2213                           
  2214                           ; 2 bytes @ 0x10
  2215  00003E                     	ds	2
  2216  000040                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2217                           
  2218                           ; 0 bytes @ 0x12
  2219  000040                     	ds	2
  2220  000042                     ??_USBStdFeatureReqHandler:
  2221  000042                     USBStdSetCfgHandler@i:
  2222                           	opt stack 0
  2223                           
  2224                           ; 1 bytes @ 0x14
  2225  000042                     	ds	1
  2226  000043                     USBStdFeatureReqHandler@pUEP:
  2227                           	opt stack 0
  2228                           
  2229                           ; 2 bytes @ 0x15
  2230  000043                     	ds	2
  2231  000045                     USBStdFeatureReqHandler@current_ep_data:
  2232                           	opt stack 0
  2233                           
  2234                           ; 1 bytes @ 0x17
  2235  000045                     	ds	1
  2236  000046                     USBStdFeatureReqHandler@p:
  2237                           	opt stack 0
  2238                           
  2239                           ; 2 bytes @ 0x18
  2240  000046                     	ds	2
  2241  000048                     ??_USBCtrlEPService:
  2242  000048                     
  2243                           ; 0 bytes @ 0x1A
  2244  000048                     	ds	2
  2245  00004A                     USBCtrlEPService@setup_cnt:
  2246                           	opt stack 0
  2247                           
  2248                           ; 1 bytes @ 0x1C
  2249  00004A                     	ds	1
  2250  00004B                     USBDeviceTasks@i:
  2251                           	opt stack 0
  2252                           
  2253                           ; 1 bytes @ 0x1D
  2254  00004B                     	ds	1
  2255  00004C                     ??_ISR:
  2256                           
  2257                           ; 0 bytes @ 0x1E
  2258  00004C                     	ds	15
  2259                           tblptru	equ	0xFF8
  2260                           tblptrh	equ	0xFF7
  2261                           tblptrl	equ	0xFF6
  2262                           tablat	equ	0xFF5
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           postdec1	equ	0xFE5
  2266                           fsr1h	equ	0xFE2
  2267                           fsr1l	equ	0xFE1
  2268                           
  2269 ;;
  2270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2271 ;;
  2272 ;; *************** function _main *****************
  2273 ;; Defined at:
  2274 ;;		line 308 in file "PIC18F27J53-killifish_light06.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2  1452[None  ] int 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels required when called:   20
  2294 ;; This function calls:
  2295 ;;		_RTCC_task
  2296 ;;		_USB_task
  2297 ;;		_light_task
  2298 ;;		_main_init
  2299 ;;		_terminal_task
  2300 ;; This function is called by:
  2301 ;;		Startup code after reset
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text0
  2306  01429A                     __ptext0:
  2307                           	opt stack 0
  2308  01429A                     _main:
  2309                           	opt stack 11
  2310                           
  2311                           ;PIC18F27J53-killifish_light06.c: 309: main_init();
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;incstack = 0
  2315  01429A  EC65  F09C         	call	_main_init	;wreg free
  2316  01429E                     l9881:
  2317                           
  2318                           ;PIC18F27J53-killifish_light06.c: 312: INTCONbits.GIE = 0;
  2319  01429E  9EF2               	bcf	intcon,7,c	;volatile
  2320                           
  2321                           ;PIC18F27J53-killifish_light06.c: 313: USB_task();
  2322  0142A0  EC8E  F09D         	call	_USB_task	;wreg free
  2323                           
  2324                           ;PIC18F27J53-killifish_light06.c: 314: INTCONbits.GIE = 1;
  2325  0142A4  8EF2               	bsf	intcon,7,c	;volatile
  2326                           
  2327                           ;PIC18F27J53-killifish_light06.c: 316: INTCONbits.GIE = 0;
  2328  0142A6  9EF2               	bcf	intcon,7,c	;volatile
  2329                           
  2330                           ;PIC18F27J53-killifish_light06.c: 317: RTCC_task();
  2331  0142A8  EC6C  F0A1         	call	_RTCC_task	;wreg free
  2332                           
  2333                           ;PIC18F27J53-killifish_light06.c: 318: INTCONbits.GIE = 1;
  2334  0142AC  8EF2               	bsf	intcon,7,c	;volatile
  2335                           
  2336                           ;PIC18F27J53-killifish_light06.c: 320: INTCONbits.GIE = 0;
  2337  0142AE  9EF2               	bcf	intcon,7,c	;volatile
  2338                           
  2339                           ;PIC18F27J53-killifish_light06.c: 321: terminal_task(&usb_tx, &usb_rx);
  2340  0142B0  0E78               	movlw	low _usb_tx
  2341  0142B2  0101               	movlb	1	; () banked
  2342  0142B4  6F93               	movwf	terminal_task@tx& (0+255),b
  2343  0142B6  0E01               	movlw	high _usb_tx
  2344  0142B8  0101               	movlb	1	; () banked
  2345  0142BA  6F94               	movwf	(terminal_task@tx+1)& (0+255),b
  2346  0142BC  0E70               	movlw	low _usb_rx
  2347  0142BE  0101               	movlb	1	; () banked
  2348  0142C0  6F95               	movwf	terminal_task@rx& (0+255),b
  2349  0142C2  0E01               	movlw	high _usb_rx
  2350  0142C4  0101               	movlb	1	; () banked
  2351  0142C6  6F96               	movwf	(terminal_task@rx+1)& (0+255),b
  2352  0142C8  EC5A  F086         	call	_terminal_task	;wreg free
  2353                           
  2354                           ;PIC18F27J53-killifish_light06.c: 322: INTCONbits.GIE = 1;
  2355  0142CC  8EF2               	bsf	intcon,7,c	;volatile
  2356                           
  2357                           ;PIC18F27J53-killifish_light06.c: 324: INTCONbits.GIE = 0;
  2358  0142CE  9EF2               	bcf	intcon,7,c	;volatile
  2359                           
  2360                           ;PIC18F27J53-killifish_light06.c: 325: light_task();
  2361  0142D0  ECDB  F08B         	call	_light_task	;wreg free
  2362                           
  2363                           ;PIC18F27J53-killifish_light06.c: 326: INTCONbits.GIE = 1;
  2364  0142D4  8EF2               	bsf	intcon,7,c	;volatile
  2365  0142D6  D7E3               	goto	l9881
  2366  0142D8                     __end_of_main:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           intcon	equ	0xFF2
  2373                           postinc0	equ	0xFEE
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1h	equ	0xFE2
  2377                           fsr1l	equ	0xFE1
  2378                           
  2379 ;; *************** function _terminal_task *****************
  2380 ;; Defined at:
  2381 ;;		line 8 in file "../My_library/My_terminal.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  2384 ;;		 -> usb_tx(8), 
  2385 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  2386 ;;		 -> usb_rx(8), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  i               1  102[BANK4 ] unsigned char 
  2389 ;;  i               1  104[BANK4 ] unsigned char 
  2390 ;;  ascii           1  103[BANK4 ] unsigned char 
  2391 ;;  buf           100    0[BANK4 ] unsigned char [100]
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2401 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Totals:         0       2       4       0       0     105       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;Total ram usage:      111 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:   19
  2408 ;; This function calls:
  2409 ;;		_ringbuf_backspace
  2410 ;;		_ringbuf_delete
  2411 ;;		_ringbuf_init
  2412 ;;		_ringbuf_num
  2413 ;;		_ringbuf_pop
  2414 ;;		_ringbuf_put
  2415 ;;		_ringbuf_put_num
  2416 ;;		_ringbuf_put_str
  2417 ;;		_terminal_operation
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text1
  2424  010CB4                     __ptext1:
  2425                           	opt stack 0
  2426  010CB4                     _terminal_task:
  2427                           	opt stack 11
  2428                           
  2429                           ;My_terminal.c: 9: static ringbuf_t command;
  2430                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2431                           ;My_terminal.c: 11: if (command_init == 0) {
  2432                           
  2433                           ;incstack = 0
  2434  010CB4  0100               	movlb	0	; () banked
  2435  010CB6  51F4               	movf	terminal_task@command_init& (0+255),w,b
  2436  010CB8  0100               	movlb	0	; () banked
  2437  010CBA  A4D8               	btfss	status,2,c
  2438  010CBC  D016               	goto	l9529
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;My_terminal.c: 12: command_init = 1;
  2442  010CBE  0E01               	movlw	1
  2443  010CC0  0100               	movlb	0	; () banked
  2444  010CC2  6FF4               	movwf	terminal_task@command_init& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_terminal.c: 13: char buf[100];
  2448                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2449  010CC4  0EF5               	movlw	low terminal_task@command
  2450  010CC6  0100               	movlb	0	; () banked
  2451  010CC8  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2452  010CCA  0E00               	movlw	high terminal_task@command
  2453  010CCC  0100               	movlb	0	; () banked
  2454  010CCE  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2455  010CD0  0E00               	movlw	low terminal_task@buf
  2456  010CD2  0100               	movlb	0	; () banked
  2457  010CD4  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2458  010CD6  0E04               	movlw	high terminal_task@buf
  2459  010CD8  0100               	movlb	0	; () banked
  2460  010CDA  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2461  010CDC  0E00               	movlw	0
  2462  010CDE  0100               	movlb	0	; () banked
  2463  010CE0  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2464  010CE2  0E64               	movlw	100
  2465  010CE4  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2466  010CE6  ECB2  F0A0         	call	_ringbuf_init	;wreg free
  2467  010CEA                     l9529:
  2468                           
  2469                           ;My_terminal.c: 15: }
  2470                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2471  010CEA  C195  F060         	movff	terminal_task@rx,ringbuf_num@rb
  2472  010CEE  C196  F061         	movff	terminal_task@rx+1,ringbuf_num@rb+1
  2473  010CF2  EC6F  F093         	call	_ringbuf_num	;wreg free
  2474  010CF6  0100               	movlb	0	; () banked
  2475  010CF8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2476  010CFA  0100               	movlb	0	; () banked
  2477  010CFC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2478  010CFE  B4D8               	btfsc	status,2,c
  2479  010D00  0012               	return	
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2483  010D02  C195  F068         	movff	terminal_task@rx,ringbuf_pop@rb
  2484  010D06  C196  F069         	movff	terminal_task@rx+1,ringbuf_pop@rb+1
  2485  010D0A  EC20  F098         	call	_ringbuf_pop	;wreg free
  2486  010D0E  0104               	movlb	4	; () banked
  2487  010D10  6F67               	movwf	terminal_task@ascii& (0+255),b
  2488                           
  2489                           ;My_terminal.c: 18: switch (ascii) {
  2490  010D12  D176               	goto	l9593
  2491  010D14                     l9533:
  2492                           
  2493                           ; BSR set to: 4
  2494                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2495  010D14  0EF5               	movlw	low terminal_task@command
  2496  010D16  0100               	movlb	0	; () banked
  2497  010D18  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2498  010D1A  0E00               	movlw	high terminal_task@command
  2499  010D1C  0100               	movlb	0	; () banked
  2500  010D1E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2501  010D20  0E00               	movlw	0
  2502  010D22  0100               	movlb	0	; () banked
  2503  010D24  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2504  010D26  ECE6  F096         	call	_ringbuf_put	;wreg free
  2505                           
  2506                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2507  010D2A  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2508  010D2E  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2509  010D32  0E09               	movlw	9
  2510  010D34  0100               	movlb	0	; () banked
  2511  010D36  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2512  010D38  ECE6  F096         	call	_ringbuf_put	;wreg free
  2513                           
  2514                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2515  010D3C  0EF5               	movlw	low terminal_task@command
  2516  010D3E  0100               	movlb	0	; () banked
  2517  010D40  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2518  010D42  0E00               	movlw	high terminal_task@command
  2519  010D44  0100               	movlb	0	; () banked
  2520  010D46  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2521  010D48  EC6F  F093         	call	_ringbuf_num	;wreg free
  2522  010D4C  0EFF               	movlw	255
  2523  010D4E  0100               	movlb	0	; () banked
  2524  010D50  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2525  010D52  0104               	movlb	4	; () banked
  2526  010D54  6F64               	movwf	_terminal_task$6608& (0+255),b
  2527  010D56  0EFF               	movlw	255
  2528  010D58  0100               	movlb	0	; () banked
  2529  010D5A  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2530  010D5C  0104               	movlb	4	; () banked
  2531  010D5E  6F65               	movwf	(_terminal_task$6608+1)& (0+255),b
  2532                           
  2533                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2534  010D60  C193  F072         	movff	terminal_task@tx,ringbuf_put_num@rb
  2535  010D64  C194  F073         	movff	terminal_task@tx+1,ringbuf_put_num@rb+1
  2536  010D68  C464  F074         	movff	_terminal_task$6608,ringbuf_put_num@value
  2537  010D6C  C465  F075         	movff	_terminal_task$6608+1,ringbuf_put_num@value+1
  2538  010D70  0E02               	movlw	2
  2539  010D72  0100               	movlb	0	; () banked
  2540  010D74  6F76               	movwf	ringbuf_put_num@digits& (0+255),b
  2541  010D76  EC5D  F09E         	call	_ringbuf_put_num	;wreg free
  2542                           
  2543                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2544  010D7A  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2545  010D7E  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2546  010D82  0E0A               	movlw	10
  2547  010D84  0100               	movlb	0	; () banked
  2548  010D86  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2549  010D88  ECE6  F096         	call	_ringbuf_put	;wreg free
  2550                           
  2551                           ;My_terminal.c: 24: static char op0[25];
  2552                           ;My_terminal.c: 25: static char op1[25];
  2553                           ;My_terminal.c: 26: static char op2[25];
  2554                           ;My_terminal.c: 27: static char op3[25];
  2555                           ;My_terminal.c: 28: uint8_t i;
  2556                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2557  010D8C  0E00               	movlw	0
  2558  010D8E  0104               	movlb	4	; () banked
  2559  010D90  6F68               	movwf	terminal_task@i& (0+255),b
  2560  010D92  D002               	goto	l9539
  2561  010D94                     l9537:
  2562                           
  2563                           ; BSR set to: 4
  2564  010D94  0104               	movlb	4	; () banked
  2565  010D96  2B68               	incf	terminal_task@i& (0+255),f,b
  2566  010D98                     l9539:
  2567                           
  2568                           ; BSR set to: 4
  2569  010D98  0EF5               	movlw	low terminal_task@command
  2570  010D9A  0100               	movlb	0	; () banked
  2571  010D9C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2572  010D9E  0E00               	movlw	high terminal_task@command
  2573  010DA0  0100               	movlb	0	; () banked
  2574  010DA2  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2575  010DA4  EC20  F098         	call	_ringbuf_pop	;wreg free
  2576  010DA8  0100               	movlb	0	; () banked
  2577  010DAA  6FD3               	movwf	??_terminal_task& (0+255),b
  2578  010DAC  0104               	movlb	4	; () banked
  2579  010DAE  5168               	movf	terminal_task@i& (0+255),w,b
  2580  010DB0  0D01               	mullw	1
  2581  010DB2  0E18               	movlw	low terminal_task@op0
  2582  010DB4  24F3               	addwf	prodl,w,c
  2583  010DB6  6ED9               	movwf	fsr2l,c
  2584  010DB8  0E01               	movlw	high terminal_task@op0
  2585  010DBA  20F4               	addwfc	prodh,w,c
  2586  010DBC  6EDA               	movwf	fsr2h,c
  2587  010DBE  C0D3  FFDF         	movff	??_terminal_task,indf2
  2588  010DC2  50DF               	movf	indf2,w,c
  2589  010DC4  A4D8               	btfss	status,2,c
  2590  010DC6  D7E6               	goto	l9537
  2591                           
  2592                           ; BSR set to: 4
  2593                           ;My_terminal.c: 30: op0[i] = '\0';
  2594                           
  2595                           ; BSR set to: 4
  2596  010DC8  0104               	movlb	4	; () banked
  2597  010DCA  5168               	movf	terminal_task@i& (0+255),w,b
  2598  010DCC  0D01               	mullw	1
  2599  010DCE  0E18               	movlw	low terminal_task@op0
  2600  010DD0  24F3               	addwf	prodl,w,c
  2601  010DD2  6ED9               	movwf	fsr2l,c
  2602  010DD4  0E01               	movlw	high terminal_task@op0
  2603  010DD6  20F4               	addwfc	prodh,w,c
  2604  010DD8  6EDA               	movwf	fsr2h,c
  2605  010DDA  0E00               	movlw	0
  2606  010DDC  6EDF               	movwf	indf2,c
  2607                           
  2608                           ; BSR set to: 4
  2609                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2610  010DDE  0E00               	movlw	0
  2611  010DE0  0104               	movlb	4	; () banked
  2612  010DE2  6F68               	movwf	terminal_task@i& (0+255),b
  2613  010DE4  D002               	goto	l9547
  2614  010DE6                     l9545:
  2615                           
  2616                           ; BSR set to: 4
  2617  010DE6  0104               	movlb	4	; () banked
  2618  010DE8  2B68               	incf	terminal_task@i& (0+255),f,b
  2619  010DEA                     l9547:
  2620                           
  2621                           ; BSR set to: 4
  2622  010DEA  0EF5               	movlw	low terminal_task@command
  2623  010DEC  0100               	movlb	0	; () banked
  2624  010DEE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2625  010DF0  0E00               	movlw	high terminal_task@command
  2626  010DF2  0100               	movlb	0	; () banked
  2627  010DF4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2628  010DF6  EC20  F098         	call	_ringbuf_pop	;wreg free
  2629  010DFA  0100               	movlb	0	; () banked
  2630  010DFC  6FD3               	movwf	??_terminal_task& (0+255),b
  2631  010DFE  0104               	movlb	4	; () banked
  2632  010E00  5168               	movf	terminal_task@i& (0+255),w,b
  2633  010E02  0D01               	mullw	1
  2634  010E04  0E31               	movlw	low terminal_task@op1
  2635  010E06  24F3               	addwf	prodl,w,c
  2636  010E08  6ED9               	movwf	fsr2l,c
  2637  010E0A  0E01               	movlw	high terminal_task@op1
  2638  010E0C  20F4               	addwfc	prodh,w,c
  2639  010E0E  6EDA               	movwf	fsr2h,c
  2640  010E10  C0D3  FFDF         	movff	??_terminal_task,indf2
  2641  010E14  50DF               	movf	indf2,w,c
  2642  010E16  A4D8               	btfss	status,2,c
  2643  010E18  D7E6               	goto	l9545
  2644                           
  2645                           ; BSR set to: 4
  2646                           ;My_terminal.c: 32: op1[i] = '\0';
  2647                           
  2648                           ; BSR set to: 4
  2649  010E1A  0104               	movlb	4	; () banked
  2650  010E1C  5168               	movf	terminal_task@i& (0+255),w,b
  2651  010E1E  0D01               	mullw	1
  2652  010E20  0E31               	movlw	low terminal_task@op1
  2653  010E22  24F3               	addwf	prodl,w,c
  2654  010E24  6ED9               	movwf	fsr2l,c
  2655  010E26  0E01               	movlw	high terminal_task@op1
  2656  010E28  20F4               	addwfc	prodh,w,c
  2657  010E2A  6EDA               	movwf	fsr2h,c
  2658  010E2C  0E00               	movlw	0
  2659  010E2E  6EDF               	movwf	indf2,c
  2660                           
  2661                           ; BSR set to: 4
  2662                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2663  010E30  0E00               	movlw	0
  2664  010E32  0104               	movlb	4	; () banked
  2665  010E34  6F68               	movwf	terminal_task@i& (0+255),b
  2666  010E36  D002               	goto	l9555
  2667  010E38                     l9553:
  2668                           
  2669                           ; BSR set to: 4
  2670  010E38  0104               	movlb	4	; () banked
  2671  010E3A  2B68               	incf	terminal_task@i& (0+255),f,b
  2672  010E3C                     l9555:
  2673                           
  2674                           ; BSR set to: 4
  2675  010E3C  0EF5               	movlw	low terminal_task@command
  2676  010E3E  0100               	movlb	0	; () banked
  2677  010E40  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2678  010E42  0E00               	movlw	high terminal_task@command
  2679  010E44  0100               	movlb	0	; () banked
  2680  010E46  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2681  010E48  EC20  F098         	call	_ringbuf_pop	;wreg free
  2682  010E4C  0100               	movlb	0	; () banked
  2683  010E4E  6FD3               	movwf	??_terminal_task& (0+255),b
  2684  010E50  0104               	movlb	4	; () banked
  2685  010E52  5168               	movf	terminal_task@i& (0+255),w,b
  2686  010E54  0D01               	mullw	1
  2687  010E56  0E80               	movlw	low terminal_task@op2
  2688  010E58  24F3               	addwf	prodl,w,c
  2689  010E5A  6ED9               	movwf	fsr2l,c
  2690  010E5C  0E02               	movlw	high terminal_task@op2
  2691  010E5E  20F4               	addwfc	prodh,w,c
  2692  010E60  6EDA               	movwf	fsr2h,c
  2693  010E62  C0D3  FFDF         	movff	??_terminal_task,indf2
  2694  010E66  50DF               	movf	indf2,w,c
  2695  010E68  A4D8               	btfss	status,2,c
  2696  010E6A  D7E6               	goto	l9553
  2697                           
  2698                           ; BSR set to: 4
  2699                           ;My_terminal.c: 34: op2[i] = '\0';
  2700                           
  2701                           ; BSR set to: 4
  2702  010E6C  0104               	movlb	4	; () banked
  2703  010E6E  5168               	movf	terminal_task@i& (0+255),w,b
  2704  010E70  0D01               	mullw	1
  2705  010E72  0E80               	movlw	low terminal_task@op2
  2706  010E74  24F3               	addwf	prodl,w,c
  2707  010E76  6ED9               	movwf	fsr2l,c
  2708  010E78  0E02               	movlw	high terminal_task@op2
  2709  010E7A  20F4               	addwfc	prodh,w,c
  2710  010E7C  6EDA               	movwf	fsr2h,c
  2711  010E7E  0E00               	movlw	0
  2712  010E80  6EDF               	movwf	indf2,c
  2713                           
  2714                           ; BSR set to: 4
  2715                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2716  010E82  0E00               	movlw	0
  2717  010E84  0104               	movlb	4	; () banked
  2718  010E86  6F68               	movwf	terminal_task@i& (0+255),b
  2719  010E88  D002               	goto	l9563
  2720  010E8A                     l9561:
  2721                           
  2722                           ; BSR set to: 4
  2723  010E8A  0104               	movlb	4	; () banked
  2724  010E8C  2B68               	incf	terminal_task@i& (0+255),f,b
  2725  010E8E                     l9563:
  2726                           
  2727                           ; BSR set to: 4
  2728  010E8E  0EF5               	movlw	low terminal_task@command
  2729  010E90  0100               	movlb	0	; () banked
  2730  010E92  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2731  010E94  0E00               	movlw	high terminal_task@command
  2732  010E96  0100               	movlb	0	; () banked
  2733  010E98  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2734  010E9A  EC20  F098         	call	_ringbuf_pop	;wreg free
  2735  010E9E  0100               	movlb	0	; () banked
  2736  010EA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2737  010EA2  0104               	movlb	4	; () banked
  2738  010EA4  5168               	movf	terminal_task@i& (0+255),w,b
  2739  010EA6  0D01               	mullw	1
  2740  010EA8  0E99               	movlw	low terminal_task@op3
  2741  010EAA  24F3               	addwf	prodl,w,c
  2742  010EAC  6ED9               	movwf	fsr2l,c
  2743  010EAE  0E02               	movlw	high terminal_task@op3
  2744  010EB0  20F4               	addwfc	prodh,w,c
  2745  010EB2  6EDA               	movwf	fsr2h,c
  2746  010EB4  C0D3  FFDF         	movff	??_terminal_task,indf2
  2747  010EB8  50DF               	movf	indf2,w,c
  2748  010EBA  A4D8               	btfss	status,2,c
  2749  010EBC  D7E6               	goto	l9561
  2750                           
  2751                           ; BSR set to: 4
  2752                           ;My_terminal.c: 36: op3[i] = '\0';
  2753                           
  2754                           ; BSR set to: 4
  2755  010EBE  0104               	movlb	4	; () banked
  2756  010EC0  5168               	movf	terminal_task@i& (0+255),w,b
  2757  010EC2  0D01               	mullw	1
  2758  010EC4  0E99               	movlw	low terminal_task@op3
  2759  010EC6  24F3               	addwf	prodl,w,c
  2760  010EC8  6ED9               	movwf	fsr2l,c
  2761  010ECA  0E02               	movlw	high terminal_task@op3
  2762  010ECC  20F4               	addwfc	prodh,w,c
  2763  010ECE  6EDA               	movwf	fsr2h,c
  2764  010ED0  0E00               	movlw	0
  2765  010ED2  6EDF               	movwf	indf2,c
  2766                           
  2767                           ; BSR set to: 4
  2768                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2769  010ED4  C193  F0C5         	movff	terminal_task@tx,terminal_operation@tx
  2770  010ED8  C194  F0C6         	movff	terminal_task@tx+1,terminal_operation@tx+1
  2771  010EDC  0E18               	movlw	low terminal_task@op0
  2772  010EDE  0100               	movlb	0	; () banked
  2773  010EE0  6FC7               	movwf	terminal_operation@op0& (0+255),b
  2774  010EE2  0E01               	movlw	high terminal_task@op0
  2775  010EE4  0100               	movlb	0	; () banked
  2776  010EE6  6FC8               	movwf	(terminal_operation@op0+1)& (0+255),b
  2777  010EE8  0E31               	movlw	low terminal_task@op1
  2778  010EEA  0100               	movlb	0	; () banked
  2779  010EEC  6FC9               	movwf	terminal_operation@op1& (0+255),b
  2780  010EEE  0E01               	movlw	high terminal_task@op1
  2781  010EF0  0100               	movlb	0	; () banked
  2782  010EF2  6FCA               	movwf	(terminal_operation@op1+1)& (0+255),b
  2783  010EF4  0E80               	movlw	low terminal_task@op2
  2784  010EF6  0100               	movlb	0	; () banked
  2785  010EF8  6FCB               	movwf	terminal_operation@op2& (0+255),b
  2786  010EFA  0E02               	movlw	high terminal_task@op2
  2787  010EFC  0100               	movlb	0	; () banked
  2788  010EFE  6FCC               	movwf	(terminal_operation@op2+1)& (0+255),b
  2789  010F00  0E99               	movlw	low terminal_task@op3
  2790  010F02  0100               	movlb	0	; () banked
  2791  010F04  6FCD               	movwf	terminal_operation@op3& (0+255),b
  2792  010F06  0E02               	movlw	high terminal_task@op3
  2793  010F08  0100               	movlb	0	; () banked
  2794  010F0A  6FCE               	movwf	(terminal_operation@op3+1)& (0+255),b
  2795  010F0C  EC00  F080         	call	_terminal_operation	;wreg free
  2796                           
  2797                           ;My_terminal.c: 38: break;
  2798  010F10  0012               	return	
  2799  010F12                     l9569:
  2800                           
  2801                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2802  010F12  0EF5               	movlw	low terminal_task@command
  2803  010F14  0100               	movlb	0	; () banked
  2804  010F16  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2805  010F18  0E00               	movlw	high terminal_task@command
  2806  010F1A  0100               	movlb	0	; () banked
  2807  010F1C  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2808  010F1E  0E00               	movlw	0
  2809  010F20  0100               	movlb	0	; () banked
  2810  010F22  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2811  010F24  ECE6  F096         	call	_ringbuf_put	;wreg free
  2812                           
  2813                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2814  010F28  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2815  010F2C  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2816  010F30  0E20               	movlw	32
  2817  010F32  0100               	movlb	0	; () banked
  2818  010F34  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2819  010F36  ECE6  F096         	call	_ringbuf_put	;wreg free
  2820                           
  2821                           ;My_terminal.c: 42: break;
  2822  010F3A  0012               	return	
  2823  010F3C                     l9571:
  2824                           
  2825                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2826  010F3C  0EF5               	movlw	low terminal_task@command
  2827  010F3E  0100               	movlb	0	; () banked
  2828  010F40  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2829  010F42  0E00               	movlw	high terminal_task@command
  2830  010F44  0100               	movlb	0	; () banked
  2831  010F46  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2832  010F48  EC47  F09D         	call	_ringbuf_backspace	;wreg free
  2833                           
  2834                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2835  010F4C  C193  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2836  010F50  C194  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2837  010F54  0EDA               	movlw	low STR_19
  2838  010F56  0100               	movlb	0	; () banked
  2839  010F58  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2840  010F5A  0EFF               	movlw	high STR_19
  2841  010F5C  0100               	movlb	0	; () banked
  2842  010F5E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2843  010F60  ECC2  F09F         	call	_ringbuf_put_str	;wreg free
  2844                           
  2845                           ;My_terminal.c: 46: break;
  2846  010F64  0012               	return	
  2847  010F66                     l9575:
  2848                           
  2849                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2850  010F66  0E00               	movlw	0
  2851  010F68  0104               	movlb	4	; () banked
  2852  010F6A  6F66               	movwf	terminal_task@i_4309& (0+255),b
  2853  010F6C  D00E               	goto	l9581
  2854  010F6E                     l9577:
  2855  010F6E  C193  F06F         	movff	terminal_task@tx,ringbuf_put_str@rb
  2856  010F72  C194  F070         	movff	terminal_task@tx+1,ringbuf_put_str@rb+1
  2857  010F76  0EDA               	movlw	low STR_19
  2858  010F78  0100               	movlb	0	; () banked
  2859  010F7A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2860  010F7C  0EFF               	movlw	high STR_19
  2861  010F7E  0100               	movlb	0	; () banked
  2862  010F80  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2863  010F82  ECC2  F09F         	call	_ringbuf_put_str	;wreg free
  2864  010F86  0104               	movlb	4	; () banked
  2865  010F88  2B66               	incf	terminal_task@i_4309& (0+255),f,b
  2866  010F8A                     l9581:
  2867                           
  2868                           ; BSR set to: 4
  2869  010F8A  0EF5               	movlw	low terminal_task@command
  2870  010F8C  0100               	movlb	0	; () banked
  2871  010F8E  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2872  010F90  0E00               	movlw	high terminal_task@command
  2873  010F92  0100               	movlb	0	; () banked
  2874  010F94  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2875  010F96  EC6F  F093         	call	_ringbuf_num	;wreg free
  2876  010F9A  0104               	movlb	4	; () banked
  2877  010F9C  5166               	movf	terminal_task@i_4309& (0+255),w,b
  2878  010F9E  0100               	movlb	0	; () banked
  2879  010FA0  6FD3               	movwf	??_terminal_task& (0+255),b
  2880  010FA2  6BD4               	clrf	(??_terminal_task+1)& (0+255),b
  2881  010FA4  0100               	movlb	0	; () banked
  2882  010FA6  5160               	movf	?_ringbuf_num& (0+255),w,b
  2883  010FA8  0100               	movlb	0	; () banked
  2884  010FAA  5DD3               	subwf	??_terminal_task& (0+255),w,b
  2885  010FAC  0100               	movlb	0	; () banked
  2886  010FAE  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2887  010FB0  0100               	movlb	0	; () banked
  2888  010FB2  59D4               	subwfb	(??_terminal_task+1)& (0+255),w,b
  2889  010FB4  A0D8               	btfss	status,0,c
  2890  010FB6  D7DB               	goto	l9577
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2894                           
  2895                           ; BSR set to: 0
  2896  010FB8  0EF5               	movlw	low terminal_task@command
  2897  010FBA  0100               	movlb	0	; () banked
  2898  010FBC  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2899  010FBE  0E00               	movlw	high terminal_task@command
  2900  010FC0  0100               	movlb	0	; () banked
  2901  010FC2  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2902  010FC4  ECDA  F0A2         	call	_ringbuf_delete	;wreg free
  2903                           
  2904                           ;My_terminal.c: 50: break;
  2905  010FC8  0012               	return	
  2906  010FCA                     l9585:
  2907                           
  2908                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2909  010FCA  0E1F               	movlw	31
  2910  010FCC  0104               	movlb	4	; () banked
  2911  010FCE  6567               	cpfsgt	terminal_task@ascii& (0+255),b
  2912  010FD0  0012               	return	
  2913                           
  2914                           ; BSR set to: 4
  2915  010FD2  0E7F               	movlw	127
  2916  010FD4  0104               	movlb	4	; () banked
  2917  010FD6  6167               	cpfslt	terminal_task@ascii& (0+255),b
  2918  010FD8  0012               	return	
  2919                           
  2920                           ; BSR set to: 4
  2921                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2922  010FDA  0EF5               	movlw	low terminal_task@command
  2923  010FDC  0100               	movlb	0	; () banked
  2924  010FDE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2925  010FE0  0E00               	movlw	high terminal_task@command
  2926  010FE2  0100               	movlb	0	; () banked
  2927  010FE4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2928  010FE6  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2929  010FEA  ECE6  F096         	call	_ringbuf_put	;wreg free
  2930                           
  2931                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2932  010FEE  C193  F068         	movff	terminal_task@tx,ringbuf_put@rb
  2933  010FF2  C194  F069         	movff	terminal_task@tx+1,ringbuf_put@rb+1
  2934  010FF6  C467  F06A         	movff	terminal_task@ascii,ringbuf_put@asciicode
  2935  010FFA  ECE6  F096         	call	_ringbuf_put	;wreg free
  2936                           
  2937                           ;My_terminal.c: 57: }
  2938                           
  2939                           ;My_terminal.c: 55: }
  2940                           ;My_terminal.c: 56: break;
  2941  010FFE  0012               	return	
  2942  011000                     l9593:
  2943  011000  0104               	movlb	4	; () banked
  2944  011002  5167               	movf	terminal_task@ascii& (0+255),w,b
  2945                           
  2946                           ; Switch size 1, requested type "space"
  2947                           ; Number of cases is 4, Range of values is 8 to 127
  2948                           ; switch strategies available:
  2949                           ; Name         Instructions Cycles
  2950                           ; simple_byte           13     7 (average)
  2951                           ;	Chosen strategy is simple_byte
  2952  011004  0A08               	xorlw	8	; case 8
  2953  011006  B4D8               	btfsc	status,2,c
  2954  011008  D799               	goto	l9571
  2955  01100A  0A05               	xorlw	5	; case 13
  2956  01100C  B4D8               	btfsc	status,2,c
  2957  01100E  D682               	goto	l9533
  2958  011010  0A2D               	xorlw	45	; case 32
  2959  011012  B4D8               	btfsc	status,2,c
  2960  011014  D77E               	goto	l9569
  2961  011016  0A5F               	xorlw	95	; case 127
  2962  011018  B4D8               	btfsc	status,2,c
  2963  01101A  D7A5               	goto	l9575
  2964  01101C  D7D6               	goto	l9585
  2965  01101E                     __end_of_terminal_task:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           intcon	equ	0xFF2
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           fsr1h	equ	0xFE2
  2978                           fsr1l	equ	0xFE1
  2979                           indf2	equ	0xFDF
  2980                           fsr2h	equ	0xFDA
  2981                           fsr2l	equ	0xFD9
  2982                           status	equ	0xFD8
  2983                           
  2984 ;; *************** function _terminal_operation *****************
  2985 ;; Defined at:
  2986 ;;		line 170 in file "PIC18F27J53-killifish_light06.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  tx              2  101[BANK0 ] PTR struct ringbuf
  2989 ;;		 -> usb_tx(8), 
  2990 ;;  op0             2  103[BANK0 ] PTR unsigned char 
  2991 ;;		 -> terminal_task@op0(25), 
  2992 ;;  op1             2  105[BANK0 ] PTR unsigned char 
  2993 ;;		 -> terminal_task@op1(25), 
  2994 ;;  op2             2  107[BANK0 ] PTR unsigned char 
  2995 ;;		 -> terminal_task@op2(25), 
  2996 ;;  op3             2  109[BANK0 ] PTR unsigned char 
  2997 ;;		 -> terminal_task@op3(25), 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3009 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3010 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3012 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3013 ;;Total ram usage:       14 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:   18
  3016 ;; This function calls:
  3017 ;;		_PWM_set
  3018 ;;		___awdiv
  3019 ;;		___wmul
  3020 ;;		_atoi
  3021 ;;		_ringbuf_put_str
  3022 ;;		_strcmp
  3023 ;;		_terminal_time
  3024 ;; This function is called by:
  3025 ;;		_terminal_task
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text2
  3030  010000                     __ptext2:
  3031                           	opt stack 0
  3032  010000                     _terminal_operation:
  3033                           	opt stack 11
  3034                           
  3035                           ;PIC18F27J53-killifish_light06.c: 171: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  3036                           
  3037                           ;incstack = 0
  3038  010000  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3039  010004  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3040  010008  0EB2               	movlw	low STR_41
  3041  01000A  0100               	movlb	0	; () banked
  3042  01000C  6F62               	movwf	strcmp@s2& (0+255),b
  3043  01000E  0EFF               	movlw	high STR_41
  3044  010010  0100               	movlb	0	; () banked
  3045  010012  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3046  010014  EC56  F0A0         	call	_strcmp	;wreg free
  3047  010018  0100               	movlb	0	; () banked
  3048  01001A  5160               	movf	?_strcmp& (0+255),w,b
  3049  01001C  0100               	movlb	0	; () banked
  3050  01001E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3051  010020  B4D8               	btfsc	status,2,c
  3052  010022  D012               	goto	l9225
  3053                           
  3054                           ; BSR set to: 0
  3055  010024  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3056  010028  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3057  01002C  0EE5               	movlw	low STR_42
  3058  01002E  0100               	movlb	0	; () banked
  3059  010030  6F62               	movwf	strcmp@s2& (0+255),b
  3060  010032  0EFF               	movlw	high STR_42
  3061  010034  0100               	movlb	0	; () banked
  3062  010036  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3063  010038  EC56  F0A0         	call	_strcmp	;wreg free
  3064  01003C  0100               	movlb	0	; () banked
  3065  01003E  5160               	movf	?_strcmp& (0+255),w,b
  3066  010040  0100               	movlb	0	; () banked
  3067  010042  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3068  010044  A4D8               	btfss	status,2,c
  3069  010046  D00C               	goto	l9227
  3070  010048                     l9225:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;PIC18F27J53-killifish_light06.c: 172: ringbuf_put_str(tx,
  3074                           ;PIC18F27J53-killifish_light06.c: 173: "\t**************************\n"
  3075                           ;PIC18F27J53-killifish_light06.c: 174: "\t**** Killifish Light  ****\n"
  3076                           ;PIC18F27J53-killifish_light06.c: 175: "\t**** Made by @Ryokeri ****\n"
  3077                           ;PIC18F27J53-killifish_light06.c: 176: "\t**************************\n\n"
  3078                           ;PIC18F27J53-killifish_light06.c: 177: "\tcommand \topeland1\topeland2\n\n"
  3079                           ;PIC18F27J53-killifish_light06.c: 178: "\tprint_time(t)\n"
  3080                           ;PIC18F27J53-killifish_light06.c: 179: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(deci
      +                          mal)]\n"
  3081  010048  C0C5  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  3082  01004C  C0C6  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  3083  010050  0EF2               	movlw	low STR_43
  3084  010052  0100               	movlb	0	; () banked
  3085  010054  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3086  010056  0EFD               	movlw	high STR_43
  3087  010058  0100               	movlb	0	; () banked
  3088  01005A  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3089  01005C  ECC2  F09F         	call	_ringbuf_put_str	;wreg free
  3090  010060                     l9227:
  3091                           
  3092                           ;PIC18F27J53-killifish_light06.c: 186: }
  3093                           ;PIC18F27J53-killifish_light06.c: 187: terminal_time(tx, op0, op1, op2);
  3094  010060  C0C5  F0BC         	movff	terminal_operation@tx,terminal_time@tx
  3095  010064  C0C6  F0BD         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3096  010068  C0C7  F0BE         	movff	terminal_operation@op0,terminal_time@op0
  3097  01006C  C0C8  F0BF         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3098  010070  C0C9  F0C0         	movff	terminal_operation@op1,terminal_time@op1
  3099  010074  C0CA  F0C1         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3100  010078  C0CB  F0C2         	movff	terminal_operation@op2,terminal_time@op2
  3101  01007C  C0CC  F0C3         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3102  010080  EC84  F084         	call	_terminal_time	;wreg free
  3103                           
  3104                           ;PIC18F27J53-killifish_light06.c: 188: if (!strcmp(op0, "RESET();")) {
  3105  010084  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3106  010088  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3107  01008C  0E69               	movlw	low STR_44
  3108  01008E  0100               	movlb	0	; () banked
  3109  010090  6F62               	movwf	strcmp@s2& (0+255),b
  3110  010092  0EFF               	movlw	high STR_44
  3111  010094  0100               	movlb	0	; () banked
  3112  010096  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3113  010098  EC56  F0A0         	call	_strcmp	;wreg free
  3114  01009C  0100               	movlb	0	; () banked
  3115  01009E  5160               	movf	?_strcmp& (0+255),w,b
  3116  0100A0  0100               	movlb	0	; () banked
  3117  0100A2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3118  0100A4  B4D8               	btfsc	status,2,c
  3119                           
  3120                           ; BSR set to: 0
  3121  0100A6  00FF               	reset		;# 
  3122                           
  3123                           ;PIC18F27J53-killifish_light06.c: 190: }
  3124                           ;PIC18F27J53-killifish_light06.c: 191: if (!strcmp(op0, "bootload")) {
  3125  0100A8  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3126  0100AC  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3127  0100B0  0E72               	movlw	low STR_45
  3128  0100B2  0100               	movlb	0	; () banked
  3129  0100B4  6F62               	movwf	strcmp@s2& (0+255),b
  3130  0100B6  0EFF               	movlw	high STR_45
  3131  0100B8  0100               	movlb	0	; () banked
  3132  0100BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3133  0100BC  EC56  F0A0         	call	_strcmp	;wreg free
  3134  0100C0  0100               	movlb	0	; () banked
  3135  0100C2  5160               	movf	?_strcmp& (0+255),w,b
  3136  0100C4  0100               	movlb	0	; () banked
  3137  0100C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3138  0100C8  B4D8               	btfsc	status,2,c
  3139                           
  3140                           ; BSR set to: 0
  3141  0100CA  EF0E F000          	goto	28	;# 
  3142                           
  3143                           ;PIC18F27J53-killifish_light06.c: 193: }
  3144                           ;PIC18F27J53-killifish_light06.c: 194: if (!strcmp(op0, "set")) {
  3145  0100CE  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3146  0100D2  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3147  0100D6  0ED6               	movlw	low STR_46
  3148  0100D8  0100               	movlb	0	; () banked
  3149  0100DA  6F62               	movwf	strcmp@s2& (0+255),b
  3150  0100DC  0EFF               	movlw	high STR_46
  3151  0100DE  0100               	movlb	0	; () banked
  3152  0100E0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3153  0100E2  EC56  F0A0         	call	_strcmp	;wreg free
  3154  0100E6  0100               	movlb	0	; () banked
  3155  0100E8  5160               	movf	?_strcmp& (0+255),w,b
  3156  0100EA  0100               	movlb	0	; () banked
  3157  0100EC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3158  0100EE  A4D8               	btfss	status,2,c
  3159  0100F0  D03C               	goto	l9249
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;PIC18F27J53-killifish_light06.c: 195: if (!strcmp(op1, "sync")) {
  3163  0100F2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3164  0100F6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3165  0100FA  0EAD               	movlw	low STR_47
  3166  0100FC  0100               	movlb	0	; () banked
  3167  0100FE  6F62               	movwf	strcmp@s2& (0+255),b
  3168  010100  0EFF               	movlw	high STR_47
  3169  010102  0100               	movlb	0	; () banked
  3170  010104  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3171  010106  EC56  F0A0         	call	_strcmp	;wreg free
  3172  01010A  0100               	movlb	0	; () banked
  3173  01010C  5160               	movf	?_strcmp& (0+255),w,b
  3174  01010E  0100               	movlb	0	; () banked
  3175  010110  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3176  010112  A4D8               	btfss	status,2,c
  3177  010114  D003               	goto	l9243
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;PIC18F27J53-killifish_light06.c: 196: light_mode = TIME_SYNC_mode;
  3181  010116  0E00               	movlw	0
  3182  010118  0100               	movlb	0	; () banked
  3183  01011A  6FF1               	movwf	_light_mode& (0+255),b
  3184  01011C                     l9243:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;PIC18F27J53-killifish_light06.c: 197: }
  3188                           ;PIC18F27J53-killifish_light06.c: 198: if (!strcmp(op1, "adc") || !strcmp(op1, "ADC")) {
  3189  01011C  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3190  010120  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3191  010124  0ECE               	movlw	low STR_48
  3192  010126  0100               	movlb	0	; () banked
  3193  010128  6F62               	movwf	strcmp@s2& (0+255),b
  3194  01012A  0EFF               	movlw	high STR_48
  3195  01012C  0100               	movlb	0	; () banked
  3196  01012E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3197  010130  EC56  F0A0         	call	_strcmp	;wreg free
  3198  010134  0100               	movlb	0	; () banked
  3199  010136  5160               	movf	?_strcmp& (0+255),w,b
  3200  010138  0100               	movlb	0	; () banked
  3201  01013A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3202  01013C  B4D8               	btfsc	status,2,c
  3203  01013E  D012               	goto	l9247
  3204                           
  3205                           ; BSR set to: 0
  3206  010140  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3207  010144  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3208  010148  0EC6               	movlw	low STR_49
  3209  01014A  0100               	movlb	0	; () banked
  3210  01014C  6F62               	movwf	strcmp@s2& (0+255),b
  3211  01014E  0EFF               	movlw	high STR_49
  3212  010150  0100               	movlb	0	; () banked
  3213  010152  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3214  010154  EC56  F0A0         	call	_strcmp	;wreg free
  3215  010158  0100               	movlb	0	; () banked
  3216  01015A  5160               	movf	?_strcmp& (0+255),w,b
  3217  01015C  0100               	movlb	0	; () banked
  3218  01015E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3219  010160  A4D8               	btfss	status,2,c
  3220  010162  D003               	goto	l9249
  3221  010164                     l9247:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;PIC18F27J53-killifish_light06.c: 199: light_mode = ADC_mode;
  3225  010164  0E01               	movlw	1
  3226  010166  0100               	movlb	0	; () banked
  3227  010168  6FF1               	movwf	_light_mode& (0+255),b
  3228  01016A                     l9249:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;PIC18F27J53-killifish_light06.c: 200: }
  3232                           ;PIC18F27J53-killifish_light06.c: 201: }
  3233                           ;PIC18F27J53-killifish_light06.c: 202: if (!strcmp(op0, "pwm") || !strcmp(op0, "PWM")) {
  3234  01016A  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3235  01016E  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3236  010172  0ED2               	movlw	low STR_50
  3237  010174  0100               	movlb	0	; () banked
  3238  010176  6F62               	movwf	strcmp@s2& (0+255),b
  3239  010178  0EFF               	movlw	high STR_50
  3240  01017A  0100               	movlb	0	; () banked
  3241  01017C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3242  01017E  EC56  F0A0         	call	_strcmp	;wreg free
  3243  010182  0100               	movlb	0	; () banked
  3244  010184  5160               	movf	?_strcmp& (0+255),w,b
  3245  010186  0100               	movlb	0	; () banked
  3246  010188  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3247  01018A  B4D8               	btfsc	status,2,c
  3248  01018C  D012               	goto	l9253
  3249                           
  3250                           ; BSR set to: 0
  3251  01018E  C0C7  F060         	movff	terminal_operation@op0,strcmp@s1
  3252  010192  C0C8  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3253  010196  0ECA               	movlw	low STR_51
  3254  010198  0100               	movlb	0	; () banked
  3255  01019A  6F62               	movwf	strcmp@s2& (0+255),b
  3256  01019C  0EFF               	movlw	high STR_51
  3257  01019E  0100               	movlb	0	; () banked
  3258  0101A0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3259  0101A2  EC56  F0A0         	call	_strcmp	;wreg free
  3260  0101A6  0100               	movlb	0	; () banked
  3261  0101A8  5160               	movf	?_strcmp& (0+255),w,b
  3262  0101AA  0100               	movlb	0	; () banked
  3263  0101AC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3264  0101AE  A4D8               	btfss	status,2,c
  3265  0101B0  0012               	return	
  3266  0101B2                     l9253:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;PIC18F27J53-killifish_light06.c: 203: if (!strcmp(op1, "r") || !strcmp(op1, "R")) {
  3270  0101B2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3271  0101B6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3272  0101BA  0EA5               	movlw	low (STR_60+4)
  3273  0101BC  0100               	movlb	0	; () banked
  3274  0101BE  6F62               	movwf	strcmp@s2& (0+255),b
  3275  0101C0  0EFF               	movlw	high (STR_60+4)
  3276  0101C2  0100               	movlb	0	; () banked
  3277  0101C4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3278  0101C6  EC56  F0A0         	call	_strcmp	;wreg free
  3279  0101CA  0100               	movlb	0	; () banked
  3280  0101CC  5160               	movf	?_strcmp& (0+255),w,b
  3281  0101CE  0100               	movlb	0	; () banked
  3282  0101D0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3283  0101D2  B4D8               	btfsc	status,2,c
  3284  0101D4  D012               	goto	l9257
  3285                           
  3286                           ; BSR set to: 0
  3287  0101D6  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3288  0101DA  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3289  0101DE  0EEB               	movlw	low STR_53
  3290  0101E0  0100               	movlb	0	; () banked
  3291  0101E2  6F62               	movwf	strcmp@s2& (0+255),b
  3292  0101E4  0EFF               	movlw	high STR_53
  3293  0101E6  0100               	movlb	0	; () banked
  3294  0101E8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3295  0101EA  EC56  F0A0         	call	_strcmp	;wreg free
  3296  0101EE  0100               	movlb	0	; () banked
  3297  0101F0  5160               	movf	?_strcmp& (0+255),w,b
  3298  0101F2  0100               	movlb	0	; () banked
  3299  0101F4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3300  0101F6  A4D8               	btfss	status,2,c
  3301  0101F8  D02E               	goto	l9265
  3302  0101FA                     l9257:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;PIC18F27J53-killifish_light06.c: 204: light_mode = COMMAND_mode;
  3306  0101FA  0E02               	movlw	2
  3307  0101FC  0100               	movlb	0	; () banked
  3308  0101FE  6FF1               	movwf	_light_mode& (0+255),b
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3312  010200  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3313  010204  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3314  010208  EC7E  F092         	call	_atoi	;wreg free
  3315  01020C  C066  F0CF         	movff	?_atoi,_terminal_operation$6610
  3316  010210  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6610+1
  3317                           
  3318                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3319  010214  C0CF  F060         	movff	_terminal_operation$6610,___wmul@multiplier
  3320  010218  C0D0  F061         	movff	_terminal_operation$6610+1,___wmul@multiplier+1
  3321  01021C  0E00               	movlw	0
  3322  01021E  0100               	movlb	0	; () banked
  3323  010220  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3324  010222  0EFA               	movlw	250
  3325  010224  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3326  010226  ECE1  F0A1         	call	___wmul	;wreg free
  3327  01022A  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3328  01022E  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3329  010232  0E00               	movlw	0
  3330  010234  0100               	movlb	0	; () banked
  3331  010236  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3332  010238  0E64               	movlw	100
  3333  01023A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3334  01023C  ECE7  F098         	call	___awdiv	;wreg free
  3335  010240  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6611
  3336  010244  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6611+1
  3337                           
  3338                           ;PIC18F27J53-killifish_light06.c: 205: PWM_set(0, atoi(op2) * 250 / 100);
  3339  010248  C0D1  F075         	movff	_terminal_operation$6611,PWM_set@value
  3340  01024C  C0D2  F076         	movff	_terminal_operation$6611+1,PWM_set@value+1
  3341  010250  0E00               	movlw	0
  3342  010252  ECE0  F08D         	call	_PWM_set
  3343  010256                     l9265:
  3344                           
  3345                           ;PIC18F27J53-killifish_light06.c: 206: }
  3346                           ;PIC18F27J53-killifish_light06.c: 207: if (!strcmp(op1, "g") || !strcmp(op1, "G")) {
  3347  010256  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3348  01025A  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3349  01025E  0EF1               	movlw	low STR_54
  3350  010260  0100               	movlb	0	; () banked
  3351  010262  6F62               	movwf	strcmp@s2& (0+255),b
  3352  010264  0EFF               	movlw	high STR_54
  3353  010266  0100               	movlb	0	; () banked
  3354  010268  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3355  01026A  EC56  F0A0         	call	_strcmp	;wreg free
  3356  01026E  0100               	movlb	0	; () banked
  3357  010270  5160               	movf	?_strcmp& (0+255),w,b
  3358  010272  0100               	movlb	0	; () banked
  3359  010274  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3360  010276  B4D8               	btfsc	status,2,c
  3361  010278  D012               	goto	l9269
  3362                           
  3363                           ; BSR set to: 0
  3364  01027A  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3365  01027E  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3366  010282  0EE9               	movlw	low STR_55
  3367  010284  0100               	movlb	0	; () banked
  3368  010286  6F62               	movwf	strcmp@s2& (0+255),b
  3369  010288  0EFF               	movlw	high STR_55
  3370  01028A  0100               	movlb	0	; () banked
  3371  01028C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3372  01028E  EC56  F0A0         	call	_strcmp	;wreg free
  3373  010292  0100               	movlb	0	; () banked
  3374  010294  5160               	movf	?_strcmp& (0+255),w,b
  3375  010296  0100               	movlb	0	; () banked
  3376  010298  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3377  01029A  A4D8               	btfss	status,2,c
  3378  01029C  D02E               	goto	l9277
  3379  01029E                     l9269:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;PIC18F27J53-killifish_light06.c: 208: light_mode = COMMAND_mode;
  3383  01029E  0E02               	movlw	2
  3384  0102A0  0100               	movlb	0	; () banked
  3385  0102A2  6FF1               	movwf	_light_mode& (0+255),b
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3389  0102A4  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3390  0102A8  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3391  0102AC  EC7E  F092         	call	_atoi	;wreg free
  3392  0102B0  C066  F0CF         	movff	?_atoi,_terminal_operation$6610
  3393  0102B4  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6610+1
  3394                           
  3395                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3396  0102B8  C0CF  F060         	movff	_terminal_operation$6610,___wmul@multiplier
  3397  0102BC  C0D0  F061         	movff	_terminal_operation$6610+1,___wmul@multiplier+1
  3398  0102C0  0E00               	movlw	0
  3399  0102C2  0100               	movlb	0	; () banked
  3400  0102C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3401  0102C6  0EFA               	movlw	250
  3402  0102C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3403  0102CA  ECE1  F0A1         	call	___wmul	;wreg free
  3404  0102CE  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3405  0102D2  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3406  0102D6  0E00               	movlw	0
  3407  0102D8  0100               	movlb	0	; () banked
  3408  0102DA  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3409  0102DC  0E64               	movlw	100
  3410  0102DE  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3411  0102E0  ECE7  F098         	call	___awdiv	;wreg free
  3412  0102E4  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6611
  3413  0102E8  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6611+1
  3414                           
  3415                           ;PIC18F27J53-killifish_light06.c: 209: PWM_set(1, atoi(op2) * 250 / 100);
  3416  0102EC  C0D1  F075         	movff	_terminal_operation$6611,PWM_set@value
  3417  0102F0  C0D2  F076         	movff	_terminal_operation$6611+1,PWM_set@value+1
  3418  0102F4  0E01               	movlw	1
  3419  0102F6  ECE0  F08D         	call	_PWM_set
  3420  0102FA                     l9277:
  3421                           
  3422                           ;PIC18F27J53-killifish_light06.c: 210: }
  3423                           ;PIC18F27J53-killifish_light06.c: 211: if (!strcmp(op1, "b") || !strcmp(op1, "B")) {
  3424  0102FA  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3425  0102FE  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3426  010302  0EEF               	movlw	low STR_56
  3427  010304  0100               	movlb	0	; () banked
  3428  010306  6F62               	movwf	strcmp@s2& (0+255),b
  3429  010308  0EFF               	movlw	high STR_56
  3430  01030A  0100               	movlb	0	; () banked
  3431  01030C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3432  01030E  EC56  F0A0         	call	_strcmp	;wreg free
  3433  010312  0100               	movlb	0	; () banked
  3434  010314  5160               	movf	?_strcmp& (0+255),w,b
  3435  010316  0100               	movlb	0	; () banked
  3436  010318  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3437  01031A  B4D8               	btfsc	status,2,c
  3438  01031C  D012               	goto	l9281
  3439                           
  3440                           ; BSR set to: 0
  3441  01031E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3442  010322  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3443  010326  0EE7               	movlw	low STR_57
  3444  010328  0100               	movlb	0	; () banked
  3445  01032A  6F62               	movwf	strcmp@s2& (0+255),b
  3446  01032C  0EFF               	movlw	high STR_57
  3447  01032E  0100               	movlb	0	; () banked
  3448  010330  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3449  010332  EC56  F0A0         	call	_strcmp	;wreg free
  3450  010336  0100               	movlb	0	; () banked
  3451  010338  5160               	movf	?_strcmp& (0+255),w,b
  3452  01033A  0100               	movlb	0	; () banked
  3453  01033C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3454  01033E  A4D8               	btfss	status,2,c
  3455  010340  D02E               	goto	l9289
  3456  010342                     l9281:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;PIC18F27J53-killifish_light06.c: 212: light_mode = COMMAND_mode;
  3460  010342  0E02               	movlw	2
  3461  010344  0100               	movlb	0	; () banked
  3462  010346  6FF1               	movwf	_light_mode& (0+255),b
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3466  010348  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3467  01034C  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3468  010350  EC7E  F092         	call	_atoi	;wreg free
  3469  010354  C066  F0CF         	movff	?_atoi,_terminal_operation$6610
  3470  010358  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6610+1
  3471                           
  3472                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3473  01035C  C0CF  F060         	movff	_terminal_operation$6610,___wmul@multiplier
  3474  010360  C0D0  F061         	movff	_terminal_operation$6610+1,___wmul@multiplier+1
  3475  010364  0E00               	movlw	0
  3476  010366  0100               	movlb	0	; () banked
  3477  010368  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3478  01036A  0EFA               	movlw	250
  3479  01036C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3480  01036E  ECE1  F0A1         	call	___wmul	;wreg free
  3481  010372  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3482  010376  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3483  01037A  0E00               	movlw	0
  3484  01037C  0100               	movlb	0	; () banked
  3485  01037E  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3486  010380  0E64               	movlw	100
  3487  010382  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3488  010384  ECE7  F098         	call	___awdiv	;wreg free
  3489  010388  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6611
  3490  01038C  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6611+1
  3491                           
  3492                           ;PIC18F27J53-killifish_light06.c: 213: PWM_set(2, atoi(op2) * 250 / 100);
  3493  010390  C0D1  F075         	movff	_terminal_operation$6611,PWM_set@value
  3494  010394  C0D2  F076         	movff	_terminal_operation$6611+1,PWM_set@value+1
  3495  010398  0E02               	movlw	2
  3496  01039A  ECE0  F08D         	call	_PWM_set
  3497  01039E                     l9289:
  3498                           
  3499                           ;PIC18F27J53-killifish_light06.c: 214: }
  3500                           ;PIC18F27J53-killifish_light06.c: 215: if (!strcmp(op1, "w") || !strcmp(op1, "W")) {
  3501  01039E  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3502  0103A2  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3503  0103A6  0EF3               	movlw	low STR_58
  3504  0103A8  0100               	movlb	0	; () banked
  3505  0103AA  6F62               	movwf	strcmp@s2& (0+255),b
  3506  0103AC  0EFF               	movlw	high STR_58
  3507  0103AE  0100               	movlb	0	; () banked
  3508  0103B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3509  0103B2  EC56  F0A0         	call	_strcmp	;wreg free
  3510  0103B6  0100               	movlb	0	; () banked
  3511  0103B8  5160               	movf	?_strcmp& (0+255),w,b
  3512  0103BA  0100               	movlb	0	; () banked
  3513  0103BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3514  0103BE  B4D8               	btfsc	status,2,c
  3515  0103C0  D012               	goto	l9293
  3516                           
  3517                           ; BSR set to: 0
  3518  0103C2  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3519  0103C6  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3520  0103CA  0EED               	movlw	low STR_59
  3521  0103CC  0100               	movlb	0	; () banked
  3522  0103CE  6F62               	movwf	strcmp@s2& (0+255),b
  3523  0103D0  0EFF               	movlw	high STR_59
  3524  0103D2  0100               	movlb	0	; () banked
  3525  0103D4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3526  0103D6  EC56  F0A0         	call	_strcmp	;wreg free
  3527  0103DA  0100               	movlb	0	; () banked
  3528  0103DC  5160               	movf	?_strcmp& (0+255),w,b
  3529  0103DE  0100               	movlb	0	; () banked
  3530  0103E0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3531  0103E2  A4D8               	btfss	status,2,c
  3532  0103E4  D02E               	goto	l9301
  3533  0103E6                     l9293:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;PIC18F27J53-killifish_light06.c: 216: light_mode = COMMAND_mode;
  3537  0103E6  0E02               	movlw	2
  3538  0103E8  0100               	movlb	0	; () banked
  3539  0103EA  6FF1               	movwf	_light_mode& (0+255),b
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3543  0103EC  C0CB  F066         	movff	terminal_operation@op2,atoi@s
  3544  0103F0  C0CC  F067         	movff	terminal_operation@op2+1,atoi@s+1
  3545  0103F4  EC7E  F092         	call	_atoi	;wreg free
  3546  0103F8  C066  F0CF         	movff	?_atoi,_terminal_operation$6610
  3547  0103FC  C067  F0D0         	movff	?_atoi+1,_terminal_operation$6610+1
  3548                           
  3549                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3550  010400  C0CF  F060         	movff	_terminal_operation$6610,___wmul@multiplier
  3551  010404  C0D0  F061         	movff	_terminal_operation$6610+1,___wmul@multiplier+1
  3552  010408  0E00               	movlw	0
  3553  01040A  0100               	movlb	0	; () banked
  3554  01040C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3555  01040E  0EFA               	movlw	250
  3556  010410  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3557  010412  ECE1  F0A1         	call	___wmul	;wreg free
  3558  010416  C060  F06D         	movff	?___wmul,___awdiv@dividend
  3559  01041A  C061  F06E         	movff	?___wmul+1,___awdiv@dividend+1
  3560  01041E  0E00               	movlw	0
  3561  010420  0100               	movlb	0	; () banked
  3562  010422  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  3563  010424  0E64               	movlw	100
  3564  010426  6F6F               	movwf	___awdiv@divisor& (0+255),b
  3565  010428  ECE7  F098         	call	___awdiv	;wreg free
  3566  01042C  C06D  F0D1         	movff	?___awdiv,_terminal_operation$6611
  3567  010430  C06E  F0D2         	movff	?___awdiv+1,_terminal_operation$6611+1
  3568                           
  3569                           ;PIC18F27J53-killifish_light06.c: 217: PWM_set(3, atoi(op2) * 250 / 100);
  3570  010434  C0D1  F075         	movff	_terminal_operation$6611,PWM_set@value
  3571  010438  C0D2  F076         	movff	_terminal_operation$6611+1,PWM_set@value+1
  3572  01043C  0E03               	movlw	3
  3573  01043E  ECE0  F08D         	call	_PWM_set
  3574  010442                     l9301:
  3575                           
  3576                           ;PIC18F27J53-killifish_light06.c: 218: }
  3577                           ;PIC18F27J53-killifish_light06.c: 219: if (!strcmp(op1, "clear")) {
  3578  010442  C0C9  F060         	movff	terminal_operation@op1,strcmp@s1
  3579  010446  C0CA  F061         	movff	terminal_operation@op1+1,strcmp@s1+1
  3580  01044A  0EA1               	movlw	low STR_60
  3581  01044C  0100               	movlb	0	; () banked
  3582  01044E  6F62               	movwf	strcmp@s2& (0+255),b
  3583  010450  0EFF               	movlw	high STR_60
  3584  010452  0100               	movlb	0	; () banked
  3585  010454  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3586  010456  EC56  F0A0         	call	_strcmp	;wreg free
  3587  01045A  0100               	movlb	0	; () banked
  3588  01045C  5160               	movf	?_strcmp& (0+255),w,b
  3589  01045E  0100               	movlb	0	; () banked
  3590  010460  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3591  010462  A4D8               	btfss	status,2,c
  3592  010464  0012               	return	
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;PIC18F27J53-killifish_light06.c: 220: light_mode = COMMAND_mode;
  3596  010466  0E02               	movlw	2
  3597  010468  0100               	movlb	0	; () banked
  3598  01046A  6FF1               	movwf	_light_mode& (0+255),b
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;PIC18F27J53-killifish_light06.c: 221: PWM_set(0, 0);
  3602  01046C  0E00               	movlw	0
  3603  01046E  0100               	movlb	0	; () banked
  3604  010470  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3605  010472  0E00               	movlw	0
  3606  010474  6F75               	movwf	PWM_set@value& (0+255),b
  3607  010476  0E00               	movlw	0
  3608  010478  ECE0  F08D         	call	_PWM_set
  3609                           
  3610                           ;PIC18F27J53-killifish_light06.c: 222: PWM_set(1, 0);
  3611  01047C  0E00               	movlw	0
  3612  01047E  0100               	movlb	0	; () banked
  3613  010480  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3614  010482  0E00               	movlw	0
  3615  010484  6F75               	movwf	PWM_set@value& (0+255),b
  3616  010486  0E01               	movlw	1
  3617  010488  ECE0  F08D         	call	_PWM_set
  3618                           
  3619                           ;PIC18F27J53-killifish_light06.c: 223: PWM_set(2, 0);
  3620  01048C  0E00               	movlw	0
  3621  01048E  0100               	movlb	0	; () banked
  3622  010490  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3623  010492  0E00               	movlw	0
  3624  010494  6F75               	movwf	PWM_set@value& (0+255),b
  3625  010496  0E02               	movlw	2
  3626  010498  ECE0  F08D         	call	_PWM_set
  3627                           
  3628                           ;PIC18F27J53-killifish_light06.c: 224: PWM_set(3, 0);
  3629  01049C  0E00               	movlw	0
  3630  01049E  0100               	movlb	0	; () banked
  3631  0104A0  6F76               	movwf	(PWM_set@value+1)& (0+255),b
  3632  0104A2  0E00               	movlw	0
  3633  0104A4  6F75               	movwf	PWM_set@value& (0+255),b
  3634  0104A6  0E03               	movlw	3
  3635  0104A8  ECE0  F08D         	call	_PWM_set
  3636  0104AC  0012               	return	
  3637  0104AE                     __end_of_terminal_operation:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           postdec1	equ	0xFE5
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _terminal_time *****************
  3657 ;; Defined at:
  3658 ;;		line 93 in file "../My_library/My_terminal.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  tx              2   92[BANK0 ] PTR struct ringbuf
  3661 ;;		 -> usb_tx(8), 
  3662 ;;  op0             2   94[BANK0 ] PTR unsigned char 
  3663 ;;		 -> terminal_task@op0(25), 
  3664 ;;  op1             2   96[BANK0 ] PTR unsigned char 
  3665 ;;		 -> terminal_task@op1(25), 
  3666 ;;  op2             2   98[BANK0 ] PTR unsigned char 
  3667 ;;		 -> terminal_task@op2(25), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3679 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;Total ram usage:        9 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:   17
  3686 ;; This function calls:
  3687 ;;		_atoi
  3688 ;;		_month_length
  3689 ;;		_print_time
  3690 ;;		_strcmp
  3691 ;;		_terminal_at_hand
  3692 ;; This function is called by:
  3693 ;;		_terminal_operation
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text3
  3698  010908                     __ptext3:
  3699                           	opt stack 0
  3700  010908                     _terminal_time:
  3701                           	opt stack 11
  3702                           
  3703                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3704                           
  3705                           ;incstack = 0
  3706  010908  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3707  01090C  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3708  010910  0E5E               	movlw	low STR_25
  3709  010912  0100               	movlb	0	; () banked
  3710  010914  6F62               	movwf	strcmp@s2& (0+255),b
  3711  010916  0EFF               	movlw	high STR_25
  3712  010918  0100               	movlb	0	; () banked
  3713  01091A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3714  01091C  EC56  F0A0         	call	_strcmp	;wreg free
  3715  010920  0100               	movlb	0	; () banked
  3716  010922  5160               	movf	?_strcmp& (0+255),w,b
  3717  010924  0100               	movlb	0	; () banked
  3718  010926  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3719  010928  B4D8               	btfsc	status,2,c
  3720  01092A  D012               	goto	l8979
  3721                           
  3722                           ; BSR set to: 0
  3723  01092C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3724  010930  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3725  010934  0EE3               	movlw	low (STR_27+1)
  3726  010936  0100               	movlb	0	; () banked
  3727  010938  6F62               	movwf	strcmp@s2& (0+255),b
  3728  01093A  0EFF               	movlw	high (STR_27+1)
  3729  01093C  0100               	movlb	0	; () banked
  3730  01093E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3731  010940  EC56  F0A0         	call	_strcmp	;wreg free
  3732  010944  0100               	movlb	0	; () banked
  3733  010946  5160               	movf	?_strcmp& (0+255),w,b
  3734  010948  0100               	movlb	0	; () banked
  3735  01094A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3736  01094C  A4D8               	btfss	status,2,c
  3737  01094E  D006               	goto	l8981
  3738  010950                     l8979:
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;My_terminal.c: 95: print_time(tx);
  3742  010950  C0BC  F095         	movff	terminal_time@tx,print_time@tx
  3743  010954  C0BD  F096         	movff	terminal_time@tx+1,print_time@tx+1
  3744  010958  ECD5  F09D         	call	_print_time	;wreg free
  3745  01095C                     l8981:
  3746                           
  3747                           ;My_terminal.c: 96: }
  3748                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3749  01095C  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3750  010960  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3751  010964  0EE2               	movlw	low STR_27
  3752  010966  0100               	movlb	0	; () banked
  3753  010968  6F62               	movwf	strcmp@s2& (0+255),b
  3754  01096A  0EFF               	movlw	high STR_27
  3755  01096C  0100               	movlb	0	; () banked
  3756  01096E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3757  010970  EC56  F0A0         	call	_strcmp	;wreg free
  3758  010974  0100               	movlb	0	; () banked
  3759  010976  5160               	movf	?_strcmp& (0+255),w,b
  3760  010978  0100               	movlb	0	; () banked
  3761  01097A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3762  01097C  B4D8               	btfsc	status,2,c
  3763  01097E  D012               	goto	l8985
  3764                           
  3765                           ; BSR set to: 0
  3766  010980  C0BE  F060         	movff	terminal_time@op0,strcmp@s1
  3767  010984  C0BF  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3768  010988  0E52               	movlw	low STR_28
  3769  01098A  0100               	movlb	0	; () banked
  3770  01098C  6F62               	movwf	strcmp@s2& (0+255),b
  3771  01098E  0EFF               	movlw	high STR_28
  3772  010990  0100               	movlb	0	; () banked
  3773  010992  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3774  010994  EC56  F0A0         	call	_strcmp	;wreg free
  3775  010998  0100               	movlb	0	; () banked
  3776  01099A  5160               	movf	?_strcmp& (0+255),w,b
  3777  01099C  0100               	movlb	0	; () banked
  3778  01099E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3779  0109A0  A4D8               	btfss	status,2,c
  3780  0109A2  0012               	return	
  3781  0109A4                     l8985:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3785  0109A4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3786  0109A8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3787  0109AC  0EE0               	movlw	low (STR_34+2)
  3788  0109AE  0100               	movlb	0	; () banked
  3789  0109B0  6F62               	movwf	strcmp@s2& (0+255),b
  3790  0109B2  0EFF               	movlw	high (STR_34+2)
  3791  0109B4  0100               	movlb	0	; () banked
  3792  0109B6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3793  0109B8  EC56  F0A0         	call	_strcmp	;wreg free
  3794  0109BC  0100               	movlb	0	; () banked
  3795  0109BE  5160               	movf	?_strcmp& (0+255),w,b
  3796  0109C0  0100               	movlb	0	; () banked
  3797  0109C2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3798  0109C4  B4D8               	btfsc	status,2,c
  3799  0109C6  D012               	goto	l8989
  3800                           
  3801                           ; BSR set to: 0
  3802  0109C8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3803  0109CC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3804  0109D0  0EB7               	movlw	low STR_30
  3805  0109D2  0100               	movlb	0	; () banked
  3806  0109D4  6F62               	movwf	strcmp@s2& (0+255),b
  3807  0109D6  0EFF               	movlw	high STR_30
  3808  0109D8  0100               	movlb	0	; () banked
  3809  0109DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3810  0109DC  EC56  F0A0         	call	_strcmp	;wreg free
  3811  0109E0  0100               	movlb	0	; () banked
  3812  0109E2  5160               	movf	?_strcmp& (0+255),w,b
  3813  0109E4  0100               	movlb	0	; () banked
  3814  0109E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3815  0109E8  A4D8               	btfss	status,2,c
  3816  0109EA  D01C               	goto	l8991
  3817  0109EC                     l8989:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3821  0109EC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3822  0109F0  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3823  0109F4  0E54               	movlw	low (_now+10)
  3824  0109F6  0100               	movlb	0	; () banked
  3825  0109F8  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3826  0109FA  0E01               	movlw	high (_now+10)
  3827  0109FC  0100               	movlb	0	; () banked
  3828  0109FE  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3829  010A00  0E00               	movlw	0
  3830  010A02  0100               	movlb	0	; () banked
  3831  010A04  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3832  010A06  0E63               	movlw	99
  3833  010A08  0100               	movlb	0	; () banked
  3834  010A0A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3835  010A0C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3836  010A10  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3837  010A14  EC7E  F092         	call	_atoi	;wreg free
  3838  010A18  0100               	movlb	0	; () banked
  3839  010A1A  5166               	movf	?_atoi& (0+255),w,b
  3840  010A1C  0100               	movlb	0	; () banked
  3841  010A1E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3842  010A20  ECF4  F09F         	call	_terminal_at_hand	;wreg free
  3843  010A24                     l8991:
  3844                           
  3845                           ;My_terminal.c: 100: }
  3846                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3847  010A24  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3848  010A28  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3849  010A2C  0ECC               	movlw	low (STR_51+2)
  3850  010A2E  0100               	movlb	0	; () banked
  3851  010A30  6F62               	movwf	strcmp@s2& (0+255),b
  3852  010A32  0EFF               	movlw	high (STR_51+2)
  3853  010A34  0100               	movlb	0	; () banked
  3854  010A36  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3855  010A38  EC56  F0A0         	call	_strcmp	;wreg free
  3856  010A3C  0100               	movlb	0	; () banked
  3857  010A3E  5160               	movf	?_strcmp& (0+255),w,b
  3858  010A40  0100               	movlb	0	; () banked
  3859  010A42  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3860  010A44  B4D8               	btfsc	status,2,c
  3861  010A46  D012               	goto	l8995
  3862                           
  3863                           ; BSR set to: 0
  3864  010A48  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3865  010A4C  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3866  010A50  0EA7               	movlw	low STR_32
  3867  010A52  0100               	movlb	0	; () banked
  3868  010A54  6F62               	movwf	strcmp@s2& (0+255),b
  3869  010A56  0EFF               	movlw	high STR_32
  3870  010A58  0100               	movlb	0	; () banked
  3871  010A5A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3872  010A5C  EC56  F0A0         	call	_strcmp	;wreg free
  3873  010A60  0100               	movlb	0	; () banked
  3874  010A62  5160               	movf	?_strcmp& (0+255),w,b
  3875  010A64  0100               	movlb	0	; () banked
  3876  010A66  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3877  010A68  A4D8               	btfss	status,2,c
  3878  010A6A  D01C               	goto	l8997
  3879  010A6C                     l8995:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3883  010A6C  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3884  010A70  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3885  010A74  0E53               	movlw	low (_now+9)
  3886  010A76  0100               	movlb	0	; () banked
  3887  010A78  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3888  010A7A  0E01               	movlw	high (_now+9)
  3889  010A7C  0100               	movlb	0	; () banked
  3890  010A7E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3891  010A80  0E01               	movlw	1
  3892  010A82  0100               	movlb	0	; () banked
  3893  010A84  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3894  010A86  0E0C               	movlw	12
  3895  010A88  0100               	movlb	0	; () banked
  3896  010A8A  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  3897  010A8C  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3898  010A90  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3899  010A94  EC7E  F092         	call	_atoi	;wreg free
  3900  010A98  0100               	movlb	0	; () banked
  3901  010A9A  5166               	movf	?_atoi& (0+255),w,b
  3902  010A9C  0100               	movlb	0	; () banked
  3903  010A9E  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3904  010AA0  ECF4  F09F         	call	_terminal_at_hand	;wreg free
  3905  010AA4                     l8997:
  3906                           
  3907                           ;My_terminal.c: 103: }
  3908                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3909  010AA4  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3910  010AA8  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3911  010AAC  0EC4               	movlw	low (STR_1+3)
  3912  010AAE  0100               	movlb	0	; () banked
  3913  010AB0  6F62               	movwf	strcmp@s2& (0+255),b
  3914  010AB2  0EFF               	movlw	high (STR_1+3)
  3915  010AB4  0100               	movlb	0	; () banked
  3916  010AB6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3917  010AB8  EC56  F0A0         	call	_strcmp	;wreg free
  3918  010ABC  0100               	movlb	0	; () banked
  3919  010ABE  5160               	movf	?_strcmp& (0+255),w,b
  3920  010AC0  0100               	movlb	0	; () banked
  3921  010AC2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3922  010AC4  B4D8               	btfsc	status,2,c
  3923  010AC6  D012               	goto	l9001
  3924                           
  3925                           ; BSR set to: 0
  3926  010AC8  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3927  010ACC  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3928  010AD0  0EDE               	movlw	low STR_34
  3929  010AD2  0100               	movlb	0	; () banked
  3930  010AD4  6F62               	movwf	strcmp@s2& (0+255),b
  3931  010AD6  0EFF               	movlw	high STR_34
  3932  010AD8  0100               	movlb	0	; () banked
  3933  010ADA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3934  010ADC  EC56  F0A0         	call	_strcmp	;wreg free
  3935  010AE0  0100               	movlb	0	; () banked
  3936  010AE2  5160               	movf	?_strcmp& (0+255),w,b
  3937  010AE4  0100               	movlb	0	; () banked
  3938  010AE6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3939  010AE8  A4D8               	btfss	status,2,c
  3940  010AEA  D023               	goto	l9005
  3941  010AEC                     l9001:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3945  010AEC  C153  F066         	movff	_now+9,month_length@month
  3946  010AF0  0101               	movlb	1	; () banked
  3947  010AF2  5154               	movf	(_now+10)& (0+255),w,b
  3948  010AF4  EC5B  F094         	call	_month_length
  3949  010AF8  0100               	movlb	0	; () banked
  3950  010AFA  6FC4               	movwf	_terminal_time$6609& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3954  010AFC  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  3955  010B00  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3956  010B04  0E52               	movlw	low (_now+8)
  3957  010B06  0100               	movlb	0	; () banked
  3958  010B08  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  3959  010B0A  0E01               	movlw	high (_now+8)
  3960  010B0C  0100               	movlb	0	; () banked
  3961  010B0E  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3962  010B10  0E01               	movlw	1
  3963  010B12  0100               	movlb	0	; () banked
  3964  010B14  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  3965  010B16  C0C4  F0BA         	movff	_terminal_time$6609,terminal_at_hand@max
  3966  010B1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  3967  010B1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  3968  010B22  EC7E  F092         	call	_atoi	;wreg free
  3969  010B26  0100               	movlb	0	; () banked
  3970  010B28  5166               	movf	?_atoi& (0+255),w,b
  3971  010B2A  0100               	movlb	0	; () banked
  3972  010B2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  3973  010B2E  ECF4  F09F         	call	_terminal_at_hand	;wreg free
  3974  010B32                     l9005:
  3975                           
  3976                           ;My_terminal.c: 106: }
  3977                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3978  010B32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3979  010B36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3980  010B3A  0EAB               	movlw	low (STR_32+4)
  3981  010B3C  0100               	movlb	0	; () banked
  3982  010B3E  6F62               	movwf	strcmp@s2& (0+255),b
  3983  010B40  0EFF               	movlw	high (STR_32+4)
  3984  010B42  0100               	movlb	0	; () banked
  3985  010B44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3986  010B46  EC56  F0A0         	call	_strcmp	;wreg free
  3987  010B4A  0100               	movlb	0	; () banked
  3988  010B4C  5160               	movf	?_strcmp& (0+255),w,b
  3989  010B4E  0100               	movlb	0	; () banked
  3990  010B50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3991  010B52  B4D8               	btfsc	status,2,c
  3992  010B54  D012               	goto	l9009
  3993                           
  3994                           ; BSR set to: 0
  3995  010B56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  3996  010B5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3997  010B5E  0EBC               	movlw	low STR_36
  3998  010B60  0100               	movlb	0	; () banked
  3999  010B62  6F62               	movwf	strcmp@s2& (0+255),b
  4000  010B64  0EFF               	movlw	high STR_36
  4001  010B66  0100               	movlb	0	; () banked
  4002  010B68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4003  010B6A  EC56  F0A0         	call	_strcmp	;wreg free
  4004  010B6E  0100               	movlb	0	; () banked
  4005  010B70  5160               	movf	?_strcmp& (0+255),w,b
  4006  010B72  0100               	movlb	0	; () banked
  4007  010B74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4008  010B76  A4D8               	btfss	status,2,c
  4009  010B78  D01C               	goto	l9011
  4010  010B7A                     l9009:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  4014  010B7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4015  010B7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4016  010B82  0E50               	movlw	low (_now+6)
  4017  010B84  0100               	movlb	0	; () banked
  4018  010B86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4019  010B88  0E01               	movlw	high (_now+6)
  4020  010B8A  0100               	movlb	0	; () banked
  4021  010B8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4022  010B8E  0E00               	movlw	0
  4023  010B90  0100               	movlb	0	; () banked
  4024  010B92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4025  010B94  0E17               	movlw	23
  4026  010B96  0100               	movlb	0	; () banked
  4027  010B98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4028  010B9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4029  010B9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4030  010BA2  EC7E  F092         	call	_atoi	;wreg free
  4031  010BA6  0100               	movlb	0	; () banked
  4032  010BA8  5166               	movf	?_atoi& (0+255),w,b
  4033  010BAA  0100               	movlb	0	; () banked
  4034  010BAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4035  010BAE  ECF4  F09F         	call	_terminal_at_hand	;wreg free
  4036  010BB2                     l9011:
  4037                           
  4038                           ;My_terminal.c: 109: }
  4039                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  4040  010BB2  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4041  010BB6  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4042  010BBA  0ED4               	movlw	low (STR_50+2)
  4043  010BBC  0100               	movlb	0	; () banked
  4044  010BBE  6F62               	movwf	strcmp@s2& (0+255),b
  4045  010BC0  0EFF               	movlw	high (STR_50+2)
  4046  010BC2  0100               	movlb	0	; () banked
  4047  010BC4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4048  010BC6  EC56  F0A0         	call	_strcmp	;wreg free
  4049  010BCA  0100               	movlb	0	; () banked
  4050  010BCC  5160               	movf	?_strcmp& (0+255),w,b
  4051  010BCE  0100               	movlb	0	; () banked
  4052  010BD0  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4053  010BD2  B4D8               	btfsc	status,2,c
  4054  010BD4  D012               	goto	l9015
  4055                           
  4056                           ; BSR set to: 0
  4057  010BD6  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4058  010BDA  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4059  010BDE  0E9A               	movlw	low STR_38
  4060  010BE0  0100               	movlb	0	; () banked
  4061  010BE2  6F62               	movwf	strcmp@s2& (0+255),b
  4062  010BE4  0EFF               	movlw	high STR_38
  4063  010BE6  0100               	movlb	0	; () banked
  4064  010BE8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4065  010BEA  EC56  F0A0         	call	_strcmp	;wreg free
  4066  010BEE  0100               	movlb	0	; () banked
  4067  010BF0  5160               	movf	?_strcmp& (0+255),w,b
  4068  010BF2  0100               	movlb	0	; () banked
  4069  010BF4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4070  010BF6  A4D8               	btfss	status,2,c
  4071  010BF8  D01C               	goto	l9017
  4072  010BFA                     l9015:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  4076  010BFA  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4077  010BFE  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4078  010C02  0E4F               	movlw	low (_now+5)
  4079  010C04  0100               	movlb	0	; () banked
  4080  010C06  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4081  010C08  0E01               	movlw	high (_now+5)
  4082  010C0A  0100               	movlb	0	; () banked
  4083  010C0C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4084  010C0E  0E00               	movlw	0
  4085  010C10  0100               	movlb	0	; () banked
  4086  010C12  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4087  010C14  0E3B               	movlw	59
  4088  010C16  0100               	movlb	0	; () banked
  4089  010C18  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4090  010C1A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4091  010C1E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4092  010C22  EC7E  F092         	call	_atoi	;wreg free
  4093  010C26  0100               	movlb	0	; () banked
  4094  010C28  5166               	movf	?_atoi& (0+255),w,b
  4095  010C2A  0100               	movlb	0	; () banked
  4096  010C2C  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4097  010C2E  ECF4  F09F         	call	_terminal_at_hand	;wreg free
  4098  010C32                     l9017:
  4099                           
  4100                           ;My_terminal.c: 112: }
  4101                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  4102  010C32  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4103  010C36  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4104  010C3A  0EF5               	movlw	low STR_39
  4105  010C3C  0100               	movlb	0	; () banked
  4106  010C3E  6F62               	movwf	strcmp@s2& (0+255),b
  4107  010C40  0EFF               	movlw	high STR_39
  4108  010C42  0100               	movlb	0	; () banked
  4109  010C44  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4110  010C46  EC56  F0A0         	call	_strcmp	;wreg free
  4111  010C4A  0100               	movlb	0	; () banked
  4112  010C4C  5160               	movf	?_strcmp& (0+255),w,b
  4113  010C4E  0100               	movlb	0	; () banked
  4114  010C50  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4115  010C52  B4D8               	btfsc	status,2,c
  4116  010C54  D012               	goto	l9021
  4117                           
  4118                           ; BSR set to: 0
  4119  010C56  C0C0  F060         	movff	terminal_time@op1,strcmp@s1
  4120  010C5A  C0C1  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  4121  010C5E  0E93               	movlw	low STR_40
  4122  010C60  0100               	movlb	0	; () banked
  4123  010C62  6F62               	movwf	strcmp@s2& (0+255),b
  4124  010C64  0EFF               	movlw	high STR_40
  4125  010C66  0100               	movlb	0	; () banked
  4126  010C68  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  4127  010C6A  EC56  F0A0         	call	_strcmp	;wreg free
  4128  010C6E  0100               	movlb	0	; () banked
  4129  010C70  5160               	movf	?_strcmp& (0+255),w,b
  4130  010C72  0100               	movlb	0	; () banked
  4131  010C74  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  4132  010C76  A4D8               	btfss	status,2,c
  4133  010C78  0012               	return	
  4134  010C7A                     l9021:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  4138  010C7A  C0BC  F0B5         	movff	terminal_time@tx,terminal_at_hand@tx
  4139  010C7E  C0BD  F0B6         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  4140  010C82  0E4E               	movlw	low (_now+4)
  4141  010C84  0100               	movlb	0	; () banked
  4142  010C86  6FB7               	movwf	terminal_at_hand@hand& (0+255),b
  4143  010C88  0E01               	movlw	high (_now+4)
  4144  010C8A  0100               	movlb	0	; () banked
  4145  010C8C  6FB8               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  4146  010C8E  0E00               	movlw	0
  4147  010C90  0100               	movlb	0	; () banked
  4148  010C92  6FB9               	movwf	terminal_at_hand@min& (0+255),b
  4149  010C94  0E3B               	movlw	59
  4150  010C96  0100               	movlb	0	; () banked
  4151  010C98  6FBA               	movwf	terminal_at_hand@max& (0+255),b
  4152  010C9A  C0C2  F066         	movff	terminal_time@op2,atoi@s
  4153  010C9E  C0C3  F067         	movff	terminal_time@op2+1,atoi@s+1
  4154  010CA2  EC7E  F092         	call	_atoi	;wreg free
  4155  010CA6  0100               	movlb	0	; () banked
  4156  010CA8  5166               	movf	?_atoi& (0+255),w,b
  4157  010CAA  0100               	movlb	0	; () banked
  4158  010CAC  6FBB               	movwf	terminal_at_hand@value& (0+255),b
  4159  010CAE  ECF4  F09F         	call	_terminal_at_hand	;wreg free
  4160  010CB2  0012               	return	
  4161  010CB4                     __end_of_terminal_time:
  4162                           	opt stack 0
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           postdec1	equ	0xFE5
  4173                           fsr1h	equ	0xFE2
  4174                           fsr1l	equ	0xFE1
  4175                           indf2	equ	0xFDF
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function _terminal_at_hand *****************
  4181 ;; Defined at:
  4182 ;;		line 82 in file "../My_library/My_terminal.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  tx              2   85[BANK0 ] PTR struct ringbuf
  4185 ;;		 -> usb_tx(8), 
  4186 ;;  hand            2   87[BANK0 ] PTR unsigned char 
  4187 ;;		 -> now(14), 
  4188 ;;  min             1   89[BANK0 ] unsigned char 
  4189 ;;  max             1   90[BANK0 ] unsigned char 
  4190 ;;  value           1   91[BANK0 ] unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;		None               void
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4202 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4205 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;Total ram usage:        7 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:   16
  4209 ;; This function calls:
  4210 ;;		_RTCC_from_caltime
  4211 ;;		_print_time
  4212 ;;		_ringbuf_put_str
  4213 ;; This function is called by:
  4214 ;;		_terminal_time
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text4
  4219  013FE8                     __ptext4:
  4220                           	opt stack 0
  4221  013FE8                     _terminal_at_hand:
  4222                           	opt stack 11
  4223                           
  4224                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  4225                           
  4226                           ;incstack = 0
  4227  013FE8  0100               	movlb	0	; () banked
  4228  013FEA  51B9               	movf	terminal_at_hand@min& (0+255),w,b
  4229  013FEC  0100               	movlb	0	; () banked
  4230  013FEE  5DBB               	subwf	terminal_at_hand@value& (0+255),w,b
  4231  013FF0  A0D8               	btfss	status,0,c
  4232  013FF2  D01E               	goto	l8735
  4233                           
  4234                           ; BSR set to: 0
  4235  013FF4  0100               	movlb	0	; () banked
  4236  013FF6  51BB               	movf	terminal_at_hand@value& (0+255),w,b
  4237  013FF8  0100               	movlb	0	; () banked
  4238  013FFA  5DBA               	subwf	terminal_at_hand@max& (0+255),w,b
  4239  013FFC  A0D8               	btfss	status,0,c
  4240  013FFE  D018               	goto	l8735
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;My_terminal.c: 84: *hand = value;
  4244  014000  C0B7  FFD9         	movff	terminal_at_hand@hand,fsr2l
  4245  014004  C0B8  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  4246  014008  C0BB  FFDF         	movff	terminal_at_hand@value,indf2
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  4250  01400C  0E4A               	movlw	low _now
  4251  01400E  0100               	movlb	0	; () banked
  4252  014010  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  4253  014012  0E01               	movlw	high _now
  4254  014014  0100               	movlb	0	; () banked
  4255  014016  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  4256  014018  ECC7  F0A2         	call	_RTCC_from_caltime	;wreg free
  4257                           
  4258                           ;My_terminal.c: 86: time_change_flag = 1;
  4259  01401C  0E01               	movlw	1
  4260  01401E  0100               	movlb	0	; () banked
  4261  014020  6FF2               	movwf	_time_change_flag& (0+255),b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;My_terminal.c: 87: print_time(tx);
  4265  014022  C0B5  F095         	movff	terminal_at_hand@tx,print_time@tx
  4266  014026  C0B6  F096         	movff	terminal_at_hand@tx+1,print_time@tx+1
  4267  01402A  ECD5  F09D         	call	_print_time	;wreg free
  4268                           
  4269                           ;My_terminal.c: 88: } else {
  4270  01402E  0012               	return	
  4271  014030                     l8735:
  4272                           
  4273                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  4274  014030  C0B5  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  4275  014034  C0B6  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  4276  014038  0E84               	movlw	low STR_24
  4277  01403A  0100               	movlb	0	; () banked
  4278  01403C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4279  01403E  0EFF               	movlw	high STR_24
  4280  014040  0100               	movlb	0	; () banked
  4281  014042  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4282  014044  ECC2  F09F         	call	_ringbuf_put_str	;wreg free
  4283  014048  0012               	return	
  4284  01404A                     __end_of_terminal_at_hand:
  4285                           	opt stack 0
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           postinc0	equ	0xFEE
  4294                           wreg	equ	0xFE8
  4295                           postdec1	equ	0xFE5
  4296                           fsr1h	equ	0xFE2
  4297                           fsr1l	equ	0xFE1
  4298                           indf2	equ	0xFDF
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           status	equ	0xFD8
  4302                           
  4303 ;; *************** function _print_time *****************
  4304 ;; Defined at:
  4305 ;;		line 68 in file "../My_library/My_terminal.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  tx              2   53[BANK0 ] PTR struct ringbuf
  4308 ;;		 -> usb_tx(8), 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  str            30   55[BANK0 ] unsigned char [30]
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:       32 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:   15
  4327 ;; This function calls:
  4328 ;;		_RTCC_from_RTCC
  4329 ;;		_ringbuf_put_str
  4330 ;;		_sprintf
  4331 ;; This function is called by:
  4332 ;;		_terminal_at_hand
  4333 ;;		_terminal_time
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text5
  4338  013BAA                     __ptext5:
  4339                           	opt stack 0
  4340  013BAA                     _print_time:
  4341                           	opt stack 11
  4342                           
  4343                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  4344                           
  4345                           ;incstack = 0
  4346  013BAA  0E4A               	movlw	low _now
  4347  013BAC  0100               	movlb	0	; () banked
  4348  013BAE  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  4349  013BB0  0E01               	movlw	high _now
  4350  013BB2  0100               	movlb	0	; () banked
  4351  013BB4  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  4352  013BB6  EC47  F0A3         	call	_RTCC_from_RTCC	;wreg free
  4353                           
  4354                           ;My_terminal.c: 70: char str[30];
  4355                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  4356                           ;My_terminal.c: 72: now.YY,
  4357                           ;My_terminal.c: 73: now.MM,
  4358                           ;My_terminal.c: 74: now.DD,
  4359                           ;My_terminal.c: 75: weekday_3char[now.EE],
  4360                           ;My_terminal.c: 76: now.hh,
  4361                           ;My_terminal.c: 77: now.mm,
  4362                           ;My_terminal.c: 78: now.ss);
  4363  013BBA  0E97               	movlw	low print_time@str
  4364  013BBC  0100               	movlb	0	; () banked
  4365  013BBE  6F72               	movwf	sprintf@sp& (0+255),b
  4366  013BC0  0E00               	movlw	high print_time@str
  4367  013BC2  0100               	movlb	0	; () banked
  4368  013BC4  6F73               	movwf	(sprintf@sp+1)& (0+255),b
  4369  013BC6  0E2D               	movlw	low STR_23
  4370  013BC8  0100               	movlb	0	; () banked
  4371  013BCA  6F74               	movwf	sprintf@f& (0+255),b
  4372  013BCC  0EFF               	movlw	high STR_23
  4373  013BCE  0100               	movlb	0	; () banked
  4374  013BD0  6F75               	movwf	(sprintf@f+1)& (0+255),b
  4375  013BD2  C154  F076         	movff	_now+10,?_sprintf+4
  4376  013BD6  0100               	movlb	0	; () banked
  4377  013BD8  6B77               	clrf	(?_sprintf+5)& (0+255),b
  4378  013BDA  C153  F078         	movff	_now+9,?_sprintf+6
  4379  013BDE  0100               	movlb	0	; () banked
  4380  013BE0  6B79               	clrf	(?_sprintf+7)& (0+255),b
  4381  013BE2  C152  F07A         	movff	_now+8,?_sprintf+8
  4382  013BE6  0100               	movlb	0	; () banked
  4383  013BE8  6B7B               	clrf	(?_sprintf+9)& (0+255),b
  4384  013BEA  0101               	movlb	1	; () banked
  4385  013BEC  5151               	movf	(_now+7)& (0+255),w,b
  4386  013BEE  0D04               	mullw	4
  4387  013BF0  0EC0               	movlw	low _weekday_3char
  4388  013BF2  24F3               	addwf	prodl,w,c
  4389  013BF4  0100               	movlb	0	; () banked
  4390  013BF6  6F7C               	movwf	(?_sprintf+10)& (0+255),b
  4391  013BF8  0EFD               	movlw	high _weekday_3char
  4392  013BFA  20F4               	addwfc	prodh,w,c
  4393  013BFC  0100               	movlb	0	; () banked
  4394  013BFE  6F7D               	movwf	(?_sprintf+11)& (0+255),b
  4395  013C00  C150  F07E         	movff	_now+6,?_sprintf+12
  4396  013C04  0100               	movlb	0	; () banked
  4397  013C06  6B7F               	clrf	(?_sprintf+13)& (0+255),b
  4398  013C08  C14F  F080         	movff	_now+5,?_sprintf+14
  4399  013C0C  0100               	movlb	0	; () banked
  4400  013C0E  6B81               	clrf	(?_sprintf+15)& (0+255),b
  4401  013C10  C14E  F082         	movff	_now+4,?_sprintf+16
  4402  013C14  0100               	movlb	0	; () banked
  4403  013C16  6B83               	clrf	(?_sprintf+17)& (0+255),b
  4404  013C18  EC57  F082         	call	_sprintf	;wreg free
  4405                           
  4406                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  4407  013C1C  C095  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  4408  013C20  C096  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  4409  013C24  0E97               	movlw	low print_time@str
  4410  013C26  0100               	movlb	0	; () banked
  4411  013C28  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  4412  013C2A  0E00               	movlw	high print_time@str
  4413  013C2C  0100               	movlb	0	; () banked
  4414  013C2E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  4415  013C30  ECC2  F09F         	call	_ringbuf_put_str	;wreg free
  4416  013C34  0012               	return		;funcret
  4417  013C36                     __end_of_print_time:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           postinc0	equ	0xFEE
  4427                           wreg	equ	0xFE8
  4428                           postdec1	equ	0xFE5
  4429                           fsr1h	equ	0xFE2
  4430                           fsr1l	equ	0xFE1
  4431                           indf2	equ	0xFDF
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _sprintf *****************
  4437 ;; Defined at:
  4438 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  sp              2   18[BANK0 ] PTR unsigned char 
  4441 ;;		 -> print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  4442 ;;  f               2   20[BANK0 ] PTR const unsigned char 
  4443 ;;		 -> STR_23(37), STR_21(5), STR_1(5), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  tmpval          4    0        struct .
  4446 ;;  width           2   51[BANK0 ] int 
  4447 ;;  len             2   47[BANK0 ] unsigned int 
  4448 ;;  val             2   45[BANK0 ] unsigned int 
  4449 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  4450 ;;		 -> STR_61(7), weekday_3char(28), 
  4451 ;;  ap              2   41[BANK0 ] PTR void [1]
  4452 ;;		 -> ?_sprintf(2), 
  4453 ;;  c               1   50[BANK0 ] char 
  4454 ;;  flag            1   49[BANK0 ] unsigned char 
  4455 ;;  prec            1   40[BANK0 ] char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  2   18[BANK0 ] int 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4465 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4468 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4469 ;;Total ram usage:       35 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:   12
  4472 ;; This function calls:
  4473 ;;		___lwdiv
  4474 ;;		___lwmod
  4475 ;;		___wmul
  4476 ;;		_isdigit
  4477 ;; This function is called by:
  4478 ;;		_print_time
  4479 ;;		_display_dec
  4480 ;;		_print_time_dec
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text6
  4485  0104AE                     __ptext6:
  4486                           	opt stack 0
  4487  0104AE                     _sprintf:
  4488                           	opt stack 13
  4489                           
  4490                           ;doprnt.c: 494: va_list ap;
  4491                           ;doprnt.c: 499: signed char c;
  4492                           ;doprnt.c: 501: int width;
  4493                           ;doprnt.c: 506: signed char prec;
  4494                           ;doprnt.c: 508: unsigned char flag;
  4495                           ;doprnt.c: 523: union {
  4496                           ;doprnt.c: 524: unsigned long vd;
  4497                           ;doprnt.c: 525: double integ;
  4498                           ;doprnt.c: 526: } tmpval;
  4499                           ;doprnt.c: 528: unsigned int val;
  4500                           ;doprnt.c: 529: unsigned len;
  4501                           ;doprnt.c: 530: const char * cp;
  4502                           ;doprnt.c: 533: *ap = __va_start();
  4503                           
  4504                           ;incstack = 0
  4505  0104AE  0E76               	movlw	low (?_sprintf+4)
  4506  0104B0  0100               	movlb	0	; () banked
  4507  0104B2  6F89               	movwf	sprintf@ap& (0+255),b
  4508  0104B4  0E00               	movlw	high (?_sprintf+4)
  4509  0104B6  0100               	movlb	0	; () banked
  4510  0104B8  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
  4511                           
  4512                           ;doprnt.c: 536: while(c = *f++) {
  4513  0104BA  D20F               	goto	l8669
  4514  0104BC                     l8529:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;doprnt.c: 538: if(c != '%')
  4518  0104BC  0E25               	movlw	37
  4519  0104BE  0100               	movlb	0	; () banked
  4520  0104C0  1992               	xorwf	sprintf@c& (0+255),w,b
  4521  0104C2  B4D8               	btfsc	status,2,c
  4522  0104C4  D00A               	goto	l8535
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;doprnt.c: 540: {
  4526                           ;doprnt.c: 541: ((*sp++ = (c)));
  4527  0104C6  C072  FFD9         	movff	sprintf@sp,fsr2l
  4528  0104CA  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4529  0104CE  C092  FFDF         	movff	sprintf@c,indf2
  4530                           
  4531                           ; BSR set to: 0
  4532  0104D2  0100               	movlb	0	; () banked
  4533  0104D4  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4534  0104D6  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4535                           
  4536                           ;doprnt.c: 542: continue;
  4537  0104D8  D200               	goto	l8669
  4538  0104DA                     l8535:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;doprnt.c: 543: }
  4542                           ;doprnt.c: 546: width = 0;
  4543  0104DA  0E00               	movlw	0
  4544  0104DC  0100               	movlb	0	; () banked
  4545  0104DE  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4546  0104E0  0E00               	movlw	0
  4547  0104E2  6F93               	movwf	sprintf@width& (0+255),b
  4548                           
  4549                           ;doprnt.c: 548: flag = 0;
  4550  0104E4  0E00               	movlw	0
  4551  0104E6  0100               	movlb	0	; () banked
  4552  0104E8  6F91               	movwf	sprintf@flag& (0+255),b
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;doprnt.c: 551: switch(*f) {
  4556                           
  4557                           ;doprnt.c: 550: for(;;) {
  4558  0104EA  D005               	goto	l8541
  4559  0104EC                     l8537:
  4560                           
  4561                           ;doprnt.c: 580: flag |= 0x04;
  4562  0104EC  0100               	movlb	0	; () banked
  4563  0104EE  8591               	bsf	sprintf@flag& (0+255),2,b
  4564                           
  4565                           ;doprnt.c: 581: f++;
  4566  0104F0  0100               	movlb	0	; () banked
  4567  0104F2  4B74               	infsnz	sprintf@f& (0+255),f,b
  4568  0104F4  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4569  0104F6                     l8541:
  4570  0104F6  C074  FFF6         	movff	sprintf@f,tblptrl
  4571  0104FA  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4572  0104FE                     	if	0	;tblptru may be non-zero
  4573  0104FE                     	endif
  4574  0104FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4575  0104FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4576  010500  6EF8               	movwf	tblptru,c
  4577  010502                     	endif
  4578  010502  0008               	tblrd		*
  4579  010504  50F5               	movf	tablat,w,c
  4580                           
  4581                           ; Switch size 1, requested type "space"
  4582                           ; Number of cases is 1, Range of values is 48 to 48
  4583                           ; switch strategies available:
  4584                           ; Name         Instructions Cycles
  4585                           ; simple_byte            4     3 (average)
  4586                           ;	Chosen strategy is simple_byte
  4587  010506  0A30               	xorlw	48	; case 48
  4588  010508  B4D8               	btfsc	status,2,c
  4589  01050A  D7F0               	goto	l8537
  4590                           
  4591                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4592                           
  4593                           ;doprnt.c: 586: }
  4594                           
  4595                           ;doprnt.c: 585: break;
  4596  01050C  C074  FFF6         	movff	sprintf@f,tblptrl
  4597  010510  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4598  010514                     	if	0	;tblptru may be non-zero
  4599  010514                     	endif
  4600  010514                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4601  010514  0E00               	movlw	low (__mediumconst shr (0+16))
  4602  010516  6EF8               	movwf	tblptru,c
  4603  010518                     	endif
  4604  010518  0008               	tblrd		*
  4605  01051A  50F5               	movf	tablat,w,c
  4606  01051C  EC9E  F0A2         	call	_isdigit
  4607  010520  A0D8               	btfss	status,0,c
  4608  010522  D0CB               	goto	l8591
  4609                           
  4610                           ;doprnt.c: 598: width = 0;
  4611  010524  0E00               	movlw	0
  4612  010526  0100               	movlb	0	; () banked
  4613  010528  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4614  01052A  0E00               	movlw	0
  4615  01052C  6F93               	movwf	sprintf@width& (0+255),b
  4616  01052E                     l8547:
  4617                           
  4618                           ;doprnt.c: 600: width *= 10;
  4619  01052E  C093  F060         	movff	sprintf@width,___wmul@multiplier
  4620  010532  C094  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4621  010536  0E00               	movlw	0
  4622  010538  0100               	movlb	0	; () banked
  4623  01053A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4624  01053C  0E0A               	movlw	10
  4625  01053E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4626  010540  ECE1  F0A1         	call	___wmul	;wreg free
  4627  010544  C060  F093         	movff	?___wmul,sprintf@width
  4628  010548  C061  F094         	movff	?___wmul+1,sprintf@width+1
  4629                           
  4630                           ;doprnt.c: 601: width += *f++ - '0';
  4631  01054C  0ED0               	movlw	208
  4632  01054E  0100               	movlb	0	; () banked
  4633  010550  6F84               	movwf	??_sprintf& (0+255),b
  4634  010552  0EFF               	movlw	255
  4635  010554  0100               	movlb	0	; () banked
  4636  010556  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4637  010558  C074  FFF6         	movff	sprintf@f,tblptrl
  4638  01055C  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4639  010560                     	if	0	;tblptru may be non-zero
  4640  010560                     	endif
  4641  010560                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4642  010560  0E00               	movlw	low (__mediumconst shr (0+16))
  4643  010562  6EF8               	movwf	tblptru,c
  4644  010564                     	endif
  4645  010564  0008               	tblrd		*
  4646  010566  50F5               	movf	tablat,w,c
  4647  010568  0100               	movlb	0	; () banked
  4648  01056A  6F86               	movwf	(??_sprintf+2)& (0+255),b
  4649  01056C  6B87               	clrf	(??_sprintf+3)& (0+255),b
  4650  01056E  0100               	movlb	0	; () banked
  4651  010570  5184               	movf	??_sprintf& (0+255),w,b
  4652  010572  0100               	movlb	0	; () banked
  4653  010574  2786               	addwf	(??_sprintf+2)& (0+255),f,b
  4654  010576  0100               	movlb	0	; () banked
  4655  010578  5185               	movf	(??_sprintf+1)& (0+255),w,b
  4656  01057A  0100               	movlb	0	; () banked
  4657  01057C  2387               	addwfc	(??_sprintf+3)& (0+255),f,b
  4658  01057E  0100               	movlb	0	; () banked
  4659  010580  5186               	movf	(??_sprintf+2)& (0+255),w,b
  4660  010582  0100               	movlb	0	; () banked
  4661  010584  2793               	addwf	sprintf@width& (0+255),f,b
  4662  010586  0100               	movlb	0	; () banked
  4663  010588  5187               	movf	(??_sprintf+3)& (0+255),w,b
  4664  01058A  0100               	movlb	0	; () banked
  4665  01058C  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
  4666                           
  4667                           ; BSR set to: 0
  4668  01058E  0100               	movlb	0	; () banked
  4669  010590  4B74               	infsnz	sprintf@f& (0+255),f,b
  4670  010592  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4674  010594  C074  FFF6         	movff	sprintf@f,tblptrl
  4675  010598  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4676  01059C                     	if	0	;tblptru may be non-zero
  4677  01059C                     	endif
  4678  01059C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4679  01059C  0E00               	movlw	low (__mediumconst shr (0+16))
  4680  01059E  6EF8               	movwf	tblptru,c
  4681  0105A0                     	endif
  4682  0105A0  0008               	tblrd		*
  4683  0105A2  50F5               	movf	tablat,w,c
  4684  0105A4  EC9E  F0A2         	call	_isdigit
  4685  0105A8  A0D8               	btfss	status,0,c
  4686  0105AA  D087               	goto	l8591
  4687  0105AC  D7C0               	goto	l8547
  4688  0105AE                     l8555:
  4689                           
  4690                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4691  0105AE  C089  FFD9         	movff	sprintf@ap,fsr2l
  4692  0105B2  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4693  0105B6  CFDE F08B          	movff	postinc2,sprintf@cp
  4694  0105BA  CFDD F08C          	movff	postdec2,sprintf@cp+1
  4695  0105BE  0E02               	movlw	2
  4696  0105C0  0100               	movlb	0	; () banked
  4697  0105C2  2789               	addwf	sprintf@ap& (0+255),f,b
  4698  0105C4  0E00               	movlw	0
  4699  0105C6  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;doprnt.c: 740: if(!cp)
  4703  0105C8  0100               	movlb	0	; () banked
  4704  0105CA  518B               	movf	sprintf@cp& (0+255),w,b
  4705  0105CC  0100               	movlb	0	; () banked
  4706  0105CE  118C               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4707  0105D0  A4D8               	btfss	status,2,c
  4708  0105D2  D006               	goto	l8563
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;doprnt.c: 741: cp = "(null)";
  4712  0105D4  0E8C               	movlw	low STR_61
  4713  0105D6  0100               	movlb	0	; () banked
  4714  0105D8  6F8B               	movwf	sprintf@cp& (0+255),b
  4715  0105DA  0EFF               	movlw	high STR_61
  4716  0105DC  0100               	movlb	0	; () banked
  4717  0105DE  6F8C               	movwf	(sprintf@cp+1)& (0+255),b
  4718  0105E0                     l8563:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;doprnt.c: 745: len = 0;
  4722  0105E0  0E00               	movlw	0
  4723  0105E2  0100               	movlb	0	; () banked
  4724  0105E4  6F90               	movwf	(sprintf@len+1)& (0+255),b
  4725  0105E6  0E00               	movlw	0
  4726  0105E8  6F8F               	movwf	sprintf@len& (0+255),b
  4727                           
  4728                           ;doprnt.c: 746: while(cp[len])
  4729  0105EA  D003               	goto	l8567
  4730  0105EC                     l8565:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;doprnt.c: 747: len++;
  4734  0105EC  0100               	movlb	0	; () banked
  4735  0105EE  4B8F               	infsnz	sprintf@len& (0+255),f,b
  4736  0105F0  2B90               	incf	(sprintf@len+1)& (0+255),f,b
  4737  0105F2                     l8567:
  4738                           
  4739                           ; BSR set to: 0
  4740  0105F2  0100               	movlb	0	; () banked
  4741  0105F4  518F               	movf	sprintf@len& (0+255),w,b
  4742  0105F6  0100               	movlb	0	; () banked
  4743  0105F8  258B               	addwf	sprintf@cp& (0+255),w,b
  4744  0105FA  0100               	movlb	0	; () banked
  4745  0105FC  6F84               	movwf	??_sprintf& (0+255),b
  4746  0105FE  0100               	movlb	0	; () banked
  4747  010600  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4748  010602  0100               	movlb	0	; () banked
  4749  010604  218C               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4750  010606  0100               	movlb	0	; () banked
  4751  010608  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4752  01060A  C084  FFF6         	movff	??_sprintf,tblptrl
  4753  01060E  C085  FFF7         	movff	??_sprintf+1,tblptrh
  4754  010612                     	if	0	;tblptru may be non-zero
  4755  010612                     	endif
  4756  010612                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4757  010612  0E00               	movlw	low (__mediumconst shr (0+16))
  4758  010614  6EF8               	movwf	tblptru,c
  4759  010616                     	endif
  4760  010616  0008               	tblrd		*
  4761  010618  50F5               	movf	tablat,w,c
  4762  01061A  0900               	iorlw	0
  4763  01061C  A4D8               	btfss	status,2,c
  4764  01061E  D7E6               	goto	l8565
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;doprnt.c: 757: if(width > len)
  4768                           
  4769                           ; BSR set to: 0
  4770  010620  0100               	movlb	0	; () banked
  4771  010622  5193               	movf	sprintf@width& (0+255),w,b
  4772  010624  0100               	movlb	0	; () banked
  4773  010626  5D8F               	subwf	sprintf@len& (0+255),w,b
  4774  010628  0100               	movlb	0	; () banked
  4775  01062A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  4776  01062C  0100               	movlb	0	; () banked
  4777  01062E  5990               	subwfb	(sprintf@len+1)& (0+255),w,b
  4778  010630  B0D8               	btfsc	status,0,c
  4779  010632  D009               	goto	l8573
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;doprnt.c: 758: width -= len;
  4783  010634  0100               	movlb	0	; () banked
  4784  010636  518F               	movf	sprintf@len& (0+255),w,b
  4785  010638  0100               	movlb	0	; () banked
  4786  01063A  5F93               	subwf	sprintf@width& (0+255),f,b
  4787  01063C  0100               	movlb	0	; () banked
  4788  01063E  5190               	movf	(sprintf@len+1)& (0+255),w,b
  4789  010640  0100               	movlb	0	; () banked
  4790  010642  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  4791  010644  D00F               	goto	l8579
  4792  010646                     l8573:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;doprnt.c: 759: else
  4796                           ;doprnt.c: 760: width = 0;
  4797  010646  0E00               	movlw	0
  4798  010648  0100               	movlb	0	; () banked
  4799  01064A  6F94               	movwf	(sprintf@width+1)& (0+255),b
  4800  01064C  0E00               	movlw	0
  4801  01064E  6F93               	movwf	sprintf@width& (0+255),b
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;doprnt.c: 764: while(width--)
  4805  010650  D009               	goto	l8579
  4806  010652                     l8575:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4810  010652  C072  FFD9         	movff	sprintf@sp,fsr2l
  4811  010656  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4812  01065A  0E20               	movlw	32
  4813  01065C  6EDF               	movwf	indf2,c
  4814                           
  4815                           ; BSR set to: 0
  4816  01065E  0100               	movlb	0	; () banked
  4817  010660  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4818  010662  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4819  010664                     l8579:
  4820                           
  4821                           ; BSR set to: 0
  4822  010664  0100               	movlb	0	; () banked
  4823  010666  0793               	decf	sprintf@width& (0+255),f,b
  4824  010668  A0D8               	btfss	status,0,c
  4825  01066A  0794               	decf	(sprintf@width+1)& (0+255),f,b
  4826  01066C  0100               	movlb	0	; () banked
  4827  01066E  2993               	incf	sprintf@width& (0+255),w,b
  4828  010670  E1F0               	bnz	l8575
  4829  010672  0100               	movlb	0	; () banked
  4830  010674  2994               	incf	(sprintf@width+1)& (0+255),w,b
  4831  010676  B4D8               	btfsc	status,2,c
  4832  010678  D014               	goto	l8587
  4833  01067A  D7EB               	goto	l8575
  4834  01067C                     l8581:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4838  01067C  C08B  FFF6         	movff	sprintf@cp,tblptrl
  4839  010680  C08C  FFF7         	movff	sprintf@cp+1,tblptrh
  4840  010684                     	if	0	;tblptru may be non-zero
  4841  010684                     	endif
  4842  010684                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4843  010684  0E00               	movlw	low (__mediumconst shr (0+16))
  4844  010686  6EF8               	movwf	tblptru,c
  4845  010688                     	endif
  4846  010688  C072  FFD9         	movff	sprintf@sp,fsr2l
  4847  01068C  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  4848  010690  0008               	tblrd		*
  4849  010692  CFF5 FFDF          	movff	tablat,indf2
  4850                           
  4851                           ; BSR set to: 0
  4852  010696  0100               	movlb	0	; () banked
  4853  010698  4B8B               	infsnz	sprintf@cp& (0+255),f,b
  4854  01069A  2B8C               	incf	(sprintf@cp+1)& (0+255),f,b
  4855                           
  4856                           ; BSR set to: 0
  4857  01069C  0100               	movlb	0	; () banked
  4858  01069E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  4859  0106A0  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  4860  0106A2                     l8587:
  4861                           
  4862                           ; BSR set to: 0
  4863  0106A2  0100               	movlb	0	; () banked
  4864  0106A4  078F               	decf	sprintf@len& (0+255),f,b
  4865  0106A6  A0D8               	btfss	status,0,c
  4866  0106A8  0790               	decf	(sprintf@len+1)& (0+255),f,b
  4867  0106AA  0100               	movlb	0	; () banked
  4868  0106AC  298F               	incf	sprintf@len& (0+255),w,b
  4869  0106AE  E1E6               	bnz	l8581
  4870  0106B0  0100               	movlb	0	; () banked
  4871  0106B2  2990               	incf	(sprintf@len+1)& (0+255),w,b
  4872  0106B4  B4D8               	btfsc	status,2,c
  4873  0106B6  D111               	goto	l8669
  4874  0106B8  D7E1               	goto	l8581
  4875  0106BA                     l8591:
  4876  0106BA  C074  FFF6         	movff	sprintf@f,tblptrl
  4877  0106BE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  4878  0106C2  0100               	movlb	0	; () banked
  4879  0106C4  4B74               	infsnz	sprintf@f& (0+255),f,b
  4880  0106C6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  4881  0106C8                     	if	0	;tblptru may be non-zero
  4882  0106C8                     	endif
  4883  0106C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4884  0106C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4885  0106CA  6EF8               	movwf	tblptru,c
  4886  0106CC                     	endif
  4887  0106CC  0008               	tblrd		*
  4888  0106CE  CFF5 F092          	movff	tablat,sprintf@c
  4889  0106D2  0100               	movlb	0	; () banked
  4890  0106D4  5192               	movf	sprintf@c& (0+255),w,b
  4891                           
  4892                           ; Switch size 1, requested type "space"
  4893                           ; Number of cases is 4, Range of values is 0 to 115
  4894                           ; switch strategies available:
  4895                           ; Name         Instructions Cycles
  4896                           ; simple_byte           13     7 (average)
  4897                           ;	Chosen strategy is simple_byte
  4898  0106D6  0A00               	xorlw	0	; case 0
  4899  0106D8  B4D8               	btfsc	status,2,c
  4900  0106DA  D10F               	goto	l8671
  4901  0106DC  0A64               	xorlw	100	; case 100
  4902  0106DE  B4D8               	btfsc	status,2,c
  4903  0106E0  D007               	goto	l8593
  4904  0106E2  0A0D               	xorlw	13	; case 105
  4905  0106E4  B4D8               	btfsc	status,2,c
  4906  0106E6  D004               	goto	l8593
  4907  0106E8  0A1A               	xorlw	26	; case 115
  4908  0106EA  B4D8               	btfsc	status,2,c
  4909  0106EC  D760               	goto	l8555
  4910  0106EE  D0F5               	goto	l8669
  4911  0106F0                     l8593:
  4912                           
  4913                           ;doprnt.c: 1253: {
  4914                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4915  0106F0  C089  FFD9         	movff	sprintf@ap,fsr2l
  4916  0106F4  C08A  FFDA         	movff	sprintf@ap+1,fsr2h
  4917  0106F8  CFDE F08D          	movff	postinc2,sprintf@val
  4918  0106FC  CFDD F08E          	movff	postdec2,sprintf@val+1
  4919  010700  0E02               	movlw	2
  4920  010702  0100               	movlb	0	; () banked
  4921  010704  2789               	addwf	sprintf@ap& (0+255),f,b
  4922  010706  0E00               	movlw	0
  4923  010708  238A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;doprnt.c: 1261: if((int)val < 0) {
  4927  01070A  0100               	movlb	0	; () banked
  4928  01070C  AF8E               	btfss	(sprintf@val+1)& (0+255),7,b
  4929  01070E  D008               	goto	l8603
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;doprnt.c: 1262: flag |= 0x03;
  4933  010710  0E03               	movlw	3
  4934  010712  0100               	movlb	0	; () banked
  4935  010714  1391               	iorwf	sprintf@flag& (0+255),f,b
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;doprnt.c: 1263: val = -val;
  4939  010716  0100               	movlb	0	; () banked
  4940  010718  6D8D               	negf	sprintf@val& (0+255),b
  4941  01071A  1F8E               	comf	(sprintf@val+1)& (0+255),f,b
  4942  01071C  B0D8               	btfsc	status,0,c
  4943  01071E  2B8E               	incf	(sprintf@val+1)& (0+255),f,b
  4944  010720                     l8603:
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;doprnt.c: 1264: }
  4948                           ;doprnt.c: 1266: }
  4949                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4950  010720  0E01               	movlw	1
  4951  010722  0100               	movlb	0	; () banked
  4952  010724  6F92               	movwf	sprintf@c& (0+255),b
  4953  010726                     l8605:
  4954                           
  4955                           ; BSR set to: 0
  4956  010726  0E05               	movlw	5
  4957  010728  0100               	movlb	0	; () banked
  4958  01072A  1992               	xorwf	sprintf@c& (0+255),w,b
  4959  01072C  B4D8               	btfsc	status,2,c
  4960  01072E  D019               	goto	l8617
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;doprnt.c: 1306: if(val < dpowers[c])
  4964                           
  4965                           ; BSR set to: 0
  4966                           
  4967                           ; BSR set to: 0
  4968  010730  0100               	movlb	0	; () banked
  4969  010732  5192               	movf	sprintf@c& (0+255),w,b
  4970  010734  0D02               	mullw	2
  4971  010736  0E03               	movlw	low _dpowers
  4972  010738  24F3               	addwf	prodl,w,c
  4973  01073A  6EF6               	movwf	tblptrl,c
  4974  01073C  0EFD               	movlw	high _dpowers
  4975  01073E  20F4               	addwfc	prodh,w,c
  4976  010740  6EF7               	movwf	tblptrh,c
  4977  010742                     	if	1	;There are 3 active tblptr bytes
  4978  010742  6AF8               	clrf	tblptru,c
  4979  010744  0E00               	movlw	low (__mediumconst shr (0+16))
  4980  010746  22F8               	addwfc	tblptru,f,c
  4981  010748                     	endif
  4982  010748  0009               	tblrd		*+
  4983  01074A  50F5               	movf	tablat,w,c
  4984  01074C  0100               	movlb	0	; () banked
  4985  01074E  5D8D               	subwf	sprintf@val& (0+255),w,b
  4986  010750  0009               	tblrd		*+
  4987  010752  50F5               	movf	tablat,w,c
  4988  010754  0100               	movlb	0	; () banked
  4989  010756  598E               	subwfb	(sprintf@val+1)& (0+255),w,b
  4990  010758  A0D8               	btfss	status,0,c
  4991  01075A  D003               	goto	l8617
  4992                           
  4993                           ; BSR set to: 0
  4994                           
  4995                           ; BSR set to: 0
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;doprnt.c: 1307: break;
  4999  01075C  0100               	movlb	0	; () banked
  5000  01075E  2B92               	incf	sprintf@c& (0+255),f,b
  5001  010760  D7E2               	goto	l8605
  5002  010762                     l8617:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5006  010762  0100               	movlb	0	; () banked
  5007  010764  5193               	movf	sprintf@width& (0+255),w,b
  5008  010766  0100               	movlb	0	; () banked
  5009  010768  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5010  01076A  B4D8               	btfsc	status,2,c
  5011  01076C  D00B               	goto	l8623
  5012                           
  5013                           ; BSR set to: 0
  5014  01076E  C091  F084         	movff	sprintf@flag,??_sprintf
  5015  010772  0E03               	movlw	3
  5016  010774  0100               	movlb	0	; () banked
  5017  010776  1784               	andwf	??_sprintf& (0+255),f,b
  5018  010778  B4D8               	btfsc	status,2,c
  5019  01077A  D004               	goto	l8623
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;doprnt.c: 1346: width--;
  5023  01077C  0100               	movlb	0	; () banked
  5024  01077E  0793               	decf	sprintf@width& (0+255),f,b
  5025  010780  A0D8               	btfss	status,0,c
  5026  010782  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5027  010784                     l8623:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;doprnt.c: 1381: if(width > c)
  5031  010784  0E80               	movlw	128
  5032  010786  0100               	movlb	0	; () banked
  5033  010788  BF92               	btfsc	sprintf@c& (0+255),7,b
  5034  01078A  0E7F               	movlw	127
  5035  01078C  0100               	movlb	0	; () banked
  5036  01078E  6F84               	movwf	??_sprintf& (0+255),b
  5037  010790  0100               	movlb	0	; () banked
  5038  010792  5193               	movf	sprintf@width& (0+255),w,b
  5039  010794  0100               	movlb	0	; () banked
  5040  010796  5D92               	subwf	sprintf@c& (0+255),w,b
  5041  010798  0100               	movlb	0	; () banked
  5042  01079A  5194               	movf	(sprintf@width+1)& (0+255),w,b
  5043  01079C  0A80               	xorlw	128
  5044  01079E  0100               	movlb	0	; () banked
  5045  0107A0  5984               	subwfb	??_sprintf& (0+255),w,b
  5046  0107A2  B0D8               	btfsc	status,0,c
  5047  0107A4  D00B               	goto	l8627
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;doprnt.c: 1382: width -= c;
  5051  0107A6  0100               	movlb	0	; () banked
  5052  0107A8  5192               	movf	sprintf@c& (0+255),w,b
  5053  0107AA  0100               	movlb	0	; () banked
  5054  0107AC  5F93               	subwf	sprintf@width& (0+255),f,b
  5055  0107AE  0E00               	movlw	0
  5056  0107B0  0100               	movlb	0	; () banked
  5057  0107B2  BF92               	btfsc	sprintf@c& (0+255),7,b
  5058  0107B4  0EFF               	movlw	255
  5059  0107B6  0100               	movlb	0	; () banked
  5060  0107B8  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
  5061  0107BA  D005               	goto	l8629
  5062  0107BC                     l8627:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;doprnt.c: 1383: else
  5066                           ;doprnt.c: 1384: width = 0;
  5067  0107BC  0E00               	movlw	0
  5068  0107BE  0100               	movlb	0	; () banked
  5069  0107C0  6F94               	movwf	(sprintf@width+1)& (0+255),b
  5070  0107C2  0E00               	movlw	0
  5071  0107C4  6F93               	movwf	sprintf@width& (0+255),b
  5072  0107C6                     l8629:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;doprnt.c: 1387: if(flag & 0x04) {
  5076  0107C6  0100               	movlb	0	; () banked
  5077  0107C8  A591               	btfss	sprintf@flag& (0+255),2,b
  5078  0107CA  D024               	goto	l8645
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;doprnt.c: 1392: if(flag & 0x03)
  5082  0107CC  C091  F084         	movff	sprintf@flag,??_sprintf
  5083  0107D0  0E03               	movlw	3
  5084  0107D2  0100               	movlb	0	; () banked
  5085  0107D4  1784               	andwf	??_sprintf& (0+255),f,b
  5086  0107D6  B4D8               	btfsc	status,2,c
  5087  0107D8  D009               	goto	l8637
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  5091  0107DA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5092  0107DE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5093  0107E2  0E2D               	movlw	45
  5094  0107E4  6EDF               	movwf	indf2,c
  5095                           
  5096                           ; BSR set to: 0
  5097  0107E6  0100               	movlb	0	; () banked
  5098  0107E8  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5099  0107EA  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5100  0107EC                     l8637:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;doprnt.c: 1415: if(width)
  5104  0107EC  0100               	movlb	0	; () banked
  5105  0107EE  5193               	movf	sprintf@width& (0+255),w,b
  5106  0107F0  0100               	movlb	0	; () banked
  5107  0107F2  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5108  0107F4  B4D8               	btfsc	status,2,c
  5109  0107F6  D037               	goto	l8659
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5113                           
  5114                           ; BSR set to: 0
  5115                           
  5116                           ;doprnt.c: 1416: do
  5117  0107F8  C072  FFD9         	movff	sprintf@sp,fsr2l
  5118  0107FC  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5119  010800  0E30               	movlw	48
  5120  010802  6EDF               	movwf	indf2,c
  5121                           
  5122                           ; BSR set to: 0
  5123  010804  0100               	movlb	0	; () banked
  5124  010806  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5125  010808  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;doprnt.c: 1418: while(--width);
  5129  01080A  0100               	movlb	0	; () banked
  5130  01080C  0793               	decf	sprintf@width& (0+255),f,b
  5131  01080E  A0D8               	btfss	status,0,c
  5132  010810  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5133  010812  D7EC               	goto	l8637
  5134  010814                     l8645:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;doprnt.c: 1422: {
  5138                           ;doprnt.c: 1424: if(width
  5139                           ;doprnt.c: 1428: )
  5140  010814  0100               	movlb	0	; () banked
  5141  010816  5193               	movf	sprintf@width& (0+255),w,b
  5142  010818  0100               	movlb	0	; () banked
  5143  01081A  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5144  01081C  B4D8               	btfsc	status,2,c
  5145  01081E  D013               	goto	l8653
  5146  010820                     l8647:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5150  010820  C072  FFD9         	movff	sprintf@sp,fsr2l
  5151  010824  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5152  010828  0E20               	movlw	32
  5153  01082A  6EDF               	movwf	indf2,c
  5154                           
  5155                           ; BSR set to: 0
  5156  01082C  0100               	movlb	0	; () banked
  5157  01082E  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5158  010830  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;doprnt.c: 1431: while(--width);
  5162  010832  0100               	movlb	0	; () banked
  5163  010834  0793               	decf	sprintf@width& (0+255),f,b
  5164  010836  A0D8               	btfss	status,0,c
  5165  010838  0794               	decf	(sprintf@width+1)& (0+255),f,b
  5166  01083A  0100               	movlb	0	; () banked
  5167  01083C  5193               	movf	sprintf@width& (0+255),w,b
  5168  01083E  0100               	movlb	0	; () banked
  5169  010840  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
  5170  010842  A4D8               	btfss	status,2,c
  5171  010844  D7ED               	goto	l8647
  5172  010846                     l8653:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;doprnt.c: 1438: if(flag & 0x03)
  5176  010846  C091  F084         	movff	sprintf@flag,??_sprintf
  5177  01084A  0E03               	movlw	3
  5178  01084C  0100               	movlb	0	; () banked
  5179  01084E  1784               	andwf	??_sprintf& (0+255),f,b
  5180  010850  B4D8               	btfsc	status,2,c
  5181  010852  D009               	goto	l8659
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  5185  010854  C072  FFD9         	movff	sprintf@sp,fsr2l
  5186  010858  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5187  01085C  0E2D               	movlw	45
  5188  01085E  6EDF               	movwf	indf2,c
  5189                           
  5190                           ; BSR set to: 0
  5191  010860  0100               	movlb	0	; () banked
  5192  010862  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5193  010864  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5194  010866                     l8659:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;doprnt.c: 1469: }
  5198                           ;doprnt.c: 1472: prec = c;
  5199  010866  C092  F088         	movff	sprintf@c,sprintf@prec
  5200                           
  5201                           ;doprnt.c: 1474: while(prec--) {
  5202  01086A  D031               	goto	l8667
  5203  01086C                     l8661:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;doprnt.c: 1478: {
  5207                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5208  01086C  0100               	movlb	0	; () banked
  5209  01086E  5188               	movf	sprintf@prec& (0+255),w,b
  5210  010870  0D02               	mullw	2
  5211  010872  0E03               	movlw	low _dpowers
  5212  010874  24F3               	addwf	prodl,w,c
  5213  010876  6EF6               	movwf	tblptrl,c
  5214  010878  0EFD               	movlw	high _dpowers
  5215  01087A  20F4               	addwfc	prodh,w,c
  5216  01087C  6EF7               	movwf	tblptrh,c
  5217  01087E                     	if	1	;There are 3 active tblptr bytes
  5218  01087E  6AF8               	clrf	tblptru,c
  5219  010880  0E00               	movlw	low (__mediumconst shr (0+16))
  5220  010882  22F8               	addwfc	tblptru,f,c
  5221  010884                     	endif
  5222  010884  0009               	tblrd		*+
  5223  010886  CFF5 F068          	movff	tablat,___lwdiv@divisor
  5224  01088A  000A               	tblrd		*-
  5225  01088C  CFF5 F069          	movff	tablat,___lwdiv@divisor+1
  5226  010890  C08D  F066         	movff	sprintf@val,___lwdiv@dividend
  5227  010894  C08E  F067         	movff	sprintf@val+1,___lwdiv@dividend+1
  5228  010898  ECDF  F09E         	call	___lwdiv	;wreg free
  5229  01089C  C066  F06D         	movff	?___lwdiv,___lwmod@dividend
  5230  0108A0  C067  F06E         	movff	?___lwdiv+1,___lwmod@dividend+1
  5231  0108A4  0E00               	movlw	0
  5232  0108A6  0100               	movlb	0	; () banked
  5233  0108A8  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  5234  0108AA  0E0A               	movlw	10
  5235  0108AC  6F6F               	movwf	___lwmod@divisor& (0+255),b
  5236  0108AE  EC25  F0A0         	call	___lwmod	;wreg free
  5237  0108B2  0100               	movlb	0	; () banked
  5238  0108B4  516D               	movf	?___lwmod& (0+255),w,b
  5239  0108B6  0F30               	addlw	48
  5240  0108B8  0100               	movlb	0	; () banked
  5241  0108BA  6F92               	movwf	sprintf@c& (0+255),b
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;doprnt.c: 1523: }
  5245                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5246  0108BC  C072  FFD9         	movff	sprintf@sp,fsr2l
  5247  0108C0  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5248  0108C4  C092  FFDF         	movff	sprintf@c,indf2
  5249                           
  5250                           ; BSR set to: 0
  5251  0108C8  0100               	movlb	0	; () banked
  5252  0108CA  4B72               	infsnz	sprintf@sp& (0+255),f,b
  5253  0108CC  2B73               	incf	(sprintf@sp+1)& (0+255),f,b
  5254  0108CE                     l8667:
  5255                           
  5256                           ; BSR set to: 0
  5257  0108CE  0100               	movlb	0	; () banked
  5258  0108D0  0788               	decf	sprintf@prec& (0+255),f,b
  5259  0108D2  0100               	movlb	0	; () banked
  5260  0108D4  2988               	incf	sprintf@prec& (0+255),w,b
  5261  0108D6  A4D8               	btfss	status,2,c
  5262  0108D8  D7C9               	goto	l8661
  5263  0108DA                     l8669:
  5264                           
  5265                           ; BSR set to: 0
  5266  0108DA  C074  FFF6         	movff	sprintf@f,tblptrl
  5267  0108DE  C075  FFF7         	movff	sprintf@f+1,tblptrh
  5268  0108E2  0100               	movlb	0	; () banked
  5269  0108E4  4B74               	infsnz	sprintf@f& (0+255),f,b
  5270  0108E6  2B75               	incf	(sprintf@f+1)& (0+255),f,b
  5271  0108E8                     	if	0	;tblptru may be non-zero
  5272  0108E8                     	endif
  5273  0108E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5274  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
  5275  0108EA  6EF8               	movwf	tblptru,c
  5276  0108EC                     	endif
  5277  0108EC  0008               	tblrd		*
  5278  0108EE  CFF5 F092          	movff	tablat,sprintf@c
  5279  0108F2  0100               	movlb	0	; () banked
  5280  0108F4  5192               	movf	sprintf@c& (0+255),w,b
  5281  0108F6  A4D8               	btfss	status,2,c
  5282  0108F8  D5E1               	goto	l8529
  5283  0108FA                     l8671:
  5284                           
  5285                           ;doprnt.c: 1538: *sp = 0;
  5286  0108FA  C072  FFD9         	movff	sprintf@sp,fsr2l
  5287  0108FE  C073  FFDA         	movff	sprintf@sp+1,fsr2h
  5288  010902  0E00               	movlw	0
  5289  010904  6EDF               	movwf	indf2,c
  5290  010906  0012               	return	
  5291  010908                     __end_of_sprintf:
  5292                           	opt stack 0
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           postdec1	equ	0xFE5
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           postinc2	equ	0xFDE
  5307                           postdec2	equ	0xFDD
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _ringbuf_put_str *****************
  5313 ;; Defined at:
  5314 ;;		line 39 in file "../My_library/My_ringbuf.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5317 ;;		 -> usb_tx(8), 
  5318 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  5319 ;;		 -> STR_43(315), STR_24(8), print_time@str(30), STR_22(3), 
  5320 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;Total ram usage:        4 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:   13
  5339 ;; This function calls:
  5340 ;;		_ringbuf_put
  5341 ;; This function is called by:
  5342 ;;		_terminal_task
  5343 ;;		_print_time
  5344 ;;		_terminal_at_hand
  5345 ;;		_terminal_operation
  5346 ;;		_print_time_dec
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text7
  5351  013F84                     __ptext7:
  5352                           	opt stack 0
  5353  013F84                     _ringbuf_put_str:
  5354                           	opt stack 13
  5355                           
  5356                           ;My_ringbuf.c: 40: while (*str) {
  5357                           
  5358                           ;incstack = 0
  5359  013F84  D01C               	goto	l8441
  5360  013F86                     l8437:
  5361                           
  5362                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  5363  013F86  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  5364  013F8A  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  5365  013F8E  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5366  013F92  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5367  013F96  0E00               	movlw	low (__mediumconst shr (0+16))
  5368  013F98  6EF8               	movwf	tblptru,c
  5369  013F9A  0E0E               	movlw	(high __ramtop+-1)
  5370  013F9C  64F7               	cpfsgt	tblptrh,c
  5371  013F9E  D003               	bra	u8527
  5372  013FA0  0008               	tblrd		*
  5373  013FA2  50F5               	movf	tablat,w,c
  5374  013FA4  D005               	bra	u8520
  5375  013FA6                     u8527:
  5376  013FA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5377  013FAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5378  013FAE  50EF               	movf	indf0,w,c
  5379  013FB0                     u8520:
  5380  013FB0  0100               	movlb	0	; () banked
  5381  013FB2  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5382  013FB4  ECE6  F096         	call	_ringbuf_put	;wreg free
  5383  013FB8  0100               	movlb	0	; () banked
  5384  013FBA  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  5385  013FBC  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  5386  013FBE                     l8441:
  5387  013FBE  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  5388  013FC2  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  5389  013FC6  0E00               	movlw	low (__mediumconst shr (0+16))
  5390  013FC8  6EF8               	movwf	tblptru,c
  5391  013FCA  0E0E               	movlw	(high __ramtop+-1)
  5392  013FCC  64F7               	cpfsgt	tblptrh,c
  5393  013FCE  D003               	bra	u8537
  5394  013FD0  0008               	tblrd		*
  5395  013FD2  50F5               	movf	tablat,w,c
  5396  013FD4  D005               	bra	u8530
  5397  013FD6                     u8537:
  5398  013FD6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5399  013FDA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5400  013FDE  50EF               	movf	indf0,w,c
  5401  013FE0                     u8530:
  5402  013FE0  0900               	iorlw	0
  5403  013FE2  B4D8               	btfsc	status,2,c
  5404  013FE4  0012               	return	
  5405  013FE6  D7CF               	goto	l8437
  5406  013FE8                     __end_of_ringbuf_put_str:
  5407                           	opt stack 0
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           indf0	equ	0xFEF
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           postdec1	equ	0xFE5
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           fsr2h	equ	0xFDA
  5427                           fsr2l	equ	0xFD9
  5428                           status	equ	0xFD8
  5429                           
  5430 ;; *************** function _RTCC_from_caltime *****************
  5431 ;; Defined at:
  5432 ;;		line 205 in file "../My_library/My_RTCC.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  tm              2   47[BANK0 ] PTR struct .
  5435 ;;		 -> now(14), 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;Total ram usage:        2 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:   14
  5454 ;; This function calls:
  5455 ;;		_caltime_to_RTCC
  5456 ;;		_caltime_to_epoch
  5457 ;;		_epoch_to_caltime
  5458 ;; This function is called by:
  5459 ;;		_terminal_at_hand
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text8
  5464  01458E                     __ptext8:
  5465                           	opt stack 0
  5466  01458E                     _RTCC_from_caltime:
  5467                           	opt stack 12
  5468                           
  5469                           ;My_RTCC.c: 206: caltime_to_epoch(tm);
  5470                           
  5471                           ;incstack = 0
  5472  01458E  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5473  014592  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5474  014596  EC0F  F088         	call	_caltime_to_epoch	;wreg free
  5475                           
  5476                           ;My_RTCC.c: 207: epoch_to_caltime(tm);
  5477  01459A  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5478  01459E  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5479  0145A2  ECE7  F08C         	call	_epoch_to_caltime	;wreg free
  5480                           
  5481                           ;My_RTCC.c: 208: caltime_to_RTCC(tm);
  5482  0145A6  C08F  F076         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5483  0145AA  C090  F077         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5484  0145AE  EC11  F096         	call	_caltime_to_RTCC	;wreg free
  5485  0145B2  0012               	return		;funcret
  5486  0145B4                     __end_of_RTCC_from_caltime:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           prodh	equ	0xFF4
  5493                           prodl	equ	0xFF3
  5494                           intcon	equ	0xFF2
  5495                           indf0	equ	0xFEF
  5496                           postinc0	equ	0xFEE
  5497                           fsr0h	equ	0xFEA
  5498                           fsr0l	equ	0xFE9
  5499                           wreg	equ	0xFE8
  5500                           postdec1	equ	0xFE5
  5501                           fsr1h	equ	0xFE2
  5502                           fsr1l	equ	0xFE1
  5503                           indf2	equ	0xFDF
  5504                           postinc2	equ	0xFDE
  5505                           postdec2	equ	0xFDD
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _strcmp *****************
  5511 ;; Defined at:
  5512 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5515 ;;		 -> terminal_task@op1(25), terminal_task@op0(25), 
  5516 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5517 ;;		 -> STR_60(6), STR_59(2), STR_58(2), STR_57(2), 
  5518 ;;		 -> STR_56(2), STR_55(2), STR_54(2), STR_53(2), 
  5519 ;;		 -> STR_52(2), STR_51(4), STR_50(4), STR_49(4), 
  5520 ;;		 -> STR_48(4), STR_47(5), STR_46(4), STR_45(9), 
  5521 ;;		 -> STR_44(9), STR_42(2), STR_41(5), STR_40(7), 
  5522 ;;		 -> STR_39(2), STR_38(7), STR_37(2), STR_36(5), 
  5523 ;;		 -> STR_35(2), STR_34(4), STR_33(2), STR_32(6), 
  5524 ;;		 -> STR_31(2), STR_30(5), STR_29(2), STR_28(12), 
  5525 ;;		 -> STR_27(3), STR_26(2), STR_25(11), 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  r               1    5[BANK0 ] char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2    0[BANK0 ] int 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5537 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;Total ram usage:        6 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:   11
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_terminal_time
  5548 ;;		_terminal_operation
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text9
  5553  0140AC                     __ptext9:
  5554                           	opt stack 0
  5555  0140AC                     _strcmp:
  5556                           	opt stack 16
  5557                           
  5558                           ;incstack = 0
  5559  0140AC  D006               	goto	l8741
  5560  0140AE                     l8739:
  5561  0140AE  0100               	movlb	0	; () banked
  5562  0140B0  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5563  0140B2  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5564  0140B4  0100               	movlb	0	; () banked
  5565  0140B6  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5566  0140B8  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5567  0140BA                     l8741:
  5568  0140BA  C060  FFD9         	movff	strcmp@s1,fsr2l
  5569  0140BE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5570  0140C2  50DF               	movf	indf2,w,c
  5571  0140C4  0100               	movlb	0	; () banked
  5572  0140C6  6F64               	movwf	??_strcmp& (0+255),b
  5573  0140C8  C062  FFF6         	movff	strcmp@s2,tblptrl
  5574  0140CC  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5575  0140D0                     	if	0	;tblptru may be non-zero
  5576  0140D0                     	endif
  5577  0140D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5578  0140D0  0E00               	movlw	low (__mediumconst shr (0+16))
  5579  0140D2  6EF8               	movwf	tblptru,c
  5580  0140D4                     	endif
  5581  0140D4  0008               	tblrd		*
  5582  0140D6  50F5               	movf	tablat,w,c
  5583  0140D8  0800               	sublw	0
  5584  0140DA  0100               	movlb	0	; () banked
  5585  0140DC  2564               	addwf	??_strcmp& (0+255),w,b
  5586  0140DE  0100               	movlb	0	; () banked
  5587  0140E0  6F65               	movwf	strcmp@r& (0+255),b
  5588  0140E2  0100               	movlb	0	; () banked
  5589  0140E4  5165               	movf	strcmp@r& (0+255),w,b
  5590  0140E6  A4D8               	btfss	status,2,c
  5591  0140E8  D007               	goto	l8745
  5592                           
  5593                           ; BSR set to: 0
  5594  0140EA  C060  FFD9         	movff	strcmp@s1,fsr2l
  5595  0140EE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5596  0140F2  50DF               	movf	indf2,w,c
  5597  0140F4  A4D8               	btfss	status,2,c
  5598  0140F6  D7DB               	goto	l8739
  5599  0140F8                     l8745:
  5600                           
  5601                           ; BSR set to: 0
  5602  0140F8  0100               	movlb	0	; () banked
  5603  0140FA  5165               	movf	strcmp@r& (0+255),w,b
  5604  0140FC  0100               	movlb	0	; () banked
  5605  0140FE  6F60               	movwf	?_strcmp& (0+255),b
  5606  014100  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5607  014102  BF60               	btfsc	?_strcmp& (0+255),7,b
  5608  014104  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5609  014106  0012               	return	
  5610  014108                     __end_of_strcmp:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           indf0	equ	0xFEF
  5620                           postinc0	equ	0xFEE
  5621                           fsr0h	equ	0xFEA
  5622                           fsr0l	equ	0xFE9
  5623                           wreg	equ	0xFE8
  5624                           postdec1	equ	0xFE5
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           postdec2	equ	0xFDD
  5630                           fsr2h	equ	0xFDA
  5631                           fsr2l	equ	0xFD9
  5632                           status	equ	0xFD8
  5633                           
  5634 ;; *************** function _atoi *****************
  5635 ;; Defined at:
  5636 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atoi.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5639 ;;		 -> terminal_task@op2(25), 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  a               2   11[BANK0 ] int 
  5642 ;;  sign            1   10[BANK0 ] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  2    6[BANK0 ] int 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5655 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;Total ram usage:        7 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:   12
  5659 ;; This function calls:
  5660 ;;		___wmul
  5661 ;;		_isdigit
  5662 ;; This function is called by:
  5663 ;;		_terminal_time
  5664 ;;		_terminal_operation
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text10
  5669  0124FC                     __ptext10:
  5670                           	opt stack 0
  5671  0124FC                     _atoi:
  5672                           	opt stack 15
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;incstack = 0
  5676  0124FC  D003               	goto	l8753
  5677  0124FE                     l8751:
  5678  0124FE  0100               	movlb	0	; () banked
  5679  012500  4B66               	infsnz	atoi@s& (0+255),f,b
  5680  012502  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5681  012504                     l8753:
  5682  012504  C066  FFD9         	movff	atoi@s,fsr2l
  5683  012508  C067  FFDA         	movff	atoi@s+1,fsr2h
  5684  01250C  0E20               	movlw	32
  5685  01250E  18DE               	xorwf	postinc2,w,c
  5686  012510  B4D8               	btfsc	status,2,c
  5687  012512  D7F5               	goto	l8751
  5688  012514  C066  FFD9         	movff	atoi@s,fsr2l
  5689  012518  C067  FFDA         	movff	atoi@s+1,fsr2h
  5690  01251C  0E09               	movlw	9
  5691  01251E  18DE               	xorwf	postinc2,w,c
  5692  012520  B4D8               	btfsc	status,2,c
  5693  012522  D7ED               	goto	l8751
  5694  012524  0E00               	movlw	0
  5695  012526  0100               	movlb	0	; () banked
  5696  012528  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5697  01252A  0E00               	movlw	0
  5698  01252C  6F6B               	movwf	atoi@a& (0+255),b
  5699  01252E  0E00               	movlw	0
  5700  012530  0100               	movlb	0	; () banked
  5701  012532  6F6A               	movwf	atoi@sign& (0+255),b
  5702                           
  5703                           ; BSR set to: 0
  5704  012534  C066  FFD9         	movff	atoi@s,fsr2l
  5705  012538  C067  FFDA         	movff	atoi@s+1,fsr2h
  5706  01253C  0E2D               	movlw	45
  5707  01253E  18DE               	xorwf	postinc2,w,c
  5708  012540  A4D8               	btfss	status,2,c
  5709  012542  D003               	goto	l8763
  5710                           
  5711                           ; BSR set to: 0
  5712  012544  0100               	movlb	0	; () banked
  5713  012546  2B6A               	incf	atoi@sign& (0+255),f,b
  5714  012548  D02E               	goto	l8769
  5715  01254A                     l8763:
  5716                           
  5717                           ; BSR set to: 0
  5718  01254A  C066  FFD9         	movff	atoi@s,fsr2l
  5719  01254E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5720  012552  0E2B               	movlw	43
  5721  012554  18DE               	xorwf	postinc2,w,c
  5722  012556  A4D8               	btfss	status,2,c
  5723  012558  D029               	goto	l8771
  5724  01255A  D025               	goto	l8769
  5725  01255C                     l8767:
  5726  01255C  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5727  012560  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5728  012564  0E00               	movlw	0
  5729  012566  0100               	movlb	0	; () banked
  5730  012568  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5731  01256A  0E0A               	movlw	10
  5732  01256C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5733  01256E  ECE1  F0A1         	call	___wmul	;wreg free
  5734  012572  C066  FFD9         	movff	atoi@s,fsr2l
  5735  012576  C067  FFDA         	movff	atoi@s+1,fsr2h
  5736  01257A  50DF               	movf	indf2,w,c
  5737  01257C  0100               	movlb	0	; () banked
  5738  01257E  6F68               	movwf	??_atoi& (0+255),b
  5739  012580  6B69               	clrf	(??_atoi+1)& (0+255),b
  5740  012582  0100               	movlb	0	; () banked
  5741  012584  5160               	movf	?___wmul& (0+255),w,b
  5742  012586  0100               	movlb	0	; () banked
  5743  012588  2768               	addwf	??_atoi& (0+255),f,b
  5744  01258A  0100               	movlb	0	; () banked
  5745  01258C  5161               	movf	(?___wmul+1)& (0+255),w,b
  5746  01258E  0100               	movlb	0	; () banked
  5747  012590  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5748  012592  0ED0               	movlw	208
  5749  012594  0100               	movlb	0	; () banked
  5750  012596  2568               	addwf	??_atoi& (0+255),w,b
  5751  012598  0100               	movlb	0	; () banked
  5752  01259A  6F6B               	movwf	atoi@a& (0+255),b
  5753  01259C  0EFF               	movlw	255
  5754  01259E  0100               	movlb	0	; () banked
  5755  0125A0  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5756  0125A2  0100               	movlb	0	; () banked
  5757  0125A4  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5758  0125A6                     l8769:
  5759                           
  5760                           ; BSR set to: 0
  5761  0125A6  0100               	movlb	0	; () banked
  5762  0125A8  4B66               	infsnz	atoi@s& (0+255),f,b
  5763  0125AA  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5764  0125AC                     l8771:
  5765                           
  5766                           ; BSR set to: 0
  5767  0125AC  C066  FFD9         	movff	atoi@s,fsr2l
  5768  0125B0  C067  FFDA         	movff	atoi@s+1,fsr2h
  5769  0125B4  50DF               	movf	indf2,w,c
  5770  0125B6  EC9E  F0A2         	call	_isdigit
  5771  0125BA  B0D8               	btfsc	status,0,c
  5772  0125BC  D7CF               	goto	l8767
  5773  0125BE  0100               	movlb	0	; () banked
  5774  0125C0  516A               	movf	atoi@sign& (0+255),w,b
  5775  0125C2  0100               	movlb	0	; () banked
  5776  0125C4  B4D8               	btfsc	status,2,c
  5777  0125C6  D00E               	goto	l1693
  5778                           
  5779                           ; BSR set to: 0
  5780  0125C8  C06B  F068         	movff	atoi@a,??_atoi
  5781  0125CC  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5782  0125D0  0100               	movlb	0	; () banked
  5783  0125D2  1F68               	comf	??_atoi& (0+255),f,b
  5784  0125D4  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5785  0125D6  4B68               	infsnz	??_atoi& (0+255),f,b
  5786  0125D8  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5787  0125DA  C068  F066         	movff	??_atoi,?_atoi
  5788  0125DE  C069  F067         	movff	??_atoi+1,?_atoi+1
  5789  0125E2  0012               	return	
  5790  0125E4                     l1693:
  5791                           
  5792                           ; BSR set to: 0
  5793  0125E4  C06B  F066         	movff	atoi@a,?_atoi
  5794  0125E8  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5795                           
  5796                           ; BSR set to: 0
  5797  0125EC  0012               	return		;funcret
  5798  0125EE                     __end_of_atoi:
  5799                           	opt stack 0
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           prodh	equ	0xFF4
  5805                           prodl	equ	0xFF3
  5806                           intcon	equ	0xFF2
  5807                           indf0	equ	0xFEF
  5808                           postinc0	equ	0xFEE
  5809                           fsr0h	equ	0xFEA
  5810                           fsr0l	equ	0xFE9
  5811                           wreg	equ	0xFE8
  5812                           postdec1	equ	0xFE5
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _isdigit *****************
  5823 ;; Defined at:
  5824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;  c               1    wreg     unsigned char 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  c               1    2[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        3 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:   11
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_sprintf
  5849 ;;		_atoi
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text11
  5854  01453C                     __ptext11:
  5855                           	opt stack 0
  5856  01453C                     _isdigit:
  5857                           	opt stack 13
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;incstack = 0
  5861                           ;isdigit@c stored from wreg
  5862  01453C  0100               	movlb	0	; () banked
  5863  01453E  6F62               	movwf	isdigit@c& (0+255),b
  5864  014540  0E00               	movlw	0
  5865  014542  0100               	movlb	0	; () banked
  5866  014544  6F61               	movwf	_isdigit$6052& (0+255),b
  5867                           
  5868                           ; BSR set to: 0
  5869  014546  0E3A               	movlw	58
  5870  014548  0100               	movlb	0	; () banked
  5871  01454A  6162               	cpfslt	isdigit@c& (0+255),b
  5872  01454C  D007               	goto	l8387
  5873                           
  5874                           ; BSR set to: 0
  5875  01454E  0E2F               	movlw	47
  5876  014550  0100               	movlb	0	; () banked
  5877  014552  6562               	cpfsgt	isdigit@c& (0+255),b
  5878  014554  D003               	goto	l8387
  5879                           
  5880                           ; BSR set to: 0
  5881  014556  0E01               	movlw	1
  5882  014558  0100               	movlb	0	; () banked
  5883  01455A  6F61               	movwf	_isdigit$6052& (0+255),b
  5884  01455C                     l8387:
  5885                           
  5886                           ; BSR set to: 0
  5887  01455C  C061  F060         	movff	_isdigit$6052,??_isdigit
  5888  014560  0100               	movlb	0	; () banked
  5889  014562  3160               	rrcf	??_isdigit& (0+255),w,b
  5890  014564  0012               	return	
  5891  014566                     __end_of_isdigit:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           indf0	equ	0xFEF
  5901                           postinc0	equ	0xFEE
  5902                           fsr0h	equ	0xFEA
  5903                           fsr0l	equ	0xFE9
  5904                           wreg	equ	0xFE8
  5905                           postdec1	equ	0xFE5
  5906                           fsr1h	equ	0xFE2
  5907                           fsr1l	equ	0xFE1
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           postdec2	equ	0xFDD
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _ringbuf_put_num *****************
  5916 ;; Defined at:
  5917 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  rb              2   18[BANK0 ] PTR struct ringbuf
  5920 ;;		 -> usb_tx(8), 
  5921 ;;  value           2   20[BANK0 ] const unsigned int 
  5922 ;;  digits          1   22[BANK0 ] unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  i               1   23[BANK0 ] unsigned char 
  5925 ;;  temp            2   24[BANK0 ] unsigned int 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5935 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;Total ram usage:        8 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:   13
  5942 ;; This function calls:
  5943 ;;		___lwdiv
  5944 ;;		___lwmod
  5945 ;;		_ringbuf_put
  5946 ;; This function is called by:
  5947 ;;		_terminal_task
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text12
  5952  013CBA                     __ptext12:
  5953                           	opt stack 0
  5954  013CBA                     _ringbuf_put_num:
  5955                           	opt stack 16
  5956                           
  5957                           ;My_ringbuf.c: 29: while (digits--) {
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;incstack = 0
  5961  013CBA  D039               	goto	l9165
  5962  013CBC                     l726:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5966  013CBC  C074  F078         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5967  013CC0  C075  F079         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5971  013CC4  0E00               	movlw	0
  5972  013CC6  0100               	movlb	0	; () banked
  5973  013CC8  6F77               	movwf	ringbuf_put_num@i& (0+255),b
  5974  013CCA  D011               	goto	l9159
  5975  013CCC                     l9155:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;My_ringbuf.c: 32: temp /= 10;
  5979  013CCC  C078  F066         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5980  013CD0  C079  F067         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5981  013CD4  0E00               	movlw	0
  5982  013CD6  0100               	movlb	0	; () banked
  5983  013CD8  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5984  013CDA  0E0A               	movlw	10
  5985  013CDC  6F68               	movwf	___lwdiv@divisor& (0+255),b
  5986  013CDE  ECDF  F09E         	call	___lwdiv	;wreg free
  5987  013CE2  C066  F078         	movff	?___lwdiv,ringbuf_put_num@temp
  5988  013CE6  C067  F079         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5989  013CEA  0100               	movlb	0	; () banked
  5990  013CEC  2B77               	incf	ringbuf_put_num@i& (0+255),f,b
  5991  013CEE                     l9159:
  5992                           
  5993                           ; BSR set to: 0
  5994  013CEE  0100               	movlb	0	; () banked
  5995  013CF0  5176               	movf	ringbuf_put_num@digits& (0+255),w,b
  5996  013CF2  0100               	movlb	0	; () banked
  5997  013CF4  5D77               	subwf	ringbuf_put_num@i& (0+255),w,b
  5998  013CF6  A0D8               	btfss	status,0,c
  5999  013CF8  D7E9               	goto	l9155
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;My_ringbuf.c: 33: }
  6003                           ;My_ringbuf.c: 34: temp %= 10;
  6004                           
  6005                           ; BSR set to: 0
  6006  013CFA  C078  F06D         	movff	ringbuf_put_num@temp,___lwmod@dividend
  6007  013CFE  C079  F06E         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  6008  013D02  0E00               	movlw	0
  6009  013D04  0100               	movlb	0	; () banked
  6010  013D06  6F70               	movwf	(___lwmod@divisor+1)& (0+255),b
  6011  013D08  0E0A               	movlw	10
  6012  013D0A  6F6F               	movwf	___lwmod@divisor& (0+255),b
  6013  013D0C  EC25  F0A0         	call	___lwmod	;wreg free
  6014  013D10  C06D  F078         	movff	?___lwmod,ringbuf_put_num@temp
  6015  013D14  C06E  F079         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  6016                           
  6017                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  6018  013D18  C072  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  6019  013D1C  C073  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  6020  013D20  0100               	movlb	0	; () banked
  6021  013D22  5178               	movf	ringbuf_put_num@temp& (0+255),w,b
  6022  013D24  0F30               	addlw	48
  6023  013D26  0100               	movlb	0	; () banked
  6024  013D28  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  6025  013D2A  ECE6  F096         	call	_ringbuf_put	;wreg free
  6026  013D2E                     l9165:
  6027  013D2E  0100               	movlb	0	; () banked
  6028  013D30  0776               	decf	ringbuf_put_num@digits& (0+255),f,b
  6029  013D32  0100               	movlb	0	; () banked
  6030  013D34  2976               	incf	ringbuf_put_num@digits& (0+255),w,b
  6031  013D36  B4D8               	btfsc	status,2,c
  6032  013D38  0012               	return	
  6033  013D3A  D7C0               	goto	l726
  6034  013D3C                     __end_of_ringbuf_put_num:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           indf0	equ	0xFEF
  6044                           postinc0	equ	0xFEE
  6045                           fsr0h	equ	0xFEA
  6046                           fsr0l	equ	0xFE9
  6047                           wreg	equ	0xFE8
  6048                           postdec1	equ	0xFE5
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           indf2	equ	0xFDF
  6052                           postinc2	equ	0xFDE
  6053                           postdec2	equ	0xFDD
  6054                           fsr2h	equ	0xFDA
  6055                           fsr2l	equ	0xFD9
  6056                           status	equ	0xFD8
  6057                           
  6058 ;; *************** function ___lwmod *****************
  6059 ;; Defined at:
  6060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  dividend        2   13[BANK0 ] unsigned int 
  6063 ;;  divisor         2   15[BANK0 ] unsigned int 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  counter         1   17[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2   13[BANK0 ] unsigned int 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6078 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6079 ;;Total ram usage:        5 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:   11
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_ringbuf_put_num
  6086 ;;		_sprintf
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text13
  6091  01404A                     __ptext13:
  6092                           	opt stack 0
  6093  01404A                     ___lwmod:
  6094                           	opt stack 13
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;incstack = 0
  6098  01404A  0100               	movlb	0	; () banked
  6099  01404C  516F               	movf	___lwmod@divisor& (0+255),w,b
  6100  01404E  0100               	movlb	0	; () banked
  6101  014050  1170               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6102  014052  B4D8               	btfsc	status,2,c
  6103  014054  D026               	goto	l1953
  6104                           
  6105                           ; BSR set to: 0
  6106  014056  0E01               	movlw	1
  6107  014058  0100               	movlb	0	; () banked
  6108  01405A  6F71               	movwf	___lwmod@counter& (0+255),b
  6109  01405C  D006               	goto	l8425
  6110  01405E                     l8423:
  6111                           
  6112                           ; BSR set to: 0
  6113  01405E  0100               	movlb	0	; () banked
  6114  014060  90D8               	bcf	status,0,c
  6115  014062  376F               	rlcf	___lwmod@divisor& (0+255),f,b
  6116  014064  3770               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6117  014066  0100               	movlb	0	; () banked
  6118  014068  2B71               	incf	___lwmod@counter& (0+255),f,b
  6119  01406A                     l8425:
  6120                           
  6121                           ; BSR set to: 0
  6122  01406A  0100               	movlb	0	; () banked
  6123  01406C  AF70               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6124  01406E  D7F7               	goto	l8423
  6125  014070                     l8427:
  6126                           
  6127                           ; BSR set to: 0
  6128  014070  0100               	movlb	0	; () banked
  6129  014072  516F               	movf	___lwmod@divisor& (0+255),w,b
  6130  014074  0100               	movlb	0	; () banked
  6131  014076  5D6D               	subwf	___lwmod@dividend& (0+255),w,b
  6132  014078  0100               	movlb	0	; () banked
  6133  01407A  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6134  01407C  0100               	movlb	0	; () banked
  6135  01407E  596E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6136  014080  A0D8               	btfss	status,0,c
  6137  014082  D008               	goto	l8431
  6138                           
  6139                           ; BSR set to: 0
  6140  014084  0100               	movlb	0	; () banked
  6141  014086  516F               	movf	___lwmod@divisor& (0+255),w,b
  6142  014088  0100               	movlb	0	; () banked
  6143  01408A  5F6D               	subwf	___lwmod@dividend& (0+255),f,b
  6144  01408C  0100               	movlb	0	; () banked
  6145  01408E  5170               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6146  014090  0100               	movlb	0	; () banked
  6147  014092  5B6E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6148  014094                     l8431:
  6149                           
  6150                           ; BSR set to: 0
  6151  014094  0100               	movlb	0	; () banked
  6152  014096  90D8               	bcf	status,0,c
  6153  014098  3370               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6154  01409A  336F               	rrcf	___lwmod@divisor& (0+255),f,b
  6155                           
  6156                           ; BSR set to: 0
  6157  01409C  0100               	movlb	0	; () banked
  6158  01409E  2F71               	decfsz	___lwmod@counter& (0+255),f,b
  6159  0140A0  D7E7               	goto	l8427
  6160  0140A2                     l1953:
  6161                           
  6162                           ; BSR set to: 0
  6163  0140A2  C06D  F06D         	movff	___lwmod@dividend,?___lwmod
  6164  0140A6  C06E  F06E         	movff	___lwmod@dividend+1,?___lwmod+1
  6165                           
  6166                           ; BSR set to: 0
  6167  0140AA  0012               	return		;funcret
  6168  0140AC                     __end_of___lwmod:
  6169                           	opt stack 0
  6170                           tblptru	equ	0xFF8
  6171                           tblptrh	equ	0xFF7
  6172                           tblptrl	equ	0xFF6
  6173                           tablat	equ	0xFF5
  6174                           prodh	equ	0xFF4
  6175                           prodl	equ	0xFF3
  6176                           intcon	equ	0xFF2
  6177                           indf0	equ	0xFEF
  6178                           postinc0	equ	0xFEE
  6179                           fsr0h	equ	0xFEA
  6180                           fsr0l	equ	0xFE9
  6181                           wreg	equ	0xFE8
  6182                           postdec1	equ	0xFE5
  6183                           fsr1h	equ	0xFE2
  6184                           fsr1l	equ	0xFE1
  6185                           indf2	equ	0xFDF
  6186                           postinc2	equ	0xFDE
  6187                           postdec2	equ	0xFDD
  6188                           fsr2h	equ	0xFDA
  6189                           fsr2l	equ	0xFD9
  6190                           status	equ	0xFD8
  6191                           
  6192 ;; *************** function _ringbuf_delete *****************
  6193 ;; Defined at:
  6194 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6197 ;;		 -> terminal_task@command(8), 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;		None               void
  6202 ;; Registers used:
  6203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6212 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6213 ;;Total ram usage:        2 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:   11
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_terminal_task
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text14
  6224  0145B4                     __ptext14:
  6225                           	opt stack 0
  6226  0145B4                     _ringbuf_delete:
  6227                           	opt stack 18
  6228                           
  6229                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;incstack = 0
  6233  0145B4  0100               	movlb	0	; () banked
  6234  0145B6  EE20 F006          	lfsr	2,6
  6235  0145BA  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6236  0145BC  26D9               	addwf	fsr2l,f,c
  6237  0145BE  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6238  0145C0  22DA               	addwfc	fsr2h,f,c
  6239  0145C2  0100               	movlb	0	; () banked
  6240  0145C4  EE10 F004          	lfsr	1,4
  6241  0145C8  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6242  0145CA  26E1               	addwf	fsr1l,f,c
  6243  0145CC  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6244  0145CE  22E2               	addwfc	fsr1h,f,c
  6245  0145D0  CFDE FFE6          	movff	postinc2,postinc1
  6246  0145D4  CFDD FFE5          	movff	postdec2,postdec1
  6247                           
  6248                           ; BSR set to: 0
  6249  0145D8  0012               	return		;funcret
  6250  0145DA                     __end_of_ringbuf_delete:
  6251                           	opt stack 0
  6252                           tblptru	equ	0xFF8
  6253                           tblptrh	equ	0xFF7
  6254                           tblptrl	equ	0xFF6
  6255                           tablat	equ	0xFF5
  6256                           prodh	equ	0xFF4
  6257                           prodl	equ	0xFF3
  6258                           intcon	equ	0xFF2
  6259                           indf0	equ	0xFEF
  6260                           postinc0	equ	0xFEE
  6261                           fsr0h	equ	0xFEA
  6262                           fsr0l	equ	0xFE9
  6263                           wreg	equ	0xFE8
  6264                           postinc1	equ	0xFE6
  6265                           postdec1	equ	0xFE5
  6266                           fsr1h	equ	0xFE2
  6267                           fsr1l	equ	0xFE1
  6268                           indf2	equ	0xFDF
  6269                           postinc2	equ	0xFDE
  6270                           postdec2	equ	0xFDD
  6271                           fsr2h	equ	0xFDA
  6272                           fsr2l	equ	0xFD9
  6273                           status	equ	0xFD8
  6274                           
  6275 ;; *************** function _ringbuf_backspace *****************
  6276 ;; Defined at:
  6277 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6280 ;;		 -> terminal_task@command(8), 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;		None               void
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;Total ram usage:        6 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:   12
  6299 ;; This function calls:
  6300 ;;		_ringbuf_num
  6301 ;; This function is called by:
  6302 ;;		_terminal_task
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text15
  6307  013A8E                     __ptext15:
  6308                           	opt stack 0
  6309  013A8E                     _ringbuf_backspace:
  6310                           	opt stack 17
  6311                           
  6312                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  013A8E  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6317  013A92  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6318  013A96  EC6F  F093         	call	_ringbuf_num	;wreg free
  6319  013A9A  0100               	movlb	0	; () banked
  6320  013A9C  5160               	movf	?_ringbuf_num& (0+255),w,b
  6321  013A9E  0100               	movlb	0	; () banked
  6322  013AA0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6323  013AA2  B4D8               	btfsc	status,2,c
  6324  013AA4  0012               	return	
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6328  013AA6  0100               	movlb	0	; () banked
  6329  013AA8  EE20 F004          	lfsr	2,4
  6330  013AAC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6331  013AAE  26D9               	addwf	fsr2l,f,c
  6332  013AB0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6333  013AB2  22DA               	addwfc	fsr2h,f,c
  6334  013AB4  50DE               	movf	postinc2,w,c
  6335  013AB6  10DE               	iorwf	postinc2,w,c
  6336  013AB8  B4D8               	btfsc	status,2,c
  6337  013ABA  D00B               	goto	l9193
  6338                           
  6339                           ; BSR set to: 0
  6340  013ABC  0100               	movlb	0	; () banked
  6341  013ABE  EE20 F004          	lfsr	2,4
  6342  013AC2  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6343  013AC4  26D9               	addwf	fsr2l,f,c
  6344  013AC6  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6345  013AC8  22DA               	addwfc	fsr2h,f,c
  6346  013ACA  06DE               	decf	postinc2,f,c
  6347  013ACC  0E00               	movlw	0
  6348  013ACE  5ADD               	subwfb	postdec2,f,c
  6349  013AD0  0012               	return	
  6350  013AD2                     l9193:
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6354  013AD2  0EFF               	movlw	255
  6355  013AD4  0100               	movlb	0	; () banked
  6356  013AD6  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6357  013AD8  0EFF               	movlw	255
  6358  013ADA  0100               	movlb	0	; () banked
  6359  013ADC  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6360  013ADE  0100               	movlb	0	; () banked
  6361  013AE0  EE20 F002          	lfsr	2,2
  6362  013AE4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6363  013AE6  26D9               	addwf	fsr2l,f,c
  6364  013AE8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6365  013AEA  22DA               	addwfc	fsr2h,f,c
  6366  013AEC  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6367  013AF0  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6368  013AF4  0100               	movlb	0	; () banked
  6369  013AF6  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6370  013AF8  0100               	movlb	0	; () banked
  6371  013AFA  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6372  013AFC  0100               	movlb	0	; () banked
  6373  013AFE  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6374  013B00  0100               	movlb	0	; () banked
  6375  013B02  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6376  013B04  0100               	movlb	0	; () banked
  6377  013B06  EE20 F004          	lfsr	2,4
  6378  013B0A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6379  013B0C  26D9               	addwf	fsr2l,f,c
  6380  013B0E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6381  013B10  22DA               	addwfc	fsr2h,f,c
  6382  013B12  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6383  013B16  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6384                           
  6385                           ; BSR set to: 0
  6386  013B1A  0012               	return	
  6387  013B1C                     __end_of_ringbuf_backspace:
  6388                           	opt stack 0
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           intcon	equ	0xFF2
  6396                           indf0	equ	0xFEF
  6397                           postinc0	equ	0xFEE
  6398                           fsr0h	equ	0xFEA
  6399                           fsr0l	equ	0xFE9
  6400                           wreg	equ	0xFE8
  6401                           postinc1	equ	0xFE6
  6402                           postdec1	equ	0xFE5
  6403                           fsr1h	equ	0xFE2
  6404                           fsr1l	equ	0xFE1
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function _main_init *****************
  6413 ;; Defined at:
  6414 ;;		line 285 in file "PIC18F27J53-killifish_light06.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;		None               void
  6421 ;; Registers used:
  6422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   16
  6435 ;; This function calls:
  6436 ;;		_ADC_init
  6437 ;;		_OSC_init
  6438 ;;		_PWM_init
  6439 ;;		_RTCC_init
  6440 ;;		_USB_init
  6441 ;;		_ringbuf_init
  6442 ;;		_timer0_init
  6443 ;;		_timer1_init
  6444 ;;		_timer3_init
  6445 ;; This function is called by:
  6446 ;;		_main
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text16
  6451  0138CA                     __ptext16:
  6452                           	opt stack 0
  6453  0138CA                     _main_init:
  6454                           	opt stack 14
  6455                           
  6456                           ;PIC18F27J53-killifish_light06.c: 286: OSC_init();
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;incstack = 0
  6460  0138CA  EC54  F0A3         	call	_OSC_init	;wreg free
  6461                           
  6462                           ;PIC18F27J53-killifish_light06.c: 287: TRISA = 0b11100111;
  6463  0138CE  0EE7               	movlw	231
  6464  0138D0  6E92               	movwf	3986,c	;volatile
  6465                           
  6466                           ;PIC18F27J53-killifish_light06.c: 288: TRISB = 0b00000000;
  6467  0138D2  0E00               	movlw	0
  6468  0138D4  6E93               	movwf	3987,c	;volatile
  6469                           
  6470                           ;PIC18F27J53-killifish_light06.c: 289: TRISC = 0b10111010;
  6471  0138D6  0EBA               	movlw	186
  6472  0138D8  6E94               	movwf	3988,c	;volatile
  6473                           
  6474                           ;PIC18F27J53-killifish_light06.c: 290: ANCON0 = 0b11111000;
  6475  0138DA  0EF8               	movlw	248
  6476  0138DC  010F               	movlb	15	; () banked
  6477  0138DE  6F48               	movwf	72,b	;volatile
  6478                           
  6479                           ; BSR set to: 15
  6480                           ;PIC18F27J53-killifish_light06.c: 291: ANCON1 = 0b00011111;
  6481  0138E0  0E1F               	movlw	31
  6482  0138E2  010F               	movlb	15	; () banked
  6483  0138E4  6F49               	movwf	73,b	;volatile
  6484                           
  6485                           ; BSR set to: 15
  6486                           ;PIC18F27J53-killifish_light06.c: 292: INTCON2bits.RBPU = 0;
  6487  0138E6  9EF1               	bcf	intcon2,7,c	;volatile
  6488                           
  6489                           ; BSR set to: 15
  6490                           ;PIC18F27J53-killifish_light06.c: 294: timer0_init(8);
  6491  0138E8  0E08               	movlw	8
  6492  0138EA  ECA8  F0A1         	call	_timer0_init
  6493                           
  6494                           ;PIC18F27J53-killifish_light06.c: 295: timer1_init(0, 2);
  6495  0138EE  0E02               	movlw	2
  6496  0138F0  0100               	movlb	0	; () banked
  6497  0138F2  6F60               	movwf	timer1_init@clock_select& (0+255),b
  6498  0138F4  0E00               	movlw	0
  6499  0138F6  ECDC  F0A0         	call	_timer1_init
  6500                           
  6501                           ;PIC18F27J53-killifish_light06.c: 296: timer3_init(2);
  6502  0138FA  0E02               	movlw	2
  6503  0138FC  EC46  F0A2         	call	_timer3_init
  6504                           
  6505                           ;PIC18F27J53-killifish_light06.c: 297: ADC_init(0);
  6506  013900  0E00               	movlw	0
  6507  013902  ECFE  F0A2         	call	_ADC_init
  6508                           
  6509                           ;PIC18F27J53-killifish_light06.c: 298: RTCC_init();
  6510  013906  EC8D  F09F         	call	_RTCC_init	;wreg free
  6511                           
  6512                           ;PIC18F27J53-killifish_light06.c: 299: PWM_init(250);
  6513  01390A  0EFA               	movlw	250
  6514  01390C  EC46  F099         	call	_PWM_init
  6515                           
  6516                           ;PIC18F27J53-killifish_light06.c: 301: USB_init();
  6517  013910  EC1E  F0A3         	call	_USB_init	;wreg free
  6518                           
  6519                           ;PIC18F27J53-killifish_light06.c: 302: static uint8_t txbuf[1000];
  6520                           ;PIC18F27J53-killifish_light06.c: 303: ringbuf_init(&usb_tx, txbuf, sizeof (txbuf));
  6521  013914  0E78               	movlw	low _usb_tx
  6522  013916  0100               	movlb	0	; () banked
  6523  013918  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6524  01391A  0E01               	movlw	high _usb_tx
  6525  01391C  0100               	movlb	0	; () banked
  6526  01391E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6527  013920  0E69               	movlw	low main_init@txbuf
  6528  013922  0100               	movlb	0	; () banked
  6529  013924  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6530  013926  0E04               	movlw	high main_init@txbuf
  6531  013928  0100               	movlb	0	; () banked
  6532  01392A  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6533  01392C  0E03               	movlw	3
  6534  01392E  0100               	movlb	0	; () banked
  6535  013930  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6536  013932  0EE8               	movlw	232
  6537  013934  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6538  013936  ECB2  F0A0         	call	_ringbuf_init	;wreg free
  6539                           
  6540                           ;PIC18F27J53-killifish_light06.c: 304: static uint8_t rxbuf[250];
  6541                           ;PIC18F27J53-killifish_light06.c: 305: ringbuf_init(&usb_rx, rxbuf, sizeof (rxbuf));
  6542  01393A  0E70               	movlw	low _usb_rx
  6543  01393C  0100               	movlb	0	; () banked
  6544  01393E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  6545  013940  0E01               	movlw	high _usb_rx
  6546  013942  0100               	movlb	0	; () banked
  6547  013944  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  6548  013946  0E00               	movlw	low main_init@rxbuf
  6549  013948  0100               	movlb	0	; () banked
  6550  01394A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  6551  01394C  0E03               	movlw	high main_init@rxbuf
  6552  01394E  0100               	movlb	0	; () banked
  6553  013950  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  6554  013952  0E00               	movlw	0
  6555  013954  0100               	movlb	0	; () banked
  6556  013956  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  6557  013958  0EFA               	movlw	250
  6558  01395A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  6559  01395C  ECB2  F0A0         	call	_ringbuf_init	;wreg free
  6560  013960  0012               	return		;funcret
  6561  013962                     __end_of_main_init:
  6562                           	opt stack 0
  6563                           tblptru	equ	0xFF8
  6564                           tblptrh	equ	0xFF7
  6565                           tblptrl	equ	0xFF6
  6566                           tablat	equ	0xFF5
  6567                           prodh	equ	0xFF4
  6568                           prodl	equ	0xFF3
  6569                           intcon	equ	0xFF2
  6570                           intcon2	equ	0xFF1
  6571                           indf0	equ	0xFEF
  6572                           postinc0	equ	0xFEE
  6573                           fsr0h	equ	0xFEA
  6574                           fsr0l	equ	0xFE9
  6575                           wreg	equ	0xFE8
  6576                           postinc1	equ	0xFE6
  6577                           postdec1	equ	0xFE5
  6578                           fsr1h	equ	0xFE2
  6579                           fsr1l	equ	0xFE1
  6580                           indf2	equ	0xFDF
  6581                           postinc2	equ	0xFDE
  6582                           postdec2	equ	0xFDD
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function _timer3_init *****************
  6588 ;; Defined at:
  6589 ;;		line 101 in file "../My_library/My_PIC.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  prescaler       1    wreg     unsigned char 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;		None               void
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;Total ram usage:        2 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:   11
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_main_init
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text17
  6618  01448C                     __ptext17:
  6619                           	opt stack 0
  6620  01448C                     _timer3_init:
  6621                           	opt stack 18
  6622                           
  6623                           ;incstack = 0
  6624                           ;timer3_init@prescaler stored from wreg
  6625  01448C  0100               	movlb	0	; () banked
  6626  01448E  6F61               	movwf	timer3_init@prescaler& (0+255),b
  6627                           
  6628                           ;My_PIC.c: 102: T3CONbits.TMR3CS = 0;
  6629  014490  0E3F               	movlw	-193
  6630  014492  1679               	andwf	3961,f,c	;volatile
  6631                           
  6632                           ;My_PIC.c: 103: T3CONbits.T3OSCEN = 0;
  6633  014494  9679               	bcf	3961,3,c	;volatile
  6634                           
  6635                           ;My_PIC.c: 104: T3CONbits.T3CKPS = prescaler;
  6636  014496  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  6637  01449A  0100               	movlb	0	; () banked
  6638  01449C  3B60               	swapf	??_timer3_init& (0+255),f,b
  6639  01449E  5079               	movf	3961,w,c	;volatile
  6640  0144A0  0100               	movlb	0	; () banked
  6641  0144A2  1960               	xorwf	??_timer3_init& (0+255),w,b
  6642  0144A4  0BCF               	andlw	-49
  6643  0144A6  1960               	xorwf	??_timer3_init& (0+255),w,b
  6644  0144A8  6E79               	movwf	3961,c	;volatile
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;My_PIC.c: 105: T3CONbits.RD163 = 0;
  6648  0144AA  9E79               	bcf	3961,7,c	;volatile
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;My_PIC.c: 106: T3CONbits.TMR3ON = 1;
  6652  0144AC  8079               	bsf	3961,0,c	;volatile
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;My_PIC.c: 107: IPR2bits.TMR3IP = 0;
  6656  0144AE  92A2               	bcf	4002,1,c	;volatile
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;My_PIC.c: 108: PIR2bits.TMR3IF = 0;
  6660  0144B0  92A1               	bcf	4001,1,c	;volatile
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;My_PIC.c: 109: PIE2bits.TMR3IE = 1;
  6664  0144B2  82A0               	bsf	4000,1,c	;volatile
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;My_PIC.c: 110: INTCONbits.PEIE = 1;
  6668  0144B4  8CF2               	bsf	intcon,6,c	;volatile
  6669                           
  6670                           ; BSR set to: 0
  6671  0144B6  0012               	return		;funcret
  6672  0144B8                     __end_of_timer3_init:
  6673                           	opt stack 0
  6674                           tblptru	equ	0xFF8
  6675                           tblptrh	equ	0xFF7
  6676                           tblptrl	equ	0xFF6
  6677                           tablat	equ	0xFF5
  6678                           prodh	equ	0xFF4
  6679                           prodl	equ	0xFF3
  6680                           intcon	equ	0xFF2
  6681                           intcon2	equ	0xFF1
  6682                           indf0	equ	0xFEF
  6683                           postinc0	equ	0xFEE
  6684                           fsr0h	equ	0xFEA
  6685                           fsr0l	equ	0xFE9
  6686                           wreg	equ	0xFE8
  6687                           postinc1	equ	0xFE6
  6688                           postdec1	equ	0xFE5
  6689                           fsr1h	equ	0xFE2
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           postinc2	equ	0xFDE
  6693                           postdec2	equ	0xFDD
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8
  6697                           
  6698 ;; *************** function _timer1_init *****************
  6699 ;; Defined at:
  6700 ;;		line 70 in file "../My_library/My_PIC.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  prescaler       1    wreg     unsigned char 
  6703 ;;  clock_select    1    0[BANK0 ] unsigned char 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  prescaler       1    2[BANK0 ] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;		None               void
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6715 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;Total ram usage:        3 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:   11
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_main_init
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text18
  6730  0141B8                     __ptext18:
  6731                           	opt stack 0
  6732  0141B8                     _timer1_init:
  6733                           	opt stack 18
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;incstack = 0
  6737                           ;timer1_init@prescaler stored from wreg
  6738  0141B8  0100               	movlb	0	; () banked
  6739  0141BA  6F62               	movwf	timer1_init@prescaler& (0+255),b
  6740                           
  6741                           ;My_PIC.c: 71: T1CONbits.TMR1CS = clock_select;
  6742  0141BC  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  6743  0141C0  0100               	movlb	0	; () banked
  6744  0141C2  3B61               	swapf	??_timer1_init& (0+255),f,b
  6745  0141C4  4761               	rlncf	??_timer1_init& (0+255),f,b
  6746  0141C6  4761               	rlncf	??_timer1_init& (0+255),f,b
  6747  0141C8  50CD               	movf	4045,w,c	;volatile
  6748  0141CA  0100               	movlb	0	; () banked
  6749  0141CC  1961               	xorwf	??_timer1_init& (0+255),w,b
  6750  0141CE  0B3F               	andlw	-193
  6751  0141D0  1961               	xorwf	??_timer1_init& (0+255),w,b
  6752  0141D2  6ECD               	movwf	4045,c	;volatile
  6753                           
  6754                           ;My_PIC.c: 72: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  6755  0141D4  0E02               	movlw	2
  6756  0141D6  0100               	movlb	0	; () banked
  6757  0141D8  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  6758  0141DA  A4D8               	btfss	status,2,c
  6759  0141DC  D002               	goto	l662
  6760                           
  6761                           ; BSR set to: 0
  6762  0141DE  86CD               	bsf	4045,3,c	;volatile
  6763  0141E0  D001               	goto	l9099
  6764  0141E2                     l662:
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;My_PIC.c: 73: else T1CONbits.T1OSCEN = 0;
  6768  0141E2  96CD               	bcf	4045,3,c	;volatile
  6769  0141E4                     l9099:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;My_PIC.c: 74: T1CONbits.T1CKPS = prescaler;
  6773  0141E4  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  6774  0141E8  0100               	movlb	0	; () banked
  6775  0141EA  3B61               	swapf	??_timer1_init& (0+255),f,b
  6776  0141EC  50CD               	movf	4045,w,c	;volatile
  6777  0141EE  0100               	movlb	0	; () banked
  6778  0141F0  1961               	xorwf	??_timer1_init& (0+255),w,b
  6779  0141F2  0BCF               	andlw	-49
  6780  0141F4  1961               	xorwf	??_timer1_init& (0+255),w,b
  6781  0141F6  6ECD               	movwf	4045,c	;volatile
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;My_PIC.c: 75: T1CONbits.nT1SYNC = 1;
  6785  0141F8  84CD               	bsf	4045,2,c	;volatile
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;My_PIC.c: 76: T1CONbits.RD16 = 0;
  6789  0141FA  92CD               	bcf	4045,1,c	;volatile
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;My_PIC.c: 77: T1CONbits.TMR1ON = 1;
  6793  0141FC  80CD               	bsf	4045,0,c	;volatile
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;My_PIC.c: 78: IPR1bits.TMR1IP = 0;
  6797  0141FE  909F               	bcf	3999,0,c	;volatile
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;My_PIC.c: 79: PIR1bits.TMR1IF = 0;
  6801  014200  909E               	bcf	3998,0,c	;volatile
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;My_PIC.c: 80: PIE1bits.TMR1IE = 1;
  6805  014202  809D               	bsf	3997,0,c	;volatile
  6806                           
  6807                           ; BSR set to: 0
  6808                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  6809  014204  8CF2               	bsf	intcon,6,c	;volatile
  6810                           
  6811                           ; BSR set to: 0
  6812  014206  0012               	return		;funcret
  6813  014208                     __end_of_timer1_init:
  6814                           	opt stack 0
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           intcon	equ	0xFF2
  6822                           intcon2	equ	0xFF1
  6823                           indf0	equ	0xFEF
  6824                           postinc0	equ	0xFEE
  6825                           fsr0h	equ	0xFEA
  6826                           fsr0l	equ	0xFE9
  6827                           wreg	equ	0xFE8
  6828                           postinc1	equ	0xFE6
  6829                           postdec1	equ	0xFE5
  6830                           fsr1h	equ	0xFE2
  6831                           fsr1l	equ	0xFE1
  6832                           indf2	equ	0xFDF
  6833                           postinc2	equ	0xFDE
  6834                           postdec2	equ	0xFDD
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           
  6839 ;; *************** function _timer0_init *****************
  6840 ;; Defined at:
  6841 ;;		line 34 in file "../My_library/My_PIC.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  prescaler       1    wreg     unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  prescaler       1    1[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;Total ram usage:        2 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:   11
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_main_init
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text19
  6870  014350                     __ptext19:
  6871                           	opt stack 0
  6872  014350                     _timer0_init:
  6873                           	opt stack 18
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;incstack = 0
  6877                           ;timer0_init@prescaler stored from wreg
  6878  014350  0100               	movlb	0	; () banked
  6879  014352  6F61               	movwf	timer0_init@prescaler& (0+255),b
  6880                           
  6881                           ;My_PIC.c: 35: T0CONbits.TMR0ON = 1;
  6882  014354  8ED5               	bsf	4053,7,c	;volatile
  6883                           
  6884                           ;My_PIC.c: 36: T0CONbits.T08BIT = 1;
  6885  014356  8CD5               	bsf	4053,6,c	;volatile
  6886                           
  6887                           ;My_PIC.c: 37: T0CONbits.T0CS = 0;
  6888  014358  9AD5               	bcf	4053,5,c	;volatile
  6889                           
  6890                           ;My_PIC.c: 38: if (prescaler == 0) {
  6891  01435A  0100               	movlb	0	; () banked
  6892  01435C  5161               	movf	timer0_init@prescaler& (0+255),w,b
  6893  01435E  0100               	movlb	0	; () banked
  6894  014360  A4D8               	btfss	status,2,c
  6895  014362  D002               	goto	l657
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;My_PIC.c: 39: T0CONbits.PSA = 1;
  6899  014364  86D5               	bsf	4053,3,c	;volatile
  6900                           
  6901                           ;My_PIC.c: 40: } else {
  6902  014366  D00C               	goto	l9087
  6903  014368                     l657:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;My_PIC.c: 41: T0CONbits.PSA = 0;
  6907  014368  96D5               	bcf	4053,3,c	;volatile
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;My_PIC.c: 42: T0CONbits.T0PS = prescaler - 1;
  6911  01436A  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  6912  01436E  0EFF               	movlw	255
  6913  014370  0100               	movlb	0	; () banked
  6914  014372  2760               	addwf	??_timer0_init& (0+255),f,b
  6915  014374  50D5               	movf	4053,w,c	;volatile
  6916  014376  0100               	movlb	0	; () banked
  6917  014378  1960               	xorwf	??_timer0_init& (0+255),w,b
  6918  01437A  0BF8               	andlw	-8
  6919  01437C  1960               	xorwf	??_timer0_init& (0+255),w,b
  6920  01437E  6ED5               	movwf	4053,c	;volatile
  6921  014380                     l9087:
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;My_PIC.c: 43: }
  6925                           ;My_PIC.c: 44: INTCONbits.T0IE = 1;
  6926  014380  8AF2               	bsf	intcon,5,c	;volatile
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;My_PIC.c: 45: INTCONbits.TMR0IF = 0;
  6930  014382  94F2               	bcf	intcon,2,c	;volatile
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;My_PIC.c: 46: INTCON2bits.TMR0IP = 0;
  6934  014384  94F1               	bcf	intcon2,2,c	;volatile
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;My_PIC.c: 47: INTCONbits.PEIE = 1;
  6938  014386  8CF2               	bsf	intcon,6,c	;volatile
  6939                           
  6940                           ; BSR set to: 0
  6941  014388  0012               	return		;funcret
  6942  01438A                     __end_of_timer0_init:
  6943                           	opt stack 0
  6944                           tblptru	equ	0xFF8
  6945                           tblptrh	equ	0xFF7
  6946                           tblptrl	equ	0xFF6
  6947                           tablat	equ	0xFF5
  6948                           prodh	equ	0xFF4
  6949                           prodl	equ	0xFF3
  6950                           intcon	equ	0xFF2
  6951                           intcon2	equ	0xFF1
  6952                           indf0	equ	0xFEF
  6953                           postinc0	equ	0xFEE
  6954                           fsr0h	equ	0xFEA
  6955                           fsr0l	equ	0xFE9
  6956                           wreg	equ	0xFE8
  6957                           postinc1	equ	0xFE6
  6958                           postdec1	equ	0xFE5
  6959                           fsr1h	equ	0xFE2
  6960                           fsr1l	equ	0xFE1
  6961                           indf2	equ	0xFDF
  6962                           postinc2	equ	0xFDE
  6963                           postdec2	equ	0xFDD
  6964                           fsr2h	equ	0xFDA
  6965                           fsr2l	equ	0xFD9
  6966                           status	equ	0xFD8
  6967                           
  6968 ;; *************** function _ringbuf_init *****************
  6969 ;; Defined at:
  6970 ;;		line 5 in file "../My_library/My_ringbuf.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6973 ;;		 -> usb_tx(8), usb_rx(8), terminal_task@command(8), 
  6974 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  6975 ;;		 -> main_init@rxbuf(250), main_init@txbuf(1000), terminal_task@buf(100), 
  6976 ;;  bufsize         2    4[BANK0 ] unsigned int 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;		None               void
  6981 ;; Registers used:
  6982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6991 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6992 ;;Total ram usage:        6 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:   11
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_terminal_task
  6999 ;;		_main_init
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           	psect	text20
  7004  014164                     __ptext20:
  7005                           	opt stack 0
  7006  014164                     _ringbuf_init:
  7007                           	opt stack 18
  7008                           
  7009                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;incstack = 0
  7013  014164  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  7014  014168  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  7015  01416C  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  7016  014170  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  7017                           
  7018                           ;My_ringbuf.c: 7: rb->size = bufsize;
  7019  014174  0100               	movlb	0	; () banked
  7020  014176  EE20 F002          	lfsr	2,2
  7021  01417A  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7022  01417C  26D9               	addwf	fsr2l,f,c
  7023  01417E  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7024  014180  22DA               	addwfc	fsr2h,f,c
  7025  014182  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  7026  014186  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;My_ringbuf.c: 8: rb->head = 0;
  7030  01418A  0100               	movlb	0	; () banked
  7031  01418C  EE20 F004          	lfsr	2,4
  7032  014190  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7033  014192  26D9               	addwf	fsr2l,f,c
  7034  014194  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7035  014196  22DA               	addwfc	fsr2h,f,c
  7036  014198  0E00               	movlw	0
  7037  01419A  6EDE               	movwf	postinc2,c
  7038  01419C  0E00               	movlw	0
  7039  01419E  6EDD               	movwf	postdec2,c
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;My_ringbuf.c: 9: rb->tail = 0;
  7043  0141A0  0100               	movlb	0	; () banked
  7044  0141A2  EE20 F006          	lfsr	2,6
  7045  0141A6  5160               	movf	ringbuf_init@rb& (0+255),w,b
  7046  0141A8  26D9               	addwf	fsr2l,f,c
  7047  0141AA  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  7048  0141AC  22DA               	addwfc	fsr2h,f,c
  7049  0141AE  0E00               	movlw	0
  7050  0141B0  6EDE               	movwf	postinc2,c
  7051  0141B2  0E00               	movlw	0
  7052  0141B4  6EDD               	movwf	postdec2,c
  7053                           
  7054                           ; BSR set to: 0
  7055  0141B6  0012               	return		;funcret
  7056  0141B8                     __end_of_ringbuf_init:
  7057                           	opt stack 0
  7058                           tblptru	equ	0xFF8
  7059                           tblptrh	equ	0xFF7
  7060                           tblptrl	equ	0xFF6
  7061                           tablat	equ	0xFF5
  7062                           prodh	equ	0xFF4
  7063                           prodl	equ	0xFF3
  7064                           intcon	equ	0xFF2
  7065                           intcon2	equ	0xFF1
  7066                           indf0	equ	0xFEF
  7067                           postinc0	equ	0xFEE
  7068                           fsr0h	equ	0xFEA
  7069                           fsr0l	equ	0xFE9
  7070                           wreg	equ	0xFE8
  7071                           postinc1	equ	0xFE6
  7072                           postdec1	equ	0xFE5
  7073                           fsr1h	equ	0xFE2
  7074                           fsr1l	equ	0xFE1
  7075                           indf2	equ	0xFDF
  7076                           postinc2	equ	0xFDE
  7077                           postdec2	equ	0xFDD
  7078                           fsr2h	equ	0xFDA
  7079                           fsr2l	equ	0xFD9
  7080                           status	equ	0xFD8
  7081                           
  7082 ;; *************** function _USB_init *****************
  7083 ;; Defined at:
  7084 ;;		line 11 in file "../My_library/My_usb_cdc.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;		None
  7087 ;; Auto vars:     Size  Location     Type
  7088 ;;		None
  7089 ;; Return value:  Size  Location     Type
  7090 ;;		None               void
  7091 ;; Registers used:
  7092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;Total ram usage:        0 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:   13
  7105 ;; This function calls:
  7106 ;;		_USBDeviceAttach
  7107 ;;		_USBDeviceInit
  7108 ;; This function is called by:
  7109 ;;		_main_init
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text21
  7114  01463C                     __ptext21:
  7115                           	opt stack 0
  7116  01463C                     _USB_init:
  7117                           	opt stack 16
  7118                           
  7119                           ;My_usb_cdc.c: 12: USBDeviceInit();
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;incstack = 0
  7123  01463C  EC71  F08F         	call	_USBDeviceInit	;wreg free
  7124                           
  7125                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  7126  014640  ECC5  F0A1         	call	_USBDeviceAttach	;wreg free
  7127                           
  7128                           ;My_usb_cdc.c: 14: {line_coding.dwDTERate=115200;};
  7129  014644  0E00               	movlw	0
  7130  014646  0101               	movlb	1	; () banked
  7131  014648  6F80               	movwf	_line_coding& (0+255),b
  7132  01464A  0EC2               	movlw	194
  7133  01464C  6F81               	movwf	(_line_coding+1)& (0+255),b
  7134  01464E  0E01               	movlw	1
  7135  014650  6F82               	movwf	(_line_coding+2)& (0+255),b
  7136  014652  0E00               	movlw	0
  7137  014654  6F83               	movwf	(_line_coding+3)& (0+255),b
  7138                           
  7139                           ; BSR set to: 1
  7140  014656  0012               	return		;funcret
  7141  014658                     __end_of_USB_init:
  7142                           	opt stack 0
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           indf0	equ	0xFEF
  7152                           postinc0	equ	0xFEE
  7153                           fsr0h	equ	0xFEA
  7154                           fsr0l	equ	0xFE9
  7155                           wreg	equ	0xFE8
  7156                           postinc1	equ	0xFE6
  7157                           postdec1	equ	0xFE5
  7158                           fsr1h	equ	0xFE2
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           postinc2	equ	0xFDE
  7162                           postdec2	equ	0xFDD
  7163                           fsr2h	equ	0xFDA
  7164                           fsr2l	equ	0xFD9
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _USBDeviceInit *****************
  7168 ;; Defined at:
  7169 ;;		line 298 in file "../My_library/usb/usb_device.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;  i               1    8[BANK0 ] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;		None               void
  7176 ;; Registers used:
  7177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;Total ram usage:        1 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:   12
  7190 ;; This function calls:
  7191 ;;		_memset
  7192 ;; This function is called by:
  7193 ;;		_USB_init
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text22
  7198  011EE2                     __ptext22:
  7199                           	opt stack 0
  7200  011EE2                     _USBDeviceInit:
  7201                           	opt stack 16
  7202                           
  7203                           ;usb_device.c: 300: uint8_t i;
  7204                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;incstack = 0
  7208  011EE2  98A0               	bcf	4000,4,c	;volatile
  7209                           
  7210                           ;usb_device.c: 305: {UEIR = 0;};
  7211  011EE4  0E00               	movlw	0
  7212  011EE6  6E63               	movwf	3939,c	;volatile
  7213                           
  7214                           ;usb_device.c: 308: {UIR = 0;};
  7215  011EE8  0E00               	movlw	0
  7216  011EEA  6E62               	movwf	3938,c	;volatile
  7217                           
  7218                           ;usb_device.c: 311: UEP0 = 0;
  7219  011EEC  0E00               	movlw	0
  7220  011EEE  010F               	movlb	15	; () banked
  7221  011EF0  6F26               	movwf	38,b	;volatile
  7222                           
  7223                           ; BSR set to: 15
  7224                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  7225  011EF2  0E27               	movlw	39
  7226  011EF4  0100               	movlb	0	; () banked
  7227  011EF6  6F60               	movwf	memset@p1& (0+255),b
  7228  011EF8  0E0F               	movlw	15
  7229  011EFA  0100               	movlb	0	; () banked
  7230  011EFC  6F61               	movwf	(memset@p1+1)& (0+255),b
  7231  011EFE  0E00               	movlw	0
  7232  011F00  0100               	movlb	0	; () banked
  7233  011F02  6F63               	movwf	(memset@c+1)& (0+255),b
  7234  011F04  0E00               	movlw	0
  7235  011F06  6F62               	movwf	memset@c& (0+255),b
  7236  011F08  0E00               	movlw	0
  7237  011F0A  0100               	movlb	0	; () banked
  7238  011F0C  6F65               	movwf	(memset@n+1)& (0+255),b
  7239  011F0E  0E02               	movlw	2
  7240  011F10  6F64               	movwf	memset@n& (0+255),b
  7241  011F12  ECFC  F0A1         	call	_memset	;wreg free
  7242                           
  7243                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7244  011F16  0E16               	movlw	22
  7245  011F18  010F               	movlb	15	; () banked
  7246  011F1A  6F39               	movwf	57,b	;volatile
  7247                           
  7248                           ; BSR set to: 15
  7249  011F1C  0E9F               	movlw	159
  7250  011F1E  010F               	movlb	15	; () banked
  7251  011F20  6F37               	movwf	55,b	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254  011F22  0E7B               	movlw	123
  7255  011F24  010F               	movlb	15	; () banked
  7256  011F26  6F36               	movwf	54,b	;volatile
  7257                           
  7258                           ; BSR set to: 15
  7259                           ;usb_device.c: 318: ;
  7260                           ;usb_device.c: 321: ;
  7261                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  7262  011F28  0E00               	movlw	0
  7263  011F2A  0100               	movlb	0	; () banked
  7264  011F2C  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7265  011F2E                     l8791:
  7266                           
  7267                           ; BSR set to: 0
  7268  011F2E  0E0B               	movlw	11
  7269  011F30  0100               	movlb	0	; () banked
  7270  011F32  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7271  011F34  D001               	goto	l8795
  7272  011F36  D010               	goto	l146
  7273  011F38                     l8795:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;usb_device.c: 325: {
  7277                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  7278  011F38  0100               	movlb	0	; () banked
  7279  011F3A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7280  011F3C  0D04               	mullw	4
  7281  011F3E  0E00               	movlw	0
  7282  011F40  24F3               	addwf	prodl,w,c
  7283  011F42  6ED9               	movwf	fsr2l,c
  7284  011F44  0E0D               	movlw	13
  7285  011F46  20F4               	addwfc	prodh,w,c
  7286  011F48  6EDA               	movwf	fsr2h,c
  7287  011F4A  6ADE               	clrf	postinc2,c
  7288  011F4C  6ADE               	clrf	postinc2,c
  7289  011F4E  6ADE               	clrf	postinc2,c
  7290  011F50  6ADD               	clrf	postdec2,c
  7291                           
  7292                           ; BSR set to: 0
  7293  011F52  0100               	movlb	0	; () banked
  7294  011F54  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7295  011F56  D7EB               	goto	l8791
  7296  011F58                     l146:
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;usb_device.c: 327: }
  7300                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  7301  011F58  8C65               	bsf	3941,6,c	;volatile
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;usb_device.c: 333: UADDR = 0x00;
  7305  011F5A  0E00               	movlw	0
  7306  011F5C  010F               	movlb	15	; () banked
  7307  011F5E  6F38               	movwf	56,b	;volatile
  7308                           
  7309                           ; BSR set to: 15
  7310                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  7311  011F60  9865               	bcf	3941,4,c	;volatile
  7312                           
  7313                           ; BSR set to: 15
  7314                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  7315  011F62  9C65               	bcf	3941,6,c	;volatile
  7316                           
  7317                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  7318  011F64  D009               	goto	l8815
  7319  011F66                     l8807:
  7320                           
  7321                           ;usb_device.c: 343: {
  7322                           ;usb_device.c: 344: (UIR &= 0xF7);
  7323  011F66  9662               	bcf	3938,3,c	;volatile
  7324                           
  7325                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  7326  011F68  0E00               	movlw	0
  7327  011F6A  6E0D               	movwf	_inPipes+3,c	;volatile
  7328                           
  7329                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  7330  011F6C  0E00               	movlw	0
  7331  011F6E  6E04               	movwf	_outPipes+3,c	;volatile
  7332                           
  7333                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  7334  011F70  0E00               	movlw	0
  7335  011F72  6E06               	movwf	_outPipes+5,c	;volatile
  7336  011F74  0E00               	movlw	0
  7337  011F76  6E05               	movwf	_outPipes+4,c	;volatile
  7338  011F78                     l8815:
  7339  011F78  B662               	btfsc	3938,3,c	;volatile
  7340  011F7A  D7F5               	goto	l8807
  7341                           
  7342                           ;usb_device.c: 349: }
  7343                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  7344  011F7C  0E01               	movlw	1
  7345  011F7E  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7346                           
  7347                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  7348  011F80  0E01               	movlw	1
  7349  011F82  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7350                           
  7351                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  7352  011F84  0E00               	movlw	0
  7353  011F86  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
  7354                           
  7355                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  7356  011F88  0E00               	movlw	0
  7357  011F8A  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  7358                           
  7359                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  7360  011F8C  0E00               	movlw	0
  7361  011F8E  0100               	movlb	0	; () banked
  7362  011F90  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
  7363                           
  7364                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  7365  011F92  0E00               	movlw	0
  7366  011F94  0100               	movlb	0	; () banked
  7367  011F96  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7368  011F98                     l8819:
  7369                           
  7370                           ; BSR set to: 0
  7371  011F98  0E02               	movlw	2
  7372  011F9A  0100               	movlb	0	; () banked
  7373  011F9C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7374  011F9E  D001               	goto	l8823
  7375  011FA0  D033               	goto	l8829
  7376  011FA2                     l8823:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;usb_device.c: 363: {
  7380                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  7381  011FA2  0100               	movlb	0	; () banked
  7382  011FA4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7383  011FA6  0D02               	mullw	2
  7384  011FA8  0E10               	movlw	low _pBDTEntryIn
  7385  011FAA  24F3               	addwf	prodl,w,c
  7386  011FAC  6ED9               	movwf	fsr2l,c
  7387  011FAE  0E00               	movlw	high _pBDTEntryIn
  7388  011FB0  20F4               	addwfc	prodh,w,c
  7389  011FB2  6EDA               	movwf	fsr2h,c
  7390  011FB4  0E00               	movlw	0
  7391  011FB6  6EDE               	movwf	postinc2,c
  7392  011FB8  0E00               	movlw	0
  7393  011FBA  6EDD               	movwf	postdec2,c
  7394                           
  7395                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  7396  011FBC  0100               	movlb	0	; () banked
  7397  011FBE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7398  011FC0  0D02               	mullw	2
  7399  011FC2  0ED5               	movlw	low _pBDTEntryOut
  7400  011FC4  24F3               	addwf	prodl,w,c
  7401  011FC6  6ED9               	movwf	fsr2l,c
  7402  011FC8  0E00               	movlw	high _pBDTEntryOut
  7403  011FCA  20F4               	addwfc	prodh,w,c
  7404  011FCC  6EDA               	movwf	fsr2h,c
  7405  011FCE  0E00               	movlw	0
  7406  011FD0  6EDE               	movwf	postinc2,c
  7407  011FD2  0E00               	movlw	0
  7408  011FD4  6EDD               	movwf	postdec2,c
  7409                           
  7410                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  7411  011FD6  0100               	movlb	0	; () banked
  7412  011FD8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7413  011FDA  0D01               	mullw	1
  7414  011FDC  0E16               	movlw	low _ep_data_in
  7415  011FDE  24F3               	addwf	prodl,w,c
  7416  011FE0  6ED9               	movwf	fsr2l,c
  7417  011FE2  0E00               	movlw	high _ep_data_in
  7418  011FE4  20F4               	addwfc	prodh,w,c
  7419  011FE6  6EDA               	movwf	fsr2h,c
  7420  011FE8  0E00               	movlw	0
  7421  011FEA  6EDF               	movwf	indf2,c
  7422                           
  7423                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  7424  011FEC  0100               	movlb	0	; () banked
  7425  011FEE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7426  011FF0  0D01               	mullw	1
  7427  011FF2  0EDB               	movlw	low _ep_data_out
  7428  011FF4  24F3               	addwf	prodl,w,c
  7429  011FF6  6ED9               	movwf	fsr2l,c
  7430  011FF8  0E00               	movlw	high _ep_data_out
  7431  011FFA  20F4               	addwfc	prodh,w,c
  7432  011FFC  6EDA               	movwf	fsr2h,c
  7433  011FFE  0E00               	movlw	0
  7434  012000  6EDF               	movwf	indf2,c
  7435                           
  7436                           ; BSR set to: 0
  7437  012002  0100               	movlb	0	; () banked
  7438  012004  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7439  012006  D7C8               	goto	l8819
  7440  012008                     l8829:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;usb_device.c: 368: }
  7444                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7445  012008  0E08               	movlw	8
  7446  01200A  6E10               	movwf	_pBDTEntryIn,c
  7447  01200C  0E0D               	movlw	13
  7448  01200E  6E11               	movwf	_pBDTEntryIn+1,c
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  7452  012010  0E16               	movlw	22
  7453  012012  010F               	movlb	15	; () banked
  7454  012014  6F26               	movwf	38,b	;volatile
  7455                           
  7456                           ; BSR set to: 15
  7457                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7458  012016  0E0D               	movlw	13
  7459  012018  010D               	movlb	13	; () banked
  7460  01201A  6F03               	movwf	3,b	;volatile
  7461  01201C  0E30               	movlw	48
  7462  01201E  6F02               	movwf	2,b	;volatile
  7463                           
  7464                           ; BSR set to: 13
  7465                           ;usb_device.c: 376: BDT[0].CNT = 8;
  7466  012020  0E08               	movlw	8
  7467  012022  010D               	movlb	13	; () banked
  7468  012024  6F01               	movwf	1,b	;volatile
  7469                           
  7470                           ; BSR set to: 13
  7471                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  7472  012026  0E04               	movlw	4
  7473  012028  010D               	movlb	13	; () banked
  7474  01202A  6F00               	movwf	0,b	;volatile
  7475                           
  7476                           ; BSR set to: 13
  7477                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  7478  01202C  010D               	movlb	13	; () banked
  7479  01202E  8F00               	bsf	0,7,b	;volatile
  7480                           
  7481                           ; BSR set to: 13
  7482                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  7483  012030  0E00               	movlw	0
  7484  012032  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
  7485                           
  7486                           ; BSR set to: 13
  7487                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  7488  012034  0E00               	movlw	0
  7489  012036  6E22               	movwf	_USBDeviceState,c	;volatile
  7490                           
  7491                           ; BSR set to: 13
  7492  012038  0012               	return		;funcret
  7493  01203A                     __end_of_USBDeviceInit:
  7494                           	opt stack 0
  7495                           tblptru	equ	0xFF8
  7496                           tblptrh	equ	0xFF7
  7497                           tblptrl	equ	0xFF6
  7498                           tablat	equ	0xFF5
  7499                           prodh	equ	0xFF4
  7500                           prodl	equ	0xFF3
  7501                           intcon	equ	0xFF2
  7502                           intcon2	equ	0xFF1
  7503                           indf0	equ	0xFEF
  7504                           postinc0	equ	0xFEE
  7505                           fsr0h	equ	0xFEA
  7506                           fsr0l	equ	0xFE9
  7507                           wreg	equ	0xFE8
  7508                           postinc1	equ	0xFE6
  7509                           postdec1	equ	0xFE5
  7510                           fsr1h	equ	0xFE2
  7511                           fsr1l	equ	0xFE1
  7512                           indf2	equ	0xFDF
  7513                           postinc2	equ	0xFDE
  7514                           postdec2	equ	0xFDD
  7515                           fsr2h	equ	0xFDA
  7516                           fsr2l	equ	0xFD9
  7517                           status	equ	0xFD8
  7518                           
  7519 ;; *************** function _memset *****************
  7520 ;; Defined at:
  7521 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  p1              2    0[BANK0 ] PTR void 
  7524 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7525 ;;  c               2    2[BANK0 ] int 
  7526 ;;  n               2    4[BANK0 ] unsigned int 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7529 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  2    0[BANK0 ] PTR void 
  7532 ;; Registers used:
  7533 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7539 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7542 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7543 ;;Total ram usage:        8 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:   11
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_USBDeviceInit
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text23
  7554  0143F8                     __ptext23:
  7555                           	opt stack 0
  7556  0143F8                     _memset:
  7557                           	opt stack 16
  7558                           
  7559                           ; BSR set to: 13
  7560                           ;incstack = 0
  7561  0143F8  C060  F066         	movff	memset@p1,memset@p
  7562  0143FC  C061  F067         	movff	memset@p1+1,memset@p+1
  7563  014400  D009               	goto	l8691
  7564  014402                     l8687:
  7565  014402  C066  FFD9         	movff	memset@p,fsr2l
  7566  014406  C067  FFDA         	movff	memset@p+1,fsr2h
  7567  01440A  C062  FFDF         	movff	memset@c,indf2
  7568  01440E  0100               	movlb	0	; () banked
  7569  014410  4B66               	infsnz	memset@p& (0+255),f,b
  7570  014412  2B67               	incf	(memset@p+1)& (0+255),f,b
  7571  014414                     l8691:
  7572  014414  0100               	movlb	0	; () banked
  7573  014416  0764               	decf	memset@n& (0+255),f,b
  7574  014418  A0D8               	btfss	status,0,c
  7575  01441A  0765               	decf	(memset@n+1)& (0+255),f,b
  7576  01441C  0100               	movlb	0	; () banked
  7577  01441E  2964               	incf	memset@n& (0+255),w,b
  7578  014420  E1F0               	bnz	l8687
  7579  014422  0100               	movlb	0	; () banked
  7580  014424  2965               	incf	(memset@n+1)& (0+255),w,b
  7581  014426  B4D8               	btfsc	status,2,c
  7582  014428  0012               	return	
  7583  01442A  D7EB               	goto	l8687
  7584  01442C                     __end_of_memset:
  7585                           	opt stack 0
  7586                           tblptru	equ	0xFF8
  7587                           tblptrh	equ	0xFF7
  7588                           tblptrl	equ	0xFF6
  7589                           tablat	equ	0xFF5
  7590                           prodh	equ	0xFF4
  7591                           prodl	equ	0xFF3
  7592                           intcon	equ	0xFF2
  7593                           intcon2	equ	0xFF1
  7594                           indf0	equ	0xFEF
  7595                           postinc0	equ	0xFEE
  7596                           fsr0h	equ	0xFEA
  7597                           fsr0l	equ	0xFE9
  7598                           wreg	equ	0xFE8
  7599                           postinc1	equ	0xFE6
  7600                           postdec1	equ	0xFE5
  7601                           fsr1h	equ	0xFE2
  7602                           fsr1l	equ	0xFE1
  7603                           indf2	equ	0xFDF
  7604                           postinc2	equ	0xFDE
  7605                           postdec2	equ	0xFDD
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _USBDeviceAttach *****************
  7611 ;; Defined at:
  7612 ;;		line 1352 in file "../My_library/usb/usb_device.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;		None               void
  7619 ;; Registers used:
  7620 ;;		wreg, status,2
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:   11
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_USB_init
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text24
  7641  01438A                     __ptext24:
  7642                           	opt stack 0
  7643  01438A                     _USBDeviceAttach:
  7644                           	opt stack 17
  7645                           
  7646                           ;usb_device.c: 1356: {
  7647                           ;usb_device.c: 1357: if(1 == 1)
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;incstack = 0
  7651  01438A  5022               	movf	_USBDeviceState,w,c	;volatile
  7652  01438C  A4D8               	btfss	status,2,c
  7653  01438E  0012               	return	
  7654                           
  7655                           ;usb_device.c: 1358: {
  7656                           ;usb_device.c: 1360: UCON = 0;
  7657  014390  0E00               	movlw	0
  7658  014392  6E65               	movwf	3941,c	;volatile
  7659                           
  7660                           ;usb_device.c: 1363: UIE = 0;
  7661  014394  0E00               	movlw	0
  7662  014396  010F               	movlb	15	; () banked
  7663  014398  6F36               	movwf	54,b	;volatile
  7664                           
  7665                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  7666  01439A  0E16               	movlw	22
  7667  01439C  010F               	movlb	15	; () banked
  7668  01439E  6F39               	movwf	57,b	;volatile
  7669  0143A0  0E9F               	movlw	159
  7670  0143A2  010F               	movlb	15	; () banked
  7671  0143A4  6F37               	movwf	55,b	;volatile
  7672  0143A6  0E7B               	movlw	123
  7673  0143A8  010F               	movlb	15	; () banked
  7674  0143AA  6F36               	movwf	54,b	;volatile
  7675                           
  7676                           ; BSR set to: 15
  7677                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  7678  0143AC  8ED0               	bsf	4048,7,c	;volatile
  7679                           
  7680                           ; BSR set to: 15
  7681  0143AE  88A2               	bsf	4002,4,c	;volatile
  7682                           
  7683                           ; BSR set to: 15
  7684  0143B0  88A0               	bsf	4000,4,c	;volatile
  7685                           
  7686                           ; BSR set to: 15
  7687  0143B2  8EF2               	bsf	intcon,7,c	;volatile
  7688                           
  7689                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  7690  0143B4  D001               	goto	l207
  7691  0143B6                     l208:
  7692  0143B6  8665               	bsf	3941,3,c	;volatile
  7693  0143B8                     l207:
  7694  0143B8  A665               	btfss	3941,3,c	;volatile
  7695  0143BA  D7FD               	goto	l208
  7696                           
  7697                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  7698  0143BC  0E01               	movlw	1
  7699  0143BE  6E22               	movwf	_USBDeviceState,c	;volatile
  7700  0143C0  0012               	return	
  7701  0143C2                     __end_of_USBDeviceAttach:
  7702                           	opt stack 0
  7703                           tblptru	equ	0xFF8
  7704                           tblptrh	equ	0xFF7
  7705                           tblptrl	equ	0xFF6
  7706                           tablat	equ	0xFF5
  7707                           prodh	equ	0xFF4
  7708                           prodl	equ	0xFF3
  7709                           intcon	equ	0xFF2
  7710                           intcon2	equ	0xFF1
  7711                           indf0	equ	0xFEF
  7712                           postinc0	equ	0xFEE
  7713                           fsr0h	equ	0xFEA
  7714                           fsr0l	equ	0xFE9
  7715                           wreg	equ	0xFE8
  7716                           postinc1	equ	0xFE6
  7717                           postdec1	equ	0xFE5
  7718                           fsr1h	equ	0xFE2
  7719                           fsr1l	equ	0xFE1
  7720                           indf2	equ	0xFDF
  7721                           postinc2	equ	0xFDE
  7722                           postdec2	equ	0xFDD
  7723                           fsr2h	equ	0xFDA
  7724                           fsr2l	equ	0xFD9
  7725                           status	equ	0xFD8
  7726                           
  7727 ;; *************** function _RTCC_init *****************
  7728 ;; Defined at:
  7729 ;;		line 22 in file "../My_library/My_RTCC.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;		None               void
  7736 ;; Registers used:
  7737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:   15
  7750 ;; This function calls:
  7751 ;;		_RTCC_from_RTCC
  7752 ;;		_RTCC_from_epoch
  7753 ;; This function is called by:
  7754 ;;		_main_init
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text25
  7759  013F1A                     __ptext25:
  7760                           	opt stack 0
  7761  013F1A                     _RTCC_init:
  7762                           	opt stack 14
  7763                           
  7764                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  7765                           
  7766                           ;incstack = 0
  7767  013F1A  010F               	movlb	15	; () banked
  7768  013F1C  8B3F               	bsf	63,5,b	;volatile
  7769                           
  7770                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  7771  013F1E  010F               	movlb	15	; () banked
  7772  013F20  BB3F               	btfsc	63,5,b	;volatile
  7773  013F22  D006               	goto	l9203
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;My_RTCC.c: 25: EECON2 = 0x55;
  7777  013F24  0E55               	movlw	85
  7778  013F26  6EA7               	movwf	4007,c	;volatile
  7779                           
  7780                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  7781  013F28  0EAA               	movlw	170
  7782  013F2A  6EA7               	movwf	4007,c	;volatile
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  7786  013F2C  010F               	movlb	15	; () banked
  7787  013F2E  8B3F               	bsf	63,5,b	;volatile
  7788  013F30                     l9203:
  7789                           
  7790                           ; BSR set to: 15
  7791                           ;My_RTCC.c: 28: }
  7792                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  7793  013F30  010F               	movlb	15	; () banked
  7794  013F32  8F3F               	bsf	63,7,b	;volatile
  7795                           
  7796                           ; BSR set to: 15
  7797                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  7798  013F34  010F               	movlb	15	; () banked
  7799  013F36  953F               	bcf	63,2,b	;volatile
  7800                           
  7801                           ; BSR set to: 15
  7802                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  7803  013F38  010F               	movlb	15	; () banked
  7804  013F3A  833C               	bsf	60,1,b	;volatile
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  7808  013F3C  010F               	movlb	15	; () banked
  7809  013F3E  853C               	bsf	60,2,b	;volatile
  7810                           
  7811                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  7812  013F40  0E00               	movlw	0
  7813  013F42  010F               	movlb	15	; () banked
  7814  013F44  6F3E               	movwf	62,b	;volatile
  7815                           
  7816                           ; BSR set to: 15
  7817                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  7818  013F46  86CD               	bsf	4045,3,c	;volatile
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;My_RTCC.c: 37: RTCC_from_RTCC(&now);
  7822  013F48  0E4A               	movlw	low _now
  7823  013F4A  0100               	movlb	0	; () banked
  7824  013F4C  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  7825  013F4E  0E01               	movlw	high _now
  7826  013F50  0100               	movlb	0	; () banked
  7827  013F52  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  7828  013F54  EC47  F0A3         	call	_RTCC_from_RTCC	;wreg free
  7829                           
  7830                           ;My_RTCC.c: 38: if (now.DD == 0) {
  7831  013F58  0101               	movlb	1	; () banked
  7832  013F5A  5152               	movf	(_now+8)& (0+255),w,b
  7833  013F5C  A4D8               	btfss	status,2,c
  7834  013F5E  0012               	return	
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;My_RTCC.c: 39: now.epoch = 0;
  7838  013F60  0E00               	movlw	0
  7839  013F62  0101               	movlb	1	; () banked
  7840  013F64  6F4A               	movwf	_now& (0+255),b
  7841  013F66  0E00               	movlw	0
  7842  013F68  6F4B               	movwf	(_now+1)& (0+255),b
  7843  013F6A  0E00               	movlw	0
  7844  013F6C  6F4C               	movwf	(_now+2)& (0+255),b
  7845  013F6E  0E00               	movlw	0
  7846  013F70  6F4D               	movwf	(_now+3)& (0+255),b
  7847                           
  7848                           ; BSR set to: 1
  7849                           ;My_RTCC.c: 40: RTCC_from_epoch(&now);
  7850  013F72  0E4A               	movlw	low _now
  7851  013F74  0100               	movlb	0	; () banked
  7852  013F76  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  7853  013F78  0E01               	movlw	high _now
  7854  013F7A  0100               	movlb	0	; () banked
  7855  013F7C  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  7856  013F7E  EC3A  F0A3         	call	_RTCC_from_epoch	;wreg free
  7857  013F82  0012               	return	
  7858  013F84                     __end_of_RTCC_init:
  7859                           	opt stack 0
  7860                           tblptru	equ	0xFF8
  7861                           tblptrh	equ	0xFF7
  7862                           tblptrl	equ	0xFF6
  7863                           tablat	equ	0xFF5
  7864                           prodh	equ	0xFF4
  7865                           prodl	equ	0xFF3
  7866                           intcon	equ	0xFF2
  7867                           intcon2	equ	0xFF1
  7868                           indf0	equ	0xFEF
  7869                           postinc0	equ	0xFEE
  7870                           fsr0h	equ	0xFEA
  7871                           fsr0l	equ	0xFE9
  7872                           wreg	equ	0xFE8
  7873                           postinc1	equ	0xFE6
  7874                           postdec1	equ	0xFE5
  7875                           fsr1h	equ	0xFE2
  7876                           fsr1l	equ	0xFE1
  7877                           indf2	equ	0xFDF
  7878                           postinc2	equ	0xFDE
  7879                           postdec2	equ	0xFDD
  7880                           fsr2h	equ	0xFDA
  7881                           fsr2l	equ	0xFD9
  7882                           status	equ	0xFD8
  7883                           
  7884 ;; *************** function _RTCC_from_epoch *****************
  7885 ;; Defined at:
  7886 ;;		line 211 in file "../My_library/My_RTCC.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  tm              2   47[BANK0 ] PTR struct .
  7889 ;;		 -> now(14), 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;		None               void
  7894 ;; Registers used:
  7895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7905 ;;Total ram usage:        2 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:   14
  7908 ;; This function calls:
  7909 ;;		_caltime_to_RTCC
  7910 ;;		_epoch_to_caltime
  7911 ;; This function is called by:
  7912 ;;		_RTCC_init
  7913 ;;		_RTCC_adjust_time_inc
  7914 ;;		_RTCC_adjust_time_dec
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text26
  7919  014674                     __ptext26:
  7920                           	opt stack 0
  7921  014674                     _RTCC_from_epoch:
  7922                           	opt stack 14
  7923                           
  7924                           ;My_RTCC.c: 212: epoch_to_caltime(tm);
  7925                           
  7926                           ;incstack = 0
  7927  014674  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  7928  014678  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  7929  01467C  ECE7  F08C         	call	_epoch_to_caltime	;wreg free
  7930                           
  7931                           ;My_RTCC.c: 213: caltime_to_RTCC(tm);
  7932  014680  C08F  F076         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  7933  014684  C090  F077         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  7934  014688  EC11  F096         	call	_caltime_to_RTCC	;wreg free
  7935  01468C  0012               	return		;funcret
  7936  01468E                     __end_of_RTCC_from_epoch:
  7937                           	opt stack 0
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           prodh	equ	0xFF4
  7943                           prodl	equ	0xFF3
  7944                           intcon	equ	0xFF2
  7945                           intcon2	equ	0xFF1
  7946                           indf0	equ	0xFEF
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           postinc1	equ	0xFE6
  7952                           postdec1	equ	0xFE5
  7953                           fsr1h	equ	0xFE2
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _epoch_to_caltime *****************
  7963 ;; Defined at:
  7964 ;;		line 126 in file "../My_library/My_RTCC.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  tm              2   33[BANK0 ] PTR struct .
  7967 ;;		 -> now(14), 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;  num             4   43[BANK0 ] unsigned long 
  7970 ;;  day             2   39[BANK0 ] unsigned int 
  7971 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  7972 ;;  month           1   42[BANK0 ] unsigned char 
  7973 ;;  year            1   41[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;		None               void
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;Total ram usage:       14 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:   13
  7990 ;; This function calls:
  7991 ;;		_get_quot_rem
  7992 ;;		_month_length
  7993 ;; This function is called by:
  7994 ;;		_RTCC_from_caltime
  7995 ;;		_RTCC_from_epoch
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text27
  8000  0119CE                     __ptext27:
  8001                           	opt stack 0
  8002  0119CE                     _epoch_to_caltime:
  8003                           	opt stack 12
  8004                           
  8005                           ;My_RTCC.c: 129: static uint16_t day_cache = 0;
  8006                           ;My_RTCC.c: 130: static uint8_t month_cache = 1;
  8007                           ;My_RTCC.c: 131: static uint8_t year_cache = 0;
  8008                           ;My_RTCC.c: 132: uint16_t day_since_epoch;
  8009                           ;My_RTCC.c: 133: uint16_t day;
  8010                           ;My_RTCC.c: 134: uint8_t year = 0;
  8011                           
  8012                           ;incstack = 0
  8013  0119CE  0E00               	movlw	0
  8014  0119D0  0100               	movlb	0	; () banked
  8015  0119D2  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8016                           
  8017                           ;My_RTCC.c: 135: uint8_t month = 1;
  8018  0119D4  0E01               	movlw	1
  8019  0119D6  0100               	movlb	0	; () banked
  8020  0119D8  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;My_RTCC.c: 136: epoch_t num;
  8024                           ;My_RTCC.c: 138: num = tm->epoch;
  8025  0119DA  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8026  0119DE  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8027  0119E2  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  8028  0119E6  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  8029  0119EA  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  8030  0119EE  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;My_RTCC.c: 139: tm->ss = get_quot_rem(&num, 60);
  8034  0119F2  0E8B               	movlw	low epoch_to_caltime@num
  8035  0119F4  0100               	movlb	0	; () banked
  8036  0119F6  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8037  0119F8  0E00               	movlw	high epoch_to_caltime@num
  8038  0119FA  0100               	movlb	0	; () banked
  8039  0119FC  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8040  0119FE  0E3C               	movlw	60
  8041  011A00  0100               	movlb	0	; () banked
  8042  011A02  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8043  011A04  EC7C  F096         	call	_get_quot_rem	;wreg free
  8044  011A08  0100               	movlb	0	; () banked
  8045  011A0A  EE20 F004          	lfsr	2,4
  8046  011A0E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8047  011A10  26D9               	addwf	fsr2l,f,c
  8048  011A12  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8049  011A14  22DA               	addwfc	fsr2h,f,c
  8050  011A16  0100               	movlb	0	; () banked
  8051  011A18  C079  FFDF         	movff	?_get_quot_rem,indf2
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;My_RTCC.c: 140: tm->mm = get_quot_rem(&num, 60);
  8055  011A1C  0E8B               	movlw	low epoch_to_caltime@num
  8056  011A1E  0100               	movlb	0	; () banked
  8057  011A20  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8058  011A22  0E00               	movlw	high epoch_to_caltime@num
  8059  011A24  0100               	movlb	0	; () banked
  8060  011A26  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8061  011A28  0E3C               	movlw	60
  8062  011A2A  0100               	movlb	0	; () banked
  8063  011A2C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8064  011A2E  EC7C  F096         	call	_get_quot_rem	;wreg free
  8065  011A32  0100               	movlb	0	; () banked
  8066  011A34  EE20 F005          	lfsr	2,5
  8067  011A38  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8068  011A3A  26D9               	addwf	fsr2l,f,c
  8069  011A3C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8070  011A3E  22DA               	addwfc	fsr2h,f,c
  8071  011A40  0100               	movlb	0	; () banked
  8072  011A42  C079  FFDF         	movff	?_get_quot_rem,indf2
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;My_RTCC.c: 141: tm->hh = get_quot_rem(&num, 24);
  8076  011A46  0E8B               	movlw	low epoch_to_caltime@num
  8077  011A48  0100               	movlb	0	; () banked
  8078  011A4A  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8079  011A4C  0E00               	movlw	high epoch_to_caltime@num
  8080  011A4E  0100               	movlb	0	; () banked
  8081  011A50  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8082  011A52  0E18               	movlw	24
  8083  011A54  0100               	movlb	0	; () banked
  8084  011A56  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8085  011A58  EC7C  F096         	call	_get_quot_rem	;wreg free
  8086  011A5C  0100               	movlb	0	; () banked
  8087  011A5E  EE20 F006          	lfsr	2,6
  8088  011A62  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8089  011A64  26D9               	addwf	fsr2l,f,c
  8090  011A66  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8091  011A68  22DA               	addwfc	fsr2h,f,c
  8092  011A6A  0100               	movlb	0	; () banked
  8093  011A6C  C079  FFDF         	movff	?_get_quot_rem,indf2
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;My_RTCC.c: 142: day = num;
  8097  011A70  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  8098  011A74  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;My_RTCC.c: 143: day_since_epoch = day;
  8102  011A78  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  8103  011A7C  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;My_RTCC.c: 145: num += 6;
  8107  011A80  0E06               	movlw	6
  8108  011A82  0100               	movlb	0	; () banked
  8109  011A84  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  8110  011A86  0E00               	movlw	0
  8111  011A88  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  8112  011A8A  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  8113  011A8C  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;My_RTCC.c: 146: tm->EE = get_quot_rem(&num, 7);
  8117  011A8E  0E8B               	movlw	low epoch_to_caltime@num
  8118  011A90  0100               	movlb	0	; () banked
  8119  011A92  6F79               	movwf	get_quot_rem@quot& (0+255),b
  8120  011A94  0E00               	movlw	high epoch_to_caltime@num
  8121  011A96  0100               	movlb	0	; () banked
  8122  011A98  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  8123  011A9A  0E07               	movlw	7
  8124  011A9C  0100               	movlb	0	; () banked
  8125  011A9E  6F7B               	movwf	get_quot_rem@div& (0+255),b
  8126  011AA0  EC7C  F096         	call	_get_quot_rem	;wreg free
  8127  011AA4  0100               	movlb	0	; () banked
  8128  011AA6  EE20 F007          	lfsr	2,7
  8129  011AAA  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8130  011AAC  26D9               	addwf	fsr2l,f,c
  8131  011AAE  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8132  011AB0  22DA               	addwfc	fsr2h,f,c
  8133  011AB2  0100               	movlb	0	; () banked
  8134  011AB4  C079  FFDF         	movff	?_get_quot_rem,indf2
  8135                           
  8136                           ;My_RTCC.c: 155: while (day >= month_length(year, month)) {
  8137  011AB8  D03F               	goto	l8515
  8138  011ABA                     l826:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;My_RTCC.c: 156: LATB2 = 1;
  8142  011ABA  848A               	bsf	3978,2,c	;volatile
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;My_RTCC.c: 157: day = day - month_length(year, month);
  8146  011ABC  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8147  011AC0  0100               	movlb	0	; () banked
  8148  011AC2  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8149  011AC4  EC5B  F094         	call	_month_length
  8150  011AC8  0100               	movlb	0	; () banked
  8151  011ACA  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8152  011ACC  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  8153  011ACE  0100               	movlb	0	; () banked
  8154  011AD0  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8155  011AD2  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8156  011AD4  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8157  011AD6  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8158  011AD8  0100               	movlb	0	; () banked
  8159  011ADA  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  8160  011ADC  0100               	movlb	0	; () banked
  8161  011ADE  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8162  011AE0  0100               	movlb	0	; () banked
  8163  011AE2  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  8164  011AE4  0100               	movlb	0	; () banked
  8165  011AE6  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  8166  011AE8  0100               	movlb	0	; () banked
  8167  011AEA  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8168  011AEC  0100               	movlb	0	; () banked
  8169  011AEE  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;My_RTCC.c: 158: if (month == 12) {
  8173  011AF0  0E0C               	movlw	12
  8174  011AF2  0100               	movlb	0	; () banked
  8175  011AF4  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  8176  011AF6  A4D8               	btfss	status,2,c
  8177  011AF8  D019               	goto	l8509
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;My_RTCC.c: 159: month = 1;
  8181  011AFA  0E01               	movlw	1
  8182  011AFC  0100               	movlb	0	; () banked
  8183  011AFE  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;My_RTCC.c: 160: year++;
  8187  011B00  0100               	movlb	0	; () banked
  8188  011B02  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;My_RTCC.c: 162: if (year >= 100) {
  8192  011B04  0E63               	movlw	99
  8193  011B06  0100               	movlb	0	; () banked
  8194  011B08  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  8195  011B0A  D012               	goto	l8511
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;My_RTCC.c: 163: tm->epoch -= 3155760000;
  8199  011B0C  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  8200  011B10  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  8201  011B14  0E80               	movlw	128
  8202  011B16  5EDE               	subwf	postinc2,f,c
  8203  011B18  0E13               	movlw	19
  8204  011B1A  5ADE               	subwfb	postinc2,f,c
  8205  011B1C  0E19               	movlw	25
  8206  011B1E  5ADE               	subwfb	postinc2,f,c
  8207  011B20  0EBC               	movlw	188
  8208  011B22  5ADE               	subwfb	postinc2,f,c
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;My_RTCC.c: 164: year = 0;
  8212  011B24  0E00               	movlw	0
  8213  011B26  0100               	movlb	0	; () banked
  8214  011B28  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;My_RTCC.c: 165: }
  8218                           ;My_RTCC.c: 166: } else {
  8219  011B2A  D002               	goto	l8511
  8220  011B2C                     l8509:
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;My_RTCC.c: 167: month++;
  8224  011B2C  0100               	movlb	0	; () banked
  8225  011B2E  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  8226  011B30                     l8511:
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;My_RTCC.c: 168: }
  8230                           ;My_RTCC.c: 169: month_cache = month;
  8231  011B30  C08A  F0FF         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;My_RTCC.c: 170: year_cache = year;
  8235  011B34  C089  F0F3         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  8236  011B38                     l8515:
  8237                           
  8238                           ; BSR set to: 0
  8239  011B38  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  8240  011B3C  0100               	movlb	0	; () banked
  8241  011B3E  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  8242  011B40  EC5B  F094         	call	_month_length
  8243  011B44  0100               	movlb	0	; () banked
  8244  011B46  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  8245  011B48  0100               	movlb	0	; () banked
  8246  011B4A  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  8247  011B4C  0100               	movlb	0	; () banked
  8248  011B4E  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  8249  011B50  0E00               	movlw	0
  8250  011B52  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  8251  011B54  B0D8               	btfsc	status,0,c
  8252  011B56  D7B1               	goto	l826
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;My_RTCC.c: 171: }
  8256                           ;My_RTCC.c: 172: day_cache = day_since_epoch - day;
  8257                           
  8258                           ; BSR set to: 0
  8259  011B58  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  8260  011B5C  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  8261  011B60  0100               	movlb	0	; () banked
  8262  011B62  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  8263  011B64  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  8264  011B66  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  8265  011B68  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  8266  011B6A  0100               	movlb	0	; () banked
  8267  011B6C  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  8268  011B6E  0100               	movlb	0	; () banked
  8269  011B70  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  8270  011B72  0101               	movlb	1	; () banked
  8271  011B74  6F14               	movwf	epoch_to_caltime@day_cache& (0+255),b
  8272  011B76  0100               	movlb	0	; () banked
  8273  011B78  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  8274  011B7A  0100               	movlb	0	; () banked
  8275  011B7C  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  8276  011B7E  0101               	movlb	1	; () banked
  8277  011B80  6F15               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  8278                           
  8279                           ; BSR set to: 1
  8280                           ;My_RTCC.c: 173: day++;
  8281  011B82  0100               	movlb	0	; () banked
  8282  011B84  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  8283  011B86  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;My_RTCC.c: 175: tm->YY = year;
  8287  011B88  0100               	movlb	0	; () banked
  8288  011B8A  EE20 F00A          	lfsr	2,10
  8289  011B8E  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8290  011B90  26D9               	addwf	fsr2l,f,c
  8291  011B92  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8292  011B94  22DA               	addwfc	fsr2h,f,c
  8293  011B96  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;My_RTCC.c: 176: tm->MM = month;
  8297  011B9A  0100               	movlb	0	; () banked
  8298  011B9C  EE20 F009          	lfsr	2,9
  8299  011BA0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8300  011BA2  26D9               	addwf	fsr2l,f,c
  8301  011BA4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8302  011BA6  22DA               	addwfc	fsr2h,f,c
  8303  011BA8  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;My_RTCC.c: 177: tm->DD = day;
  8307  011BAC  0100               	movlb	0	; () banked
  8308  011BAE  EE20 F008          	lfsr	2,8
  8309  011BB2  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  8310  011BB4  26D9               	addwf	fsr2l,f,c
  8311  011BB6  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  8312  011BB8  22DA               	addwfc	fsr2h,f,c
  8313  011BBA  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  8314                           
  8315                           ; BSR set to: 0
  8316  011BBE  0012               	return		;funcret
  8317  011BC0                     __end_of_epoch_to_caltime:
  8318                           	opt stack 0
  8319                           tblptru	equ	0xFF8
  8320                           tblptrh	equ	0xFF7
  8321                           tblptrl	equ	0xFF6
  8322                           tablat	equ	0xFF5
  8323                           prodh	equ	0xFF4
  8324                           prodl	equ	0xFF3
  8325                           intcon	equ	0xFF2
  8326                           intcon2	equ	0xFF1
  8327                           indf0	equ	0xFEF
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           postinc1	equ	0xFE6
  8333                           postdec1	equ	0xFE5
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           fsr2h	equ	0xFDA
  8340                           fsr2l	equ	0xFD9
  8341                           status	equ	0xFD8
  8342                           
  8343 ;; *************** function _get_quot_rem *****************
  8344 ;; Defined at:
  8345 ;;		line 81 in file "../My_library/My_RTCC.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  8348 ;;		 -> epoch_to_caltime@num(4), 
  8349 ;;  div             1   27[BANK0 ] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  num             4   29[BANK0 ] unsigned long 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  4   25[BANK0 ] unsigned long 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;Total ram usage:        8 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   12
  8368 ;; This function calls:
  8369 ;;		___lldiv
  8370 ;;		___lmul
  8371 ;; This function is called by:
  8372 ;;		_epoch_to_caltime
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text28
  8377  012CF8                     __ptext28:
  8378                           	opt stack 0
  8379  012CF8                     _get_quot_rem:
  8380                           	opt stack 12
  8381                           
  8382                           ;My_RTCC.c: 84: epoch_t num = *quot;
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;incstack = 0
  8386  012CF8  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8387  012CFC  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8388  012D00  CFDE F07D          	movff	postinc2,get_quot_rem@num
  8389  012D04  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  8390  012D08  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  8391  012D0C  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  8392                           
  8393                           ;My_RTCC.c: 85: return num - (*quot = num / div) * div;
  8394  012D10  0100               	movlb	0	; () banked
  8395  012D12  517B               	movf	get_quot_rem@div& (0+255),w,b
  8396  012D14  0100               	movlb	0	; () banked
  8397  012D16  6F64               	movwf	___lldiv@divisor& (0+255),b
  8398  012D18  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  8399  012D1A  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  8400  012D1C  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  8401  012D1E  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  8402  012D22  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  8403  012D26  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  8404  012D2A  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  8405  012D2E  ECA4  F099         	call	___lldiv	;wreg free
  8406  012D32  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  8407  012D36  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  8408  012D3A  0100               	movlb	0	; () banked
  8409  012D3C  C060  FFDE         	movff	?___lldiv,postinc2
  8410  012D40  0100               	movlb	0	; () banked
  8411  012D42  C061  FFDE         	movff	?___lldiv+1,postinc2
  8412  012D46  0100               	movlb	0	; () banked
  8413  012D48  C062  FFDE         	movff	?___lldiv+2,postinc2
  8414  012D4C  0100               	movlb	0	; () banked
  8415  012D4E  C063  FFDD         	movff	?___lldiv+3,postdec2
  8416  012D52  52DD               	movf	postdec2,f,c
  8417  012D54  52DD               	movf	postdec2,f,c
  8418  012D56  CFDE F06D          	movff	postinc2,___lmul@multiplier
  8419  012D5A  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  8420  012D5E  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  8421  012D62  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  8422  012D66  0100               	movlb	0	; () banked
  8423  012D68  517B               	movf	get_quot_rem@div& (0+255),w,b
  8424  012D6A  0100               	movlb	0	; () banked
  8425  012D6C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8426  012D6E  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  8427  012D70  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  8428  012D72  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  8429  012D74  EC1B  F09F         	call	___lmul	;wreg free
  8430  012D78  0100               	movlb	0	; () banked
  8431  012D7A  1F6D               	comf	?___lmul& (0+255),f,b
  8432  012D7C  0100               	movlb	0	; () banked
  8433  012D7E  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  8434  012D80  0100               	movlb	0	; () banked
  8435  012D82  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  8436  012D84  0100               	movlb	0	; () banked
  8437  012D86  1F70               	comf	(?___lmul+3)& (0+255),f,b
  8438  012D88  0100               	movlb	0	; () banked
  8439  012D8A  2B6D               	incf	?___lmul& (0+255),f,b
  8440  012D8C  0E00               	movlw	0
  8441  012D8E  0100               	movlb	0	; () banked
  8442  012D90  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  8443  012D92  0100               	movlb	0	; () banked
  8444  012D94  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  8445  012D96  0100               	movlb	0	; () banked
  8446  012D98  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  8447  012D9A  0100               	movlb	0	; () banked
  8448  012D9C  517D               	movf	get_quot_rem@num& (0+255),w,b
  8449  012D9E  0100               	movlb	0	; () banked
  8450  012DA0  256D               	addwf	?___lmul& (0+255),w,b
  8451  012DA2  0100               	movlb	0	; () banked
  8452  012DA4  6F79               	movwf	?_get_quot_rem& (0+255),b
  8453  012DA6  0100               	movlb	0	; () banked
  8454  012DA8  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  8455  012DAA  0100               	movlb	0	; () banked
  8456  012DAC  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  8457  012DAE  0100               	movlb	0	; () banked
  8458  012DB0  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  8459  012DB2  0100               	movlb	0	; () banked
  8460  012DB4  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  8461  012DB6  0100               	movlb	0	; () banked
  8462  012DB8  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  8463  012DBA  0100               	movlb	0	; () banked
  8464  012DBC  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  8465  012DBE  0100               	movlb	0	; () banked
  8466  012DC0  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  8467  012DC2  0100               	movlb	0	; () banked
  8468  012DC4  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  8469  012DC6  0100               	movlb	0	; () banked
  8470  012DC8  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  8471  012DCA  0012               	return	
  8472  012DCC                     __end_of_get_quot_rem:
  8473                           	opt stack 0
  8474                           tblptru	equ	0xFF8
  8475                           tblptrh	equ	0xFF7
  8476                           tblptrl	equ	0xFF6
  8477                           tablat	equ	0xFF5
  8478                           prodh	equ	0xFF4
  8479                           prodl	equ	0xFF3
  8480                           intcon	equ	0xFF2
  8481                           intcon2	equ	0xFF1
  8482                           indf0	equ	0xFEF
  8483                           postinc0	equ	0xFEE
  8484                           fsr0h	equ	0xFEA
  8485                           fsr0l	equ	0xFE9
  8486                           wreg	equ	0xFE8
  8487                           postinc1	equ	0xFE6
  8488                           postdec1	equ	0xFE5
  8489                           fsr1h	equ	0xFE2
  8490                           fsr1l	equ	0xFE1
  8491                           indf2	equ	0xFDF
  8492                           postinc2	equ	0xFDE
  8493                           postdec2	equ	0xFDD
  8494                           fsr2h	equ	0xFDA
  8495                           fsr2l	equ	0xFD9
  8496                           status	equ	0xFD8
  8497                           
  8498 ;; *************** function _caltime_to_RTCC *****************
  8499 ;; Defined at:
  8500 ;;		line 106 in file "../My_library/My_RTCC.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  tm              2   22[BANK0 ] PTR struct .
  8503 ;;		 -> now(14), 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;		None               void
  8508 ;; Registers used:
  8509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8519 ;;Total ram usage:        2 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:   13
  8522 ;; This function calls:
  8523 ;;		_d_to_x
  8524 ;; This function is called by:
  8525 ;;		_RTCC_from_caltime
  8526 ;;		_RTCC_from_epoch
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text29
  8531  012C22                     __ptext29:
  8532                           	opt stack 0
  8533  012C22                     _caltime_to_RTCC:
  8534                           	opt stack 12
  8535  012C22                     l813:
  8536  012C22  010F               	movlb	15	; () banked
  8537  012C24  B93F               	btfsc	63,4,b	;volatile
  8538  012C26  D7FD               	goto	l813
  8539                           
  8540                           ; BSR set to: 15
  8541                           ;My_RTCC.c: 108: RTCCFGbits.RTCPTR0 = 1;
  8542  012C28  010F               	movlb	15	; () banked
  8543  012C2A  813F               	bsf	63,0,b	;volatile
  8544                           
  8545                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR1 = 1;
  8546  012C2C  010F               	movlb	15	; () banked
  8547  012C2E  833F               	bsf	63,1,b	;volatile
  8548                           
  8549                           ; BSR set to: 15
  8550                           ;My_RTCC.c: 110: RTCVALL = d_to_x(tm->YY);
  8551  012C30  0100               	movlb	0	; () banked
  8552  012C32  EE20 F00A          	lfsr	2,10
  8553  012C36  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8554  012C38  26D9               	addwf	fsr2l,f,c
  8555  012C3A  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8556  012C3C  22DA               	addwfc	fsr2h,f,c
  8557  012C3E  50DF               	movf	indf2,w,c
  8558  012C40  ECB3  F0A2         	call	_d_to_x
  8559  012C44  010F               	movlb	15	; () banked
  8560  012C46  6F3A               	movwf	58,b	;volatile
  8561                           
  8562                           ; BSR set to: 15
  8563                           ;My_RTCC.c: 111: RTCVALH = 0x00;
  8564  012C48  0E00               	movlw	0
  8565  012C4A  010F               	movlb	15	; () banked
  8566  012C4C  6F3B               	movwf	59,b	;volatile
  8567                           
  8568                           ; BSR set to: 15
  8569                           ;My_RTCC.c: 112: RTCCFGbits.RTCPTR0 = 0;
  8570  012C4E  010F               	movlb	15	; () banked
  8571  012C50  913F               	bcf	63,0,b	;volatile
  8572                           
  8573                           ; BSR set to: 15
  8574                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR1 = 1;
  8575  012C52  010F               	movlb	15	; () banked
  8576  012C54  833F               	bsf	63,1,b	;volatile
  8577                           
  8578                           ; BSR set to: 15
  8579                           ;My_RTCC.c: 114: RTCVALL = d_to_x(tm->DD);
  8580  012C56  0100               	movlb	0	; () banked
  8581  012C58  EE20 F008          	lfsr	2,8
  8582  012C5C  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8583  012C5E  26D9               	addwf	fsr2l,f,c
  8584  012C60  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8585  012C62  22DA               	addwfc	fsr2h,f,c
  8586  012C64  50DF               	movf	indf2,w,c
  8587  012C66  ECB3  F0A2         	call	_d_to_x
  8588  012C6A  010F               	movlb	15	; () banked
  8589  012C6C  6F3A               	movwf	58,b	;volatile
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;My_RTCC.c: 115: RTCVALH = d_to_x(tm->MM);
  8593  012C6E  0100               	movlb	0	; () banked
  8594  012C70  EE20 F009          	lfsr	2,9
  8595  012C74  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8596  012C76  26D9               	addwf	fsr2l,f,c
  8597  012C78  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8598  012C7A  22DA               	addwfc	fsr2h,f,c
  8599  012C7C  50DF               	movf	indf2,w,c
  8600  012C7E  ECB3  F0A2         	call	_d_to_x
  8601  012C82  010F               	movlb	15	; () banked
  8602  012C84  6F3B               	movwf	59,b	;volatile
  8603                           
  8604                           ; BSR set to: 15
  8605                           ;My_RTCC.c: 116: RTCCFGbits.RTCPTR0 = 1;
  8606  012C86  010F               	movlb	15	; () banked
  8607  012C88  813F               	bsf	63,0,b	;volatile
  8608                           
  8609                           ; BSR set to: 15
  8610                           ;My_RTCC.c: 117: RTCCFGbits.RTCPTR1 = 0;
  8611  012C8A  010F               	movlb	15	; () banked
  8612  012C8C  933F               	bcf	63,1,b	;volatile
  8613                           
  8614                           ; BSR set to: 15
  8615                           ;My_RTCC.c: 118: RTCVALL = d_to_x(tm->hh);
  8616  012C8E  0100               	movlb	0	; () banked
  8617  012C90  EE20 F006          	lfsr	2,6
  8618  012C94  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8619  012C96  26D9               	addwf	fsr2l,f,c
  8620  012C98  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8621  012C9A  22DA               	addwfc	fsr2h,f,c
  8622  012C9C  50DF               	movf	indf2,w,c
  8623  012C9E  ECB3  F0A2         	call	_d_to_x
  8624  012CA2  010F               	movlb	15	; () banked
  8625  012CA4  6F3A               	movwf	58,b	;volatile
  8626                           
  8627                           ; BSR set to: 15
  8628                           ;My_RTCC.c: 119: RTCVALH = d_to_x(tm->EE);
  8629  012CA6  0100               	movlb	0	; () banked
  8630  012CA8  EE20 F007          	lfsr	2,7
  8631  012CAC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8632  012CAE  26D9               	addwf	fsr2l,f,c
  8633  012CB0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8634  012CB2  22DA               	addwfc	fsr2h,f,c
  8635  012CB4  50DF               	movf	indf2,w,c
  8636  012CB6  ECB3  F0A2         	call	_d_to_x
  8637  012CBA  010F               	movlb	15	; () banked
  8638  012CBC  6F3B               	movwf	59,b	;volatile
  8639                           
  8640                           ; BSR set to: 15
  8641                           ;My_RTCC.c: 120: RTCCFGbits.RTCPTR0 = 0;
  8642  012CBE  010F               	movlb	15	; () banked
  8643  012CC0  913F               	bcf	63,0,b	;volatile
  8644                           
  8645                           ; BSR set to: 15
  8646                           ;My_RTCC.c: 121: RTCCFGbits.RTCPTR1 = 0;
  8647  012CC2  010F               	movlb	15	; () banked
  8648  012CC4  933F               	bcf	63,1,b	;volatile
  8649                           
  8650                           ; BSR set to: 15
  8651                           ;My_RTCC.c: 122: RTCVALL = d_to_x(tm->ss);
  8652  012CC6  0100               	movlb	0	; () banked
  8653  012CC8  EE20 F004          	lfsr	2,4
  8654  012CCC  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8655  012CCE  26D9               	addwf	fsr2l,f,c
  8656  012CD0  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8657  012CD2  22DA               	addwfc	fsr2h,f,c
  8658  012CD4  50DF               	movf	indf2,w,c
  8659  012CD6  ECB3  F0A2         	call	_d_to_x
  8660  012CDA  010F               	movlb	15	; () banked
  8661  012CDC  6F3A               	movwf	58,b	;volatile
  8662                           
  8663                           ; BSR set to: 15
  8664                           ;My_RTCC.c: 123: RTCVALH = d_to_x(tm->mm);
  8665  012CDE  0100               	movlb	0	; () banked
  8666  012CE0  EE20 F005          	lfsr	2,5
  8667  012CE4  5176               	movf	caltime_to_RTCC@tm& (0+255),w,b
  8668  012CE6  26D9               	addwf	fsr2l,f,c
  8669  012CE8  5177               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  8670  012CEA  22DA               	addwfc	fsr2h,f,c
  8671  012CEC  50DF               	movf	indf2,w,c
  8672  012CEE  ECB3  F0A2         	call	_d_to_x
  8673  012CF2  010F               	movlb	15	; () banked
  8674  012CF4  6F3B               	movwf	59,b	;volatile
  8675                           
  8676                           ; BSR set to: 15
  8677  012CF6  0012               	return		;funcret
  8678  012CF8                     __end_of_caltime_to_RTCC:
  8679                           	opt stack 0
  8680                           tblptru	equ	0xFF8
  8681                           tblptrh	equ	0xFF7
  8682                           tblptrl	equ	0xFF6
  8683                           tablat	equ	0xFF5
  8684                           prodh	equ	0xFF4
  8685                           prodl	equ	0xFF3
  8686                           intcon	equ	0xFF2
  8687                           intcon2	equ	0xFF1
  8688                           indf0	equ	0xFEF
  8689                           postinc0	equ	0xFEE
  8690                           fsr0h	equ	0xFEA
  8691                           fsr0l	equ	0xFE9
  8692                           wreg	equ	0xFE8
  8693                           postinc1	equ	0xFE6
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704 ;; *************** function _d_to_x *****************
  8705 ;; Defined at:
  8706 ;;		line 46 in file "../My_library/My_RTCC.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  dec             1    wreg     unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  dec             1   21[BANK0 ] unsigned char 
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      unsigned char 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;Total ram usage:        1 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:   12
  8727 ;; This function calls:
  8728 ;;		___awdiv
  8729 ;; This function is called by:
  8730 ;;		_caltime_to_RTCC
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text30
  8735  014566                     __ptext30:
  8736                           	opt stack 0
  8737  014566                     _d_to_x:
  8738                           	opt stack 12
  8739                           
  8740                           ; BSR set to: 15
  8741                           ;incstack = 0
  8742                           ;d_to_x@dec stored from wreg
  8743  014566  0100               	movlb	0	; () banked
  8744  014568  6F75               	movwf	d_to_x@dec& (0+255),b
  8745                           
  8746                           ;My_RTCC.c: 49: return dec / 10 * 6 + dec;
  8747  01456A  C075  F06D         	movff	d_to_x@dec,___awdiv@dividend
  8748  01456E  0100               	movlb	0	; () banked
  8749  014570  6B6E               	clrf	(___awdiv@dividend+1)& (0+255),b
  8750  014572  0E00               	movlw	0
  8751  014574  0100               	movlb	0	; () banked
  8752  014576  6F70               	movwf	(___awdiv@divisor+1)& (0+255),b
  8753  014578  0E0A               	movlw	10
  8754  01457A  6F6F               	movwf	___awdiv@divisor& (0+255),b
  8755  01457C  ECE7  F098         	call	___awdiv	;wreg free
  8756  014580  0100               	movlb	0	; () banked
  8757  014582  516D               	movf	?___awdiv& (0+255),w,b
  8758  014584  0D06               	mullw	6
  8759  014586  50F3               	movf	prodl,w,c
  8760  014588  0100               	movlb	0	; () banked
  8761  01458A  2575               	addwf	d_to_x@dec& (0+255),w,b
  8762  01458C  0012               	return	
  8763  01458E                     __end_of_d_to_x:
  8764                           	opt stack 0
  8765                           tblptru	equ	0xFF8
  8766                           tblptrh	equ	0xFF7
  8767                           tblptrl	equ	0xFF6
  8768                           tablat	equ	0xFF5
  8769                           prodh	equ	0xFF4
  8770                           prodl	equ	0xFF3
  8771                           intcon	equ	0xFF2
  8772                           intcon2	equ	0xFF1
  8773                           indf0	equ	0xFEF
  8774                           postinc0	equ	0xFEE
  8775                           fsr0h	equ	0xFEA
  8776                           fsr0l	equ	0xFE9
  8777                           wreg	equ	0xFE8
  8778                           postinc1	equ	0xFE6
  8779                           postdec1	equ	0xFE5
  8780                           fsr1h	equ	0xFE2
  8781                           fsr1l	equ	0xFE1
  8782                           indf2	equ	0xFDF
  8783                           postinc2	equ	0xFDE
  8784                           postdec2	equ	0xFDD
  8785                           fsr2h	equ	0xFDA
  8786                           fsr2l	equ	0xFD9
  8787                           status	equ	0xFD8
  8788                           
  8789 ;; *************** function ___awdiv *****************
  8790 ;; Defined at:
  8791 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  dividend        2   13[BANK0 ] int 
  8794 ;;  divisor         2   15[BANK0 ] int 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  quotient        2   19[BANK0 ] int 
  8797 ;;  sign            1   18[BANK0 ] unsigned char 
  8798 ;;  counter         1   17[BANK0 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  2   13[BANK0 ] int 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8808 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;Total ram usage:        8 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:   11
  8815 ;; This function calls:
  8816 ;;		Nothing
  8817 ;; This function is called by:
  8818 ;;		_d_to_x
  8819 ;;		_terminal_operation
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text31
  8824  0131CE                     __ptext31:
  8825                           	opt stack 0
  8826  0131CE                     ___awdiv:
  8827                           	opt stack 12
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;incstack = 0
  8831  0131CE  0E00               	movlw	0
  8832  0131D0  0100               	movlb	0	; () banked
  8833  0131D2  6F72               	movwf	___awdiv@sign& (0+255),b
  8834                           
  8835                           ; BSR set to: 0
  8836  0131D4  0100               	movlb	0	; () banked
  8837  0131D6  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8838  0131D8  D008               	goto	l8263
  8839                           
  8840                           ; BSR set to: 0
  8841  0131DA  0100               	movlb	0	; () banked
  8842  0131DC  6D6F               	negf	___awdiv@divisor& (0+255),b
  8843  0131DE  1F70               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8844  0131E0  B0D8               	btfsc	status,0,c
  8845  0131E2  2B70               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8846                           
  8847                           ; BSR set to: 0
  8848  0131E4  0E01               	movlw	1
  8849  0131E6  0100               	movlb	0	; () banked
  8850  0131E8  6F72               	movwf	___awdiv@sign& (0+255),b
  8851  0131EA                     l8263:
  8852                           
  8853                           ; BSR set to: 0
  8854  0131EA  0100               	movlb	0	; () banked
  8855  0131EC  AF6E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8856  0131EE  D008               	goto	l8269
  8857                           
  8858                           ; BSR set to: 0
  8859  0131F0  0100               	movlb	0	; () banked
  8860  0131F2  6D6D               	negf	___awdiv@dividend& (0+255),b
  8861  0131F4  1F6E               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8862  0131F6  B0D8               	btfsc	status,0,c
  8863  0131F8  2B6E               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 0
  8866  0131FA  0E01               	movlw	1
  8867  0131FC  0100               	movlb	0	; () banked
  8868  0131FE  1B72               	xorwf	___awdiv@sign& (0+255),f,b
  8869  013200                     l8269:
  8870                           
  8871                           ; BSR set to: 0
  8872  013200  0E00               	movlw	0
  8873  013202  0100               	movlb	0	; () banked
  8874  013204  6F74               	movwf	(___awdiv@quotient+1)& (0+255),b
  8875  013206  0E00               	movlw	0
  8876  013208  6F73               	movwf	___awdiv@quotient& (0+255),b
  8877                           
  8878                           ; BSR set to: 0
  8879  01320A  0100               	movlb	0	; () banked
  8880  01320C  516F               	movf	___awdiv@divisor& (0+255),w,b
  8881  01320E  0100               	movlb	0	; () banked
  8882  013210  1170               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8883  013212  B4D8               	btfsc	status,2,c
  8884  013214  D02C               	goto	l8291
  8885                           
  8886                           ; BSR set to: 0
  8887  013216  0E01               	movlw	1
  8888  013218  0100               	movlb	0	; () banked
  8889  01321A  6F71               	movwf	___awdiv@counter& (0+255),b
  8890  01321C  D006               	goto	l8277
  8891  01321E                     l8275:
  8892                           
  8893                           ; BSR set to: 0
  8894  01321E  0100               	movlb	0	; () banked
  8895  013220  90D8               	bcf	status,0,c
  8896  013222  376F               	rlcf	___awdiv@divisor& (0+255),f,b
  8897  013224  3770               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8898  013226  0100               	movlb	0	; () banked
  8899  013228  2B71               	incf	___awdiv@counter& (0+255),f,b
  8900  01322A                     l8277:
  8901                           
  8902                           ; BSR set to: 0
  8903  01322A  0100               	movlb	0	; () banked
  8904  01322C  AF70               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8905  01322E  D7F7               	goto	l8275
  8906  013230                     l8279:
  8907                           
  8908                           ; BSR set to: 0
  8909  013230  0100               	movlb	0	; () banked
  8910  013232  90D8               	bcf	status,0,c
  8911  013234  3773               	rlcf	___awdiv@quotient& (0+255),f,b
  8912  013236  3774               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8913                           
  8914                           ; BSR set to: 0
  8915  013238  0100               	movlb	0	; () banked
  8916  01323A  516F               	movf	___awdiv@divisor& (0+255),w,b
  8917  01323C  0100               	movlb	0	; () banked
  8918  01323E  5D6D               	subwf	___awdiv@dividend& (0+255),w,b
  8919  013240  0100               	movlb	0	; () banked
  8920  013242  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8921  013244  0100               	movlb	0	; () banked
  8922  013246  596E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8923  013248  A0D8               	btfss	status,0,c
  8924  01324A  D00A               	goto	l8287
  8925                           
  8926                           ; BSR set to: 0
  8927  01324C  0100               	movlb	0	; () banked
  8928  01324E  516F               	movf	___awdiv@divisor& (0+255),w,b
  8929  013250  0100               	movlb	0	; () banked
  8930  013252  5F6D               	subwf	___awdiv@dividend& (0+255),f,b
  8931  013254  0100               	movlb	0	; () banked
  8932  013256  5170               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8933  013258  0100               	movlb	0	; () banked
  8934  01325A  5B6E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8935                           
  8936                           ; BSR set to: 0
  8937  01325C  0100               	movlb	0	; () banked
  8938  01325E  8173               	bsf	___awdiv@quotient& (0+255),0,b
  8939  013260                     l8287:
  8940                           
  8941                           ; BSR set to: 0
  8942  013260  0100               	movlb	0	; () banked
  8943  013262  90D8               	bcf	status,0,c
  8944  013264  3370               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8945  013266  336F               	rrcf	___awdiv@divisor& (0+255),f,b
  8946                           
  8947                           ; BSR set to: 0
  8948  013268  0100               	movlb	0	; () banked
  8949  01326A  2F71               	decfsz	___awdiv@counter& (0+255),f,b
  8950  01326C  D7E1               	goto	l8279
  8951  01326E                     l8291:
  8952                           
  8953                           ; BSR set to: 0
  8954  01326E  0100               	movlb	0	; () banked
  8955  013270  5172               	movf	___awdiv@sign& (0+255),w,b
  8956  013272  0100               	movlb	0	; () banked
  8957  013274  B4D8               	btfsc	status,2,c
  8958  013276  D005               	goto	l8295
  8959                           
  8960                           ; BSR set to: 0
  8961  013278  0100               	movlb	0	; () banked
  8962  01327A  6D73               	negf	___awdiv@quotient& (0+255),b
  8963  01327C  1F74               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8964  01327E  B0D8               	btfsc	status,0,c
  8965  013280  2B74               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8966  013282                     l8295:
  8967                           
  8968                           ; BSR set to: 0
  8969  013282  C073  F06D         	movff	___awdiv@quotient,?___awdiv
  8970  013286  C074  F06E         	movff	___awdiv@quotient+1,?___awdiv+1
  8971  01328A  0012               	return	
  8972  01328C                     __end_of___awdiv:
  8973                           	opt stack 0
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodh	equ	0xFF4
  8979                           prodl	equ	0xFF3
  8980                           intcon	equ	0xFF2
  8981                           intcon2	equ	0xFF1
  8982                           indf0	equ	0xFEF
  8983                           postinc0	equ	0xFEE
  8984                           fsr0h	equ	0xFEA
  8985                           fsr0l	equ	0xFE9
  8986                           wreg	equ	0xFE8
  8987                           postinc1	equ	0xFE6
  8988                           postdec1	equ	0xFE5
  8989                           fsr1h	equ	0xFE2
  8990                           fsr1l	equ	0xFE1
  8991                           indf2	equ	0xFDF
  8992                           postinc2	equ	0xFDE
  8993                           postdec2	equ	0xFDD
  8994                           fsr2h	equ	0xFDA
  8995                           fsr2l	equ	0xFD9
  8996                           status	equ	0xFD8
  8997                           
  8998 ;; *************** function _PWM_init *****************
  8999 ;; Defined at:
  9000 ;;		line 80 in file "PIC18F27J53-killifish_light06.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;  PR              1    wreg     unsigned char 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;  PR              1    0[BANK0 ] unsigned char 
  9005 ;; Return value:  Size  Location     Type
  9006 ;;		None               void
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;Total ram usage:        1 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; Hardware stack levels required when called:   11
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_main_init
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text32
  9029  01328C                     __ptext32:
  9030                           	opt stack 0
  9031  01328C                     _PWM_init:
  9032                           	opt stack 18
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;incstack = 0
  9036                           ;PWM_init@PR stored from wreg
  9037  01328C  0100               	movlb	0	; () banked
  9038  01328E  6F60               	movwf	PWM_init@PR& (0+255),b
  9039                           
  9040                           ;PIC18F27J53-killifish_light06.c: 81: PPSCONbits.IOLOCK = 0;
  9041  013290  010E               	movlb	14	; () banked
  9042  013292  91BF               	bcf	191,0,b	;volatile
  9043                           
  9044                           ;PIC18F27J53-killifish_light06.c: 82: if (PPSCONbits.IOLOCK != 0) {
  9045  013294  010E               	movlb	14	; () banked
  9046  013296  A1BF               	btfss	191,0,b	;volatile
  9047  013298  D006               	goto	l1371
  9048                           
  9049                           ; BSR set to: 14
  9050                           ;PIC18F27J53-killifish_light06.c: 83: EECON2 = 0x55;
  9051  01329A  0E55               	movlw	85
  9052  01329C  6EA7               	movwf	4007,c	;volatile
  9053                           
  9054                           ;PIC18F27J53-killifish_light06.c: 84: EECON2 = 0xAA;
  9055  01329E  0EAA               	movlw	170
  9056  0132A0  6EA7               	movwf	4007,c	;volatile
  9057                           
  9058                           ; BSR set to: 14
  9059                           ;PIC18F27J53-killifish_light06.c: 85: PPSCONbits.IOLOCK = 0;
  9060  0132A2  010E               	movlb	14	; () banked
  9061  0132A4  91BF               	bcf	191,0,b	;volatile
  9062  0132A6                     l1371:
  9063                           
  9064                           ; BSR set to: 14
  9065                           ;PIC18F27J53-killifish_light06.c: 86: }
  9066                           ;PIC18F27J53-killifish_light06.c: 88: RPOR3 = 14;
  9067  0132A6  0E0E               	movlw	14
  9068  0132A8  010E               	movlb	14	; () banked
  9069  0132AA  6FC3               	movwf	195,b	;volatile
  9070                           
  9071                           ;PIC18F27J53-killifish_light06.c: 89: RPOR4 = 18;
  9072  0132AC  0E12               	movlw	18
  9073  0132AE  010E               	movlb	14	; () banked
  9074  0132B0  6FC4               	movwf	196,b	;volatile
  9075                           
  9076                           ;PIC18F27J53-killifish_light06.c: 90: RPOR5 = 22;
  9077  0132B2  0E16               	movlw	22
  9078  0132B4  010E               	movlb	14	; () banked
  9079  0132B6  6FC5               	movwf	197,b	;volatile
  9080                           
  9081                           ; BSR set to: 14
  9082                           ;PIC18F27J53-killifish_light06.c: 92: CCP1CONbits.CCP1M = 12;
  9083  0132B8  50BA               	movf	4026,w,c	;volatile
  9084  0132BA  0BF0               	andlw	-16
  9085  0132BC  090C               	iorlw	12
  9086  0132BE  6EBA               	movwf	4026,c	;volatile
  9087                           
  9088                           ; BSR set to: 14
  9089                           ;PIC18F27J53-killifish_light06.c: 93: CCP1CONbits.P1M = 0;
  9090  0132C0  0E3F               	movlw	-193
  9091  0132C2  16BA               	andwf	4026,f,c	;volatile
  9092                           
  9093                           ; BSR set to: 14
  9094                           ;PIC18F27J53-killifish_light06.c: 94: CCPTMRS0bits.C1TSEL = 0;
  9095  0132C4  010F               	movlb	15	; () banked
  9096  0132C6  9152               	bcf	82,0,b	;volatile
  9097  0132C8  9352               	bcf	82,1,b	;volatile
  9098  0132CA  9552               	bcf	82,2,b	;volatile
  9099                           
  9100                           ; BSR set to: 15
  9101                           ;PIC18F27J53-killifish_light06.c: 95: CCPR1Lbits.CCPR1L = 0;
  9102  0132CC  0E00               	movlw	0
  9103  0132CE  6EBB               	movwf	4027,c	;volatile
  9104                           
  9105                           ; BSR set to: 15
  9106                           ;PIC18F27J53-killifish_light06.c: 96: CCP1CONbits.DC1B = 0;
  9107  0132D0  0ECF               	movlw	-49
  9108  0132D2  16BA               	andwf	4026,f,c	;volatile
  9109                           
  9110                           ; BSR set to: 15
  9111                           ;PIC18F27J53-killifish_light06.c: 98: CCP2CONbits.CCP2M = 12;
  9112  0132D4  50B4               	movf	4020,w,c	;volatile
  9113  0132D6  0BF0               	andlw	-16
  9114  0132D8  090C               	iorlw	12
  9115  0132DA  6EB4               	movwf	4020,c	;volatile
  9116                           
  9117                           ; BSR set to: 15
  9118                           ;PIC18F27J53-killifish_light06.c: 99: CCP2CONbits.P2M = 0;
  9119  0132DC  0E3F               	movlw	-193
  9120  0132DE  16B4               	andwf	4020,f,c	;volatile
  9121                           
  9122                           ; BSR set to: 15
  9123                           ;PIC18F27J53-killifish_light06.c: 100: CCPTMRS0bits.C2TSEL = 0;
  9124  0132E0  010F               	movlb	15	; () banked
  9125  0132E2  9752               	bcf	82,3,b	;volatile
  9126  0132E4  9952               	bcf	82,4,b	;volatile
  9127  0132E6  9B52               	bcf	82,5,b	;volatile
  9128                           
  9129                           ; BSR set to: 15
  9130                           ;PIC18F27J53-killifish_light06.c: 101: CCPR2Lbits.CCPR2L = 0;
  9131  0132E8  0E00               	movlw	0
  9132  0132EA  6EB5               	movwf	4021,c	;volatile
  9133                           
  9134                           ; BSR set to: 15
  9135                           ;PIC18F27J53-killifish_light06.c: 102: CCP2CONbits.DC2B = 0;
  9136  0132EC  0ECF               	movlw	-49
  9137  0132EE  16B4               	andwf	4020,f,c	;volatile
  9138                           
  9139                           ; BSR set to: 15
  9140                           ;PIC18F27J53-killifish_light06.c: 104: CCP3CONbits.CCP3M = 12;
  9141  0132F0  010F               	movlb	15	; () banked
  9142  0132F2  5115               	movf	21,w,b	;volatile
  9143  0132F4  0BF0               	andlw	-16
  9144  0132F6  090C               	iorlw	12
  9145  0132F8  6F15               	movwf	21,b	;volatile
  9146                           
  9147                           ; BSR set to: 15
  9148                           ;PIC18F27J53-killifish_light06.c: 105: CCP3CONbits.P3M = 0;
  9149  0132FA  0E3F               	movlw	-193
  9150  0132FC  010F               	movlb	15	; () banked
  9151  0132FE  1715               	andwf	21,f,b	;volatile
  9152                           
  9153                           ; BSR set to: 15
  9154                           ;PIC18F27J53-killifish_light06.c: 106: CCPTMRS0bits.C3TSEL = 0;
  9155  013300  0E3F               	movlw	-193
  9156  013302  010F               	movlb	15	; () banked
  9157  013304  1752               	andwf	82,f,b	;volatile
  9158                           
  9159                           ; BSR set to: 15
  9160                           ;PIC18F27J53-killifish_light06.c: 107: CCPR3Lbits.CCPR3L = 0;
  9161  013306  0E00               	movlw	0
  9162  013308  010F               	movlb	15	; () banked
  9163  01330A  6F16               	movwf	22,b	;volatile
  9164                           
  9165                           ; BSR set to: 15
  9166                           ;PIC18F27J53-killifish_light06.c: 108: CCP3CONbits.DC3B = 0;
  9167  01330C  0ECF               	movlw	-49
  9168  01330E  010F               	movlb	15	; () banked
  9169  013310  1715               	andwf	21,f,b	;volatile
  9170                           
  9171                           ; BSR set to: 15
  9172                           ;PIC18F27J53-killifish_light06.c: 110: CCP4CONbits.CCP4M = 12;
  9173  013312  010F               	movlb	15	; () banked
  9174  013314  5112               	movf	18,w,b	;volatile
  9175  013316  0BF0               	andlw	-16
  9176  013318  090C               	iorlw	12
  9177  01331A  6F12               	movwf	18,b	;volatile
  9178                           
  9179                           ; BSR set to: 15
  9180                           ;PIC18F27J53-killifish_light06.c: 111: CCPTMRS1bits.C4TSEL = 0;
  9181  01331C  0EFC               	movlw	-4
  9182  01331E  010F               	movlb	15	; () banked
  9183  013320  1751               	andwf	81,f,b	;volatile
  9184                           
  9185                           ; BSR set to: 15
  9186                           ;PIC18F27J53-killifish_light06.c: 112: CCPR4Lbits.CCPR4L = 0;
  9187  013322  0E00               	movlw	0
  9188  013324  010F               	movlb	15	; () banked
  9189  013326  6F13               	movwf	19,b	;volatile
  9190                           
  9191                           ; BSR set to: 15
  9192                           ;PIC18F27J53-killifish_light06.c: 113: CCP4CONbits.DC4B = 0;
  9193  013328  0ECF               	movlw	-49
  9194  01332A  010F               	movlb	15	; () banked
  9195  01332C  1712               	andwf	18,f,b	;volatile
  9196                           
  9197                           ; BSR set to: 15
  9198                           ;PIC18F27J53-killifish_light06.c: 115: T2CONbits.T2OUTPS = 0;
  9199  01332E  96CA               	bcf	4042,3,c	;volatile
  9200  013330  98CA               	bcf	4042,4,c	;volatile
  9201  013332  9ACA               	bcf	4042,5,c	;volatile
  9202  013334  9CCA               	bcf	4042,6,c	;volatile
  9203                           
  9204                           ; BSR set to: 15
  9205                           ;PIC18F27J53-killifish_light06.c: 116: T2CONbits.T2CKPS = 2;
  9206  013336  50CA               	movf	4042,w,c	;volatile
  9207  013338  0BFC               	andlw	-4
  9208  01333A  0902               	iorlw	2
  9209  01333C  6ECA               	movwf	4042,c	;volatile
  9210                           
  9211                           ; BSR set to: 15
  9212                           ;PIC18F27J53-killifish_light06.c: 117: PR2 = PR - 1;
  9213  01333E  0100               	movlb	0	; () banked
  9214  013340  0560               	decf	PWM_init@PR& (0+255),w,b
  9215  013342  6ECB               	movwf	4043,c	;volatile
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;PIC18F27J53-killifish_light06.c: 118: T2CONbits.TMR2ON = 1;
  9219  013344  84CA               	bsf	4042,2,c	;volatile
  9220                           
  9221                           ; BSR set to: 0
  9222  013346  0012               	return		;funcret
  9223  013348                     __end_of_PWM_init:
  9224                           	opt stack 0
  9225                           tblptru	equ	0xFF8
  9226                           tblptrh	equ	0xFF7
  9227                           tblptrl	equ	0xFF6
  9228                           tablat	equ	0xFF5
  9229                           prodh	equ	0xFF4
  9230                           prodl	equ	0xFF3
  9231                           intcon	equ	0xFF2
  9232                           intcon2	equ	0xFF1
  9233                           indf0	equ	0xFEF
  9234                           postinc0	equ	0xFEE
  9235                           fsr0h	equ	0xFEA
  9236                           fsr0l	equ	0xFE9
  9237                           wreg	equ	0xFE8
  9238                           postinc1	equ	0xFE6
  9239                           postdec1	equ	0xFE5
  9240                           fsr1h	equ	0xFE2
  9241                           fsr1l	equ	0xFE1
  9242                           indf2	equ	0xFDF
  9243                           postinc2	equ	0xFDE
  9244                           postdec2	equ	0xFDD
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _OSC_init *****************
  9250 ;; Defined at:
  9251 ;;		line 8 in file "../My_library/My_PIC.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;		None               void
  9258 ;; Registers used:
  9259 ;;		wreg, status,2
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:   11
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_main_init
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text33
  9280  0146A8                     __ptext33:
  9281                           	opt stack 0
  9282  0146A8                     _OSC_init:
  9283                           	opt stack 18
  9284                           
  9285                           ;My_PIC.c: 9: OSCCONbits.IRCF = 7;
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;incstack = 0
  9289  0146A8  88D3               	bsf	4051,4,c	;volatile
  9290  0146AA  8AD3               	bsf	4051,5,c	;volatile
  9291  0146AC  8CD3               	bsf	4051,6,c	;volatile
  9292                           
  9293                           ;My_PIC.c: 10: OSCTUNEbits.PLLEN = 1;
  9294  0146AE  8C9B               	bsf	3995,6,c	;volatile
  9295                           
  9296                           ;My_PIC.c: 11: OSCCONbits.SCS = 0;
  9297  0146B0  0EFC               	movlw	-4
  9298  0146B2  16D3               	andwf	4051,f,c	;volatile
  9299  0146B4  0012               	return		;funcret
  9300  0146B6                     __end_of_OSC_init:
  9301                           	opt stack 0
  9302                           tblptru	equ	0xFF8
  9303                           tblptrh	equ	0xFF7
  9304                           tblptrl	equ	0xFF6
  9305                           tablat	equ	0xFF5
  9306                           prodh	equ	0xFF4
  9307                           prodl	equ	0xFF3
  9308                           intcon	equ	0xFF2
  9309                           intcon2	equ	0xFF1
  9310                           indf0	equ	0xFEF
  9311                           postinc0	equ	0xFEE
  9312                           fsr0h	equ	0xFEA
  9313                           fsr0l	equ	0xFE9
  9314                           wreg	equ	0xFE8
  9315                           postinc1	equ	0xFE6
  9316                           postdec1	equ	0xFE5
  9317                           fsr1h	equ	0xFE2
  9318                           fsr1l	equ	0xFE1
  9319                           indf2	equ	0xFDF
  9320                           postinc2	equ	0xFDE
  9321                           postdec2	equ	0xFDD
  9322                           fsr2h	equ	0xFDA
  9323                           fsr2l	equ	0xFD9
  9324                           status	equ	0xFD8
  9325                           
  9326 ;; *************** function _ADC_init *****************
  9327 ;; Defined at:
  9328 ;;		line 133 in file "../My_library/My_PIC.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  p_ref           1    wreg     unsigned char 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  p_ref           1    0[BANK0 ] unsigned char 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;		None               void
  9335 ;; Registers used:
  9336 ;;		wreg, status,2
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9345 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;Total ram usage:        1 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:   11
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_main_init
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text34
  9357  0145FC                     __ptext34:
  9358                           	opt stack 0
  9359  0145FC                     _ADC_init:
  9360                           	opt stack 18
  9361                           
  9362                           ;incstack = 0
  9363                           ;ADC_init@p_ref stored from wreg
  9364  0145FC  0100               	movlb	0	; () banked
  9365  0145FE  6F60               	movwf	ADC_init@p_ref& (0+255),b
  9366                           
  9367                           ;My_PIC.c: 134: ADCON0bits.VCFG1 = 0;
  9368  014600  9EC2               	bcf	4034,7,c	;volatile
  9369                           
  9370                           ;My_PIC.c: 135: ADCON0bits.VCFG0 = p_ref;
  9371  014602  0100               	movlb	0	; () banked
  9372  014604  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
  9373  014606  D002               	bra	u9455
  9374  014608  9CC2               	bcf	4034,6,c	;volatile
  9375  01460A  D001               	bra	u9456
  9376  01460C                     u9455:
  9377  01460C  8CC2               	bsf	4034,6,c	;volatile
  9378  01460E                     u9456:
  9379                           
  9380                           ;My_PIC.c: 137: ADCON1bits.ADFM = 1;
  9381  01460E  8EC1               	bsf	4033,7,c	;volatile
  9382                           
  9383                           ;My_PIC.c: 138: ADCON1bits.ADCAL = 0;
  9384  014610  9CC1               	bcf	4033,6,c	;volatile
  9385                           
  9386                           ;My_PIC.c: 139: ADCON1bits.ADCS = 6;
  9387  014612  50C1               	movf	4033,w,c	;volatile
  9388  014614  0BF8               	andlw	-8
  9389  014616  0906               	iorlw	6
  9390  014618  6EC1               	movwf	4033,c	;volatile
  9391  01461A  0012               	return		;funcret
  9392  01461C                     __end_of_ADC_init:
  9393                           	opt stack 0
  9394                           tblptru	equ	0xFF8
  9395                           tblptrh	equ	0xFF7
  9396                           tblptrl	equ	0xFF6
  9397                           tablat	equ	0xFF5
  9398                           prodh	equ	0xFF4
  9399                           prodl	equ	0xFF3
  9400                           intcon	equ	0xFF2
  9401                           intcon2	equ	0xFF1
  9402                           indf0	equ	0xFEF
  9403                           postinc0	equ	0xFEE
  9404                           fsr0h	equ	0xFEA
  9405                           fsr0l	equ	0xFE9
  9406                           wreg	equ	0xFE8
  9407                           postinc1	equ	0xFE6
  9408                           postdec1	equ	0xFE5
  9409                           fsr1h	equ	0xFE2
  9410                           fsr1l	equ	0xFE1
  9411                           indf2	equ	0xFDF
  9412                           postinc2	equ	0xFDE
  9413                           postdec2	equ	0xFDD
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8
  9417                           
  9418 ;; *************** function _light_task *****************
  9419 ;; Defined at:
  9420 ;;		line 229 in file "PIC18F27J53-killifish_light06.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  temp            4   46[BANK0 ] unsigned long 
  9425 ;;  value           1   45[BANK0 ] unsigned char 
  9426 ;;  value           1   44[BANK0 ] unsigned char 
  9427 ;;  i               1   50[BANK0 ] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;		None               void
  9430 ;; Registers used:
  9431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9440 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9441 ;;Total ram usage:       11 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:   15
  9444 ;; This function calls:
  9445 ;;		_PWM_set
  9446 ;;		_RTCC_from_RTCC
  9447 ;;		___lldiv
  9448 ;;		___llmod
  9449 ;;		___lmul
  9450 ;; This function is called by:
  9451 ;;		_main
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text35
  9456  0117B6                     __ptext35:
  9457                           	opt stack 0
  9458  0117B6                     _light_task:
  9459                           	opt stack 15
  9460                           
  9461                           ;PIC18F27J53-killifish_light06.c: 230: uint8_t i;
  9462                           ;PIC18F27J53-killifish_light06.c: 231: if (time_change_flag) {
  9463                           
  9464                           ;incstack = 0
  9465  0117B6  0100               	movlb	0	; () banked
  9466  0117B8  51F2               	movf	_time_change_flag& (0+255),w,b
  9467  0117BA  B4D8               	btfsc	status,2,c
  9468  0117BC  D0AE               	goto	l1425
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;PIC18F27J53-killifish_light06.c: 232: time_change_flag = 0;
  9472  0117BE  0E00               	movlw	0
  9473  0117C0  0100               	movlb	0	; () banked
  9474  0117C2  6FF2               	movwf	_time_change_flag& (0+255),b
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;PIC18F27J53-killifish_light06.c: 233: RTCC_from_RTCC(&now);
  9478  0117C4  0E4A               	movlw	low _now
  9479  0117C6  0100               	movlb	0	; () banked
  9480  0117C8  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  9481  0117CA  0E01               	movlw	high _now
  9482  0117CC  0100               	movlb	0	; () banked
  9483  0117CE  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  9484  0117D0  EC47  F0A3         	call	_RTCC_from_RTCC	;wreg free
  9485                           
  9486                           ;PIC18F27J53-killifish_light06.c: 234: if (light_mode == TIME_SYNC_mode) {
  9487  0117D4  0100               	movlb	0	; () banked
  9488  0117D6  51F1               	movf	_light_mode& (0+255),w,b
  9489  0117D8  A4D8               	btfss	status,2,c
  9490  0117DA  D09F               	goto	l1425
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;PIC18F27J53-killifish_light06.c: 235: epoch_t temp = (epoch_t) now.epoch % ((epoch_t)60
      +                          *60*24);
  9494  0117DC  C14A  F060         	movff	_now,___llmod@dividend
  9495  0117E0  C14B  F061         	movff	_now+1,___llmod@dividend+1
  9496  0117E4  C14C  F062         	movff	_now+2,___llmod@dividend+2
  9497  0117E8  C14D  F063         	movff	_now+3,___llmod@dividend+3
  9498  0117EC  0E80               	movlw	128
  9499  0117EE  0100               	movlb	0	; () banked
  9500  0117F0  6F64               	movwf	___llmod@divisor& (0+255),b
  9501  0117F2  0E51               	movlw	81
  9502  0117F4  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
  9503  0117F6  0E01               	movlw	1
  9504  0117F8  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
  9505  0117FA  0E00               	movlw	0
  9506  0117FC  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
  9507  0117FE  EC18  F09C         	call	___llmod	;wreg free
  9508  011802  C060  F08E         	movff	?___llmod,light_task@temp
  9509  011806  C061  F08F         	movff	?___llmod+1,light_task@temp+1
  9510  01180A  C062  F090         	movff	?___llmod+2,light_task@temp+2
  9511  01180E  C063  F091         	movff	?___llmod+3,light_task@temp+3
  9512                           
  9513                           ;PIC18F27J53-killifish_light06.c: 236: if (temp > ((epoch_t)60*60*24) / 2)temp = ((epoch
      +                          _t)60*60*24) - temp;
  9514  011812  0100               	movlb	0	; () banked
  9515  011814  5191               	movf	(light_task@temp+3)& (0+255),w,b
  9516  011816  0100               	movlb	0	; () banked
  9517  011818  1190               	iorwf	(light_task@temp+2)& (0+255),w,b
  9518  01181A  E108               	bnz	u10080
  9519  01181C  0EC1               	movlw	193
  9520  01181E  0100               	movlb	0	; () banked
  9521  011820  5D8E               	subwf	light_task@temp& (0+255),w,b
  9522  011822  0EA8               	movlw	168
  9523  011824  0100               	movlb	0	; () banked
  9524  011826  598F               	subwfb	(light_task@temp+1)& (0+255),w,b
  9525  011828  A0D8               	btfss	status,0,c
  9526  01182A  D026               	goto	l9619
  9527  01182C                     u10080:
  9528                           
  9529                           ; BSR set to: 0
  9530  01182C  C08E  F088         	movff	light_task@temp,??_light_task
  9531  011830  C08F  F089         	movff	light_task@temp+1,??_light_task+1
  9532  011834  C090  F08A         	movff	light_task@temp+2,??_light_task+2
  9533  011838  C091  F08B         	movff	light_task@temp+3,??_light_task+3
  9534  01183C  0100               	movlb	0	; () banked
  9535  01183E  1F88               	comf	??_light_task& (0+255),f,b
  9536  011840  1F89               	comf	(??_light_task+1)& (0+255),f,b
  9537  011842  1F8A               	comf	(??_light_task+2)& (0+255),f,b
  9538  011844  1F8B               	comf	(??_light_task+3)& (0+255),f,b
  9539  011846  2B88               	incf	??_light_task& (0+255),f,b
  9540  011848  0E00               	movlw	0
  9541  01184A  2389               	addwfc	(??_light_task+1)& (0+255),f,b
  9542  01184C  238A               	addwfc	(??_light_task+2)& (0+255),f,b
  9543  01184E  238B               	addwfc	(??_light_task+3)& (0+255),f,b
  9544  011850  0E80               	movlw	128
  9545  011852  0100               	movlb	0	; () banked
  9546  011854  2588               	addwf	??_light_task& (0+255),w,b
  9547  011856  0100               	movlb	0	; () banked
  9548  011858  6F8E               	movwf	light_task@temp& (0+255),b
  9549  01185A  0E51               	movlw	81
  9550  01185C  0100               	movlb	0	; () banked
  9551  01185E  2189               	addwfc	(??_light_task+1)& (0+255),w,b
  9552  011860  0100               	movlb	0	; () banked
  9553  011862  6F8F               	movwf	(light_task@temp+1)& (0+255),b
  9554  011864  0E01               	movlw	1
  9555  011866  0100               	movlb	0	; () banked
  9556  011868  218A               	addwfc	(??_light_task+2)& (0+255),w,b
  9557  01186A  0100               	movlb	0	; () banked
  9558  01186C  6F90               	movwf	(light_task@temp+2)& (0+255),b
  9559  01186E  0E00               	movlw	0
  9560  011870  0100               	movlb	0	; () banked
  9561  011872  218B               	addwfc	(??_light_task+3)& (0+255),w,b
  9562  011874  0100               	movlb	0	; () banked
  9563  011876  6F91               	movwf	(light_task@temp+3)& (0+255),b
  9564  011878                     l9619:
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;PIC18F27J53-killifish_light06.c: 237: temp = temp * 2 * 250 / ((epoch_t)60*60*24);
  9568  011878  90D8               	bcf	status,0,c
  9569  01187A  0100               	movlb	0	; () banked
  9570  01187C  358E               	rlcf	light_task@temp& (0+255),w,b
  9571  01187E  0100               	movlb	0	; () banked
  9572  011880  6F6D               	movwf	___lmul@multiplier& (0+255),b
  9573  011882  0100               	movlb	0	; () banked
  9574  011884  358F               	rlcf	(light_task@temp+1)& (0+255),w,b
  9575  011886  0100               	movlb	0	; () banked
  9576  011888  6F6E               	movwf	(___lmul@multiplier+1)& (0+255),b
  9577  01188A  0100               	movlb	0	; () banked
  9578  01188C  3590               	rlcf	(light_task@temp+2)& (0+255),w,b
  9579  01188E  0100               	movlb	0	; () banked
  9580  011890  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  9581  011892  0100               	movlb	0	; () banked
  9582  011894  3591               	rlcf	(light_task@temp+3)& (0+255),w,b
  9583  011896  0100               	movlb	0	; () banked
  9584  011898  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  9585  01189A  0EFA               	movlw	250
  9586  01189C  0100               	movlb	0	; () banked
  9587  01189E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  9588  0118A0  0E00               	movlw	0
  9589  0118A2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9590  0118A4  0E00               	movlw	0
  9591  0118A6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9592  0118A8  0E00               	movlw	0
  9593  0118AA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9594  0118AC  EC1B  F09F         	call	___lmul	;wreg free
  9595  0118B0  C06D  F060         	movff	?___lmul,___lldiv@dividend
  9596  0118B4  C06E  F061         	movff	?___lmul+1,___lldiv@dividend+1
  9597  0118B8  C06F  F062         	movff	?___lmul+2,___lldiv@dividend+2
  9598  0118BC  C070  F063         	movff	?___lmul+3,___lldiv@dividend+3
  9599  0118C0  0E80               	movlw	128
  9600  0118C2  0100               	movlb	0	; () banked
  9601  0118C4  6F64               	movwf	___lldiv@divisor& (0+255),b
  9602  0118C6  0E51               	movlw	81
  9603  0118C8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9604  0118CA  0E01               	movlw	1
  9605  0118CC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9606  0118CE  0E00               	movlw	0
  9607  0118D0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9608  0118D2  ECA4  F099         	call	___lldiv	;wreg free
  9609  0118D6  C060  F08E         	movff	?___lldiv,light_task@temp
  9610  0118DA  C061  F08F         	movff	?___lldiv+1,light_task@temp+1
  9611  0118DE  C062  F090         	movff	?___lldiv+2,light_task@temp+2
  9612  0118E2  C063  F091         	movff	?___lldiv+3,light_task@temp+3
  9613                           
  9614                           ;PIC18F27J53-killifish_light06.c: 238: PWM_set(3, temp);
  9615  0118E6  C08E  F075         	movff	light_task@temp,PWM_set@value
  9616  0118EA  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9617  0118EE  0E03               	movlw	3
  9618  0118F0  ECE0  F08D         	call	_PWM_set
  9619                           
  9620                           ;PIC18F27J53-killifish_light06.c: 239: for (i = 0; i < 3; i++) {
  9621  0118F4  0E00               	movlw	0
  9622  0118F6  0100               	movlb	0	; () banked
  9623  0118F8  6F92               	movwf	light_task@i& (0+255),b
  9624  0118FA                     l9625:
  9625                           
  9626                           ; BSR set to: 0
  9627  0118FA  0E02               	movlw	2
  9628  0118FC  0100               	movlb	0	; () banked
  9629  0118FE  6592               	cpfsgt	light_task@i& (0+255),b
  9630  011900  D001               	goto	l9629
  9631  011902  D00B               	goto	l1425
  9632  011904                     l9629:
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;PIC18F27J53-killifish_light06.c: 240: PWM_set(i, temp);
  9636  011904  C08E  F075         	movff	light_task@temp,PWM_set@value
  9637  011908  C08F  F076         	movff	light_task@temp+1,PWM_set@value+1
  9638  01190C  0100               	movlb	0	; () banked
  9639  01190E  5192               	movf	light_task@i& (0+255),w,b
  9640  011910  ECE0  F08D         	call	_PWM_set
  9641  011914  0100               	movlb	0	; () banked
  9642  011916  2B92               	incf	light_task@i& (0+255),f,b
  9643  011918  D7F0               	goto	l9625
  9644  01191A                     l1425:
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;PIC18F27J53-killifish_light06.c: 241: }
  9648                           ;PIC18F27J53-killifish_light06.c: 242: }
  9649                           ;PIC18F27J53-killifish_light06.c: 243: }
  9650                           ;PIC18F27J53-killifish_light06.c: 244: if (sw_G.flag.press) {
  9651  01191A  0101               	movlb	1	; () banked
  9652  01191C  A18D               	btfss	(_sw_G+2)& (0+255),0,b
  9653  01191E  D02A               	goto	l1430
  9654                           
  9655                           ; BSR set to: 1
  9656                           ;PIC18F27J53-killifish_light06.c: 245: sw_G.flags = 0;
  9657  011920  0E00               	movlw	0
  9658  011922  0101               	movlb	1	; () banked
  9659  011924  6F8E               	movwf	(_sw_G+3)& (0+255),b
  9660  011926  0E00               	movlw	0
  9661  011928  6F8D               	movwf	(_sw_G+2)& (0+255),b
  9662                           
  9663                           ;PIC18F27J53-killifish_light06.c: 246: light_mode = COMMAND_mode;
  9664  01192A  0E02               	movlw	2
  9665  01192C  0100               	movlb	0	; () banked
  9666  01192E  6FF1               	movwf	_light_mode& (0+255),b
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;PIC18F27J53-killifish_light06.c: 247: static uint8_t n = 0;
  9670                           ;PIC18F27J53-killifish_light06.c: 248: if (n >= 3) n = 0;
  9671  011930  0E02               	movlw	2
  9672  011932  0100               	movlb	0	; () banked
  9673  011934  65FE               	cpfsgt	light_task@n& (0+255),b
  9674  011936  D004               	goto	l9641
  9675                           
  9676                           ; BSR set to: 0
  9677  011938  0E00               	movlw	0
  9678  01193A  0100               	movlb	0	; () banked
  9679  01193C  6FFE               	movwf	light_task@n& (0+255),b
  9680  01193E  D002               	goto	l9643
  9681  011940                     l9641:
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;PIC18F27J53-killifish_light06.c: 249: else n++;
  9685  011940  0100               	movlb	0	; () banked
  9686  011942  2BFE               	incf	light_task@n& (0+255),f,b
  9687  011944                     l9643:
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;PIC18F27J53-killifish_light06.c: 250: uint8_t value = 250 / 3 * n;
  9691  011944  0100               	movlb	0	; () banked
  9692  011946  51FE               	movf	light_task@n& (0+255),w,b
  9693  011948  0D53               	mullw	83
  9694  01194A  CFF3 F08C          	movff	prodl,light_task@value
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;PIC18F27J53-killifish_light06.c: 251: for (i = 0; i < 3; i++) {
  9698  01194E  0E00               	movlw	0
  9699  011950  0100               	movlb	0	; () banked
  9700  011952  6F92               	movwf	light_task@i& (0+255),b
  9701  011954                     l9647:
  9702                           
  9703                           ; BSR set to: 0
  9704  011954  0E02               	movlw	2
  9705  011956  0100               	movlb	0	; () banked
  9706  011958  6592               	cpfsgt	light_task@i& (0+255),b
  9707  01195A  D001               	goto	l9651
  9708  01195C  D00B               	goto	l1430
  9709  01195E                     l9651:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;PIC18F27J53-killifish_light06.c: 252: PWM_set(i, value);
  9713  01195E  C08C  F075         	movff	light_task@value,PWM_set@value
  9714  011962  0100               	movlb	0	; () banked
  9715  011964  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9716  011966  0100               	movlb	0	; () banked
  9717  011968  5192               	movf	light_task@i& (0+255),w,b
  9718  01196A  ECE0  F08D         	call	_PWM_set
  9719  01196E  0100               	movlb	0	; () banked
  9720  011970  2B92               	incf	light_task@i& (0+255),f,b
  9721  011972  D7F0               	goto	l9647
  9722  011974                     l1430:
  9723                           
  9724                           ;PIC18F27J53-killifish_light06.c: 253: }
  9725                           ;PIC18F27J53-killifish_light06.c: 254: }
  9726                           ;PIC18F27J53-killifish_light06.c: 255: if (sw_B.flag.press) {
  9727  011974  0101               	movlb	1	; () banked
  9728  011976  A189               	btfss	(_sw_B+2)& (0+255),0,b
  9729  011978  D01E               	goto	l9669
  9730                           
  9731                           ; BSR set to: 1
  9732                           ;PIC18F27J53-killifish_light06.c: 256: sw_B.flags = 0;
  9733  01197A  0E00               	movlw	0
  9734  01197C  0101               	movlb	1	; () banked
  9735  01197E  6F8A               	movwf	(_sw_B+3)& (0+255),b
  9736  011980  0E00               	movlw	0
  9737  011982  6F89               	movwf	(_sw_B+2)& (0+255),b
  9738                           
  9739                           ;PIC18F27J53-killifish_light06.c: 257: light_mode = COMMAND_mode;
  9740  011984  0E02               	movlw	2
  9741  011986  0100               	movlb	0	; () banked
  9742  011988  6FF1               	movwf	_light_mode& (0+255),b
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;PIC18F27J53-killifish_light06.c: 258: static uint8_t n = 0;
  9746                           ;PIC18F27J53-killifish_light06.c: 259: if (n >= 3) n = 0;
  9747  01198A  0E02               	movlw	2
  9748  01198C  0100               	movlb	0	; () banked
  9749  01198E  65FD               	cpfsgt	light_task@_5760& (0+255),b
  9750  011990  D004               	goto	l9663
  9751                           
  9752                           ; BSR set to: 0
  9753  011992  0E00               	movlw	0
  9754  011994  0100               	movlb	0	; () banked
  9755  011996  6FFD               	movwf	light_task@_5760& (0+255),b
  9756  011998  D002               	goto	l9665
  9757  01199A                     l9663:
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;PIC18F27J53-killifish_light06.c: 260: else n++;
  9761  01199A  0100               	movlb	0	; () banked
  9762  01199C  2BFD               	incf	light_task@_5760& (0+255),f,b
  9763  01199E                     l9665:
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;PIC18F27J53-killifish_light06.c: 261: uint8_t value = 250 / 3 * n;
  9767  01199E  0100               	movlb	0	; () banked
  9768  0119A0  51FD               	movf	light_task@_5760& (0+255),w,b
  9769  0119A2  0D53               	mullw	83
  9770  0119A4  CFF3 F08D          	movff	prodl,light_task@value_5761
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;PIC18F27J53-killifish_light06.c: 262: PWM_set(3, value);
  9774  0119A8  C08D  F075         	movff	light_task@value_5761,PWM_set@value
  9775  0119AC  0100               	movlb	0	; () banked
  9776  0119AE  6B76               	clrf	(PWM_set@value+1)& (0+255),b
  9777  0119B0  0E03               	movlw	3
  9778  0119B2  ECE0  F08D         	call	_PWM_set
  9779  0119B6                     l9669:
  9780                           
  9781                           ;PIC18F27J53-killifish_light06.c: 263: }
  9782                           ;PIC18F27J53-killifish_light06.c: 264: if (sw_R.flag.press) {
  9783  0119B6  0101               	movlb	1	; () banked
  9784  0119B8  A191               	btfss	(_sw_R+2)& (0+255),0,b
  9785  0119BA  0012               	return	
  9786                           
  9787                           ; BSR set to: 1
  9788                           ;PIC18F27J53-killifish_light06.c: 265: sw_R.flags = 0;
  9789  0119BC  0E00               	movlw	0
  9790  0119BE  0101               	movlb	1	; () banked
  9791  0119C0  6F92               	movwf	(_sw_R+3)& (0+255),b
  9792  0119C2  0E00               	movlw	0
  9793  0119C4  6F91               	movwf	(_sw_R+2)& (0+255),b
  9794                           
  9795                           ;PIC18F27J53-killifish_light06.c: 266: light_mode = TIME_SYNC_mode;
  9796  0119C6  0E00               	movlw	0
  9797  0119C8  0100               	movlb	0	; () banked
  9798  0119CA  6FF1               	movwf	_light_mode& (0+255),b
  9799  0119CC  0012               	return	
  9800  0119CE                     __end_of_light_task:
  9801                           	opt stack 0
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           intcon2	equ	0xFF1
  9810                           indf0	equ	0xFEF
  9811                           postinc0	equ	0xFEE
  9812                           fsr0h	equ	0xFEA
  9813                           fsr0l	equ	0xFE9
  9814                           wreg	equ	0xFE8
  9815                           postinc1	equ	0xFE6
  9816                           postdec1	equ	0xFE5
  9817                           fsr1h	equ	0xFE2
  9818                           fsr1l	equ	0xFE1
  9819                           indf2	equ	0xFDF
  9820                           postinc2	equ	0xFDE
  9821                           postdec2	equ	0xFDD
  9822                           fsr2h	equ	0xFDA
  9823                           fsr2l	equ	0xFD9
  9824                           status	equ	0xFD8
  9825                           
  9826 ;; *************** function ___llmod *****************
  9827 ;; Defined at:
  9828 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  dividend        4    0[BANK0 ] unsigned long 
  9831 ;;  divisor         4    4[BANK0 ] unsigned long 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  counter         1    8[BANK0 ] unsigned char 
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  4    0[BANK0 ] unsigned long 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9843 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9846 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9847 ;;Total ram usage:        9 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:   11
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_light_task
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text36
  9858  013830                     __ptext36:
  9859                           	opt stack 0
  9860  013830                     ___llmod:
  9861                           	opt stack 18
  9862                           
  9863                           ;incstack = 0
  9864  013830  0100               	movlb	0	; () banked
  9865  013832  5164               	movf	___llmod@divisor& (0+255),w,b
  9866  013834  0100               	movlb	0	; () banked
  9867  013836  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9868  013838  0100               	movlb	0	; () banked
  9869  01383A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9870  01383C  0100               	movlb	0	; () banked
  9871  01383E  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9872  013840  B4D8               	btfsc	status,2,c
  9873  013842  D03A               	goto	l1900
  9874                           
  9875                           ; BSR set to: 0
  9876  013844  0E01               	movlw	1
  9877  013846  0100               	movlb	0	; () banked
  9878  013848  6F68               	movwf	___llmod@counter& (0+255),b
  9879  01384A  D008               	goto	l9407
  9880  01384C                     l9405:
  9881                           
  9882                           ; BSR set to: 0
  9883  01384C  0100               	movlb	0	; () banked
  9884  01384E  90D8               	bcf	status,0,c
  9885  013850  3764               	rlcf	___llmod@divisor& (0+255),f,b
  9886  013852  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9887  013854  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9888  013856  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9889  013858  0100               	movlb	0	; () banked
  9890  01385A  2B68               	incf	___llmod@counter& (0+255),f,b
  9891  01385C                     l9407:
  9892                           
  9893                           ; BSR set to: 0
  9894  01385C  0100               	movlb	0	; () banked
  9895  01385E  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9896  013860  D7F5               	goto	l9405
  9897  013862                     l9409:
  9898                           
  9899                           ; BSR set to: 0
  9900  013862  0100               	movlb	0	; () banked
  9901  013864  5164               	movf	___llmod@divisor& (0+255),w,b
  9902  013866  0100               	movlb	0	; () banked
  9903  013868  5D60               	subwf	___llmod@dividend& (0+255),w,b
  9904  01386A  0100               	movlb	0	; () banked
  9905  01386C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9906  01386E  0100               	movlb	0	; () banked
  9907  013870  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9908  013872  0100               	movlb	0	; () banked
  9909  013874  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9910  013876  0100               	movlb	0	; () banked
  9911  013878  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9912  01387A  0100               	movlb	0	; () banked
  9913  01387C  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9914  01387E  0100               	movlb	0	; () banked
  9915  013880  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9916  013882  A0D8               	btfss	status,0,c
  9917  013884  D010               	goto	l9413
  9918                           
  9919                           ; BSR set to: 0
  9920  013886  0100               	movlb	0	; () banked
  9921  013888  5164               	movf	___llmod@divisor& (0+255),w,b
  9922  01388A  0100               	movlb	0	; () banked
  9923  01388C  5F60               	subwf	___llmod@dividend& (0+255),f,b
  9924  01388E  0100               	movlb	0	; () banked
  9925  013890  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
  9926  013892  0100               	movlb	0	; () banked
  9927  013894  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9928  013896  0100               	movlb	0	; () banked
  9929  013898  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
  9930  01389A  0100               	movlb	0	; () banked
  9931  01389C  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9932  01389E  0100               	movlb	0	; () banked
  9933  0138A0  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
  9934  0138A2  0100               	movlb	0	; () banked
  9935  0138A4  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9936  0138A6                     l9413:
  9937                           
  9938                           ; BSR set to: 0
  9939  0138A6  0100               	movlb	0	; () banked
  9940  0138A8  90D8               	bcf	status,0,c
  9941  0138AA  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9942  0138AC  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9943  0138AE  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9944  0138B0  3364               	rrcf	___llmod@divisor& (0+255),f,b
  9945                           
  9946                           ; BSR set to: 0
  9947  0138B2  0100               	movlb	0	; () banked
  9948  0138B4  2F68               	decfsz	___llmod@counter& (0+255),f,b
  9949  0138B6  D7D5               	goto	l9409
  9950  0138B8                     l1900:
  9951                           
  9952                           ; BSR set to: 0
  9953  0138B8  C060  F060         	movff	___llmod@dividend,?___llmod
  9954  0138BC  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
  9955  0138C0  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
  9956  0138C4  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
  9957                           
  9958                           ; BSR set to: 0
  9959  0138C8  0012               	return		;funcret
  9960  0138CA                     __end_of___llmod:
  9961                           	opt stack 0
  9962                           tblptru	equ	0xFF8
  9963                           tblptrh	equ	0xFF7
  9964                           tblptrl	equ	0xFF6
  9965                           tablat	equ	0xFF5
  9966                           prodh	equ	0xFF4
  9967                           prodl	equ	0xFF3
  9968                           intcon	equ	0xFF2
  9969                           intcon2	equ	0xFF1
  9970                           indf0	equ	0xFEF
  9971                           postinc0	equ	0xFEE
  9972                           fsr0h	equ	0xFEA
  9973                           fsr0l	equ	0xFE9
  9974                           wreg	equ	0xFE8
  9975                           postinc1	equ	0xFE6
  9976                           postdec1	equ	0xFE5
  9977                           fsr1h	equ	0xFE2
  9978                           fsr1l	equ	0xFE1
  9979                           indf2	equ	0xFDF
  9980                           postinc2	equ	0xFDE
  9981                           postdec2	equ	0xFDD
  9982                           fsr2h	equ	0xFDA
  9983                           fsr2l	equ	0xFD9
  9984                           status	equ	0xFD8
  9985                           
  9986 ;; *************** function ___lldiv *****************
  9987 ;; Defined at:
  9988 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  dividend        4    0[BANK0 ] unsigned long 
  9991 ;;  divisor         4    4[BANK0 ] unsigned long 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  quotient        4    8[BANK0 ] unsigned long 
  9994 ;;  counter         1   12[BANK0 ] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;                  4    0[BANK0 ] unsigned long 
  9997 ;; Registers used:
  9998 ;;		wreg, status,2, status,0
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10004 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10005 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10008 ;;Total ram usage:       13 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; Hardware stack levels required when called:   11
 10011 ;; This function calls:
 10012 ;;		Nothing
 10013 ;; This function is called by:
 10014 ;;		_get_quot_rem
 10015 ;;		_light_task
 10016 ;;		_CTMU_read
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text37
 10021  013348                     __ptext37:
 10022                           	opt stack 0
 10023  013348                     ___lldiv:
 10024                           	opt stack 12
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;incstack = 0
 10028  013348  0E00               	movlw	0
 10029  01334A  0100               	movlb	0	; () banked
 10030  01334C  6F68               	movwf	___lldiv@quotient& (0+255),b
 10031  01334E  0E00               	movlw	0
 10032  013350  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 10033  013352  0E00               	movlw	0
 10034  013354  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 10035  013356  0E00               	movlw	0
 10036  013358  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 10037                           
 10038                           ; BSR set to: 0
 10039  01335A  0100               	movlb	0	; () banked
 10040  01335C  5164               	movf	___lldiv@divisor& (0+255),w,b
 10041  01335E  0100               	movlb	0	; () banked
 10042  013360  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10043  013362  0100               	movlb	0	; () banked
 10044  013364  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10045  013366  0100               	movlb	0	; () banked
 10046  013368  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10047  01336A  B4D8               	btfsc	status,2,c
 10048  01336C  D042               	goto	l1890
 10049                           
 10050                           ; BSR set to: 0
 10051  01336E  0E01               	movlw	1
 10052  013370  0100               	movlb	0	; () banked
 10053  013372  6F6C               	movwf	___lldiv@counter& (0+255),b
 10054  013374  D008               	goto	l8307
 10055  013376                     l8305:
 10056                           
 10057                           ; BSR set to: 0
 10058  013376  0100               	movlb	0	; () banked
 10059  013378  90D8               	bcf	status,0,c
 10060  01337A  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 10061  01337C  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10062  01337E  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10063  013380  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10064  013382  0100               	movlb	0	; () banked
 10065  013384  2B6C               	incf	___lldiv@counter& (0+255),f,b
 10066  013386                     l8307:
 10067                           
 10068                           ; BSR set to: 0
 10069  013386  0100               	movlb	0	; () banked
 10070  013388  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10071  01338A  D7F5               	goto	l8305
 10072  01338C                     l8309:
 10073                           
 10074                           ; BSR set to: 0
 10075  01338C  0100               	movlb	0	; () banked
 10076  01338E  90D8               	bcf	status,0,c
 10077  013390  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 10078  013392  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10079  013394  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10080  013396  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10081                           
 10082                           ; BSR set to: 0
 10083  013398  0100               	movlb	0	; () banked
 10084  01339A  5164               	movf	___lldiv@divisor& (0+255),w,b
 10085  01339C  0100               	movlb	0	; () banked
 10086  01339E  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 10087  0133A0  0100               	movlb	0	; () banked
 10088  0133A2  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10089  0133A4  0100               	movlb	0	; () banked
 10090  0133A6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10091  0133A8  0100               	movlb	0	; () banked
 10092  0133AA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10093  0133AC  0100               	movlb	0	; () banked
 10094  0133AE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10095  0133B0  0100               	movlb	0	; () banked
 10096  0133B2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10097  0133B4  0100               	movlb	0	; () banked
 10098  0133B6  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10099  0133B8  A0D8               	btfss	status,0,c
 10100  0133BA  D012               	goto	l8317
 10101                           
 10102                           ; BSR set to: 0
 10103  0133BC  0100               	movlb	0	; () banked
 10104  0133BE  5164               	movf	___lldiv@divisor& (0+255),w,b
 10105  0133C0  0100               	movlb	0	; () banked
 10106  0133C2  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 10107  0133C4  0100               	movlb	0	; () banked
 10108  0133C6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10109  0133C8  0100               	movlb	0	; () banked
 10110  0133CA  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10111  0133CC  0100               	movlb	0	; () banked
 10112  0133CE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10113  0133D0  0100               	movlb	0	; () banked
 10114  0133D2  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10115  0133D4  0100               	movlb	0	; () banked
 10116  0133D6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10117  0133D8  0100               	movlb	0	; () banked
 10118  0133DA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10119                           
 10120                           ; BSR set to: 0
 10121  0133DC  0100               	movlb	0	; () banked
 10122  0133DE  8168               	bsf	___lldiv@quotient& (0+255),0,b
 10123  0133E0                     l8317:
 10124                           
 10125                           ; BSR set to: 0
 10126  0133E0  0100               	movlb	0	; () banked
 10127  0133E2  90D8               	bcf	status,0,c
 10128  0133E4  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10129  0133E6  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10130  0133E8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10131  0133EA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 10132                           
 10133                           ; BSR set to: 0
 10134  0133EC  0100               	movlb	0	; () banked
 10135  0133EE  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 10136  0133F0  D7CD               	goto	l8309
 10137  0133F2                     l1890:
 10138                           
 10139                           ; BSR set to: 0
 10140  0133F2  C068  F060         	movff	___lldiv@quotient,?___lldiv
 10141  0133F6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 10142  0133FA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 10143  0133FE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 10144                           
 10145                           ; BSR set to: 0
 10146  013402  0012               	return		;funcret
 10147  013404                     __end_of___lldiv:
 10148                           	opt stack 0
 10149                           tblptru	equ	0xFF8
 10150                           tblptrh	equ	0xFF7
 10151                           tblptrl	equ	0xFF6
 10152                           tablat	equ	0xFF5
 10153                           prodh	equ	0xFF4
 10154                           prodl	equ	0xFF3
 10155                           intcon	equ	0xFF2
 10156                           intcon2	equ	0xFF1
 10157                           indf0	equ	0xFEF
 10158                           postinc0	equ	0xFEE
 10159                           fsr0h	equ	0xFEA
 10160                           fsr0l	equ	0xFE9
 10161                           wreg	equ	0xFE8
 10162                           postinc1	equ	0xFE6
 10163                           postdec1	equ	0xFE5
 10164                           fsr1h	equ	0xFE2
 10165                           fsr1l	equ	0xFE1
 10166                           indf2	equ	0xFDF
 10167                           postinc2	equ	0xFDE
 10168                           postdec2	equ	0xFDD
 10169                           fsr2h	equ	0xFDA
 10170                           fsr2l	equ	0xFD9
 10171                           status	equ	0xFD8
 10172                           
 10173 ;; *************** function _PWM_set *****************
 10174 ;; Defined at:
 10175 ;;		line 121 in file "PIC18F27J53-killifish_light06.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  color           1    wreg     unsigned char 
 10178 ;;  value           2   21[BANK0 ] unsigned int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  color           1   25[BANK0 ] unsigned char 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;		None               void
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10190 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;Total ram usage:        5 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:   12
 10197 ;; This function calls:
 10198 ;;		___lwdiv
 10199 ;;		___wmul
 10200 ;; This function is called by:
 10201 ;;		_terminal_operation
 10202 ;;		_light_task
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text38
 10207  011BC0                     __ptext38:
 10208                           	opt stack 0
 10209  011BC0                     _PWM_set:
 10210                           	opt stack 16
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;incstack = 0
 10214                           ;PWM_set@color stored from wreg
 10215  011BC0  0100               	movlb	0	; () banked
 10216  011BC2  6F79               	movwf	PWM_set@color& (0+255),b
 10217                           
 10218                           ;PIC18F27J53-killifish_light06.c: 122: value = value * value / 250;
 10219  011BC4  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10220  011BC8  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10221  011BCC  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10222  011BD0  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10223  011BD4  ECE1  F0A1         	call	___wmul	;wreg free
 10224  011BD8  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10225  011BDC  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10226  011BE0  0E00               	movlw	0
 10227  011BE2  0100               	movlb	0	; () banked
 10228  011BE4  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10229  011BE6  0EFA               	movlw	250
 10230  011BE8  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10231  011BEA  ECDF  F09E         	call	___lwdiv	;wreg free
 10232  011BEE  C066  F075         	movff	?___lwdiv,PWM_set@value
 10233  011BF2  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10234                           
 10235                           ;PIC18F27J53-killifish_light06.c: 123: value = value * value / 250;
 10236  011BF6  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10237  011BFA  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10238  011BFE  C075  F062         	movff	PWM_set@value,___wmul@multiplicand
 10239  011C02  C076  F063         	movff	PWM_set@value+1,___wmul@multiplicand+1
 10240  011C06  ECE1  F0A1         	call	___wmul	;wreg free
 10241  011C0A  C060  F066         	movff	?___wmul,___lwdiv@dividend
 10242  011C0E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 10243  011C12  0E00               	movlw	0
 10244  011C14  0100               	movlb	0	; () banked
 10245  011C16  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10246  011C18  0EFA               	movlw	250
 10247  011C1A  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10248  011C1C  ECDF  F09E         	call	___lwdiv	;wreg free
 10249  011C20  C066  F075         	movff	?___lwdiv,PWM_set@value
 10250  011C24  C067  F076         	movff	?___lwdiv+1,PWM_set@value+1
 10251                           
 10252                           ;PIC18F27J53-killifish_light06.c: 124: value = value * 3 / 4;
 10253  011C28  C075  F060         	movff	PWM_set@value,___wmul@multiplier
 10254  011C2C  C076  F061         	movff	PWM_set@value+1,___wmul@multiplier+1
 10255  011C30  0E00               	movlw	0
 10256  011C32  0100               	movlb	0	; () banked
 10257  011C34  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10258  011C36  0E03               	movlw	3
 10259  011C38  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10260  011C3A  ECE1  F0A1         	call	___wmul	;wreg free
 10261  011C3E  0100               	movlb	0	; () banked
 10262  011C40  90D8               	bcf	status,0,c
 10263  011C42  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10264  011C44  3360               	rrcf	?___wmul& (0+255),f,b
 10265  011C46  0100               	movlb	0	; () banked
 10266  011C48  90D8               	bcf	status,0,c
 10267  011C4A  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10268  011C4C  3360               	rrcf	?___wmul& (0+255),f,b
 10269  011C4E  C060  F075         	movff	?___wmul,PWM_set@value
 10270  011C52  C061  F076         	movff	?___wmul+1,PWM_set@value+1
 10271                           
 10272                           ;PIC18F27J53-killifish_light06.c: 125: switch (color) {
 10273  011C56  D056               	goto	l9053
 10274  011C58                     l9035:
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;PIC18F27J53-killifish_light06.c: 127: if (value < 250 / 4) {
 10278  011C58  0100               	movlb	0	; () banked
 10279  011C5A  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10280  011C5C  E105               	bnz	l9039
 10281  011C5E  0E3E               	movlw	62
 10282  011C60  0100               	movlb	0	; () banked
 10283  011C62  5D75               	subwf	PWM_set@value& (0+255),w,b
 10284  011C64  A0D8               	btfss	status,0,c
 10285  011C66  D071               	goto	l9073
 10286  011C68                     l9039:
 10287                           
 10288                           ; BSR set to: 0
 10289                           ;PIC18F27J53-killifish_light06.c: 130: value = 2 * (value - 250 / 4) / 3 + 250 / 4;
 10290  011C68  C075  F077         	movff	PWM_set@value,??_PWM_set
 10291  011C6C  C076  F078         	movff	PWM_set@value+1,??_PWM_set+1
 10292  011C70  90D8               	bcf	status,0,c
 10293  011C72  0100               	movlb	0	; () banked
 10294  011C74  3777               	rlcf	??_PWM_set& (0+255),f,b
 10295  011C76  3778               	rlcf	(??_PWM_set+1)& (0+255),f,b
 10296  011C78  0E84               	movlw	132
 10297  011C7A  0100               	movlb	0	; () banked
 10298  011C7C  2577               	addwf	??_PWM_set& (0+255),w,b
 10299  011C7E  0100               	movlb	0	; () banked
 10300  011C80  6F66               	movwf	___lwdiv@dividend& (0+255),b
 10301  011C82  0EFF               	movlw	255
 10302  011C84  0100               	movlb	0	; () banked
 10303  011C86  2178               	addwfc	(??_PWM_set+1)& (0+255),w,b
 10304  011C88  0100               	movlb	0	; () banked
 10305  011C8A  6F67               	movwf	(___lwdiv@dividend+1)& (0+255),b
 10306  011C8C  0E00               	movlw	0
 10307  011C8E  0100               	movlb	0	; () banked
 10308  011C90  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10309  011C92  0E03               	movlw	3
 10310  011C94  6F68               	movwf	___lwdiv@divisor& (0+255),b
 10311  011C96  ECDF  F09E         	call	___lwdiv	;wreg free
 10312  011C9A  0E3E               	movlw	62
 10313  011C9C  0100               	movlb	0	; () banked
 10314  011C9E  2566               	addwf	?___lwdiv& (0+255),w,b
 10315  011CA0  0100               	movlb	0	; () banked
 10316  011CA2  6F75               	movwf	PWM_set@value& (0+255),b
 10317  011CA4  0E00               	movlw	0
 10318  011CA6  0100               	movlb	0	; () banked
 10319  011CA8  2167               	addwfc	(?___lwdiv+1)& (0+255),w,b
 10320  011CAA  D029               	goto	L1
 10321  011CAC                     l9045:
 10322                           
 10323                           ; BSR set to: 0
 10324                           ;PIC18F27J53-killifish_light06.c: 141: if (value < 250 / 4) {
 10325  011CAC  0100               	movlb	0	; () banked
 10326  011CAE  5176               	movf	(PWM_set@value+1)& (0+255),w,b
 10327  011CB0  E105               	bnz	l9049
 10328  011CB2  0E3E               	movlw	62
 10329  011CB4  0100               	movlb	0	; () banked
 10330  011CB6  5D75               	subwf	PWM_set@value& (0+255),w,b
 10331  011CB8  A0D8               	btfss	status,0,c
 10332  011CBA  D047               	goto	l9073
 10333  011CBC                     l9049:
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;PIC18F27J53-killifish_light06.c: 144: value = 3 * (value - 250 / 4) / 4 + 250 / 4;
 10337  011CBC  0EC2               	movlw	194
 10338  011CBE  0100               	movlb	0	; () banked
 10339  011CC0  2575               	addwf	PWM_set@value& (0+255),w,b
 10340  011CC2  0100               	movlb	0	; () banked
 10341  011CC4  6F60               	movwf	___wmul@multiplier& (0+255),b
 10342  011CC6  0EFF               	movlw	255
 10343  011CC8  0100               	movlb	0	; () banked
 10344  011CCA  2176               	addwfc	(PWM_set@value+1)& (0+255),w,b
 10345  011CCC  0100               	movlb	0	; () banked
 10346  011CCE  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
 10347  011CD0  0E00               	movlw	0
 10348  011CD2  0100               	movlb	0	; () banked
 10349  011CD4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10350  011CD6  0E03               	movlw	3
 10351  011CD8  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10352  011CDA  ECE1  F0A1         	call	___wmul	;wreg free
 10353  011CDE  0100               	movlb	0	; () banked
 10354  011CE0  90D8               	bcf	status,0,c
 10355  011CE2  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10356  011CE4  3360               	rrcf	?___wmul& (0+255),f,b
 10357  011CE6  0100               	movlb	0	; () banked
 10358  011CE8  90D8               	bcf	status,0,c
 10359  011CEA  3361               	rrcf	(?___wmul+1)& (0+255),f,b
 10360  011CEC  3360               	rrcf	?___wmul& (0+255),f,b
 10361  011CEE  0E3E               	movlw	62
 10362  011CF0  0100               	movlb	0	; () banked
 10363  011CF2  2560               	addwf	?___wmul& (0+255),w,b
 10364  011CF4  0100               	movlb	0	; () banked
 10365  011CF6  6F75               	movwf	PWM_set@value& (0+255),b
 10366  011CF8  0E00               	movlw	0
 10367  011CFA  0100               	movlb	0	; () banked
 10368  011CFC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 10369  011CFE                     L1:
 10370  011CFE  0100               	movlb	0	; () banked
 10371  011D00  6F76               	movwf	(PWM_set@value+1)& (0+255),b
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;PIC18F27J53-killifish_light06.c: 149: }
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;PIC18F27J53-killifish_light06.c: 148: break;
 10378                           
 10379                           ;PIC18F27J53-killifish_light06.c: 147: case 3:
 10380                           
 10381                           ; BSR set to: 0
 10382                           ;PIC18F27J53-killifish_light06.c: 145: }
 10383                           ;PIC18F27J53-killifish_light06.c: 146: break;
 10384  011D02  D023               	goto	l9073
 10385  011D04                     l9053:
 10386                           
 10387                           ; BSR set to: 0
 10388  011D04  0100               	movlb	0	; () banked
 10389  011D06  5179               	movf	PWM_set@color& (0+255),w,b
 10390                           
 10391                           ; Switch size 1, requested type "space"
 10392                           ; Number of cases is 4, Range of values is 0 to 3
 10393                           ; switch strategies available:
 10394                           ; Name         Instructions Cycles
 10395                           ; simple_byte           13     7 (average)
 10396                           ;	Chosen strategy is simple_byte
 10397  011D08  0A00               	xorlw	0	; case 0
 10398  011D0A  B4D8               	btfsc	status,2,c
 10399  011D0C  D7A5               	goto	l9035
 10400  011D0E  0A01               	xorlw	1	; case 1
 10401  011D10  B4D8               	btfsc	status,2,c
 10402  011D12  D01B               	goto	l9073
 10403  011D14  0A03               	xorlw	3	; case 2
 10404  011D16  B4D8               	btfsc	status,2,c
 10405  011D18  D7C9               	goto	l9045
 10406  011D1A  0A01               	xorlw	1	; case 3
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;PIC18F27J53-killifish_light06.c: 150: switch (color) {
 10410  011D1C  D016               	goto	l9073
 10411  011D1E                     l9055:
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;PIC18F27J53-killifish_light06.c: 152: CCP1CONbits.DC1B = 0;
 10415  011D1E  0ECF               	movlw	-49
 10416  011D20  16BA               	andwf	4026,f,c	;volatile
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;PIC18F27J53-killifish_light06.c: 153: CCPR1L = value;
 10420  011D22  C075  FFBB         	movff	PWM_set@value,4027	;volatile
 10421                           
 10422                           ;PIC18F27J53-killifish_light06.c: 154: break;
 10423  011D26  0012               	return	
 10424  011D28                     l9059:
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;PIC18F27J53-killifish_light06.c: 156: CCP2CONbits.DC2B = 0;
 10428  011D28  0ECF               	movlw	-49
 10429  011D2A  16B4               	andwf	4020,f,c	;volatile
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;PIC18F27J53-killifish_light06.c: 157: CCPR2L = value;
 10433  011D2C  C075  FFB5         	movff	PWM_set@value,4021	;volatile
 10434                           
 10435                           ;PIC18F27J53-killifish_light06.c: 158: break;
 10436  011D30  0012               	return	
 10437  011D32                     l9063:
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;PIC18F27J53-killifish_light06.c: 160: CCP3CONbits.DC3B = 0;
 10441  011D32  0ECF               	movlw	-49
 10442  011D34  010F               	movlb	15	; () banked
 10443  011D36  1715               	andwf	21,f,b	;volatile
 10444                           
 10445                           ; BSR set to: 15
 10446                           ;PIC18F27J53-killifish_light06.c: 161: CCPR3L = value;
 10447  011D38  C075  FF16         	movff	PWM_set@value,3862	;volatile
 10448                           
 10449                           ;PIC18F27J53-killifish_light06.c: 162: break;
 10450  011D3C  0012               	return	
 10451  011D3E                     l9067:
 10452                           
 10453                           ;PIC18F27J53-killifish_light06.c: 164: CCP4CONbits.DC4B = 0;
 10454  011D3E  0ECF               	movlw	-49
 10455  011D40  010F               	movlb	15	; () banked
 10456  011D42  1712               	andwf	18,f,b	;volatile
 10457                           
 10458                           ; BSR set to: 15
 10459                           ;PIC18F27J53-killifish_light06.c: 165: CCPR4L = value;
 10460  011D44  C075  FF13         	movff	PWM_set@value,3859	;volatile
 10461                           
 10462                           ; BSR set to: 15
 10463                           ;PIC18F27J53-killifish_light06.c: 167: }
 10464                           
 10465                           ;PIC18F27J53-killifish_light06.c: 166: break;
 10466  011D48  0012               	return	
 10467  011D4A                     l9073:
 10468  011D4A  0100               	movlb	0	; () banked
 10469  011D4C  5179               	movf	PWM_set@color& (0+255),w,b
 10470                           
 10471                           ; Switch size 1, requested type "space"
 10472                           ; Number of cases is 4, Range of values is 0 to 3
 10473                           ; switch strategies available:
 10474                           ; Name         Instructions Cycles
 10475                           ; simple_byte           13     7 (average)
 10476                           ;	Chosen strategy is simple_byte
 10477  011D4E  0A00               	xorlw	0	; case 0
 10478  011D50  B4D8               	btfsc	status,2,c
 10479  011D52  D7E5               	goto	l9055
 10480  011D54  0A01               	xorlw	1	; case 1
 10481  011D56  B4D8               	btfsc	status,2,c
 10482  011D58  D7E7               	goto	l9059
 10483  011D5A  0A03               	xorlw	3	; case 2
 10484  011D5C  B4D8               	btfsc	status,2,c
 10485  011D5E  D7E9               	goto	l9063
 10486  011D60  0A01               	xorlw	1	; case 3
 10487  011D62  A4D8               	btfss	status,2,c
 10488  011D64  0012               	return	
 10489  011D66  D7EB               	goto	l9067
 10490  011D68                     __end_of_PWM_set:
 10491                           	opt stack 0
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           intcon	equ	0xFF2
 10499                           intcon2	equ	0xFF1
 10500                           indf0	equ	0xFEF
 10501                           postinc0	equ	0xFEE
 10502                           fsr0h	equ	0xFEA
 10503                           fsr0l	equ	0xFE9
 10504                           wreg	equ	0xFE8
 10505                           postinc1	equ	0xFE6
 10506                           postdec1	equ	0xFE5
 10507                           fsr1h	equ	0xFE2
 10508                           fsr1l	equ	0xFE1
 10509                           indf2	equ	0xFDF
 10510                           postinc2	equ	0xFDE
 10511                           postdec2	equ	0xFDD
 10512                           fsr2h	equ	0xFDA
 10513                           fsr2l	equ	0xFD9
 10514                           status	equ	0xFD8
 10515                           
 10516 ;; *************** function ___wmul *****************
 10517 ;; Defined at:
 10518 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10521 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  product         2    4[BANK0 ] unsigned int 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  2    0[BANK0 ] unsigned int 
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0, prodl, prodh
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10533 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10537 ;;Total ram usage:        6 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:   11
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		_PWM_set
 10544 ;;		_terminal_operation
 10545 ;;		_sprintf
 10546 ;;		_atoi
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text39
 10551  0143C2                     __ptext39:
 10552                           	opt stack 0
 10553  0143C2                     ___wmul:
 10554                           	opt stack 13
 10555                           
 10556                           ;incstack = 0
 10557  0143C2  0100               	movlb	0	; () banked
 10558  0143C4  5160               	movf	___wmul@multiplier& (0+255),w,b
 10559  0143C6  0100               	movlb	0	; () banked
 10560  0143C8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10561  0143CA  CFF3 F064          	movff	prodl,___wmul@product
 10562  0143CE  CFF4 F065          	movff	prodh,___wmul@product+1
 10563  0143D2  0100               	movlb	0	; () banked
 10564  0143D4  5160               	movf	___wmul@multiplier& (0+255),w,b
 10565  0143D6  0100               	movlb	0	; () banked
 10566  0143D8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10567  0143DA  50F3               	movf	prodl,w,c
 10568  0143DC  0100               	movlb	0	; () banked
 10569  0143DE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10570  0143E0  0100               	movlb	0	; () banked
 10571  0143E2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10572  0143E4  0100               	movlb	0	; () banked
 10573  0143E6  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10574  0143E8  50F3               	movf	prodl,w,c
 10575  0143EA  0100               	movlb	0	; () banked
 10576  0143EC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10577                           
 10578                           ; BSR set to: 0
 10579  0143EE  C064  F060         	movff	___wmul@product,?___wmul
 10580  0143F2  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10581  0143F6  0012               	return	
 10582  0143F8                     __end_of___wmul:
 10583                           	opt stack 0
 10584                           tblptru	equ	0xFF8
 10585                           tblptrh	equ	0xFF7
 10586                           tblptrl	equ	0xFF6
 10587                           tablat	equ	0xFF5
 10588                           prodh	equ	0xFF4
 10589                           prodl	equ	0xFF3
 10590                           intcon	equ	0xFF2
 10591                           intcon2	equ	0xFF1
 10592                           indf0	equ	0xFEF
 10593                           postinc0	equ	0xFEE
 10594                           fsr0h	equ	0xFEA
 10595                           fsr0l	equ	0xFE9
 10596                           wreg	equ	0xFE8
 10597                           postinc1	equ	0xFE6
 10598                           postdec1	equ	0xFE5
 10599                           fsr1h	equ	0xFE2
 10600                           fsr1l	equ	0xFE1
 10601                           indf2	equ	0xFDF
 10602                           postinc2	equ	0xFDE
 10603                           postdec2	equ	0xFDD
 10604                           fsr2h	equ	0xFDA
 10605                           fsr2l	equ	0xFD9
 10606                           status	equ	0xFD8
 10607                           
 10608 ;; *************** function ___lwdiv *****************
 10609 ;; Defined at:
 10610 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  dividend        2    6[BANK0 ] unsigned int 
 10613 ;;  divisor         2    8[BANK0 ] unsigned int 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  quotient        2   11[BANK0 ] unsigned int 
 10616 ;;  counter         1   10[BANK0 ] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  2    6[BANK0 ] unsigned int 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, status,0
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;Total ram usage:        7 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:   11
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		_ringbuf_put_num
 10637 ;;		_PWM_set
 10638 ;;		_sprintf
 10639 ;; This function uses a non-reentrant model
 10640 ;;
 10641                           
 10642                           	psect	text40
 10643  013DBE                     __ptext40:
 10644                           	opt stack 0
 10645  013DBE                     ___lwdiv:
 10646                           	opt stack 13
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;incstack = 0
 10650  013DBE  0E00               	movlw	0
 10651  013DC0  0100               	movlb	0	; () banked
 10652  013DC2  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
 10653  013DC4  0E00               	movlw	0
 10654  013DC6  6F6B               	movwf	___lwdiv@quotient& (0+255),b
 10655                           
 10656                           ; BSR set to: 0
 10657  013DC8  0100               	movlb	0	; () banked
 10658  013DCA  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10659  013DCC  0100               	movlb	0	; () banked
 10660  013DCE  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 10661  013DD0  B4D8               	btfsc	status,2,c
 10662  013DD2  D02C               	goto	l1943
 10663                           
 10664                           ; BSR set to: 0
 10665  013DD4  0E01               	movlw	1
 10666  013DD6  0100               	movlb	0	; () banked
 10667  013DD8  6F6A               	movwf	___lwdiv@counter& (0+255),b
 10668  013DDA  D006               	goto	l8405
 10669  013DDC                     l8403:
 10670                           
 10671                           ; BSR set to: 0
 10672  013DDC  0100               	movlb	0	; () banked
 10673  013DDE  90D8               	bcf	status,0,c
 10674  013DE0  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 10675  013DE2  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 10676  013DE4  0100               	movlb	0	; () banked
 10677  013DE6  2B6A               	incf	___lwdiv@counter& (0+255),f,b
 10678  013DE8                     l8405:
 10679                           
 10680                           ; BSR set to: 0
 10681  013DE8  0100               	movlb	0	; () banked
 10682  013DEA  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 10683  013DEC  D7F7               	goto	l8403
 10684  013DEE                     l8407:
 10685                           
 10686                           ; BSR set to: 0
 10687  013DEE  0100               	movlb	0	; () banked
 10688  013DF0  90D8               	bcf	status,0,c
 10689  013DF2  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
 10690  013DF4  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 10691                           
 10692                           ; BSR set to: 0
 10693  013DF6  0100               	movlb	0	; () banked
 10694  013DF8  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10695  013DFA  0100               	movlb	0	; () banked
 10696  013DFC  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 10697  013DFE  0100               	movlb	0	; () banked
 10698  013E00  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10699  013E02  0100               	movlb	0	; () banked
 10700  013E04  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 10701  013E06  A0D8               	btfss	status,0,c
 10702  013E08  D00A               	goto	l8415
 10703                           
 10704                           ; BSR set to: 0
 10705  013E0A  0100               	movlb	0	; () banked
 10706  013E0C  5168               	movf	___lwdiv@divisor& (0+255),w,b
 10707  013E0E  0100               	movlb	0	; () banked
 10708  013E10  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 10709  013E12  0100               	movlb	0	; () banked
 10710  013E14  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 10711  013E16  0100               	movlb	0	; () banked
 10712  013E18  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 10713                           
 10714                           ; BSR set to: 0
 10715  013E1A  0100               	movlb	0	; () banked
 10716  013E1C  816B               	bsf	___lwdiv@quotient& (0+255),0,b
 10717  013E1E                     l8415:
 10718                           
 10719                           ; BSR set to: 0
 10720  013E1E  0100               	movlb	0	; () banked
 10721  013E20  90D8               	bcf	status,0,c
 10722  013E22  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 10723  013E24  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 10724                           
 10725                           ; BSR set to: 0
 10726  013E26  0100               	movlb	0	; () banked
 10727  013E28  2F6A               	decfsz	___lwdiv@counter& (0+255),f,b
 10728  013E2A  D7E1               	goto	l8407
 10729  013E2C                     l1943:
 10730                           
 10731                           ; BSR set to: 0
 10732  013E2C  C06B  F066         	movff	___lwdiv@quotient,?___lwdiv
 10733  013E30  C06C  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10734                           
 10735                           ; BSR set to: 0
 10736  013E34  0012               	return		;funcret
 10737  013E36                     __end_of___lwdiv:
 10738                           	opt stack 0
 10739                           tblptru	equ	0xFF8
 10740                           tblptrh	equ	0xFF7
 10741                           tblptrl	equ	0xFF6
 10742                           tablat	equ	0xFF5
 10743                           prodh	equ	0xFF4
 10744                           prodl	equ	0xFF3
 10745                           intcon	equ	0xFF2
 10746                           intcon2	equ	0xFF1
 10747                           indf0	equ	0xFEF
 10748                           postinc0	equ	0xFEE
 10749                           fsr0h	equ	0xFEA
 10750                           fsr0l	equ	0xFE9
 10751                           wreg	equ	0xFE8
 10752                           postinc1	equ	0xFE6
 10753                           postdec1	equ	0xFE5
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           indf2	equ	0xFDF
 10757                           postinc2	equ	0xFDE
 10758                           postdec2	equ	0xFDD
 10759                           fsr2h	equ	0xFDA
 10760                           fsr2l	equ	0xFD9
 10761                           status	equ	0xFD8
 10762                           
 10763 ;; *************** function _USB_task *****************
 10764 ;; Defined at:
 10765 ;;		line 66 in file "../My_library/My_usb_cdc.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;		None
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;  rx_len          2   20[BANK0 ] int 
 10770 ;;  data            1   22[BANK0 ] unsigned char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;		None               void
 10773 ;; Registers used:
 10774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10783 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10784 ;;Total ram usage:        3 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:   14
 10787 ;; This function calls:
 10788 ;;		_get_string_usb
 10789 ;;		_put_string_usb
 10790 ;;		_ringbuf_num
 10791 ;;		_ringbuf_pop
 10792 ;;		_ringbuf_put
 10793 ;; This function is called by:
 10794 ;;		_main
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text41
 10799  013B1C                     __ptext41:
 10800                           	opt stack 0
 10801  013B1C                     _USB_task:
 10802                           	opt stack 16
 10803                           
 10804                           ;My_usb_cdc.c: 67: char data;
 10805                           ;My_usb_cdc.c: 68: int rx_len;
 10806                           ;My_usb_cdc.c: 69: rx_len = get_string_usb(&data, 1);
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;incstack = 0
 10810  013B1C  0E76               	movlw	low USB_task@data
 10811  013B1E  0100               	movlb	0	; () banked
 10812  013B20  6F6D               	movwf	get_string_usb@s& (0+255),b
 10813  013B22  0E00               	movlw	high USB_task@data
 10814  013B24  0100               	movlb	0	; () banked
 10815  013B26  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10816  013B28  0E00               	movlw	0
 10817  013B2A  0100               	movlb	0	; () banked
 10818  013B2C  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10819  013B2E  0E01               	movlw	1
 10820  013B30  6F6F               	movwf	get_string_usb@len& (0+255),b
 10821  013B32  EC04  F0A1         	call	_get_string_usb	;wreg free
 10822  013B36  C06D  F074         	movff	?_get_string_usb,USB_task@rx_len
 10823  013B3A  C06E  F075         	movff	?_get_string_usb+1,USB_task@rx_len+1
 10824                           
 10825                           ;My_usb_cdc.c: 70: if (rx_len) {
 10826  013B3E  0100               	movlb	0	; () banked
 10827  013B40  5174               	movf	USB_task@rx_len& (0+255),w,b
 10828  013B42  0100               	movlb	0	; () banked
 10829  013B44  1175               	iorwf	(USB_task@rx_len+1)& (0+255),w,b
 10830  013B46  B4D8               	btfsc	status,2,c
 10831  013B48  D00A               	goto	l1240
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;My_usb_cdc.c: 71: ringbuf_put(&usb_rx, data);
 10835  013B4A  0E70               	movlw	low _usb_rx
 10836  013B4C  0100               	movlb	0	; () banked
 10837  013B4E  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10838  013B50  0E01               	movlw	high _usb_rx
 10839  013B52  0100               	movlb	0	; () banked
 10840  013B54  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10841  013B56  C076  F06A         	movff	USB_task@data,ringbuf_put@asciicode
 10842  013B5A  ECE6  F096         	call	_ringbuf_put	;wreg free
 10843  013B5E                     l1240:
 10844                           
 10845                           ;My_usb_cdc.c: 72: }
 10846                           ;My_usb_cdc.c: 73: if (ringbuf_num(&usb_tx)) {
 10847  013B5E  0E78               	movlw	low _usb_tx
 10848  013B60  0100               	movlb	0	; () banked
 10849  013B62  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10850  013B64  0E01               	movlw	high _usb_tx
 10851  013B66  0100               	movlb	0	; () banked
 10852  013B68  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10853  013B6A  EC6F  F093         	call	_ringbuf_num	;wreg free
 10854  013B6E  0100               	movlb	0	; () banked
 10855  013B70  5160               	movf	?_ringbuf_num& (0+255),w,b
 10856  013B72  0100               	movlb	0	; () banked
 10857  013B74  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10858  013B76  B4D8               	btfsc	status,2,c
 10859  013B78  0012               	return	
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;My_usb_cdc.c: 74: data = ringbuf_pop(&usb_tx);
 10863  013B7A  0E78               	movlw	low _usb_tx
 10864  013B7C  0100               	movlb	0	; () banked
 10865  013B7E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10866  013B80  0E01               	movlw	high _usb_tx
 10867  013B82  0100               	movlb	0	; () banked
 10868  013B84  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10869  013B86  EC20  F098         	call	_ringbuf_pop	;wreg free
 10870  013B8A  0100               	movlb	0	; () banked
 10871  013B8C  6F76               	movwf	USB_task@data& (0+255),b
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;My_usb_cdc.c: 75: put_string_usb(&data, 1);
 10875  013B8E  0E76               	movlw	low USB_task@data
 10876  013B90  0100               	movlb	0	; () banked
 10877  013B92  6F6C               	movwf	put_string_usb@s& (0+255),b
 10878  013B94  0E00               	movlw	high USB_task@data
 10879  013B96  0100               	movlb	0	; () banked
 10880  013B98  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10881  013B9A  0E00               	movlw	0
 10882  013B9C  0100               	movlb	0	; () banked
 10883  013B9E  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10884  013BA0  0E01               	movlw	1
 10885  013BA2  6F6E               	movwf	put_string_usb@len& (0+255),b
 10886  013BA4  EC5C  F0A2         	call	_put_string_usb	;wreg free
 10887  013BA8  0012               	return	
 10888  013BAA                     __end_of_USB_task:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           intcon	equ	0xFF2
 10897                           intcon2	equ	0xFF1
 10898                           indf0	equ	0xFEF
 10899                           postinc0	equ	0xFEE
 10900                           fsr0h	equ	0xFEA
 10901                           fsr0l	equ	0xFE9
 10902                           wreg	equ	0xFE8
 10903                           postinc1	equ	0xFE6
 10904                           postdec1	equ	0xFE5
 10905                           fsr1h	equ	0xFE2
 10906                           fsr1l	equ	0xFE1
 10907                           indf2	equ	0xFDF
 10908                           postinc2	equ	0xFDE
 10909                           postdec2	equ	0xFDD
 10910                           fsr2h	equ	0xFDA
 10911                           fsr2l	equ	0xFD9
 10912                           status	equ	0xFD8
 10913                           
 10914 ;; *************** function _ringbuf_put *****************
 10915 ;; Defined at:
 10916 ;;		line 20 in file "../My_library/My_ringbuf.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10919 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), terminal_task@command(8), 
 10920 ;;  asciicode       1   10[BANK0 ] unsigned char 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;		None               void
 10925 ;; Registers used:
 10926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10932 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10936 ;;Total ram usage:        7 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:   12
 10939 ;; This function calls:
 10940 ;;		_ringbuf_num
 10941 ;; This function is called by:
 10942 ;;		_ringbuf_put_num
 10943 ;;		_ringbuf_put_str
 10944 ;;		_terminal_task
 10945 ;;		_USB_task
 10946 ;;		_UART_ISR
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text42
 10951  012DCC                     __ptext42:
 10952                           	opt stack 0
 10953  012DCC                     _ringbuf_put:
 10954                           	opt stack 13
 10955                           
 10956                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 10957                           
 10958                           ;incstack = 0
 10959  012DCC  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 10960  012DD0  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 10961  012DD4  EC6F  F093         	call	_ringbuf_num	;wreg free
 10962  012DD8  0100               	movlb	0	; () banked
 10963  012DDA  EE20 F002          	lfsr	2,2
 10964  012DDE  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10965  012DE0  26D9               	addwf	fsr2l,f,c
 10966  012DE2  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10967  012DE4  22DA               	addwfc	fsr2h,f,c
 10968  012DE6  50DE               	movf	postinc2,w,c
 10969  012DE8  0100               	movlb	0	; () banked
 10970  012DEA  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 10971  012DEC  50DE               	movf	postinc2,w,c
 10972  012DEE  0100               	movlb	0	; () banked
 10973  012DF0  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 10974  012DF2  B0D8               	btfsc	status,0,c
 10975  012DF4  0012               	return	
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 10979  012DF6  0100               	movlb	0	; () banked
 10980  012DF8  EE20 F004          	lfsr	2,4
 10981  012DFC  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10982  012DFE  26D9               	addwf	fsr2l,f,c
 10983  012E00  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10984  012E02  22DA               	addwfc	fsr2h,f,c
 10985  012E04  CFDE F06B          	movff	postinc2,??_ringbuf_put
 10986  012E08  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 10987  012E0C  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 10988  012E10  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 10989  012E14  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 10990  012E18  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 10991  012E1C  0100               	movlb	0	; () banked
 10992  012E1E  516B               	movf	??_ringbuf_put& (0+255),w,b
 10993  012E20  0100               	movlb	0	; () banked
 10994  012E22  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 10995  012E24  6ED9               	movwf	fsr2l,c
 10996  012E26  0100               	movlb	0	; () banked
 10997  012E28  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 10998  012E2A  0100               	movlb	0	; () banked
 10999  012E2C  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 11000  012E2E  6EDA               	movwf	fsr2h,c
 11001  012E30  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 11005  012E34  0100               	movlb	0	; () banked
 11006  012E36  EE20 F002          	lfsr	2,2
 11007  012E3A  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11008  012E3C  26D9               	addwf	fsr2l,f,c
 11009  012E3E  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11010  012E40  22DA               	addwfc	fsr2h,f,c
 11011  012E42  0100               	movlb	0	; () banked
 11012  012E44  EE10 F004          	lfsr	1,4
 11013  012E48  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11014  012E4A  26E1               	addwf	fsr1l,f,c
 11015  012E4C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11016  012E4E  22E2               	addwfc	fsr1h,f,c
 11017  012E50  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 11018  012E54  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 11019  012E58  0E01               	movlw	1
 11020  012E5A  0100               	movlb	0	; () banked
 11021  012E5C  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 11022  012E5E  0E00               	movlw	0
 11023  012E60  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 11024  012E62  50DE               	movf	postinc2,w,c
 11025  012E64  0100               	movlb	0	; () banked
 11026  012E66  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 11027  012E68  50DE               	movf	postinc2,w,c
 11028  012E6A  0100               	movlb	0	; () banked
 11029  012E6C  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 11030  012E6E  B0D8               	btfsc	status,0,c
 11031  012E70  D00B               	goto	l8329
 11032                           
 11033                           ; BSR set to: 0
 11034  012E72  0100               	movlb	0	; () banked
 11035  012E74  EE20 F004          	lfsr	2,4
 11036  012E78  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11037  012E7A  26D9               	addwf	fsr2l,f,c
 11038  012E7C  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11039  012E7E  22DA               	addwfc	fsr2h,f,c
 11040  012E80  2ADE               	incf	postinc2,f,c
 11041  012E82  0E00               	movlw	0
 11042  012E84  22DD               	addwfc	postdec2,f,c
 11043  012E86  0012               	return	
 11044  012E88                     l8329:
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;My_ringbuf.c: 24: else rb->head = 0;
 11048  012E88  0100               	movlb	0	; () banked
 11049  012E8A  EE20 F004          	lfsr	2,4
 11050  012E8E  5168               	movf	ringbuf_put@rb& (0+255),w,b
 11051  012E90  26D9               	addwf	fsr2l,f,c
 11052  012E92  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 11053  012E94  22DA               	addwfc	fsr2h,f,c
 11054  012E96  0E00               	movlw	0
 11055  012E98  6EDE               	movwf	postinc2,c
 11056  012E9A  0E00               	movlw	0
 11057  012E9C  6EDD               	movwf	postdec2,c
 11058                           
 11059                           ; BSR set to: 0
 11060  012E9E  0012               	return	
 11061  012EA0                     __end_of_ringbuf_put:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           indf0	equ	0xFEF
 11072                           postinc0	equ	0xFEE
 11073                           fsr0h	equ	0xFEA
 11074                           fsr0l	equ	0xFE9
 11075                           wreg	equ	0xFE8
 11076                           postinc1	equ	0xFE6
 11077                           postdec1	equ	0xFE5
 11078                           fsr1h	equ	0xFE2
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           fsr2h	equ	0xFDA
 11084                           fsr2l	equ	0xFD9
 11085                           status	equ	0xFD8
 11086                           
 11087 ;; *************** function _ringbuf_pop *****************
 11088 ;; Defined at:
 11089 ;;		line 45 in file "../My_library/My_ringbuf.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 11092 ;;		 -> usb_tx(8), usb_rx(8), uart_tx(8), terminal_task@command(8), 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  ret             1   14[BANK0 ] unsigned char 
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      unsigned char 
 11097 ;; Registers used:
 11098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        7 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:   12
 11111 ;; This function calls:
 11112 ;;		_ringbuf_num
 11113 ;; This function is called by:
 11114 ;;		_terminal_task
 11115 ;;		_USB_task
 11116 ;;		_UART_ISR
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text43
 11121  013040                     __ptext43:
 11122                           	opt stack 0
 11123  013040                     _ringbuf_pop:
 11124                           	opt stack 17
 11125                           
 11126                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;incstack = 0
 11130  013040  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 11131  013044  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 11132  013048  EC6F  F093         	call	_ringbuf_num	;wreg free
 11133  01304C  0100               	movlb	0	; () banked
 11134  01304E  5160               	movf	?_ringbuf_num& (0+255),w,b
 11135  013050  0100               	movlb	0	; () banked
 11136  013052  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 11137  013054  B4D8               	btfsc	status,2,c
 11138  013056  D058               	goto	l9183
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 11142  013058  0100               	movlb	0	; () banked
 11143  01305A  EE20 F006          	lfsr	2,6
 11144  01305E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11145  013060  26D9               	addwf	fsr2l,f,c
 11146  013062  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11147  013064  22DA               	addwfc	fsr2h,f,c
 11148  013066  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 11149  01306A  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 11150  01306E  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 11151  013072  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 11152  013076  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 11153  01307A  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 11154  01307E  0100               	movlb	0	; () banked
 11155  013080  516A               	movf	??_ringbuf_pop& (0+255),w,b
 11156  013082  0100               	movlb	0	; () banked
 11157  013084  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 11158  013086  6ED9               	movwf	fsr2l,c
 11159  013088  0100               	movlb	0	; () banked
 11160  01308A  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 11161  01308C  0100               	movlb	0	; () banked
 11162  01308E  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 11163  013090  6EDA               	movwf	fsr2h,c
 11164  013092  50DF               	movf	indf2,w,c
 11165  013094  0100               	movlb	0	; () banked
 11166  013096  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 11170  013098  0100               	movlb	0	; () banked
 11171  01309A  EE20 F002          	lfsr	2,2
 11172  01309E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11173  0130A0  26D9               	addwf	fsr2l,f,c
 11174  0130A2  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11175  0130A4  22DA               	addwfc	fsr2h,f,c
 11176  0130A6  0100               	movlb	0	; () banked
 11177  0130A8  EE10 F006          	lfsr	1,6
 11178  0130AC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11179  0130AE  26E1               	addwf	fsr1l,f,c
 11180  0130B0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11181  0130B2  22E2               	addwfc	fsr1h,f,c
 11182  0130B4  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 11183  0130B8  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 11184  0130BC  0E01               	movlw	1
 11185  0130BE  0100               	movlb	0	; () banked
 11186  0130C0  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 11187  0130C2  0E00               	movlw	0
 11188  0130C4  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 11189  0130C6  50DE               	movf	postinc2,w,c
 11190  0130C8  0100               	movlb	0	; () banked
 11191  0130CA  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 11192  0130CC  50DE               	movf	postinc2,w,c
 11193  0130CE  0100               	movlb	0	; () banked
 11194  0130D0  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 11195  0130D2  B0D8               	btfsc	status,0,c
 11196  0130D4  D00B               	goto	l9175
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;My_ringbuf.c: 49: rb->tail++;
 11200  0130D6  0100               	movlb	0	; () banked
 11201  0130D8  EE20 F006          	lfsr	2,6
 11202  0130DC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11203  0130DE  26D9               	addwf	fsr2l,f,c
 11204  0130E0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11205  0130E2  22DA               	addwfc	fsr2h,f,c
 11206  0130E4  2ADE               	incf	postinc2,f,c
 11207  0130E6  0E00               	movlw	0
 11208  0130E8  22DD               	addwfc	postdec2,f,c
 11209                           
 11210                           ;My_ringbuf.c: 50: } else {
 11211  0130EA  D00B               	goto	l9177
 11212  0130EC                     l9175:
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;My_ringbuf.c: 51: rb->tail = 0;
 11216  0130EC  0100               	movlb	0	; () banked
 11217  0130EE  EE20 F006          	lfsr	2,6
 11218  0130F2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 11219  0130F4  26D9               	addwf	fsr2l,f,c
 11220  0130F6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 11221  0130F8  22DA               	addwfc	fsr2h,f,c
 11222  0130FA  0E00               	movlw	0
 11223  0130FC  6EDE               	movwf	postinc2,c
 11224  0130FE  0E00               	movlw	0
 11225  013100  6EDD               	movwf	postdec2,c
 11226  013102                     l9177:
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;My_ringbuf.c: 52: }
 11230                           ;My_ringbuf.c: 53: return ret;
 11231  013102  0100               	movlb	0	; () banked
 11232  013104  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;My_ringbuf.c: 54: } else {
 11236                           
 11237                           ; BSR set to: 0
 11238  013106  0012               	return	
 11239  013108                     l9183:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;My_ringbuf.c: 55: return 0;
 11243  013108  0E00               	movlw	0
 11244                           
 11245                           ; BSR set to: 0
 11246  01310A  0012               	return	
 11247  01310C                     __end_of_ringbuf_pop:
 11248                           	opt stack 0
 11249                           tblptru	equ	0xFF8
 11250                           tblptrh	equ	0xFF7
 11251                           tblptrl	equ	0xFF6
 11252                           tablat	equ	0xFF5
 11253                           prodh	equ	0xFF4
 11254                           prodl	equ	0xFF3
 11255                           intcon	equ	0xFF2
 11256                           intcon2	equ	0xFF1
 11257                           indf0	equ	0xFEF
 11258                           postinc0	equ	0xFEE
 11259                           fsr0h	equ	0xFEA
 11260                           fsr0l	equ	0xFE9
 11261                           wreg	equ	0xFE8
 11262                           postinc1	equ	0xFE6
 11263                           postdec1	equ	0xFE5
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function _ringbuf_num *****************
 11274 ;; Defined at:
 11275 ;;		line 12 in file "../My_library/My_ringbuf.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 11278 ;;		 -> usb_tx(8), usb_rx(8), uart_rx(8), uart_tx(8), 
 11279 ;;		 -> terminal_task@command(8), 
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  2    0[BANK0 ] unsigned int 
 11284 ;; Registers used:
 11285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;Total ram usage:        8 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:   11
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_ringbuf_put
 11302 ;;		_ringbuf_pop
 11303 ;;		_ringbuf_backspace
 11304 ;;		_terminal_task
 11305 ;;		_USB_task
 11306 ;;		_UART_ISR
 11307 ;;		_UART_task
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           	psect	text44
 11312  0126DE                     __ptext44:
 11313                           	opt stack 0
 11314  0126DE                     _ringbuf_num:
 11315                           	opt stack 13
 11316                           
 11317                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;incstack = 0
 11321  0126DE  0100               	movlb	0	; () banked
 11322  0126E0  EE20 F006          	lfsr	2,6
 11323  0126E4  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11324  0126E6  26D9               	addwf	fsr2l,f,c
 11325  0126E8  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11326  0126EA  22DA               	addwfc	fsr2h,f,c
 11327  0126EC  0100               	movlb	0	; () banked
 11328  0126EE  EE10 F004          	lfsr	1,4
 11329  0126F2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11330  0126F4  26E1               	addwf	fsr1l,f,c
 11331  0126F6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11332  0126F8  22E2               	addwfc	fsr1h,f,c
 11333  0126FA  50DE               	movf	postinc2,w,c
 11334  0126FC  5CE6               	subwf	postinc1,w,c
 11335  0126FE  50DE               	movf	postinc2,w,c
 11336  012700  58E6               	subwfb	postinc1,w,c
 11337  012702  A0D8               	btfss	status,0,c
 11338  012704  D028               	goto	l8225
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 11342  012706  0100               	movlb	0	; () banked
 11343  012708  EE20 F004          	lfsr	2,4
 11344  01270C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11345  01270E  26D9               	addwf	fsr2l,f,c
 11346  012710  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11347  012712  22DA               	addwfc	fsr2h,f,c
 11348  012714  CFDE F062          	movff	postinc2,??_ringbuf_num
 11349  012718  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11350  01271C  0100               	movlb	0	; () banked
 11351  01271E  EE20 F006          	lfsr	2,6
 11352  012722  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11353  012724  26D9               	addwf	fsr2l,f,c
 11354  012726  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11355  012728  22DA               	addwfc	fsr2h,f,c
 11356  01272A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11357  01272E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11358  012732  0100               	movlb	0	; () banked
 11359  012734  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 11360  012736  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 11361  012738  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 11362  01273A  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 11363  01273C  0100               	movlb	0	; () banked
 11364  01273E  5162               	movf	??_ringbuf_num& (0+255),w,b
 11365  012740  0100               	movlb	0	; () banked
 11366  012742  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 11367  012744  0100               	movlb	0	; () banked
 11368  012746  6F60               	movwf	?_ringbuf_num& (0+255),b
 11369  012748  0100               	movlb	0	; () banked
 11370  01274A  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11371  01274C  0100               	movlb	0	; () banked
 11372  01274E  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 11373  012750  0100               	movlb	0	; () banked
 11374  012752  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;My_ringbuf.c: 15: } else {
 11378                           
 11379                           ; BSR set to: 0
 11380  012754  0012               	return	
 11381  012756                     l8225:
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 11385  012756  0100               	movlb	0	; () banked
 11386  012758  EE20 F004          	lfsr	2,4
 11387  01275C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11388  01275E  26D9               	addwf	fsr2l,f,c
 11389  012760  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11390  012762  22DA               	addwfc	fsr2h,f,c
 11391  012764  CFDE F062          	movff	postinc2,??_ringbuf_num
 11392  012768  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 11393  01276C  0100               	movlb	0	; () banked
 11394  01276E  EE20 F002          	lfsr	2,2
 11395  012772  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11396  012774  26D9               	addwf	fsr2l,f,c
 11397  012776  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11398  012778  22DA               	addwfc	fsr2h,f,c
 11399  01277A  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 11400  01277E  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 11401  012782  0100               	movlb	0	; () banked
 11402  012784  EE20 F006          	lfsr	2,6
 11403  012788  5160               	movf	ringbuf_num@rb& (0+255),w,b
 11404  01278A  26D9               	addwf	fsr2l,f,c
 11405  01278C  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 11406  01278E  22DA               	addwfc	fsr2h,f,c
 11407  012790  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 11408  012794  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 11409  012798  0100               	movlb	0	; () banked
 11410  01279A  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 11411  01279C  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 11412  01279E  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 11413  0127A0  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 11414  0127A2  0100               	movlb	0	; () banked
 11415  0127A4  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 11416  0127A6  0100               	movlb	0	; () banked
 11417  0127A8  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 11418  0127AA  0100               	movlb	0	; () banked
 11419  0127AC  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 11420  0127AE  0100               	movlb	0	; () banked
 11421  0127B0  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 11422  0127B2  0100               	movlb	0	; () banked
 11423  0127B4  5162               	movf	??_ringbuf_num& (0+255),w,b
 11424  0127B6  0100               	movlb	0	; () banked
 11425  0127B8  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 11426  0127BA  0100               	movlb	0	; () banked
 11427  0127BC  6F60               	movwf	?_ringbuf_num& (0+255),b
 11428  0127BE  0100               	movlb	0	; () banked
 11429  0127C0  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 11430  0127C2  0100               	movlb	0	; () banked
 11431  0127C4  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 11432  0127C6  0100               	movlb	0	; () banked
 11433  0127C8  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 11434                           
 11435                           ; BSR set to: 0
 11436  0127CA  0012               	return	
 11437  0127CC                     __end_of_ringbuf_num:
 11438                           	opt stack 0
 11439                           tblptru	equ	0xFF8
 11440                           tblptrh	equ	0xFF7
 11441                           tblptrl	equ	0xFF6
 11442                           tablat	equ	0xFF5
 11443                           prodh	equ	0xFF4
 11444                           prodl	equ	0xFF3
 11445                           intcon	equ	0xFF2
 11446                           intcon2	equ	0xFF1
 11447                           indf0	equ	0xFEF
 11448                           postinc0	equ	0xFEE
 11449                           fsr0h	equ	0xFEA
 11450                           fsr0l	equ	0xFE9
 11451                           wreg	equ	0xFE8
 11452                           postinc1	equ	0xFE6
 11453                           postdec1	equ	0xFE5
 11454                           fsr1h	equ	0xFE2
 11455                           fsr1l	equ	0xFE1
 11456                           indf2	equ	0xFDF
 11457                           postinc2	equ	0xFDE
 11458                           postdec2	equ	0xFDD
 11459                           fsr2h	equ	0xFDA
 11460                           fsr2l	equ	0xFD9
 11461                           status	equ	0xFD8
 11462                           
 11463 ;; *************** function _put_string_usb *****************
 11464 ;; Defined at:
 11465 ;;		line 21 in file "../My_library/My_usb_cdc.c"
 11466 ;; Parameters:    Size  Location     Type
 11467 ;;  s               2   12[BANK0 ] PTR unsigned char 
 11468 ;;		 -> USB_task@data(1), 
 11469 ;;  len             2   14[BANK0 ] int 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  2   12[BANK0 ] int 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11484 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11485 ;;Total ram usage:        4 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:   13
 11488 ;; This function calls:
 11489 ;;		_CDCTxService
 11490 ;;		_is_usb_available
 11491 ;;		_putUSBUSART
 11492 ;; This function is called by:
 11493 ;;		_USB_task
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text45
 11498  0144B8                     __ptext45:
 11499                           	opt stack 0
 11500  0144B8                     _put_string_usb:
 11501                           	opt stack 16
 11502                           
 11503                           ;My_usb_cdc.c: 22: if (!is_usb_available()) {
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;incstack = 0
 11507  0144B8  EC2C  F0A3         	call	_is_usb_available	;wreg free
 11508  0144BC  0900               	iorlw	0
 11509  0144BE  B4D8               	btfsc	status,2,c
 11510  0144C0  0012               	return	
 11511  0144C2  D002               	goto	l9325
 11512  0144C4                     l9323:
 11513  0144C4  ECB4  F08E         	call	_CDCTxService	;wreg free
 11514  0144C8                     l9325:
 11515  0144C8  5026               	movf	_cdc_trf_state,w,c
 11516  0144CA  A4D8               	btfss	status,2,c
 11517  0144CC  D7FB               	goto	l9323
 11518                           
 11519                           ;My_usb_cdc.c: 27: putUSBUSART(s, len);
 11520  0144CE  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 11521  0144D2  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 11522  0144D6  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 11523  0144DA  ECED  F0A2         	call	_putUSBUSART	;wreg free
 11524                           
 11525                           ;My_usb_cdc.c: 28: CDCTxService();
 11526  0144DE  ECB4  F08E         	call	_CDCTxService	;wreg free
 11527  0144E2  0012               	return	
 11528  0144E4                     __end_of_put_string_usb:
 11529                           	opt stack 0
 11530                           tblptru	equ	0xFF8
 11531                           tblptrh	equ	0xFF7
 11532                           tblptrl	equ	0xFF6
 11533                           tablat	equ	0xFF5
 11534                           prodh	equ	0xFF4
 11535                           prodl	equ	0xFF3
 11536                           intcon	equ	0xFF2
 11537                           intcon2	equ	0xFF1
 11538                           indf0	equ	0xFEF
 11539                           postinc0	equ	0xFEE
 11540                           fsr0h	equ	0xFEA
 11541                           fsr0l	equ	0xFE9
 11542                           wreg	equ	0xFE8
 11543                           postinc1	equ	0xFE6
 11544                           postdec1	equ	0xFE5
 11545                           fsr1h	equ	0xFE2
 11546                           fsr1l	equ	0xFE1
 11547                           indf2	equ	0xFDF
 11548                           postinc2	equ	0xFDE
 11549                           postdec2	equ	0xFDD
 11550                           fsr2h	equ	0xFDA
 11551                           fsr2l	equ	0xFD9
 11552                           status	equ	0xFD8
 11553                           
 11554 ;; *************** function _putUSBUSART *****************
 11555 ;; Defined at:
 11556 ;;		line 613 in file "../My_library/usb/usb_device_cdc.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11559 ;;		 -> USB_task@data(1), 
 11560 ;;  length          1    2[BANK0 ] unsigned char 
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;		None               void
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11572 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11576 ;;Total ram usage:        3 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:   11
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_put_string_usb
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text46
 11587  0145DA                     __ptext46:
 11588                           	opt stack 0
 11589  0145DA                     _putUSBUSART:
 11590                           	opt stack 17
 11591                           
 11592                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 11593                           
 11594                           ;incstack = 0
 11595  0145DA  98A0               	bcf	4000,4,c	;volatile
 11596                           
 11597                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 11598  0145DC  5026               	movf	_cdc_trf_state,w,c
 11599  0145DE  A4D8               	btfss	status,2,c
 11600  0145E0  D00B               	goto	l8899
 11601                           
 11602                           ;usb_device_cdc.c: 640: {
 11603                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 11604  0145E2  C060  F0E1         	movff	putUSBUSART@data,_pCDCSrc
 11605  0145E6  C061  F0E2         	movff	putUSBUSART@data+1,_pCDCSrc+1
 11606  0145EA  C062  F0EF         	movff	putUSBUSART@length,_cdc_tx_len
 11607  0145EE  0E01               	movlw	1
 11608  0145F0  0100               	movlb	0	; () banked
 11609  0145F2  6FED               	movwf	_cdc_mem_type& (0+255),b
 11610                           
 11611                           ; BSR set to: 0
 11612  0145F4  0E01               	movlw	1
 11613  0145F6  6E26               	movwf	_cdc_trf_state,c
 11614  0145F8                     l8899:
 11615                           
 11616                           ;usb_device_cdc.c: 642: }
 11617                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 11618  0145F8  88A0               	bsf	4000,4,c	;volatile
 11619  0145FA  0012               	return		;funcret
 11620  0145FC                     __end_of_putUSBUSART:
 11621                           	opt stack 0
 11622                           tblptru	equ	0xFF8
 11623                           tblptrh	equ	0xFF7
 11624                           tblptrl	equ	0xFF6
 11625                           tablat	equ	0xFF5
 11626                           prodh	equ	0xFF4
 11627                           prodl	equ	0xFF3
 11628                           intcon	equ	0xFF2
 11629                           intcon2	equ	0xFF1
 11630                           indf0	equ	0xFEF
 11631                           postinc0	equ	0xFEE
 11632                           fsr0h	equ	0xFEA
 11633                           fsr0l	equ	0xFE9
 11634                           wreg	equ	0xFE8
 11635                           postinc1	equ	0xFE6
 11636                           postdec1	equ	0xFE5
 11637                           fsr1h	equ	0xFE2
 11638                           fsr1l	equ	0xFE1
 11639                           indf2	equ	0xFDF
 11640                           postinc2	equ	0xFDE
 11641                           postdec2	equ	0xFDD
 11642                           fsr2h	equ	0xFDA
 11643                           fsr2l	equ	0xFD9
 11644                           status	equ	0xFD8
 11645                           
 11646 ;; *************** function _get_string_usb *****************
 11647 ;; Defined at:
 11648 ;;		line 32 in file "../My_library/My_usb_cdc.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  s               2   13[BANK0 ] PTR unsigned char 
 11651 ;;		 -> USB_task@data(1), 
 11652 ;;  len             2   15[BANK0 ] int 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  rx_len          2   18[BANK0 ] int 
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  2   13[BANK0 ] int 
 11657 ;; Registers used:
 11658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11664 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;Total ram usage:        7 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:   13
 11671 ;; This function calls:
 11672 ;;		_CDCTxService
 11673 ;;		_getsUSBUSART
 11674 ;;		_is_usb_available
 11675 ;; This function is called by:
 11676 ;;		_USB_task
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           	psect	text47
 11681  014208                     __ptext47:
 11682                           	opt stack 0
 11683  014208                     _get_string_usb:
 11684                           	opt stack 16
 11685                           
 11686                           ;My_usb_cdc.c: 33: int rx_len;
 11687                           ;My_usb_cdc.c: 34: if (!is_usb_available()) {
 11688                           
 11689                           ;incstack = 0
 11690  014208  EC2C  F0A3         	call	_is_usb_available	;wreg free
 11691  01420C  0900               	iorlw	0
 11692  01420E  A4D8               	btfss	status,2,c
 11693  014210  D008               	goto	l9341
 11694                           
 11695                           ;My_usb_cdc.c: 36: return 0;
 11696  014212  0E00               	movlw	0
 11697  014214  0100               	movlb	0	; () banked
 11698  014216  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 11699  014218  0E00               	movlw	0
 11700  01421A  6F6D               	movwf	?_get_string_usb& (0+255),b
 11701                           
 11702                           ; BSR set to: 0
 11703  01421C  0012               	return	
 11704  01421E                     l9339:
 11705  01421E  ECB4  F08E         	call	_CDCTxService	;wreg free
 11706  014222                     l9341:
 11707  014222  5026               	movf	_cdc_trf_state,w,c
 11708  014224  A4D8               	btfss	status,2,c
 11709  014226  D7FB               	goto	l9339
 11710                           
 11711                           ;My_usb_cdc.c: 39: rx_len = getsUSBUSART(s, len);
 11712  014228  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 11713  01422C  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 11714  014230  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 11715  014234  ECE6  F093         	call	_getsUSBUSART	;wreg free
 11716  014238  0100               	movlb	0	; () banked
 11717  01423A  6F71               	movwf	??_get_string_usb& (0+255),b
 11718  01423C  0100               	movlb	0	; () banked
 11719  01423E  5171               	movf	??_get_string_usb& (0+255),w,b
 11720  014240  0100               	movlb	0	; () banked
 11721  014242  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 11722  014244  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 11723                           
 11724                           ;My_usb_cdc.c: 40: CDCTxService();
 11725  014246  ECB4  F08E         	call	_CDCTxService	;wreg free
 11726                           
 11727                           ;My_usb_cdc.c: 41: return rx_len;
 11728  01424A  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 11729  01424E  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 11730  014252  0012               	return	
 11731  014254                     __end_of_get_string_usb:
 11732                           	opt stack 0
 11733                           tblptru	equ	0xFF8
 11734                           tblptrh	equ	0xFF7
 11735                           tblptrl	equ	0xFF6
 11736                           tablat	equ	0xFF5
 11737                           prodh	equ	0xFF4
 11738                           prodl	equ	0xFF3
 11739                           intcon	equ	0xFF2
 11740                           intcon2	equ	0xFF1
 11741                           indf0	equ	0xFEF
 11742                           postinc0	equ	0xFEE
 11743                           fsr0h	equ	0xFEA
 11744                           fsr0l	equ	0xFE9
 11745                           wreg	equ	0xFE8
 11746                           postinc1	equ	0xFE6
 11747                           postdec1	equ	0xFE5
 11748                           fsr1h	equ	0xFE2
 11749                           fsr1l	equ	0xFE1
 11750                           indf2	equ	0xFDF
 11751                           postinc2	equ	0xFDE
 11752                           postdec2	equ	0xFDD
 11753                           fsr2h	equ	0xFDA
 11754                           fsr2l	equ	0xFD9
 11755                           status	equ	0xFD8
 11756                           
 11757 ;; *************** function _is_usb_available *****************
 11758 ;; Defined at:
 11759 ;;		line 17 in file "../My_library/My_usb_cdc.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      unsigned char 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11777 ;;Total ram usage:        1 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:   11
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_put_string_usb
 11784 ;;		_get_string_usb
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           	psect	text48
 11789  014658                     __ptext48:
 11790                           	opt stack 0
 11791  014658                     _is_usb_available:
 11792                           	opt stack 17
 11793                           
 11794                           ;My_usb_cdc.c: 18: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 11795                           
 11796                           ;incstack = 0
 11797  014658  0E00               	movlw	0
 11798  01465A  0100               	movlb	0	; () banked
 11799  01465C  6F60               	movwf	_is_usb_available$4884& (0+255),b
 11800                           
 11801                           ; BSR set to: 0
 11802  01465E  0E1F               	movlw	31
 11803  014660  6422               	cpfsgt	_USBDeviceState,c	;volatile
 11804  014662  D005               	goto	l1208
 11805                           
 11806                           ; BSR set to: 0
 11807  014664  B265               	btfsc	3941,1,c	;volatile
 11808  014666  D003               	goto	l1208
 11809                           
 11810                           ; BSR set to: 0
 11811  014668  0E01               	movlw	1
 11812  01466A  0100               	movlb	0	; () banked
 11813  01466C  6F60               	movwf	_is_usb_available$4884& (0+255),b
 11814  01466E                     l1208:
 11815                           
 11816                           ; BSR set to: 0
 11817  01466E  0100               	movlb	0	; () banked
 11818  014670  5160               	movf	_is_usb_available$4884& (0+255),w,b
 11819  014672  0012               	return	
 11820  014674                     __end_of_is_usb_available:
 11821                           	opt stack 0
 11822                           tblptru	equ	0xFF8
 11823                           tblptrh	equ	0xFF7
 11824                           tblptrl	equ	0xFF6
 11825                           tablat	equ	0xFF5
 11826                           prodh	equ	0xFF4
 11827                           prodl	equ	0xFF3
 11828                           intcon	equ	0xFF2
 11829                           intcon2	equ	0xFF1
 11830                           indf0	equ	0xFEF
 11831                           postinc0	equ	0xFEE
 11832                           fsr0h	equ	0xFEA
 11833                           fsr0l	equ	0xFE9
 11834                           wreg	equ	0xFE8
 11835                           postinc1	equ	0xFE6
 11836                           postdec1	equ	0xFE5
 11837                           fsr1h	equ	0xFE2
 11838                           fsr1l	equ	0xFE1
 11839                           indf2	equ	0xFDF
 11840                           postinc2	equ	0xFDE
 11841                           postdec2	equ	0xFDD
 11842                           fsr2h	equ	0xFDA
 11843                           fsr2l	equ	0xFD9
 11844                           status	equ	0xFD8
 11845                           
 11846 ;; *************** function _getsUSBUSART *****************
 11847 ;; Defined at:
 11848 ;;		line 542 in file "../My_library/usb/usb_device_cdc.c"
 11849 ;; Parameters:    Size  Location     Type
 11850 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 11851 ;;		 -> USB_task@data(1), 
 11852 ;;  len             1    9[BANK0 ] unsigned char 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;		None
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  1    wreg      unsigned char 
 11857 ;; Registers used:
 11858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11864 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11867 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11868 ;;Total ram usage:        6 bytes
 11869 ;; Hardware stack levels used:    1
 11870 ;; Hardware stack levels required when called:   12
 11871 ;; This function calls:
 11872 ;;		_USBTransferOnePacket
 11873 ;; This function is called by:
 11874 ;;		_get_string_usb
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text49
 11879  0127CC                     __ptext49:
 11880                           	opt stack 0
 11881  0127CC                     _getsUSBUSART:
 11882                           	opt stack 16
 11883                           
 11884                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;incstack = 0
 11888  0127CC  0E00               	movlw	0
 11889  0127CE  0100               	movlb	0	; () banked
 11890  0127D0  6FEE               	movwf	_cdc_rx_len& (0+255),b
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 11894  0127D2  0100               	movlb	0	; () banked
 11895  0127D4  51E6               	movf	_CDCDataOutHandle& (0+255),w,b
 11896  0127D6  0100               	movlb	0	; () banked
 11897  0127D8  11E7               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 11898  0127DA  B4D8               	btfsc	status,2,c
 11899  0127DC  D013               	goto	l8865
 11900                           
 11901                           ; BSR set to: 0
 11902  0127DE  C0E6  FFD9         	movff	_CDCDataOutHandle,fsr2l
 11903  0127E2  C0E7  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 11904  0127E6  0100               	movlb	0	; () banked
 11905  0127E8  AEDF               	btfss	indf2,7,c
 11906  0127EA  D004               	goto	u9050
 11907  0127EC  0100               	movlb	0	; () banked
 11908  0127EE  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11909  0127F0  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 11910  0127F2  D002               	goto	u9058
 11911  0127F4                     u9050:
 11912  0127F4  0100               	movlb	0	; () banked
 11913  0127F6  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11914  0127F8                     u9058:
 11915  0127F8  0100               	movlb	0	; () banked
 11916  0127FA  516A               	movf	??_getsUSBUSART& (0+255),w,b
 11917  0127FC  0100               	movlb	0	; () banked
 11918  0127FE  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 11919  012800  6B6C               	clrf	(_getsUSBUSART$1957+1)& (0+255),b
 11920  012802  D005               	goto	l8867
 11921  012804                     l8865:
 11922                           
 11923                           ; BSR set to: 0
 11924  012804  0E00               	movlw	0
 11925  012806  0100               	movlb	0	; () banked
 11926  012808  6F6C               	movwf	(_getsUSBUSART$1957+1)& (0+255),b
 11927  01280A  0E00               	movlw	0
 11928  01280C  6F6B               	movwf	_getsUSBUSART$1957& (0+255),b
 11929  01280E                     l8867:
 11930                           
 11931                           ; BSR set to: 0
 11932  01280E  0100               	movlb	0	; () banked
 11933  012810  516B               	movf	_getsUSBUSART$1957& (0+255),w,b
 11934  012812  0100               	movlb	0	; () banked
 11935  012814  116C               	iorwf	(_getsUSBUSART$1957+1)& (0+255),w,b
 11936  012816  A4D8               	btfss	status,2,c
 11937  012818  D04B               	goto	l8883
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;usb_device_cdc.c: 547: {
 11941                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 11942  01281A  0100               	movlb	0	; () banked
 11943  01281C  EE20 F001          	lfsr	2,1
 11944  012820  51E6               	movf	_CDCDataOutHandle& (0+255),w,b
 11945  012822  26D9               	addwf	fsr2l,f,c
 11946  012824  51E7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11947  012826  22DA               	addwfc	fsr2h,f,c
 11948  012828  0100               	movlb	0	; () banked
 11949  01282A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 11950  01282C  5CDE               	subwf	postinc2,w,c
 11951  01282E  B0D8               	btfsc	status,0,c
 11952  012830  D00A               	goto	l8873
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 11956  012832  0100               	movlb	0	; () banked
 11957  012834  EE20 F001          	lfsr	2,1
 11958  012838  51E6               	movf	_CDCDataOutHandle& (0+255),w,b
 11959  01283A  26D9               	addwf	fsr2l,f,c
 11960  01283C  51E7               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11961  01283E  22DA               	addwfc	fsr2h,f,c
 11962  012840  50DF               	movf	indf2,w,c
 11963  012842  0100               	movlb	0	; () banked
 11964  012844  6F69               	movwf	getsUSBUSART@len& (0+255),b
 11965  012846                     l8873:
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 11969  012846  0E00               	movlw	0
 11970  012848  0100               	movlb	0	; () banked
 11971  01284A  6FEE               	movwf	_cdc_rx_len& (0+255),b
 11972  01284C  D018               	goto	l8879
 11973  01284E                     l8875:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 11977  01284E  0100               	movlb	0	; () banked
 11978  012850  51EE               	movf	_cdc_rx_len& (0+255),w,b
 11979  012852  0D01               	mullw	1
 11980  012854  0E00               	movlw	low _cdc_data_rx
 11981  012856  24F3               	addwf	prodl,w,c
 11982  012858  6ED9               	movwf	fsr2l,c
 11983  01285A  0E02               	movlw	high _cdc_data_rx
 11984  01285C  20F4               	addwfc	prodh,w,c
 11985  01285E  6EDA               	movwf	fsr2h,c
 11986  012860  0100               	movlb	0	; () banked
 11987  012862  51EE               	movf	_cdc_rx_len& (0+255),w,b
 11988  012864  0D01               	mullw	1
 11989  012866  50F3               	movf	prodl,w,c
 11990  012868  0100               	movlb	0	; () banked
 11991  01286A  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 11992  01286C  6EE1               	movwf	fsr1l,c
 11993  01286E  50F4               	movf	prodh,w,c
 11994  012870  0100               	movlb	0	; () banked
 11995  012872  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 11996  012874  6EE2               	movwf	fsr1h,c
 11997  012876  CFDF FFE7          	movff	indf2,indf1
 11998                           
 11999                           ; BSR set to: 0
 12000  01287A  0100               	movlb	0	; () banked
 12001  01287C  2BEE               	incf	_cdc_rx_len& (0+255),f,b
 12002  01287E                     l8879:
 12003                           
 12004                           ; BSR set to: 0
 12005  01287E  0100               	movlb	0	; () banked
 12006  012880  5169               	movf	getsUSBUSART@len& (0+255),w,b
 12007  012882  0100               	movlb	0	; () banked
 12008  012884  5DEE               	subwf	_cdc_rx_len& (0+255),w,b
 12009  012886  A0D8               	btfss	status,0,c
 12010  012888  D7E2               	goto	l8875
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 12014                           
 12015                           ; BSR set to: 0
 12016  01288A  0E00               	movlw	0
 12017  01288C  0100               	movlb	0	; () banked
 12018  01288E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12019  012890  0E00               	movlw	low _cdc_data_rx
 12020  012892  0100               	movlb	0	; () banked
 12021  012894  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12022  012896  0E02               	movlw	high _cdc_data_rx
 12023  012898  0100               	movlb	0	; () banked
 12024  01289A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12025  01289C  0E40               	movlw	64
 12026  01289E  0100               	movlb	0	; () banked
 12027  0128A0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12028  0128A2  0E02               	movlw	2
 12029  0128A4  ECA5  F095         	call	_USBTransferOnePacket
 12030  0128A8  C060  F0E6         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 12031  0128AC  C061  F0E7         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 12032  0128B0                     l8883:
 12033                           
 12034                           ;usb_device_cdc.c: 567: }
 12035                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 12036  0128B0  0100               	movlb	0	; () banked
 12037  0128B2  51EE               	movf	_cdc_rx_len& (0+255),w,b
 12038  0128B4  0012               	return	
 12039  0128B6                     __end_of_getsUSBUSART:
 12040                           	opt stack 0
 12041                           tblptru	equ	0xFF8
 12042                           tblptrh	equ	0xFF7
 12043                           tblptrl	equ	0xFF6
 12044                           tablat	equ	0xFF5
 12045                           prodh	equ	0xFF4
 12046                           prodl	equ	0xFF3
 12047                           intcon	equ	0xFF2
 12048                           intcon2	equ	0xFF1
 12049                           indf0	equ	0xFEF
 12050                           postinc0	equ	0xFEE
 12051                           fsr0h	equ	0xFEA
 12052                           fsr0l	equ	0xFE9
 12053                           wreg	equ	0xFE8
 12054                           indf1	equ	0xFE7
 12055                           postinc1	equ	0xFE6
 12056                           postdec1	equ	0xFE5
 12057                           fsr1h	equ	0xFE2
 12058                           fsr1l	equ	0xFE1
 12059                           indf2	equ	0xFDF
 12060                           postinc2	equ	0xFDE
 12061                           postdec2	equ	0xFDD
 12062                           fsr2h	equ	0xFDA
 12063                           fsr2l	equ	0xFD9
 12064                           status	equ	0xFD8
 12065                           
 12066 ;; *************** function _CDCTxService *****************
 12067 ;; Defined at:
 12068 ;;		line 893 in file "../My_library/usb/usb_device_cdc.c"
 12069 ;; Parameters:    Size  Location     Type
 12070 ;;		None
 12071 ;; Auto vars:     Size  Location     Type
 12072 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 12073 ;;  i               1   10[BANK0 ] unsigned char 
 12074 ;; Return value:  Size  Location     Type
 12075 ;;		None               void
 12076 ;; Registers used:
 12077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12078 ;; Tracked objects:
 12079 ;;		On entry : 0/0
 12080 ;;		On exit  : 0/0
 12081 ;;		Unchanged: 0/0
 12082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12085 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12086 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12087 ;;Total ram usage:        5 bytes
 12088 ;; Hardware stack levels used:    1
 12089 ;; Hardware stack levels required when called:   12
 12090 ;; This function calls:
 12091 ;;		_USBTransferOnePacket
 12092 ;; This function is called by:
 12093 ;;		_put_string_usb
 12094 ;;		_get_string_usb
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           	psect	text50
 12099  011D68                     __ptext50:
 12100                           	opt stack 0
 12101  011D68                     _CDCTxService:
 12102                           	opt stack 16
 12103                           
 12104                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 12105                           ;usb_device_cdc.c: 896: uint8_t i;
 12106                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;incstack = 0
 12110  011D68  98A0               	bcf	4000,4,c	;volatile
 12111                           
 12112                           ;usb_device_cdc.c: 900: {};
 12113                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 12114  011D6A  0100               	movlb	0	; () banked
 12115  011D6C  51E4               	movf	_CDCDataInHandle& (0+255),w,b
 12116  011D6E  0100               	movlb	0	; () banked
 12117  011D70  11E5               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 12118  011D72  B4D8               	btfsc	status,2,c
 12119  011D74  D013               	goto	l8907
 12120                           
 12121                           ; BSR set to: 0
 12122  011D76  C0E4  FFD9         	movff	_CDCDataInHandle,fsr2l
 12123  011D7A  C0E5  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 12124  011D7E  0100               	movlb	0	; () banked
 12125  011D80  AEDF               	btfss	indf2,7,c
 12126  011D82  D004               	goto	u9110
 12127  011D84  0100               	movlb	0	; () banked
 12128  011D86  6B67               	clrf	??_CDCTxService& (0+255),b
 12129  011D88  2B67               	incf	??_CDCTxService& (0+255),f,b
 12130  011D8A  D002               	goto	u9118
 12131  011D8C                     u9110:
 12132  011D8C  0100               	movlb	0	; () banked
 12133  011D8E  6B67               	clrf	??_CDCTxService& (0+255),b
 12134  011D90                     u9118:
 12135  011D90  0100               	movlb	0	; () banked
 12136  011D92  5167               	movf	??_CDCTxService& (0+255),w,b
 12137  011D94  0100               	movlb	0	; () banked
 12138  011D96  6F68               	movwf	_CDCTxService$2005& (0+255),b
 12139  011D98  6B69               	clrf	(_CDCTxService$2005+1)& (0+255),b
 12140  011D9A  D005               	goto	l8909
 12141  011D9C                     l8907:
 12142                           
 12143                           ; BSR set to: 0
 12144  011D9C  0E00               	movlw	0
 12145  011D9E  0100               	movlb	0	; () banked
 12146  011DA0  6F69               	movwf	(_CDCTxService$2005+1)& (0+255),b
 12147  011DA2  0E00               	movlw	0
 12148  011DA4  6F68               	movwf	_CDCTxService$2005& (0+255),b
 12149  011DA6                     l8909:
 12150                           
 12151                           ; BSR set to: 0
 12152  011DA6  0100               	movlb	0	; () banked
 12153  011DA8  5168               	movf	_CDCTxService$2005& (0+255),w,b
 12154  011DAA  0100               	movlb	0	; () banked
 12155  011DAC  1169               	iorwf	(_CDCTxService$2005+1)& (0+255),w,b
 12156  011DAE  B4D8               	btfsc	status,2,c
 12157  011DB0  D002               	goto	l8913
 12158                           
 12159                           ; BSR set to: 0
 12160                           ;usb_device_cdc.c: 903: {
 12161                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 12162  011DB2  88A0               	bsf	4000,4,c	;volatile
 12163                           
 12164                           ;usb_device_cdc.c: 905: return;
 12165  011DB4  0012               	return	
 12166  011DB6                     l8913:
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;usb_device_cdc.c: 906: }
 12170                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 12171  011DB6  0E03               	movlw	3
 12172  011DB8  1826               	xorwf	_cdc_trf_state,w,c
 12173  011DBA  A4D8               	btfss	status,2,c
 12174  011DBC  D002               	goto	l504
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 12178  011DBE  0E00               	movlw	0
 12179  011DC0  6E26               	movwf	_cdc_trf_state,c
 12180  011DC2                     l504:
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 12184  011DC2  5026               	movf	_cdc_trf_state,w,c
 12185  011DC4  A4D8               	btfss	status,2,c
 12186  011DC6  D002               	goto	l8919
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;usb_device_cdc.c: 920: {
 12190                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 12191  011DC8  88A0               	bsf	4000,4,c	;volatile
 12192                           
 12193                           ;usb_device_cdc.c: 922: return;
 12194  011DCA  0012               	return	
 12195  011DCC                     l8919:
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;usb_device_cdc.c: 923: }
 12199                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 12200  011DCC  0E02               	movlw	2
 12201  011DCE  1826               	xorwf	_cdc_trf_state,w,c
 12202  011DD0  A4D8               	btfss	status,2,c
 12203  011DD2  D016               	goto	l8925
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;usb_device_cdc.c: 929: {
 12207                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 12208  011DD4  0E01               	movlw	1
 12209  011DD6  0100               	movlb	0	; () banked
 12210  011DD8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12211  011DDA  0E00               	movlw	0
 12212  011DDC  0100               	movlb	0	; () banked
 12213  011DDE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12214  011DE0  0E00               	movlw	0
 12215  011DE2  0100               	movlb	0	; () banked
 12216  011DE4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12217  011DE6  0E00               	movlw	0
 12218  011DE8  0100               	movlb	0	; () banked
 12219  011DEA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 12220  011DEC  0E02               	movlw	2
 12221  011DEE  ECA5  F095         	call	_USBTransferOnePacket
 12222  011DF2  C060  F0E4         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12223  011DF6  C061  F0E5         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12224                           
 12225                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 12226  011DFA  0E03               	movlw	3
 12227  011DFC  6E26               	movwf	_cdc_trf_state,c
 12228                           
 12229                           ;usb_device_cdc.c: 933: }
 12230  011DFE  D06F               	goto	l8969
 12231  011E00                     l8925:
 12232                           
 12233                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 12234  011E00  0426               	decf	_cdc_trf_state,w,c
 12235  011E02  A4D8               	btfss	status,2,c
 12236  011E04  D06C               	goto	l8969
 12237                           
 12238                           ;usb_device_cdc.c: 935: {
 12239                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 12240  011E06  0E40               	movlw	64
 12241  011E08  0100               	movlb	0	; () banked
 12242  011E0A  65EF               	cpfsgt	_cdc_tx_len& (0+255),b
 12243  011E0C  D004               	goto	l509
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 12247  011E0E  0E40               	movlw	64
 12248  011E10  0100               	movlb	0	; () banked
 12249  011E12  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 12250  011E14  D002               	goto	l8931
 12251  011E16                     l509:
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;usb_device_cdc.c: 941: else
 12255                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 12256  011E16  C0EF  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 12257  011E1A                     l8931:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 12261  011E1A  0100               	movlb	0	; () banked
 12262  011E1C  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 12263  011E1E  0800               	sublw	0
 12264  011E20  0100               	movlb	0	; () banked
 12265  011E22  25EF               	addwf	_cdc_tx_len& (0+255),w,b
 12266  011E24  0100               	movlb	0	; () banked
 12267  011E26  6FEF               	movwf	_cdc_tx_len& (0+255),b
 12268                           
 12269                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 12270  011E28  0E40               	movlw	low _cdc_data_tx
 12271  011E2A  0100               	movlb	0	; () banked
 12272  011E2C  6FDE               	movwf	_pCDCDst& (0+255),b
 12273  011E2E  0E02               	movlw	high _cdc_data_tx
 12274  011E30  0100               	movlb	0	; () banked
 12275  011E32  6FDF               	movwf	(_pCDCDst+1)& (0+255),b
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;usb_device_cdc.c: 951: i = byte_to_send;
 12279  011E34  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 12283  011E38  0100               	movlb	0	; () banked
 12284  011E3A  51ED               	movf	_cdc_mem_type& (0+255),w,b
 12285  011E3C  B4D8               	btfsc	status,2,c
 12286  011E3E  D013               	goto	l8947
 12287  011E40  D02A               	goto	l8957
 12288  011E42                     l8939:
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;usb_device_cdc.c: 955: {
 12292                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 12293  011E42  C0E1  FFD9         	movff	_pCDCSrc,fsr2l
 12294  011E46  C0E2  FFDA         	movff	_pCDCSrc+1,fsr2h
 12295  011E4A  C0DE  FFE1         	movff	_pCDCDst,fsr1l
 12296  011E4E  C0DF  FFE2         	movff	_pCDCDst+1,fsr1h
 12297  011E52  CFDF FFE7          	movff	indf2,indf1
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 12301  011E56  0100               	movlb	0	; () banked
 12302  011E58  4BDE               	infsnz	_pCDCDst& (0+255),f,b
 12303  011E5A  2BDF               	incf	(_pCDCDst+1)& (0+255),f,b
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 12307  011E5C  0100               	movlb	0	; () banked
 12308  011E5E  4BE1               	infsnz	_pCDCSrc& (0+255),f,b
 12309  011E60  2BE2               	incf	(_pCDCSrc+1)& (0+255),f,b
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;usb_device_cdc.c: 959: i--;
 12313  011E62  0100               	movlb	0	; () banked
 12314  011E64  076A               	decf	CDCTxService@i& (0+255),f,b
 12315  011E66                     l8947:
 12316                           
 12317                           ; BSR set to: 0
 12318  011E66  0100               	movlb	0	; () banked
 12319  011E68  516A               	movf	CDCTxService@i& (0+255),w,b
 12320  011E6A  0100               	movlb	0	; () banked
 12321  011E6C  B4D8               	btfsc	status,2,c
 12322  011E6E  D018               	goto	l8959
 12323  011E70  D7E8               	goto	l8939
 12324  011E72                     l8949:
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;usb_device_cdc.c: 965: {
 12328                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 12329  011E72  C0E1  FFD9         	movff	_pCDCSrc,fsr2l
 12330  011E76  C0E2  FFDA         	movff	_pCDCSrc+1,fsr2h
 12331  011E7A  C0DE  FFE1         	movff	_pCDCDst,fsr1l
 12332  011E7E  C0DF  FFE2         	movff	_pCDCDst+1,fsr1h
 12333  011E82  CFDF FFE7          	movff	indf2,indf1
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 12337  011E86  0100               	movlb	0	; () banked
 12338  011E88  4BDE               	infsnz	_pCDCDst& (0+255),f,b
 12339  011E8A  2BDF               	incf	(_pCDCDst+1)& (0+255),f,b
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 12343  011E8C  0100               	movlb	0	; () banked
 12344  011E8E  4BE1               	infsnz	_pCDCSrc& (0+255),f,b
 12345  011E90  2BE2               	incf	(_pCDCSrc+1)& (0+255),f,b
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;usb_device_cdc.c: 969: i--;
 12349  011E92  0100               	movlb	0	; () banked
 12350  011E94  076A               	decf	CDCTxService@i& (0+255),f,b
 12351  011E96                     l8957:
 12352                           
 12353                           ; BSR set to: 0
 12354  011E96  0100               	movlb	0	; () banked
 12355  011E98  516A               	movf	CDCTxService@i& (0+255),w,b
 12356  011E9A  0100               	movlb	0	; () banked
 12357  011E9C  A4D8               	btfss	status,2,c
 12358  011E9E  D7E9               	goto	l8949
 12359  011EA0                     l8959:
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;usb_device_cdc.c: 970: }
 12363                           ;usb_device_cdc.c: 971: }
 12364                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 12365  011EA0  0100               	movlb	0	; () banked
 12366  011EA2  51EF               	movf	_cdc_tx_len& (0+255),w,b
 12367  011EA4  A4D8               	btfss	status,2,c
 12368  011EA6  D009               	goto	l8967
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;usb_device_cdc.c: 978: {
 12372                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 12373  011EA8  0E40               	movlw	64
 12374  011EAA  0100               	movlb	0	; () banked
 12375  011EAC  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12376  011EAE  A4D8               	btfss	status,2,c
 12377  011EB0  D002               	goto	l8965
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 12381  011EB2  0E02               	movlw	2
 12382  011EB4  D001               	goto	L2
 12383  011EB6                     l8965:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;usb_device_cdc.c: 981: else
 12387                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 12388  011EB6  0E03               	movlw	3
 12389  011EB8                     L2:
 12390  011EB8  6E26               	movwf	_cdc_trf_state,c
 12391  011EBA                     l8967:
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;usb_device_cdc.c: 983: }
 12395                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12396  011EBA  0E01               	movlw	1
 12397  011EBC  0100               	movlb	0	; () banked
 12398  011EBE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12399  011EC0  0E40               	movlw	low _cdc_data_tx
 12400  011EC2  0100               	movlb	0	; () banked
 12401  011EC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12402  011EC6  0E02               	movlw	high _cdc_data_tx
 12403  011EC8  0100               	movlb	0	; () banked
 12404  011ECA  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12405  011ECC  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12406  011ED0  0E02               	movlw	2
 12407  011ED2  ECA5  F095         	call	_USBTransferOnePacket
 12408  011ED6  C060  F0E4         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12409  011EDA  C061  F0E5         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12410  011EDE                     l8969:
 12411                           
 12412                           ;usb_device_cdc.c: 986: }
 12413                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 12414  011EDE  88A0               	bsf	4000,4,c	;volatile
 12415  011EE0  0012               	return		;funcret
 12416  011EE2                     __end_of_CDCTxService:
 12417                           	opt stack 0
 12418                           tblptru	equ	0xFF8
 12419                           tblptrh	equ	0xFF7
 12420                           tblptrl	equ	0xFF6
 12421                           tablat	equ	0xFF5
 12422                           prodh	equ	0xFF4
 12423                           prodl	equ	0xFF3
 12424                           intcon	equ	0xFF2
 12425                           intcon2	equ	0xFF1
 12426                           indf0	equ	0xFEF
 12427                           postinc0	equ	0xFEE
 12428                           fsr0h	equ	0xFEA
 12429                           fsr0l	equ	0xFE9
 12430                           wreg	equ	0xFE8
 12431                           indf1	equ	0xFE7
 12432                           postinc1	equ	0xFE6
 12433                           postdec1	equ	0xFE5
 12434                           fsr1h	equ	0xFE2
 12435                           fsr1l	equ	0xFE1
 12436                           indf2	equ	0xFDF
 12437                           postinc2	equ	0xFDE
 12438                           postdec2	equ	0xFDD
 12439                           fsr2h	equ	0xFDA
 12440                           fsr2l	equ	0xFD9
 12441                           status	equ	0xFD8
 12442                           
 12443 ;; *************** function _USBTransferOnePacket *****************
 12444 ;; Defined at:
 12445 ;;		line 995 in file "../My_library/usb/usb_device.c"
 12446 ;; Parameters:    Size  Location     Type
 12447 ;;  ep              1    wreg     unsigned char 
 12448 ;;  dir             1    0[BANK0 ] unsigned char 
 12449 ;;  data            2    1[BANK0 ] PTR unsigned char 
 12450 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 12451 ;;  len             1    3[BANK0 ] unsigned char 
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;  ep              1    4[BANK0 ] unsigned char 
 12454 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12455 ;;		 -> NULL(0), BDT(48), 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  2    0[BANK0 ] PTR void 
 12458 ;; Registers used:
 12459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12466 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12468 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12469 ;;Total ram usage:        7 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:   11
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_getsUSBUSART
 12476 ;;		_CDCTxService
 12477 ;;		_USBCDCEventHandler
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text51
 12482  012B4A                     __ptext51:
 12483                           	opt stack 0
 12484  012B4A                     _USBTransferOnePacket:
 12485                           	opt stack 16
 12486                           
 12487                           ;incstack = 0
 12488                           ;USBTransferOnePacket@ep stored from wreg
 12489  012B4A  0100               	movlb	0	; () banked
 12490  012B4C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 12491                           
 12492                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12493                           ;usb_device.c: 1000: if(dir != 0)
 12494  012B4E  0100               	movlb	0	; () banked
 12495  012B50  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12496  012B52  0100               	movlb	0	; () banked
 12497  012B54  B4D8               	btfsc	status,2,c
 12498  012B56  D008               	goto	l8697
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;usb_device.c: 1001: {
 12502                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12503  012B58  0100               	movlb	0	; () banked
 12504  012B5A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12505  012B5C  0D02               	mullw	2
 12506  012B5E  0E10               	movlw	low _pBDTEntryIn
 12507  012B60  24F3               	addwf	prodl,w,c
 12508  012B62  6ED9               	movwf	fsr2l,c
 12509  012B64  0E00               	movlw	high _pBDTEntryIn
 12510  012B66  D007               	goto	L3
 12511  012B68                     l8697:
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;usb_device.c: 1005: else
 12515                           ;usb_device.c: 1006: {
 12516                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12517  012B68  0100               	movlb	0	; () banked
 12518  012B6A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12519  012B6C  0D02               	mullw	2
 12520  012B6E  0ED5               	movlw	low _pBDTEntryOut
 12521  012B70  24F3               	addwf	prodl,w,c
 12522  012B72  6ED9               	movwf	fsr2l,c
 12523  012B74  0E00               	movlw	high _pBDTEntryOut
 12524  012B76                     L3:
 12525  012B76  20F4               	addwfc	prodh,w,c
 12526  012B78  6EDA               	movwf	fsr2h,c
 12527  012B7A  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 12528  012B7E  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;usb_device.c: 1009: }
 12532                           ;usb_device.c: 1013: if(handle == 0)
 12533                           
 12534                           ; BSR set to: 0
 12535  012B82  0100               	movlb	0	; () banked
 12536  012B84  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12537  012B86  0100               	movlb	0	; () banked
 12538  012B88  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12539  012B8A  A4D8               	btfss	status,2,c
 12540  012B8C  D007               	goto	l8705
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;usb_device.c: 1014: {
 12544                           ;usb_device.c: 1015: return 0;
 12545  012B8E  0E00               	movlw	0
 12546  012B90  0100               	movlb	0	; () banked
 12547  012B92  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 12548  012B94  0E00               	movlw	0
 12549  012B96  0100               	movlb	0	; () banked
 12550  012B98  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12551                           
 12552                           ; BSR set to: 0
 12553  012B9A  0012               	return	
 12554  012B9C                     l8705:
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;usb_device.c: 1016: }
 12558                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12559  012B9C  0100               	movlb	0	; () banked
 12560  012B9E  EE20 F002          	lfsr	2,2
 12561  012BA2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12562  012BA4  26D9               	addwf	fsr2l,f,c
 12563  012BA6  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12564  012BA8  22DA               	addwfc	fsr2h,f,c
 12565  012BAA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12566  012BAE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12567                           
 12568                           ;usb_device.c: 1030: handle->CNT = len;
 12569  012BB2  0100               	movlb	0	; () banked
 12570  012BB4  EE20 F001          	lfsr	2,1
 12571  012BB8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12572  012BBA  26D9               	addwf	fsr2l,f,c
 12573  012BBC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12574  012BBE  22DA               	addwfc	fsr2h,f,c
 12575  012BC0  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12579  012BC4  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12580  012BC8  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12581  012BCC  0E40               	movlw	64
 12582  012BCE  16DF               	andwf	indf2,f,c
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12586  012BD0  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12587  012BD4  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12588  012BD8  0E00               	movlw	0
 12589  012BDA  86DB               	bsf	plusw2,3,c
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12593  012BDC  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12594  012BE0  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12595  012BE4  0E00               	movlw	0
 12596  012BE6  8EDB               	bsf	plusw2,7,c
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;usb_device.c: 1036: if(dir != 0)
 12600  012BE8  0100               	movlb	0	; () banked
 12601  012BEA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12602  012BEC  0100               	movlb	0	; () banked
 12603  012BEE  B4D8               	btfsc	status,2,c
 12604  012BF0  D008               	goto	l8717
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;usb_device.c: 1037: {
 12608                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12609  012BF2  0100               	movlb	0	; () banked
 12610  012BF4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12611  012BF6  0D02               	mullw	2
 12612  012BF8  0E10               	movlw	low _pBDTEntryIn
 12613  012BFA  24F3               	addwf	prodl,w,c
 12614  012BFC  6ED9               	movwf	fsr2l,c
 12615  012BFE  0E00               	movlw	high _pBDTEntryIn
 12616  012C00  D007               	goto	L4
 12617  012C02                     l8717:
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;usb_device.c: 1041: else
 12621                           ;usb_device.c: 1042: {
 12622                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12623  012C02  0100               	movlb	0	; () banked
 12624  012C04  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12625  012C06  0D02               	mullw	2
 12626  012C08  0ED5               	movlw	low _pBDTEntryOut
 12627  012C0A  24F3               	addwf	prodl,w,c
 12628  012C0C  6ED9               	movwf	fsr2l,c
 12629  012C0E  0E00               	movlw	high _pBDTEntryOut
 12630  012C10                     L4:
 12631  012C10  20F4               	addwfc	prodh,w,c
 12632  012C12  6EDA               	movwf	fsr2h,c
 12633  012C14  0E04               	movlw	4
 12634  012C16  1ADF               	xorwf	indf2,f,c
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;usb_device.c: 1045: }
 12638                           ;usb_device.c: 1046: return (void*)handle;
 12639                           
 12640                           ; BSR set to: 0
 12641  012C18  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12642  012C1C  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12643  012C20  0012               	return	
 12644  012C22                     __end_of_USBTransferOnePacket:
 12645                           	opt stack 0
 12646                           tblptru	equ	0xFF8
 12647                           tblptrh	equ	0xFF7
 12648                           tblptrl	equ	0xFF6
 12649                           tablat	equ	0xFF5
 12650                           prodh	equ	0xFF4
 12651                           prodl	equ	0xFF3
 12652                           intcon	equ	0xFF2
 12653                           intcon2	equ	0xFF1
 12654                           indf0	equ	0xFEF
 12655                           postinc0	equ	0xFEE
 12656                           fsr0h	equ	0xFEA
 12657                           fsr0l	equ	0xFE9
 12658                           wreg	equ	0xFE8
 12659                           indf1	equ	0xFE7
 12660                           postinc1	equ	0xFE6
 12661                           postdec1	equ	0xFE5
 12662                           fsr1h	equ	0xFE2
 12663                           fsr1l	equ	0xFE1
 12664                           indf2	equ	0xFDF
 12665                           postinc2	equ	0xFDE
 12666                           postdec2	equ	0xFDD
 12667                           plusw2	equ	0xFDB
 12668                           fsr2h	equ	0xFDA
 12669                           fsr2l	equ	0xFD9
 12670                           status	equ	0xFD8
 12671                           
 12672 ;; *************** function _RTCC_task *****************
 12673 ;; Defined at:
 12674 ;;		line 353 in file "../My_library/My_RTCC.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;		None               void
 12681 ;; Registers used:
 12682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12692 ;;Total ram usage:        0 bytes
 12693 ;; Hardware stack levels used:    1
 12694 ;; Hardware stack levels required when called:   15
 12695 ;; This function calls:
 12696 ;;		_RTCC_from_RTCC
 12697 ;; This function is called by:
 12698 ;;		_main
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702                           	psect	text52
 12703  0142D8                     __ptext52:
 12704                           	opt stack 0
 12705  0142D8                     _RTCC_task:
 12706                           	opt stack 15
 12707  0142D8                     l929:
 12708  0142D8  010F               	movlb	15	; () banked
 12709  0142DA  B93F               	btfsc	63,4,b	;volatile
 12710  0142DC  D7FD               	goto	l929
 12711                           
 12712                           ; BSR set to: 15
 12713                           ;My_RTCC.c: 356: now.halfsec = RTCCFGbits.HALFSEC;
 12714                           
 12715                           ; BSR set to: 15
 12716  0142DE  0E00               	movlw	0
 12717  0142E0  B73F               	btfsc	63,3,b	;volatile
 12718  0142E2  0E01               	movlw	1
 12719  0142E4  0101               	movlb	1	; () banked
 12720  0142E6  6F56               	movwf	(_now+12)& (0+255),b
 12721                           
 12722                           ; BSR set to: 1
 12723                           ;My_RTCC.c: 357: if (prev_halfsec != now.halfsec) {
 12724  0142E8  0100               	movlb	0	; () banked
 12725  0142EA  51EA               	movf	RTCC_task@prev_halfsec& (0+255),w,b
 12726  0142EC  0101               	movlb	1	; () banked
 12727  0142EE  1956               	xorwf	(_now+12)& (0+255),w,b
 12728  0142F0  B4D8               	btfsc	status,2,c
 12729  0142F2  0012               	return	
 12730                           
 12731                           ; BSR set to: 1
 12732                           ;My_RTCC.c: 358: prev_halfsec = now.halfsec;
 12733  0142F4  C156  F0EA         	movff	_now+12,RTCC_task@prev_halfsec
 12734                           
 12735                           ;My_RTCC.c: 359: now.colon = now.halfsec;
 12736  0142F8  C156  F155         	movff	_now+12,_now+11
 12737                           
 12738                           ; BSR set to: 1
 12739                           ;My_RTCC.c: 360: time_change_flag = 1;
 12740  0142FC  0E01               	movlw	1
 12741  0142FE  0100               	movlb	0	; () banked
 12742  014300  6FF2               	movwf	_time_change_flag& (0+255),b
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;My_RTCC.c: 361: RTCC_from_RTCC(&now);
 12746  014302  0E4A               	movlw	low _now
 12747  014304  0100               	movlb	0	; () banked
 12748  014306  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12749  014308  0E01               	movlw	high _now
 12750  01430A  0100               	movlb	0	; () banked
 12751  01430C  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12752  01430E  EC47  F0A3         	call	_RTCC_from_RTCC	;wreg free
 12753  014312  0012               	return	
 12754  014314                     __end_of_RTCC_task:
 12755                           	opt stack 0
 12756                           tblptru	equ	0xFF8
 12757                           tblptrh	equ	0xFF7
 12758                           tblptrl	equ	0xFF6
 12759                           tablat	equ	0xFF5
 12760                           prodh	equ	0xFF4
 12761                           prodl	equ	0xFF3
 12762                           intcon	equ	0xFF2
 12763                           intcon2	equ	0xFF1
 12764                           indf0	equ	0xFEF
 12765                           postinc0	equ	0xFEE
 12766                           fsr0h	equ	0xFEA
 12767                           fsr0l	equ	0xFE9
 12768                           wreg	equ	0xFE8
 12769                           indf1	equ	0xFE7
 12770                           postinc1	equ	0xFE6
 12771                           postdec1	equ	0xFE5
 12772                           fsr1h	equ	0xFE2
 12773                           fsr1l	equ	0xFE1
 12774                           indf2	equ	0xFDF
 12775                           postinc2	equ	0xFDE
 12776                           postdec2	equ	0xFDD
 12777                           plusw2	equ	0xFDB
 12778                           fsr2h	equ	0xFDA
 12779                           fsr2l	equ	0xFD9
 12780                           status	equ	0xFD8
 12781                           
 12782 ;; *************** function _RTCC_from_RTCC *****************
 12783 ;; Defined at:
 12784 ;;		line 200 in file "../My_library/My_RTCC.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;  tm              2   38[BANK0 ] PTR struct .
 12787 ;;		 -> now(14), 
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;		None
 12790 ;; Return value:  Size  Location     Type
 12791 ;;		None               void
 12792 ;; Registers used:
 12793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:        2 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:   14
 12806 ;; This function calls:
 12807 ;;		_RTCC_to_caltime
 12808 ;;		_caltime_to_epoch
 12809 ;; This function is called by:
 12810 ;;		_RTCC_init
 12811 ;;		_RTCC_task
 12812 ;;		_print_time
 12813 ;;		_light_task
 12814 ;;		_display_time_0802
 12815 ;;		_display_time_1602
 12816 ;;		_RTCC_adjust_time_inc
 12817 ;;		_RTCC_adjust_time_dec
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text53
 12822  01468E                     __ptext53:
 12823                           	opt stack 0
 12824  01468E                     _RTCC_from_RTCC:
 12825                           	opt stack 11
 12826                           
 12827                           ;My_RTCC.c: 201: RTCC_to_caltime(tm);
 12828                           
 12829                           ;incstack = 0
 12830  01468E  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12831  014692  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12832  014696  EC02  F09A         	call	_RTCC_to_caltime	;wreg free
 12833                           
 12834                           ;My_RTCC.c: 202: caltime_to_epoch(tm);
 12835  01469A  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12836  01469E  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12837  0146A2  EC0F  F088         	call	_caltime_to_epoch	;wreg free
 12838  0146A6  0012               	return		;funcret
 12839  0146A8                     __end_of_RTCC_from_RTCC:
 12840                           	opt stack 0
 12841                           tblptru	equ	0xFF8
 12842                           tblptrh	equ	0xFF7
 12843                           tblptrl	equ	0xFF6
 12844                           tablat	equ	0xFF5
 12845                           prodh	equ	0xFF4
 12846                           prodl	equ	0xFF3
 12847                           intcon	equ	0xFF2
 12848                           intcon2	equ	0xFF1
 12849                           indf0	equ	0xFEF
 12850                           postinc0	equ	0xFEE
 12851                           fsr0h	equ	0xFEA
 12852                           fsr0l	equ	0xFE9
 12853                           wreg	equ	0xFE8
 12854                           indf1	equ	0xFE7
 12855                           postinc1	equ	0xFE6
 12856                           postdec1	equ	0xFE5
 12857                           fsr1h	equ	0xFE2
 12858                           fsr1l	equ	0xFE1
 12859                           indf2	equ	0xFDF
 12860                           postinc2	equ	0xFDE
 12861                           postdec2	equ	0xFDD
 12862                           plusw2	equ	0xFDB
 12863                           fsr2h	equ	0xFDA
 12864                           fsr2l	equ	0xFD9
 12865                           status	equ	0xFD8
 12866                           
 12867 ;; *************** function _caltime_to_epoch *****************
 12868 ;; Defined at:
 12869 ;;		line 180 in file "../My_library/My_RTCC.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  tm              2   25[BANK0 ] PTR struct .
 12872 ;;		 -> now(14), 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;  month           1   37[BANK0 ] unsigned char 
 12875 ;;  month           1   32[BANK0 ] unsigned char 
 12876 ;;  year            1   31[BANK0 ] unsigned char 
 12877 ;;  epoch           4   33[BANK0 ] unsigned long 
 12878 ;; Return value:  Size  Location     Type
 12879 ;;		None               void
 12880 ;; Registers used:
 12881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12882 ;; Tracked objects:
 12883 ;;		On entry : 0/0
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12888 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12889 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12890 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12891 ;;Total ram usage:       13 bytes
 12892 ;; Hardware stack levels used:    1
 12893 ;; Hardware stack levels required when called:   13
 12894 ;; This function calls:
 12895 ;;		___lmul
 12896 ;;		_month_length
 12897 ;; This function is called by:
 12898 ;;		_RTCC_from_RTCC
 12899 ;;		_RTCC_from_caltime
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           	psect	text54
 12904  01101E                     __ptext54:
 12905                           	opt stack 0
 12906  01101E                     _caltime_to_epoch:
 12907                           	opt stack 11
 12908                           
 12909                           ;My_RTCC.c: 181: epoch_t epoch = 0;
 12910                           
 12911                           ;incstack = 0
 12912  01101E  0E00               	movlw	0
 12913  011020  0100               	movlb	0	; () banked
 12914  011022  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 12915  011024  0E00               	movlw	0
 12916  011026  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 12917  011028  0E00               	movlw	0
 12918  01102A  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 12919  01102C  0E00               	movlw	0
 12920  01102E  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 12921                           
 12922                           ;My_RTCC.c: 182: for (uint8_t year = 0; year < tm->YY; year++) {
 12923  011030  0E00               	movlw	0
 12924  011032  0100               	movlb	0	; () banked
 12925  011034  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 12926  011036  D037               	goto	l8363
 12927  011038                     l8349:
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;My_RTCC.c: 183: for (uint8_t month = 1; month <= 12; month++) {
 12931  011038  0E01               	movlw	1
 12932  01103A  0100               	movlb	0	; () banked
 12933  01103C  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 12934  01103E                     l8351:
 12935                           
 12936                           ; BSR set to: 0
 12937  01103E  0E0C               	movlw	12
 12938  011040  0100               	movlb	0	; () banked
 12939  011042  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 12940  011044  D001               	goto	l8355
 12941  011046  D02D               	goto	l8361
 12942  011048                     l8355:
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 12946  011048  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 12947  01104C  0100               	movlb	0	; () banked
 12948  01104E  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 12949  011050  EC5B  F094         	call	_month_length
 12950  011054  0100               	movlb	0	; () banked
 12951  011056  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12952  011058  0100               	movlb	0	; () banked
 12953  01105A  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12954  01105C  0100               	movlb	0	; () banked
 12955  01105E  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12956  011060  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12957  011062  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12958  011064  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12959  011066  0E80               	movlw	128
 12960  011068  0100               	movlb	0	; () banked
 12961  01106A  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12962  01106C  0E51               	movlw	81
 12963  01106E  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12964  011070  0E01               	movlw	1
 12965  011072  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12966  011074  0E00               	movlw	0
 12967  011076  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12968  011078  EC1B  F09F         	call	___lmul	;wreg free
 12969  01107C  0100               	movlb	0	; () banked
 12970  01107E  516D               	movf	?___lmul& (0+255),w,b
 12971  011080  0100               	movlb	0	; () banked
 12972  011082  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12973  011084  0100               	movlb	0	; () banked
 12974  011086  516E               	movf	(?___lmul+1)& (0+255),w,b
 12975  011088  0100               	movlb	0	; () banked
 12976  01108A  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12977  01108C  0100               	movlb	0	; () banked
 12978  01108E  516F               	movf	(?___lmul+2)& (0+255),w,b
 12979  011090  0100               	movlb	0	; () banked
 12980  011092  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12981  011094  0100               	movlb	0	; () banked
 12982  011096  5170               	movf	(?___lmul+3)& (0+255),w,b
 12983  011098  0100               	movlb	0	; () banked
 12984  01109A  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12985                           
 12986                           ; BSR set to: 0
 12987  01109C  0100               	movlb	0	; () banked
 12988  01109E  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 12989  0110A0  D7CE               	goto	l8351
 12990  0110A2                     l8361:
 12991                           
 12992                           ; BSR set to: 0
 12993  0110A2  0100               	movlb	0	; () banked
 12994  0110A4  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 12995  0110A6                     l8363:
 12996                           
 12997                           ; BSR set to: 0
 12998  0110A6  0100               	movlb	0	; () banked
 12999  0110A8  EE20 F00A          	lfsr	2,10
 13000  0110AC  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13001  0110AE  26D9               	addwf	fsr2l,f,c
 13002  0110B0  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13003  0110B2  22DA               	addwfc	fsr2h,f,c
 13004  0110B4  50DE               	movf	postinc2,w,c
 13005  0110B6  0100               	movlb	0	; () banked
 13006  0110B8  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 13007  0110BA  A0D8               	btfss	status,0,c
 13008  0110BC  D7BD               	goto	l8349
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;My_RTCC.c: 185: }
 13012                           ;My_RTCC.c: 186: }
 13013                           ;My_RTCC.c: 187: for (uint8_t month = 1; month < tm->MM; month++) {
 13014                           
 13015                           ; BSR set to: 0
 13016  0110BE  0E01               	movlw	1
 13017  0110C0  0100               	movlb	0	; () banked
 13018  0110C2  6F80               	movwf	caltime_to_epoch@month_3467& (0+255),b
 13019  0110C4  D032               	goto	l8371
 13020  0110C6                     l8367:
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;My_RTCC.c: 188: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 13024  0110C6  C080  F066         	movff	caltime_to_epoch@month_3467,month_length@month
 13025  0110CA  0100               	movlb	0	; () banked
 13026  0110CC  EE20 F00A          	lfsr	2,10
 13027  0110D0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13028  0110D2  26D9               	addwf	fsr2l,f,c
 13029  0110D4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13030  0110D6  22DA               	addwfc	fsr2h,f,c
 13031  0110D8  50DF               	movf	indf2,w,c
 13032  0110DA  EC5B  F094         	call	_month_length
 13033  0110DE  0100               	movlb	0	; () banked
 13034  0110E0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13035  0110E2  0100               	movlb	0	; () banked
 13036  0110E4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13037  0110E6  0100               	movlb	0	; () banked
 13038  0110E8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13039  0110EA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13040  0110EC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13041  0110EE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13042  0110F0  0E80               	movlw	128
 13043  0110F2  0100               	movlb	0	; () banked
 13044  0110F4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13045  0110F6  0E51               	movlw	81
 13046  0110F8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13047  0110FA  0E01               	movlw	1
 13048  0110FC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13049  0110FE  0E00               	movlw	0
 13050  011100  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13051  011102  EC1B  F09F         	call	___lmul	;wreg free
 13052  011106  0100               	movlb	0	; () banked
 13053  011108  516D               	movf	?___lmul& (0+255),w,b
 13054  01110A  0100               	movlb	0	; () banked
 13055  01110C  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13056  01110E  0100               	movlb	0	; () banked
 13057  011110  516E               	movf	(?___lmul+1)& (0+255),w,b
 13058  011112  0100               	movlb	0	; () banked
 13059  011114  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13060  011116  0100               	movlb	0	; () banked
 13061  011118  516F               	movf	(?___lmul+2)& (0+255),w,b
 13062  01111A  0100               	movlb	0	; () banked
 13063  01111C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13064  01111E  0100               	movlb	0	; () banked
 13065  011120  5170               	movf	(?___lmul+3)& (0+255),w,b
 13066  011122  0100               	movlb	0	; () banked
 13067  011124  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13068                           
 13069                           ; BSR set to: 0
 13070  011126  0100               	movlb	0	; () banked
 13071  011128  2B80               	incf	caltime_to_epoch@month_3467& (0+255),f,b
 13072  01112A                     l8371:
 13073                           
 13074                           ; BSR set to: 0
 13075  01112A  0100               	movlb	0	; () banked
 13076  01112C  EE20 F009          	lfsr	2,9
 13077  011130  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13078  011132  26D9               	addwf	fsr2l,f,c
 13079  011134  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13080  011136  22DA               	addwfc	fsr2h,f,c
 13081  011138  50DE               	movf	postinc2,w,c
 13082  01113A  0100               	movlb	0	; () banked
 13083  01113C  5D80               	subwf	caltime_to_epoch@month_3467& (0+255),w,b
 13084  01113E  A0D8               	btfss	status,0,c
 13085  011140  D7C2               	goto	l8367
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;My_RTCC.c: 189: }
 13089                           ;My_RTCC.c: 190: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 13090                           
 13091                           ; BSR set to: 0
 13092  011142  0EFF               	movlw	255
 13093  011144  0100               	movlb	0	; () banked
 13094  011146  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13095  011148  0EFF               	movlw	255
 13096  01114A  0100               	movlb	0	; () banked
 13097  01114C  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 13098  01114E  0100               	movlb	0	; () banked
 13099  011150  EE20 F008          	lfsr	2,8
 13100  011154  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13101  011156  26D9               	addwf	fsr2l,f,c
 13102  011158  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13103  01115A  22DA               	addwfc	fsr2h,f,c
 13104  01115C  50DF               	movf	indf2,w,c
 13105  01115E  0100               	movlb	0	; () banked
 13106  011160  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 13107  011162  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 13108  011164  0100               	movlb	0	; () banked
 13109  011166  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13110  011168  0100               	movlb	0	; () banked
 13111  01116A  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 13112  01116C  0100               	movlb	0	; () banked
 13113  01116E  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 13114  011170  0100               	movlb	0	; () banked
 13115  011172  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 13116  011174  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 13117  011178  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 13118  01117C  0100               	movlb	0	; () banked
 13119  01117E  0E00               	movlw	0
 13120  011180  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 13121  011182  0EFF               	movlw	-1
 13122  011184  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 13123  011186  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 13124  011188  0E80               	movlw	128
 13125  01118A  0100               	movlb	0	; () banked
 13126  01118C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13127  01118E  0E51               	movlw	81
 13128  011190  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13129  011192  0E01               	movlw	1
 13130  011194  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13131  011196  0E00               	movlw	0
 13132  011198  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13133  01119A  EC1B  F09F         	call	___lmul	;wreg free
 13134  01119E  0100               	movlb	0	; () banked
 13135  0111A0  516D               	movf	?___lmul& (0+255),w,b
 13136  0111A2  0100               	movlb	0	; () banked
 13137  0111A4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13138  0111A6  0100               	movlb	0	; () banked
 13139  0111A8  516E               	movf	(?___lmul+1)& (0+255),w,b
 13140  0111AA  0100               	movlb	0	; () banked
 13141  0111AC  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13142  0111AE  0100               	movlb	0	; () banked
 13143  0111B0  516F               	movf	(?___lmul+2)& (0+255),w,b
 13144  0111B2  0100               	movlb	0	; () banked
 13145  0111B4  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13146  0111B6  0100               	movlb	0	; () banked
 13147  0111B8  5170               	movf	(?___lmul+3)& (0+255),w,b
 13148  0111BA  0100               	movlb	0	; () banked
 13149  0111BC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13150                           
 13151                           ;My_RTCC.c: 191: epoch += ((epoch_t)60*60) * tm->hh;
 13152  0111BE  0100               	movlb	0	; () banked
 13153  0111C0  EE20 F006          	lfsr	2,6
 13154  0111C4  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13155  0111C6  26D9               	addwf	fsr2l,f,c
 13156  0111C8  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13157  0111CA  22DA               	addwfc	fsr2h,f,c
 13158  0111CC  50DF               	movf	indf2,w,c
 13159  0111CE  0100               	movlb	0	; () banked
 13160  0111D0  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13161  0111D2  0100               	movlb	0	; () banked
 13162  0111D4  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13163  0111D6  0100               	movlb	0	; () banked
 13164  0111D8  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13165  0111DA  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13166  0111DC  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13167  0111DE  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13168  0111E0  0E10               	movlw	16
 13169  0111E2  0100               	movlb	0	; () banked
 13170  0111E4  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13171  0111E6  0E0E               	movlw	14
 13172  0111E8  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13173  0111EA  0E00               	movlw	0
 13174  0111EC  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13175  0111EE  0E00               	movlw	0
 13176  0111F0  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13177  0111F2  EC1B  F09F         	call	___lmul	;wreg free
 13178  0111F6  0100               	movlb	0	; () banked
 13179  0111F8  516D               	movf	?___lmul& (0+255),w,b
 13180  0111FA  0100               	movlb	0	; () banked
 13181  0111FC  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13182  0111FE  0100               	movlb	0	; () banked
 13183  011200  516E               	movf	(?___lmul+1)& (0+255),w,b
 13184  011202  0100               	movlb	0	; () banked
 13185  011204  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13186  011206  0100               	movlb	0	; () banked
 13187  011208  516F               	movf	(?___lmul+2)& (0+255),w,b
 13188  01120A  0100               	movlb	0	; () banked
 13189  01120C  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13190  01120E  0100               	movlb	0	; () banked
 13191  011210  5170               	movf	(?___lmul+3)& (0+255),w,b
 13192  011212  0100               	movlb	0	; () banked
 13193  011214  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13194                           
 13195                           ;My_RTCC.c: 192: epoch += ((epoch_t)60) * tm->mm;
 13196  011216  0100               	movlb	0	; () banked
 13197  011218  EE20 F005          	lfsr	2,5
 13198  01121C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13199  01121E  26D9               	addwf	fsr2l,f,c
 13200  011220  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13201  011222  22DA               	addwfc	fsr2h,f,c
 13202  011224  50DF               	movf	indf2,w,c
 13203  011226  0100               	movlb	0	; () banked
 13204  011228  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13205  01122A  0100               	movlb	0	; () banked
 13206  01122C  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13207  01122E  0100               	movlb	0	; () banked
 13208  011230  6F6D               	movwf	___lmul@multiplier& (0+255),b
 13209  011232  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 13210  011234  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 13211  011236  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 13212  011238  0E3C               	movlw	60
 13213  01123A  0100               	movlb	0	; () banked
 13214  01123C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13215  01123E  0E00               	movlw	0
 13216  011240  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13217  011242  0E00               	movlw	0
 13218  011244  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13219  011246  0E00               	movlw	0
 13220  011248  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13221  01124A  EC1B  F09F         	call	___lmul	;wreg free
 13222  01124E  0100               	movlb	0	; () banked
 13223  011250  516D               	movf	?___lmul& (0+255),w,b
 13224  011252  0100               	movlb	0	; () banked
 13225  011254  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13226  011256  0100               	movlb	0	; () banked
 13227  011258  516E               	movf	(?___lmul+1)& (0+255),w,b
 13228  01125A  0100               	movlb	0	; () banked
 13229  01125C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13230  01125E  0100               	movlb	0	; () banked
 13231  011260  516F               	movf	(?___lmul+2)& (0+255),w,b
 13232  011262  0100               	movlb	0	; () banked
 13233  011264  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13234  011266  0100               	movlb	0	; () banked
 13235  011268  5170               	movf	(?___lmul+3)& (0+255),w,b
 13236  01126A  0100               	movlb	0	; () banked
 13237  01126C  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;My_RTCC.c: 193: epoch += tm->ss;
 13241  01126E  0100               	movlb	0	; () banked
 13242  011270  EE20 F004          	lfsr	2,4
 13243  011274  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 13244  011276  26D9               	addwf	fsr2l,f,c
 13245  011278  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 13246  01127A  22DA               	addwfc	fsr2h,f,c
 13247  01127C  50DF               	movf	indf2,w,c
 13248  01127E  0100               	movlb	0	; () banked
 13249  011280  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 13250  011282  0100               	movlb	0	; () banked
 13251  011284  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 13252  011286  0100               	movlb	0	; () banked
 13253  011288  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 13254  01128A  0E00               	movlw	0
 13255  01128C  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 13256  01128E  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 13257  011290  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;My_RTCC.c: 195: tm->epoch = epoch;
 13261  011292  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 13262  011296  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 13263  01129A  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 13264  01129E  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 13265  0112A2  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 13266  0112A6  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 13267                           
 13268                           ; BSR set to: 0
 13269  0112AA  0012               	return		;funcret
 13270  0112AC                     __end_of_caltime_to_epoch:
 13271                           	opt stack 0
 13272                           tblptru	equ	0xFF8
 13273                           tblptrh	equ	0xFF7
 13274                           tblptrl	equ	0xFF6
 13275                           tablat	equ	0xFF5
 13276                           prodh	equ	0xFF4
 13277                           prodl	equ	0xFF3
 13278                           intcon	equ	0xFF2
 13279                           intcon2	equ	0xFF1
 13280                           indf0	equ	0xFEF
 13281                           postinc0	equ	0xFEE
 13282                           fsr0h	equ	0xFEA
 13283                           fsr0l	equ	0xFE9
 13284                           wreg	equ	0xFE8
 13285                           indf1	equ	0xFE7
 13286                           postinc1	equ	0xFE6
 13287                           postdec1	equ	0xFE5
 13288                           fsr1h	equ	0xFE2
 13289                           fsr1l	equ	0xFE1
 13290                           indf2	equ	0xFDF
 13291                           postinc2	equ	0xFDE
 13292                           postdec2	equ	0xFDD
 13293                           plusw2	equ	0xFDB
 13294                           fsr2h	equ	0xFDA
 13295                           fsr2l	equ	0xFD9
 13296                           status	equ	0xFD8
 13297                           
 13298 ;; *************** function _month_length *****************
 13299 ;; Defined at:
 13300 ;;		line 56 in file "../My_library/My_RTCC.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  year            1    wreg     unsigned char 
 13303 ;;  month           1    6[BANK0 ] unsigned char 
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;  year            1   11[BANK0 ] unsigned char 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  1    wreg      unsigned char 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0, cstack
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13315 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13317 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13318 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13319 ;;Total ram usage:        6 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:   12
 13322 ;; This function calls:
 13323 ;;		___awmod
 13324 ;; This function is called by:
 13325 ;;		_epoch_to_caltime
 13326 ;;		_caltime_to_epoch
 13327 ;;		_terminal_time
 13328 ;;		_RTCC_adjust_time_inc
 13329 ;;		_RTCC_adjust_time_dec
 13330 ;; This function uses a non-reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text55
 13334  0128B6                     __ptext55:
 13335                           	opt stack 0
 13336  0128B6                     _month_length:
 13337                           	opt stack 11
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;incstack = 0
 13341                           ;month_length@year stored from wreg
 13342  0128B6  0100               	movlb	0	; () banked
 13343  0128B8  6F6B               	movwf	month_length@year& (0+255),b
 13344                           
 13345                           ;My_RTCC.c: 57: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 13346  0128BA  0E02               	movlw	2
 13347  0128BC  0100               	movlb	0	; () banked
 13348  0128BE  1966               	xorwf	month_length@month& (0+255),w,b
 13349  0128C0  A4D8               	btfss	status,2,c
 13350  0128C2  D03E               	goto	l8241
 13351                           
 13352                           ; BSR set to: 0
 13353  0128C4  C06B  F060         	movff	month_length@year,___awmod@dividend
 13354  0128C8  0100               	movlb	0	; () banked
 13355  0128CA  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13356  0128CC  0E00               	movlw	0
 13357  0128CE  0100               	movlb	0	; () banked
 13358  0128D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13359  0128D2  0E64               	movlw	100
 13360  0128D4  6F62               	movwf	___awmod@divisor& (0+255),b
 13361  0128D6  ECC7  F09B         	call	___awmod	;wreg free
 13362  0128DA  0100               	movlb	0	; () banked
 13363  0128DC  5160               	movf	?___awmod& (0+255),w,b
 13364  0128DE  0100               	movlb	0	; () banked
 13365  0128E0  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13366  0128E2  A4D8               	btfss	status,2,c
 13367  0128E4  D002               	goto	u8180
 13368  0128E6  0E01               	movlw	1
 13369  0128E8  D001               	goto	u8190
 13370  0128EA                     u8180:
 13371  0128EA  0E00               	movlw	0
 13372  0128EC                     u8190:
 13373  0128EC  0800               	sublw	0
 13374  0128EE  0100               	movlb	0	; () banked
 13375  0128F0  6F67               	movwf	??_month_length& (0+255),b
 13376  0128F2  C06B  F060         	movff	month_length@year,___awmod@dividend
 13377  0128F6  0100               	movlb	0	; () banked
 13378  0128F8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 13379  0128FA  0E01               	movlw	1
 13380  0128FC  0100               	movlb	0	; () banked
 13381  0128FE  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 13382  012900  0E90               	movlw	144
 13383  012902  6F62               	movwf	___awmod@divisor& (0+255),b
 13384  012904  ECC7  F09B         	call	___awmod	;wreg free
 13385  012908  0100               	movlb	0	; () banked
 13386  01290A  5160               	movf	?___awmod& (0+255),w,b
 13387  01290C  0100               	movlb	0	; () banked
 13388  01290E  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 13389  012910  A4D8               	btfss	status,2,c
 13390  012912  D004               	goto	u8200
 13391  012914  0100               	movlb	0	; () banked
 13392  012916  6B68               	clrf	(??_month_length+1)& (0+255),b
 13393  012918  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13394  01291A  D002               	goto	u8218
 13395  01291C                     u8200:
 13396  01291C  0100               	movlb	0	; () banked
 13397  01291E  6B68               	clrf	(??_month_length+1)& (0+255),b
 13398  012920                     u8218:
 13399  012920  C06B  F069         	movff	month_length@year,??_month_length+2
 13400  012924  0E03               	movlw	3
 13401  012926  0100               	movlb	0	; () banked
 13402  012928  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13403  01292A  A4D8               	btfss	status,2,c
 13404  01292C  D002               	goto	u8220
 13405  01292E  0E01               	movlw	1
 13406  012930  D001               	goto	u8230
 13407  012932                     u8220:
 13408  012932  0E00               	movlw	0
 13409  012934                     u8230:
 13410  012934  0100               	movlb	0	; () banked
 13411  012936  2568               	addwf	(??_month_length+1)& (0+255),w,b
 13412  012938  0100               	movlb	0	; () banked
 13413  01293A  2567               	addwf	??_month_length& (0+255),w,b
 13414  01293C  0F1C               	addlw	28
 13415                           
 13416                           ; BSR set to: 0
 13417                           
 13418                           ; BSR set to: 0
 13419  01293E  0012               	return	
 13420  012940                     l8241:
 13421                           
 13422                           ; BSR set to: 0
 13423                           ;My_RTCC.c: 58: else return 31 - (((-(month & 1)^month)&13) == 4);
 13424  012940  0100               	movlb	0	; () banked
 13425  012942  5166               	movf	month_length@month& (0+255),w,b
 13426  012944  0B01               	andlw	1
 13427  012946  0100               	movlb	0	; () banked
 13428  012948  6F67               	movwf	??_month_length& (0+255),b
 13429  01294A  6B68               	clrf	(??_month_length+1)& (0+255),b
 13430  01294C  0100               	movlb	0	; () banked
 13431  01294E  1F67               	comf	??_month_length& (0+255),f,b
 13432  012950  1F68               	comf	(??_month_length+1)& (0+255),f,b
 13433  012952  4B67               	infsnz	??_month_length& (0+255),f,b
 13434  012954  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13435  012956  0100               	movlb	0	; () banked
 13436  012958  5166               	movf	month_length@month& (0+255),w,b
 13437  01295A  0100               	movlb	0	; () banked
 13438  01295C  6F69               	movwf	(??_month_length+2)& (0+255),b
 13439  01295E  6B6A               	clrf	(??_month_length+3)& (0+255),b
 13440  012960  0100               	movlb	0	; () banked
 13441  012962  5167               	movf	??_month_length& (0+255),w,b
 13442  012964  0100               	movlb	0	; () banked
 13443  012966  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 13444  012968  0100               	movlb	0	; () banked
 13445  01296A  5168               	movf	(??_month_length+1)& (0+255),w,b
 13446  01296C  0100               	movlb	0	; () banked
 13447  01296E  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 13448  012970  0E0D               	movlw	13
 13449  012972  0100               	movlb	0	; () banked
 13450  012974  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13451  012976  0E00               	movlw	0
 13452  012978  176A               	andwf	(??_month_length+3)& (0+255),f,b
 13453  01297A  0E04               	movlw	4
 13454  01297C  0100               	movlb	0	; () banked
 13455  01297E  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 13456  012980  0100               	movlb	0	; () banked
 13457  012982  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 13458  012984  A4D8               	btfss	status,2,c
 13459  012986  D002               	goto	u8240
 13460  012988  0E01               	movlw	1
 13461  01298A  D001               	goto	u8250
 13462  01298C                     u8240:
 13463  01298C  0E00               	movlw	0
 13464  01298E                     u8250:
 13465  01298E  0800               	sublw	0
 13466  012990  0F1F               	addlw	31
 13467                           
 13468                           ; BSR set to: 0
 13469  012992  0012               	return	
 13470  012994                     __end_of_month_length:
 13471                           	opt stack 0
 13472                           tblptru	equ	0xFF8
 13473                           tblptrh	equ	0xFF7
 13474                           tblptrl	equ	0xFF6
 13475                           tablat	equ	0xFF5
 13476                           prodh	equ	0xFF4
 13477                           prodl	equ	0xFF3
 13478                           intcon	equ	0xFF2
 13479                           intcon2	equ	0xFF1
 13480                           indf0	equ	0xFEF
 13481                           postinc0	equ	0xFEE
 13482                           fsr0h	equ	0xFEA
 13483                           fsr0l	equ	0xFE9
 13484                           wreg	equ	0xFE8
 13485                           indf1	equ	0xFE7
 13486                           postinc1	equ	0xFE6
 13487                           postdec1	equ	0xFE5
 13488                           fsr1h	equ	0xFE2
 13489                           fsr1l	equ	0xFE1
 13490                           indf2	equ	0xFDF
 13491                           postinc2	equ	0xFDE
 13492                           postdec2	equ	0xFDD
 13493                           plusw2	equ	0xFDB
 13494                           fsr2h	equ	0xFDA
 13495                           fsr2l	equ	0xFD9
 13496                           status	equ	0xFD8
 13497                           
 13498 ;; *************** function ___awmod *****************
 13499 ;; Defined at:
 13500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  dividend        2    0[BANK0 ] int 
 13503 ;;  divisor         2    2[BANK0 ] int 
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;  sign            1    5[BANK0 ] unsigned char 
 13506 ;;  counter         1    4[BANK0 ] unsigned char 
 13507 ;; Return value:  Size  Location     Type
 13508 ;;                  2    0[BANK0 ] int 
 13509 ;; Registers used:
 13510 ;;		wreg, status,2, status,0
 13511 ;; Tracked objects:
 13512 ;;		On entry : 0/0
 13513 ;;		On exit  : 0/0
 13514 ;;		Unchanged: 0/0
 13515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13519 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13520 ;;Total ram usage:        6 bytes
 13521 ;; Hardware stack levels used:    1
 13522 ;; Hardware stack levels required when called:   11
 13523 ;; This function calls:
 13524 ;;		Nothing
 13525 ;; This function is called by:
 13526 ;;		_month_length
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           	psect	text56
 13531  01378E                     __ptext56:
 13532                           	opt stack 0
 13533  01378E                     ___awmod:
 13534                           	opt stack 11
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;incstack = 0
 13538  01378E  0E00               	movlw	0
 13539  013790  0100               	movlb	0	; () banked
 13540  013792  6F65               	movwf	___awmod@sign& (0+255),b
 13541                           
 13542                           ; BSR set to: 0
 13543  013794  0100               	movlb	0	; () banked
 13544  013796  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13545  013798  D008               	goto	l8189
 13546                           
 13547                           ; BSR set to: 0
 13548  01379A  0100               	movlb	0	; () banked
 13549  01379C  6D60               	negf	___awmod@dividend& (0+255),b
 13550  01379E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13551  0137A0  B0D8               	btfsc	status,0,c
 13552  0137A2  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13553                           
 13554                           ; BSR set to: 0
 13555  0137A4  0E01               	movlw	1
 13556  0137A6  0100               	movlb	0	; () banked
 13557  0137A8  6F65               	movwf	___awmod@sign& (0+255),b
 13558  0137AA                     l8189:
 13559                           
 13560                           ; BSR set to: 0
 13561  0137AA  0100               	movlb	0	; () banked
 13562  0137AC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13563  0137AE  D005               	goto	l8193
 13564                           
 13565                           ; BSR set to: 0
 13566  0137B0  0100               	movlb	0	; () banked
 13567  0137B2  6D62               	negf	___awmod@divisor& (0+255),b
 13568  0137B4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13569  0137B6  B0D8               	btfsc	status,0,c
 13570  0137B8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13571  0137BA                     l8193:
 13572                           
 13573                           ; BSR set to: 0
 13574  0137BA  0100               	movlb	0	; () banked
 13575  0137BC  5162               	movf	___awmod@divisor& (0+255),w,b
 13576  0137BE  0100               	movlb	0	; () banked
 13577  0137C0  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13578  0137C2  B4D8               	btfsc	status,2,c
 13579  0137C4  D026               	goto	l8209
 13580                           
 13581                           ; BSR set to: 0
 13582  0137C6  0E01               	movlw	1
 13583  0137C8  0100               	movlb	0	; () banked
 13584  0137CA  6F64               	movwf	___awmod@counter& (0+255),b
 13585  0137CC  D006               	goto	l8199
 13586  0137CE                     l8197:
 13587                           
 13588                           ; BSR set to: 0
 13589  0137CE  0100               	movlb	0	; () banked
 13590  0137D0  90D8               	bcf	status,0,c
 13591  0137D2  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13592  0137D4  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13593  0137D6  0100               	movlb	0	; () banked
 13594  0137D8  2B64               	incf	___awmod@counter& (0+255),f,b
 13595  0137DA                     l8199:
 13596                           
 13597                           ; BSR set to: 0
 13598  0137DA  0100               	movlb	0	; () banked
 13599  0137DC  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13600  0137DE  D7F7               	goto	l8197
 13601  0137E0                     l8201:
 13602                           
 13603                           ; BSR set to: 0
 13604  0137E0  0100               	movlb	0	; () banked
 13605  0137E2  5162               	movf	___awmod@divisor& (0+255),w,b
 13606  0137E4  0100               	movlb	0	; () banked
 13607  0137E6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13608  0137E8  0100               	movlb	0	; () banked
 13609  0137EA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13610  0137EC  0100               	movlb	0	; () banked
 13611  0137EE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13612  0137F0  A0D8               	btfss	status,0,c
 13613  0137F2  D008               	goto	l8205
 13614                           
 13615                           ; BSR set to: 0
 13616  0137F4  0100               	movlb	0	; () banked
 13617  0137F6  5162               	movf	___awmod@divisor& (0+255),w,b
 13618  0137F8  0100               	movlb	0	; () banked
 13619  0137FA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13620  0137FC  0100               	movlb	0	; () banked
 13621  0137FE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13622  013800  0100               	movlb	0	; () banked
 13623  013802  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13624  013804                     l8205:
 13625                           
 13626                           ; BSR set to: 0
 13627  013804  0100               	movlb	0	; () banked
 13628  013806  90D8               	bcf	status,0,c
 13629  013808  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13630  01380A  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13631                           
 13632                           ; BSR set to: 0
 13633  01380C  0100               	movlb	0	; () banked
 13634  01380E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13635  013810  D7E7               	goto	l8201
 13636  013812                     l8209:
 13637                           
 13638                           ; BSR set to: 0
 13639  013812  0100               	movlb	0	; () banked
 13640  013814  5165               	movf	___awmod@sign& (0+255),w,b
 13641  013816  0100               	movlb	0	; () banked
 13642  013818  B4D8               	btfsc	status,2,c
 13643  01381A  D005               	goto	l8213
 13644                           
 13645                           ; BSR set to: 0
 13646  01381C  0100               	movlb	0	; () banked
 13647  01381E  6D60               	negf	___awmod@dividend& (0+255),b
 13648  013820  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13649  013822  B0D8               	btfsc	status,0,c
 13650  013824  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13651  013826                     l8213:
 13652                           
 13653                           ; BSR set to: 0
 13654  013826  C060  F060         	movff	___awmod@dividend,?___awmod
 13655  01382A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13656  01382E  0012               	return	
 13657  013830                     __end_of___awmod:
 13658                           	opt stack 0
 13659                           tblptru	equ	0xFF8
 13660                           tblptrh	equ	0xFF7
 13661                           tblptrl	equ	0xFF6
 13662                           tablat	equ	0xFF5
 13663                           prodh	equ	0xFF4
 13664                           prodl	equ	0xFF3
 13665                           intcon	equ	0xFF2
 13666                           intcon2	equ	0xFF1
 13667                           indf0	equ	0xFEF
 13668                           postinc0	equ	0xFEE
 13669                           fsr0h	equ	0xFEA
 13670                           fsr0l	equ	0xFE9
 13671                           wreg	equ	0xFE8
 13672                           indf1	equ	0xFE7
 13673                           postinc1	equ	0xFE6
 13674                           postdec1	equ	0xFE5
 13675                           fsr1h	equ	0xFE2
 13676                           fsr1l	equ	0xFE1
 13677                           indf2	equ	0xFDF
 13678                           postinc2	equ	0xFDE
 13679                           postdec2	equ	0xFDD
 13680                           plusw2	equ	0xFDB
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function ___lmul *****************
 13686 ;; Defined at:
 13687 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13690 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  product         4   21[BANK0 ] unsigned long 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  4   13[BANK0 ] unsigned long 
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13702 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13703 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13705 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13706 ;;Total ram usage:       12 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; Hardware stack levels required when called:   11
 13709 ;; This function calls:
 13710 ;;		Nothing
 13711 ;; This function is called by:
 13712 ;;		_get_quot_rem
 13713 ;;		_caltime_to_epoch
 13714 ;;		_light_task
 13715 ;;		_RTCC_adjust_time_inc
 13716 ;;		_RTCC_adjust_time_dec
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text57
 13721  013E36                     __ptext57:
 13722                           	opt stack 0
 13723  013E36                     ___lmul:
 13724                           	opt stack 12
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;incstack = 0
 13728  013E36  0E00               	movlw	0
 13729  013E38  0100               	movlb	0	; () banked
 13730  013E3A  6F75               	movwf	___lmul@product& (0+255),b
 13731  013E3C  0E00               	movlw	0
 13732  013E3E  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13733  013E40  0E00               	movlw	0
 13734  013E42  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13735  013E44  0E00               	movlw	0
 13736  013E46  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13737  013E48                     l8247:
 13738                           
 13739                           ; BSR set to: 0
 13740  013E48  0100               	movlb	0	; () banked
 13741  013E4A  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13742  013E4C  D010               	goto	l8251
 13743                           
 13744                           ; BSR set to: 0
 13745  013E4E  0100               	movlb	0	; () banked
 13746  013E50  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13747  013E52  0100               	movlb	0	; () banked
 13748  013E54  2775               	addwf	___lmul@product& (0+255),f,b
 13749  013E56  0100               	movlb	0	; () banked
 13750  013E58  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13751  013E5A  0100               	movlb	0	; () banked
 13752  013E5C  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13753  013E5E  0100               	movlb	0	; () banked
 13754  013E60  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13755  013E62  0100               	movlb	0	; () banked
 13756  013E64  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13757  013E66  0100               	movlb	0	; () banked
 13758  013E68  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13759  013E6A  0100               	movlb	0	; () banked
 13760  013E6C  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13761  013E6E                     l8251:
 13762                           
 13763                           ; BSR set to: 0
 13764  013E6E  0100               	movlb	0	; () banked
 13765  013E70  90D8               	bcf	status,0,c
 13766  013E72  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13767  013E74  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13768  013E76  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13769  013E78  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13770                           
 13771                           ; BSR set to: 0
 13772  013E7A  0100               	movlb	0	; () banked
 13773  013E7C  90D8               	bcf	status,0,c
 13774  013E7E  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13775  013E80  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13776  013E82  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13777  013E84  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13778  013E86  0100               	movlb	0	; () banked
 13779  013E88  516D               	movf	___lmul@multiplier& (0+255),w,b
 13780  013E8A  0100               	movlb	0	; () banked
 13781  013E8C  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13782  013E8E  0100               	movlb	0	; () banked
 13783  013E90  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13784  013E92  0100               	movlb	0	; () banked
 13785  013E94  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13786  013E96  A4D8               	btfss	status,2,c
 13787  013E98  D7D7               	goto	l8247
 13788                           
 13789                           ; BSR set to: 0
 13790  013E9A  C075  F06D         	movff	___lmul@product,?___lmul
 13791  013E9E  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13792  013EA2  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13793  013EA6  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13794                           
 13795                           ; BSR set to: 0
 13796  013EAA  0012               	return		;funcret
 13797  013EAC                     __end_of___lmul:
 13798                           	opt stack 0
 13799                           tblptru	equ	0xFF8
 13800                           tblptrh	equ	0xFF7
 13801                           tblptrl	equ	0xFF6
 13802                           tablat	equ	0xFF5
 13803                           prodh	equ	0xFF4
 13804                           prodl	equ	0xFF3
 13805                           intcon	equ	0xFF2
 13806                           intcon2	equ	0xFF1
 13807                           indf0	equ	0xFEF
 13808                           postinc0	equ	0xFEE
 13809                           fsr0h	equ	0xFEA
 13810                           fsr0l	equ	0xFE9
 13811                           wreg	equ	0xFE8
 13812                           indf1	equ	0xFE7
 13813                           postinc1	equ	0xFE6
 13814                           postdec1	equ	0xFE5
 13815                           fsr1h	equ	0xFE2
 13816                           fsr1l	equ	0xFE1
 13817                           indf2	equ	0xFDF
 13818                           postinc2	equ	0xFDE
 13819                           postdec2	equ	0xFDD
 13820                           plusw2	equ	0xFDB
 13821                           fsr2h	equ	0xFDA
 13822                           fsr2l	equ	0xFD9
 13823                           status	equ	0xFD8
 13824                           
 13825 ;; *************** function _RTCC_to_caltime *****************
 13826 ;; Defined at:
 13827 ;;		line 90 in file "../My_library/My_RTCC.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  tm              2    2[BANK0 ] PTR struct .
 13830 ;;		 -> now(14), 
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  dumy            1    4[BANK0 ] unsigned char 
 13833 ;; Return value:  Size  Location     Type
 13834 ;;		None               void
 13835 ;; Registers used:
 13836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13845 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13846 ;;Total ram usage:        3 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:   12
 13849 ;; This function calls:
 13850 ;;		_x_to_d
 13851 ;; This function is called by:
 13852 ;;		_RTCC_from_RTCC
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text58
 13857  013404                     __ptext58:
 13858                           	opt stack 0
 13859  013404                     _RTCC_to_caltime:
 13860                           	opt stack 12
 13861  013404                     l807:
 13862  013404  010F               	movlb	15	; () banked
 13863  013406  B93F               	btfsc	63,4,b	;volatile
 13864  013408  D7FD               	goto	l807
 13865                           
 13866                           ; BSR set to: 15
 13867                           ;My_RTCC.c: 93: RTCCFGbits.RTCPTR0 = 1;
 13868  01340A  010F               	movlb	15	; () banked
 13869  01340C  813F               	bsf	63,0,b	;volatile
 13870                           
 13871                           ;My_RTCC.c: 94: RTCCFGbits.RTCPTR1 = 1;
 13872  01340E  010F               	movlb	15	; () banked
 13873  013410  833F               	bsf	63,1,b	;volatile
 13874                           
 13875                           ; BSR set to: 15
 13876                           ;My_RTCC.c: 96: tm->YY = x_to_d(RTCVALL);
 13877  013412  0100               	movlb	0	; () banked
 13878  013414  EE20 F00A          	lfsr	2,10
 13879  013418  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13880  01341A  26D9               	addwf	fsr2l,f,c
 13881  01341C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13882  01341E  22DA               	addwfc	fsr2h,f,c
 13883  013420  010F               	movlb	15	; () banked
 13884  013422  513A               	movf	58,w,b	;volatile
 13885  013424  EC0E  F0A3         	call	_x_to_d
 13886  013428  6EDF               	movwf	indf2,c
 13887                           
 13888                           ;My_RTCC.c: 97: uint8_t dumy = RTCVALH;
 13889  01342A  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13890                           
 13891                           ;My_RTCC.c: 98: tm->DD = x_to_d(RTCVALL);
 13892  01342E  0100               	movlb	0	; () banked
 13893  013430  EE20 F008          	lfsr	2,8
 13894  013434  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13895  013436  26D9               	addwf	fsr2l,f,c
 13896  013438  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13897  01343A  22DA               	addwfc	fsr2h,f,c
 13898  01343C  010F               	movlb	15	; () banked
 13899  01343E  513A               	movf	58,w,b	;volatile
 13900  013440  EC0E  F0A3         	call	_x_to_d
 13901  013444  6EDF               	movwf	indf2,c
 13902                           
 13903                           ;My_RTCC.c: 99: tm->MM = x_to_d(RTCVALH);
 13904  013446  0100               	movlb	0	; () banked
 13905  013448  EE20 F009          	lfsr	2,9
 13906  01344C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13907  01344E  26D9               	addwf	fsr2l,f,c
 13908  013450  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13909  013452  22DA               	addwfc	fsr2h,f,c
 13910  013454  010F               	movlb	15	; () banked
 13911  013456  513B               	movf	59,w,b	;volatile
 13912  013458  EC0E  F0A3         	call	_x_to_d
 13913  01345C  6EDF               	movwf	indf2,c
 13914                           
 13915                           ;My_RTCC.c: 100: tm->hh = x_to_d(RTCVALL);
 13916  01345E  0100               	movlb	0	; () banked
 13917  013460  EE20 F006          	lfsr	2,6
 13918  013464  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13919  013466  26D9               	addwf	fsr2l,f,c
 13920  013468  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13921  01346A  22DA               	addwfc	fsr2h,f,c
 13922  01346C  010F               	movlb	15	; () banked
 13923  01346E  513A               	movf	58,w,b	;volatile
 13924  013470  EC0E  F0A3         	call	_x_to_d
 13925  013474  6EDF               	movwf	indf2,c
 13926                           
 13927                           ;My_RTCC.c: 101: tm->EE = x_to_d(RTCVALH);
 13928  013476  0100               	movlb	0	; () banked
 13929  013478  EE20 F007          	lfsr	2,7
 13930  01347C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13931  01347E  26D9               	addwf	fsr2l,f,c
 13932  013480  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13933  013482  22DA               	addwfc	fsr2h,f,c
 13934  013484  010F               	movlb	15	; () banked
 13935  013486  513B               	movf	59,w,b	;volatile
 13936  013488  EC0E  F0A3         	call	_x_to_d
 13937  01348C  6EDF               	movwf	indf2,c
 13938                           
 13939                           ;My_RTCC.c: 102: tm->ss = x_to_d(RTCVALL);
 13940  01348E  0100               	movlb	0	; () banked
 13941  013490  EE20 F004          	lfsr	2,4
 13942  013494  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13943  013496  26D9               	addwf	fsr2l,f,c
 13944  013498  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13945  01349A  22DA               	addwfc	fsr2h,f,c
 13946  01349C  010F               	movlb	15	; () banked
 13947  01349E  513A               	movf	58,w,b	;volatile
 13948  0134A0  EC0E  F0A3         	call	_x_to_d
 13949  0134A4  6EDF               	movwf	indf2,c
 13950                           
 13951                           ;My_RTCC.c: 103: tm->mm = x_to_d(RTCVALH);
 13952  0134A6  0100               	movlb	0	; () banked
 13953  0134A8  EE20 F005          	lfsr	2,5
 13954  0134AC  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13955  0134AE  26D9               	addwf	fsr2l,f,c
 13956  0134B0  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13957  0134B2  22DA               	addwfc	fsr2h,f,c
 13958  0134B4  010F               	movlb	15	; () banked
 13959  0134B6  513B               	movf	59,w,b	;volatile
 13960  0134B8  EC0E  F0A3         	call	_x_to_d
 13961  0134BC  6EDF               	movwf	indf2,c
 13962  0134BE  0012               	return		;funcret
 13963  0134C0                     __end_of_RTCC_to_caltime:
 13964                           	opt stack 0
 13965                           tblptru	equ	0xFF8
 13966                           tblptrh	equ	0xFF7
 13967                           tblptrl	equ	0xFF6
 13968                           tablat	equ	0xFF5
 13969                           prodh	equ	0xFF4
 13970                           prodl	equ	0xFF3
 13971                           intcon	equ	0xFF2
 13972                           intcon2	equ	0xFF1
 13973                           indf0	equ	0xFEF
 13974                           postinc0	equ	0xFEE
 13975                           fsr0h	equ	0xFEA
 13976                           fsr0l	equ	0xFE9
 13977                           wreg	equ	0xFE8
 13978                           indf1	equ	0xFE7
 13979                           postinc1	equ	0xFE6
 13980                           postdec1	equ	0xFE5
 13981                           fsr1h	equ	0xFE2
 13982                           fsr1l	equ	0xFE1
 13983                           indf2	equ	0xFDF
 13984                           postinc2	equ	0xFDE
 13985                           postdec2	equ	0xFDD
 13986                           plusw2	equ	0xFDB
 13987                           fsr2h	equ	0xFDA
 13988                           fsr2l	equ	0xFD9
 13989                           status	equ	0xFD8
 13990                           
 13991 ;; *************** function _x_to_d *****************
 13992 ;; Defined at:
 13993 ;;		line 52 in file "../My_library/My_RTCC.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;  hex             1    wreg     unsigned char 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  hex             1    1[BANK0 ] unsigned char 
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  1    wreg      unsigned char 
 14000 ;; Registers used:
 14001 ;;		wreg, status,2, status,0, prodl, prodh
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14009 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14011 ;;Total ram usage:        2 bytes
 14012 ;; Hardware stack levels used:    1
 14013 ;; Hardware stack levels required when called:   11
 14014 ;; This function calls:
 14015 ;;		Nothing
 14016 ;; This function is called by:
 14017 ;;		_RTCC_to_caltime
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text59
 14022  01461C                     __ptext59:
 14023                           	opt stack 0
 14024  01461C                     _x_to_d:
 14025                           	opt stack 12
 14026                           
 14027                           ;incstack = 0
 14028                           ;x_to_d@hex stored from wreg
 14029  01461C  0100               	movlb	0	; () banked
 14030  01461E  6F61               	movwf	x_to_d@hex& (0+255),b
 14031                           
 14032                           ;My_RTCC.c: 53: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 14033  014620  C061  F060         	movff	x_to_d@hex,??_x_to_d
 14034  014624  0E0F               	movlw	15
 14035  014626  0100               	movlb	0	; () banked
 14036  014628  1760               	andwf	??_x_to_d& (0+255),f,b
 14037  01462A  0100               	movlb	0	; () banked
 14038  01462C  3961               	swapf	x_to_d@hex& (0+255),w,b
 14039  01462E  0B0F               	andlw	15
 14040  014630  0B0F               	andlw	15
 14041  014632  0D0A               	mullw	10
 14042  014634  50F3               	movf	prodl,w,c
 14043  014636  0100               	movlb	0	; () banked
 14044  014638  2560               	addwf	??_x_to_d& (0+255),w,b
 14045  01463A  0012               	return	
 14046  01463C                     __end_of_x_to_d:
 14047                           	opt stack 0
 14048                           tblptru	equ	0xFF8
 14049                           tblptrh	equ	0xFF7
 14050                           tblptrl	equ	0xFF6
 14051                           tablat	equ	0xFF5
 14052                           prodh	equ	0xFF4
 14053                           prodl	equ	0xFF3
 14054                           intcon	equ	0xFF2
 14055                           intcon2	equ	0xFF1
 14056                           indf0	equ	0xFEF
 14057                           postinc0	equ	0xFEE
 14058                           fsr0h	equ	0xFEA
 14059                           fsr0l	equ	0xFE9
 14060                           wreg	equ	0xFE8
 14061                           indf1	equ	0xFE7
 14062                           postinc1	equ	0xFE6
 14063                           postdec1	equ	0xFE5
 14064                           fsr1h	equ	0xFE2
 14065                           fsr1l	equ	0xFE1
 14066                           indf2	equ	0xFDF
 14067                           postinc2	equ	0xFDE
 14068                           postdec2	equ	0xFDD
 14069                           plusw2	equ	0xFDB
 14070                           fsr2h	equ	0xFDA
 14071                           fsr2l	equ	0xFD9
 14072                           status	equ	0xFD8
 14073                           
 14074 ;; *************** function _ISR *****************
 14075 ;; Defined at:
 14076 ;;		line 61 in file "PIC18F27J53-killifish_light06.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;		None
 14079 ;; Auto vars:     Size  Location     Type
 14080 ;;		None
 14081 ;; Return value:  Size  Location     Type
 14082 ;;		None               void
 14083 ;; Registers used:
 14084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14085 ;; Tracked objects:
 14086 ;;		On entry : 0/0
 14087 ;;		On exit  : 0/0
 14088 ;;		Unchanged: 0/0
 14089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14092 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14093 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14094 ;;Total ram usage:       15 bytes
 14095 ;; Hardware stack levels used:    1
 14096 ;; Hardware stack levels required when called:   10
 14097 ;; This function calls:
 14098 ;;		_USB_ISR
 14099 ;;		_button_timer_interrupt
 14100 ;; This function is called by:
 14101 ;;		Interrupt level 2
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           	psect	intcode
 14106  001008                     __pintcode:
 14107                           	opt stack 0
 14108  001008                     _ISR:
 14109                           	opt stack 11
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;incstack = 0
 14113  001008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14114  00100A  CFFA F04D          	movff	pclath,??_ISR+1
 14115  00100E  CFFB F04E          	movff	pclatu,??_ISR+2
 14116  001012  CFE9 F04F          	movff	fsr0l,??_ISR+3
 14117  001016  CFEA F050          	movff	fsr0h,??_ISR+4
 14118  00101A  CFE1 F051          	movff	fsr1l,??_ISR+5
 14119  00101E  CFE2 F052          	movff	fsr1h,??_ISR+6
 14120  001022  CFD9 F053          	movff	fsr2l,??_ISR+7
 14121  001026  CFDA F054          	movff	fsr2h,??_ISR+8
 14122  00102A  CFF3 F055          	movff	prodl,??_ISR+9
 14123  00102E  CFF4 F056          	movff	prodh,??_ISR+10
 14124  001032  CFF6 F057          	movff	tblptrl,??_ISR+11
 14125  001036  CFF7 F058          	movff	tblptrh,??_ISR+12
 14126  00103A  CFF8 F059          	movff	tblptru,??_ISR+13
 14127  00103E  CFF5 F05A          	movff	tablat,??_ISR+14
 14128                           
 14129                           ;PIC18F27J53-killifish_light06.c: 62: USB_ISR();
 14130  001042  EC5B  F0A3         	call	_USB_ISR	;wreg free
 14131                           
 14132                           ;PIC18F27J53-killifish_light06.c: 63: if (INTCONbits.T0IF) {
 14133  001046  B4F2               	btfsc	intcon,2,c	;volatile
 14134                           
 14135                           ;PIC18F27J53-killifish_light06.c: 64: INTCONbits.T0IF = 0;
 14136  001048  94F2               	bcf	intcon,2,c	;volatile
 14137                           
 14138                           ;PIC18F27J53-killifish_light06.c: 65: }
 14139                           ;PIC18F27J53-killifish_light06.c: 66: if (PIR1bits.TMR1IF) {
 14140  00104A  A09E               	btfss	3998,0,c	;volatile
 14141  00104C  D010               	goto	i2l8127
 14142                           
 14143                           ;PIC18F27J53-killifish_light06.c: 67: PIR1bits.TMR1IF = 0;
 14144  00104E  909E               	bcf	3998,0,c	;volatile
 14145                           
 14146                           ;PIC18F27J53-killifish_light06.c: 68: TMR1H = 0x80;
 14147  001050  0E80               	movlw	128
 14148  001052  6ECF               	movwf	4047,c	;volatile
 14149                           
 14150                           ;PIC18F27J53-killifish_light06.c: 69: LATBbits.LATB5 = !LATBbits.LATB5;
 14151  001054  BA8A               	btfsc	3978,5,c	;volatile
 14152  001056  D003               	goto	i2u801_40
 14153  001058  6A4C               	clrf	??_ISR& (0+255),c
 14154  00105A  2A4C               	incf	??_ISR& (0+255),f,c
 14155  00105C  D001               	goto	i2u802_48
 14156  00105E                     i2u801_40:
 14157  00105E  6A4C               	clrf	??_ISR& (0+255),c
 14158  001060                     i2u802_48:
 14159  001060  3A4C               	swapf	??_ISR,f,c
 14160  001062  464C               	rlncf	??_ISR,f,c
 14161  001064  508A               	movf	3978,w,c	;volatile
 14162  001066  184C               	xorwf	??_ISR,w,c
 14163  001068  0BDF               	andlw	-33
 14164  00106A  184C               	xorwf	??_ISR,w,c
 14165  00106C  6E8A               	movwf	3978,c	;volatile
 14166  00106E                     i2l8127:
 14167                           
 14168                           ;PIC18F27J53-killifish_light06.c: 70: }
 14169                           ;PIC18F27J53-killifish_light06.c: 71: if (PIR2bits.TMR3IF) {
 14170  00106E  A2A1               	btfss	4001,1,c	;volatile
 14171  001070  D028               	goto	i2l1368
 14172                           
 14173                           ;PIC18F27J53-killifish_light06.c: 72: PIR2bits.TMR3IF = 0;
 14174  001072  92A1               	bcf	4001,1,c	;volatile
 14175                           
 14176                           ;PIC18F27J53-killifish_light06.c: 73: button_timer_interrupt(&sw_R, !PORTAbits.RA5);
 14177  001074  0E8F               	movlw	low _sw_R
 14178  001076  6E2E               	movwf	button_timer_interrupt@bt,c
 14179  001078  0E01               	movlw	high _sw_R
 14180  00107A  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14181  00107C  BA80               	btfsc	3968,5,c	;volatile
 14182  00107E  D002               	goto	i2u804_40
 14183  001080  0E01               	movlw	1
 14184  001082  D001               	goto	i2u805_40
 14185  001084                     i2u804_40:
 14186  001084  0E00               	movlw	0
 14187  001086                     i2u805_40:
 14188  001086  6E30               	movwf	button_timer_interrupt@sw_value,c
 14189  001088  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14190                           
 14191                           ;PIC18F27J53-killifish_light06.c: 74: button_timer_interrupt(&sw_G, !PORTAbits.RA6);
 14192  00108C  0E8B               	movlw	low _sw_G
 14193  00108E  6E2E               	movwf	button_timer_interrupt@bt,c
 14194  001090  0E01               	movlw	high _sw_G
 14195  001092  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14196  001094  BC80               	btfsc	3968,6,c	;volatile
 14197  001096  D002               	goto	i2u806_40
 14198  001098  0E01               	movlw	1
 14199  00109A  D001               	goto	i2u807_40
 14200  00109C                     i2u806_40:
 14201  00109C  0E00               	movlw	0
 14202  00109E                     i2u807_40:
 14203  00109E  6E30               	movwf	button_timer_interrupt@sw_value,c
 14204  0010A0  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14205                           
 14206                           ;PIC18F27J53-killifish_light06.c: 75: button_timer_interrupt(&sw_B, !PORTAbits.RA7);
 14207  0010A4  0E87               	movlw	low _sw_B
 14208  0010A6  6E2E               	movwf	button_timer_interrupt@bt,c
 14209  0010A8  0E01               	movlw	high _sw_B
 14210  0010AA  6E2F               	movwf	button_timer_interrupt@bt+1,c
 14211  0010AC  BE80               	btfsc	3968,7,c	;volatile
 14212  0010AE  D002               	goto	i2u808_40
 14213  0010B0  0E01               	movlw	1
 14214  0010B2  D001               	goto	i2u809_40
 14215  0010B4                     i2u808_40:
 14216  0010B4  0E00               	movlw	0
 14217  0010B6                     i2u809_40:
 14218  0010B6  6E30               	movwf	button_timer_interrupt@sw_value,c
 14219  0010B8  EC9A  F08A         	call	_button_timer_interrupt	;wreg free
 14220                           
 14221                           ;PIC18F27J53-killifish_light06.c: 76: ADC_flag = 1;
 14222  0010BC  0E01               	movlw	1
 14223  0010BE  0100               	movlb	0	; () banked
 14224  0010C0  6FEB               	movwf	_ADC_flag& (0+255),b
 14225  0010C2                     i2l1368:
 14226  0010C2  C05A  FFF5         	movff	??_ISR+14,tablat
 14227  0010C6  C059  FFF8         	movff	??_ISR+13,tblptru
 14228  0010CA  C058  FFF7         	movff	??_ISR+12,tblptrh
 14229  0010CE  C057  FFF6         	movff	??_ISR+11,tblptrl
 14230  0010D2  C056  FFF4         	movff	??_ISR+10,prodh
 14231  0010D6  C055  FFF3         	movff	??_ISR+9,prodl
 14232  0010DA  C054  FFDA         	movff	??_ISR+8,fsr2h
 14233  0010DE  C053  FFD9         	movff	??_ISR+7,fsr2l
 14234  0010E2  C052  FFE2         	movff	??_ISR+6,fsr1h
 14235  0010E6  C051  FFE1         	movff	??_ISR+5,fsr1l
 14236  0010EA  C050  FFEA         	movff	??_ISR+4,fsr0h
 14237  0010EE  C04F  FFE9         	movff	??_ISR+3,fsr0l
 14238  0010F2  C04E  FFFB         	movff	??_ISR+2,pclatu
 14239  0010F6  C04D  FFFA         	movff	??_ISR+1,pclath
 14240  0010FA  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14241  0010FC  0011               	retfie		f
 14242  0010FE                     __end_of_ISR:
 14243                           	opt stack 0
 14244                           pclatu	equ	0xFFB
 14245                           pclath	equ	0xFFA
 14246                           tblptru	equ	0xFF8
 14247                           tblptrh	equ	0xFF7
 14248                           tblptrl	equ	0xFF6
 14249                           tablat	equ	0xFF5
 14250                           prodh	equ	0xFF4
 14251                           prodl	equ	0xFF3
 14252                           intcon	equ	0xFF2
 14253                           intcon2	equ	0xFF1
 14254                           indf0	equ	0xFEF
 14255                           postinc0	equ	0xFEE
 14256                           fsr0h	equ	0xFEA
 14257                           fsr0l	equ	0xFE9
 14258                           wreg	equ	0xFE8
 14259                           indf1	equ	0xFE7
 14260                           postinc1	equ	0xFE6
 14261                           postdec1	equ	0xFE5
 14262                           fsr1h	equ	0xFE2
 14263                           fsr1l	equ	0xFE1
 14264                           indf2	equ	0xFDF
 14265                           postinc2	equ	0xFDE
 14266                           postdec2	equ	0xFDD
 14267                           plusw2	equ	0xFDB
 14268                           fsr2h	equ	0xFDA
 14269                           fsr2l	equ	0xFD9
 14270                           status	equ	0xFD8
 14271                           
 14272 ;; *************** function _button_timer_interrupt *****************
 14273 ;; Defined at:
 14274 ;;		line 3 in file "../My_library/My_button.c"
 14275 ;; Parameters:    Size  Location     Type
 14276 ;;  bt              2    0[COMRAM] PTR struct button
 14277 ;;		 -> sw_B(4), sw_G(4), sw_R(4), 
 14278 ;;  sw_value        1    2[COMRAM] unsigned char 
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;		None
 14281 ;; Return value:  Size  Location     Type
 14282 ;;		None               void
 14283 ;; Registers used:
 14284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14285 ;; Tracked objects:
 14286 ;;		On entry : 0/0
 14287 ;;		On exit  : 0/0
 14288 ;;		Unchanged: 0/0
 14289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14290 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14293 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14294 ;;Total ram usage:        5 bytes
 14295 ;; Hardware stack levels used:    1
 14296 ;; This function calls:
 14297 ;;		Nothing
 14298 ;; This function is called by:
 14299 ;;		_ISR
 14300 ;; This function uses a non-reentrant model
 14301 ;;
 14302                           
 14303                           	psect	text61
 14304  011534                     __ptext61:
 14305                           	opt stack 0
 14306  011534                     _button_timer_interrupt:
 14307                           	opt stack 20
 14308                           
 14309                           ;My_button.c: 4: if (sw_value) {
 14310                           
 14311                           ;incstack = 0
 14312  011534  5030               	movf	button_timer_interrupt@sw_value,w,c
 14313  011536  B4D8               	btfsc	status,2,c
 14314  011538  D098               	goto	i2l7419
 14315                           
 14316                           ;My_button.c: 5: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 14317  01153A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14318  01153E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14319  011542  0E84               	movlw	132
 14320  011544  18DE               	xorwf	postinc2,w,c
 14321  011546  E10B               	bnz	i2l525
 14322  011548  0E03               	movlw	3
 14323  01154A  18DE               	xorwf	postinc2,w,c
 14324  01154C  A4D8               	btfss	status,2,c
 14325  01154E  D007               	goto	i2l525
 14326  011550  EE20 F003          	lfsr	2,3
 14327  011554  502E               	movf	button_timer_interrupt@bt,w,c
 14328  011556  26D9               	addwf	fsr2l,f,c
 14329  011558  502F               	movf	button_timer_interrupt@bt+1,w,c
 14330  01155A  22DA               	addwfc	fsr2h,f,c
 14331  01155C  8EDF               	bsf	indf2,7,c
 14332  01155E                     i2l525:
 14333                           
 14334                           ;My_button.c: 6: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 14335  01155E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14336  011562  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14337  011566  0EBC               	movlw	188
 14338  011568  18DE               	xorwf	postinc2,w,c
 14339  01156A  E10B               	bnz	i2l526
 14340  01156C  0E02               	movlw	2
 14341  01156E  18DE               	xorwf	postinc2,w,c
 14342  011570  A4D8               	btfss	status,2,c
 14343  011572  D007               	goto	i2l526
 14344  011574  EE20 F003          	lfsr	2,3
 14345  011578  502E               	movf	button_timer_interrupt@bt,w,c
 14346  01157A  26D9               	addwf	fsr2l,f,c
 14347  01157C  502F               	movf	button_timer_interrupt@bt+1,w,c
 14348  01157E  22DA               	addwfc	fsr2h,f,c
 14349  011580  8CDF               	bsf	indf2,6,c
 14350  011582                     i2l526:
 14351                           
 14352                           ;My_button.c: 7: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 14353  011582  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14354  011586  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14355  01158A  0EF4               	movlw	244
 14356  01158C  18DE               	xorwf	postinc2,w,c
 14357  01158E  E10A               	bnz	i2l527
 14358  011590  04DE               	decf	postinc2,w,c
 14359  011592  A4D8               	btfss	status,2,c
 14360  011594  D007               	goto	i2l527
 14361  011596  EE20 F003          	lfsr	2,3
 14362  01159A  502E               	movf	button_timer_interrupt@bt,w,c
 14363  01159C  26D9               	addwf	fsr2l,f,c
 14364  01159E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14365  0115A0  22DA               	addwfc	fsr2h,f,c
 14366  0115A2  8ADF               	bsf	indf2,5,c
 14367  0115A4                     i2l527:
 14368                           
 14369                           ;My_button.c: 8: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 14370  0115A4  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14371  0115A8  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14372  0115AC  0E2C               	movlw	44
 14373  0115AE  18DE               	xorwf	postinc2,w,c
 14374  0115B0  E10A               	bnz	i2l528
 14375  0115B2  04DE               	decf	postinc2,w,c
 14376  0115B4  A4D8               	btfss	status,2,c
 14377  0115B6  D007               	goto	i2l528
 14378  0115B8  EE20 F003          	lfsr	2,3
 14379  0115BC  502E               	movf	button_timer_interrupt@bt,w,c
 14380  0115BE  26D9               	addwf	fsr2l,f,c
 14381  0115C0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14382  0115C2  22DA               	addwfc	fsr2h,f,c
 14383  0115C4  88DF               	bsf	indf2,4,c
 14384  0115C6                     i2l528:
 14385                           
 14386                           ;My_button.c: 9: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 14387  0115C6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14388  0115CA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14389  0115CE  0E96               	movlw	150
 14390  0115D0  18DE               	xorwf	postinc2,w,c
 14391  0115D2  10DE               	iorwf	postinc2,w,c
 14392  0115D4  A4D8               	btfss	status,2,c
 14393  0115D6  D007               	goto	i2l529
 14394  0115D8  EE20 F003          	lfsr	2,3
 14395  0115DC  502E               	movf	button_timer_interrupt@bt,w,c
 14396  0115DE  26D9               	addwf	fsr2l,f,c
 14397  0115E0  502F               	movf	button_timer_interrupt@bt+1,w,c
 14398  0115E2  22DA               	addwfc	fsr2h,f,c
 14399  0115E4  86DF               	bsf	indf2,3,c
 14400  0115E6                     i2l529:
 14401                           
 14402                           ;My_button.c: 10: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 14403  0115E6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14404  0115EA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14405  0115EE  0E3C               	movlw	60
 14406  0115F0  18DE               	xorwf	postinc2,w,c
 14407  0115F2  10DE               	iorwf	postinc2,w,c
 14408  0115F4  A4D8               	btfss	status,2,c
 14409  0115F6  D007               	goto	i2l530
 14410  0115F8  EE20 F003          	lfsr	2,3
 14411  0115FC  502E               	movf	button_timer_interrupt@bt,w,c
 14412  0115FE  26D9               	addwf	fsr2l,f,c
 14413  011600  502F               	movf	button_timer_interrupt@bt+1,w,c
 14414  011602  22DA               	addwfc	fsr2h,f,c
 14415  011604  84DF               	bsf	indf2,2,c
 14416  011606                     i2l530:
 14417                           
 14418                           ;My_button.c: 11: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 14419  011606  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14420  01160A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14421  01160E  0E10               	movlw	16
 14422  011610  18DE               	xorwf	postinc2,w,c
 14423  011612  10DE               	iorwf	postinc2,w,c
 14424  011614  A4D8               	btfss	status,2,c
 14425  011616  D007               	goto	i2l531
 14426  011618  EE20 F003          	lfsr	2,3
 14427  01161C  502E               	movf	button_timer_interrupt@bt,w,c
 14428  01161E  26D9               	addwf	fsr2l,f,c
 14429  011620  502F               	movf	button_timer_interrupt@bt+1,w,c
 14430  011622  22DA               	addwfc	fsr2h,f,c
 14431  011624  82DF               	bsf	indf2,1,c
 14432  011626                     i2l531:
 14433                           
 14434                           ;My_button.c: 12: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 14435  011626  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14436  01162A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14437  01162E  0E02               	movlw	2
 14438  011630  18DE               	xorwf	postinc2,w,c
 14439  011632  10DE               	iorwf	postinc2,w,c
 14440  011634  A4D8               	btfss	status,2,c
 14441  011636  D007               	goto	i2l532
 14442  011638  EE20 F003          	lfsr	2,3
 14443  01163C  502E               	movf	button_timer_interrupt@bt,w,c
 14444  01163E  26D9               	addwf	fsr2l,f,c
 14445  011640  502F               	movf	button_timer_interrupt@bt+1,w,c
 14446  011642  22DA               	addwfc	fsr2h,f,c
 14447  011644  80DF               	bsf	indf2,0,c
 14448  011646                     i2l532:
 14449                           
 14450                           ;My_button.c: 13: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 14451  011646  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14452  01164A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14453  01164E  0E85               	movlw	133
 14454  011650  5CDE               	subwf	postinc2,w,c
 14455  011652  0E03               	movlw	3
 14456  011654  58DE               	subwfb	postinc2,w,c
 14457  011656  B0D8               	btfsc	status,0,c
 14458  011658  0012               	return	
 14459  01165A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14460  01165E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14461  011662  2ADE               	incf	postinc2,f,c
 14462  011664  0E00               	movlw	0
 14463  011666  22DD               	addwfc	postdec2,f,c
 14464                           
 14465                           ;My_button.c: 14: } else {
 14466  011668  0012               	return	
 14467  01166A                     i2l7419:
 14468                           
 14469                           ;My_button.c: 15: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 14470  01166A  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14471  01166E  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14472  011672  0E84               	movlw	132
 14473  011674  5CDE               	subwf	postinc2,w,c
 14474  011676  0E03               	movlw	3
 14475  011678  58DE               	subwfb	postinc2,w,c
 14476  01167A  A0D8               	btfss	status,0,c
 14477  01167C  D008               	goto	i2l7423
 14478  01167E  EE20 F002          	lfsr	2,2
 14479  011682  502E               	movf	button_timer_interrupt@bt,w,c
 14480  011684  26D9               	addwf	fsr2l,f,c
 14481  011686  502F               	movf	button_timer_interrupt@bt+1,w,c
 14482  011688  22DA               	addwfc	fsr2h,f,c
 14483  01168A  8EDF               	bsf	indf2,7,c
 14484  01168C  D081               	goto	i2l7451
 14485  01168E                     i2l7423:
 14486                           
 14487                           ;My_button.c: 16: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 14488  01168E  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14489  011692  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14490  011696  0EBC               	movlw	188
 14491  011698  5CDE               	subwf	postinc2,w,c
 14492  01169A  0E02               	movlw	2
 14493  01169C  58DE               	subwfb	postinc2,w,c
 14494  01169E  A0D8               	btfss	status,0,c
 14495  0116A0  D008               	goto	i2l7427
 14496  0116A2  EE20 F002          	lfsr	2,2
 14497  0116A6  502E               	movf	button_timer_interrupt@bt,w,c
 14498  0116A8  26D9               	addwf	fsr2l,f,c
 14499  0116AA  502F               	movf	button_timer_interrupt@bt+1,w,c
 14500  0116AC  22DA               	addwfc	fsr2h,f,c
 14501  0116AE  8CDF               	bsf	indf2,6,c
 14502  0116B0  D06F               	goto	i2l7451
 14503  0116B2                     i2l7427:
 14504                           
 14505                           ;My_button.c: 17: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 14506  0116B2  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14507  0116B6  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14508  0116BA  0EF4               	movlw	244
 14509  0116BC  5CDE               	subwf	postinc2,w,c
 14510  0116BE  0E01               	movlw	1
 14511  0116C0  58DE               	subwfb	postinc2,w,c
 14512  0116C2  A0D8               	btfss	status,0,c
 14513  0116C4  D008               	goto	i2l7431
 14514  0116C6  EE20 F002          	lfsr	2,2
 14515  0116CA  502E               	movf	button_timer_interrupt@bt,w,c
 14516  0116CC  26D9               	addwf	fsr2l,f,c
 14517  0116CE  502F               	movf	button_timer_interrupt@bt+1,w,c
 14518  0116D0  22DA               	addwfc	fsr2h,f,c
 14519  0116D2  8ADF               	bsf	indf2,5,c
 14520  0116D4  D05D               	goto	i2l7451
 14521  0116D6                     i2l7431:
 14522                           
 14523                           ;My_button.c: 18: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 14524  0116D6  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14525  0116DA  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14526  0116DE  0E2C               	movlw	44
 14527  0116E0  5CDE               	subwf	postinc2,w,c
 14528  0116E2  0E01               	movlw	1
 14529  0116E4  58DE               	subwfb	postinc2,w,c
 14530  0116E6  A0D8               	btfss	status,0,c
 14531  0116E8  D008               	goto	i2l7435
 14532  0116EA  EE20 F002          	lfsr	2,2
 14533  0116EE  502E               	movf	button_timer_interrupt@bt,w,c
 14534  0116F0  26D9               	addwf	fsr2l,f,c
 14535  0116F2  502F               	movf	button_timer_interrupt@bt+1,w,c
 14536  0116F4  22DA               	addwfc	fsr2h,f,c
 14537  0116F6  88DF               	bsf	indf2,4,c
 14538  0116F8  D04B               	goto	i2l7451
 14539  0116FA                     i2l7435:
 14540                           
 14541                           ;My_button.c: 19: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 14542  0116FA  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14543  0116FE  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14544  011702  0E01               	movlw	1
 14545  011704  50DB               	movf	plusw2,w,c
 14546  011706  E104               	bnz	i2u714_40
 14547  011708  0E96               	movlw	150
 14548  01170A  5CDE               	subwf	postinc2,w,c
 14549  01170C  A0D8               	btfss	status,0,c
 14550  01170E  D008               	goto	i2l7439
 14551  011710                     i2u714_40:
 14552  011710  EE20 F002          	lfsr	2,2
 14553  011714  502E               	movf	button_timer_interrupt@bt,w,c
 14554  011716  26D9               	addwf	fsr2l,f,c
 14555  011718  502F               	movf	button_timer_interrupt@bt+1,w,c
 14556  01171A  22DA               	addwfc	fsr2h,f,c
 14557  01171C  86DF               	bsf	indf2,3,c
 14558  01171E  D038               	goto	i2l7451
 14559  011720                     i2l7439:
 14560                           
 14561                           ;My_button.c: 20: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 14562  011720  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14563  011724  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14564  011728  0E01               	movlw	1
 14565  01172A  50DB               	movf	plusw2,w,c
 14566  01172C  E104               	bnz	i2u715_40
 14567  01172E  0E3C               	movlw	60
 14568  011730  5CDE               	subwf	postinc2,w,c
 14569  011732  A0D8               	btfss	status,0,c
 14570  011734  D008               	goto	i2l7443
 14571  011736                     i2u715_40:
 14572  011736  EE20 F002          	lfsr	2,2
 14573  01173A  502E               	movf	button_timer_interrupt@bt,w,c
 14574  01173C  26D9               	addwf	fsr2l,f,c
 14575  01173E  502F               	movf	button_timer_interrupt@bt+1,w,c
 14576  011740  22DA               	addwfc	fsr2h,f,c
 14577  011742  84DF               	bsf	indf2,2,c
 14578  011744  D025               	goto	i2l7451
 14579  011746                     i2l7443:
 14580                           
 14581                           ;My_button.c: 21: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 14582  011746  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14583  01174A  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14584  01174E  0E01               	movlw	1
 14585  011750  50DB               	movf	plusw2,w,c
 14586  011752  E104               	bnz	i2u716_40
 14587  011754  0E10               	movlw	16
 14588  011756  5CDE               	subwf	postinc2,w,c
 14589  011758  A0D8               	btfss	status,0,c
 14590  01175A  D008               	goto	i2l7447
 14591  01175C                     i2u716_40:
 14592  01175C  EE20 F002          	lfsr	2,2
 14593  011760  502E               	movf	button_timer_interrupt@bt,w,c
 14594  011762  26D9               	addwf	fsr2l,f,c
 14595  011764  502F               	movf	button_timer_interrupt@bt+1,w,c
 14596  011766  22DA               	addwfc	fsr2h,f,c
 14597  011768  82DF               	bsf	indf2,1,c
 14598  01176A  D012               	goto	i2l7451
 14599  01176C                     i2l7447:
 14600                           
 14601                           ;My_button.c: 22: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 14602  01176C  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14603  011770  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14604  011774  0E01               	movlw	1
 14605  011776  50DB               	movf	plusw2,w,c
 14606  011778  E104               	bnz	i2u717_40
 14607  01177A  0E02               	movlw	2
 14608  01177C  5CDE               	subwf	postinc2,w,c
 14609  01177E  A0D8               	btfss	status,0,c
 14610  011780  D007               	goto	i2l7451
 14611  011782                     i2u717_40:
 14612  011782  EE20 F002          	lfsr	2,2
 14613  011786  502E               	movf	button_timer_interrupt@bt,w,c
 14614  011788  26D9               	addwf	fsr2l,f,c
 14615  01178A  502F               	movf	button_timer_interrupt@bt+1,w,c
 14616  01178C  22DA               	addwfc	fsr2h,f,c
 14617  01178E  80DF               	bsf	indf2,0,c
 14618  011790                     i2l7451:
 14619                           
 14620                           ;My_button.c: 23: bt->cnt_sw = 0;
 14621  011790  C02E  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 14622  011794  C02F  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 14623  011798  0E00               	movlw	0
 14624  01179A  6EDE               	movwf	postinc2,c
 14625  01179C  0E00               	movlw	0
 14626  01179E  6EDD               	movwf	postdec2,c
 14627                           
 14628                           ;My_button.c: 24: bt->flags &= 0x00FF;
 14629  0117A0  EE20 F002          	lfsr	2,2
 14630  0117A4  502E               	movf	button_timer_interrupt@bt,w,c
 14631  0117A6  26D9               	addwf	fsr2l,f,c
 14632  0117A8  502F               	movf	button_timer_interrupt@bt+1,w,c
 14633  0117AA  22DA               	addwfc	fsr2h,f,c
 14634  0117AC  0EFF               	movlw	255
 14635  0117AE  16DE               	andwf	postinc2,f,c
 14636  0117B0  0E00               	movlw	0
 14637  0117B2  16DD               	andwf	postdec2,f,c
 14638  0117B4  0012               	return	
 14639  0117B6                     __end_of_button_timer_interrupt:
 14640                           	opt stack 0
 14641                           pclatu	equ	0xFFB
 14642                           pclath	equ	0xFFA
 14643                           tblptru	equ	0xFF8
 14644                           tblptrh	equ	0xFF7
 14645                           tblptrl	equ	0xFF6
 14646                           tablat	equ	0xFF5
 14647                           prodh	equ	0xFF4
 14648                           prodl	equ	0xFF3
 14649                           intcon	equ	0xFF2
 14650                           intcon2	equ	0xFF1
 14651                           indf0	equ	0xFEF
 14652                           postinc0	equ	0xFEE
 14653                           fsr0h	equ	0xFEA
 14654                           fsr0l	equ	0xFE9
 14655                           wreg	equ	0xFE8
 14656                           indf1	equ	0xFE7
 14657                           postinc1	equ	0xFE6
 14658                           postdec1	equ	0xFE5
 14659                           fsr1h	equ	0xFE2
 14660                           fsr1l	equ	0xFE1
 14661                           indf2	equ	0xFDF
 14662                           postinc2	equ	0xFDE
 14663                           postdec2	equ	0xFDD
 14664                           plusw2	equ	0xFDB
 14665                           fsr2h	equ	0xFDA
 14666                           fsr2l	equ	0xFD9
 14667                           status	equ	0xFD8
 14668                           
 14669 ;; *************** function _USB_ISR *****************
 14670 ;; Defined at:
 14671 ;;		line 7 in file "../My_library/My_usb_cdc.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;		None
 14674 ;; Auto vars:     Size  Location     Type
 14675 ;;		None
 14676 ;; Return value:  Size  Location     Type
 14677 ;;		None               void
 14678 ;; Registers used:
 14679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : 0/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14689 ;;Total ram usage:        0 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:    9
 14692 ;; This function calls:
 14693 ;;		_USBDeviceTasks
 14694 ;; This function is called by:
 14695 ;;		_ISR
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           	psect	text62
 14700  0146B6                     __ptext62:
 14701                           	opt stack 0
 14702  0146B6                     _USB_ISR:
 14703                           	opt stack 11
 14704                           
 14705                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 14706                           
 14707                           ;incstack = 0
 14708  0146B6  EC1D  F090         	call	_USBDeviceTasks	;wreg free
 14709  0146BA  0012               	return		;funcret
 14710  0146BC                     __end_of_USB_ISR:
 14711                           	opt stack 0
 14712                           pclatu	equ	0xFFB
 14713                           pclath	equ	0xFFA
 14714                           tblptru	equ	0xFF8
 14715                           tblptrh	equ	0xFF7
 14716                           tblptrl	equ	0xFF6
 14717                           tablat	equ	0xFF5
 14718                           prodh	equ	0xFF4
 14719                           prodl	equ	0xFF3
 14720                           intcon	equ	0xFF2
 14721                           intcon2	equ	0xFF1
 14722                           indf0	equ	0xFEF
 14723                           postinc0	equ	0xFEE
 14724                           fsr0h	equ	0xFEA
 14725                           fsr0l	equ	0xFE9
 14726                           wreg	equ	0xFE8
 14727                           indf1	equ	0xFE7
 14728                           postinc1	equ	0xFE6
 14729                           postdec1	equ	0xFE5
 14730                           fsr1h	equ	0xFE2
 14731                           fsr1l	equ	0xFE1
 14732                           indf2	equ	0xFDF
 14733                           postinc2	equ	0xFDE
 14734                           postdec2	equ	0xFDD
 14735                           plusw2	equ	0xFDB
 14736                           fsr2h	equ	0xFDA
 14737                           fsr2l	equ	0xFD9
 14738                           status	equ	0xFD8
 14739                           
 14740 ;; *************** function _USBDeviceTasks *****************
 14741 ;; Defined at:
 14742 ;;		line 489 in file "../My_library/usb/usb_device.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;		None
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  i               1   29[COMRAM] unsigned char 
 14747 ;; Return value:  Size  Location     Type
 14748 ;;		None               void
 14749 ;; Registers used:
 14750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14760 ;;Total ram usage:        1 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; Hardware stack levels required when called:    8
 14763 ;; This function calls:
 14764 ;;		_USBCtrlEPAllowStatusStage
 14765 ;;		_USBCtrlEPService
 14766 ;;		_USBStallHandler
 14767 ;;		_USBSuspend
 14768 ;;		_USBWakeFromSuspend
 14769 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14770 ;;		i2_USBDeviceInit
 14771 ;; This function is called by:
 14772 ;;		_USB_ISR
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text63
 14777  01203A                     __ptext63:
 14778                           	opt stack 0
 14779  01203A                     _USBDeviceTasks:
 14780                           	opt stack 11
 14781                           
 14782                           ;usb_device.c: 491: uint8_t i;
 14783                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 14784                           
 14785                           ;incstack = 0
 14786  01203A  0422               	decf	_USBDeviceState,w,c	;volatile
 14787  01203C  B4D8               	btfsc	status,2,c
 14788                           
 14789                           ;usb_device.c: 603: {
 14790                           ;usb_device.c: 613: if(!UCONbits.SE0)
 14791  01203E  BA65               	btfsc	3941,5,c	;volatile
 14792  012040  D008               	goto	i2l6955
 14793                           
 14794                           ;usb_device.c: 614: {
 14795                           ;usb_device.c: 615: {UIR = 0;};
 14796  012042  0E00               	movlw	0
 14797  012044  6E62               	movwf	3938,c	;volatile
 14798                           
 14799                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 14800  012046  010F               	movlb	15	; () banked
 14801  012048  8136               	bsf	54,0,b	;volatile
 14802                           
 14803                           ; BSR set to: 15
 14804                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 14805  01204A  010F               	movlb	15	; () banked
 14806  01204C  8936               	bsf	54,4,b	;volatile
 14807                           
 14808                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 14809  01204E  0E02               	movlw	2
 14810  012050  6E22               	movwf	_USBDeviceState,c	;volatile
 14811  012052                     i2l6955:
 14812                           
 14813                           ;usb_device.c: 622: }
 14814                           ;usb_device.c: 623: }
 14815                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14816  012052  A462               	btfss	3938,2,c	;volatile
 14817  012054  D006               	goto	i2l6963
 14818  012056  010F               	movlb	15	; () banked
 14819  012058  A536               	btfss	54,2,b	;volatile
 14820  01205A  D003               	goto	i2l6963
 14821                           
 14822                           ; BSR set to: 15
 14823                           ;usb_device.c: 640: {
 14824                           ;usb_device.c: 641: (UIR &= 0xFB);
 14825  01205C  9462               	bcf	3938,2,c	;volatile
 14826                           
 14827                           ; BSR set to: 15
 14828                           ;usb_device.c: 645: USBWakeFromSuspend();
 14829  01205E  EC16  F0A2         	call	_USBWakeFromSuspend	;wreg free
 14830  012062                     i2l6963:
 14831                           
 14832                           ;usb_device.c: 647: }
 14833                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14834  012062  A265               	btfss	3941,1,c	;volatile
 14835  012064  D002               	goto	i2l158
 14836                           
 14837                           ;usb_device.c: 653: {
 14838                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14839  012066  98A1               	bcf	4001,4,c	;volatile
 14840                           
 14841                           ;usb_device.c: 655: return;
 14842  012068  0012               	return	
 14843  01206A                     i2l158:
 14844                           
 14845                           ;usb_device.c: 656: }
 14846                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14847  01206A  A062               	btfss	3938,0,c	;volatile
 14848  01206C  D009               	goto	i2l6977
 14849  01206E  010F               	movlb	15	; () banked
 14850  012070  A136               	btfss	54,0,b	;volatile
 14851  012072  D006               	goto	i2l6977
 14852                           
 14853                           ; BSR set to: 15
 14854                           ;usb_device.c: 669: {
 14855                           ;usb_device.c: 670: USBDeviceInit();
 14856  012074  ECC2  F090         	call	i2_USBDeviceInit	;wreg free
 14857                           
 14858                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14859  012078  88A0               	bsf	4000,4,c	;volatile
 14860                           
 14861                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14862  01207A  0E04               	movlw	4
 14863  01207C  6E22               	movwf	_USBDeviceState,c	;volatile
 14864                           
 14865                           ;usb_device.c: 686: (UIR &= 0xFE);
 14866  01207E  9062               	bcf	3938,0,c	;volatile
 14867  012080                     i2l6977:
 14868                           
 14869                           ;usb_device.c: 687: }
 14870                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14871  012080  A862               	btfss	3938,4,c	;volatile
 14872  012082  D006               	goto	i2l6985
 14873  012084  010F               	movlb	15	; () banked
 14874  012086  A936               	btfss	54,4,b	;volatile
 14875  012088  D003               	goto	i2l6985
 14876                           
 14877                           ; BSR set to: 15
 14878                           ;usb_device.c: 693: {
 14879                           ;usb_device.c: 698: USBSuspend();
 14880  01208A  EC72  F0A2         	call	_USBSuspend	;wreg free
 14881                           
 14882                           ;usb_device.c: 701: (UIR &= 0xEF);
 14883  01208E  9862               	bcf	3938,4,c	;volatile
 14884  012090                     i2l6985:
 14885                           
 14886                           ;usb_device.c: 702: }
 14887                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 14888  012090  AC62               	btfss	3938,6,c	;volatile
 14889  012092  D019               	goto	i2l7001
 14890                           
 14891                           ;usb_device.c: 705: {
 14892                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 14893  012094  010F               	movlb	15	; () banked
 14894  012096  AD36               	btfss	54,6,b	;volatile
 14895  012098  D00E               	goto	i2l6991
 14896                           
 14897                           ; BSR set to: 15
 14898                           ;usb_device.c: 707: {
 14899                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14900  01209A  0E00               	movlw	0
 14901  01209C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14902  01209E  0E73               	movlw	115
 14903  0120A0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14904  0120A2  0E00               	movlw	0
 14905  0120A4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14906  0120A6  0E00               	movlw	0
 14907  0120A8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14908  0120AA  0E00               	movlw	0
 14909  0120AC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14910  0120AE  0E01               	movlw	1
 14911  0120B0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14912  0120B2  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14913  0120B6                     i2l6991:
 14914                           
 14915                           ;usb_device.c: 709: }
 14916                           ;usb_device.c: 710: (UIR &= 0xBF);
 14917  0120B6  9C62               	bcf	3938,6,c	;volatile
 14918                           
 14919                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14920  0120B8  5025               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14921  0120BA  A4D8               	btfss	status,2,c
 14922                           
 14923                           ;usb_device.c: 736: {
 14924                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14925  0120BC  0625               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14926                           
 14927                           ;usb_device.c: 738: }
 14928                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14929  0120BE  5025               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14930  0120C0  B4D8               	btfsc	status,2,c
 14931                           
 14932                           ;usb_device.c: 745: {
 14933                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14934  0120C2  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14935  0120C6                     i2l7001:
 14936                           
 14937                           ;usb_device.c: 747: }
 14938                           ;usb_device.c: 749: }
 14939                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 14940  0120C6  AA62               	btfss	3938,5,c	;volatile
 14941  0120C8  D004               	goto	i2l7007
 14942  0120CA  010F               	movlb	15	; () banked
 14943  0120CC  BB36               	btfsc	54,5,b	;volatile
 14944                           
 14945                           ; BSR set to: 15
 14946                           ;usb_device.c: 752: {
 14947                           ;usb_device.c: 753: USBStallHandler();
 14948  0120CE  EC2A  F0A1         	call	_USBStallHandler	;wreg free
 14949  0120D2                     i2l7007:
 14950                           
 14951                           ;usb_device.c: 754: }
 14952                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 14953  0120D2  A262               	btfss	3938,1,c	;volatile
 14954  0120D4  D012               	goto	i2l7015
 14955  0120D6  010F               	movlb	15	; () banked
 14956  0120D8  A336               	btfss	54,1,b	;volatile
 14957  0120DA  D00F               	goto	i2l7015
 14958                           
 14959                           ; BSR set to: 15
 14960                           ;usb_device.c: 757: {
 14961                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 14962  0120DC  0E7F               	movlw	127
 14963  0120DE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14964  0120E0  683A               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14965  0120E2  0E00               	movlw	0
 14966  0120E4  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14967  0120E6  0E00               	movlw	0
 14968  0120E8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14969  0120EA  0E00               	movlw	0
 14970  0120EC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14971  0120EE  0E01               	movlw	1
 14972  0120F0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14973  0120F2  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14974                           
 14975                           ;usb_device.c: 759: {UEIR = 0;};
 14976  0120F6  0E00               	movlw	0
 14977  0120F8  6E63               	movwf	3939,c	;volatile
 14978  0120FA                     i2l7015:
 14979                           
 14980                           ;usb_device.c: 767: }
 14981                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 14982  0120FA  0E04               	movlw	4
 14983  0120FC  6022               	cpfslt	_USBDeviceState,c	;volatile
 14984  0120FE  D002               	goto	i2l168
 14985                           
 14986                           ;usb_device.c: 775: {
 14987                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 14988  012100  98A1               	bcf	4001,4,c	;volatile
 14989                           
 14990                           ;usb_device.c: 777: return;
 14991  012102  0012               	return	
 14992  012104                     i2l168:
 14993                           
 14994                           ;usb_device.c: 778: }
 14995                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 14996  012104  010F               	movlb	15	; () banked
 14997  012106  A736               	btfss	54,3,b	;volatile
 14998  012108  D03B               	goto	i2l169
 14999                           
 15000                           ; BSR set to: 15
 15001                           ;usb_device.c: 784: {
 15002                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 15003  01210A  0E00               	movlw	0
 15004  01210C  6E4B               	movwf	USBDeviceTasks@i,c
 15005  01210E                     i2l7021:
 15006                           
 15007                           ; BSR set to: 15
 15008  01210E  0E03               	movlw	3
 15009  012110  644B               	cpfsgt	USBDeviceTasks@i,c
 15010  012112  D001               	goto	i2l170
 15011  012114  D035               	goto	i2l169
 15012  012116                     i2l170:
 15013                           
 15014                           ;usb_device.c: 786: {
 15015                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 15016  012116  A662               	btfss	3938,3,c	;volatile
 15017  012118  D033               	goto	i2l169
 15018                           
 15019                           ;usb_device.c: 788: {
 15020                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 15021  01211A  CF64 F02D          	movff	3940,_USTATcopy	;volatile
 15022                           
 15023                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 15024  01211E  302D               	rrcf	_USTATcopy,w,c	;volatile
 15025  012120  32E8               	rrcf	wreg,f,c
 15026  012122  32E8               	rrcf	wreg,f,c
 15027  012124  0B0F               	andlw	15
 15028  012126  6E28               	movwf	_endpoint_number,c	;volatile
 15029                           
 15030                           ;usb_device.c: 793: (UIR &= 0xF7);
 15031  012128  9662               	bcf	3938,3,c	;volatile
 15032                           
 15033                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 15034  01212A  B42D               	btfsc	_USTATcopy,2,c	;volatile
 15035  01212C  D00A               	goto	i2l7035
 15036                           
 15037                           ;usb_device.c: 799: {
 15038                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 15039  01212E  5028               	movf	_endpoint_number,w,c	;volatile
 15040  012130  0D01               	mullw	1
 15041  012132  0EDB               	movlw	low _ep_data_out
 15042  012134  24F3               	addwf	prodl,w,c
 15043  012136  6ED9               	movwf	fsr2l,c
 15044  012138  0E00               	movlw	high _ep_data_out
 15045  01213A  20F4               	addwfc	prodh,w,c
 15046  01213C  6EDA               	movwf	fsr2h,c
 15047  01213E  0100               	movlb	0	; () banked
 15048  012140  D008               	goto	L5
 15049  012142                     i2l7035:
 15050                           
 15051                           ;usb_device.c: 802: else
 15052                           ;usb_device.c: 803: {
 15053                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 15054  012142  5028               	movf	_endpoint_number,w,c	;volatile
 15055  012144  0D01               	mullw	1
 15056  012146  0E16               	movlw	low _ep_data_in
 15057  012148  24F3               	addwf	prodl,w,c
 15058  01214A  6ED9               	movwf	fsr2l,c
 15059  01214C  0E00               	movlw	high _ep_data_in
 15060  01214E  20F4               	addwfc	prodh,w,c
 15061  012150  6EDA               	movwf	fsr2h,c
 15062  012152                     L5:
 15063  012152  70DF               	btg	indf2,0,c
 15064                           
 15065                           ;usb_device.c: 805: }
 15066                           ;usb_device.c: 810: if(endpoint_number == 0)
 15067  012154  5028               	movf	_endpoint_number,w,c	;volatile
 15068  012156  A4D8               	btfss	status,2,c
 15069  012158  D003               	goto	i2l7041
 15070                           
 15071                           ;usb_device.c: 811: {
 15072                           ;usb_device.c: 812: USBCtrlEPService();
 15073  01215A  ECB9  F097         	call	_USBCtrlEPService	;wreg free
 15074                           
 15075                           ;usb_device.c: 813: }
 15076  01215E  D00E               	goto	i2l7043
 15077  012160                     i2l7041:
 15078                           
 15079                           ;usb_device.c: 814: else
 15080                           ;usb_device.c: 815: {
 15081                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 15082  012160  0E00               	movlw	0
 15083  012162  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15084  012164  0E72               	movlw	114
 15085  012166  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15086  012168  0E2D               	movlw	low _USTATcopy
 15087  01216A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15088  01216C  0E00               	movlw	high _USTATcopy
 15089  01216E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15090  012170  0E00               	movlw	0
 15091  012172  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15092  012174  0E00               	movlw	0
 15093  012176  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15094  012178  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15095  01217C                     i2l7043:
 15096  01217C  2A4B               	incf	USBDeviceTasks@i,f,c
 15097  01217E  D7C7               	goto	i2l7021
 15098  012180                     i2l169:
 15099                           
 15100                           ;usb_device.c: 822: }
 15101                           ;usb_device.c: 823: }
 15102                           ;usb_device.c: 824: }
 15103                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 15104  012180  98A1               	bcf	4001,4,c	;volatile
 15105  012182  0012               	return		;funcret
 15106  012184                     __end_of_USBDeviceTasks:
 15107                           	opt stack 0
 15108                           pclatu	equ	0xFFB
 15109                           pclath	equ	0xFFA
 15110                           tblptru	equ	0xFF8
 15111                           tblptrh	equ	0xFF7
 15112                           tblptrl	equ	0xFF6
 15113                           tablat	equ	0xFF5
 15114                           prodh	equ	0xFF4
 15115                           prodl	equ	0xFF3
 15116                           intcon	equ	0xFF2
 15117                           intcon2	equ	0xFF1
 15118                           indf0	equ	0xFEF
 15119                           postinc0	equ	0xFEE
 15120                           fsr0h	equ	0xFEA
 15121                           fsr0l	equ	0xFE9
 15122                           wreg	equ	0xFE8
 15123                           indf1	equ	0xFE7
 15124                           postinc1	equ	0xFE6
 15125                           postdec1	equ	0xFE5
 15126                           fsr1h	equ	0xFE2
 15127                           fsr1l	equ	0xFE1
 15128                           indf2	equ	0xFDF
 15129                           postinc2	equ	0xFDE
 15130                           postdec2	equ	0xFDD
 15131                           plusw2	equ	0xFDB
 15132                           fsr2h	equ	0xFDA
 15133                           fsr2l	equ	0xFD9
 15134                           status	equ	0xFD8
 15135                           
 15136 ;; *************** function i2_USBDeviceInit *****************
 15137 ;; Defined at:
 15138 ;;		line 298 in file "../My_library/usb/usb_device.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 15143 ;; Return value:  Size  Location     Type
 15144 ;;		None               void
 15145 ;; Registers used:
 15146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15156 ;;Total ram usage:        1 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:    1
 15159 ;; This function calls:
 15160 ;;		i2_memset
 15161 ;; This function is called by:
 15162 ;;		_USBDeviceTasks
 15163 ;; This function uses a non-reentrant model
 15164 ;;
 15165                           
 15166                           	psect	text64
 15167  012184                     __ptext64:
 15168                           	opt stack 0
 15169  012184                     i2_USBDeviceInit:
 15170                           	opt stack 17
 15171                           
 15172                           ;usb_device.c: 300: uint8_t i;
 15173                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 15174                           
 15175                           ;incstack = 0
 15176  012184  98A0               	bcf	4000,4,c	;volatile
 15177                           
 15178                           ;usb_device.c: 305: {UEIR = 0;};
 15179  012186  0E00               	movlw	0
 15180  012188  6E63               	movwf	3939,c	;volatile
 15181                           
 15182                           ;usb_device.c: 308: {UIR = 0;};
 15183  01218A  0E00               	movlw	0
 15184  01218C  6E62               	movwf	3938,c	;volatile
 15185                           
 15186                           ;usb_device.c: 311: UEP0 = 0;
 15187  01218E  0E00               	movlw	0
 15188  012190  010F               	movlb	15	; () banked
 15189  012192  6F26               	movwf	38,b	;volatile
 15190                           
 15191                           ; BSR set to: 15
 15192                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 15193  012194  0E27               	movlw	39
 15194  012196  6E2E               	movwf	i2memset@p1,c
 15195  012198  0E0F               	movlw	15
 15196  01219A  6E2F               	movwf	i2memset@p1+1,c
 15197  01219C  0E00               	movlw	0
 15198  01219E  6E31               	movwf	i2memset@c+1,c
 15199  0121A0  0E00               	movlw	0
 15200  0121A2  6E30               	movwf	i2memset@c,c
 15201  0121A4  0E00               	movlw	0
 15202  0121A6  6E33               	movwf	i2memset@n+1,c
 15203  0121A8  0E02               	movlw	2
 15204  0121AA  6E32               	movwf	i2memset@n,c
 15205  0121AC  EC88  F0A2         	call	i2_memset	;wreg free
 15206                           
 15207                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15208  0121B0  0E16               	movlw	22
 15209  0121B2  010F               	movlb	15	; () banked
 15210  0121B4  6F39               	movwf	57,b	;volatile
 15211                           
 15212                           ; BSR set to: 15
 15213  0121B6  0E9F               	movlw	159
 15214  0121B8  010F               	movlb	15	; () banked
 15215  0121BA  6F37               	movwf	55,b	;volatile
 15216                           
 15217                           ; BSR set to: 15
 15218  0121BC  0E7B               	movlw	123
 15219  0121BE  010F               	movlb	15	; () banked
 15220  0121C0  6F36               	movwf	54,b	;volatile
 15221                           
 15222                           ; BSR set to: 15
 15223                           ;usb_device.c: 318: ;
 15224                           ;usb_device.c: 321: ;
 15225                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 15226  0121C2  0E00               	movlw	0
 15227  0121C4  6E36               	movwf	i2USBDeviceInit@i,c
 15228  0121C6                     i2l6891:
 15229                           
 15230                           ; BSR set to: 15
 15231  0121C6  0E0B               	movlw	11
 15232  0121C8  6436               	cpfsgt	i2USBDeviceInit@i,c
 15233  0121CA  D001               	goto	i2l6895
 15234  0121CC  D00E               	goto	i2l146
 15235  0121CE                     i2l6895:
 15236                           
 15237                           ;usb_device.c: 325: {
 15238                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 15239  0121CE  5036               	movf	i2USBDeviceInit@i,w,c
 15240  0121D0  0D04               	mullw	4
 15241  0121D2  0E00               	movlw	0
 15242  0121D4  24F3               	addwf	prodl,w,c
 15243  0121D6  6ED9               	movwf	fsr2l,c
 15244  0121D8  0E0D               	movlw	13
 15245  0121DA  20F4               	addwfc	prodh,w,c
 15246  0121DC  6EDA               	movwf	fsr2h,c
 15247  0121DE  6ADE               	clrf	postinc2,c
 15248  0121E0  6ADE               	clrf	postinc2,c
 15249  0121E2  6ADE               	clrf	postinc2,c
 15250  0121E4  6ADD               	clrf	postdec2,c
 15251  0121E6  2A36               	incf	i2USBDeviceInit@i,f,c
 15252  0121E8  D7EE               	goto	i2l6891
 15253  0121EA                     i2l146:
 15254                           
 15255                           ;usb_device.c: 327: }
 15256                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 15257  0121EA  8C65               	bsf	3941,6,c	;volatile
 15258                           
 15259                           ;usb_device.c: 333: UADDR = 0x00;
 15260  0121EC  0E00               	movlw	0
 15261  0121EE  010F               	movlb	15	; () banked
 15262  0121F0  6F38               	movwf	56,b	;volatile
 15263                           
 15264                           ; BSR set to: 15
 15265                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 15266  0121F2  9865               	bcf	3941,4,c	;volatile
 15267                           
 15268                           ; BSR set to: 15
 15269                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 15270  0121F4  9C65               	bcf	3941,6,c	;volatile
 15271                           
 15272                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 15273  0121F6  D009               	goto	i2l6915
 15274  0121F8                     i2l6907:
 15275                           
 15276                           ;usb_device.c: 343: {
 15277                           ;usb_device.c: 344: (UIR &= 0xF7);
 15278  0121F8  9662               	bcf	3938,3,c	;volatile
 15279                           
 15280                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 15281  0121FA  0E00               	movlw	0
 15282  0121FC  6E0D               	movwf	_inPipes+3,c	;volatile
 15283                           
 15284                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 15285  0121FE  0E00               	movlw	0
 15286  012200  6E04               	movwf	_outPipes+3,c	;volatile
 15287                           
 15288                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 15289  012202  0E00               	movlw	0
 15290  012204  6E06               	movwf	_outPipes+5,c	;volatile
 15291  012206  0E00               	movlw	0
 15292  012208  6E05               	movwf	_outPipes+4,c	;volatile
 15293  01220A                     i2l6915:
 15294  01220A  B662               	btfsc	3938,3,c	;volatile
 15295  01220C  D7F5               	goto	i2l6907
 15296                           
 15297                           ;usb_device.c: 349: }
 15298                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 15299  01220E  0E01               	movlw	1
 15300  012210  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15301                           
 15302                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 15303  012212  0E01               	movlw	1
 15304  012214  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15305                           
 15306                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 15307  012216  0E00               	movlw	0
 15308  012218  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15309                           
 15310                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 15311  01221A  0E00               	movlw	0
 15312  01221C  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15313                           
 15314                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 15315  01221E  0E00               	movlw	0
 15316  012220  0100               	movlb	0	; () banked
 15317  012222  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15318                           
 15319                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 15320  012224  0E00               	movlw	0
 15321  012226  6E36               	movwf	i2USBDeviceInit@i,c
 15322  012228                     i2l6919:
 15323                           
 15324                           ; BSR set to: 0
 15325  012228  0E02               	movlw	2
 15326  01222A  6436               	cpfsgt	i2USBDeviceInit@i,c
 15327  01222C  D001               	goto	i2l6923
 15328  01222E  D02E               	goto	i2l6929
 15329  012230                     i2l6923:
 15330                           
 15331                           ;usb_device.c: 363: {
 15332                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 15333  012230  5036               	movf	i2USBDeviceInit@i,w,c
 15334  012232  0D02               	mullw	2
 15335  012234  0E10               	movlw	low _pBDTEntryIn
 15336  012236  24F3               	addwf	prodl,w,c
 15337  012238  6ED9               	movwf	fsr2l,c
 15338  01223A  0E00               	movlw	high _pBDTEntryIn
 15339  01223C  20F4               	addwfc	prodh,w,c
 15340  01223E  6EDA               	movwf	fsr2h,c
 15341  012240  0E00               	movlw	0
 15342  012242  6EDE               	movwf	postinc2,c
 15343  012244  0E00               	movlw	0
 15344  012246  6EDD               	movwf	postdec2,c
 15345                           
 15346                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 15347  012248  5036               	movf	i2USBDeviceInit@i,w,c
 15348  01224A  0D02               	mullw	2
 15349  01224C  0ED5               	movlw	low _pBDTEntryOut
 15350  01224E  24F3               	addwf	prodl,w,c
 15351  012250  6ED9               	movwf	fsr2l,c
 15352  012252  0E00               	movlw	high _pBDTEntryOut
 15353  012254  20F4               	addwfc	prodh,w,c
 15354  012256  6EDA               	movwf	fsr2h,c
 15355  012258  0E00               	movlw	0
 15356  01225A  6EDE               	movwf	postinc2,c
 15357  01225C  0E00               	movlw	0
 15358  01225E  6EDD               	movwf	postdec2,c
 15359                           
 15360                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 15361  012260  5036               	movf	i2USBDeviceInit@i,w,c
 15362  012262  0D01               	mullw	1
 15363  012264  0E16               	movlw	low _ep_data_in
 15364  012266  24F3               	addwf	prodl,w,c
 15365  012268  6ED9               	movwf	fsr2l,c
 15366  01226A  0E00               	movlw	high _ep_data_in
 15367  01226C  20F4               	addwfc	prodh,w,c
 15368  01226E  6EDA               	movwf	fsr2h,c
 15369  012270  0E00               	movlw	0
 15370  012272  6EDF               	movwf	indf2,c
 15371                           
 15372                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 15373  012274  5036               	movf	i2USBDeviceInit@i,w,c
 15374  012276  0D01               	mullw	1
 15375  012278  0EDB               	movlw	low _ep_data_out
 15376  01227A  24F3               	addwf	prodl,w,c
 15377  01227C  6ED9               	movwf	fsr2l,c
 15378  01227E  0E00               	movlw	high _ep_data_out
 15379  012280  20F4               	addwfc	prodh,w,c
 15380  012282  6EDA               	movwf	fsr2h,c
 15381  012284  0E00               	movlw	0
 15382  012286  6EDF               	movwf	indf2,c
 15383  012288  2A36               	incf	i2USBDeviceInit@i,f,c
 15384  01228A  D7CE               	goto	i2l6919
 15385  01228C                     i2l6929:
 15386                           
 15387                           ;usb_device.c: 368: }
 15388                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15389  01228C  0E08               	movlw	8
 15390  01228E  6E10               	movwf	_pBDTEntryIn,c
 15391  012290  0E0D               	movlw	13
 15392  012292  6E11               	movwf	_pBDTEntryIn+1,c
 15393                           
 15394                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 15395  012294  0E16               	movlw	22
 15396  012296  010F               	movlb	15	; () banked
 15397  012298  6F26               	movwf	38,b	;volatile
 15398                           
 15399                           ; BSR set to: 15
 15400                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 15401  01229A  0E0D               	movlw	13
 15402  01229C  010D               	movlb	13	; () banked
 15403  01229E  6F03               	movwf	3,b	;volatile
 15404  0122A0  0E30               	movlw	48
 15405  0122A2  6F02               	movwf	2,b	;volatile
 15406                           
 15407                           ; BSR set to: 13
 15408                           ;usb_device.c: 376: BDT[0].CNT = 8;
 15409  0122A4  0E08               	movlw	8
 15410  0122A6  010D               	movlb	13	; () banked
 15411  0122A8  6F01               	movwf	1,b	;volatile
 15412                           
 15413                           ; BSR set to: 13
 15414                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 15415  0122AA  0E04               	movlw	4
 15416  0122AC  010D               	movlb	13	; () banked
 15417  0122AE  6F00               	movwf	0,b	;volatile
 15418                           
 15419                           ; BSR set to: 13
 15420                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 15421  0122B0  010D               	movlb	13	; () banked
 15422  0122B2  8F00               	bsf	0,7,b	;volatile
 15423                           
 15424                           ; BSR set to: 13
 15425                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 15426  0122B4  0E00               	movlw	0
 15427  0122B6  6E2C               	movwf	_USBActiveConfiguration,c	;volatile
 15428                           
 15429                           ; BSR set to: 13
 15430                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 15431  0122B8  0E00               	movlw	0
 15432  0122BA  6E22               	movwf	_USBDeviceState,c	;volatile
 15433                           
 15434                           ; BSR set to: 13
 15435  0122BC  0012               	return		;funcret
 15436  0122BE                     __end_ofi2_USBDeviceInit:
 15437                           	opt stack 0
 15438                           pclatu	equ	0xFFB
 15439                           pclath	equ	0xFFA
 15440                           tblptru	equ	0xFF8
 15441                           tblptrh	equ	0xFF7
 15442                           tblptrl	equ	0xFF6
 15443                           tablat	equ	0xFF5
 15444                           prodh	equ	0xFF4
 15445                           prodl	equ	0xFF3
 15446                           intcon	equ	0xFF2
 15447                           intcon2	equ	0xFF1
 15448                           indf0	equ	0xFEF
 15449                           postinc0	equ	0xFEE
 15450                           fsr0h	equ	0xFEA
 15451                           fsr0l	equ	0xFE9
 15452                           wreg	equ	0xFE8
 15453                           indf1	equ	0xFE7
 15454                           postinc1	equ	0xFE6
 15455                           postdec1	equ	0xFE5
 15456                           fsr1h	equ	0xFE2
 15457                           fsr1l	equ	0xFE1
 15458                           indf2	equ	0xFDF
 15459                           postinc2	equ	0xFDE
 15460                           postdec2	equ	0xFDD
 15461                           plusw2	equ	0xFDB
 15462                           fsr2h	equ	0xFDA
 15463                           fsr2l	equ	0xFD9
 15464                           status	equ	0xFD8
 15465                           
 15466 ;; *************** function _USBWakeFromSuspend *****************
 15467 ;; Defined at:
 15468 ;;		line 2302 in file "../My_library/usb/usb_device.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;		None
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;		None
 15473 ;; Return value:  Size  Location     Type
 15474 ;;		None               void
 15475 ;; Registers used:
 15476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;Total ram usage:        0 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    4
 15489 ;; This function calls:
 15490 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15491 ;; This function is called by:
 15492 ;;		_USBDeviceTasks
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text65
 15497  01442C                     __ptext65:
 15498                           	opt stack 0
 15499  01442C                     _USBWakeFromSuspend:
 15500                           	opt stack 14
 15501                           
 15502                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 15503                           
 15504                           ; BSR set to: 13
 15505                           ;incstack = 0
 15506  01442C  0E00               	movlw	0
 15507  01442E  0100               	movlb	0	; () banked
 15508  014430  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15509                           
 15510                           ; BSR set to: 0
 15511                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 15512  014432  0E00               	movlw	0
 15513  014434  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15514  014436  0E74               	movlw	116
 15515  014438  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15516  01443A  0E00               	movlw	0
 15517  01443C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15518  01443E  0E00               	movlw	0
 15519  014440  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15520  014442  0E00               	movlw	0
 15521  014444  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15522  014446  0E00               	movlw	0
 15523  014448  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15524  01444A  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15525                           
 15526                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 15527  01444E  9265               	bcf	3941,1,c	;volatile
 15528                           
 15529                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 15530  014450  010F               	movlb	15	; () banked
 15531  014452  9536               	bcf	54,2,b	;volatile
 15532                           
 15533                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 15534  014454  D001               	goto	i2l6561
 15535  014456                     i2l6559:
 15536                           
 15537                           ;usb_device.c: 2342: {
 15538                           ;usb_device.c: 2343: (UIR &= 0xFB);
 15539  014456  9462               	bcf	3938,2,c	;volatile
 15540  014458                     i2l6561:
 15541  014458  A462               	btfss	3938,2,c	;volatile
 15542  01445A  0012               	return	
 15543  01445C  D7FC               	goto	i2l6559
 15544  01445E                     __end_of_USBWakeFromSuspend:
 15545                           	opt stack 0
 15546                           pclatu	equ	0xFFB
 15547                           pclath	equ	0xFFA
 15548                           tblptru	equ	0xFF8
 15549                           tblptrh	equ	0xFF7
 15550                           tblptrl	equ	0xFF6
 15551                           tablat	equ	0xFF5
 15552                           prodh	equ	0xFF4
 15553                           prodl	equ	0xFF3
 15554                           intcon	equ	0xFF2
 15555                           intcon2	equ	0xFF1
 15556                           indf0	equ	0xFEF
 15557                           postinc0	equ	0xFEE
 15558                           fsr0h	equ	0xFEA
 15559                           fsr0l	equ	0xFE9
 15560                           wreg	equ	0xFE8
 15561                           indf1	equ	0xFE7
 15562                           postinc1	equ	0xFE6
 15563                           postdec1	equ	0xFE5
 15564                           fsr1h	equ	0xFE2
 15565                           fsr1l	equ	0xFE1
 15566                           indf2	equ	0xFDF
 15567                           postinc2	equ	0xFDE
 15568                           postdec2	equ	0xFDD
 15569                           plusw2	equ	0xFDB
 15570                           fsr2h	equ	0xFDA
 15571                           fsr2l	equ	0xFD9
 15572                           status	equ	0xFD8
 15573                           
 15574 ;; *************** function _USBSuspend *****************
 15575 ;; Defined at:
 15576 ;;		line 2245 in file "../My_library/usb/usb_device.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;		None               void
 15583 ;; Registers used:
 15584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:    4
 15597 ;; This function calls:
 15598 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15599 ;; This function is called by:
 15600 ;;		_USBDeviceTasks
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text66
 15605  0144E4                     __ptext66:
 15606                           	opt stack 0
 15607  0144E4                     _USBSuspend:
 15608                           	opt stack 14
 15609                           
 15610                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 15611                           
 15612                           ;incstack = 0
 15613  0144E4  010F               	movlb	15	; () banked
 15614  0144E6  8536               	bsf	54,2,b	;volatile
 15615                           
 15616                           ; BSR set to: 15
 15617                           ;usb_device.c: 2271: (UIR &= 0xEF);
 15618  0144E8  9862               	bcf	3938,4,c	;volatile
 15619                           
 15620                           ; BSR set to: 15
 15621                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 15622  0144EA  8265               	bsf	3941,1,c	;volatile
 15623                           
 15624                           ; BSR set to: 15
 15625                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 15626  0144EC  0E01               	movlw	1
 15627  0144EE  0100               	movlb	0	; () banked
 15628  0144F0  6FEC               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 15629                           
 15630                           ; BSR set to: 0
 15631                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 15632  0144F2  0E00               	movlw	0
 15633  0144F4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15634  0144F6  0E75               	movlw	117
 15635  0144F8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15636  0144FA  0E00               	movlw	0
 15637  0144FC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15638  0144FE  0E00               	movlw	0
 15639  014500  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15640  014502  0E00               	movlw	0
 15641  014504  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15642  014506  0E00               	movlw	0
 15643  014508  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15644  01450A  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15645  01450E  0012               	return		;funcret
 15646  014510                     __end_of_USBSuspend:
 15647                           	opt stack 0
 15648                           pclatu	equ	0xFFB
 15649                           pclath	equ	0xFFA
 15650                           tblptru	equ	0xFF8
 15651                           tblptrh	equ	0xFF7
 15652                           tblptrl	equ	0xFF6
 15653                           tablat	equ	0xFF5
 15654                           prodh	equ	0xFF4
 15655                           prodl	equ	0xFF3
 15656                           intcon	equ	0xFF2
 15657                           intcon2	equ	0xFF1
 15658                           indf0	equ	0xFEF
 15659                           postinc0	equ	0xFEE
 15660                           fsr0h	equ	0xFEA
 15661                           fsr0l	equ	0xFE9
 15662                           wreg	equ	0xFE8
 15663                           indf1	equ	0xFE7
 15664                           postinc1	equ	0xFE6
 15665                           postdec1	equ	0xFE5
 15666                           fsr1h	equ	0xFE2
 15667                           fsr1l	equ	0xFE1
 15668                           indf2	equ	0xFDF
 15669                           postinc2	equ	0xFDE
 15670                           postdec2	equ	0xFDD
 15671                           plusw2	equ	0xFDB
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function _USBStallHandler *****************
 15677 ;; Defined at:
 15678 ;;		line 2202 in file "../My_library/usb/usb_device.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;		None
 15683 ;; Return value:  Size  Location     Type
 15684 ;;		None               void
 15685 ;; Registers used:
 15686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15696 ;;Total ram usage:        1 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; This function calls:
 15699 ;;		Nothing
 15700 ;; This function is called by:
 15701 ;;		_USBDeviceTasks
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text67
 15706  014254                     __ptext67:
 15707                           	opt stack 0
 15708  014254                     _USBStallHandler:
 15709                           	opt stack 18
 15710                           
 15711                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 15712                           
 15713                           ;incstack = 0
 15714  014254  010F               	movlb	15	; () banked
 15715  014256  A126               	btfss	38,0,b	;volatile
 15716  014258  D01E               	goto	i2l308
 15717                           
 15718                           ; BSR set to: 15
 15719                           ;usb_device.c: 2215: {
 15720                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 15721  01425A  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15722  01425E  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15723  014262  0E80               	movlw	128
 15724  014264  18DE               	xorwf	postinc2,w,c
 15725  014266  A4D8               	btfss	status,2,c
 15726  014268  D014               	goto	i2l6583
 15727                           
 15728                           ; BSR set to: 15
 15729  01426A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 15730  01426E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15731  014272  0E84               	movlw	132
 15732  014274  18DE               	xorwf	postinc2,w,c
 15733  014276  A4D8               	btfss	status,2,c
 15734  014278  D00C               	goto	i2l6583
 15735                           
 15736                           ; BSR set to: 15
 15737                           ;usb_device.c: 2218: {
 15738                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15739  01427A  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15740  01427E  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15741  014282  0E0C               	movlw	12
 15742  014284  6EDF               	movwf	indf2,c
 15743                           
 15744                           ; BSR set to: 15
 15745                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15746  014286  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15747  01428A  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15748  01428E  0E00               	movlw	0
 15749  014290  8EDB               	bsf	plusw2,7,c
 15750  014292                     i2l6583:
 15751                           
 15752                           ; BSR set to: 15
 15753                           ;usb_device.c: 2222: }
 15754                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 15755  014292  010F               	movlb	15	; () banked
 15756  014294  9126               	bcf	38,0,b	;volatile
 15757  014296                     i2l308:
 15758                           
 15759                           ; BSR set to: 15
 15760                           ;usb_device.c: 2224: }
 15761                           ;usb_device.c: 2226: (UIR &= 0xDF);
 15762  014296  9A62               	bcf	3938,5,c	;volatile
 15763                           
 15764                           ; BSR set to: 15
 15765  014298  0012               	return		;funcret
 15766  01429A                     __end_of_USBStallHandler:
 15767                           	opt stack 0
 15768                           pclatu	equ	0xFFB
 15769                           pclath	equ	0xFFA
 15770                           tblptru	equ	0xFF8
 15771                           tblptrh	equ	0xFF7
 15772                           tblptrl	equ	0xFF6
 15773                           tablat	equ	0xFF5
 15774                           prodh	equ	0xFF4
 15775                           prodl	equ	0xFF3
 15776                           intcon	equ	0xFF2
 15777                           intcon2	equ	0xFF1
 15778                           indf0	equ	0xFEF
 15779                           postinc0	equ	0xFEE
 15780                           fsr0h	equ	0xFEA
 15781                           fsr0l	equ	0xFE9
 15782                           wreg	equ	0xFE8
 15783                           indf1	equ	0xFE7
 15784                           postinc1	equ	0xFE6
 15785                           postdec1	equ	0xFE5
 15786                           fsr1h	equ	0xFE2
 15787                           fsr1l	equ	0xFE1
 15788                           indf2	equ	0xFDF
 15789                           postinc2	equ	0xFDE
 15790                           postdec2	equ	0xFDD
 15791                           plusw2	equ	0xFDB
 15792                           fsr2h	equ	0xFDA
 15793                           fsr2l	equ	0xFD9
 15794                           status	equ	0xFD8
 15795                           
 15796 ;; *************** function _USBCtrlEPService *****************
 15797 ;; Defined at:
 15798 ;;		line 2369 in file "../My_library/usb/usb_device.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;		None
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15803 ;; Return value:  Size  Location     Type
 15804 ;;		None               void
 15805 ;; Registers used:
 15806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15807 ;; Tracked objects:
 15808 ;;		On entry : 0/0
 15809 ;;		On exit  : 0/0
 15810 ;;		Unchanged: 0/0
 15811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15814 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15815 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15816 ;;Total ram usage:        3 bytes
 15817 ;; Hardware stack levels used:    1
 15818 ;; Hardware stack levels required when called:    7
 15819 ;; This function calls:
 15820 ;;		_USBCtrlTrfInHandler
 15821 ;;		_USBCtrlTrfOutHandler
 15822 ;;		_USBCtrlTrfSetupHandler
 15823 ;; This function is called by:
 15824 ;;		_USBDeviceTasks
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           	psect	text68
 15829  012F72                     __ptext68:
 15830                           	opt stack 0
 15831  012F72                     _USBCtrlEPService:
 15832                           	opt stack 11
 15833                           
 15834                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15835                           
 15836                           ; BSR set to: 15
 15837                           ;incstack = 0
 15838  012F72  0E2D               	movlw	45
 15839  012F74  6E25               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15840                           
 15841                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15842  012F76  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15843  012F7A  0EFD               	movlw	253
 15844  012F7C  1648               	andwf	??_USBCtrlEPService,f,c
 15845  012F7E  A4D8               	btfss	status,2,c
 15846  012F80  D057               	goto	i2l6617
 15847                           
 15848                           ;usb_device.c: 2380: {
 15849                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15850  012F82  C02D  F048         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15851  012F86  90D8               	bcf	status,0,c
 15852  012F88  3248               	rrcf	??_USBCtrlEPService,f,c
 15853  012F8A  0E3F               	movlw	63
 15854  012F8C  1648               	andwf	??_USBCtrlEPService,f,c
 15855  012F8E  5048               	movf	??_USBCtrlEPService,w,c
 15856  012F90  0D04               	mullw	4
 15857  012F92  0E00               	movlw	0
 15858  012F94  24F3               	addwf	prodl,w,c
 15859  012F96  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 15860  012F98  0E0D               	movlw	13
 15861  012F9A  20F4               	addwfc	prodh,w,c
 15862  012F9C  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15863                           
 15864                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15865  012F9E  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15866  012FA2  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15867                           
 15868                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15869  012FA6  0E04               	movlw	4
 15870  012FA8  1A1B               	xorwf	_pBDTEntryEP0OutNext,f,c
 15871                           
 15872                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15873  012FAA  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15874  012FAE  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15875  012FB2  30DF               	rrcf	indf2,w,c
 15876  012FB4  32E8               	rrcf	wreg,f,c
 15877  012FB6  0B0F               	andlw	15
 15878  012FB8  0A0D               	xorlw	13
 15879  012FBA  A4D8               	btfss	status,2,c
 15880  012FBC  D036               	goto	i2l6615
 15881                           
 15882                           ;usb_device.c: 2397: {
 15883                           ;usb_device.c: 2398: unsigned char setup_cnt;
 15884                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15885  012FBE  0E00               	movlw	0
 15886  012FC0  6E4A               	movwf	USBCtrlEPService@setup_cnt,c
 15887  012FC2                     i2l6599:
 15888  012FC2  0E07               	movlw	7
 15889  012FC4  644A               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15890  012FC6  D001               	goto	i2l6603
 15891  012FC8  D023               	goto	i2l6611
 15892  012FCA                     i2l6603:
 15893                           
 15894                           ;usb_device.c: 2405: {
 15895                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15896  012FCA  EE20 F002          	lfsr	2,2
 15897  012FCE  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15898  012FD0  26D9               	addwf	fsr2l,f,c
 15899  012FD2  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15900  012FD4  22DA               	addwfc	fsr2h,f,c
 15901  012FD6  CFDE F048          	movff	postinc2,??_USBCtrlEPService
 15902  012FDA  CFDD F049          	movff	postdec2,??_USBCtrlEPService+1
 15903  012FDE  C048  FFD9         	movff	??_USBCtrlEPService,fsr2l
 15904  012FE2  C049  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 15905  012FE6  504A               	movf	USBCtrlEPService@setup_cnt,w,c
 15906  012FE8  0D01               	mullw	1
 15907  012FEA  0E30               	movlw	48
 15908  012FEC  24F3               	addwf	prodl,w,c
 15909  012FEE  6EE1               	movwf	fsr1l,c
 15910  012FF0  0E0D               	movlw	13
 15911  012FF2  20F4               	addwfc	prodh,w,c
 15912  012FF4  6EE2               	movwf	fsr1h,c
 15913  012FF6  CFDF FFE7          	movff	indf2,indf1
 15914                           
 15915                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 15916  012FFA  EE20 F002          	lfsr	2,2
 15917  012FFE  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15918  013000  26D9               	addwf	fsr2l,f,c
 15919  013002  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15920  013004  22DA               	addwfc	fsr2h,f,c
 15921  013006  2ADE               	incf	postinc2,f,c
 15922  013008  0E00               	movlw	0
 15923  01300A  22DD               	addwfc	postdec2,f,c
 15924  01300C  2A4A               	incf	USBCtrlEPService@setup_cnt,f,c
 15925  01300E  D7D9               	goto	i2l6599
 15926  013010                     i2l6611:
 15927                           
 15928                           ;usb_device.c: 2408: }
 15929                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15930  013010  EE20 F002          	lfsr	2,2
 15931  013014  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 15932  013016  26D9               	addwf	fsr2l,f,c
 15933  013018  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15934  01301A  22DA               	addwfc	fsr2h,f,c
 15935  01301C  0E30               	movlw	48
 15936  01301E  6EDE               	movwf	postinc2,c
 15937  013020  0E0D               	movlw	13
 15938  013022  6EDD               	movwf	postdec2,c
 15939                           
 15940                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 15941  013024  EC9E  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 15942                           
 15943                           ;usb_device.c: 2413: }
 15944  013028  0012               	return	
 15945  01302A                     i2l6615:
 15946                           
 15947                           ;usb_device.c: 2414: else
 15948                           ;usb_device.c: 2415: {
 15949                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 15950  01302A  EC84  F0A0         	call	_USBCtrlTrfOutHandler	;wreg free
 15951                           
 15952                           ;usb_device.c: 2418: }
 15953                           ;usb_device.c: 2419: }
 15954  01302E  0012               	return	
 15955  013030                     i2l6617:
 15956                           
 15957                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 15958  013030  502D               	movf	_USTATcopy,w,c	;volatile
 15959  013032  0BFD               	andlw	253
 15960  013034  0A04               	xorlw	4
 15961  013036  A4D8               	btfss	status,2,c
 15962  013038  0012               	return	
 15963                           
 15964                           ;usb_device.c: 2421: {
 15965                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 15966  01303A  ECBD  F09A         	call	_USBCtrlTrfInHandler	;wreg free
 15967  01303E  0012               	return	
 15968  013040                     __end_of_USBCtrlEPService:
 15969                           	opt stack 0
 15970                           pclatu	equ	0xFFB
 15971                           pclath	equ	0xFFA
 15972                           tblptru	equ	0xFF8
 15973                           tblptrh	equ	0xFF7
 15974                           tblptrl	equ	0xFF6
 15975                           tablat	equ	0xFF5
 15976                           prodh	equ	0xFF4
 15977                           prodl	equ	0xFF3
 15978                           intcon	equ	0xFF2
 15979                           intcon2	equ	0xFF1
 15980                           indf0	equ	0xFEF
 15981                           postinc0	equ	0xFEE
 15982                           fsr0h	equ	0xFEA
 15983                           fsr0l	equ	0xFE9
 15984                           wreg	equ	0xFE8
 15985                           indf1	equ	0xFE7
 15986                           postinc1	equ	0xFE6
 15987                           postdec1	equ	0xFE5
 15988                           fsr1h	equ	0xFE2
 15989                           fsr1l	equ	0xFE1
 15990                           indf2	equ	0xFDF
 15991                           postinc2	equ	0xFDE
 15992                           postdec2	equ	0xFDD
 15993                           plusw2	equ	0xFDB
 15994                           fsr2h	equ	0xFDA
 15995                           fsr2l	equ	0xFD9
 15996                           status	equ	0xFD8
 15997                           
 15998 ;; *************** function _USBCtrlTrfSetupHandler *****************
 15999 ;; Defined at:
 16000 ;;		line 2469 in file "../My_library/usb/usb_device.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;		None
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;		None               void
 16007 ;; Registers used:
 16008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16018 ;;Total ram usage:        0 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:    6
 16021 ;; This function calls:
 16022 ;;		_USBCheckStdRequest
 16023 ;;		_USBCtrlEPServiceComplete
 16024 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16025 ;; This function is called by:
 16026 ;;		_USBCtrlEPService
 16027 ;; This function uses a non-reentrant model
 16028 ;;
 16029                           
 16030                           	psect	text69
 16031  013D3C                     __ptext69:
 16032                           	opt stack 0
 16033  013D3C                     _USBCtrlTrfSetupHandler:
 16034                           	opt stack 11
 16035                           
 16036                           ;usb_device.c: 2474: shortPacketStatus = 0;
 16037                           
 16038                           ;incstack = 0
 16039  013D3C  0E00               	movlw	0
 16040  013D3E  6E29               	movwf	_shortPacketStatus,c	;volatile
 16041                           
 16042                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 16043  013D40  0E00               	movlw	0
 16044  013D42  6E21               	movwf	_USBDeferStatusStagePacket,c	;volatile
 16045                           
 16046                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 16047  013D44  0E00               	movlw	0
 16048  013D46  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16049                           
 16050                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 16051  013D48  0E00               	movlw	0
 16052  013D4A  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16053                           
 16054                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 16055  013D4C  0E00               	movlw	0
 16056  013D4E  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 16057                           
 16058                           ;usb_device.c: 2479: controlTransferState = 0;
 16059  013D50  0E00               	movlw	0
 16060  013D52  6E27               	movwf	_controlTransferState,c	;volatile
 16061                           
 16062                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16063  013D54  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16064  013D58  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16065  013D5C  0E7F               	movlw	127
 16066  013D5E  16DF               	andwf	indf2,f,c
 16067                           
 16068                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16069  013D60  0E04               	movlw	4
 16070  013D62  1A10               	xorwf	_pBDTEntryIn,f,c
 16071                           
 16072                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 16073  013D64  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16074  013D68  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16075  013D6C  0E7F               	movlw	127
 16076  013D6E  16DF               	andwf	indf2,f,c
 16077                           
 16078                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16079  013D70  0E04               	movlw	4
 16080  013D72  1A10               	xorwf	_pBDTEntryIn,f,c
 16081                           
 16082                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 16083  013D74  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16084  013D78  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16085  013D7C  0E7F               	movlw	127
 16086  013D7E  16DF               	andwf	indf2,f,c
 16087                           
 16088                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 16089  013D80  0E00               	movlw	0
 16090  013D82  6E0D               	movwf	_inPipes+3,c	;volatile
 16091                           
 16092                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 16093  013D84  0E00               	movlw	0
 16094  013D86  6E0F               	movwf	_inPipes+5,c	;volatile
 16095  013D88  0E00               	movlw	0
 16096  013D8A  6E0E               	movwf	_inPipes+4,c	;volatile
 16097                           
 16098                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 16099  013D8C  0E00               	movlw	0
 16100  013D8E  6E04               	movwf	_outPipes+3,c	;volatile
 16101                           
 16102                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 16103  013D90  0E00               	movlw	0
 16104  013D92  6E06               	movwf	_outPipes+5,c	;volatile
 16105  013D94  0E00               	movlw	0
 16106  013D96  6E05               	movwf	_outPipes+4,c	;volatile
 16107                           
 16108                           ;usb_device.c: 2503: USBCheckStdRequest();
 16109  013D98  EC38  F095         	call	_USBCheckStdRequest	;wreg free
 16110                           
 16111                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 16112  013D9C  0E00               	movlw	0
 16113  013D9E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16114  013DA0  0E03               	movlw	3
 16115  013DA2  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16116  013DA4  0E00               	movlw	0
 16117  013DA6  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16118  013DA8  0E00               	movlw	0
 16119  013DAA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16120  013DAC  0E00               	movlw	0
 16121  013DAE  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16122  013DB0  0E00               	movlw	0
 16123  013DB2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16124  013DB4  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16125                           
 16126                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 16127  013DB8  ECF7  F092         	call	_USBCtrlEPServiceComplete	;wreg free
 16128  013DBC  0012               	return		;funcret
 16129  013DBE                     __end_of_USBCtrlTrfSetupHandler:
 16130                           	opt stack 0
 16131                           pclatu	equ	0xFFB
 16132                           pclath	equ	0xFFA
 16133                           tblptru	equ	0xFF8
 16134                           tblptrh	equ	0xFF7
 16135                           tblptrl	equ	0xFF6
 16136                           tablat	equ	0xFF5
 16137                           prodh	equ	0xFF4
 16138                           prodl	equ	0xFF3
 16139                           intcon	equ	0xFF2
 16140                           intcon2	equ	0xFF1
 16141                           indf0	equ	0xFEF
 16142                           postinc0	equ	0xFEE
 16143                           fsr0h	equ	0xFEA
 16144                           fsr0l	equ	0xFE9
 16145                           wreg	equ	0xFE8
 16146                           indf1	equ	0xFE7
 16147                           postinc1	equ	0xFE6
 16148                           postdec1	equ	0xFE5
 16149                           fsr1h	equ	0xFE2
 16150                           fsr1l	equ	0xFE1
 16151                           indf2	equ	0xFDF
 16152                           postinc2	equ	0xFDE
 16153                           postdec2	equ	0xFDD
 16154                           plusw2	equ	0xFDB
 16155                           fsr2h	equ	0xFDA
 16156                           fsr2l	equ	0xFD9
 16157                           status	equ	0xFD8
 16158                           
 16159 ;; *************** function _USBCtrlEPServiceComplete *****************
 16160 ;; Defined at:
 16161 ;;		line 1616 in file "../My_library/usb/usb_device.c"
 16162 ;; Parameters:    Size  Location     Type
 16163 ;;		None
 16164 ;; Auto vars:     Size  Location     Type
 16165 ;;		None
 16166 ;; Return value:  Size  Location     Type
 16167 ;;		None               void
 16168 ;; Registers used:
 16169 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16170 ;; Tracked objects:
 16171 ;;		On entry : 0/0
 16172 ;;		On exit  : 0/0
 16173 ;;		Unchanged: 0/0
 16174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16179 ;;Total ram usage:        0 bytes
 16180 ;; Hardware stack levels used:    1
 16181 ;; Hardware stack levels required when called:    2
 16182 ;; This function calls:
 16183 ;;		_USBCtrlEPAllowDataStage
 16184 ;;		_USBCtrlEPAllowStatusStage
 16185 ;; This function is called by:
 16186 ;;		_USBCtrlTrfSetupHandler
 16187 ;; This function uses a non-reentrant model
 16188 ;;
 16189                           
 16190                           	psect	text70
 16191  0125EE                     __ptext70:
 16192                           	opt stack 0
 16193  0125EE                     _USBCtrlEPServiceComplete:
 16194                           	opt stack 14
 16195                           
 16196                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 16197                           
 16198                           ;incstack = 0
 16199  0125EE  9865               	bcf	3941,4,c	;volatile
 16200                           
 16201                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 16202  0125F0  BE0D               	btfsc	_inPipes+3,7,c	;volatile
 16203  0125F2  D038               	goto	i2l232
 16204                           
 16205                           ;usb_device.c: 1629: {
 16206                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 16207  0125F4  AE04               	btfss	_outPipes+3,7,c	;volatile
 16208  0125F6  D00B               	goto	i2l6177
 16209                           
 16210                           ;usb_device.c: 1631: {
 16211                           ;usb_device.c: 1632: controlTransferState = 2;
 16212  0125F8  0E02               	movlw	2
 16213  0125FA  6E27               	movwf	_controlTransferState,c	;volatile
 16214                           
 16215                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 16216  0125FC  5020               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 16217  0125FE  B4D8               	btfsc	status,2,c
 16218                           
 16219                           ;usb_device.c: 1644: {
 16220                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 16221  012600  ECB1  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16222                           
 16223                           ;usb_device.c: 1646: }
 16224                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 16225  012604  0E00               	movlw	0
 16226  012606  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16227                           
 16228                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 16229  012608  0E00               	movlw	0
 16230  01260A  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16231                           
 16232                           ;usb_device.c: 1652: }
 16233  01260C  0012               	return	
 16234  01260E                     i2l6177:
 16235                           
 16236                           ;usb_device.c: 1653: else
 16237                           ;usb_device.c: 1654: {
 16238                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 16239  01260E  EE20 F001          	lfsr	2,1
 16240  012612  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16241  012614  26D9               	addwf	fsr2l,f,c
 16242  012616  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16243  012618  22DA               	addwfc	fsr2h,f,c
 16244  01261A  0E08               	movlw	8
 16245  01261C  6EDF               	movwf	indf2,c
 16246                           
 16247                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16248  01261E  EE20 F002          	lfsr	2,2
 16249  012622  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16250  012624  26D9               	addwf	fsr2l,f,c
 16251  012626  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16252  012628  22DA               	addwfc	fsr2h,f,c
 16253  01262A  0E30               	movlw	48
 16254  01262C  6EDE               	movwf	postinc2,c
 16255  01262E  0E0D               	movlw	13
 16256  012630  6EDD               	movwf	postdec2,c
 16257                           
 16258                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16259  012632  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16260  012636  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16261  01263A  0E0C               	movlw	12
 16262  01263C  6EDF               	movwf	indf2,c
 16263                           
 16264                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16265  01263E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16266  012642  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16267  012646  0E00               	movlw	0
 16268  012648  8EDB               	bsf	plusw2,7,c
 16269                           
 16270                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 16271  01264A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16272  01264E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16273  012652  0E04               	movlw	4
 16274  012654  6EDF               	movwf	indf2,c
 16275                           
 16276                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16277  012656  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16278  01265A  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16279  01265E  0E00               	movlw	0
 16280  012660  8EDB               	bsf	plusw2,7,c
 16281                           
 16282                           ;usb_device.c: 1665: }
 16283                           ;usb_device.c: 1666: }
 16284  012662  0012               	return	
 16285  012664                     i2l232:
 16286                           
 16287                           ;usb_device.c: 1667: else
 16288                           ;usb_device.c: 1668: {
 16289                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 16290  012664  010D               	movlb	13	; () banked
 16291  012666  AF30               	btfss	48,7,b	;volatile
 16292  012668  D010               	goto	i2l6197
 16293                           
 16294                           ; BSR set to: 13
 16295                           ;usb_device.c: 1670: {
 16296                           ;usb_device.c: 1671: controlTransferState = 1;
 16297  01266A  0E01               	movlw	1
 16298  01266C  6E27               	movwf	_controlTransferState,c	;volatile
 16299                           
 16300                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 16301  01266E  501F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 16302  012670  B4D8               	btfsc	status,2,c
 16303                           
 16304                           ; BSR set to: 13
 16305                           ;usb_device.c: 1686: {
 16306                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 16307  012672  ECB1  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 16308                           
 16309                           ;usb_device.c: 1688: }
 16310                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 16311  012676  0E00               	movlw	0
 16312  012678  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16313                           
 16314                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 16315  01267A  0E00               	movlw	0
 16316  01267C  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16317                           
 16318                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 16319  01267E  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16320  012680  A4D8               	btfss	status,2,c
 16321  012682  0012               	return	
 16322                           
 16323                           ;usb_device.c: 1713: {
 16324                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 16325  012684  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16326                           
 16327                           ;usb_device.c: 1715: }
 16328                           ;usb_device.c: 1716: }
 16329  012688  0012               	return	
 16330  01268A                     i2l6197:
 16331                           
 16332                           ;usb_device.c: 1717: else
 16333                           ;usb_device.c: 1718: {
 16334                           ;usb_device.c: 1729: controlTransferState = 2;
 16335  01268A  0E02               	movlw	2
 16336  01268C  6E27               	movwf	_controlTransferState,c	;volatile
 16337                           
 16338                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 16339  01268E  EE20 F001          	lfsr	2,1
 16340  012692  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16341  012694  26D9               	addwf	fsr2l,f,c
 16342  012696  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16343  012698  22DA               	addwfc	fsr2h,f,c
 16344  01269A  0E08               	movlw	8
 16345  01269C  6EDF               	movwf	indf2,c
 16346                           
 16347                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16348  01269E  EE20 F002          	lfsr	2,2
 16349  0126A2  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16350  0126A4  26D9               	addwf	fsr2l,f,c
 16351  0126A6  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16352  0126A8  22DA               	addwfc	fsr2h,f,c
 16353  0126AA  0E30               	movlw	48
 16354  0126AC  6EDE               	movwf	postinc2,c
 16355  0126AE  0E0D               	movlw	13
 16356  0126B0  6EDD               	movwf	postdec2,c
 16357                           
 16358                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16359  0126B2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16360  0126B6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16361  0126BA  0E04               	movlw	4
 16362  0126BC  6EDF               	movwf	indf2,c
 16363                           
 16364                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16365  0126BE  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16366  0126C2  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16367  0126C6  0E00               	movlw	0
 16368  0126C8  8EDB               	bsf	plusw2,7,c
 16369                           
 16370                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 16371  0126CA  0E00               	movlw	0
 16372  0126CC  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16373                           
 16374                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 16375  0126CE  0E00               	movlw	0
 16376  0126D0  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16377                           
 16378                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 16379  0126D2  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 16380  0126D4  A4D8               	btfss	status,2,c
 16381  0126D6  0012               	return	
 16382                           
 16383                           ;usb_device.c: 1741: {
 16384                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 16385  0126D8  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16386  0126DC  0012               	return	
 16387  0126DE                     __end_of_USBCtrlEPServiceComplete:
 16388                           	opt stack 0
 16389                           pclatu	equ	0xFFB
 16390                           pclath	equ	0xFFA
 16391                           tblptru	equ	0xFF8
 16392                           tblptrh	equ	0xFF7
 16393                           tblptrl	equ	0xFF6
 16394                           tablat	equ	0xFF5
 16395                           prodh	equ	0xFF4
 16396                           prodl	equ	0xFF3
 16397                           intcon	equ	0xFF2
 16398                           intcon2	equ	0xFF1
 16399                           indf0	equ	0xFEF
 16400                           postinc0	equ	0xFEE
 16401                           fsr0h	equ	0xFEA
 16402                           fsr0l	equ	0xFE9
 16403                           wreg	equ	0xFE8
 16404                           indf1	equ	0xFE7
 16405                           postinc1	equ	0xFE6
 16406                           postdec1	equ	0xFE5
 16407                           fsr1h	equ	0xFE2
 16408                           fsr1l	equ	0xFE1
 16409                           indf2	equ	0xFDF
 16410                           postinc2	equ	0xFDE
 16411                           postdec2	equ	0xFDD
 16412                           plusw2	equ	0xFDB
 16413                           fsr2h	equ	0xFDA
 16414                           fsr2l	equ	0xFD9
 16415                           status	equ	0xFD8
 16416                           
 16417 ;; *************** function _USBCtrlEPAllowDataStage *****************
 16418 ;; Defined at:
 16419 ;;		line 1488 in file "../My_library/usb/usb_device.c"
 16420 ;; Parameters:    Size  Location     Type
 16421 ;;		None
 16422 ;; Auto vars:     Size  Location     Type
 16423 ;;		None
 16424 ;; Return value:  Size  Location     Type
 16425 ;;		None               void
 16426 ;; Registers used:
 16427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16428 ;; Tracked objects:
 16429 ;;		On entry : 0/0
 16430 ;;		On exit  : 0/0
 16431 ;;		Unchanged: 0/0
 16432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16437 ;;Total ram usage:        0 bytes
 16438 ;; Hardware stack levels used:    1
 16439 ;; Hardware stack levels required when called:    1
 16440 ;; This function calls:
 16441 ;;		_USBCtrlTrfTxService
 16442 ;; This function is called by:
 16443 ;;		_USBCtrlEPServiceComplete
 16444 ;; This function uses a non-reentrant model
 16445 ;;
 16446                           
 16447                           	psect	text71
 16448  013962                     __ptext71:
 16449                           	opt stack 0
 16450  013962                     _USBCtrlEPAllowDataStage:
 16451                           	opt stack 14
 16452                           
 16453                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 16454                           
 16455                           ;incstack = 0
 16456  013962  0E00               	movlw	0
 16457  013964  6E1F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16458                           
 16459                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 16460  013966  0E00               	movlw	0
 16461  013968  6E20               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16462                           
 16463                           ;usb_device.c: 1493: if(controlTransferState == 2)
 16464  01396A  0E02               	movlw	2
 16465  01396C  1827               	xorwf	_controlTransferState,w,c	;volatile
 16466  01396E  A4D8               	btfss	status,2,c
 16467  013970  D01F               	goto	i2l5731
 16468                           
 16469                           ;usb_device.c: 1494: {
 16470                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 16471  013972  EE20 F001          	lfsr	2,1
 16472  013976  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16473  013978  26D9               	addwf	fsr2l,f,c
 16474  01397A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16475  01397C  22DA               	addwfc	fsr2h,f,c
 16476  01397E  0E08               	movlw	8
 16477  013980  6EDF               	movwf	indf2,c
 16478                           
 16479                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16480  013982  EE20 F002          	lfsr	2,2
 16481  013986  501B               	movf	_pBDTEntryEP0OutNext,w,c
 16482  013988  26D9               	addwf	fsr2l,f,c
 16483  01398A  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 16484  01398C  22DA               	addwfc	fsr2h,f,c
 16485  01398E  0E38               	movlw	56
 16486  013990  6EDE               	movwf	postinc2,c
 16487  013992  0E0D               	movlw	13
 16488  013994  6EDD               	movwf	postdec2,c
 16489                           
 16490                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 16491  013996  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16492  01399A  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16493  01399E  0E48               	movlw	72
 16494  0139A0  6EDF               	movwf	indf2,c
 16495                           
 16496                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16497  0139A2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16498  0139A6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16499  0139AA  0E00               	movlw	0
 16500  0139AC  8EDB               	bsf	plusw2,7,c
 16501                           
 16502                           ;usb_device.c: 1500: }
 16503  0139AE  0012               	return	
 16504  0139B0                     i2l5731:
 16505                           
 16506                           ;usb_device.c: 1501: else
 16507                           ;usb_device.c: 1502: {
 16508                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 16509  0139B0  500E               	movf	_inPipes+4,w,c	;volatile
 16510  0139B2  010D               	movlb	13	; () banked
 16511  0139B4  5D36               	subwf	54,w,b	;volatile
 16512  0139B6  500F               	movf	_inPipes+5,w,c	;volatile
 16513  0139B8  010D               	movlb	13	; () banked
 16514  0139BA  5937               	subwfb	55,w,b	;volatile
 16515  0139BC  B0D8               	btfsc	status,0,c
 16516  0139BE  D004               	goto	i2l5735
 16517                           
 16518                           ; BSR set to: 13
 16519                           ;usb_device.c: 1506: {
 16520                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 16521  0139C0  CD36 F00E          	movff	3382,_inPipes+4	;volatile
 16522  0139C4  CD37 F00F          	movff	3383,_inPipes+5	;volatile
 16523  0139C8                     i2l5735:
 16524                           
 16525                           ; BSR set to: 13
 16526                           ;usb_device.c: 1508: }
 16527                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 16528  0139C8  EC50  F097         	call	_USBCtrlTrfTxService	;wreg free
 16529                           
 16530                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 16531  0139CC  EE20 F002          	lfsr	2,2
 16532  0139D0  5010               	movf	_pBDTEntryIn,w,c
 16533  0139D2  26D9               	addwf	fsr2l,f,c
 16534  0139D4  5011               	movf	_pBDTEntryIn+1,w,c
 16535  0139D6  22DA               	addwfc	fsr2h,f,c
 16536  0139D8  0E38               	movlw	56
 16537  0139DA  6EDE               	movwf	postinc2,c
 16538  0139DC  0E0D               	movlw	13
 16539  0139DE  6EDD               	movwf	postdec2,c
 16540                           
 16541                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16542  0139E0  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16543  0139E4  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16544  0139E8  0E48               	movlw	72
 16545  0139EA  6EDF               	movwf	indf2,c
 16546                           
 16547                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16548  0139EC  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 16549  0139F0  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16550  0139F4  0E00               	movlw	0
 16551  0139F6  8EDB               	bsf	plusw2,7,c
 16552  0139F8  0012               	return	
 16553  0139FA                     __end_of_USBCtrlEPAllowDataStage:
 16554                           	opt stack 0
 16555                           pclatu	equ	0xFFB
 16556                           pclath	equ	0xFFA
 16557                           tblptru	equ	0xFF8
 16558                           tblptrh	equ	0xFF7
 16559                           tblptrl	equ	0xFF6
 16560                           tablat	equ	0xFF5
 16561                           prodh	equ	0xFF4
 16562                           prodl	equ	0xFF3
 16563                           intcon	equ	0xFF2
 16564                           intcon2	equ	0xFF1
 16565                           indf0	equ	0xFEF
 16566                           postinc0	equ	0xFEE
 16567                           fsr0h	equ	0xFEA
 16568                           fsr0l	equ	0xFE9
 16569                           wreg	equ	0xFE8
 16570                           indf1	equ	0xFE7
 16571                           postinc1	equ	0xFE6
 16572                           postdec1	equ	0xFE5
 16573                           fsr1h	equ	0xFE2
 16574                           fsr1l	equ	0xFE1
 16575                           indf2	equ	0xFDF
 16576                           postinc2	equ	0xFDE
 16577                           postdec2	equ	0xFDD
 16578                           plusw2	equ	0xFDB
 16579                           fsr2h	equ	0xFDA
 16580                           fsr2l	equ	0xFD9
 16581                           status	equ	0xFD8
 16582                           
 16583 ;; *************** function _USBCheckStdRequest *****************
 16584 ;; Defined at:
 16585 ;;		line 2689 in file "../My_library/usb/usb_device.c"
 16586 ;; Parameters:    Size  Location     Type
 16587 ;;		None
 16588 ;; Auto vars:     Size  Location     Type
 16589 ;;		None
 16590 ;; Return value:  Size  Location     Type
 16591 ;;		None               void
 16592 ;; Registers used:
 16593 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16594 ;; Tracked objects:
 16595 ;;		On entry : 0/0
 16596 ;;		On exit  : 0/0
 16597 ;;		Unchanged: 0/0
 16598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16603 ;;Total ram usage:        0 bytes
 16604 ;; Hardware stack levels used:    1
 16605 ;; Hardware stack levels required when called:    5
 16606 ;; This function calls:
 16607 ;;		_USBStdFeatureReqHandler
 16608 ;;		_USBStdGetDscHandler
 16609 ;;		_USBStdGetStatusHandler
 16610 ;;		_USBStdSetCfgHandler
 16611 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16612 ;; This function is called by:
 16613 ;;		_USBCtrlTrfSetupHandler
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           	psect	text72
 16618  012A70                     __ptext72:
 16619                           	opt stack 0
 16620  012A70                     _USBCheckStdRequest:
 16621                           	opt stack 11
 16622                           
 16623                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 16624                           
 16625                           ;incstack = 0
 16626  012A70  010D               	movlb	13	; () banked
 16627  012A72  3930               	swapf	48,w,b	;volatile
 16628  012A74  32E8               	rrcf	wreg,f,c
 16629  012A76  0B03               	andlw	3
 16630  012A78  0900               	iorlw	0
 16631  012A7A  A4D8               	btfss	status,2,c
 16632  012A7C  0012               	return	
 16633  012A7E  D043               	goto	i2l6295
 16634  012A80                     i2l359:
 16635                           
 16636                           ; BSR set to: 13
 16637                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 16638  012A80  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16639                           
 16640                           ; BSR set to: 13
 16641                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 16642  012A82  0E08               	movlw	8
 16643  012A84  6E22               	movwf	_USBDeviceState,c	;volatile
 16644                           
 16645                           ;usb_device.c: 2699: break;
 16646  012A86  0012               	return	
 16647  012A88                     i2l6265:
 16648                           
 16649                           ; BSR set to: 13
 16650                           ;usb_device.c: 2701: USBStdGetDscHandler();
 16651  012A88  EC5F  F091         	call	_USBStdGetDscHandler	;wreg free
 16652                           
 16653                           ;usb_device.c: 2702: break;
 16654  012A8C  0012               	return	
 16655  012A8E                     i2l6267:
 16656                           
 16657                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 16658  012A8E  ECCA  F094         	call	_USBStdSetCfgHandler	;wreg free
 16659                           
 16660                           ;usb_device.c: 2705: break;
 16661  012A92  0012               	return	
 16662  012A94                     i2l6269:
 16663                           
 16664                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 16665  012A94  0E2C               	movlw	low _USBActiveConfiguration
 16666  012A96  6E0A               	movwf	_inPipes,c	;volatile
 16667  012A98  0E00               	movlw	high _USBActiveConfiguration
 16668  012A9A  6E0B               	movwf	_inPipes+1,c	;volatile
 16669                           
 16670                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16671  012A9C  800D               	bsf	_inPipes+3,0,c	;volatile
 16672                           
 16673                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 16674  012A9E  0E01               	movlw	1
 16675  012AA0  6E0E               	movwf	_inPipes+4,c	;volatile
 16676                           
 16677                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 16678  012AA2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16679                           
 16680                           ;usb_device.c: 2711: break;
 16681  012AA4  0012               	return	
 16682  012AA6                     i2l6277:
 16683                           
 16684                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 16685  012AA6  EC72  F09B         	call	_USBStdGetStatusHandler	;wreg free
 16686                           
 16687                           ;usb_device.c: 2714: break;
 16688  012AAA  0012               	return	
 16689  012AAC                     i2l6279:
 16690                           
 16691                           ;usb_device.c: 2716: case 3:
 16692                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 16693  012AAC  EC56  F089         	call	_USBStdFeatureReqHandler	;wreg free
 16694                           
 16695                           ;usb_device.c: 2718: break;
 16696  012AB0  0012               	return	
 16697  012AB2                     i2l6281:
 16698                           
 16699                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 16700  012AB2  010D               	movlb	13	; () banked
 16701  012AB4  5134               	movf	52,w,b	;volatile
 16702  012AB6  0D01               	mullw	1
 16703  012AB8  0E2A               	movlw	low _USBAlternateInterface
 16704  012ABA  24F3               	addwf	prodl,w,c
 16705  012ABC  6E0A               	movwf	_inPipes,c	;volatile
 16706  012ABE  0E00               	movlw	high _USBAlternateInterface
 16707  012AC0  20F4               	addwfc	prodh,w,c
 16708  012AC2  6E0B               	movwf	_inPipes+1,c	;volatile
 16709                           
 16710                           ; BSR set to: 13
 16711                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16712  012AC4  800D               	bsf	_inPipes+3,0,c	;volatile
 16713                           
 16714                           ; BSR set to: 13
 16715                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 16716  012AC6  0E01               	movlw	1
 16717  012AC8  6E0E               	movwf	_inPipes+4,c	;volatile
 16718                           
 16719                           ; BSR set to: 13
 16720                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 16721  012ACA  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16722                           
 16723                           ;usb_device.c: 2724: break;
 16724  012ACC  0012               	return	
 16725  012ACE                     i2l368:
 16726                           
 16727                           ; BSR set to: 13
 16728                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 16729  012ACE  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16730                           
 16731                           ; BSR set to: 13
 16732                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 16733  012AD0  010D               	movlb	13	; () banked
 16734  012AD2  5134               	movf	52,w,b	;volatile
 16735  012AD4  0D01               	mullw	1
 16736  012AD6  0E2A               	movlw	low _USBAlternateInterface
 16737  012AD8  24F3               	addwf	prodl,w,c
 16738  012ADA  6ED9               	movwf	fsr2l,c
 16739  012ADC  0E00               	movlw	high _USBAlternateInterface
 16740  012ADE  20F4               	addwfc	prodh,w,c
 16741  012AE0  6EDA               	movwf	fsr2h,c
 16742  012AE2  CD32 FFDF          	movff	3378,indf2	;volatile
 16743                           
 16744                           ;usb_device.c: 2728: break;
 16745  012AE6  0012               	return	
 16746  012AE8                     i2l6291:
 16747                           
 16748                           ; BSR set to: 13
 16749                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 16750  012AE8  0E00               	movlw	0
 16751  012AEA  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16752  012AEC  0E02               	movlw	2
 16753  012AEE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16754  012AF0  0E00               	movlw	0
 16755  012AF2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16756  012AF4  0E00               	movlw	0
 16757  012AF6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16758  012AF8  0E00               	movlw	0
 16759  012AFA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16760  012AFC  0E00               	movlw	0
 16761  012AFE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16762  012B00  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16763                           
 16764                           ;usb_device.c: 2735: }
 16765                           
 16766                           ;usb_device.c: 2734: break;
 16767                           
 16768                           ;usb_device.c: 2733: default:
 16769                           
 16770                           ;usb_device.c: 2732: case 12:
 16771                           
 16772                           ;usb_device.c: 2731: break;
 16773  012B04  0012               	return	
 16774  012B06                     i2l6295:
 16775  012B06  010D               	movlb	13	; () banked
 16776  012B08  5131               	movf	49,w,b	;volatile
 16777                           
 16778                           ; Switch size 1, requested type "space"
 16779                           ; Number of cases is 11, Range of values is 0 to 12
 16780                           ; switch strategies available:
 16781                           ; Name         Instructions Cycles
 16782                           ; simple_byte           34    18 (average)
 16783                           ;	Chosen strategy is simple_byte
 16784  012B0A  0A00               	xorlw	0	; case 0
 16785  012B0C  B4D8               	btfsc	status,2,c
 16786  012B0E  D7CB               	goto	i2l6277
 16787  012B10  0A01               	xorlw	1	; case 1
 16788  012B12  B4D8               	btfsc	status,2,c
 16789  012B14  D7CB               	goto	i2l6279
 16790  012B16  0A02               	xorlw	2	; case 3
 16791  012B18  B4D8               	btfsc	status,2,c
 16792  012B1A  D7C8               	goto	i2l6279
 16793  012B1C  0A06               	xorlw	6	; case 5
 16794  012B1E  B4D8               	btfsc	status,2,c
 16795  012B20  D7AF               	goto	i2l359
 16796  012B22  0A03               	xorlw	3	; case 6
 16797  012B24  B4D8               	btfsc	status,2,c
 16798  012B26  D7B0               	goto	i2l6265
 16799  012B28  0A01               	xorlw	1	; case 7
 16800  012B2A  B4D8               	btfsc	status,2,c
 16801  012B2C  D7DD               	goto	i2l6291
 16802  012B2E  0A0F               	xorlw	15	; case 8
 16803  012B30  B4D8               	btfsc	status,2,c
 16804  012B32  D7B0               	goto	i2l6269
 16805  012B34  0A01               	xorlw	1	; case 9
 16806  012B36  B4D8               	btfsc	status,2,c
 16807  012B38  D7AA               	goto	i2l6267
 16808  012B3A  0A03               	xorlw	3	; case 10
 16809  012B3C  B4D8               	btfsc	status,2,c
 16810  012B3E  D7B9               	goto	i2l6281
 16811  012B40  0A01               	xorlw	1	; case 11
 16812  012B42  B4D8               	btfsc	status,2,c
 16813  012B44  D7C4               	goto	i2l368
 16814  012B46  0A07               	xorlw	7	; case 12
 16815  012B48  0012               	return	
 16816  012B4A                     __end_of_USBCheckStdRequest:
 16817                           	opt stack 0
 16818                           pclatu	equ	0xFFB
 16819                           pclath	equ	0xFFA
 16820                           tblptru	equ	0xFF8
 16821                           tblptrh	equ	0xFF7
 16822                           tblptrl	equ	0xFF6
 16823                           tablat	equ	0xFF5
 16824                           prodh	equ	0xFF4
 16825                           prodl	equ	0xFF3
 16826                           intcon	equ	0xFF2
 16827                           intcon2	equ	0xFF1
 16828                           indf0	equ	0xFEF
 16829                           postinc0	equ	0xFEE
 16830                           fsr0h	equ	0xFEA
 16831                           fsr0l	equ	0xFE9
 16832                           wreg	equ	0xFE8
 16833                           indf1	equ	0xFE7
 16834                           postinc1	equ	0xFE6
 16835                           postdec1	equ	0xFE5
 16836                           fsr1h	equ	0xFE2
 16837                           fsr1l	equ	0xFE1
 16838                           indf2	equ	0xFDF
 16839                           postinc2	equ	0xFDE
 16840                           postdec2	equ	0xFDD
 16841                           plusw2	equ	0xFDB
 16842                           fsr2h	equ	0xFDA
 16843                           fsr2l	equ	0xFD9
 16844                           status	equ	0xFD8
 16845                           
 16846 ;; *************** function _USBStdSetCfgHandler *****************
 16847 ;; Defined at:
 16848 ;;		line 1968 in file "../My_library/usb/usb_device.c"
 16849 ;; Parameters:    Size  Location     Type
 16850 ;;		None
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;  i               1   20[COMRAM] unsigned char 
 16853 ;; Return value:  Size  Location     Type
 16854 ;;		None               void
 16855 ;; Registers used:
 16856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16866 ;;Total ram usage:        1 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:    4
 16869 ;; This function calls:
 16870 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16871 ;;		i2_memset
 16872 ;; This function is called by:
 16873 ;;		_USBCheckStdRequest
 16874 ;; This function uses a non-reentrant model
 16875 ;;
 16876                           
 16877                           	psect	text73
 16878  012994                     __ptext73:
 16879                           	opt stack 0
 16880  012994                     _USBStdSetCfgHandler:
 16881                           	opt stack 11
 16882                           
 16883                           ;usb_device.c: 1970: uint8_t i;
 16884                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16885                           
 16886                           ;incstack = 0
 16887  012994  8E0D               	bsf	_inPipes+3,7,c	;volatile
 16888                           
 16889                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16890  012996  0E27               	movlw	39
 16891  012998  6E2E               	movwf	i2memset@p1,c
 16892  01299A  0E0F               	movlw	15
 16893  01299C  6E2F               	movwf	i2memset@p1+1,c
 16894  01299E  0E00               	movlw	0
 16895  0129A0  6E31               	movwf	i2memset@c+1,c
 16896  0129A2  0E00               	movlw	0
 16897  0129A4  6E30               	movwf	i2memset@c,c
 16898  0129A6  0E00               	movlw	0
 16899  0129A8  6E33               	movwf	i2memset@n+1,c
 16900  0129AA  0E02               	movlw	2
 16901  0129AC  6E32               	movwf	i2memset@n,c
 16902  0129AE  EC88  F0A2         	call	i2_memset	;wreg free
 16903                           
 16904                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16905  0129B2  0E00               	movlw	0
 16906  0129B4  6E2E               	movwf	i2memset@p1,c
 16907  0129B6  0E0D               	movlw	13
 16908  0129B8  6E2F               	movwf	i2memset@p1+1,c
 16909  0129BA  0E00               	movlw	0
 16910  0129BC  6E31               	movwf	i2memset@c+1,c
 16911  0129BE  0E00               	movlw	0
 16912  0129C0  6E30               	movwf	i2memset@c,c
 16913  0129C2  0E00               	movlw	0
 16914  0129C4  6E33               	movwf	i2memset@n+1,c
 16915  0129C6  0E30               	movlw	48
 16916  0129C8  6E32               	movwf	i2memset@n,c
 16917  0129CA  EC88  F0A2         	call	i2_memset	;wreg free
 16918                           
 16919                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16920  0129CE  8C65               	bsf	3941,6,c	;volatile
 16921                           
 16922                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16923  0129D0  0E00               	movlw	0
 16924  0129D2  6E42               	movwf	USBStdSetCfgHandler@i,c
 16925  0129D4                     i2l5751:
 16926  0129D4  0E02               	movlw	2
 16927  0129D6  6442               	cpfsgt	USBStdSetCfgHandler@i,c
 16928  0129D8  D001               	goto	i2l5755
 16929  0129DA  D016               	goto	i2l5761
 16930  0129DC                     i2l5755:
 16931                           
 16932                           ;usb_device.c: 1988: {
 16933                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16934  0129DC  5042               	movf	USBStdSetCfgHandler@i,w,c
 16935  0129DE  0D01               	mullw	1
 16936  0129E0  0E16               	movlw	low _ep_data_in
 16937  0129E2  24F3               	addwf	prodl,w,c
 16938  0129E4  6ED9               	movwf	fsr2l,c
 16939  0129E6  0E00               	movlw	high _ep_data_in
 16940  0129E8  20F4               	addwfc	prodh,w,c
 16941  0129EA  6EDA               	movwf	fsr2h,c
 16942  0129EC  0E00               	movlw	0
 16943  0129EE  6EDF               	movwf	indf2,c
 16944                           
 16945                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 16946  0129F0  5042               	movf	USBStdSetCfgHandler@i,w,c
 16947  0129F2  0D01               	mullw	1
 16948  0129F4  0EDB               	movlw	low _ep_data_out
 16949  0129F6  24F3               	addwf	prodl,w,c
 16950  0129F8  6ED9               	movwf	fsr2l,c
 16951  0129FA  0E00               	movlw	high _ep_data_out
 16952  0129FC  20F4               	addwfc	prodh,w,c
 16953  0129FE  6EDA               	movwf	fsr2h,c
 16954  012A00  0E00               	movlw	0
 16955  012A02  6EDF               	movwf	indf2,c
 16956  012A04  2A42               	incf	USBStdSetCfgHandler@i,f,c
 16957  012A06  D7E6               	goto	i2l5751
 16958  012A08                     i2l5761:
 16959                           
 16960                           ;usb_device.c: 1991: }
 16961                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 16962  012A08  0E2A               	movlw	low _USBAlternateInterface
 16963  012A0A  6E2E               	movwf	i2memset@p1,c
 16964  012A0C  0E00               	movlw	high _USBAlternateInterface
 16965  012A0E  6E2F               	movwf	i2memset@p1+1,c
 16966  012A10  0E00               	movlw	0
 16967  012A12  6E31               	movwf	i2memset@c+1,c
 16968  012A14  0E00               	movlw	0
 16969  012A16  6E30               	movwf	i2memset@c,c
 16970  012A18  0E00               	movlw	0
 16971  012A1A  6E33               	movwf	i2memset@n+1,c
 16972  012A1C  0E02               	movlw	2
 16973  012A1E  6E32               	movwf	i2memset@n,c
 16974  012A20  EC88  F0A2         	call	i2_memset	;wreg free
 16975                           
 16976                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 16977  012A24  9C65               	bcf	3941,6,c	;volatile
 16978                           
 16979                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16980  012A26  0E08               	movlw	8
 16981  012A28  6E10               	movwf	_pBDTEntryIn,c
 16982  012A2A  0E0D               	movlw	13
 16983  012A2C  6E11               	movwf	_pBDTEntryIn+1,c
 16984                           
 16985                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 16986  012A2E  0E00               	movlw	0
 16987  012A30  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 16988  012A32  0E0D               	movlw	13
 16989  012A34  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16990                           
 16991                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16992  012A36  C019  F01B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16993  012A3A  C01A  F01C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16994                           
 16995                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 16996  012A3E  CD32 F02C          	movff	3378,_USBActiveConfiguration	;volatile
 16997                           
 16998                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 16999  012A42  502C               	movf	_USBActiveConfiguration,w,c	;volatile
 17000  012A44  A4D8               	btfss	status,2,c
 17001  012A46  D003               	goto	i2l5777
 17002                           
 17003                           ;usb_device.c: 2010: {
 17004                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 17005  012A48  0E10               	movlw	16
 17006  012A4A  6E22               	movwf	_USBDeviceState,c	;volatile
 17007                           
 17008                           ;usb_device.c: 2013: }
 17009  012A4C  0012               	return	
 17010  012A4E                     i2l5777:
 17011                           
 17012                           ;usb_device.c: 2014: else
 17013                           ;usb_device.c: 2015: {
 17014                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 17015  012A4E  0E00               	movlw	0
 17016  012A50  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17017  012A52  0E01               	movlw	1
 17018  012A54  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17019  012A56  0E2C               	movlw	low _USBActiveConfiguration
 17020  012A58  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17021  012A5A  0E00               	movlw	high _USBActiveConfiguration
 17022  012A5C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17023  012A5E  0E00               	movlw	0
 17024  012A60  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17025  012A62  0E01               	movlw	1
 17026  012A64  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17027  012A66  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17028                           
 17029                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 17030  012A6A  0E20               	movlw	32
 17031  012A6C  6E22               	movwf	_USBDeviceState,c	;volatile
 17032  012A6E  0012               	return	
 17033  012A70                     __end_of_USBStdSetCfgHandler:
 17034                           	opt stack 0
 17035                           pclatu	equ	0xFFB
 17036                           pclath	equ	0xFFA
 17037                           tblptru	equ	0xFF8
 17038                           tblptrh	equ	0xFF7
 17039                           tblptrl	equ	0xFF6
 17040                           tablat	equ	0xFF5
 17041                           prodh	equ	0xFF4
 17042                           prodl	equ	0xFF3
 17043                           intcon	equ	0xFF2
 17044                           intcon2	equ	0xFF1
 17045                           indf0	equ	0xFEF
 17046                           postinc0	equ	0xFEE
 17047                           fsr0h	equ	0xFEA
 17048                           fsr0l	equ	0xFE9
 17049                           wreg	equ	0xFE8
 17050                           indf1	equ	0xFE7
 17051                           postinc1	equ	0xFE6
 17052                           postdec1	equ	0xFE5
 17053                           fsr1h	equ	0xFE2
 17054                           fsr1l	equ	0xFE1
 17055                           indf2	equ	0xFDF
 17056                           postinc2	equ	0xFDE
 17057                           postdec2	equ	0xFDD
 17058                           plusw2	equ	0xFDB
 17059                           fsr2h	equ	0xFDA
 17060                           fsr2l	equ	0xFD9
 17061                           status	equ	0xFD8
 17062                           
 17063 ;; *************** function i2_memset *****************
 17064 ;; Defined at:
 17065 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17066 ;; Parameters:    Size  Location     Type
 17067 ;;  p1              2    0[COMRAM] PTR void 
 17068 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17069 ;;  c               2    2[COMRAM] int 
 17070 ;;  n               2    4[COMRAM] unsigned int 
 17071 ;; Auto vars:     Size  Location     Type
 17072 ;;  memset          2    6[COMRAM] PTR unsigned char 
 17073 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  2    0[COMRAM] PTR void 
 17076 ;; Registers used:
 17077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17083 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17086 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17087 ;;Total ram usage:        8 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; This function calls:
 17090 ;;		Nothing
 17091 ;; This function is called by:
 17092 ;;		_USBStdSetCfgHandler
 17093 ;;		i2_USBDeviceInit
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           	psect	text74
 17098  014510                     __ptext74:
 17099                           	opt stack 0
 17100  014510                     i2_memset:
 17101                           	opt stack 17
 17102                           
 17103                           ;incstack = 0
 17104  014510  C02E  F034         	movff	i2memset@p1,i2memset@p
 17105  014514  C02F  F035         	movff	i2memset@p1+1,i2memset@p+1
 17106  014518  D008               	goto	i2l5685
 17107  01451A                     i2l5681:
 17108  01451A  C034  FFD9         	movff	i2memset@p,fsr2l
 17109  01451E  C035  FFDA         	movff	i2memset@p+1,fsr2h
 17110  014522  C030  FFDF         	movff	i2memset@c,indf2
 17111  014526  4A34               	infsnz	i2memset@p,f,c
 17112  014528  2A35               	incf	i2memset@p+1,f,c
 17113  01452A                     i2l5685:
 17114  01452A  0632               	decf	i2memset@n,f,c
 17115  01452C  A0D8               	btfss	status,0,c
 17116  01452E  0633               	decf	i2memset@n+1,f,c
 17117  014530  2832               	incf	i2memset@n,w,c
 17118  014532  E1F3               	bnz	i2l5681
 17119  014534  2833               	incf	i2memset@n+1,w,c
 17120  014536  B4D8               	btfsc	status,2,c
 17121  014538  0012               	return	
 17122  01453A  D7EF               	goto	i2l5681
 17123  01453C                     __end_ofi2_memset:
 17124                           	opt stack 0
 17125                           pclatu	equ	0xFFB
 17126                           pclath	equ	0xFFA
 17127                           tblptru	equ	0xFF8
 17128                           tblptrh	equ	0xFF7
 17129                           tblptrl	equ	0xFF6
 17130                           tablat	equ	0xFF5
 17131                           prodh	equ	0xFF4
 17132                           prodl	equ	0xFF3
 17133                           intcon	equ	0xFF2
 17134                           intcon2	equ	0xFF1
 17135                           indf0	equ	0xFEF
 17136                           postinc0	equ	0xFEE
 17137                           fsr0h	equ	0xFEA
 17138                           fsr0l	equ	0xFE9
 17139                           wreg	equ	0xFE8
 17140                           indf1	equ	0xFE7
 17141                           postinc1	equ	0xFE6
 17142                           postdec1	equ	0xFE5
 17143                           fsr1h	equ	0xFE2
 17144                           fsr1l	equ	0xFE1
 17145                           indf2	equ	0xFDF
 17146                           postinc2	equ	0xFDE
 17147                           postdec2	equ	0xFDD
 17148                           plusw2	equ	0xFDB
 17149                           fsr2h	equ	0xFDA
 17150                           fsr2l	equ	0xFD9
 17151                           status	equ	0xFD8
 17152                           
 17153 ;; *************** function _USBStdGetStatusHandler *****************
 17154 ;; Defined at:
 17155 ;;		line 2129 in file "../My_library/usb/usb_device.c"
 17156 ;; Parameters:    Size  Location     Type
 17157 ;;		None
 17158 ;; Auto vars:     Size  Location     Type
 17159 ;;  p               2    1[COMRAM] PTR struct __BDT
 17160 ;;		 -> NULL(0), BDT(48), 
 17161 ;; Return value:  Size  Location     Type
 17162 ;;		None               void
 17163 ;; Registers used:
 17164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17165 ;; Tracked objects:
 17166 ;;		On entry : 0/0
 17167 ;;		On exit  : 0/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17174 ;;Total ram usage:        3 bytes
 17175 ;; Hardware stack levels used:    1
 17176 ;; This function calls:
 17177 ;;		Nothing
 17178 ;; This function is called by:
 17179 ;;		_USBCheckStdRequest
 17180 ;; This function uses a non-reentrant model
 17181 ;;
 17182                           
 17183                           	psect	text75
 17184  0136E4                     __ptext75:
 17185                           	opt stack 0
 17186  0136E4                     _USBStdGetStatusHandler:
 17187                           	opt stack 15
 17188                           
 17189                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 17190                           
 17191                           ;incstack = 0
 17192  0136E4  0E00               	movlw	0
 17193  0136E6  010D               	movlb	13	; () banked
 17194  0136E8  6F38               	movwf	56,b	;volatile
 17195                           
 17196                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 17197  0136EA  0E00               	movlw	0
 17198  0136EC  010D               	movlb	13	; () banked
 17199  0136EE  6F39               	movwf	57,b	;volatile
 17200                           
 17201                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 17202  0136F0  D038               	goto	i2l5833
 17203  0136F2                     i2l295:
 17204                           
 17205                           ; BSR set to: 13
 17206                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 17207  0136F2  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17208                           
 17209                           ; BSR set to: 13
 17210                           ;usb_device.c: 2145: }
 17211                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 17212                           
 17213                           ; BSR set to: 13
 17214                           
 17215                           ; BSR set to: 13
 17216                           ;usb_device.c: 2143: {
 17217                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 17218                           
 17219                           ;usb_device.c: 2142: if(0 == 1)
 17220  0136F4  041E               	decf	_RemoteWakeup,w,c	;volatile
 17221  0136F6  A4D8               	btfss	status,2,c
 17222  0136F8  D040               	goto	i2l298
 17223                           
 17224                           ; BSR set to: 13
 17225                           ;usb_device.c: 2148: {
 17226                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 17227  0136FA  010D               	movlb	13	; () banked
 17228  0136FC  8338               	bsf	56,1,b	;volatile
 17229                           
 17230                           ; BSR set to: 13
 17231                           ;usb_device.c: 2150: }
 17232                           ;usb_device.c: 2151: break;
 17233  0136FE  D03D               	goto	i2l298
 17234  013700                     i2l299:
 17235                           
 17236                           ; BSR set to: 13
 17237                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 17238  013700  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17239                           
 17240                           ;usb_device.c: 2154: break;
 17241  013702  D03B               	goto	i2l298
 17242  013704                     i2l300:
 17243                           
 17244                           ; BSR set to: 13
 17245                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 17246  013704  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17247                           
 17248                           ;usb_device.c: 2160: {
 17249                           ;usb_device.c: 2161: BDT_ENTRY *p;
 17250                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 17251  013706  010D               	movlb	13	; () banked
 17252  013708  BF34               	btfsc	52,7,b	;volatile
 17253  01370A  D00B               	goto	i2l5823
 17254                           
 17255                           ; BSR set to: 13
 17256                           ;usb_device.c: 2164: {
 17257                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17258  01370C  010D               	movlb	13	; () banked
 17259  01370E  5134               	movf	52,w,b	;volatile
 17260  013710  0B0F               	andlw	15
 17261  013712  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17262  013714  502E               	movf	??_USBStdGetStatusHandler,w,c
 17263  013716  0D02               	mullw	2
 17264  013718  0ED5               	movlw	low _pBDTEntryOut
 17265  01371A  24F3               	addwf	prodl,w,c
 17266  01371C  6ED9               	movwf	fsr2l,c
 17267  01371E  0E00               	movlw	high _pBDTEntryOut
 17268  013720  D00A               	goto	L6
 17269  013722                     i2l5823:
 17270                           
 17271                           ; BSR set to: 13
 17272                           ;usb_device.c: 2167: else
 17273                           ;usb_device.c: 2168: {
 17274                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17275  013722  010D               	movlb	13	; () banked
 17276  013724  5134               	movf	52,w,b	;volatile
 17277  013726  0B0F               	andlw	15
 17278  013728  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 17279  01372A  502E               	movf	??_USBStdGetStatusHandler,w,c
 17280  01372C  0D02               	mullw	2
 17281  01372E  0E10               	movlw	low _pBDTEntryIn
 17282  013730  24F3               	addwf	prodl,w,c
 17283  013732  6ED9               	movwf	fsr2l,c
 17284  013734  0E00               	movlw	high _pBDTEntryIn
 17285  013736                     L6:
 17286  013736  20F4               	addwfc	prodh,w,c
 17287  013738  6EDA               	movwf	fsr2h,c
 17288  01373A  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 17289  01373E  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 17290                           
 17291                           ; BSR set to: 13
 17292                           ;usb_device.c: 2170: }
 17293                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 17294                           
 17295                           ; BSR set to: 13
 17296  013742  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17297  013746  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17298  01374A  AEDF               	btfss	indf2,7,c
 17299  01374C  D016               	goto	i2l298
 17300                           
 17301                           ; BSR set to: 13
 17302  01374E  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 17303  013752  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 17304  013756  A4DF               	btfss	indf2,2,c
 17305  013758  D010               	goto	i2l298
 17306                           
 17307                           ; BSR set to: 13
 17308                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 17309  01375A  0E01               	movlw	1
 17310  01375C  010D               	movlb	13	; () banked
 17311  01375E  6F38               	movwf	56,b	;volatile
 17312                           
 17313                           ; BSR set to: 13
 17314                           ;usb_device.c: 2175: }
 17315                           ;usb_device.c: 2176: }
 17316                           
 17317                           ; BSR set to: 13
 17318                           ;usb_device.c: 2174: break;
 17319  013760  D00C               	goto	i2l298
 17320  013762                     i2l5833:
 17321                           
 17322                           ; BSR set to: 13
 17323  013762  010D               	movlb	13	; () banked
 17324  013764  5130               	movf	48,w,b	;volatile
 17325  013766  0B1F               	andlw	31
 17326                           
 17327                           ; Switch size 1, requested type "space"
 17328                           ; Number of cases is 3, Range of values is 0 to 2
 17329                           ; switch strategies available:
 17330                           ; Name         Instructions Cycles
 17331                           ; simple_byte           10     6 (average)
 17332                           ;	Chosen strategy is simple_byte
 17333  013768  0A00               	xorlw	0	; case 0
 17334  01376A  B4D8               	btfsc	status,2,c
 17335  01376C  D7C2               	goto	i2l295
 17336  01376E  0A01               	xorlw	1	; case 1
 17337  013770  B4D8               	btfsc	status,2,c
 17338  013772  D7C6               	goto	i2l299
 17339  013774  0A03               	xorlw	3	; case 2
 17340  013776  B4D8               	btfsc	status,2,c
 17341  013778  D7C5               	goto	i2l300
 17342  01377A                     i2l298:
 17343                           
 17344                           ; BSR set to: 13
 17345                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 17346  01377A  AE0D               	btfss	_inPipes+3,7,c	;volatile
 17347  01377C  0012               	return	
 17348                           
 17349                           ; BSR set to: 13
 17350                           ;usb_device.c: 2179: {
 17351                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 17352  01377E  0E38               	movlw	56
 17353  013780  6E0A               	movwf	_inPipes,c	;volatile
 17354  013782  0E0D               	movlw	13
 17355  013784  6E0B               	movwf	_inPipes+1,c	;volatile
 17356                           
 17357                           ; BSR set to: 13
 17358                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17359  013786  800D               	bsf	_inPipes+3,0,c	;volatile
 17360                           
 17361                           ; BSR set to: 13
 17362                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 17363  013788  0E02               	movlw	2
 17364  01378A  6E0E               	movwf	_inPipes+4,c	;volatile
 17365  01378C  0012               	return	
 17366  01378E                     __end_of_USBStdGetStatusHandler:
 17367                           	opt stack 0
 17368                           pclatu	equ	0xFFB
 17369                           pclath	equ	0xFFA
 17370                           tblptru	equ	0xFF8
 17371                           tblptrh	equ	0xFF7
 17372                           tblptrl	equ	0xFF6
 17373                           tablat	equ	0xFF5
 17374                           prodh	equ	0xFF4
 17375                           prodl	equ	0xFF3
 17376                           intcon	equ	0xFF2
 17377                           intcon2	equ	0xFF1
 17378                           indf0	equ	0xFEF
 17379                           postinc0	equ	0xFEE
 17380                           fsr0h	equ	0xFEA
 17381                           fsr0l	equ	0xFE9
 17382                           wreg	equ	0xFE8
 17383                           indf1	equ	0xFE7
 17384                           postinc1	equ	0xFE6
 17385                           postdec1	equ	0xFE5
 17386                           fsr1h	equ	0xFE2
 17387                           fsr1l	equ	0xFE1
 17388                           indf2	equ	0xFDF
 17389                           postinc2	equ	0xFDE
 17390                           postdec2	equ	0xFDD
 17391                           plusw2	equ	0xFDB
 17392                           fsr2h	equ	0xFDA
 17393                           fsr2l	equ	0xFD9
 17394                           status	equ	0xFD8
 17395                           
 17396 ;; *************** function _USBStdGetDscHandler *****************
 17397 ;; Defined at:
 17398 ;;		line 2043 in file "../My_library/usb/usb_device.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;		None
 17401 ;; Auto vars:     Size  Location     Type
 17402 ;;		None
 17403 ;; Return value:  Size  Location     Type
 17404 ;;		None               void
 17405 ;; Registers used:
 17406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17407 ;; Tracked objects:
 17408 ;;		On entry : 0/0
 17409 ;;		On exit  : 0/0
 17410 ;;		Unchanged: 0/0
 17411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17416 ;;Total ram usage:        2 bytes
 17417 ;; Hardware stack levels used:    1
 17418 ;; This function calls:
 17419 ;;		Nothing
 17420 ;; This function is called by:
 17421 ;;		_USBCheckStdRequest
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text76
 17426  0122BE                     __ptext76:
 17427                           	opt stack 0
 17428  0122BE                     _USBStdGetDscHandler:
 17429                           	opt stack 15
 17430                           
 17431                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 17432                           
 17433                           ; BSR set to: 13
 17434                           ;incstack = 0
 17435  0122BE  0E80               	movlw	128
 17436  0122C0  010D               	movlb	13	; () banked
 17437  0122C2  1930               	xorwf	48,w,b	;volatile
 17438  0122C4  A4D8               	btfss	status,2,c
 17439  0122C6  0012               	return	
 17440                           
 17441                           ; BSR set to: 13
 17442                           ;usb_device.c: 2046: {
 17443                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 17444  0122C8  0EC0               	movlw	192
 17445  0122CA  6E0D               	movwf	_inPipes+3,c	;volatile
 17446                           
 17447                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 17448  0122CC  D085               	goto	i2l5811
 17449  0122CE                     i2l5785:
 17450                           
 17451                           ; BSR set to: 13
 17452                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 17453  0122CE  0EDC               	movlw	low _device_dsc
 17454  0122D0  6E0A               	movwf	_inPipes,c	;volatile
 17455  0122D2  0EFD               	movlw	high _device_dsc
 17456  0122D4  6E0B               	movwf	_inPipes+1,c	;volatile
 17457                           
 17458                           ; BSR set to: 13
 17459                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 17460  0122D6  0E00               	movlw	0
 17461  0122D8  6E0F               	movwf	_inPipes+5,c	;volatile
 17462  0122DA  0E12               	movlw	18
 17463  0122DC  6E0E               	movwf	_inPipes+4,c	;volatile
 17464                           
 17465                           ;usb_device.c: 2058: break;
 17466  0122DE  0012               	return	
 17467  0122E0                     i2l5789:
 17468                           
 17469                           ; BSR set to: 13
 17470                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 17471  0122E0  010D               	movlb	13	; () banked
 17472  0122E2  5132               	movf	50,w,b	;volatile
 17473  0122E4  A4D8               	btfss	status,2,c
 17474  0122E6  D043               	goto	i2l5797
 17475                           
 17476                           ; BSR set to: 13
 17477                           ;usb_device.c: 2064: {
 17478                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 17479  0122E8  010D               	movlb	13	; () banked
 17480  0122EA  5132               	movf	50,w,b	;volatile
 17481  0122EC  0D02               	mullw	2
 17482  0122EE  0E13               	movlw	low _USB_CD_Ptr
 17483  0122F0  24F3               	addwf	prodl,w,c
 17484  0122F2  6EF6               	movwf	tblptrl,c
 17485  0122F4  0EFD               	movlw	high _USB_CD_Ptr
 17486  0122F6  20F4               	addwfc	prodh,w,c
 17487  0122F8  6EF7               	movwf	tblptrh,c
 17488  0122FA                     	if	1	;There are 3 active tblptr bytes
 17489  0122FA  6AF8               	clrf	tblptru,c
 17490  0122FC  0E00               	movlw	low (__mediumconst shr (0+16))
 17491  0122FE  22F8               	addwfc	tblptru,f,c
 17492  012300                     	endif
 17493  012300  0009               	tblrd		*+
 17494  012302  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17495  012306  000A               	tblrd		*-
 17496  012308  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17497                           
 17498                           ; BSR set to: 13
 17499                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 17500  01230C  0E02               	movlw	2
 17501  01230E  240A               	addwf	_inPipes,w,c	;volatile
 17502  012310  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17503  012312  0E00               	movlw	0
 17504  012314  200B               	addwfc	_inPipes+1,w,c	;volatile
 17505  012316  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17506  012318  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17507  01231C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17508  012320  0E00               	movlw	low (__mediumconst shr (0+16))
 17509  012322  6EF8               	movwf	tblptru,c
 17510  012324  0E0E               	movlw	(high __ramtop+-1)
 17511  012326  64F7               	cpfsgt	tblptrh,c
 17512  012328  D003               	bra	i2u480_47
 17513  01232A  0008               	tblrd		*
 17514  01232C  50F5               	movf	tablat,w,c
 17515  01232E  D005               	bra	i2u480_40
 17516  012330                     i2u480_47:
 17517  012330  CFF6 FFE9          	movff	tblptrl,fsr0l
 17518  012334  CFF7 FFEA          	movff	tblptrh,fsr0h
 17519  012338  50EF               	movf	indf0,w,c
 17520  01233A                     i2u480_40:
 17521  01233A  6E0E               	movwf	_inPipes+4,c	;volatile
 17522                           
 17523                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 17524  01233C  0E03               	movlw	3
 17525  01233E  240A               	addwf	_inPipes,w,c	;volatile
 17526  012340  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17527  012342  0E00               	movlw	0
 17528  012344  200B               	addwfc	_inPipes+1,w,c	;volatile
 17529  012346  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 17530  012348  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 17531  01234C  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 17532  012350  0E00               	movlw	low (__mediumconst shr (0+16))
 17533  012352  6EF8               	movwf	tblptru,c
 17534  012354  0E0E               	movlw	(high __ramtop+-1)
 17535  012356  64F7               	cpfsgt	tblptrh,c
 17536  012358  D003               	bra	i2u481_47
 17537  01235A  0008               	tblrd		*
 17538  01235C  50F5               	movf	tablat,w,c
 17539  01235E  D005               	bra	i2u481_40
 17540  012360                     i2u481_47:
 17541  012360  CFF6 FFE9          	movff	tblptrl,fsr0l
 17542  012364  CFF7 FFEA          	movff	tblptrh,fsr0h
 17543  012368  50EF               	movf	indf0,w,c
 17544  01236A                     i2u481_40:
 17545  01236A  6E0F               	movwf	_inPipes+5,c	;volatile
 17546                           
 17547                           ;usb_device.c: 2076: }
 17548  01236C  0012               	return	
 17549  01236E                     i2l5797:
 17550                           
 17551                           ;usb_device.c: 2077: else
 17552                           ;usb_device.c: 2078: {
 17553                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 17554  01236E  0E00               	movlw	0
 17555  012370  6E0D               	movwf	_inPipes+3,c	;volatile
 17556                           
 17557                           ;usb_device.c: 2080: }
 17558                           ;usb_device.c: 2081: break;
 17559  012372  0012               	return	
 17560  012374                     i2l5799:
 17561                           
 17562                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 17563  012374  0E03               	movlw	3
 17564  012376  010D               	movlb	13	; () banked
 17565  012378  6132               	cpfslt	50,b	;volatile
 17566  01237A  D028               	goto	i2l5805
 17567                           
 17568                           ; BSR set to: 13
 17569                           ;usb_device.c: 2087: {
 17570                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 17571  01237C  010D               	movlb	13	; () banked
 17572  01237E  5132               	movf	50,w,b	;volatile
 17573  012380  0D02               	mullw	2
 17574  012382  0E0D               	movlw	low _USB_SD_Ptr
 17575  012384  24F3               	addwf	prodl,w,c
 17576  012386  6EF6               	movwf	tblptrl,c
 17577  012388  0EFD               	movlw	high _USB_SD_Ptr
 17578  01238A  20F4               	addwfc	prodh,w,c
 17579  01238C  6EF7               	movwf	tblptrh,c
 17580  01238E                     	if	1	;There are 3 active tblptr bytes
 17581  01238E  6AF8               	clrf	tblptru,c
 17582  012390  0E00               	movlw	low (__mediumconst shr (0+16))
 17583  012392  22F8               	addwfc	tblptru,f,c
 17584  012394                     	endif
 17585  012394  0009               	tblrd		*+
 17586  012396  CFF5 F00A          	movff	tablat,_inPipes	;volatile
 17587  01239A  000A               	tblrd		*-
 17588  01239C  CFF5 F00B          	movff	tablat,_inPipes+1	;volatile
 17589                           
 17590                           ; BSR set to: 13
 17591                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 17592  0123A0  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 17593  0123A4  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 17594  0123A8  0E00               	movlw	low (__mediumconst shr (0+16))
 17595  0123AA  6EF8               	movwf	tblptru,c
 17596  0123AC  0E0E               	movlw	(high __ramtop+-1)
 17597  0123AE  64F7               	cpfsgt	tblptrh,c
 17598  0123B0  D003               	bra	i2u483_47
 17599  0123B2  0008               	tblrd		*
 17600  0123B4  50F5               	movf	tablat,w,c
 17601  0123B6  D005               	bra	i2u483_40
 17602  0123B8                     i2u483_47:
 17603  0123B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 17604  0123BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 17605  0123C0  50EF               	movf	indf0,w,c
 17606  0123C2                     i2u483_40:
 17607  0123C2  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 17608  0123C4  502E               	movf	??_USBStdGetDscHandler,w,c
 17609  0123C6  6E0E               	movwf	_inPipes+4,c	;volatile
 17610  0123C8  6A0F               	clrf	_inPipes+5,c	;volatile
 17611                           
 17612                           ;usb_device.c: 2092: }
 17613  0123CA  0012               	return	
 17614  0123CC                     i2l5805:
 17615                           
 17616                           ;usb_device.c: 2102: else
 17617                           ;usb_device.c: 2103: {
 17618                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 17619  0123CC  0E00               	movlw	0
 17620  0123CE  6E0D               	movwf	_inPipes+3,c	;volatile
 17621                           
 17622                           ;usb_device.c: 2105: }
 17623                           ;usb_device.c: 2106: break;
 17624  0123D0  0012               	return	
 17625  0123D2                     i2l5807:
 17626                           
 17627                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 17628  0123D2  0E00               	movlw	0
 17629  0123D4  6E0D               	movwf	_inPipes+3,c	;volatile
 17630                           
 17631                           ;usb_device.c: 2110: }
 17632                           
 17633                           ;usb_device.c: 2109: break;
 17634  0123D6  0012               	return	
 17635  0123D8                     i2l5811:
 17636  0123D8  010D               	movlb	13	; () banked
 17637  0123DA  5133               	movf	51,w,b	;volatile
 17638                           
 17639                           ; Switch size 1, requested type "space"
 17640                           ; Number of cases is 3, Range of values is 1 to 3
 17641                           ; switch strategies available:
 17642                           ; Name         Instructions Cycles
 17643                           ; simple_byte           10     6 (average)
 17644                           ;	Chosen strategy is simple_byte
 17645  0123DC  0A01               	xorlw	1	; case 1
 17646  0123DE  B4D8               	btfsc	status,2,c
 17647  0123E0  D776               	goto	i2l5785
 17648  0123E2  0A03               	xorlw	3	; case 2
 17649  0123E4  B4D8               	btfsc	status,2,c
 17650  0123E6  D77C               	goto	i2l5789
 17651  0123E8  0A01               	xorlw	1	; case 3
 17652  0123EA  B4D8               	btfsc	status,2,c
 17653  0123EC  D7C3               	goto	i2l5799
 17654  0123EE  D7F1               	goto	i2l5807
 17655  0123F0                     __end_of_USBStdGetDscHandler:
 17656                           	opt stack 0
 17657                           pclatu	equ	0xFFB
 17658                           pclath	equ	0xFFA
 17659                           tblptru	equ	0xFF8
 17660                           tblptrh	equ	0xFF7
 17661                           tblptrl	equ	0xFF6
 17662                           tablat	equ	0xFF5
 17663                           prodh	equ	0xFF4
 17664                           prodl	equ	0xFF3
 17665                           intcon	equ	0xFF2
 17666                           intcon2	equ	0xFF1
 17667                           indf0	equ	0xFEF
 17668                           postinc0	equ	0xFEE
 17669                           fsr0h	equ	0xFEA
 17670                           fsr0l	equ	0xFE9
 17671                           wreg	equ	0xFE8
 17672                           indf1	equ	0xFE7
 17673                           postinc1	equ	0xFE6
 17674                           postdec1	equ	0xFE5
 17675                           fsr1h	equ	0xFE2
 17676                           fsr1l	equ	0xFE1
 17677                           indf2	equ	0xFDF
 17678                           postinc2	equ	0xFDE
 17679                           postdec2	equ	0xFDD
 17680                           plusw2	equ	0xFDB
 17681                           fsr2h	equ	0xFDA
 17682                           fsr2l	equ	0xFD9
 17683                           status	equ	0xFD8
 17684                           
 17685 ;; *************** function _USBStdFeatureReqHandler *****************
 17686 ;; Defined at:
 17687 ;;		line 2757 in file "../My_library/usb/usb_device.c"
 17688 ;; Parameters:    Size  Location     Type
 17689 ;;		None
 17690 ;; Auto vars:     Size  Location     Type
 17691 ;;  p               2   24[COMRAM] PTR struct __BDT
 17692 ;;		 -> NULL(0), BDT(48), 
 17693 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 17694 ;;		 -> UEP0(1), 
 17695 ;;  current_ep_d    1   23[COMRAM] struct .
 17696 ;; Return value:  Size  Location     Type
 17697 ;;		None               void
 17698 ;; Registers used:
 17699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17700 ;; Tracked objects:
 17701 ;;		On entry : 0/0
 17702 ;;		On exit  : 0/0
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17706 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;Total ram usage:        6 bytes
 17710 ;; Hardware stack levels used:    1
 17711 ;; Hardware stack levels required when called:    4
 17712 ;; This function calls:
 17713 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17714 ;; This function is called by:
 17715 ;;		_USBCheckStdRequest
 17716 ;; This function uses a non-reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text77
 17720  0112AC                     __ptext77:
 17721                           	opt stack 0
 17722  0112AC                     _USBStdFeatureReqHandler:
 17723                           	opt stack 11
 17724                           
 17725                           ;usb_device.c: 2759: BDT_ENTRY *p;
 17726                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 17727                           ;usb_device.c: 2764: unsigned char* pUEP;
 17728                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 17729                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 17730                           
 17731                           ;incstack = 0
 17732  0112AC  010D               	movlb	13	; () banked
 17733  0112AE  0532               	decf	50,w,b	;volatile
 17734  0112B0  A4D8               	btfss	status,2,c
 17735  0112B2  D010               	goto	i2l374
 17736                           
 17737                           ; BSR set to: 13
 17738  0112B4  010D               	movlb	13	; () banked
 17739  0112B6  5130               	movf	48,w,b	;volatile
 17740  0112B8  0B1F               	andlw	31
 17741  0112BA  0900               	iorlw	0
 17742  0112BC  A4D8               	btfss	status,2,c
 17743  0112BE  D00A               	goto	i2l374
 17744                           
 17745                           ; BSR set to: 13
 17746                           ;usb_device.c: 2804: {
 17747                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 17748  0112C0  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17749                           
 17750                           ; BSR set to: 13
 17751                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17752  0112C2  0E03               	movlw	3
 17753  0112C4  010D               	movlb	13	; () banked
 17754  0112C6  1931               	xorwf	49,w,b	;volatile
 17755  0112C8  A4D8               	btfss	status,2,c
 17756  0112CA  D002               	goto	i2l5851
 17757                           
 17758                           ; BSR set to: 13
 17759                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17760  0112CC  0E01               	movlw	1
 17761  0112CE  D001               	goto	L7
 17762  0112D0                     i2l5851:
 17763                           
 17764                           ; BSR set to: 13
 17765                           ;usb_device.c: 2808: else
 17766                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17767  0112D0  0E00               	movlw	0
 17768  0112D2                     L7:
 17769  0112D2  6E1E               	movwf	_RemoteWakeup,c	;volatile
 17770  0112D4                     i2l374:
 17771                           
 17772                           ; BSR set to: 13
 17773                           ;usb_device.c: 2810: }
 17774                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17775                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17776                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17777                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17778  0112D4  010D               	movlb	13	; () banked
 17779  0112D6  5132               	movf	50,w,b	;volatile
 17780  0112D8  A4D8               	btfss	status,2,c
 17781  0112DA  0012               	return	
 17782                           
 17783                           ; BSR set to: 13
 17784  0112DC  010D               	movlb	13	; () banked
 17785  0112DE  5130               	movf	48,w,b	;volatile
 17786  0112E0  0B1F               	andlw	31
 17787  0112E2  0A02               	xorlw	2
 17788  0112E4  A4D8               	btfss	status,2,c
 17789  0112E6  0012               	return	
 17790                           
 17791                           ; BSR set to: 13
 17792  0112E8  010D               	movlb	13	; () banked
 17793  0112EA  5134               	movf	52,w,b	;volatile
 17794  0112EC  0B0F               	andlw	15
 17795  0112EE  0900               	iorlw	0
 17796  0112F0  B4D8               	btfsc	status,2,c
 17797  0112F2  0012               	return	
 17798                           
 17799                           ; BSR set to: 13
 17800  0112F4  010D               	movlb	13	; () banked
 17801  0112F6  5134               	movf	52,w,b	;volatile
 17802  0112F8  0B0F               	andlw	15
 17803  0112FA  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17804  0112FC  0E03               	movlw	3
 17805  0112FE  6042               	cpfslt	??_USBStdFeatureReqHandler,c
 17806  011300  0012               	return	
 17807                           
 17808                           ; BSR set to: 13
 17809  011302  0E20               	movlw	32
 17810  011304  1822               	xorwf	_USBDeviceState,w,c	;volatile
 17811  011306  A4D8               	btfss	status,2,c
 17812  011308  0012               	return	
 17813                           
 17814                           ; BSR set to: 13
 17815                           ;usb_device.c: 2817: {
 17816                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17817  01130A  8E0D               	bsf	_inPipes+3,7,c	;volatile
 17818                           
 17819                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17820  01130C  010D               	movlb	13	; () banked
 17821  01130E  BF34               	btfsc	52,7,b	;volatile
 17822  011310  D01B               	goto	i2l5865
 17823                           
 17824                           ; BSR set to: 13
 17825                           ;usb_device.c: 2824: {
 17826                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17827  011312  010D               	movlb	13	; () banked
 17828  011314  5134               	movf	52,w,b	;volatile
 17829  011316  0B0F               	andlw	15
 17830  011318  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17831  01131A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17832  01131C  0D02               	mullw	2
 17833  01131E  0ED5               	movlw	low _pBDTEntryOut
 17834  011320  24F3               	addwf	prodl,w,c
 17835  011322  6ED9               	movwf	fsr2l,c
 17836  011324  0E00               	movlw	high _pBDTEntryOut
 17837  011326  20F4               	addwfc	prodh,w,c
 17838  011328  6EDA               	movwf	fsr2h,c
 17839  01132A  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17840  01132E  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17841                           
 17842                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17843  011332  010D               	movlb	13	; () banked
 17844  011334  5134               	movf	52,w,b	;volatile
 17845  011336  0B0F               	andlw	15
 17846  011338  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17847  01133A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17848  01133C  0D01               	mullw	1
 17849  01133E  0EDB               	movlw	low _ep_data_out
 17850  011340  24F3               	addwf	prodl,w,c
 17851  011342  6ED9               	movwf	fsr2l,c
 17852  011344  0E00               	movlw	high _ep_data_out
 17853  011346  D01A               	goto	L8
 17854  011348                     i2l5865:
 17855                           
 17856                           ; BSR set to: 13
 17857                           ;usb_device.c: 2828: else
 17858                           ;usb_device.c: 2829: {
 17859                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17860  011348  010D               	movlb	13	; () banked
 17861  01134A  5134               	movf	52,w,b	;volatile
 17862  01134C  0B0F               	andlw	15
 17863  01134E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17864  011350  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17865  011352  0D02               	mullw	2
 17866  011354  0E10               	movlw	low _pBDTEntryIn
 17867  011356  24F3               	addwf	prodl,w,c
 17868  011358  6ED9               	movwf	fsr2l,c
 17869  01135A  0E00               	movlw	high _pBDTEntryIn
 17870  01135C  20F4               	addwfc	prodh,w,c
 17871  01135E  6EDA               	movwf	fsr2h,c
 17872  011360  CFDE F046          	movff	postinc2,USBStdFeatureReqHandler@p
 17873  011364  CFDD F047          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17874                           
 17875                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17876  011368  010D               	movlb	13	; () banked
 17877  01136A  5134               	movf	52,w,b	;volatile
 17878  01136C  0B0F               	andlw	15
 17879  01136E  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17880  011370  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17881  011372  0D01               	mullw	1
 17882  011374  0E16               	movlw	low _ep_data_in
 17883  011376  24F3               	addwf	prodl,w,c
 17884  011378  6ED9               	movwf	fsr2l,c
 17885  01137A  0E00               	movlw	high _ep_data_in
 17886  01137C                     L8:
 17887  01137C  20F4               	addwfc	prodh,w,c
 17888  01137E  6EDA               	movwf	fsr2h,c
 17889  011380  50DF               	movf	indf2,w,c
 17890  011382  6E45               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17891                           
 17892                           ; BSR set to: 13
 17893                           ;usb_device.c: 2832: }
 17894                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 17895                           
 17896                           ; BSR set to: 13
 17897  011384  B045               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17898  011386  D002               	goto	i2l5871
 17899                           
 17900                           ; BSR set to: 13
 17901                           ;usb_device.c: 2839: {
 17902                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17903  011388  9446               	bcf	USBStdFeatureReqHandler@p,2,c
 17904                           
 17905                           ;usb_device.c: 2841: }
 17906  01138A  D001               	goto	i2l5873
 17907  01138C                     i2l5871:
 17908                           
 17909                           ; BSR set to: 13
 17910                           ;usb_device.c: 2842: else
 17911                           ;usb_device.c: 2843: {
 17912                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17913  01138C  8446               	bsf	USBStdFeatureReqHandler@p,2,c
 17914  01138E                     i2l5873:
 17915                           
 17916                           ; BSR set to: 13
 17917                           ;usb_device.c: 2845: }
 17918                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 17919  01138E  010D               	movlb	13	; () banked
 17920  011390  BF34               	btfsc	52,7,b	;volatile
 17921  011392  D00B               	goto	i2l5877
 17922                           
 17923                           ; BSR set to: 13
 17924                           ;usb_device.c: 2851: {
 17925                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17926  011394  010D               	movlb	13	; () banked
 17927  011396  5134               	movf	52,w,b	;volatile
 17928  011398  0B0F               	andlw	15
 17929  01139A  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17930  01139C  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17931  01139E  0D02               	mullw	2
 17932  0113A0  0ED5               	movlw	low _pBDTEntryOut
 17933  0113A2  24F3               	addwf	prodl,w,c
 17934  0113A4  6ED9               	movwf	fsr2l,c
 17935  0113A6  0E00               	movlw	high _pBDTEntryOut
 17936  0113A8  D00A               	goto	L9
 17937  0113AA                     i2l5877:
 17938                           
 17939                           ; BSR set to: 13
 17940                           ;usb_device.c: 2854: else
 17941                           ;usb_device.c: 2855: {
 17942                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17943  0113AA  010D               	movlb	13	; () banked
 17944  0113AC  5134               	movf	52,w,b	;volatile
 17945  0113AE  0B0F               	andlw	15
 17946  0113B0  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17947  0113B2  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17948  0113B4  0D02               	mullw	2
 17949  0113B6  0E10               	movlw	low _pBDTEntryIn
 17950  0113B8  24F3               	addwf	prodl,w,c
 17951  0113BA  6ED9               	movwf	fsr2l,c
 17952  0113BC  0E00               	movlw	high _pBDTEntryIn
 17953  0113BE                     L9:
 17954  0113BE  20F4               	addwfc	prodh,w,c
 17955  0113C0  6EDA               	movwf	fsr2h,c
 17956  0113C2  C046  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17957  0113C6  C047  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17958                           
 17959                           ; BSR set to: 13
 17960                           ;usb_device.c: 2857: }
 17961                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 17962                           
 17963                           ; BSR set to: 13
 17964  0113CA  0E03               	movlw	3
 17965  0113CC  010D               	movlb	13	; () banked
 17966  0113CE  1931               	xorwf	49,w,b	;volatile
 17967  0113D0  A4D8               	btfss	status,2,c
 17968  0113D2  D031               	goto	i2l5893
 17969                           
 17970                           ; BSR set to: 13
 17971                           ;usb_device.c: 2861: {
 17972                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 17973  0113D4  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17974  0113D8  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17975  0113DC  AEDF               	btfss	indf2,7,c
 17976  0113DE  D01E               	goto	i2l5889
 17977                           
 17978                           ; BSR set to: 13
 17979                           ;usb_device.c: 2863: {
 17980                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 17981  0113E0  010D               	movlb	13	; () banked
 17982  0113E2  BF34               	btfsc	52,7,b	;volatile
 17983  0113E4  D00E               	goto	i2l5887
 17984                           
 17985                           ; BSR set to: 13
 17986                           ;usb_device.c: 2867: {
 17987                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17988  0113E6  010D               	movlb	13	; () banked
 17989  0113E8  5134               	movf	52,w,b	;volatile
 17990  0113EA  0B0F               	andlw	15
 17991  0113EC  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17992  0113EE  5042               	movf	??_USBStdFeatureReqHandler,w,c
 17993  0113F0  0D01               	mullw	1
 17994  0113F2  0EDB               	movlw	low _ep_data_out
 17995  0113F4  24F3               	addwf	prodl,w,c
 17996  0113F6  6ED9               	movwf	fsr2l,c
 17997  0113F8  0E00               	movlw	high _ep_data_out
 17998  0113FA  20F4               	addwfc	prodh,w,c
 17999  0113FC  6EDA               	movwf	fsr2h,c
 18000  0113FE  0100               	movlb	0	; () banked
 18001  011400  D00C               	goto	L10
 18002  011402                     i2l5887:
 18003                           
 18004                           ;usb_device.c: 2870: else
 18005                           ;usb_device.c: 2871: {
 18006                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 18007  011402  010D               	movlb	13	; () banked
 18008  011404  5134               	movf	52,w,b	;volatile
 18009  011406  0B0F               	andlw	15
 18010  011408  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18011  01140A  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18012  01140C  0D01               	mullw	1
 18013  01140E  0E16               	movlw	low _ep_data_in
 18014  011410  24F3               	addwf	prodl,w,c
 18015  011412  6ED9               	movwf	fsr2l,c
 18016  011414  0E00               	movlw	high _ep_data_in
 18017  011416  20F4               	addwfc	prodh,w,c
 18018  011418  6EDA               	movwf	fsr2h,c
 18019  01141A                     L10:
 18020  01141A  82DF               	bsf	indf2,1,c
 18021  01141C                     i2l5889:
 18022                           
 18023                           ;usb_device.c: 2873: }
 18024                           ;usb_device.c: 2874: }
 18025                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 18026  01141C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18027  011420  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18028  011424  0E00               	movlw	0
 18029  011426  84DB               	bsf	plusw2,2,c
 18030                           
 18031                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 18032  011428  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18033  01142C  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18034  011430  0E00               	movlw	0
 18035  011432  8EDB               	bsf	plusw2,7,c
 18036                           
 18037                           ;usb_device.c: 2879: }
 18038  011434  0012               	return	
 18039  011436                     i2l5893:
 18040                           
 18041                           ;usb_device.c: 2880: else
 18042                           ;usb_device.c: 2881: {
 18043                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18044  011436  0E04               	movlw	4
 18045  011438  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18046                           
 18047                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 18048  01143A  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18049  01143E  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18050  011442  AEDF               	btfss	indf2,7,c
 18051  011444  D01B               	goto	i2l5903
 18052                           
 18053                           ;usb_device.c: 2888: {
 18054                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 18055  011446  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18056  01144A  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18057  01144E  0E7F               	movlw	127
 18058  011450  16DF               	andwf	indf2,f,c
 18059                           
 18060                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 18061  011452  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18062  011456  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18063  01145A  0E00               	movlw	0
 18064  01145C  8CDB               	bsf	plusw2,6,c
 18065                           
 18066                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18067  01145E  0E00               	movlw	0
 18068  011460  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18069  011462  0E05               	movlw	5
 18070  011464  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18071  011466  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18072  01146A  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18073  01146E  0E00               	movlw	0
 18074  011470  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18075  011472  0E02               	movlw	2
 18076  011474  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18077  011476  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18078                           
 18079                           ;usb_device.c: 2894: }
 18080  01147A  D006               	goto	i2l5905
 18081  01147C                     i2l5903:
 18082                           
 18083                           ;usb_device.c: 2895: else
 18084                           ;usb_device.c: 2896: {
 18085                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 18086  01147C  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18087  011480  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18088  011484  0E00               	movlw	0
 18089  011486  8CDB               	bsf	plusw2,6,c
 18090  011488                     i2l5905:
 18091                           
 18092                           ;usb_device.c: 2899: }
 18093                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 18094  011488  0E04               	movlw	4
 18095  01148A  1A46               	xorwf	USBStdFeatureReqHandler@p,f,c
 18096                           
 18097                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 18098  01148C  B245               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 18099  01148E  D006               	goto	i2l393
 18100  011490  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18101  011494  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18102  011498  AEDF               	btfss	indf2,7,c
 18103  01149A  D033               	goto	i2l5919
 18104  01149C                     i2l393:
 18105                           
 18106                           ;usb_device.c: 2910: {
 18107                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 18108  01149C  010D               	movlb	13	; () banked
 18109  01149E  BF34               	btfsc	52,7,b	;volatile
 18110  0114A0  D00E               	goto	i2l5913
 18111                           
 18112                           ; BSR set to: 13
 18113                           ;usb_device.c: 2912: {
 18114                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18115  0114A2  010D               	movlb	13	; () banked
 18116  0114A4  5134               	movf	52,w,b	;volatile
 18117  0114A6  0B0F               	andlw	15
 18118  0114A8  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18119  0114AA  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18120  0114AC  0D01               	mullw	1
 18121  0114AE  0EDB               	movlw	low _ep_data_out
 18122  0114B0  24F3               	addwf	prodl,w,c
 18123  0114B2  6ED9               	movwf	fsr2l,c
 18124  0114B4  0E00               	movlw	high _ep_data_out
 18125  0114B6  20F4               	addwfc	prodh,w,c
 18126  0114B8  6EDA               	movwf	fsr2h,c
 18127  0114BA  0100               	movlb	0	; () banked
 18128  0114BC  D00C               	goto	L11
 18129  0114BE                     i2l5913:
 18130                           
 18131                           ;usb_device.c: 2915: else
 18132                           ;usb_device.c: 2916: {
 18133                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 18134  0114BE  010D               	movlb	13	; () banked
 18135  0114C0  5134               	movf	52,w,b	;volatile
 18136  0114C2  0B0F               	andlw	15
 18137  0114C4  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18138  0114C6  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18139  0114C8  0D01               	mullw	1
 18140  0114CA  0E16               	movlw	low _ep_data_in
 18141  0114CC  24F3               	addwf	prodl,w,c
 18142  0114CE  6ED9               	movwf	fsr2l,c
 18143  0114D0  0E00               	movlw	high _ep_data_in
 18144  0114D2  20F4               	addwfc	prodh,w,c
 18145  0114D4  6EDA               	movwf	fsr2h,c
 18146  0114D6                     L11:
 18147  0114D6  92DF               	bcf	indf2,1,c
 18148                           
 18149                           ;usb_device.c: 2918: }
 18150                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18151                           
 18152                           ; BSR set to: 13
 18153  0114D8  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18154  0114DC  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18155  0114E0  0E3B               	movlw	59
 18156  0114E2  16DF               	andwf	indf2,f,c
 18157                           
 18158                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 18159  0114E4  0E00               	movlw	0
 18160  0114E6  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18161  0114E8  0E05               	movlw	5
 18162  0114EA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18163  0114EC  C046  F03C         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 18164  0114F0  C047  F03D         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 18165  0114F4  0E00               	movlw	0
 18166  0114F6  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18167  0114F8  0E02               	movlw	2
 18168  0114FA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18169  0114FC  EC2F  F0A2         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18170                           
 18171                           ;usb_device.c: 2924: }
 18172  011500  D006               	goto	i2l5921
 18173  011502                     i2l5919:
 18174                           
 18175                           ;usb_device.c: 2925: else
 18176                           ;usb_device.c: 2926: {
 18177                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 18178  011502  C046  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 18179  011506  C047  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 18180  01150A  0E3B               	movlw	59
 18181  01150C  16DF               	andwf	indf2,f,c
 18182  01150E                     i2l5921:
 18183                           
 18184                           ;usb_device.c: 2929: }
 18185                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 18186  01150E  010D               	movlb	13	; () banked
 18187  011510  5134               	movf	52,w,b	;volatile
 18188  011512  0B0F               	andlw	15
 18189  011514  6E42               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18190  011516  5042               	movf	??_USBStdFeatureReqHandler,w,c
 18191  011518  0D01               	mullw	1
 18192  01151A  0E26               	movlw	38
 18193  01151C  24F3               	addwf	prodl,w,c
 18194  01151E  6E43               	movwf	USBStdFeatureReqHandler@pUEP,c
 18195  011520  0E0F               	movlw	15
 18196  011522  20F4               	addwfc	prodh,w,c
 18197  011524  6E44               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 18198                           
 18199                           ; BSR set to: 13
 18200                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 18201  011526  C043  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 18202  01152A  C044  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 18203  01152E  0EFE               	movlw	254
 18204  011530  16DF               	andwf	indf2,f,c
 18205                           
 18206                           ; BSR set to: 13
 18207  011532  0012               	return	
 18208  011534                     __end_of_USBStdFeatureReqHandler:
 18209                           	opt stack 0
 18210                           pclatu	equ	0xFFB
 18211                           pclath	equ	0xFFA
 18212                           tblptru	equ	0xFF8
 18213                           tblptrh	equ	0xFF7
 18214                           tblptrl	equ	0xFF6
 18215                           tablat	equ	0xFF5
 18216                           prodh	equ	0xFF4
 18217                           prodl	equ	0xFF3
 18218                           intcon	equ	0xFF2
 18219                           intcon2	equ	0xFF1
 18220                           indf0	equ	0xFEF
 18221                           postinc0	equ	0xFEE
 18222                           fsr0h	equ	0xFEA
 18223                           fsr0l	equ	0xFE9
 18224                           wreg	equ	0xFE8
 18225                           indf1	equ	0xFE7
 18226                           postinc1	equ	0xFE6
 18227                           postdec1	equ	0xFE5
 18228                           fsr1h	equ	0xFE2
 18229                           fsr1l	equ	0xFE1
 18230                           indf2	equ	0xFDF
 18231                           postinc2	equ	0xFDE
 18232                           postdec2	equ	0xFDD
 18233                           plusw2	equ	0xFDB
 18234                           fsr2h	equ	0xFDA
 18235                           fsr2l	equ	0xFD9
 18236                           status	equ	0xFD8
 18237                           
 18238 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 18239 ;; Defined at:
 18240 ;;		line 44 in file "../My_library/My_usb_cdc.c"
 18241 ;; Parameters:    Size  Location     Type
 18242 ;;  event           2   12[COMRAM] enum E8545
 18243 ;;  pdata           2   14[COMRAM] PTR void 
 18244 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 18245 ;;  size            2   16[COMRAM] unsigned int 
 18246 ;; Auto vars:     Size  Location     Type
 18247 ;;		None
 18248 ;; Return value:  Size  Location     Type
 18249 ;;                  1    wreg      unsigned char 
 18250 ;; Registers used:
 18251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18252 ;; Tracked objects:
 18253 ;;		On entry : 0/0
 18254 ;;		On exit  : 0/0
 18255 ;;		Unchanged: 0/0
 18256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18257 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18260 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18261 ;;Total ram usage:        8 bytes
 18262 ;; Hardware stack levels used:    1
 18263 ;; Hardware stack levels required when called:    3
 18264 ;; This function calls:
 18265 ;;		_CDCInitEP
 18266 ;;		_USBCheckCDCRequest
 18267 ;; This function is called by:
 18268 ;;		_USBDeviceTasks
 18269 ;;		_USBStdSetCfgHandler
 18270 ;;		_USBSuspend
 18271 ;;		_USBWakeFromSuspend
 18272 ;;		_USBCtrlTrfSetupHandler
 18273 ;;		_USBCheckStdRequest
 18274 ;;		_USBStdFeatureReqHandler
 18275 ;; This function uses a non-reentrant model
 18276 ;;
 18277                           
 18278                           	psect	text78
 18279  01445E                     __ptext78:
 18280                           	opt stack 0
 18281  01445E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 18282                           	opt stack 15
 18283                           
 18284                           ;My_usb_cdc.c: 45: switch ((int) event) {
 18285                           
 18286                           ;incstack = 0
 18287  01445E  D006               	goto	i2l5515
 18288  014460                     i2l5509:
 18289                           
 18290                           ;My_usb_cdc.c: 47: CDCInitEP();
 18291  014460  EC56  F09F         	call	_CDCInitEP	;wreg free
 18292                           
 18293                           ;My_usb_cdc.c: 48: break;
 18294  014464  0012               	return	
 18295  014466                     i2l5511:
 18296                           
 18297                           ;My_usb_cdc.c: 50: USBCheckCDCRequest();
 18298  014466  EC1A  F09B         	call	_USBCheckCDCRequest	;wreg free
 18299                           
 18300                           ;My_usb_cdc.c: 52: }
 18301                           
 18302                           ;My_usb_cdc.c: 51: break;
 18303  01446A  0012               	return	
 18304  01446C                     i2l5515:
 18305  01446C  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 18306  014470  C03B  F041         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 18307                           
 18308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18309                           ; Switch size 1, requested type "space"
 18310                           ; Number of cases is 1, Range of values is 0 to 0
 18311                           ; switch strategies available:
 18312                           ; Name         Instructions Cycles
 18313                           ; simple_byte            4     3 (average)
 18314                           ;	Chosen strategy is simple_byte
 18315  014474  5041               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 18316  014476  0A00               	xorlw	0	; case 0
 18317  014478  A4D8               	btfss	status,2,c
 18318  01447A  0012               	return	
 18319                           
 18320                           ; Switch size 1, requested type "space"
 18321                           ; Number of cases is 2, Range of values is 1 to 3
 18322                           ; switch strategies available:
 18323                           ; Name         Instructions Cycles
 18324                           ; simple_byte            7     4 (average)
 18325                           ;	Chosen strategy is simple_byte
 18326  01447C  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 18327  01447E  0A01               	xorlw	1	; case 1
 18328  014480  B4D8               	btfsc	status,2,c
 18329  014482  D7EE               	goto	i2l5509
 18330  014484  0A02               	xorlw	2	; case 3
 18331  014486  A4D8               	btfss	status,2,c
 18332  014488  0012               	return	
 18333  01448A  D7ED               	goto	i2l5511
 18334  01448C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 18335                           	opt stack 0
 18336                           pclatu	equ	0xFFB
 18337                           pclath	equ	0xFFA
 18338                           tblptru	equ	0xFF8
 18339                           tblptrh	equ	0xFF7
 18340                           tblptrl	equ	0xFF6
 18341                           tablat	equ	0xFF5
 18342                           prodh	equ	0xFF4
 18343                           prodl	equ	0xFF3
 18344                           intcon	equ	0xFF2
 18345                           intcon2	equ	0xFF1
 18346                           indf0	equ	0xFEF
 18347                           postinc0	equ	0xFEE
 18348                           fsr0h	equ	0xFEA
 18349                           fsr0l	equ	0xFE9
 18350                           wreg	equ	0xFE8
 18351                           indf1	equ	0xFE7
 18352                           postinc1	equ	0xFE6
 18353                           postdec1	equ	0xFE5
 18354                           fsr1h	equ	0xFE2
 18355                           fsr1l	equ	0xFE1
 18356                           indf2	equ	0xFDF
 18357                           postinc2	equ	0xFDE
 18358                           postdec2	equ	0xFDD
 18359                           plusw2	equ	0xFDB
 18360                           fsr2h	equ	0xFDA
 18361                           fsr2l	equ	0xFD9
 18362                           status	equ	0xFD8
 18363                           
 18364 ;; *************** function _USBCheckCDCRequest *****************
 18365 ;; Defined at:
 18366 ;;		line 204 in file "../My_library/usb/usb_device_cdc.c"
 18367 ;; Parameters:    Size  Location     Type
 18368 ;;		None
 18369 ;; Auto vars:     Size  Location     Type
 18370 ;;		None
 18371 ;; Return value:  Size  Location     Type
 18372 ;;		None               void
 18373 ;; Registers used:
 18374 ;;		wreg, status,2, status,0
 18375 ;; Tracked objects:
 18376 ;;		On entry : 0/0
 18377 ;;		On exit  : 0/0
 18378 ;;		Unchanged: 0/0
 18379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18384 ;;Total ram usage:        0 bytes
 18385 ;; Hardware stack levels used:    1
 18386 ;; This function calls:
 18387 ;;		Nothing
 18388 ;; This function is called by:
 18389 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           	psect	text79
 18394  013634                     __ptext79:
 18395                           	opt stack 0
 18396  013634                     _USBCheckCDCRequest:
 18397                           	opt stack 17
 18398                           
 18399                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 18400                           
 18401                           ;incstack = 0
 18402  013634  010D               	movlb	13	; () banked
 18403  013636  5130               	movf	48,w,b	;volatile
 18404  013638  0B1F               	andlw	31
 18405  01363A  06E8               	decf	wreg,f,c
 18406  01363C  A4D8               	btfss	status,2,c
 18407  01363E  0012               	return	
 18408                           
 18409                           ; BSR set to: 13
 18410                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 18411                           
 18412                           ; BSR set to: 13
 18413                           
 18414                           ; BSR set to: 13
 18415  013640  010D               	movlb	13	; () banked
 18416  013642  3930               	swapf	48,w,b	;volatile
 18417  013644  32E8               	rrcf	wreg,f,c
 18418  013646  0B03               	andlw	3
 18419  013648  06E8               	decf	wreg,f,c
 18420  01364A  A4D8               	btfss	status,2,c
 18421  01364C  0012               	return	
 18422                           
 18423                           ; BSR set to: 13
 18424                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 18425                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 18426                           
 18427                           ; BSR set to: 13
 18428                           
 18429                           ; BSR set to: 13
 18430  01364E  010D               	movlb	13	; () banked
 18431  013650  5134               	movf	52,w,b	;volatile
 18432  013652  B4D8               	btfsc	status,2,c
 18433  013654  D035               	goto	i2l5389
 18434                           
 18435                           ; BSR set to: 13
 18436  013656  010D               	movlb	13	; () banked
 18437  013658  0534               	decf	52,w,b	;volatile
 18438  01365A  A4D8               	btfss	status,2,c
 18439  01365C  0012               	return	
 18440  01365E  D030               	goto	i2l5389
 18441  013660                     i2l5365:
 18442                           
 18443                           ; BSR set to: 13
 18444                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18445  013660  0E58               	movlw	low _dummy_encapsulated_cmd_response
 18446  013662  6E0A               	movwf	_inPipes,c	;volatile
 18447  013664  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18448  013666  6E0B               	movwf	_inPipes+1,c	;volatile
 18449                           
 18450                           ; BSR set to: 13
 18451                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 18452  013668  0E00               	movlw	0
 18453  01366A  6E0F               	movwf	_inPipes+5,c	;volatile
 18454  01366C  0E08               	movlw	8
 18455  01366E  6E0E               	movwf	_inPipes+4,c	;volatile
 18456                           
 18457                           ; BSR set to: 13
 18458                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18459  013670  800D               	bsf	_inPipes+3,0,c	;volatile
 18460                           
 18461                           ; BSR set to: 13
 18462                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 18463  013672  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18464                           
 18465                           ;usb_device_cdc.c: 232: break;
 18466  013674  0012               	return	
 18467  013676                     i2l5373:
 18468                           
 18469                           ; BSR set to: 13
 18470                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 18471  013676  0E58               	movlw	low _dummy_encapsulated_cmd_response
 18472  013678  6E0A               	movwf	_inPipes,c	;volatile
 18473  01367A  0E01               	movlw	high _dummy_encapsulated_cmd_response
 18474  01367C  6E0B               	movwf	_inPipes+1,c	;volatile
 18475                           
 18476                           ; BSR set to: 13
 18477                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 18478  01367E  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18479                           
 18480                           ;usb_device_cdc.c: 237: break;
 18481  013680  0012               	return	
 18482  013682                     i2l450:
 18483                           
 18484                           ; BSR set to: 13
 18485                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 18486  013682  CD36 F005          	movff	3382,_outPipes+4	;volatile
 18487  013686  CD37 F006          	movff	3383,_outPipes+5	;volatile
 18488                           
 18489                           ; BSR set to: 13
 18490                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 18491  01368A  0E80               	movlw	low _line_coding
 18492  01368C  6E01               	movwf	_outPipes,c	;volatile
 18493  01368E  0E01               	movlw	high _line_coding
 18494  013690  6E02               	movwf	_outPipes+1,c	;volatile
 18495                           
 18496                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 18497  013692  0E00               	movlw	0
 18498  013694  6E07               	movwf	_outPipes+6,c	;volatile
 18499  013696  0E00               	movlw	0
 18500  013698  6E08               	movwf	_outPipes+7,c	;volatile
 18501  01369A  0E00               	movlw	0
 18502  01369C  6E09               	movwf	_outPipes+8,c	;volatile
 18503                           
 18504                           ; BSR set to: 13
 18505                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 18506  01369E  8E04               	bsf	_outPipes+3,7,c	;volatile
 18507                           
 18508                           ;usb_device_cdc.c: 246: break;
 18509  0136A0  0012               	return	
 18510  0136A2                     i2l5381:
 18511                           
 18512                           ; BSR set to: 13
 18513                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 18514  0136A2  0E80               	movlw	low _line_coding
 18515  0136A4  6E0A               	movwf	_inPipes,c	;volatile
 18516  0136A6  0E01               	movlw	high _line_coding
 18517  0136A8  6E0B               	movwf	_inPipes+1,c	;volatile
 18518                           
 18519                           ; BSR set to: 13
 18520  0136AA  0E00               	movlw	0
 18521  0136AC  6E0F               	movwf	_inPipes+5,c	;volatile
 18522  0136AE  0E07               	movlw	7
 18523  0136B0  6E0E               	movwf	_inPipes+4,c	;volatile
 18524                           
 18525                           ; BSR set to: 13
 18526  0136B2  0EC1               	movlw	193
 18527  0136B4  6E0D               	movwf	_inPipes+3,c	;volatile
 18528                           
 18529                           ;usb_device_cdc.c: 253: break;
 18530  0136B6  0012               	return	
 18531  0136B8                     i2l452:
 18532                           
 18533                           ; BSR set to: 13
 18534                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 18535  0136B8  CD32 F0F0          	movff	3378,_control_signal_bitmap	;volatile
 18536                           
 18537                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 18538  0136BC  8E0D               	bsf	_inPipes+3,7,c	;volatile
 18539                           
 18540                           ; BSR set to: 13
 18541                           ;usb_device_cdc.c: 315: }
 18542                           
 18543                           ; BSR set to: 13
 18544                           ;usb_device_cdc.c: 314: break;
 18545                           
 18546                           ;usb_device_cdc.c: 313: default:
 18547                           
 18548                           ;usb_device_cdc.c: 289: break;
 18549  0136BE  0012               	return	
 18550  0136C0                     i2l5389:
 18551                           
 18552                           ; BSR set to: 13
 18553  0136C0  010D               	movlb	13	; () banked
 18554  0136C2  5131               	movf	49,w,b	;volatile
 18555                           
 18556                           ; Switch size 1, requested type "space"
 18557                           ; Number of cases is 5, Range of values is 0 to 34
 18558                           ; switch strategies available:
 18559                           ; Name         Instructions Cycles
 18560                           ; simple_byte           16     9 (average)
 18561                           ;	Chosen strategy is simple_byte
 18562  0136C4  0A00               	xorlw	0	; case 0
 18563  0136C6  B4D8               	btfsc	status,2,c
 18564  0136C8  D7CB               	goto	i2l5365
 18565  0136CA  0A01               	xorlw	1	; case 1
 18566  0136CC  B4D8               	btfsc	status,2,c
 18567  0136CE  D7D3               	goto	i2l5373
 18568  0136D0  0A21               	xorlw	33	; case 32
 18569  0136D2  B4D8               	btfsc	status,2,c
 18570  0136D4  D7D6               	goto	i2l450
 18571  0136D6  0A01               	xorlw	1	; case 33
 18572  0136D8  B4D8               	btfsc	status,2,c
 18573  0136DA  D7E3               	goto	i2l5381
 18574  0136DC  0A03               	xorlw	3	; case 34
 18575  0136DE  A4D8               	btfss	status,2,c
 18576  0136E0  0012               	return	
 18577  0136E2  D7EA               	goto	i2l452
 18578  0136E4                     __end_of_USBCheckCDCRequest:
 18579                           	opt stack 0
 18580                           pclatu	equ	0xFFB
 18581                           pclath	equ	0xFFA
 18582                           tblptru	equ	0xFF8
 18583                           tblptrh	equ	0xFF7
 18584                           tblptrl	equ	0xFF6
 18585                           tablat	equ	0xFF5
 18586                           prodh	equ	0xFF4
 18587                           prodl	equ	0xFF3
 18588                           intcon	equ	0xFF2
 18589                           intcon2	equ	0xFF1
 18590                           indf0	equ	0xFEF
 18591                           postinc0	equ	0xFEE
 18592                           fsr0h	equ	0xFEA
 18593                           fsr0l	equ	0xFE9
 18594                           wreg	equ	0xFE8
 18595                           indf1	equ	0xFE7
 18596                           postinc1	equ	0xFE6
 18597                           postdec1	equ	0xFE5
 18598                           fsr1h	equ	0xFE2
 18599                           fsr1l	equ	0xFE1
 18600                           indf2	equ	0xFDF
 18601                           postinc2	equ	0xFDE
 18602                           postdec2	equ	0xFDD
 18603                           plusw2	equ	0xFDB
 18604                           fsr2h	equ	0xFDA
 18605                           fsr2l	equ	0xFD9
 18606                           status	equ	0xFD8
 18607                           
 18608 ;; *************** function _CDCInitEP *****************
 18609 ;; Defined at:
 18610 ;;		line 351 in file "../My_library/usb/usb_device_cdc.c"
 18611 ;; Parameters:    Size  Location     Type
 18612 ;;		None
 18613 ;; Auto vars:     Size  Location     Type
 18614 ;;		None
 18615 ;; Return value:  Size  Location     Type
 18616 ;;		None               void
 18617 ;; Registers used:
 18618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18619 ;; Tracked objects:
 18620 ;;		On entry : 0/0
 18621 ;;		On exit  : 0/0
 18622 ;;		Unchanged: 0/0
 18623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18628 ;;Total ram usage:        0 bytes
 18629 ;; Hardware stack levels used:    1
 18630 ;; Hardware stack levels required when called:    2
 18631 ;; This function calls:
 18632 ;;		_USBEnableEndpoint
 18633 ;;		i2_USBTransferOnePacket
 18634 ;; This function is called by:
 18635 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18636 ;; This function uses a non-reentrant model
 18637 ;;
 18638                           
 18639                           	psect	text80
 18640  013EAC                     __ptext80:
 18641                           	opt stack 0
 18642  013EAC                     _CDCInitEP:
 18643                           	opt stack 15
 18644                           
 18645                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 18646                           
 18647                           ; BSR set to: 13
 18648                           ;incstack = 0
 18649  013EAC  0E00               	movlw	0
 18650  013EAE  0101               	movlb	1	; () banked
 18651  013EB0  6F80               	movwf	_line_coding& (0+255),b
 18652  013EB2  0E4B               	movlw	75
 18653  013EB4  6F81               	movwf	(_line_coding+1)& (0+255),b
 18654  013EB6  0E00               	movlw	0
 18655  013EB8  6F82               	movwf	(_line_coding+2)& (0+255),b
 18656  013EBA  0E00               	movlw	0
 18657  013EBC  6F83               	movwf	(_line_coding+3)& (0+255),b
 18658                           
 18659                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 18660  013EBE  0E00               	movlw	0
 18661  013EC0  0101               	movlb	1	; () banked
 18662  013EC2  6F84               	movwf	(_line_coding+4)& (0+255),b
 18663                           
 18664                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 18665  013EC4  0E00               	movlw	0
 18666  013EC6  0101               	movlb	1	; () banked
 18667  013EC8  6F85               	movwf	(_line_coding+5)& (0+255),b
 18668                           
 18669                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 18670  013ECA  0E08               	movlw	8
 18671  013ECC  0101               	movlb	1	; () banked
 18672  013ECE  6F86               	movwf	(_line_coding+6)& (0+255),b
 18673                           
 18674                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 18675  013ED0  0E00               	movlw	0
 18676  013ED2  0100               	movlb	0	; () banked
 18677  013ED4  6FEE               	movwf	_cdc_rx_len& (0+255),b
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 18681  013ED6  0E1A               	movlw	26
 18682  013ED8  6E36               	movwf	USBEnableEndpoint@options,c
 18683  013EDA  0E01               	movlw	1
 18684  013EDC  EC8A  F0A1         	call	_USBEnableEndpoint
 18685                           
 18686                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 18687  013EE0  0E1E               	movlw	30
 18688  013EE2  6E36               	movwf	USBEnableEndpoint@options,c
 18689  013EE4  0E02               	movlw	2
 18690  013EE6  EC8A  F0A1         	call	_USBEnableEndpoint
 18691                           
 18692                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 18693  013EEA  0E00               	movlw	0
 18694  013EEC  6E2E               	movwf	i2USBTransferOnePacket@dir,c
 18695  013EEE  0E00               	movlw	low _cdc_data_rx
 18696  013EF0  6E2F               	movwf	i2USBTransferOnePacket@data,c
 18697  013EF2  0E02               	movlw	high _cdc_data_rx
 18698  013EF4  6E30               	movwf	i2USBTransferOnePacket@data+1,c
 18699  013EF6  0E40               	movlw	64
 18700  013EF8  6E31               	movwf	i2USBTransferOnePacket@len,c
 18701  013EFA  0E02               	movlw	2
 18702  013EFC  EC60  F09A         	call	i2_USBTransferOnePacket
 18703  013F00  C02E  F0E6         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 18704  013F04  C02F  F0E7         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 18705                           
 18706                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 18707  013F08  0E00               	movlw	0
 18708  013F0A  0100               	movlb	0	; () banked
 18709  013F0C  6FE4               	movwf	_CDCDataInHandle& (0+255),b
 18710  013F0E  0E00               	movlw	0
 18711  013F10  0100               	movlb	0	; () banked
 18712  013F12  6FE5               	movwf	(_CDCDataInHandle+1)& (0+255),b
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 18716  013F14  0E00               	movlw	0
 18717  013F16  6E26               	movwf	_cdc_trf_state,c
 18718                           
 18719                           ; BSR set to: 0
 18720  013F18  0012               	return		;funcret
 18721  013F1A                     __end_of_CDCInitEP:
 18722                           	opt stack 0
 18723                           pclatu	equ	0xFFB
 18724                           pclath	equ	0xFFA
 18725                           tblptru	equ	0xFF8
 18726                           tblptrh	equ	0xFF7
 18727                           tblptrl	equ	0xFF6
 18728                           tablat	equ	0xFF5
 18729                           prodh	equ	0xFF4
 18730                           prodl	equ	0xFF3
 18731                           intcon	equ	0xFF2
 18732                           intcon2	equ	0xFF1
 18733                           indf0	equ	0xFEF
 18734                           postinc0	equ	0xFEE
 18735                           fsr0h	equ	0xFEA
 18736                           fsr0l	equ	0xFE9
 18737                           wreg	equ	0xFE8
 18738                           indf1	equ	0xFE7
 18739                           postinc1	equ	0xFE6
 18740                           postdec1	equ	0xFE5
 18741                           fsr1h	equ	0xFE2
 18742                           fsr1l	equ	0xFE1
 18743                           indf2	equ	0xFDF
 18744                           postinc2	equ	0xFDE
 18745                           postdec2	equ	0xFDD
 18746                           plusw2	equ	0xFDB
 18747                           fsr2h	equ	0xFDA
 18748                           fsr2l	equ	0xFD9
 18749                           status	equ	0xFD8
 18750                           
 18751 ;; *************** function i2_USBTransferOnePacket *****************
 18752 ;; Defined at:
 18753 ;;		line 995 in file "../My_library/usb/usb_device.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;  ep              1    wreg     unsigned char 
 18756 ;;  dir             1    0[COMRAM] unsigned char 
 18757 ;;  data            2    1[COMRAM] PTR unsigned char 
 18758 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18759 ;;  len             1    3[COMRAM] unsigned char 
 18760 ;; Auto vars:     Size  Location     Type
 18761 ;;  ep              1    4[COMRAM] unsigned char 
 18762 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18763 ;;		 -> NULL(0), BDT(48), 
 18764 ;; Return value:  Size  Location     Type
 18765 ;;                  2    0[COMRAM] PTR void 
 18766 ;; Registers used:
 18767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18768 ;; Tracked objects:
 18769 ;;		On entry : 0/0
 18770 ;;		On exit  : 0/0
 18771 ;;		Unchanged: 0/0
 18772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18774 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;Total ram usage:        7 bytes
 18778 ;; Hardware stack levels used:    1
 18779 ;; This function calls:
 18780 ;;		Nothing
 18781 ;; This function is called by:
 18782 ;;		_CDCInitEP
 18783 ;; This function uses a non-reentrant model
 18784 ;;
 18785                           
 18786                           	psect	text81
 18787  0134C0                     __ptext81:
 18788                           	opt stack 0
 18789  0134C0                     i2_USBTransferOnePacket:
 18790                           	opt stack 16
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;incstack = 0
 18794                           ;i2USBTransferOnePacket@ep stored from wreg
 18795  0134C0  6E32               	movwf	i2USBTransferOnePacket@ep,c
 18796                           
 18797                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18798                           ;usb_device.c: 1000: if(dir != 0)
 18799  0134C2  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18800  0134C4  B4D8               	btfsc	status,2,c
 18801  0134C6  D007               	goto	i2l5325
 18802                           
 18803                           ;usb_device.c: 1001: {
 18804                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18805  0134C8  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18806  0134CA  0D02               	mullw	2
 18807  0134CC  0E10               	movlw	low _pBDTEntryIn
 18808  0134CE  24F3               	addwf	prodl,w,c
 18809  0134D0  6ED9               	movwf	fsr2l,c
 18810  0134D2  0E00               	movlw	high _pBDTEntryIn
 18811  0134D4  D006               	goto	L12
 18812  0134D6                     i2l5325:
 18813                           
 18814                           ;usb_device.c: 1005: else
 18815                           ;usb_device.c: 1006: {
 18816                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18817  0134D6  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18818  0134D8  0D02               	mullw	2
 18819  0134DA  0ED5               	movlw	low _pBDTEntryOut
 18820  0134DC  24F3               	addwf	prodl,w,c
 18821  0134DE  6ED9               	movwf	fsr2l,c
 18822  0134E0  0E00               	movlw	high _pBDTEntryOut
 18823  0134E2                     L12:
 18824  0134E2  20F4               	addwfc	prodh,w,c
 18825  0134E4  6EDA               	movwf	fsr2h,c
 18826  0134E6  CFDE F033          	movff	postinc2,i2USBTransferOnePacket@handle
 18827  0134EA  CFDD F034          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18828                           
 18829                           ;usb_device.c: 1009: }
 18830                           ;usb_device.c: 1013: if(handle == 0)
 18831  0134EE  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18832  0134F0  1034               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18833  0134F2  A4D8               	btfss	status,2,c
 18834  0134F4  D005               	goto	i2l5333
 18835                           
 18836                           ;usb_device.c: 1014: {
 18837                           ;usb_device.c: 1015: return 0;
 18838  0134F6  0E00               	movlw	0
 18839  0134F8  6E2E               	movwf	?i2_USBTransferOnePacket,c
 18840  0134FA  0E00               	movlw	0
 18841  0134FC  6E2F               	movwf	?i2_USBTransferOnePacket+1,c
 18842  0134FE  0012               	return	
 18843  013500                     i2l5333:
 18844                           
 18845                           ;usb_device.c: 1016: }
 18846                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18847  013500  EE20 F002          	lfsr	2,2
 18848  013504  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18849  013506  26D9               	addwf	fsr2l,f,c
 18850  013508  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18851  01350A  22DA               	addwfc	fsr2h,f,c
 18852  01350C  C02F  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18853  013510  C030  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18854                           
 18855                           ;usb_device.c: 1030: handle->CNT = len;
 18856  013514  EE20 F001          	lfsr	2,1
 18857  013518  5033               	movf	i2USBTransferOnePacket@handle,w,c
 18858  01351A  26D9               	addwf	fsr2l,f,c
 18859  01351C  5034               	movf	i2USBTransferOnePacket@handle+1,w,c
 18860  01351E  22DA               	addwfc	fsr2h,f,c
 18861  013520  C031  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18862                           
 18863                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18864  013524  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18865  013528  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18866  01352C  0E40               	movlw	64
 18867  01352E  16DF               	andwf	indf2,f,c
 18868                           
 18869                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18870  013530  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18871  013534  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18872  013538  0E00               	movlw	0
 18873  01353A  86DB               	bsf	plusw2,3,c
 18874                           
 18875                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18876  01353C  C033  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18877  013540  C034  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18878  013544  0E00               	movlw	0
 18879  013546  8EDB               	bsf	plusw2,7,c
 18880                           
 18881                           ;usb_device.c: 1036: if(dir != 0)
 18882  013548  502E               	movf	i2USBTransferOnePacket@dir,w,c
 18883  01354A  B4D8               	btfsc	status,2,c
 18884  01354C  D007               	goto	i2l5345
 18885                           
 18886                           ;usb_device.c: 1037: {
 18887                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18888  01354E  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18889  013550  0D02               	mullw	2
 18890  013552  0E10               	movlw	low _pBDTEntryIn
 18891  013554  24F3               	addwf	prodl,w,c
 18892  013556  6ED9               	movwf	fsr2l,c
 18893  013558  0E00               	movlw	high _pBDTEntryIn
 18894  01355A  D006               	goto	L13
 18895  01355C                     i2l5345:
 18896                           
 18897                           ;usb_device.c: 1041: else
 18898                           ;usb_device.c: 1042: {
 18899                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18900  01355C  5032               	movf	i2USBTransferOnePacket@ep,w,c
 18901  01355E  0D02               	mullw	2
 18902  013560  0ED5               	movlw	low _pBDTEntryOut
 18903  013562  24F3               	addwf	prodl,w,c
 18904  013564  6ED9               	movwf	fsr2l,c
 18905  013566  0E00               	movlw	high _pBDTEntryOut
 18906  013568                     L13:
 18907  013568  20F4               	addwfc	prodh,w,c
 18908  01356A  6EDA               	movwf	fsr2h,c
 18909  01356C  0E04               	movlw	4
 18910  01356E  1ADF               	xorwf	indf2,f,c
 18911                           
 18912                           ;usb_device.c: 1045: }
 18913                           ;usb_device.c: 1046: return (void*)handle;
 18914  013570  C033  F02E         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18915  013574  C034  F02F         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18916  013578  0012               	return	
 18917  01357A                     __end_ofi2_USBTransferOnePacket:
 18918                           	opt stack 0
 18919                           pclatu	equ	0xFFB
 18920                           pclath	equ	0xFFA
 18921                           tblptru	equ	0xFF8
 18922                           tblptrh	equ	0xFF7
 18923                           tblptrl	equ	0xFF6
 18924                           tablat	equ	0xFF5
 18925                           prodh	equ	0xFF4
 18926                           prodl	equ	0xFF3
 18927                           intcon	equ	0xFF2
 18928                           intcon2	equ	0xFF1
 18929                           indf0	equ	0xFEF
 18930                           postinc0	equ	0xFEE
 18931                           fsr0h	equ	0xFEA
 18932                           fsr0l	equ	0xFE9
 18933                           wreg	equ	0xFE8
 18934                           indf1	equ	0xFE7
 18935                           postinc1	equ	0xFE6
 18936                           postdec1	equ	0xFE5
 18937                           fsr1h	equ	0xFE2
 18938                           fsr1l	equ	0xFE1
 18939                           indf2	equ	0xFDF
 18940                           postinc2	equ	0xFDE
 18941                           postdec2	equ	0xFDD
 18942                           plusw2	equ	0xFDB
 18943                           fsr2h	equ	0xFDA
 18944                           fsr2l	equ	0xFD9
 18945                           status	equ	0xFD8
 18946                           
 18947 ;; *************** function _USBEnableEndpoint *****************
 18948 ;; Defined at:
 18949 ;;		line 878 in file "../My_library/usb/usb_device.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;  ep              1    wreg     unsigned char 
 18952 ;;  options         1    8[COMRAM] unsigned char 
 18953 ;; Auto vars:     Size  Location     Type
 18954 ;;  ep              1   11[COMRAM] unsigned char 
 18955 ;;  p               2    9[COMRAM] PTR unsigned char 
 18956 ;;		 -> UEP0(1), 
 18957 ;; Return value:  Size  Location     Type
 18958 ;;		None               void
 18959 ;; Registers used:
 18960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18961 ;; Tracked objects:
 18962 ;;		On entry : 0/0
 18963 ;;		On exit  : 0/0
 18964 ;;		Unchanged: 0/0
 18965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18966 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18967 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18970 ;;Total ram usage:        4 bytes
 18971 ;; Hardware stack levels used:    1
 18972 ;; Hardware stack levels required when called:    1
 18973 ;; This function calls:
 18974 ;;		_USBConfigureEndpoint
 18975 ;; This function is called by:
 18976 ;;		_CDCInitEP
 18977 ;; This function uses a non-reentrant model
 18978 ;;
 18979                           
 18980                           	psect	text82
 18981  014314                     __ptext82:
 18982                           	opt stack 0
 18983  014314                     _USBEnableEndpoint:
 18984                           	opt stack 15
 18985                           
 18986                           ;incstack = 0
 18987                           ;USBEnableEndpoint@ep stored from wreg
 18988  014314  6E39               	movwf	USBEnableEndpoint@ep,c
 18989                           
 18990                           ;usb_device.c: 880: unsigned char* p;
 18991                           ;usb_device.c: 884: if(options & 0x04)
 18992  014316  A436               	btfss	USBEnableEndpoint@options,2,c
 18993  014318  D005               	goto	i2l5277
 18994                           
 18995                           ;usb_device.c: 885: {
 18996                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18997  01431A  0E00               	movlw	0
 18998  01431C  6E2E               	movwf	USBConfigureEndpoint@direction,c
 18999  01431E  5039               	movf	USBEnableEndpoint@ep,w,c
 19000  014320  ECFD  F09C         	call	_USBConfigureEndpoint
 19001  014324                     i2l5277:
 19002                           
 19003                           ;usb_device.c: 887: }
 19004                           ;usb_device.c: 888: if(options & 0x02)
 19005  014324  A236               	btfss	USBEnableEndpoint@options,1,c
 19006  014326  D005               	goto	i2l5281
 19007                           
 19008                           ;usb_device.c: 889: {
 19009                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 19010  014328  0E01               	movlw	1
 19011  01432A  6E2E               	movwf	USBConfigureEndpoint@direction,c
 19012  01432C  5039               	movf	USBEnableEndpoint@ep,w,c
 19013  01432E  ECFD  F09C         	call	_USBConfigureEndpoint
 19014  014332                     i2l5281:
 19015                           
 19016                           ;usb_device.c: 891: }
 19017                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 19018  014332  5039               	movf	USBEnableEndpoint@ep,w,c
 19019  014334  0D01               	mullw	1
 19020  014336  0E26               	movlw	38
 19021  014338  24F3               	addwf	prodl,w,c
 19022  01433A  6E37               	movwf	USBEnableEndpoint@p,c
 19023  01433C  0E0F               	movlw	15
 19024  01433E  20F4               	addwfc	prodh,w,c
 19025  014340  6E38               	movwf	USBEnableEndpoint@p+1,c
 19026                           
 19027                           ;usb_device.c: 901: *p = options;
 19028  014342  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 19029  014346  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 19030  01434A  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 19031  01434E  0012               	return		;funcret
 19032  014350                     __end_of_USBEnableEndpoint:
 19033                           	opt stack 0
 19034                           pclatu	equ	0xFFB
 19035                           pclath	equ	0xFFA
 19036                           tblptru	equ	0xFF8
 19037                           tblptrh	equ	0xFF7
 19038                           tblptrl	equ	0xFF6
 19039                           tablat	equ	0xFF5
 19040                           prodh	equ	0xFF4
 19041                           prodl	equ	0xFF3
 19042                           intcon	equ	0xFF2
 19043                           intcon2	equ	0xFF1
 19044                           indf0	equ	0xFEF
 19045                           postinc0	equ	0xFEE
 19046                           fsr0h	equ	0xFEA
 19047                           fsr0l	equ	0xFE9
 19048                           wreg	equ	0xFE8
 19049                           indf1	equ	0xFE7
 19050                           postinc1	equ	0xFE6
 19051                           postdec1	equ	0xFE5
 19052                           fsr1h	equ	0xFE2
 19053                           fsr1l	equ	0xFE1
 19054                           indf2	equ	0xFDF
 19055                           postinc2	equ	0xFDE
 19056                           postdec2	equ	0xFDD
 19057                           plusw2	equ	0xFDB
 19058                           fsr2h	equ	0xFDA
 19059                           fsr2l	equ	0xFD9
 19060                           status	equ	0xFD8
 19061                           
 19062 ;; *************** function _USBConfigureEndpoint *****************
 19063 ;; Defined at:
 19064 ;;		line 1543 in file "../My_library/usb/usb_device.c"
 19065 ;; Parameters:    Size  Location     Type
 19066 ;;  EPNum           1    wreg     unsigned char 
 19067 ;;  direction       1    0[COMRAM] unsigned char 
 19068 ;; Auto vars:     Size  Location     Type
 19069 ;;  EPNum           1    5[COMRAM] unsigned char 
 19070 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 19071 ;;		 -> BDT(48), 
 19072 ;; Return value:  Size  Location     Type
 19073 ;;		None               void
 19074 ;; Registers used:
 19075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19076 ;; Tracked objects:
 19077 ;;		On entry : 0/0
 19078 ;;		On exit  : 0/0
 19079 ;;		Unchanged: 0/0
 19080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19081 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19082 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19085 ;;Total ram usage:        8 bytes
 19086 ;; Hardware stack levels used:    1
 19087 ;; This function calls:
 19088 ;;		Nothing
 19089 ;; This function is called by:
 19090 ;;		_USBEnableEndpoint
 19091 ;; This function uses a non-reentrant model
 19092 ;;
 19093                           
 19094                           	psect	text83
 19095  0139FA                     __ptext83:
 19096                           	opt stack 0
 19097  0139FA                     _USBConfigureEndpoint:
 19098                           	opt stack 15
 19099                           
 19100                           ;incstack = 0
 19101                           ;USBConfigureEndpoint@EPNum stored from wreg
 19102  0139FA  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 19103                           
 19104                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 19105                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 19106  0139FC  0E00               	movlw	0
 19107  0139FE  6E34               	movwf	USBConfigureEndpoint@handle,c
 19108  013A00  0E0D               	movlw	13
 19109  013A02  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 19110                           
 19111                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 19112  013A04  502E               	movf	USBConfigureEndpoint@direction,w,c
 19113  013A06  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 19114  013A08  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 19115  013A0A  90D8               	bcf	status,0,c
 19116  013A0C  362F               	rlcf	??_USBConfigureEndpoint,f,c
 19117  013A0E  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 19118  013A10  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19119  013A12  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 19120  013A14  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 19121  013A16  90D8               	bcf	status,0,c
 19122  013A18  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19123  013A1A  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19124  013A1C  90D8               	bcf	status,0,c
 19125  013A1E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19126  013A20  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19127  013A22  502F               	movf	??_USBConfigureEndpoint,w,c
 19128  013A24  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 19129  013A26  5030               	movf	??_USBConfigureEndpoint+1,w,c
 19130  013A28  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 19131  013A2A  90D8               	bcf	status,0,c
 19132  013A2C  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19133  013A2E  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19134  013A30  90D8               	bcf	status,0,c
 19135  013A32  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 19136  013A34  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 19137  013A36  5031               	movf	??_USBConfigureEndpoint+2,w,c
 19138  013A38  2634               	addwf	USBConfigureEndpoint@handle,f,c
 19139  013A3A  5032               	movf	??_USBConfigureEndpoint+3,w,c
 19140  013A3C  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 19141                           
 19142                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 19143  013A3E  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19144  013A42  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19145  013A46  9EDF               	bcf	indf2,7,c
 19146                           
 19147                           ;usb_device.c: 1557: if(direction == 0)
 19148  013A48  502E               	movf	USBConfigureEndpoint@direction,w,c
 19149  013A4A  A4D8               	btfss	status,2,c
 19150  013A4C  D007               	goto	i2l5267
 19151                           
 19152                           ;usb_device.c: 1558: {
 19153                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 19154  013A4E  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19155  013A50  0D02               	mullw	2
 19156  013A52  0ED5               	movlw	low _pBDTEntryOut
 19157  013A54  24F3               	addwf	prodl,w,c
 19158  013A56  6ED9               	movwf	fsr2l,c
 19159  013A58  0E00               	movlw	high _pBDTEntryOut
 19160  013A5A  D006               	goto	L14
 19161  013A5C                     i2l5267:
 19162                           
 19163                           ;usb_device.c: 1561: else
 19164                           ;usb_device.c: 1562: {
 19165                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 19166  013A5C  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 19167  013A5E  0D02               	mullw	2
 19168  013A60  0E10               	movlw	low _pBDTEntryIn
 19169  013A62  24F3               	addwf	prodl,w,c
 19170  013A64  6ED9               	movwf	fsr2l,c
 19171  013A66  0E00               	movlw	high _pBDTEntryIn
 19172  013A68                     L14:
 19173  013A68  20F4               	addwfc	prodh,w,c
 19174  013A6A  6EDA               	movwf	fsr2h,c
 19175  013A6C  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 19176  013A70  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 19177                           
 19178                           ;usb_device.c: 1564: }
 19179                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 19180  013A74  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 19181  013A78  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 19182  013A7C  9CDF               	bcf	indf2,6,c
 19183                           
 19184                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 19185  013A7E  EE20 F004          	lfsr	2,4
 19186  013A82  5034               	movf	USBConfigureEndpoint@handle,w,c
 19187  013A84  26D9               	addwf	fsr2l,f,c
 19188  013A86  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 19189  013A88  22DA               	addwfc	fsr2h,f,c
 19190  013A8A  8CDF               	bsf	indf2,6,c
 19191  013A8C  0012               	return		;funcret
 19192  013A8E                     __end_of_USBConfigureEndpoint:
 19193                           	opt stack 0
 19194                           pclatu	equ	0xFFB
 19195                           pclath	equ	0xFFA
 19196                           tblptru	equ	0xFF8
 19197                           tblptrh	equ	0xFF7
 19198                           tblptrl	equ	0xFF6
 19199                           tablat	equ	0xFF5
 19200                           prodh	equ	0xFF4
 19201                           prodl	equ	0xFF3
 19202                           intcon	equ	0xFF2
 19203                           intcon2	equ	0xFF1
 19204                           indf0	equ	0xFEF
 19205                           postinc0	equ	0xFEE
 19206                           fsr0h	equ	0xFEA
 19207                           fsr0l	equ	0xFE9
 19208                           wreg	equ	0xFE8
 19209                           indf1	equ	0xFE7
 19210                           postinc1	equ	0xFE6
 19211                           postdec1	equ	0xFE5
 19212                           fsr1h	equ	0xFE2
 19213                           fsr1l	equ	0xFE1
 19214                           indf2	equ	0xFDF
 19215                           postinc2	equ	0xFDE
 19216                           postdec2	equ	0xFDD
 19217                           plusw2	equ	0xFDB
 19218                           fsr2h	equ	0xFDA
 19219                           fsr2l	equ	0xFD9
 19220                           status	equ	0xFD8
 19221                           
 19222 ;; *************** function _USBCtrlTrfOutHandler *****************
 19223 ;; Defined at:
 19224 ;;		line 2541 in file "../My_library/usb/usb_device.c"
 19225 ;; Parameters:    Size  Location     Type
 19226 ;;		None
 19227 ;; Auto vars:     Size  Location     Type
 19228 ;;		None
 19229 ;; Return value:  Size  Location     Type
 19230 ;;		None               void
 19231 ;; Registers used:
 19232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19233 ;; Tracked objects:
 19234 ;;		On entry : 0/0
 19235 ;;		On exit  : 0/0
 19236 ;;		Unchanged: 0/0
 19237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19242 ;;Total ram usage:        0 bytes
 19243 ;; Hardware stack levels used:    1
 19244 ;; Hardware stack levels required when called:    2
 19245 ;; This function calls:
 19246 ;;		_USBCtrlTrfRxService
 19247 ;; This function is called by:
 19248 ;;		_USBCtrlEPService
 19249 ;; This function uses a non-reentrant model
 19250 ;;
 19251                           
 19252                           	psect	text84
 19253  014108                     __ptext84:
 19254                           	opt stack 0
 19255  014108                     _USBCtrlTrfOutHandler:
 19256                           	opt stack 15
 19257                           
 19258                           ;usb_device.c: 2543: if(controlTransferState == 2)
 19259                           
 19260                           ;incstack = 0
 19261  014108  0E02               	movlw	2
 19262  01410A  1827               	xorwf	_controlTransferState,w,c	;volatile
 19263  01410C  A4D8               	btfss	status,2,c
 19264  01410E  D003               	goto	i2l6375
 19265                           
 19266                           ;usb_device.c: 2544: {
 19267                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 19268  014110  ECF8  F091         	call	_USBCtrlTrfRxService	;wreg free
 19269                           
 19270                           ;usb_device.c: 2546: }
 19271  014114  0012               	return	
 19272  014116                     i2l6375:
 19273                           
 19274                           ;usb_device.c: 2547: else
 19275                           ;usb_device.c: 2548: {
 19276                           ;usb_device.c: 2551: controlTransferState = 0;
 19277  014116  0E00               	movlw	0
 19278  014118  6E27               	movwf	_controlTransferState,c	;volatile
 19279                           
 19280                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 19281  01411A  501D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 19282  01411C  A4D8               	btfss	status,2,c
 19283  01411E  D01F               	goto	i2l6383
 19284                           
 19285                           ;usb_device.c: 2559: {
 19286                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 19287  014120  EE20 F001          	lfsr	2,1
 19288  014124  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19289  014126  26D9               	addwf	fsr2l,f,c
 19290  014128  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19291  01412A  22DA               	addwfc	fsr2h,f,c
 19292  01412C  0E08               	movlw	8
 19293  01412E  6EDF               	movwf	indf2,c
 19294                           
 19295                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19296  014130  EE20 F002          	lfsr	2,2
 19297  014134  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19298  014136  26D9               	addwf	fsr2l,f,c
 19299  014138  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19300  01413A  22DA               	addwfc	fsr2h,f,c
 19301  01413C  0E30               	movlw	48
 19302  01413E  6EDE               	movwf	postinc2,c
 19303  014140  0E0D               	movlw	13
 19304  014142  6EDD               	movwf	postdec2,c
 19305                           
 19306                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19307  014144  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19308  014148  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19309  01414C  0E0C               	movlw	12
 19310  01414E  6EDF               	movwf	indf2,c
 19311                           
 19312                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19313  014150  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19314  014154  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19315  014158  0E00               	movlw	0
 19316  01415A  8EDB               	bsf	plusw2,7,c
 19317                           
 19318                           ;usb_device.c: 2564: }
 19319  01415C  0012               	return	
 19320  01415E                     i2l6383:
 19321                           
 19322                           ;usb_device.c: 2565: else
 19323                           ;usb_device.c: 2566: {
 19324                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 19325  01415E  0E00               	movlw	0
 19326  014160  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19327  014162  0012               	return	
 19328  014164                     __end_of_USBCtrlTrfOutHandler:
 19329                           	opt stack 0
 19330                           pclatu	equ	0xFFB
 19331                           pclath	equ	0xFFA
 19332                           tblptru	equ	0xFF8
 19333                           tblptrh	equ	0xFF7
 19334                           tblptrl	equ	0xFF6
 19335                           tablat	equ	0xFF5
 19336                           prodh	equ	0xFF4
 19337                           prodl	equ	0xFF3
 19338                           intcon	equ	0xFF2
 19339                           intcon2	equ	0xFF1
 19340                           indf0	equ	0xFEF
 19341                           postinc0	equ	0xFEE
 19342                           fsr0h	equ	0xFEA
 19343                           fsr0l	equ	0xFE9
 19344                           wreg	equ	0xFE8
 19345                           indf1	equ	0xFE7
 19346                           postinc1	equ	0xFE6
 19347                           postdec1	equ	0xFE5
 19348                           fsr1h	equ	0xFE2
 19349                           fsr1l	equ	0xFE1
 19350                           indf2	equ	0xFDF
 19351                           postinc2	equ	0xFDE
 19352                           postdec2	equ	0xFDD
 19353                           plusw2	equ	0xFDB
 19354                           fsr2h	equ	0xFDA
 19355                           fsr2l	equ	0xFD9
 19356                           status	equ	0xFD8
 19357                           
 19358 ;; *************** function _USBCtrlTrfRxService *****************
 19359 ;; Defined at:
 19360 ;;		line 1852 in file "../My_library/usb/usb_device.c"
 19361 ;; Parameters:    Size  Location     Type
 19362 ;;		None
 19363 ;; Auto vars:     Size  Location     Type
 19364 ;;  byteToRead      1    1[COMRAM] unsigned char 
 19365 ;;  i               1    0[COMRAM] unsigned char 
 19366 ;; Return value:  Size  Location     Type
 19367 ;;		None               void
 19368 ;; Registers used:
 19369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19370 ;; Tracked objects:
 19371 ;;		On entry : 0/0
 19372 ;;		On exit  : 0/0
 19373 ;;		Unchanged: 0/0
 19374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19379 ;;Total ram usage:        2 bytes
 19380 ;; Hardware stack levels used:    1
 19381 ;; Hardware stack levels required when called:    1
 19382 ;; This function calls:
 19383 ;;		_USBCtrlEPAllowStatusStage
 19384 ;; This function is called by:
 19385 ;;		_USBCtrlTrfOutHandler
 19386 ;; This function uses a non-reentrant model
 19387 ;;
 19388                           
 19389                           	psect	text85
 19390  0123F0                     __ptext85:
 19391                           	opt stack 0
 19392  0123F0                     _USBCtrlTrfRxService:
 19393                           	opt stack 15
 19394                           
 19395                           ;usb_device.c: 1854: uint8_t byteToRead;
 19396                           ;usb_device.c: 1855: uint8_t i;
 19397                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 19398                           
 19399                           ;incstack = 0
 19400  0123F0  EE20 F001          	lfsr	2,1
 19401  0123F4  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19402  0123F6  26D9               	addwf	fsr2l,f,c
 19403  0123F8  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19404  0123FA  22DA               	addwfc	fsr2h,f,c
 19405  0123FC  50DF               	movf	indf2,w,c
 19406  0123FE  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 19407                           
 19408                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 19409  012400  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19410  012402  5C05               	subwf	_outPipes+4,w,c	;volatile
 19411  012404  0E00               	movlw	0
 19412  012406  5806               	subwfb	_outPipes+5,w,c	;volatile
 19413  012408  A0D8               	btfss	status,0,c
 19414                           
 19415                           ;usb_device.c: 1866: {
 19416                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 19417  01240A  C005  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 19418                           
 19419                           ;usb_device.c: 1868: }
 19420                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 19421  01240E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19422  012410  5E05               	subwf	_outPipes+4,f,c	;volatile
 19423  012412  0E00               	movlw	0
 19424  012414  5A06               	subwfb	_outPipes+5,f,c	;volatile
 19425                           
 19426                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 19427  012416  0E00               	movlw	0
 19428  012418  6E2E               	movwf	USBCtrlTrfRxService@i,c
 19429  01241A  D011               	goto	i2l6231
 19430  01241C                     i2l6225:
 19431                           
 19432                           ;usb_device.c: 1875: {
 19433                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 19434  01241C  502E               	movf	USBCtrlTrfRxService@i,w,c
 19435  01241E  0D01               	mullw	1
 19436  012420  0E38               	movlw	56
 19437  012422  24F3               	addwf	prodl,w,c
 19438  012424  6ED9               	movwf	fsr2l,c
 19439  012426  0E0D               	movlw	13
 19440  012428  20F4               	addwfc	prodh,w,c
 19441  01242A  6EDA               	movwf	fsr2h,c
 19442  01242C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 19443  012430  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 19444  012434  CFDF FFE7          	movff	indf2,indf1
 19445  012438  4A01               	infsnz	_outPipes,f,c	;volatile
 19446  01243A  2A02               	incf	_outPipes+1,f,c	;volatile
 19447  01243C  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 19448  01243E                     i2l6231:
 19449  01243E  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 19450  012440  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 19451  012442  A0D8               	btfss	status,0,c
 19452  012444  D7EB               	goto	i2l6225
 19453                           
 19454                           ;usb_device.c: 1877: }
 19455                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 19456  012446  5005               	movf	_outPipes+4,w,c	;volatile
 19457  012448  1006               	iorwf	_outPipes+5,w,c	;volatile
 19458  01244A  B4D8               	btfsc	status,2,c
 19459  01244C  D032               	goto	i2l6247
 19460                           
 19461                           ;usb_device.c: 1882: {
 19462                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 19463  01244E  EE20 F001          	lfsr	2,1
 19464  012452  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19465  012454  26D9               	addwf	fsr2l,f,c
 19466  012456  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19467  012458  22DA               	addwfc	fsr2h,f,c
 19468  01245A  0E08               	movlw	8
 19469  01245C  6EDF               	movwf	indf2,c
 19470                           
 19471                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 19472  01245E  EE20 F002          	lfsr	2,2
 19473  012462  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19474  012464  26D9               	addwf	fsr2l,f,c
 19475  012466  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19476  012468  22DA               	addwfc	fsr2h,f,c
 19477  01246A  0E38               	movlw	56
 19478  01246C  6EDE               	movwf	postinc2,c
 19479  01246E  0E0D               	movlw	13
 19480  012470  6EDD               	movwf	postdec2,c
 19481                           
 19482                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 19483  012472  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19484  012476  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19485  01247A  BCDF               	btfsc	indf2,6,c
 19486  01247C  D00D               	goto	i2l6243
 19487                           
 19488                           ;usb_device.c: 1886: {
 19489                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 19490  01247E  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19491  012482  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19492  012486  0E48               	movlw	72
 19493  012488  6EDF               	movwf	indf2,c
 19494                           
 19495                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19496  01248A  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19497  01248E  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19498  012492  0E00               	movlw	0
 19499  012494  8EDB               	bsf	plusw2,7,c
 19500                           
 19501                           ;usb_device.c: 1889: }
 19502  012496  0012               	return	
 19503  012498                     i2l6243:
 19504                           
 19505                           ;usb_device.c: 1890: else
 19506                           ;usb_device.c: 1891: {
 19507                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 19508  012498  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19509  01249C  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19510  0124A0  0E08               	movlw	8
 19511  0124A2  6EDF               	movwf	indf2,c
 19512                           
 19513                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19514  0124A4  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19515  0124A8  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19516  0124AC  0E00               	movlw	0
 19517  0124AE  8EDB               	bsf	plusw2,7,c
 19518                           
 19519                           ;usb_device.c: 1894: }
 19520                           ;usb_device.c: 1895: }
 19521  0124B0  0012               	return	
 19522  0124B2                     i2l6247:
 19523                           
 19524                           ;usb_device.c: 1896: else
 19525                           ;usb_device.c: 1897: {
 19526                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 19527  0124B2  EE20 F001          	lfsr	2,1
 19528  0124B6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19529  0124B8  26D9               	addwf	fsr2l,f,c
 19530  0124BA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19531  0124BC  22DA               	addwfc	fsr2h,f,c
 19532  0124BE  0E08               	movlw	8
 19533  0124C0  6EDF               	movwf	indf2,c
 19534                           
 19535                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19536  0124C2  EE20 F002          	lfsr	2,2
 19537  0124C6  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19538  0124C8  26D9               	addwf	fsr2l,f,c
 19539  0124CA  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19540  0124CC  22DA               	addwfc	fsr2h,f,c
 19541  0124CE  0E30               	movlw	48
 19542  0124D0  6EDE               	movwf	postinc2,c
 19543  0124D2  0E0D               	movlw	13
 19544  0124D4  6EDD               	movwf	postdec2,c
 19545                           
 19546                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 19547  0124D6  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19548  0124DA  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19549  0124DE  0E04               	movlw	4
 19550  0124E0  6EDF               	movwf	indf2,c
 19551                           
 19552                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 19553  0124E2  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19554  0124E6  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19555  0124EA  0E00               	movlw	0
 19556  0124EC  8EDB               	bsf	plusw2,7,c
 19557                           
 19558                           ;usb_device.c: 1926: }
 19559                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 19560                           
 19561                           ;usb_device.c: 1915: {
 19562                           ;usb_device.c: 1921: outPipes[0].pFunc();
 19563  0124EE  9E04               	bcf	_outPipes+3,7,c	;volatile
 19564                           
 19565                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 19566  0124F0  5021               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 19567  0124F2  A4D8               	btfss	status,2,c
 19568  0124F4  0012               	return	
 19569                           
 19570                           ;usb_device.c: 1942: {
 19571                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 19572  0124F6  EC86  F098         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19573  0124FA  0012               	return	
 19574  0124FC                     __end_of_USBCtrlTrfRxService:
 19575                           	opt stack 0
 19576                           pclatu	equ	0xFFB
 19577                           pclath	equ	0xFFA
 19578                           tblptru	equ	0xFF8
 19579                           tblptrh	equ	0xFF7
 19580                           tblptrl	equ	0xFF6
 19581                           tablat	equ	0xFF5
 19582                           prodh	equ	0xFF4
 19583                           prodl	equ	0xFF3
 19584                           intcon	equ	0xFF2
 19585                           intcon2	equ	0xFF1
 19586                           indf0	equ	0xFEF
 19587                           postinc0	equ	0xFEE
 19588                           fsr0h	equ	0xFEA
 19589                           fsr0l	equ	0xFE9
 19590                           wreg	equ	0xFE8
 19591                           indf1	equ	0xFE7
 19592                           postinc1	equ	0xFE6
 19593                           postdec1	equ	0xFE5
 19594                           fsr1h	equ	0xFE2
 19595                           fsr1l	equ	0xFE1
 19596                           indf2	equ	0xFDF
 19597                           postinc2	equ	0xFDE
 19598                           postdec2	equ	0xFDD
 19599                           plusw2	equ	0xFDB
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 19605 ;; Defined at:
 19606 ;;		line 1416 in file "../My_library/usb/usb_device.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;		None               void
 19613 ;; Registers used:
 19614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19624 ;;Total ram usage:        0 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		_USBDeviceTasks
 19630 ;;		_USBCtrlEPServiceComplete
 19631 ;;		_USBCtrlTrfRxService
 19632 ;; This function uses a non-reentrant model
 19633 ;;
 19634                           
 19635                           	psect	text86
 19636  01310C                     __ptext86:
 19637                           	opt stack 0
 19638  01310C                     _USBCtrlEPAllowStatusStage:
 19639                           	opt stack 15
 19640                           
 19641                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 19642                           
 19643                           ;incstack = 0
 19644  01310C  5023               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 19645  01310E  A4D8               	btfss	status,2,c
 19646  013110  0012               	return	
 19647                           
 19648                           ;usb_device.c: 1424: {
 19649                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 19650  013112  0E01               	movlw	1
 19651  013114  6E23               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 19652                           
 19653                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 19654  013116  5024               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 19655  013118  A4D8               	btfss	status,2,c
 19656  01311A  0012               	return	
 19657                           
 19658                           ;usb_device.c: 1427: {
 19659                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 19660  01311C  0E01               	movlw	1
 19661  01311E  6E24               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 19662                           
 19663                           ;usb_device.c: 1432: if(controlTransferState == 2)
 19664  013120  0E02               	movlw	2
 19665  013122  1827               	xorwf	_controlTransferState,w,c	;volatile
 19666  013124  A4D8               	btfss	status,2,c
 19667  013126  D015               	goto	i2l5701
 19668                           
 19669                           ;usb_device.c: 1433: {
 19670                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 19671  013128  EE20 F001          	lfsr	2,1
 19672  01312C  5010               	movf	_pBDTEntryIn,w,c
 19673  01312E  26D9               	addwf	fsr2l,f,c
 19674  013130  5011               	movf	_pBDTEntryIn+1,w,c
 19675  013132  22DA               	addwfc	fsr2h,f,c
 19676  013134  0E00               	movlw	0
 19677  013136  6EDF               	movwf	indf2,c
 19678                           
 19679                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19680  013138  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19681  01313C  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19682  013140  0E48               	movlw	72
 19683  013142  6EDF               	movwf	indf2,c
 19684                           
 19685                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19686  013144  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19687  013148  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19688  01314C  0E00               	movlw	0
 19689  01314E  8EDB               	bsf	plusw2,7,c
 19690                           
 19691                           ;usb_device.c: 1437: }
 19692  013150  0012               	return	
 19693  013152                     i2l5701:
 19694                           
 19695                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 19696  013152  0427               	decf	_controlTransferState,w,c	;volatile
 19697  013154  A4D8               	btfss	status,2,c
 19698  013156  0012               	return	
 19699                           
 19700                           ;usb_device.c: 1439: {
 19701                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 19702  013158  0E00               	movlw	0
 19703  01315A  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19704                           
 19705                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 19706  01315C  EE20 F001          	lfsr	2,1
 19707  013160  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19708  013162  26D9               	addwf	fsr2l,f,c
 19709  013164  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19710  013166  22DA               	addwfc	fsr2h,f,c
 19711  013168  0E08               	movlw	8
 19712  01316A  6EDF               	movwf	indf2,c
 19713                           
 19714                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19715  01316C  EE20 F002          	lfsr	2,2
 19716  013170  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 19717  013172  26D9               	addwf	fsr2l,f,c
 19718  013174  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19719  013176  22DA               	addwfc	fsr2h,f,c
 19720  013178  0E30               	movlw	48
 19721  01317A  6EDE               	movwf	postinc2,c
 19722  01317C  0E0D               	movlw	13
 19723  01317E  6EDD               	movwf	postdec2,c
 19724                           
 19725                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19726  013180  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19727  013184  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19728  013188  0E04               	movlw	4
 19729  01318A  6EDF               	movwf	indf2,c
 19730                           
 19731                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19732  01318C  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19733  013190  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19734  013194  0E00               	movlw	0
 19735  013196  8EDB               	bsf	plusw2,7,c
 19736                           
 19737                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19738  013198  0E01               	movlw	1
 19739  01319A  6E1D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19740                           
 19741                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19742  01319C  EE20 F001          	lfsr	2,1
 19743  0131A0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19744  0131A2  26D9               	addwf	fsr2l,f,c
 19745  0131A4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19746  0131A6  22DA               	addwfc	fsr2h,f,c
 19747  0131A8  0E08               	movlw	8
 19748  0131AA  6EDF               	movwf	indf2,c
 19749                           
 19750                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19751  0131AC  EE20 F002          	lfsr	2,2
 19752  0131B0  501B               	movf	_pBDTEntryEP0OutNext,w,c
 19753  0131B2  26D9               	addwf	fsr2l,f,c
 19754  0131B4  501C               	movf	_pBDTEntryEP0OutNext+1,w,c
 19755  0131B6  22DA               	addwfc	fsr2h,f,c
 19756  0131B8  0E30               	movlw	48
 19757  0131BA  6EDE               	movwf	postinc2,c
 19758  0131BC  0E0D               	movlw	13
 19759  0131BE  6EDD               	movwf	postdec2,c
 19760                           
 19761                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19762  0131C0  C01B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19763  0131C4  C01C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19764  0131C8  0E80               	movlw	128
 19765  0131CA  6EDF               	movwf	indf2,c
 19766  0131CC  0012               	return	
 19767  0131CE                     __end_of_USBCtrlEPAllowStatusStage:
 19768                           	opt stack 0
 19769                           pclatu	equ	0xFFB
 19770                           pclath	equ	0xFFA
 19771                           tblptru	equ	0xFF8
 19772                           tblptrh	equ	0xFF7
 19773                           tblptrl	equ	0xFF6
 19774                           tablat	equ	0xFF5
 19775                           prodh	equ	0xFF4
 19776                           prodl	equ	0xFF3
 19777                           intcon	equ	0xFF2
 19778                           intcon2	equ	0xFF1
 19779                           indf0	equ	0xFEF
 19780                           postinc0	equ	0xFEE
 19781                           fsr0h	equ	0xFEA
 19782                           fsr0l	equ	0xFE9
 19783                           wreg	equ	0xFE8
 19784                           indf1	equ	0xFE7
 19785                           postinc1	equ	0xFE6
 19786                           postdec1	equ	0xFE5
 19787                           fsr1h	equ	0xFE2
 19788                           fsr1l	equ	0xFE1
 19789                           indf2	equ	0xFDF
 19790                           postinc2	equ	0xFDE
 19791                           postdec2	equ	0xFDD
 19792                           plusw2	equ	0xFDB
 19793                           fsr2h	equ	0xFDA
 19794                           fsr2l	equ	0xFD9
 19795                           status	equ	0xFD8
 19796                           
 19797 ;; *************** function _USBCtrlTrfInHandler *****************
 19798 ;; Defined at:
 19799 ;;		line 2595 in file "../My_library/usb/usb_device.c"
 19800 ;; Parameters:    Size  Location     Type
 19801 ;;		None
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19804 ;; Return value:  Size  Location     Type
 19805 ;;		None               void
 19806 ;; Registers used:
 19807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19808 ;; Tracked objects:
 19809 ;;		On entry : 0/0
 19810 ;;		On exit  : 0/0
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19817 ;;Total ram usage:        1 bytes
 19818 ;; Hardware stack levels used:    1
 19819 ;; Hardware stack levels required when called:    1
 19820 ;; This function calls:
 19821 ;;		_USBCtrlTrfTxService
 19822 ;; This function is called by:
 19823 ;;		_USBCtrlEPService
 19824 ;; This function uses a non-reentrant model
 19825 ;;
 19826                           
 19827                           	psect	text87
 19828  01357A                     __ptext87:
 19829                           	opt stack 0
 19830  01357A                     _USBCtrlTrfInHandler:
 19831                           	opt stack 16
 19832                           
 19833                           ;usb_device.c: 2597: uint8_t lastDTS;
 19834                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19835                           
 19836                           ;incstack = 0
 19837  01357A  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19838  01357E  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19839  013582  0E00               	movlw	0
 19840  013584  BCDF               	btfsc	indf2,6,c
 19841  013586  0E01               	movlw	1
 19842  013588  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19843                           
 19844                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19845  01358A  0E04               	movlw	4
 19846  01358C  1A10               	xorwf	_pBDTEntryIn,f,c
 19847                           
 19848                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19849  01358E  0E08               	movlw	8
 19850  013590  1822               	xorwf	_USBDeviceState,w,c	;volatile
 19851  013592  A4D8               	btfss	status,2,c
 19852  013594  D00D               	goto	i2l6399
 19853                           
 19854                           ;usb_device.c: 2608: {
 19855                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19856  013596  010D               	movlb	13	; () banked
 19857  013598  5132               	movf	50,w,b	;volatile
 19858  01359A  0B7F               	andlw	127
 19859  01359C  010F               	movlb	15	; () banked
 19860  01359E  6F38               	movwf	56,b	;volatile
 19861                           
 19862                           ; BSR set to: 15
 19863                           ;usb_device.c: 2610: if(UADDR != 0u)
 19864  0135A0  010F               	movlb	15	; () banked
 19865  0135A2  5138               	movf	56,w,b	;volatile
 19866  0135A4  B4D8               	btfsc	status,2,c
 19867  0135A6  D002               	goto	i2l6397
 19868                           
 19869                           ; BSR set to: 15
 19870                           ;usb_device.c: 2611: {
 19871                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19872  0135A8  0E10               	movlw	16
 19873  0135AA  D001               	goto	L15
 19874  0135AC                     i2l6397:
 19875                           
 19876                           ; BSR set to: 15
 19877                           ;usb_device.c: 2614: else
 19878                           ;usb_device.c: 2615: {
 19879                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 19880  0135AC  0E04               	movlw	4
 19881  0135AE                     L15:
 19882  0135AE  6E22               	movwf	_USBDeviceState,c	;volatile
 19883  0135B0                     i2l6399:
 19884                           
 19885                           ;usb_device.c: 2617: }
 19886                           ;usb_device.c: 2618: }
 19887                           ;usb_device.c: 2621: if(controlTransferState == 1)
 19888  0135B0  0427               	decf	_controlTransferState,w,c	;volatile
 19889  0135B2  A4D8               	btfss	status,2,c
 19890  0135B4  D03A               	goto	i2l345
 19891                           
 19892                           ;usb_device.c: 2622: {
 19893                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19894  0135B6  EE20 F002          	lfsr	2,2
 19895  0135BA  5010               	movf	_pBDTEntryIn,w,c
 19896  0135BC  26D9               	addwf	fsr2l,f,c
 19897  0135BE  5011               	movf	_pBDTEntryIn+1,w,c
 19898  0135C0  22DA               	addwfc	fsr2h,f,c
 19899  0135C2  0E38               	movlw	56
 19900  0135C4  6EDE               	movwf	postinc2,c
 19901  0135C6  0E0D               	movlw	13
 19902  0135C8  6EDD               	movwf	postdec2,c
 19903                           
 19904                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 19905  0135CA  EC50  F097         	call	_USBCtrlTrfTxService	;wreg free
 19906                           
 19907                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 19908  0135CE  0E02               	movlw	2
 19909  0135D0  1829               	xorwf	_shortPacketStatus,w,c	;volatile
 19910  0135D2  A4D8               	btfss	status,2,c
 19911  0135D4  D00D               	goto	i2l6411
 19912                           
 19913                           ;usb_device.c: 2631: {
 19914                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 19915  0135D6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19916  0135DA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19917  0135DE  0E04               	movlw	4
 19918  0135E0  6EDF               	movwf	indf2,c
 19919                           
 19920                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19921  0135E2  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19922  0135E6  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19923  0135EA  0E00               	movlw	0
 19924  0135EC  8EDB               	bsf	plusw2,7,c
 19925                           
 19926                           ;usb_device.c: 2636: }
 19927  0135EE  0012               	return	
 19928  0135F0                     i2l6411:
 19929                           
 19930                           ;usb_device.c: 2637: else
 19931                           ;usb_device.c: 2638: {
 19932                           ;usb_device.c: 2639: if(lastDTS == 0)
 19933  0135F0  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19934  0135F2  A4D8               	btfss	status,2,c
 19935  0135F4  D00D               	goto	i2l6417
 19936                           
 19937                           ;usb_device.c: 2640: {
 19938                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19939  0135F6  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19940  0135FA  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19941  0135FE  0E48               	movlw	72
 19942  013600  6EDF               	movwf	indf2,c
 19943                           
 19944                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19945  013602  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19946  013606  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19947  01360A  0E00               	movlw	0
 19948  01360C  8EDB               	bsf	plusw2,7,c
 19949                           
 19950                           ;usb_device.c: 2643: }
 19951  01360E  0012               	return	
 19952  013610                     i2l6417:
 19953                           
 19954                           ;usb_device.c: 2644: else
 19955                           ;usb_device.c: 2645: {
 19956                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19957  013610  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19958  013614  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19959  013618  0E08               	movlw	8
 19960  01361A  6EDF               	movwf	indf2,c
 19961                           
 19962                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19963  01361C  C010  FFD9         	movff	_pBDTEntryIn,fsr2l
 19964  013620  C011  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19965  013624  0E00               	movlw	0
 19966  013626  8EDB               	bsf	plusw2,7,c
 19967                           
 19968                           ;usb_device.c: 2648: }
 19969                           ;usb_device.c: 2649: }
 19970                           ;usb_device.c: 2650: }
 19971  013628  0012               	return	
 19972  01362A                     i2l345:
 19973                           
 19974                           ;usb_device.c: 2651: else
 19975                           ;usb_device.c: 2652: {
 19976                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 19977  01362A  BE04               	btfsc	_outPipes+3,7,c	;volatile
 19978                           
 19979                           ;usb_device.c: 2661: }
 19980                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 19981                           
 19982                           ;usb_device.c: 2659: {
 19983                           ;usb_device.c: 2660: outPipes[0].pFunc();
 19984  01362C  9E04               	bcf	_outPipes+3,7,c	;volatile
 19985                           
 19986                           ;usb_device.c: 2663: }
 19987                           ;usb_device.c: 2665: controlTransferState = 0;
 19988  01362E  0E00               	movlw	0
 19989  013630  6E27               	movwf	_controlTransferState,c	;volatile
 19990  013632  0012               	return	
 19991  013634                     __end_of_USBCtrlTrfInHandler:
 19992                           	opt stack 0
 19993                           pclatu	equ	0xFFB
 19994                           pclath	equ	0xFFA
 19995                           tblptru	equ	0xFF8
 19996                           tblptrh	equ	0xFF7
 19997                           tblptrl	equ	0xFF6
 19998                           tablat	equ	0xFF5
 19999                           prodh	equ	0xFF4
 20000                           prodl	equ	0xFF3
 20001                           intcon	equ	0xFF2
 20002                           intcon2	equ	0xFF1
 20003                           indf0	equ	0xFEF
 20004                           postinc0	equ	0xFEE
 20005                           fsr0h	equ	0xFEA
 20006                           fsr0l	equ	0xFE9
 20007                           wreg	equ	0xFE8
 20008                           indf1	equ	0xFE7
 20009                           postinc1	equ	0xFE6
 20010                           postdec1	equ	0xFE5
 20011                           fsr1h	equ	0xFE2
 20012                           fsr1l	equ	0xFE1
 20013                           indf2	equ	0xFDF
 20014                           postinc2	equ	0xFDE
 20015                           postdec2	equ	0xFDD
 20016                           plusw2	equ	0xFDB
 20017                           fsr2h	equ	0xFDA
 20018                           fsr2l	equ	0xFD9
 20019                           status	equ	0xFD8
 20020                           
 20021 ;; *************** function _USBCtrlTrfTxService *****************
 20022 ;; Defined at:
 20023 ;;		line 1771 in file "../My_library/usb/usb_device.c"
 20024 ;; Parameters:    Size  Location     Type
 20025 ;;		None
 20026 ;; Auto vars:     Size  Location     Type
 20027 ;;  byteToSend      1    0[COMRAM] unsigned char 
 20028 ;; Return value:  Size  Location     Type
 20029 ;;		None               void
 20030 ;; Registers used:
 20031 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 20032 ;; Tracked objects:
 20033 ;;		On entry : 0/0
 20034 ;;		On exit  : 0/0
 20035 ;;		Unchanged: 0/0
 20036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20041 ;;Total ram usage:        1 bytes
 20042 ;; Hardware stack levels used:    1
 20043 ;; This function calls:
 20044 ;;		Nothing
 20045 ;; This function is called by:
 20046 ;;		_USBCtrlEPAllowDataStage
 20047 ;;		_USBCtrlTrfInHandler
 20048 ;; This function uses a non-reentrant model
 20049 ;;
 20050                           
 20051                           	psect	text88
 20052  012EA0                     __ptext88:
 20053                           	opt stack 0
 20054  012EA0                     _USBCtrlTrfTxService:
 20055                           	opt stack 14
 20056                           
 20057                           ;usb_device.c: 1773: uint8_t byteToSend;
 20058                           ;usb_device.c: 1777: byteToSend = 8;
 20059                           
 20060                           ;incstack = 0
 20061  012EA0  0E08               	movlw	8
 20062  012EA2  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 20063                           
 20064                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 20065  012EA4  500F               	movf	_inPipes+5,w,c	;volatile
 20066  012EA6  E110               	bnz	i2l5535
 20067  012EA8  0E08               	movlw	8
 20068  012EAA  5C0E               	subwf	_inPipes+4,w,c	;volatile
 20069  012EAC  B0D8               	btfsc	status,0,c
 20070  012EAE  D00C               	goto	i2l5535
 20071                           
 20072                           ;usb_device.c: 1779: {
 20073                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 20074  012EB0  C00E  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 20075                           
 20076                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 20077  012EB4  5029               	movf	_shortPacketStatus,w,c	;volatile
 20078  012EB6  A4D8               	btfss	status,2,c
 20079  012EB8  D002               	goto	i2l5531
 20080                           
 20081                           ;usb_device.c: 1788: {
 20082                           ;usb_device.c: 1789: shortPacketStatus = 1;
 20083  012EBA  0E01               	movlw	1
 20084  012EBC  D004               	goto	L16
 20085  012EBE                     i2l5531:
 20086                           
 20087                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 20088  012EBE  0429               	decf	_shortPacketStatus,w,c	;volatile
 20089  012EC0  A4D8               	btfss	status,2,c
 20090  012EC2  D002               	goto	i2l5535
 20091                           
 20092                           ;usb_device.c: 1792: {
 20093                           ;usb_device.c: 1793: shortPacketStatus = 2;
 20094  012EC4  0E02               	movlw	2
 20095  012EC6                     L16:
 20096  012EC6  6E29               	movwf	_shortPacketStatus,c	;volatile
 20097  012EC8                     i2l5535:
 20098                           
 20099                           ;usb_device.c: 1794: }
 20100                           ;usb_device.c: 1795: }
 20101                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 20102  012EC8  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20103  012ECA  5E0E               	subwf	_inPipes+4,f,c	;volatile
 20104  012ECC  0E00               	movlw	0
 20105  012ECE  5A0F               	subwfb	_inPipes+5,f,c	;volatile
 20106                           
 20107                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 20108  012ED0  EE20 F001          	lfsr	2,1
 20109  012ED4  5010               	movf	_pBDTEntryIn,w,c
 20110  012ED6  26D9               	addwf	fsr2l,f,c
 20111  012ED8  5011               	movf	_pBDTEntryIn+1,w,c
 20112  012EDA  22DA               	addwfc	fsr2h,f,c
 20113  012EDC  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 20114                           
 20115                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 20116  012EE0  0E38               	movlw	56
 20117  012EE2  0100               	movlb	0	; () banked
 20118  012EE4  6FE8               	movwf	_pDst& (0+255),b
 20119  012EE6  0E0D               	movlw	13
 20120  012EE8  0100               	movlb	0	; () banked
 20121  012EEA  6FE9               	movwf	(_pDst+1)& (0+255),b
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 20125  012EEC  A00D               	btfss	_inPipes+3,0,c	;volatile
 20126  012EEE  D01D               	goto	i2l5553
 20127  012EF0  D03C               	goto	i2l5563
 20128  012EF2                     i2l5545:
 20129                           
 20130                           ; BSR set to: 0
 20131                           ;usb_device.c: 1812: {
 20132                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 20133  012EF2  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20134  012EF6  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20135  012EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 20136  012EFC  6EF8               	movwf	tblptru,c
 20137  012EFE  C0E8  FFD9         	movff	_pDst,fsr2l
 20138  012F02  C0E9  FFDA         	movff	_pDst+1,fsr2h
 20139  012F06  0E0E               	movlw	(high __ramtop+-1)
 20140  012F08  64F7               	cpfsgt	tblptrh,c
 20141  012F0A  D003               	bra	i2u449_47
 20142  012F0C  0008               	tblrd		*
 20143  012F0E  50F5               	movf	tablat,w,c
 20144  012F10  D005               	bra	i2u449_40
 20145  012F12                     i2u449_47:
 20146  012F12  CFF6 FFE9          	movff	tblptrl,fsr0l
 20147  012F16  CFF7 FFEA          	movff	tblptrh,fsr0h
 20148  012F1A  50EF               	movf	indf0,w,c
 20149  012F1C                     i2u449_40:
 20150  012F1C  6EDF               	movwf	indf2,c
 20151  012F1E  4A0A               	infsnz	_inPipes,f,c	;volatile
 20152  012F20  2A0B               	incf	_inPipes+1,f,c	;volatile
 20153  012F22  0100               	movlb	0	; () banked
 20154  012F24  4BE8               	infsnz	_pDst& (0+255),f,b
 20155  012F26  2BE9               	incf	(_pDst+1)& (0+255),f,b
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;usb_device.c: 1814: byteToSend--;
 20159  012F28  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20160  012F2A                     i2l5553:
 20161                           
 20162                           ; BSR set to: 0
 20163  012F2A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20164  012F2C  B4D8               	btfsc	status,2,c
 20165  012F2E  0012               	return	
 20166  012F30  D7E0               	goto	i2l5545
 20167  012F32                     i2l5555:
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;usb_device.c: 1820: {
 20171                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 20172  012F32  C00A  FFF6         	movff	_inPipes,tblptrl	;volatile
 20173  012F36  C00B  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 20174  012F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 20175  012F3C  6EF8               	movwf	tblptru,c
 20176  012F3E  C0E8  FFD9         	movff	_pDst,fsr2l
 20177  012F42  C0E9  FFDA         	movff	_pDst+1,fsr2h
 20178  012F46  0E0E               	movlw	(high __ramtop+-1)
 20179  012F48  64F7               	cpfsgt	tblptrh,c
 20180  012F4A  D003               	bra	i2u451_47
 20181  012F4C  0008               	tblrd		*
 20182  012F4E  50F5               	movf	tablat,w,c
 20183  012F50  D005               	bra	i2u451_40
 20184  012F52                     i2u451_47:
 20185  012F52  CFF6 FFE9          	movff	tblptrl,fsr0l
 20186  012F56  CFF7 FFEA          	movff	tblptrh,fsr0h
 20187  012F5A  50EF               	movf	indf0,w,c
 20188  012F5C                     i2u451_40:
 20189  012F5C  6EDF               	movwf	indf2,c
 20190  012F5E  4A0A               	infsnz	_inPipes,f,c	;volatile
 20191  012F60  2A0B               	incf	_inPipes+1,f,c	;volatile
 20192  012F62  0100               	movlb	0	; () banked
 20193  012F64  4BE8               	infsnz	_pDst& (0+255),f,b
 20194  012F66  2BE9               	incf	(_pDst+1)& (0+255),f,b
 20195                           
 20196                           ; BSR set to: 0
 20197                           ;usb_device.c: 1822: byteToSend--;
 20198  012F68  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 20199  012F6A                     i2l5563:
 20200                           
 20201                           ; BSR set to: 0
 20202  012F6A  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 20203  012F6C  B4D8               	btfsc	status,2,c
 20204  012F6E  0012               	return	
 20205  012F70  D7E0               	goto	i2l5555
 20206  012F72                     __end_of_USBCtrlTrfTxService:
 20207                           	opt stack 0
 20208                           pclatu	equ	0xFFB
 20209                           pclath	equ	0xFFA
 20210                           tblptru	equ	0xFF8
 20211                           tblptrh	equ	0xFF7
 20212                           tblptrl	equ	0xFF6
 20213                           tablat	equ	0xFF5
 20214                           prodh	equ	0xFF4
 20215                           prodl	equ	0xFF3
 20216                           intcon	equ	0xFF2
 20217                           intcon2	equ	0xFF1
 20218                           indf0	equ	0xFEF
 20219                           postinc0	equ	0xFEE
 20220                           fsr0h	equ	0xFEA
 20221                           fsr0l	equ	0xFE9
 20222                           wreg	equ	0xFE8
 20223                           indf1	equ	0xFE7
 20224                           postinc1	equ	0xFE6
 20225                           postdec1	equ	0xFE5
 20226                           fsr1h	equ	0xFE2
 20227                           fsr1l	equ	0xFE1
 20228                           indf2	equ	0xFDF
 20229                           postinc2	equ	0xFDE
 20230                           postdec2	equ	0xFDD
 20231                           plusw2	equ	0xFDB
 20232                           fsr2h	equ	0xFDA
 20233                           fsr2l	equ	0xFD9
 20234                           status	equ	0xFD8
 20235                           pclatu	equ	0xFFB
 20236                           pclath	equ	0xFFA
 20237                           tblptru	equ	0xFF8
 20238                           tblptrh	equ	0xFF7
 20239                           tblptrl	equ	0xFF6
 20240                           tablat	equ	0xFF5
 20241                           prodh	equ	0xFF4
 20242                           prodl	equ	0xFF3
 20243                           intcon	equ	0xFF2
 20244                           intcon2	equ	0xFF1
 20245                           indf0	equ	0xFEF
 20246                           postinc0	equ	0xFEE
 20247                           fsr0h	equ	0xFEA
 20248                           fsr0l	equ	0xFE9
 20249                           wreg	equ	0xFE8
 20250                           indf1	equ	0xFE7
 20251                           postinc1	equ	0xFE6
 20252                           postdec1	equ	0xFE5
 20253                           fsr1h	equ	0xFE2
 20254                           fsr1l	equ	0xFE1
 20255                           indf2	equ	0xFDF
 20256                           postinc2	equ	0xFDE
 20257                           postdec2	equ	0xFDD
 20258                           plusw2	equ	0xFDB
 20259                           fsr2h	equ	0xFDA
 20260                           fsr2l	equ	0xFD9
 20261                           status	equ	0xFD8
 20262                           
 20263                           	psect	rparam
 20264  0000                     pclatu	equ	0xFFB
 20265                           pclath	equ	0xFFA
 20266                           tblptru	equ	0xFF8
 20267                           tblptrh	equ	0xFF7
 20268                           tblptrl	equ	0xFF6
 20269                           tablat	equ	0xFF5
 20270                           prodh	equ	0xFF4
 20271                           prodl	equ	0xFF3
 20272                           intcon	equ	0xFF2
 20273                           intcon2	equ	0xFF1
 20274                           indf0	equ	0xFEF
 20275                           postinc0	equ	0xFEE
 20276                           fsr0h	equ	0xFEA
 20277                           fsr0l	equ	0xFE9
 20278                           wreg	equ	0xFE8
 20279                           indf1	equ	0xFE7
 20280                           postinc1	equ	0xFE6
 20281                           postdec1	equ	0xFE5
 20282                           fsr1h	equ	0xFE2
 20283                           fsr1l	equ	0xFE1
 20284                           indf2	equ	0xFDF
 20285                           postinc2	equ	0xFDE
 20286                           postdec2	equ	0xFDD
 20287                           plusw2	equ	0xFDB
 20288                           fsr2h	equ	0xFDA
 20289                           fsr2l	equ	0xFD9
 20290                           status	equ	0xFD8
 20291                           
 20292                           	psect	temp
 20293  00005B                     btemp:
 20294                           	opt stack 0
 20295  00005B                     	ds	1
 20296  0000                     int$flags	set	btemp
 20297                           pclatu	equ	0xFFB
 20298                           pclath	equ	0xFFA
 20299                           tblptru	equ	0xFF8
 20300                           tblptrh	equ	0xFF7
 20301                           tblptrl	equ	0xFF6
 20302                           tablat	equ	0xFF5
 20303                           prodh	equ	0xFF4
 20304                           prodl	equ	0xFF3
 20305                           intcon	equ	0xFF2
 20306                           intcon2	equ	0xFF1
 20307                           indf0	equ	0xFEF
 20308                           postinc0	equ	0xFEE
 20309                           fsr0h	equ	0xFEA
 20310                           fsr0l	equ	0xFE9
 20311                           wreg	equ	0xFE8
 20312                           indf1	equ	0xFE7
 20313                           postinc1	equ	0xFE6
 20314                           postdec1	equ	0xFE5
 20315                           fsr1h	equ	0xFE2
 20316                           fsr1l	equ	0xFE1
 20317                           indf2	equ	0xFDF
 20318                           postinc2	equ	0xFDE
 20319                           postdec2	equ	0xFDD
 20320                           plusw2	equ	0xFDB
 20321                           fsr2h	equ	0xFDA
 20322                           fsr2l	equ	0xFD9
 20323                           status	equ	0xFD8


Data Sizes:
    Strings     525
    Constant    239
    Data        3
    BSS         1662
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    117     160
    BANK1           256      4     153
    BANK2           256      0     178
    BANK3           256      0     250
    BANK4           256    105     105
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_60(CODE[6]), STR_59(CODE[2]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> STR_56(CODE[2]), STR_55(CODE[2]), STR_54(CODE[2]), STR_53(CODE[2]), 
		 -> STR_52(CODE[2]), STR_51(CODE[4]), STR_50(CODE[4]), STR_49(CODE[4]), 
		 -> STR_48(CODE[4]), STR_47(CODE[5]), STR_46(CODE[4]), STR_45(CODE[9]), 
		 -> STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[7]), 
		 -> STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[6]), 
		 -> STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), STR_28(CODE[12]), 
		 -> STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), terminal_task@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_61(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_23(CODE[37]), STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    uart_rx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    uart_tx.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_task@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_task@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F8959.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_task@command(BANK0[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_tx(BANK1[8]), terminal_task@command(BANK0[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 315
		 -> STR_43(CODE[315]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), terminal_task@command(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), uart_rx(BANK1[8]), uart_tx(BANK1[8]), 
		 -> terminal_task@command(BANK0[8]), 

    S3119ringbuf$buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 1000
		 -> main_init@rxbuf(BANK3[250]), main_init@txbuf(BIGRAMl[1000]), terminal_task@buf(BANK4[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), usb_rx(BANK1[8]), terminal_task@command(BANK0[8]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw_B(BANK1[4]), sw_G(BANK1[4]), sw_R(BANK1[4]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_task@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1568_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1568_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S187$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S177$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S177$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S153$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S153$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S153$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S153$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_terminal_task
    _terminal_task->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->___lwmod
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _RTCC_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    ___awdiv->_atoi
    _light_task->_RTCC_from_RTCC
    _PWM_set->___awdiv
    ___lwdiv->___wmul
    _USB_task->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_task->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_task

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_terminal_task

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  262945
                          _RTCC_task
                           _USB_task
                         _light_task
                          _main_init
                      _terminal_task
 ---------------------------------------------------------------------------------
 (1) _terminal_task                                      111   107      4  190580
                                            115 BANK0      2     2      0
                                              0 BANK1      4     0      4
                                              0 BANK4    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  26    16     10  165755
                                            101 BANK0     14     4     10
                            _PWM_set
                            ___awdiv
                             ___wmul
                               _atoi
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  110126
                                             92 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   56271
                                             85 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   29276
                                             53 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   15358
                                             18 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    5947
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   17230
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    8463
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2   12303
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    6944
                                             18 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     708
                                             13 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1562
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0   22017
                           _ADC_init
                           _OSC_init
                           _PWM_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0   18852
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_epoch                                      2     0      2   11272
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8701
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    5084
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    2152
                                             22 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0    1697
                                             21 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    1635
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _light_task                                          11    11      0   26473
                                             40 BANK0     11    11      0
                            _PWM_set
                     _RTCC_from_RTCC
                            ___lldiv
                            ___llmod
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     470
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     955
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _PWM_set                                              5     3      2   14050
                                             21 BANK0      5     3      2
                            ___awdiv (ARG)
                            ___lwdiv
                             ___wmul
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4   10680
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4    1431
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _USB_task                                             3     3      0   16295
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4185
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2372
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1288
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_task                                            0     0      0    7580
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7580
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    6165
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2988
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                15    15      0   33581
                                             30 COMRAM    15    15      0
                            _USB_ISR
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (11) _button_timer_interrupt                              5     2      3    1432
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_task
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_task
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _light_task
     _PWM_set
       ___awdiv (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _atoi (ARG)
         ___wmul
         _isdigit
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     ___lldiv
     ___llmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
   _main_init
     _ADC_init
     _OSC_init
     _PWM_init
     _RTCC_init
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _RTCC_from_epoch
         _caltime_to_RTCC
           _d_to_x
             ___awdiv
               ___wmul (ARG)
               _atoi (ARG)
                 ___wmul
                 _isdigit
         _epoch_to_caltime
           _get_quot_rem
             ___lldiv
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
           _month_length
             ___awmod
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _terminal_task
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _PWM_set
         ___awdiv (ARG)
           ___wmul (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
         ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___awdiv
         ___wmul (ARG)
         _atoi (ARG)
           ___wmul
           _isdigit
       ___wmul
       _atoi
         ___wmul
         _isdigit
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
               ___wmul (ARG)
             ___lwmod
               ___lwdiv (ARG)
                 ___wmul (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
                   ___wmul (ARG)
                   _atoi (ARG)
                     ___wmul
                     _isdigit
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
                 ___wmul (ARG)
               ___lwmod
                 ___lwdiv (ARG)
                   ___wmul (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _button_timer_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     3E8      36       30.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100     69      69      14       41.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      B2      10       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      99       7       59.8%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A8       8        0.0%
DATA                 0      0     790       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 12 22:34:10 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FD0D  
                         _ringbuf_put_num 3CBA                           _ringbuf_put_str 3F84  
                            ___awdiv@sign 0072                                        _ms 010E  
                           _USBDeviceInit 1EE2                       ___wmul@multiplicand 0062  
                       ??_RTCC_from_epoch 0091                        __size_of_CDCInitEP 006E  
                            __CFG_CP0$OFF 000000      USER_USB_CALLBACK_EVENT_HANDLER@event 003A  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 003C                                       l207 43B8  
                                     l208 43B6                                       l146 1F58  
             __end_of_USBStdGetDscHandler 23F0                                       l504 1DC2  
                                     l509 1E16                                       l813 2C22  
                                     l662 41E2                                       l726 3CBC  
                                     l807 3404                                       l657 4368  
                                     l826 1ABA                                       _BDT 000D00  
                                     l929 42D8                                       _PR2 000FCB  
                                     _ISR 1008                                       _UIE 000F36  
                                     _UIR 000F62                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                        caltime_to_epoch@tm 0079  
                              _USBSuspend 44E4                                       _now 014A  
                       _RTCC_from_caltime 458E                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0042                                       prod 000FF3  
                                     wreg 000FE8                            _USBDeviceTasks 203A  
                              _TXSTA1bits 000FAD                            _USBDeviceState 0022  
                      ?_RTCC_from_caltime 008F                     ??_USBCtrlTrfRxService 002E  
                __size_ofi2_USBDeviceInit 013A                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0036                                      ?_ISR 002E  
                  __end_of_get_string_usb 4254                          _terminal_at_hand 3FE8  
                                    l1208 466E                                      l1240 3B5E  
                                    l1430 1974                                      l1425 191A  
                                    l1371 32A6                                      l1900 38B8  
              USBConfigureEndpoint@handle 0034                                      l1693 25E4  
                                    l1943 3E2C                                      l1953 40A2  
                                    l1890 33F2                                      l8201 37E0  
                                    l9001 0AEC                                      l9011 0BB2  
                                    l8213 3826                                      l8205 3804  
                                    l9021 0C7A                                      l9005 0B32  
                                    l9015 0BFA                        __CFG_WPFP$PAGE_127 000000  
                                    l8209 3812                                      l8241 2940  
                                    l8225 2756                                      l8305 3376  
                                    l9017 0C32                                      l9009 0B7A  
                                    l8251 3E6E                                      l8403 3DDC  
                                    l9035 1C58                                      l8307 3386  
                                    l9203 3F30                                      l8405 3DE8  
                                    l9045 1CAC                                      l9053 1D04  
                                    l8317 33E0                                      l8309 338C  
                                    l9301 0442                                      l8247 3E48  
                                    l8351 103E                                      l8415 3E1E  
                                    l8407 3DEE                                      l9063 1D32  
                                    l9055 1D1E                                      l9039 1C68  
                                    l8263 31EA                                      l8511 1B30  
                                    l8431 4094                                      l8423 405E  
                                    l8193 37BA                                      l8361 10A2  
                                    l8329 2E88                                      l9049 1CBC  
                                    l9073 1D4A                                      l8425 406A  
                                    l8441 3FBE                                      l9225 0048  
                                    l8371 112A                                      l8355 1048  
                                    l8363 10A6                                      l9323 44C4  
                                    l9067 1D3E                                      l9059 1D28  
                                    l8275 321E                                      l8291 326E  
                                    l8515 1B38                                      l8427 4070  
                                    l9155 3CCC                                      l8603 0720  
                                    l9243 011C                                      l9227 0060  
                                    l8197 37CE                                      l8189 37AA  
                                    l8349 1038                                      l9341 4222  
                                    l9325 44C8                                      l9413 38A6  
                                    l9405 384C                                      l8277 322A  
                                    l8269 3200                                      l8509 1B2C  
                                    l9165 3D2E                                      l8437 3F86  
                                    l8605 0726                                      l8541 04F6  
                                    l9253 01B2                                      l8199 37DA  
                                    l8367 10C6                                      l9175 30EC  
                                    l9183 3108                                      l9407 385C  
                                    l8295 3282                                      l8287 3260  
                                    l8279 3230                                      l9087 4380  
                                    l9159 3CEE                                      l8623 0784  
                                    l8535 04DA                                      l9247 0164  
                                    l8705 2B9C                                      l9177 3102  
                                    l9409 3862                                      l9193 3AD2  
                                    l8617 0762                                      l8537 04EC  
                                    l8529 04BC                                      l9281 0342  
                                    l9265 0256                                      l9257 01FA  
                                    l9249 016A                                      l9339 421E  
                                    l9099 41E4                                      l8387 455C  
                                    l8627 07BC                                      l8563 05E0  
                                    l8555 05AE                                      l8547 052E  
                                    l8717 2C02                                      l8741 40BA  
                                    l8661 086C                                      l8653 0846  
                                    l8637 07EC                                      l8645 0814  
                                    l8629 07C6                                      l8581 067C  
                                    l8573 0646                                      l8565 05EC  
                                    l9293 03E6                                      l9277 02FA  
                                    l9269 029E                                      l9533 0D14  
                                    l8823 1FA2                                      l8807 1F66  
                                    l8815 1F78                                      l8751 24FE  
                                    l8647 0820                                      l8575 0652  
                                    l8567 05F2                                      l8671 08FA  
                                    l8591 06BA                                      l8735 4030  
                                    l8913 1DB6                                      l9641 1940  
                                    l9625 18FA                                      l8753 2504  
                                    l8745 40F8                                      l8593 06F0  
                                    l9289 039E                                      l9561 0E8A  
                                    l9553 0E38                                      l9545 0DE6  
                                    l9537 0D94                                      l9529 0CEA  
                                    l8931 1E1A                                      l8907 1D9C  
                                    l9651 195E                                      l9643 1944  
                                    l9619 1878                                      l8691 4414  
                                    l8819 1F98                                      l8771 25AC  
                                    l8763 254A                                      l8739 40AE  
                                    l8667 08CE                                      l8659 0866  
                                    l8587 06A2                                      l8579 0664  
                                    l9571 0F3C                                      l9563 0E8E  
                                    l9555 0E3C                                      l9547 0DEA  
                                    l9539 0D98                                      l8925 1E00  
                                    l8909 1DA6                                      l9629 1904  
                                    l8829 2008                                      l8669 08DA  
                                    l9581 0F8A                                      l8919 1DCC  
                                    l9663 199A                                      l9647 1954  
                                    l8687 4402                                      l8791 1F2E  
                                    l8767 255C                                      l9575 0F66  
                                    l8697 2B68                                      l8873 2846  
                                    l8865 2804                                      l9665 199E  
                                    l8769 25A6                                      l9585 0FCA  
                                    l9577 0F6E                                      l9569 0F12  
                                    l9593 1000                                      l8939 1E42  
                                    l8947 1E66                                      l8875 284E  
                                    l8883 28B0                                      l8867 280E  
                                    l8795 1F38                                      l8965 1EB6  
                                    l8949 1E72                                      l8957 1E96  
                                    l9669 19B6                                      l8981 095C  
                                    l8967 1EBA                                      l8959 1EA0  
                                    l8879 287E                                      l8991 0A24  
                                    STR_1 FFC1                                      l8969 1EDE  
                                    l8985 09A4                                      l9881 429E  
                                    STR_4 FFFB                                      l8899 45F8  
                                    l8995 0A6C                                      l8979 0950  
                                    l8997 0AA4                                      l8989 09EC  
                                    STR_7 FFFD                                      STR_9 FFF9  
                                    u8200 291C                                      u8220 2932  
                                    u8230 2934                                      u9110 1D8C  
                   ??_USBCtrlTrfTxService 002E                                      u8240 298C  
                                    u8250 298E                                      u8218 2920  
                                    u9050 27F4                                      u8180 28EA  
                                    u8190 28EC                                      u9118 1D90  
                                    _UCFG 000F39                                      u8520 3FB0  
                                    u9058 27F8                                      u8530 3FE0  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u8527 3FA6                                      u8537 3FD6  
                                    _UEIE 000F37                                      u9455 460C  
                                    u9456 460E                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 00E4  
                     ??_RTCC_from_caltime 0091    USBStdFeatureReqHandler@current_ep_data 0045  
                                    _pDst 00E8                                      _atoi 24FC  
                                    _main 429A                  ??i2_USBTransferOnePacket 0032  
                button_timer_interrupt@bt 002E                                      _sw_B 0187  
                                    _sw_G 018B                                      _sw_R 018F  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                         _USBDeviceAttach 438A                                      btemp 005B  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 46BC  
                                    pclat 000FFA                                      prodh 000FF4  
                                    prodl 000FF3                           __end_of_PWM_set 1D68  
                                    start 10FE                          __end_of_ADC_init 461C  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 2B4A  
                  ??_USBCtrlTrfOutHandler 0030                            terminal_task@i 0468  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0042  
                         ??_terminal_task 00D3                           ??_terminal_time 00C4  
                      terminal_task@ascii 0467                             ADC_init@p_ref 0060  
                                   ??_ISR 004C                  ??_USBStdGetStatusHandler 002E  
                            print_time@tx 0095                            ?_USBDeviceInit 002E  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                 __end_of_RTCC_from_caltime 45B4  
                                   ?_atoi 0066                                     ?_main 002E  
                 __size_of_put_string_usb 002C                            ??_get_quot_rem 007D  
                         __end_of___awdiv 328C                                     _ADRES 000FC3  
                                   STR_20 FFDA                                     STR_13 FFF7  
                                   STR_30 FFB7                                     STR_31 FFCC  
                                   STR_15 FF7B                                     STR_23 FF2D  
                                   STR_32 FFA7                                     STR_40 FF93  
                                   STR_24 FF84                                     STR_33 FFC4  
                                   STR_41 FFB2                                     STR_25 FF5E  
                                   STR_26 FFE3                                     STR_42 FFE5  
                                   STR_34 FFDE                                     STR_50 FFD2  
                                   STR_35 FFAB                                     STR_27 FFE2  
                                   STR_19 FFDA                                     STR_51 FFCA  
                                   STR_43 FDF2                                     STR_52 FFA5  
                                   STR_36 FFBC                                     STR_60 FFA1  
                                   STR_44 FF69                                     STR_28 FF52  
                         __end_of___awmod 3830                                     STR_37 FFD4  
                                   STR_29 FFE0                                     STR_53 FFEB  
                                   STR_61 FF8C                                     STR_45 FF72  
                                   STR_54 FFF1                                     STR_46 FFD6  
                                   STR_38 FF9A                                     STR_39 FFF5  
                                   STR_55 FFE9                                     STR_47 FFAD  
                                   STR_56 FFEF                                     STR_48 FFCE  
                                   STR_57 FFE7                                     STR_49 FFC6  
                                   STR_58 FFF3                                     STR_59 FFED  
       __size_of_USBCtrlEPServiceComplete 00F0                           __end_of___lldiv 3404  
                                   u10080 182C                           ___awdiv@divisor 006F  
                         __end_of___llmod 38CA                    __end_of_USBDeviceTasks 2184  
                                   _LATB2 007C52                 ?_USBCtrlEPServiceComplete 002E  
                         __end_of___lwdiv 3E36                           __end_of___lwmod 40AC  
                                   i2l300 3704                                     i2l232 2664  
                                   i2l146 21EA                                     i2l170 2116  
                                   i2l308 4296                                     i2l158 206A  
                                   i2l168 2104                                     i2l345 362A  
                                   i2l169 2180                                     i2l450 3682  
                                   i2l530 1606                                     i2l531 1626  
                                   i2l452 36B8                                     i2l532 1646  
                                   i2l525 155E                                     i2l374 12D4  
                                   i2l526 1582                                     i2l295 36F2  
                                   i2l359 2A80                                     i2l527 15A4  
                                   i2l368 2ACE                                     i2l528 15C6  
                                   i2l393 149C                                     i2l529 15E6  
                                   i2l298 377A                                     i2l299 3700  
                                   _UADDR 000F38                           ___awdiv@counter 0071  
                                   _TMR1H 000FCF                                     _RPOR3 000EC3  
                                   _RPOR4 000EC4                                     _RPOR5 000EC5  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
      __size_of_USBCtrlEPAllowStatusStage 00C2                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 39FA  
                                   _sd000 FDEE                                     _sd001 FD58  
                                   _sd002 FD8C                      caltime_to_epoch@year 007F  
                              i2memset@p1 002E                           __end_of_dpowers FD0D  
                        __end_of_OSC_init 46B6                           __end_of_isdigit 4566  
                      __size_of_RTCC_init 006A                           ?_get_string_usb 006D  
                      __size_of_RTCC_task 003C                          ringbuf_delete@rb 0060  
                                   atoi@a 006B                                     atoi@s 0066  
                                   tablat 000FF5                                     plusw2 000FDB  
                       __end_of_CDCInitEP 3F1A                          __end_of_PWM_init 3348  
                        __end_of_USB_init 4658                          __end_of_USB_task 3BAA  
              __size_of_ringbuf_backspace 008E                                     status 000FD8  
                         __end_of_sprintf 0908                          __end_ofi2_memset 453C  
                       month_length@month 0066                   __end_of_ringbuf_put_num 3D3C  
                 __end_of_ringbuf_put_str 3FE8                       terminal_task@i_4309 0466  
                         putUSBUSART@data 0060              __size_of_USBStdSetCfgHandler 00DC  
                         __initialization 3C36                           terminal_task@rx 0195  
                         terminal_task@tx 0193                           terminal_time@tx 00BC  
                            __end_of_atoi 25EE                              __end_of_main 42D8  
                   _control_signal_bitmap 00F0                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 0097                                    ??_atoi 0068  
                                  ??_main 00D5                             __activetblptr 000003  
                         ?_USBDeviceTasks 002E                               ?_USBSuspend 002E  
                            _cdc_mem_type 00ED                                    _BCL1IF 007D0B  
                 __end_of_USBDeviceAttach 43C2                          _CDCDataOutHandle 00E6  
                       _getsUSBUSART$1957 006B                          ___llmod@dividend 0060  
                                  _CCPR1L 000FBB                                    _CCPR2L 000FB5  
                                  _CCPR3L 000F16                                    _CCPR4L 000F13  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 006D  
                               ??_USB_ISR 004C                           getsUSBUSART@len 0069  
                 _terminal_operation$6610 00CF                   _terminal_operation$6611 00D1  
                               ??_PWM_set 0077                     __size_of_CDCTxService 017A  
                                  i2l1368 10C2                            __CFG_WDTEN$OFF 000000  
                                  i2l7001 20C6                                    i2l5333 3500  
                                  i2l5325 34D6                                    i2l7021 210E  
                                  i2l6231 243E                                    i2l5511 4466  
                                  i2l7015 20FA                                    i2l7007 20D2  
                                  i2l6225 241C                                    i2l5281 4332  
                                  i2l5345 355C                                    i2l7041 2160  
                                  i2l5531 2EBE                                    i2l6411 35F0  
                                  i2l6243 2498                                    i2l5267 3A5C  
                                  i2l5515 446C                                    i2l7043 217C  
                                  i2l7035 2142                                    i2l5701 3152  
                                  i2l5277 4324                                    i2l5381 36A2  
                                  i2l5373 3676                                    i2l5365 3660  
                                  i2l5509 4460                                    i2l5535 2EC8  
                                  i2l6247 24B2                                    i2l5545 2EF2  
                                  i2l5553 2F2A                                    i2l6417 3610  
                                  i2l6281 2AB2                                    i2l6265 2A88  
                                  i2l6177 260E                                    i2l5555 2F32  
                                  i2l5563 2F6A                                    i2l5811 23D8  
                                  i2l6291 2AE8                                    i2l6267 2A8E  
                                  i2l5731 39B0                                    i2l6611 3010  
                                  i2l6603 2FCA                                    i2l5389 36C0  
                                  i2l5805 23CC                                    i2l6277 2AA6  
                                  i2l6269 2A94                                    i2l6197 268A  
                                  i2l6383 415E                                    i2l6375 4116  
                                  i2l5903 147C                                    i2l5807 23D2  
                                  i2l5823 3722                                    i2l5751 29D4  
                                  i2l6279 2AAC                                    i2l6295 2B06  
                                  i2l5735 39C8                                    i2l6615 302A  
                                  i2l7431 16D6                                    i2l7423 168E  
                                  i2l8127 106E                                    i2l5921 150E  
                                  i2l5913 14BE                                    i2l5905 1488  
                                  i2l5833 3762                                    i2l5681 451A  
                                  i2l5761 2A08                                    i2l6617 3030  
                                  i2l6561 4458                                    i2l5851 12D0  
                                  i2l5755 29DC                                    i2l7443 1746  
                                  i2l7435 16FA                                    i2l7427 16B2  
                                  i2l7451 1790                                    i2l7419 166A  
                                  i2l6397 35AC                                    i2l5685 452A  
                                  i2l6399 35B0                                    i2l5919 1502  
                                  i2l5871 138C                                    i2l6583 4292  
                                  i2l6559 4456                                    i2l7447 176C  
                                  i2l7439 1720                                    i2l5873 138E  
                                  i2l5865 1348                                    i2l5785 22CE  
                                  i2l5777 2A4E                                    i2l6923 2230  
                                  i2l6907 21F8                                    i2l6915 220A  
                                  i2l5893 1436                                    i2l5877 13AA  
                                  i2l5797 236E                                    i2l5789 22E0  
                                  i2l5887 1402                                    i2l5799 2374  
                                  i2l6599 2FC2                                    i2l6919 2228  
                                  i2l5889 141C                                    i2l6929 228C  
                                  i2l6891 21C6                                    i2l6963 2062  
                                  i2l6955 2052                                    i2l6895 21CE  
                                  i2l6991 20B6                                    i2l6985 2090  
                                  i2l6977 2080                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0032                         ??i2_USBDeviceInit 0036  
         __size_ofi2_USBTransferOnePacket 00BA                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 4674                        _terminal_task$6608 0464  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 0029                            __CFG_XINST$OFF 000000  
                       ?_epoch_to_caltime 0081                          ringbuf_put_num@i 0077  
                         USBDeviceTasks@i 004B                              _CCPTMRS0bits 000F52  
                            _CCPTMRS1bits 000F51                     caltime_to_epoch@epoch 0081  
             USBStdFeatureReqHandler@pUEP 0043                        _terminal_time$6609 00C4  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 002F  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0068  
                   caltime_to_epoch@month 0085                                    ___lmul 3E36  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 2C22  
                                  ___wmul 43C2                        ??_epoch_to_caltime 0083  
                             light_task@i 0092                               light_task@n 00FE  
                               ??___awdiv 0071                                 ??___awmod 0064  
                                  _d_to_x 4566                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 28B6                      ringbuf_put_num@value 0074  
                            ?_timer0_init 002E                                 ??___llmod 0068  
                       __end_of_RTCC_init 3F84                              ?_timer1_init 0060  
                               ??___lwdiv 006A                         __end_of_RTCC_task 4314  
                               ??___lwmod 0071                              ?_timer3_init 002E  
                       _USBEnableEndpoint 4314           __size_of_USBStdGetStatusHandler 00AA  
                                  _memset 43F8                                    clear_0 3C3E  
                                  clear_1 3C50                                    clear_2 3C5C  
                         put_string_usb@s 006C                                    clear_3 3C68  
                                  clear_4 3C74                                    clear_5 3C80  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0073  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 461C                        ?_USBEnableEndpoint 0036  
              __size_of_RTCC_from_caltime 0026                                    _usb_rx 0170  
                                  _usb_tx 0178                                    _strcmp 40AC  
           __size_of_USBTransferOnePacket 00D8                 __size_of_caltime_to_epoch 028E  
                      _terminal_operation 0000                                 ??_isdigit 0060  
                            _CDCTxService 1D68                              __mediumconst FD02  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                 ?_ADC_init 002E  
                     ??_USBEnableEndpoint 0037                                 ??_sprintf 0084  
                     ?_terminal_operation 00C5                               _CtrlTrfData 000D38  
                    _controlTransferState 0027                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 3CB0  
                            __pbssBIGRAMl 0469                      __end_of_get_quot_rem 2DCC  
                           ___rparam_used 000001                           _RTCC_from_epoch 4674  
                __size_of_USBStallHandler 0046                          ?_ringbuf_put_num 0072  
                        ?_ringbuf_put_str 006F                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          terminal_task@op0 0118  
                        terminal_task@op1 0131                          terminal_task@op2 0280  
                        terminal_task@op3 0299                          terminal_task@buf 0400  
                          __pcstackCOMRAM 002E                 __end_of_USBEnableEndpoint 4350  
                           __end_of_sd000 FDF2                             __end_of_sd001 FD8C  
                           __end_of_sd002 FDC0                          terminal_time@op0 00BE  
                        terminal_time@op1 00C0                          terminal_time@op2 00C2  
                            __pidataBANK0 46BC                              __pidataBANK1 1004  
                    ??_terminal_operation 00CF                  __end_of_terminal_at_hand 404A  
        __size_of_USBCtrlEPAllowDataStage 0098             __size_of_USBConfigureEndpoint 0094  
                               ?_OSC_init 002E               __end_of_USBCtrlTrfInHandler 3634  
                         __CFG_DSWDTPS$G2 000000                            _put_string_usb 44B8  
                  i2_USBTransferOnePacket 34C0                           light_task@_5760 00FD  
                               ?_PWM_init 002E                      terminal_task@command 00F5  
                               ?_USB_init 002E                                 ?_USB_task 002E  
                       _CDCTxService$2005 0068                                _cdc_notice 0100  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 002E  
                              _cdc_rx_len 00EE                                _cdc_tx_len 00EF  
                              ??_ADC_init 0060                caltime_to_epoch@month_3467 0080  
                ??_USBCtrlTrfSetupHandler 0048                           light_task@value 008C  
                        ?_USBDeviceAttach 002E                    _USBStdGetStatusHandler 36E4  
                            sprintf@width 0093                        __size_of_main_init 0098  
                              __pbssBANK0 00D5                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                 __end_of_caltime_to_RTCC 2CF8                           _RTCC_to_caltime 3404  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 0010  
        __end_of_USBCtrlEPServiceComplete 26DE               __size_of_USBCheckCDCRequest 00B0  
                   __end_of_weekday_3char FDDC                     RTCC_task@prev_halfsec 00EA  
                    USBCtrlTrfRxService@i 002E                                   ?___lmul 006D  
                                 ?___wmul 0060                                   ?_d_to_x 002E  
                  __end_of_put_string_usb 44E4                                ??_OSC_init 0060  
                                 ?_memset 0060                            ___lmul@product 0075  
                              _device_dsc FDDC                          _USBCtrlEPService 2F72  
                                 ?_x_to_d 002E                                _ep_data_in 0016  
                                 ?_strcmp 0060               __end_of_USBCtrlTrfRxService 24FC  
                              ??_PWM_init 0060                        _USBCheckStdRequest 2A70  
                              ??_USB_init 0069                         _configDescriptor1 FD15  
                              ??_USB_task 0074                          ??_get_string_usb 0071  
                      __CFG_OSC$INTOSCPLL 000000                                ??i2_memset 0034  
             __end_of_USBCtrlTrfTxService 2F72                       _USBStdSetCfgHandler 2994  
                  I2C_LCD_SetCursor@F8620 0197                           __CFG_WDTPS$1024 000000  
                                 _SPBRGH1 000F7F                                   _SSP1ADD 000FC8  
                                 _SSP1BUF 000FC9                      terminal_operation@tx 00C5  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                     ?_USBCheckStdRequest 002E              __size_of_USBStdGetDscHandler 0132  
                                 _UIEbits 000F36                                   _USB_ISR 46B6  
                 __end_of_RTCC_from_epoch 468E                      timer1_init@prescaler 0062  
                                 _UIRbits 000F62                                   _PWM_set 1BC0  
                            PWM_set@color 0079                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0031                             _cdc_trf_state 0026  
                            PWM_set@value 0075                             ?_month_length 0066  
                     epoch_to_caltime@day 0087                       epoch_to_caltime@num 008B  
                       RTCC_from_epoch@tm 008F                                   _pCDCDst 00DE  
                                 _pCDCSrc 00E1                     __size_of_getsUSBUSART 00EA  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002E  
                               _CDCInitEP 3EAC                                   __Lparam 0000  
                       ringbuf_put_num@rb 0072                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 006F                              USB_task@data 0076  
                    ??_USBCheckStdRequest 0048             __size_of_USBCtrlTrfOutHandler 005C  
                           ?_ringbuf_init 0060                                   ___awdiv 31CE  
                         __size_of___lmul 0076                                   ___awmod 378E  
                                 ___lldiv 3348                          ??_USBDeviceTasks 004B  
                         __size_of___wmul 0036                                   ___llmod 3830  
                   ringbuf_put_num@digits 0076                                _light_mode 00F1  
                                 ___lwdiv 3DBE                           ?_put_string_usb 006C  
                              _light_task 17B6                         ??_USBStallHandler 002E  
                                 ___lwmod 404A                           __size_of_d_to_x 0028  
                   __end_of_terminal_task 101E                     __end_of_terminal_time 0CB4  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 3962                      __size_of_putUSBUSART 0022  
             epoch_to_caltime@month_cache 00FF                                   __pcinit 3C36  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FD58                                   __ramtop 0F00  
                    __size_of_timer0_init 003A                      __size_of_timer1_init 0050  
                                 __ptext0 429A                                   __ptext1 0CB4  
                                 __ptext2 0000                                   __ptext3 0908  
                                 __ptext4 3FE8                                   __ptext5 3BAA  
                                 __ptext6 04AE                                   __ptext7 3F84  
                                 __ptext8 458E                                   __ptext9 40AC  
                                 _inPipes 000A                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0020               _USBDeferOUTDataStagePackets 0020  
                               _T0CONbits 000FD5                          _time_change_flag 00F2  
                        _caltime_to_epoch 101E                           __size_of_strcmp 005C  
                            __size_of_ISR 00F6                                 _T1CONbits 000FCD  
                                 _dpowers FD03                              ??_USBSuspend 0042  
                 __size_of_RTCC_from_RTCC 001A                                 _T2CONbits 000FCA  
                                 _isdigit 453C                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                                 _T5CONbits 000F22  
                         i2_USBDeviceInit 2184                          i2USBDeviceInit@i 0036  
                                 _uart_rx 0160                                   _uart_tx 0168  
                      __end_of_USB_CD_Ptr FD15                                   _sprintf 04AE  
         __size_of_USBCtrlTrfSetupHandler 0082                   __end_of_RTCC_to_caltime 34C0  
                   __size_of_get_quot_rem 00D4                      end_of_initialization 3CB0  
                            _getsUSBUSART 27CC                              _CTMUCONHbits 000FB3  
                      __end_of_USB_SD_Ptr FD13                              _CTMUCONLbits 000FB2  
                     _pBDTEntryEP0OutNext 001B                            ??_month_length 0067  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066           _dummy_encapsulated_cmd_response 0158  
                ?_USBStdFeatureReqHandler 002E                          ?_caltime_to_RTCC 0076  
                   ??_USBStdSetCfgHandler 0042                           ___lldiv@divisor 0064  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002E  
                         ___lldiv@counter 006C                         ?_is_usb_available 002E  
                      __end_of_USBSuspend 4510                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 3962                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 25EE  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 0023  
              _USBStatusStageEnabledFlag2 0024                        USBEnableEndpoint@p 0037  
                               _PORTAbits 000F80                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 3F1A                                 _RTCC_task 42D8  
               epoch_to_caltime@day_cache 0114                              _get_quot_rem 2CF8  
                              _print_time 3BAA                            _ringbuf_delete 45B4  
               __size_of_epoch_to_caltime 01F2                          __CFG_CPUDIV$OSC1 000000  
                      _BothEP0OutUOWNsSet 001D                       RTCC_from_caltime@tm 008F  
               USBConfigureEndpoint@EPNum 0033                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 002E                          ?_RTCC_from_epoch 008F  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003E                                 _USTATcopy 002D  
         __size_of_button_timer_interrupt 0282                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2C22                               _CCP1CONbits 000FBA  
                             _CCP2CONbits 000FB4                          __CFG_IOL1WAY$OFF 000000  
                             _CCP3CONbits 000F15                               _CCP4CONbits 000F12  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                          ringbuf_init@rb 0060                    _USBCtrlTrfSetupHandler 3D3C  
                          ringbuf_pop@ret 006E                   ?i2_USBTransferOnePacket 002E  
                             ?_light_task 002E                     __end_of_USBDeviceInit 203A  
                       ?_terminal_at_hand 00B5                            __end_of___lmul 3EAC  
                          __end_of___wmul 43F8                            __end_of_d_to_x 458E  
                 __end_ofi2_USBDeviceInit 22BE                    __end_of_ringbuf_delete 45DA  
                      ??_terminal_at_hand 00BC                                 i2memset@c 0030  
                               i2memset@n 0032                                 i2memset@p 0034  
                          __end_of_memset 442C                                ?_RTCC_init 002E  
                       __size_of_OSC_init 000E                                ?_RTCC_task 002E  
                        __CFG_DSWDTEN$OFF 000000                         _USBBusIsSuspended 00EC  
                          __end_of_x_to_d 463C                     epoch_to_caltime@month 008A  
                          __end_of_strcmp 4108                       start_initialization 3C36  
                        month_length@year 006B                   ?_USBStdGetStatusHandler 002E  
                             __end_of_ISR 10FE             USBCtrlTrfRxService@byteToRead 002F  
                       __size_of_PWM_init 00BC                         __size_of_USB_init 001C  
                       __size_of_USB_task 008E                               _cdc_data_rx 0200  
                             _cdc_data_tx 0240                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 3A8E                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 1534         __end_of_USBCtrlEPAllowStatusStage 31CE  
                __end_of_USBCtrlEPService 3040                           ___llmod@divisor 0064  
                         ___llmod@counter 0068                 ??_USBCtrlEPAllowDataStage 002F  
                             ??_CDCInitEP 003A                            USBDeviceInit@i 0068  
                  _pBDTEntryEP0OutCurrent 0019                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 357A  
                     ringbuf_put_num@temp 0078                                  ??___lmul 0075  
                                ??___wmul 0064                       _USBStdGetDscHandler 22BE  
                                ??_d_to_x 0075               __size_of_terminal_operation 04AE  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00FF  
                             __pdataBANK1 0197                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0082                  __size_of_ringbuf_put_str 0064  
                  _button_timer_interrupt 1534                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                                  ??_strcmp 0064  
                    __end_of_month_length 2994                            _RTCC_from_RTCC 468E  
                  _USBActiveConfiguration 002C            __end_of_USBStdGetStatusHandler 378E  
                             ?_print_time 0095                               __pbssCOMRAM 0001  
                          USB_task@rx_len 0074                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0193  
            __size_of_USBCtrlTrfInHandler 00BA                             __pcstackBANK4 0400  
                            _isdigit$6052 0061                      __end_of_ringbuf_init 41B8  
                    ?_USBStdGetDscHandler 002E                                  ?_USB_ISR 002E  
                                ?_PWM_set 0075                       __size_of_light_task 0218  
              __end_of_USBWakeFromSuspend 445E                               sprintf@flag 0091  
                          light_task@temp 008E                               sprintf@prec 0088  
                         _USBStallHandler 4254                              _pBDTEntryOut 00D5  
              __end_of_USBCheckCDCRequest 36E4                  __end_of_caltime_to_epoch 12AC  
                         millis_timer@cnt 0116                  __size_of_USBDeviceAttach 0038  
                        ??_put_string_usb 0070                          ___lwdiv@dividend 0066  
                               __pintcode 1008                             __pmediumconst FD02  
                                ?___awdiv 006D                                  ?___awmod 0060  
                                ?___lldiv 0060                                  ?___llmod 0060  
                                ?___lwdiv 0066                                  ?___lwmod 006D  
                   _is_usb_available$4884 0060                    __end_of_RTCC_from_RTCC 46A8  
                        ?i2_USBDeviceInit 002E                USBCBSendResume@delay_count 0112  
                             ??_RTCC_init 0091                               ??_RTCC_task 0088  
                    _USBTransferOnePacket 2B4A                                 _main_init 38CA  
                                ?_isdigit 002E                          _epoch_to_caltime 19CE  
                    __CFG_RTCOSC$T1OSCREF 000000                                  _ADC_flag 00EB  
                                _ADC_init 45FC                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4164                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 002E                               _ep_data_out 00DB  
                        ___lwdiv@quotient 006B                     terminal_at_hand@value 00BB  
                                ?_sprintf 0072              __size_of_USBCtrlTrfRxService 010C  
           USBConfigureEndpoint@direction 002E                                 d_to_x@dec 0075  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1              __size_of_USBCtrlTrfTxService 00D2  
                ringbuf_init@internal_buf 0062                            ___wmul@product 0064  
                                _LATBbits 000F8A                ??_USBCtrlEPServiceComplete 002F  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 008C                                  _PIR1bits 000F9E  
                                i2u451_40 2F5C                                  _PIR2bits 000FA1  
                                i2u451_47 2F52                                  i2u480_40 233A  
                                i2u480_47 2330                                  i2u449_40 2F1C  
                                i2u481_40 236A                                  i2u801_40 105E  
                                _PIR5bits 000F98                                  i2u449_47 2F12  
                                i2u481_47 2360                                  i2u714_40 1710  
              epoch_to_caltime@year_cache 00F3                                  i2u483_40 23C2  
                                i2u715_40 1736                                  i2u802_48 1060  
                                i2u483_47 23B8                                  i2u716_40 175C  
                                i2u804_40 1084                                  i2u717_40 1782  
                                i2u805_40 1086                                  i2u806_40 109C  
                                i2u807_40 109E                                  i2u808_40 10B4  
               USBCtrlEPService@setup_cnt 004A                                  i2u809_40 10B6  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 006B                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0063                                  _UEP0bits 000F26  
              _USBDeferINDataStagePackets 001F                     terminal_operation@op0 00C7  
                   terminal_operation@op1 00C9                     terminal_operation@op2 00CB  
                   terminal_operation@op3 00CD                                  _SSP1CON1 000FC6  
                                _SSP1CON2 000FC5                             ??_timer0_init 0060  
                           ??_timer1_init 0061               __size_of_USBCheckStdRequest 00DA  
                           ??_timer3_init 0060                                  _SSP1STAT 000FC7  
                                _UCONbits 000F65                      _USBConfigureEndpoint 39FA  
                                _OSC_init 46A8                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 0288                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _PWM_init 328C            button_timer_interrupt@sw_value 0030  
                                _USB_init 463C                                  _USB_task 3B1C  
                              ?_main_init 002E                 __size_of_is_usb_available 001C  
                           ?_CDCTxService 002E                              _RemoteWakeup 001E  
                                i2_memset 4510                         ??_ringbuf_put_num 0077  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 429A  
                           ringbuf_put@rb 0068                         ___lmul@multiplier 006D  
                             _INTCON2bits 000FF1               ??_USBCtrlEPAllowStatusStage 002E  
             __end_of_USBStdSetCfgHandler 2A70                          __size_of_USB_ISR 0006  
                    epoch_to_caltime@year 0089                    __size_of_terminal_task 036A  
                  __size_of_terminal_time 03AC                          __size_of_PWM_set 01A8  
                 __size_of_get_string_usb 004C                                _CCPR1Lbits 000FBB  
                              _CCPR2Lbits 000FB5                                _CCPR3Lbits 000F16  
                      __end_of_device_dsc FDEE                                _CCPR4Lbits 000F13  
                 ?_USBCtrlTrfSetupHandler 002E                   USBStdGetStatusHandler@p 002F  
                                __Hrparam 0000                      light_task@value_5761 008D  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                                _SetupPkt 000D30                             _weekday_3char FDC0  
                   __size_of_month_length 00DE                        ringbuf_put_str@str 0071  
                            ??_light_task 0088                     ?_USBConfigureEndpoint 002E  
                __size_of_caltime_to_RTCC 00D6                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                        __size_of___lldiv 00BC                          __size_of___llmod 009A  
                        __size_of___lwdiv 0078                          __size_of___lwmod 0062  
                     __end_of_ringbuf_pop 310C                       __end_of_ringbuf_num 27CC  
                     __end_of_ringbuf_put 2EA0                       __end_of_putUSBUSART 45FC  
                             _line_coding 0180                            ??_CDCTxService 0067  
                     __end_of_timer0_init 438A                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 4208                                sprintf@len 008F  
                     __end_of_timer3_init 44B8                                sprintf@val 008D  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 014A  
                         ___lwdiv@divisor 0068                           ___lwdiv@counter 006A  
                    timer0_init@prescaler 0061                                  __ptext10 24FC  
                                __ptext11 453C                                  __ptext20 4164  
                                __ptext12 3CBA                                  __ptext21 463C  
                                __ptext13 404A                                  __ptext30 4566  
                                __ptext22 1EE2                                  __ptext14 45B4  
                                __ptext31 31CE                                  __ptext23 43F8  
                                __ptext15 3A8E                                  __ptext40 3DBE  
                                __ptext32 328C                                  __ptext24 438A  
                                __ptext16 38CA                                  __ptext41 3B1C  
                                __ptext33 46A8                                  __ptext25 3F1A  
                                __ptext17 448C                                  __ptext50 1D68  
                                __ptext42 2DCC                                  __ptext34 45FC  
                                __ptext26 4674                                  __ptext18 41B8  
                                __ptext51 2B4A                                  __ptext43 3040  
                                __ptext35 17B6                                  __ptext27 19CE  
                                __ptext19 4350                                  __ptext52 42D8  
                                __ptext44 26DE                                  __ptext36 3830  
                                __ptext28 2CF8                                  __ptext61 1534  
                                __ptext53 468E                                  __ptext45 44B8  
                                __ptext37 3348                                  __ptext29 2C22  
                                __ptext70 25EE                                  __ptext62 46B6  
                                __ptext54 101E                                  __ptext46 45DA  
                                __ptext38 1BC0                                  __ptext71 3962  
                                __ptext63 203A                                  __ptext55 28B6  
                                __ptext47 4208                                  __ptext39 43C2  
                                __ptext80 3EAC                                  __ptext72 2A70  
                                __ptext64 2184                                  __ptext56 378E  
                                __ptext48 4658                                  __ptext81 34C0  
                                __ptext73 2994                                  __ptext65 442C  
                                __ptext57 3E36                                  __ptext49 27CC  
                                __ptext82 4314                                  __ptext74 4510  
                                __ptext66 44E4                                  __ptext58 3404  
                                __ptext83 39FA                                  __ptext75 36E4  
                                __ptext67 4254                                  __ptext59 461C  
                                __ptext84 4108                                  __ptext76 22BE  
                                __ptext68 2F72                                  __ptext85 23F0  
                                __ptext77 12AC                                  __ptext69 3D3C  
                                __ptext86 310C                                  __ptext78 445E  
                                __ptext87 357A                                  __ptext79 3634  
                                __ptext88 2EA0                              _SSP1CON1bits 000FC6  
                            _SSP1CON2bits 000FC5                                PWM_init@PR 0060  
               __size_of_terminal_at_hand 0062                          __size_of_sprintf 045A  
                    terminal_at_hand@hand 00B7                        __end_of_light_task 19CE  
                           __size_of_atoi 00F2            __end_of_USBCtrlTrfSetupHandler 3DBE  
                           __size_of_main 003E                         ?_USBCtrlEPService 002E  
                            _month_length 28B6                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0048                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 357A                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 002E  
                    _USBCtrlTrfOutHandler 4108                                  int$flags 005B  
                            _ringbuf_init 4164                                  atoi@sign 006A  
               _USBCtrlEPAllowStatusStage 310C                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                    ??_USBTransferOnePacket 0064  
                           _terminal_task 0CB4                             _terminal_time 0908  
               _USBDeferStatusStagePacket 0021                              ??_print_time 0097  
                CDCTxService@byte_to_send 006B                            main_init@rxbuf 0300  
                          main_init@txbuf 0469                               ??_main_init 0091  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002E  
           USBCtrlTrfTxService@byteToSend 002E                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002E  
                USBStdFeatureReqHandler@p 0046                          get_quot_rem@quot 0079  
               terminal_task@command_init 00F4                         RTCC_to_caltime@tm 0062  
                                intlevel2 0000                                 sprintf@ap 0089  
                               sprintf@cp 008B                                 sprintf@sp 0072  
                  __size_of_USBDeviceInit 0158   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 448C  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0040  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 003A           _USER_USB_CALLBACK_EVENT_HANDLER 445E  
                        ___lwmod@dividend 006D              i2USBTransferOnePacket@handle 0033  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                     terminal_at_hand@max 00BA                       terminal_at_hand@min 00B9  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 3A8E  
                __end_of_epoch_to_caltime 1BC0                  __size_of_RTCC_to_caltime 00BC  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 17B6  
              __end_of_terminal_operation 04AE                        __end_of_print_time 3C36  
              i2USBTransferOnePacket@data 002F                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002F  
                   ?_USBCtrlTrfOutHandler 002E                               _ringbuf_pop 3040  
                             _ringbuf_num 26DE                               _ringbuf_put 2DCC  
                             _putUSBUSART 45DA                       _USBCtrlTrfRxService 23F0  
                             _timer0_init 4350                        _USBWakeFromSuspend 442C  
                             _timer1_init 41B8                               _timer3_init 448C  
                          ?_terminal_task 0193                            ?_terminal_time 00BC  
                 _USBStdFeatureReqHandler 12AC                        _USBCheckCDCRequest 3634  
                     _USBCtrlTrfTxService 2EA0                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                                  sprintf@c 0092  
                                sprintf@f 0074                       ?_USBWakeFromSuspend 002E  
                                strcmp@s1 0060                                  strcmp@s2 0062  
                        _is_usb_available 4658                                _PPSCONbits 000EBF  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 006F  
                       caltime_to_RTCC@tm 0076                         ??_caltime_to_RTCC 0078  
                   ??_USBCtrlTrfInHandler 002F                     _USBAlternateInterface 002A  
                         ___lwmod@counter 0071                        terminal_at_hand@tx 00B5  
                     ?_USBCheckCDCRequest 002E                 i2USBTransferOnePacket@dir 002E  
               i2USBTransferOnePacket@len 0031                       USBEnableEndpoint@ep 0039  
                         _endpoint_number 0028                      ?_USBCtrlTrfRxService 002E  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                ?_USBCtrlEPAllowDataStage 002E                            _get_string_usb 4208  
                    ?_USBCtrlTrfTxService 002E                 __end_of_ringbuf_backspace 3B1C  
            _USBStatusStageTimeoutCounter 0025                      ??_USBWakeFromSuspend 0042  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 1EE2  
                    ??_USBCheckCDCRequest 002E                                _USB_CD_Ptr FD13  
                        ??_RTCC_from_RTCC 0088  
