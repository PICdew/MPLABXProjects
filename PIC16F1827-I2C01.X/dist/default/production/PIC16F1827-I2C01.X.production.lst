

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Jan 07 07:55:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  0111                     	;# 
    82  0112                     	;# 
    83  0113                     	;# 
    84  0114                     	;# 
    85  0115                     	;# 
    86  0116                     	;# 
    87  0117                     	;# 
    88  0118                     	;# 
    89  0119                     	;# 
    90  011A                     	;# 
    91  011B                     	;# 
    92  011D                     	;# 
    93  011E                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  0191                     	;# 
    97  0191                     	;# 
    98  0192                     	;# 
    99  0193                     	;# 
   100  0193                     	;# 
   101  0193                     	;# 
   102  0194                     	;# 
   103  0195                     	;# 
   104  0196                     	;# 
   105  0199                     	;# 
   106  019A                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019C                     	;# 
   112  019C                     	;# 
   113  019D                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  020C                     	;# 
   117  020D                     	;# 
   118  0211                     	;# 
   119  0211                     	;# 
   120  0212                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0215                     	;# 
   129  0216                     	;# 
   130  0216                     	;# 
   131  0217                     	;# 
   132  0217                     	;# 
   133  0219                     	;# 
   134  021A                     	;# 
   135  021B                     	;# 
   136  021C                     	;# 
   137  021D                     	;# 
   138  021E                     	;# 
   139  021F                     	;# 
   140  0291                     	;# 
   141  0291                     	;# 
   142  0292                     	;# 
   143  0293                     	;# 
   144  0294                     	;# 
   145  0295                     	;# 
   146  0295                     	;# 
   147  0296                     	;# 
   148  0298                     	;# 
   149  0298                     	;# 
   150  0299                     	;# 
   151  029A                     	;# 
   152  029B                     	;# 
   153  029C                     	;# 
   154  029C                     	;# 
   155  029D                     	;# 
   156  029E                     	;# 
   157  029E                     	;# 
   158  0311                     	;# 
   159  0311                     	;# 
   160  0312                     	;# 
   161  0313                     	;# 
   162  0318                     	;# 
   163  0318                     	;# 
   164  0319                     	;# 
   165  031A                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  039A                     	;# 
   170  039C                     	;# 
   171  039D                     	;# 
   172  039E                     	;# 
   173  039F                     	;# 
   174  0415                     	;# 
   175  0416                     	;# 
   176  0417                     	;# 
   177  041C                     	;# 
   178  041D                     	;# 
   179  041E                     	;# 
   180  0FE4                     	;# 
   181  0FE5                     	;# 
   182  0FE6                     	;# 
   183  0FE7                     	;# 
   184  0FE8                     	;# 
   185  0FE9                     	;# 
   186  0FEA                     	;# 
   187  0FEB                     	;# 
   188  0FED                     	;# 
   189  0FEE                     	;# 
   190  0FEF                     	;# 
   191                           
   192                           	psect	idataBANK0
   193  0728                     __pidataBANK0:	
   194                           
   195                           ;initializer for LCD_SetCursor@F2873
   196  0728  3400               	retlw	0
   197  0729  3400               	retlw	0
   198  072A  3440               	retlw	64
   199  072B  3400               	retlw	0
   200  000C                     _PORTA	set	12
   201  000D                     _PORTB	set	13
   202  0018                     _T1CON	set	24
   203  0017                     _TMR1H	set	23
   204  0016                     _TMR1L	set	22
   205  0093                     _BCL1IF	set	147
   206  005F                     _GIE	set	95
   207  005E                     _PEIE	set	94
   208  0060                     _RA0	set	96
   209  0061                     _RA1	set	97
   210  008B                     _SSP1IF	set	139
   211  0088                     _TMR1IF	set	136
   212  0095                     _OPTION_REG	set	149
   213  0099                     _OSCCON	set	153
   214  0091                     _PIE1bits	set	145
   215  008C                     _TRISA	set	140
   216  008D                     _TRISB	set	141
   217  0493                     _BCL1IE	set	1171
   218  048B                     _SSP1IE	set	1163
   219  018C                     _ANSELA	set	396
   220  018D                     _ANSELB	set	397
   221  0212                     _SSP1ADD	set	530
   222  0211                     _SSP1BUF	set	529
   223  0215                     _SSP1CON1	set	533
   224  0216                     _SSP1CON2	set	534
   225  0216                     _SSP1CON2bits	set	534
   226  0214                     _SSP1STAT	set	532
   227  020D                     _WPUB	set	525
   228                           
   229                           	psect	stringtext
   230  0800                     __pstringtext:	
   231  0800                     __stringdata:	
   232  0800                     STR_1:	
   233  0800  3420               	retlw	32	;' '
   234  0801  3420               	retlw	32	;' '
   235  0802  3400               	retlw	0
   236  0803                     __end_of__stringdata:	
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  0070                     start_initialization:	
   242  0070                     __initialization:	
   243                           
   244                           ; Clear objects allocated to COMMON
   245  0070  01FA               	clrf	__pbssCOMMON& (0+127)
   246  0071  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   247                           
   248                           ; Clear objects allocated to BANK0
   249  0072  3020               	movlw	low __pbssBANK0
   250  0073  0084               	movwf	4
   251  0074  3000               	movlw	high __pbssBANK0
   252  0075  0085               	movwf	5
   253  0076  3010               	movlw	16
   254  0077  3187  271C  3180   	fcall	clear_ram0
   255                           
   256                           ; Initialize objects allocated to BANK0
   257  007A  3187  2728  3180   	fcall	__pidataBANK0	;fetch initializer
   258  007D  00BE               	movwf	__pdataBANK0& (0+127)
   259  007E  3187  2729  3180   	fcall	__pidataBANK0+1	;fetch initializer
   260  0081  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   261  0082  3187  272A  3180   	fcall	__pidataBANK0+2	;fetch initializer
   262  0085  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   263  0086  3187  272B         	fcall	__pidataBANK0+3	;fetch initializer
   264  0088  00C1               	movwf	(__pdataBANK0+3)& (0+127)
   265  0089                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268  0089                     __end_of__initialization:	
   269  0089  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   270  008A  0020               	movlb	0
   271  008B  3180  288D         	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  007A                     __pbssCOMMON:	
   275  007A                     _DD:	
   276  007A                     	ds	1
   277  007B                     _MM:	
   278  007B                     	ds	1
   279                           
   280                           	psect	bssBANK0
   281  0020                     __pbssBANK0:	
   282  0020                     _AckCheck:	
   283  0020                     	ds	2
   284  0022                     _EE:	
   285  0022                     	ds	1
   286  0023                     _YY:	
   287  0023                     	ds	1
   288  0024                     _cnt_sw:	
   289  0024                     	ds	1
   290  0025                     _cnt_swx:	
   291  0025                     	ds	1
   292  0026                     _cnt_t1:	
   293  0026                     	ds	1
   294  0027                     _hh:	
   295  0027                     	ds	1
   296  0028                     _long_hold_flag1:	
   297  0028                     	ds	1
   298  0029                     _long_hold_flag1x:	
   299  0029                     	ds	1
   300  002A                     _long_hold_flag2:	
   301  002A                     	ds	1
   302  002B                     _long_hold_flag2x:	
   303  002B                     	ds	1
   304  002C                     _mm:	
   305  002C                     	ds	1
   306  002D                     _press_flag:	
   307  002D                     	ds	1
   308  002E                     _press_flagx:	
   309  002E                     	ds	1
   310  002F                     _ss:	
   311  002F                     	ds	1
   312                           
   313                           	psect	dataBANK0
   314  003E                     __pdataBANK0:	
   315  003E                     LCD_SetCursor@F2873:	
   316  003E                     	ds	4
   317                           
   318                           	psect	clrtext
   319  071C                     clear_ram0:	
   320                           ;	Called with FSR0 containing the base address, and
   321                           ;	WREG with the size to clear
   322                           
   323  071C  0064               	clrwdt	;clear the watchdog before getting into this loop
   324  071D                     clrloop0:	
   325  071D  0180               	clrf	0	;clear RAM location pointed to by FSR
   326  071E  3101               	addfsr 0,1
   327  071F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   328  0720  2F1D               	goto	clrloop0	;have we reached the end yet?
   329  0721  3400               	retlw	0	;all done for this memory range, return
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:	
   333  0070                     ?_InterFunction:	
   334  0070                     ??_InterFunction:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_I2C_IdleCheck:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_InitI2C_Master:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_I2C_Stop:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_command:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_LCD_Clear:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_LCD_Putc:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_LCD_Init:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_main:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_RTC_Read:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_I2C_Send:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 2 bytes @ 0x0
   369  0070                     	ds	2
   370  0072                     ??_I2C_IdleCheck:	
   371  0072                     ??_InitI2C_Master:	
   372                           ; 0 bytes @ 0x2
   373                           
   374  0072                     ?___awdiv:	
   375                           ; 0 bytes @ 0x2
   376                           
   377  0072                     ?___awmod:	
   378                           ; 2 bytes @ 0x2
   379                           
   380  0072                     ___awdiv@divisor:	
   381                           ; 2 bytes @ 0x2
   382                           
   383  0072                     ___awmod@divisor:	
   384                           ; 2 bytes @ 0x2
   385                           
   386                           
   387                           ; 2 bytes @ 0x2
   388  0072                     	ds	1
   389  0073                     I2C_IdleCheck@mask:	
   390                           
   391                           ; 1 bytes @ 0x3
   392  0073                     	ds	1
   393  0074                     ??_I2C_Stop:	
   394  0074                     ??_I2C_Send:	
   395                           ; 0 bytes @ 0x4
   396                           
   397  0074                     ?_I2C_Receive:	
   398                           ; 0 bytes @ 0x4
   399                           
   400  0074                     ?_I2C_Start:	
   401                           ; 1 bytes @ 0x4
   402                           
   403  0074                     ?_I2C_rStart:	
   404                           ; 2 bytes @ 0x4
   405                           
   406  0074                     I2C_Send@dt:	
   407                           ; 2 bytes @ 0x4
   408                           
   409  0074                     I2C_Start@adrs:	
   410                           ; 1 bytes @ 0x4
   411                           
   412  0074                     I2C_rStart@adrs:	
   413                           ; 2 bytes @ 0x4
   414                           
   415  0074                     I2C_Receive@ack:	
   416                           ; 2 bytes @ 0x4
   417                           
   418  0074                     ___awdiv@dividend:	
   419                           ; 2 bytes @ 0x4
   420                           
   421  0074                     ___awmod@dividend:	
   422                           ; 2 bytes @ 0x4
   423                           
   424                           
   425                           ; 2 bytes @ 0x4
   426  0074                     	ds	2
   427  0076                     ??_I2C_Receive:	
   428  0076                     ??___awdiv:	
   429                           ; 0 bytes @ 0x6
   430                           
   431  0076                     ??___awmod:	
   432                           ; 0 bytes @ 0x6
   433                           
   434  0076                     I2C_Start@rw:	
   435                           ; 0 bytes @ 0x6
   436                           
   437  0076                     I2C_rStart@rw:	
   438                           ; 2 bytes @ 0x6
   439                           
   440                           
   441                           ; 2 bytes @ 0x6
   442  0076                     	ds	1
   443  0077                     I2C_Receive@dt:	
   444  0077                     ___awmod@counter:	
   445                           ; 1 bytes @ 0x7
   446                           
   447                           
   448                           ; 1 bytes @ 0x7
   449  0077                     	ds	1
   450  0078                     ??_I2C_Start:	
   451  0078                     ??_I2C_rStart:	
   452                           ; 0 bytes @ 0x8
   453                           
   454  0078                     ___awmod@sign:	
   455                           ; 0 bytes @ 0x8
   456                           
   457                           
   458                           ; 1 bytes @ 0x8
   459  0078                     	ds	2
   460  007A                     ??_LCD_SetCursor:	
   461                           
   462                           	psect	cstackBANK0
   463  0030                     __pcstackBANK0:	
   464                           ; 0 bytes @ 0xA
   465                           
   466  0030                     ??_command:	
   467  0030                     ??_LCD_Putc:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0030                     ?_LCD_Puts:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0030                     ?_RTC_Write:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0030                     ??_RTC_Read:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0030                     RTC_Write@c:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0030                     ___awdiv@counter:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0030                     LCD_Puts@s:	
   486                           ; 1 bytes @ 0x0
   487                           
   488                           
   489                           ; 2 bytes @ 0x0
   490  0030                     	ds	1
   491  0031                     ??_RTC_Write:	
   492  0031                     command@c:	
   493                           ; 0 bytes @ 0x1
   494                           
   495  0031                     LCD_Putc@c:	
   496                           ; 1 bytes @ 0x1
   497                           
   498  0031                     RTC_Read@Reg:	
   499                           ; 1 bytes @ 0x1
   500                           
   501  0031                     ___awdiv@sign:	
   502                           ; 1 bytes @ 0x1
   503                           
   504                           
   505                           ; 1 bytes @ 0x1
   506  0031                     	ds	1
   507  0032                     ??_LCD_Puts:	
   508  0032                     RTC_Write@Reg:	
   509                           ; 0 bytes @ 0x2
   510                           
   511  0032                     RTC_Read@data:	
   512                           ; 1 bytes @ 0x2
   513                           
   514  0032                     command@ans:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0032                     LCD_Putc@ans:	
   518                           ; 2 bytes @ 0x2
   519                           
   520  0032                     ___awdiv@quotient:	
   521                           ; 2 bytes @ 0x2
   522                           
   523                           
   524                           ; 2 bytes @ 0x2
   525  0032                     	ds	1
   526  0033                     LCD_Puts@ans:	
   527  0033                     RTC_Write@ans:	
   528                           ; 2 bytes @ 0x3
   529                           
   530  0033                     RTC_Read@ans:	
   531                           ; 2 bytes @ 0x3
   532                           
   533                           
   534                           ; 2 bytes @ 0x3
   535  0033                     	ds	1
   536  0034                     ??_LCD_Clear:	
   537  0034                     ?_LCD_SetCursor:	
   538                           ; 0 bytes @ 0x4
   539                           
   540  0034                     LCD_SetCursor@col:	
   541                           ; 0 bytes @ 0x4
   542                           
   543                           
   544                           ; 2 bytes @ 0x4
   545  0034                     	ds	2
   546  0036                     ??_LCD_Init:	
   547  0036                     LCD_SetCursor@row:	
   548                           ; 0 bytes @ 0x6
   549                           
   550                           
   551                           ; 2 bytes @ 0x6
   552  0036                     	ds	2
   553  0038                     LCD_SetCursor@row_offsets:	
   554                           
   555                           ; 4 bytes @ 0x8
   556  0038                     	ds	4
   557  003C                     ??_main:	
   558                           
   559                           ; 0 bytes @ 0xC
   560  003C                     	ds	2
   561                           
   562                           	psect	maintext
   563  008D                     __pmaintext:	
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 271 in file "PIC16F1827-I2C01.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 17F/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   583 ;;      Params:         0       0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0
   585 ;;      Temps:          0       2       0       0       0       0
   586 ;;      Totals:         0       2       0       0       0       0
   587 ;;Total ram usage:        2 bytes
   588 ;; Hardware stack levels required when called:    6
   589 ;; This function calls:
   590 ;;		_InitI2C_Master
   591 ;;		_LCD_Init
   592 ;;		_LCD_Putc
   593 ;;		_LCD_Puts
   594 ;;		_LCD_SetCursor
   595 ;;		_RTC_Read
   596 ;;		_RTC_Write
   597 ;;		___awdiv
   598 ;;		___awmod
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _main
   606  008D                     _main:	
   607                           
   608                           ;PIC16F1827-I2C01.c: 272: OSCCON = 0b01110010;
   609                           
   610                           ;incstack = 0
   611                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   612  008D  3072               	movlw	114
   613  008E  0021               	movlb	1	; select bank1
   614  008F  0099               	movwf	25	;volatile
   615                           
   616                           ;PIC16F1827-I2C01.c: 273: OPTION_REG = 0b00000000;
   617  0090  0195               	clrf	21	;volatile
   618                           
   619                           ;PIC16F1827-I2C01.c: 274: ANSELA = 0b00000000;
   620  0091  0023               	movlb	3	; select bank3
   621  0092  018C               	clrf	12	;volatile
   622                           
   623                           ;PIC16F1827-I2C01.c: 275: ANSELB = 0b00000000;
   624  0093  018D               	clrf	13	;volatile
   625                           
   626                           ;PIC16F1827-I2C01.c: 276: TRISA = 0b00000011;
   627  0094  3003               	movlw	3
   628  0095  0021               	movlb	1	; select bank1
   629  0096  008C               	movwf	12	;volatile
   630                           
   631                           ;PIC16F1827-I2C01.c: 277: TRISB = 0b00010010;
   632  0097  3012               	movlw	18
   633  0098  008D               	movwf	13	;volatile
   634                           
   635                           ;PIC16F1827-I2C01.c: 278: WPUB = 0b00010010;
   636  0099  3012               	movlw	18
   637  009A  0024               	movlb	4	; select bank4
   638  009B  008D               	movwf	13	;volatile
   639                           
   640                           ;PIC16F1827-I2C01.c: 279: PORTA = 0b00000000;
   641  009C  0020               	movlb	0	; select bank0
   642  009D  018C               	clrf	12	;volatile
   643                           
   644                           ;PIC16F1827-I2C01.c: 280: PORTB = 0b00000000;
   645  009E  018D               	clrf	13	;volatile
   646                           
   647                           ;PIC16F1827-I2C01.c: 282: T1CON = 0x21;
   648  009F  3021               	movlw	33
   649  00A0  0098               	movwf	24	;volatile
   650                           
   651                           ;PIC16F1827-I2C01.c: 283: TMR1H = 0x00;
   652  00A1  0197               	clrf	23	;volatile
   653                           
   654                           ;PIC16F1827-I2C01.c: 284: TMR1L = 0x00;
   655  00A2  0196               	clrf	22	;volatile
   656                           
   657                           ;PIC16F1827-I2C01.c: 285: PIE1bits.TMR1IE = 1;
   658  00A3  0021               	movlb	1	; select bank1
   659  00A4  1411               	bsf	17,0	;volatile
   660                           
   661                           ;PIC16F1827-I2C01.c: 287: InitI2C_Master();
   662  00A5  3186  26F2  3180   	fcall	_InitI2C_Master
   663                           
   664                           ;PIC16F1827-I2C01.c: 289: LCD_Init();
   665  00A8  3185  2572  3180   	fcall	_LCD_Init
   666                           
   667                           ;PIC16F1827-I2C01.c: 291: RTC_Write(0x07, 0x00);
   668  00AB  0020               	movlb	0	; select bank0
   669  00AC  01B0               	clrf	RTC_Write@c
   670  00AD  3007               	movlw	7
   671  00AE  3185  25E9  3180   	fcall	_RTC_Write
   672                           
   673                           ;PIC16F1827-I2C01.c: 292: RTC_Write(0x00, 0x56);
   674  00B1  3056               	movlw	86
   675  00B2  0020               	movlb	0	; select bank0
   676  00B3  00BC               	movwf	??_main
   677  00B4  083C               	movf	??_main,w
   678  00B5  00B0               	movwf	RTC_Write@c
   679  00B6  3000               	movlw	0
   680  00B7  3185  25E9  3180   	fcall	_RTC_Write
   681                           
   682                           ;PIC16F1827-I2C01.c: 293: RTC_Write(0x01, 0x34);
   683  00BA  3034               	movlw	52
   684  00BB  0020               	movlb	0	; select bank0
   685  00BC  00BC               	movwf	??_main
   686  00BD  083C               	movf	??_main,w
   687  00BE  00B0               	movwf	RTC_Write@c
   688  00BF  3001               	movlw	1
   689  00C0  3185  25E9  3180   	fcall	_RTC_Write
   690                           
   691                           ;PIC16F1827-I2C01.c: 294: RTC_Write(0x02, 0x12);
   692  00C3  3012               	movlw	18
   693  00C4  0020               	movlb	0	; select bank0
   694  00C5  00BC               	movwf	??_main
   695  00C6  083C               	movf	??_main,w
   696  00C7  00B0               	movwf	RTC_Write@c
   697  00C8  3002               	movlw	2
   698  00C9  3185  25E9  3180   	fcall	_RTC_Write
   699                           
   700                           ;PIC16F1827-I2C01.c: 295: RTC_Write(0x03, 0x02);
   701  00CC  3002               	movlw	2
   702  00CD  0020               	movlb	0	; select bank0
   703  00CE  00BC               	movwf	??_main
   704  00CF  083C               	movf	??_main,w
   705  00D0  00B0               	movwf	RTC_Write@c
   706  00D1  3003               	movlw	3
   707  00D2  3185  25E9  3180   	fcall	_RTC_Write
   708                           
   709                           ;PIC16F1827-I2C01.c: 296: RTC_Write(0x04, 0x06);
   710  00D5  3006               	movlw	6
   711  00D6  0020               	movlb	0	; select bank0
   712  00D7  00BC               	movwf	??_main
   713  00D8  083C               	movf	??_main,w
   714  00D9  00B0               	movwf	RTC_Write@c
   715  00DA  3004               	movlw	4
   716  00DB  3185  25E9  3180   	fcall	_RTC_Write
   717                           
   718                           ;PIC16F1827-I2C01.c: 297: RTC_Write(0x05, 0x01);
   719  00DE  0020               	movlb	0	; select bank0
   720  00DF  01B0               	clrf	RTC_Write@c
   721  00E0  0AB0               	incf	RTC_Write@c,f
   722  00E1  3005               	movlw	5
   723  00E2  3185  25E9  3180   	fcall	_RTC_Write
   724                           
   725                           ;PIC16F1827-I2C01.c: 298: RTC_Write(0x06, 0x15);
   726  00E5  3015               	movlw	21
   727  00E6  0020               	movlb	0	; select bank0
   728  00E7  00BC               	movwf	??_main
   729  00E8  083C               	movf	??_main,w
   730  00E9  00B0               	movwf	RTC_Write@c
   731  00EA  3006               	movlw	6
   732  00EB  3185  25E9  3180   	fcall	_RTC_Write
   733  00EE                     l2046:	
   734                           ;PIC16F1827-I2C01.c: 300: while (1) {
   735                           
   736                           
   737                           ;PIC16F1827-I2C01.c: 301: ss = RTC_Read(0x00);
   738  00EE  3000               	movlw	0
   739  00EF  3184  24E3  3180   	fcall	_RTC_Read
   740  00F2  0020               	movlb	0	; select bank0
   741  00F3  00BC               	movwf	??_main
   742  00F4  083C               	movf	??_main,w
   743  00F5  00AF               	movwf	_ss
   744                           
   745                           ;PIC16F1827-I2C01.c: 302: mm = RTC_Read(0x01);
   746  00F6  3001               	movlw	1
   747  00F7  3184  24E3  3180   	fcall	_RTC_Read
   748  00FA  0020               	movlb	0	; select bank0
   749  00FB  00BC               	movwf	??_main
   750  00FC  083C               	movf	??_main,w
   751  00FD  00AC               	movwf	_mm
   752                           
   753                           ;PIC16F1827-I2C01.c: 303: hh = RTC_Read(0x02);
   754  00FE  3002               	movlw	2
   755  00FF  3184  24E3  3180   	fcall	_RTC_Read
   756  0102  0020               	movlb	0	; select bank0
   757  0103  00BC               	movwf	??_main
   758  0104  083C               	movf	??_main,w
   759  0105  00A7               	movwf	_hh
   760                           
   761                           ;PIC16F1827-I2C01.c: 304: EE = RTC_Read(0x03);
   762  0106  3003               	movlw	3
   763  0107  3184  24E3  3180   	fcall	_RTC_Read
   764  010A  0020               	movlb	0	; select bank0
   765  010B  00BC               	movwf	??_main
   766  010C  083C               	movf	??_main,w
   767  010D  00A2               	movwf	_EE
   768                           
   769                           ;PIC16F1827-I2C01.c: 305: DD = RTC_Read(0x04);
   770  010E  3004               	movlw	4
   771  010F  3184  24E3  3180   	fcall	_RTC_Read
   772  0112  0020               	movlb	0	; select bank0
   773  0113  00BC               	movwf	??_main
   774  0114  083C               	movf	??_main,w
   775  0115  00FA               	movwf	_DD
   776                           
   777                           ;PIC16F1827-I2C01.c: 306: MM = RTC_Read(0x05);
   778  0116  3005               	movlw	5
   779  0117  3184  24E3  3180   	fcall	_RTC_Read
   780  011A  0020               	movlb	0	; select bank0
   781  011B  00BC               	movwf	??_main
   782  011C  083C               	movf	??_main,w
   783  011D  00FB               	movwf	_MM
   784                           
   785                           ;PIC16F1827-I2C01.c: 307: YY = RTC_Read(0x06);
   786  011E  3006               	movlw	6
   787  011F  3184  24E3  3180   	fcall	_RTC_Read
   788  0122  0020               	movlb	0	; select bank0
   789  0123  00BC               	movwf	??_main
   790  0124  083C               	movf	??_main,w
   791  0125  00A3               	movwf	_YY
   792                           
   793                           ;PIC16F1827-I2C01.c: 308: LCD_SetCursor(0, 0);
   794  0126  3000               	movlw	0
   795  0127  00B4               	movwf	LCD_SetCursor@col
   796  0128  3000               	movlw	0
   797  0129  00B5               	movwf	LCD_SetCursor@col+1
   798  012A  3000               	movlw	0
   799  012B  00B6               	movwf	LCD_SetCursor@row
   800  012C  3000               	movlw	0
   801  012D  00B7               	movwf	LCD_SetCursor@row+1
   802  012E  3186  26DF  3180   	fcall	_LCD_SetCursor
   803                           
   804                           ;PIC16F1827-I2C01.c: 309: LCD_Putc(YY / 16 + '0');
   805  0131  3010               	movlw	16
   806  0132  00F2               	movwf	___awdiv@divisor
   807  0133  3000               	movlw	0
   808  0134  00F3               	movwf	___awdiv@divisor+1
   809  0135  0020               	movlb	0	; select bank0
   810  0136  0823               	movf	_YY,w
   811  0137  00BC               	movwf	??_main
   812  0138  01BD               	clrf	??_main+1
   813  0139  083C               	movf	??_main,w
   814  013A  00F4               	movwf	___awdiv@dividend
   815  013B  083D               	movf	??_main+1,w
   816  013C  00F5               	movwf	___awdiv@dividend+1
   817  013D  3184  248F  3180   	fcall	___awdiv
   818  0140  0872               	movf	?___awdiv,w
   819  0141  3E30               	addlw	48
   820  0142  3186  2613  3180   	fcall	_LCD_Putc
   821                           
   822                           ;PIC16F1827-I2C01.c: 310: LCD_Putc(YY % 16 + '0');
   823  0145  0020               	movlb	0	; select bank0
   824  0146  0823               	movf	_YY,w
   825  0147  390F               	andlw	15
   826  0148  3E30               	addlw	48
   827  0149  3186  2613  3180   	fcall	_LCD_Putc
   828                           
   829                           ;PIC16F1827-I2C01.c: 311: LCD_Putc('/');
   830  014C  302F               	movlw	47
   831  014D  3186  2613  3180   	fcall	_LCD_Putc
   832                           
   833                           ;PIC16F1827-I2C01.c: 312: LCD_Putc(MM / 16 + '0');
   834  0150  3010               	movlw	16
   835  0151  00F2               	movwf	___awdiv@divisor
   836  0152  3000               	movlw	0
   837  0153  00F3               	movwf	___awdiv@divisor+1
   838  0154  087B               	movf	_MM,w
   839  0155  0020               	movlb	0	; select bank0
   840  0156  00BC               	movwf	??_main
   841  0157  01BD               	clrf	??_main+1
   842  0158  083C               	movf	??_main,w
   843  0159  00F4               	movwf	___awdiv@dividend
   844  015A  083D               	movf	??_main+1,w
   845  015B  00F5               	movwf	___awdiv@dividend+1
   846  015C  3184  248F  3180   	fcall	___awdiv
   847  015F  0872               	movf	?___awdiv,w
   848  0160  3E30               	addlw	48
   849  0161  3186  2613  3180   	fcall	_LCD_Putc
   850                           
   851                           ;PIC16F1827-I2C01.c: 313: LCD_Putc(MM % 16 + '0');
   852  0164  087B               	movf	_MM,w
   853  0165  390F               	andlw	15
   854  0166  3E30               	addlw	48
   855  0167  3186  2613  3180   	fcall	_LCD_Putc
   856                           
   857                           ;PIC16F1827-I2C01.c: 314: LCD_Putc('/');
   858  016A  302F               	movlw	47
   859  016B  3186  2613  3180   	fcall	_LCD_Putc
   860                           
   861                           ;PIC16F1827-I2C01.c: 315: LCD_Putc(DD / 16 + '0');
   862  016E  3010               	movlw	16
   863  016F  00F2               	movwf	___awdiv@divisor
   864  0170  3000               	movlw	0
   865  0171  00F3               	movwf	___awdiv@divisor+1
   866  0172  087A               	movf	_DD,w
   867  0173  0020               	movlb	0	; select bank0
   868  0174  00BC               	movwf	??_main
   869  0175  01BD               	clrf	??_main+1
   870  0176  083C               	movf	??_main,w
   871  0177  00F4               	movwf	___awdiv@dividend
   872  0178  083D               	movf	??_main+1,w
   873  0179  00F5               	movwf	___awdiv@dividend+1
   874  017A  3184  248F  3180   	fcall	___awdiv
   875  017D  0872               	movf	?___awdiv,w
   876  017E  3E30               	addlw	48
   877  017F  3186  2613  3180   	fcall	_LCD_Putc
   878                           
   879                           ;PIC16F1827-I2C01.c: 316: LCD_Putc(DD % 16 + '0');
   880  0182  087A               	movf	_DD,w
   881  0183  390F               	andlw	15
   882  0184  3E30               	addlw	48
   883  0185  3186  2613  3180   	fcall	_LCD_Putc
   884                           
   885                           ;PIC16F1827-I2C01.c: 317: LCD_SetCursor(0, 1);
   886  0188  3000               	movlw	0
   887  0189  0020               	movlb	0	; select bank0
   888  018A  00B4               	movwf	LCD_SetCursor@col
   889  018B  3000               	movlw	0
   890  018C  00B5               	movwf	LCD_SetCursor@col+1
   891  018D  3001               	movlw	1
   892  018E  00B6               	movwf	LCD_SetCursor@row
   893  018F  3000               	movlw	0
   894  0190  00B7               	movwf	LCD_SetCursor@row+1
   895  0191  3186  26DF  3180   	fcall	_LCD_SetCursor
   896                           
   897                           ;PIC16F1827-I2C01.c: 318: LCD_Putc(hh / 16 + '0');
   898  0194  3010               	movlw	16
   899  0195  00F2               	movwf	___awdiv@divisor
   900  0196  3000               	movlw	0
   901  0197  00F3               	movwf	___awdiv@divisor+1
   902  0198  0020               	movlb	0	; select bank0
   903  0199  0827               	movf	_hh,w
   904  019A  00BC               	movwf	??_main
   905  019B  01BD               	clrf	??_main+1
   906  019C  083C               	movf	??_main,w
   907  019D  00F4               	movwf	___awdiv@dividend
   908  019E  083D               	movf	??_main+1,w
   909  019F  00F5               	movwf	___awdiv@dividend+1
   910  01A0  3184  248F  3180   	fcall	___awdiv
   911  01A3  0872               	movf	?___awdiv,w
   912  01A4  3E30               	addlw	48
   913  01A5  3186  2613  3180   	fcall	_LCD_Putc
   914                           
   915                           ;PIC16F1827-I2C01.c: 319: LCD_Putc(hh % 16 + '0');
   916  01A8  0020               	movlb	0	; select bank0
   917  01A9  0827               	movf	_hh,w
   918  01AA  390F               	andlw	15
   919  01AB  3E30               	addlw	48
   920  01AC  3186  2613  3180   	fcall	_LCD_Putc
   921                           
   922                           ;PIC16F1827-I2C01.c: 320: LCD_Putc(':');
   923  01AF  303A               	movlw	58
   924  01B0  3186  2613  3180   	fcall	_LCD_Putc
   925                           
   926                           ;PIC16F1827-I2C01.c: 321: LCD_Putc(mm / 16 + '0');
   927  01B3  3010               	movlw	16
   928  01B4  00F2               	movwf	___awdiv@divisor
   929  01B5  3000               	movlw	0
   930  01B6  00F3               	movwf	___awdiv@divisor+1
   931  01B7  0020               	movlb	0	; select bank0
   932  01B8  082C               	movf	_mm,w
   933  01B9  00BC               	movwf	??_main
   934  01BA  01BD               	clrf	??_main+1
   935  01BB  083C               	movf	??_main,w
   936  01BC  00F4               	movwf	___awdiv@dividend
   937  01BD  083D               	movf	??_main+1,w
   938  01BE  00F5               	movwf	___awdiv@dividend+1
   939  01BF  3184  248F  3180   	fcall	___awdiv
   940  01C2  0872               	movf	?___awdiv,w
   941  01C3  3E30               	addlw	48
   942  01C4  3186  2613  3180   	fcall	_LCD_Putc
   943                           
   944                           ;PIC16F1827-I2C01.c: 322: LCD_Putc(mm % 16 + '0');
   945  01C7  0020               	movlb	0	; select bank0
   946  01C8  082C               	movf	_mm,w
   947  01C9  390F               	andlw	15
   948  01CA  3E30               	addlw	48
   949  01CB  3186  2613  3180   	fcall	_LCD_Putc
   950                           
   951                           ;PIC16F1827-I2C01.c: 323: LCD_Putc('-');
   952  01CE  302D               	movlw	45
   953  01CF  3186  2613  3180   	fcall	_LCD_Putc
   954                           
   955                           ;PIC16F1827-I2C01.c: 324: LCD_Putc(ss / 16 + '0');
   956  01D2  3010               	movlw	16
   957  01D3  00F2               	movwf	___awdiv@divisor
   958  01D4  3000               	movlw	0
   959  01D5  00F3               	movwf	___awdiv@divisor+1
   960  01D6  0020               	movlb	0	; select bank0
   961  01D7  082F               	movf	_ss,w
   962  01D8  00BC               	movwf	??_main
   963  01D9  01BD               	clrf	??_main+1
   964  01DA  083C               	movf	??_main,w
   965  01DB  00F4               	movwf	___awdiv@dividend
   966  01DC  083D               	movf	??_main+1,w
   967  01DD  00F5               	movwf	___awdiv@dividend+1
   968  01DE  3184  248F  3180   	fcall	___awdiv
   969  01E1  0872               	movf	?___awdiv,w
   970  01E2  3E30               	addlw	48
   971  01E3  3186  2613  3180   	fcall	_LCD_Putc
   972                           
   973                           ;PIC16F1827-I2C01.c: 325: LCD_Putc(ss % 16 + '0');
   974  01E6  0020               	movlb	0	; select bank0
   975  01E7  082F               	movf	_ss,w
   976  01E8  390F               	andlw	15
   977  01E9  3E30               	addlw	48
   978  01EA  3186  2613  3180   	fcall	_LCD_Putc
   979                           
   980                           ;PIC16F1827-I2C01.c: 326: if (press_flag) {
   981  01ED  0020               	movlb	0	; select bank0
   982  01EE  082D               	movf	_press_flag,w
   983  01EF  1903               	btfsc	3,2
   984  01F0  28EE               	goto	l2046
   985                           
   986                           ;PIC16F1827-I2C01.c: 327: press_flag = 0;
   987  01F1  01AD               	clrf	_press_flag
   988  01F2                     l2142:	
   989                           ;PIC16F1827-I2C01.c: 328: while (!press_flag) {
   990                           
   991  01F2  0020               	movlb	0	; select bank0
   992  01F3  082D               	movf	_press_flag,w
   993  01F4  1D03               	skipz
   994  01F5  2AA2               	goto	l2144
   995                           
   996                           ;PIC16F1827-I2C01.c: 329: if (cnt_t1 % 3 == 0) {
   997  01F6  3003               	movlw	3
   998  01F7  00F2               	movwf	___awmod@divisor
   999  01F8  3000               	movlw	0
  1000  01F9  00F3               	movwf	___awmod@divisor+1
  1001  01FA  0826               	movf	_cnt_t1,w
  1002  01FB  00BC               	movwf	??_main
  1003  01FC  01BD               	clrf	??_main+1
  1004  01FD  083C               	movf	??_main,w
  1005  01FE  00F4               	movwf	___awmod@dividend
  1006  01FF  083D               	movf	??_main+1,w
  1007  0200  00F5               	movwf	___awmod@dividend+1
  1008  0201  3185  252B  3180   	fcall	___awmod
  1009  0204  0873               	movf	?___awmod+1,w
  1010  0205  0472               	iorwf	?___awmod,w
  1011  0206  1D03               	skipz
  1012  0207  2A1D               	goto	l2106
  1013                           
  1014                           ;PIC16F1827-I2C01.c: 330: LCD_SetCursor(0, 0);
  1015  0208  3000               	movlw	0
  1016  0209  0020               	movlb	0	; select bank0
  1017  020A  00B4               	movwf	LCD_SetCursor@col
  1018  020B  3000               	movlw	0
  1019  020C  00B5               	movwf	LCD_SetCursor@col+1
  1020  020D  3000               	movlw	0
  1021  020E  00B6               	movwf	LCD_SetCursor@row
  1022  020F  3000               	movlw	0
  1023  0210  00B7               	movwf	LCD_SetCursor@row+1
  1024  0211  3186  26DF  3180   	fcall	_LCD_SetCursor
  1025                           
  1026                           ;PIC16F1827-I2C01.c: 331: LCD_Puts("  ");
  1027  0214  3000               	movlw	low (STR_1| (0+32768))
  1028  0215  0020               	movlb	0	; select bank0
  1029  0216  00B0               	movwf	LCD_Puts@s
  1030  0217  3088               	movlw	high (STR_1| (0+32768))
  1031  0218  00B1               	movwf	LCD_Puts@s+1
  1032  0219  3185  25B0  3180   	fcall	_LCD_Puts
  1033                           
  1034                           ;PIC16F1827-I2C01.c: 332: } else {
  1035  021C  2A4B               	goto	l2114
  1036  021D                     l2106:	
  1037                           
  1038                           ;PIC16F1827-I2C01.c: 333: YY = RTC_Read(0x06);
  1039  021D  3006               	movlw	6
  1040  021E  3184  24E3  3180   	fcall	_RTC_Read
  1041  0221  0020               	movlb	0	; select bank0
  1042  0222  00BC               	movwf	??_main
  1043  0223  083C               	movf	??_main,w
  1044  0224  00A3               	movwf	_YY
  1045                           
  1046                           ;PIC16F1827-I2C01.c: 334: LCD_SetCursor(0, 0);
  1047  0225  3000               	movlw	0
  1048  0226  00B4               	movwf	LCD_SetCursor@col
  1049  0227  3000               	movlw	0
  1050  0228  00B5               	movwf	LCD_SetCursor@col+1
  1051  0229  3000               	movlw	0
  1052  022A  00B6               	movwf	LCD_SetCursor@row
  1053  022B  3000               	movlw	0
  1054  022C  00B7               	movwf	LCD_SetCursor@row+1
  1055  022D  3186  26DF  3180   	fcall	_LCD_SetCursor
  1056                           
  1057                           ;PIC16F1827-I2C01.c: 335: LCD_Putc(YY / 16 + '0');
  1058  0230  3010               	movlw	16
  1059  0231  00F2               	movwf	___awdiv@divisor
  1060  0232  3000               	movlw	0
  1061  0233  00F3               	movwf	___awdiv@divisor+1
  1062  0234  0020               	movlb	0	; select bank0
  1063  0235  0823               	movf	_YY,w
  1064  0236  00BC               	movwf	??_main
  1065  0237  01BD               	clrf	??_main+1
  1066  0238  083C               	movf	??_main,w
  1067  0239  00F4               	movwf	___awdiv@dividend
  1068  023A  083D               	movf	??_main+1,w
  1069  023B  00F5               	movwf	___awdiv@dividend+1
  1070  023C  3184  248F  3180   	fcall	___awdiv
  1071  023F  0872               	movf	?___awdiv,w
  1072  0240  3E30               	addlw	48
  1073  0241  3186  2613  3180   	fcall	_LCD_Putc
  1074                           
  1075                           ;PIC16F1827-I2C01.c: 336: LCD_Putc(YY % 16 + '0');
  1076  0244  0020               	movlb	0	; select bank0
  1077  0245  0823               	movf	_YY,w
  1078  0246  390F               	andlw	15
  1079  0247  3E30               	addlw	48
  1080  0248  3186  2613  3180   	fcall	_LCD_Putc
  1081  024B                     l2114:	
  1082                           
  1083                           ;PIC16F1827-I2C01.c: 337: }
  1084                           ;PIC16F1827-I2C01.c: 338: if (press_flagx) {
  1085  024B  0020               	movlb	0	; select bank0
  1086  024C  082E               	movf	_press_flagx,w
  1087  024D  1903               	btfsc	3,2
  1088  024E  2A6F               	goto	l2128
  1089                           
  1090                           ;PIC16F1827-I2C01.c: 339: press_flagx = 0;
  1091  024F  01AE               	clrf	_press_flagx
  1092                           
  1093                           ;PIC16F1827-I2C01.c: 340: YY = RTC_Read(0x06);
  1094  0250  3006               	movlw	6
  1095  0251  3184  24E3  3180   	fcall	_RTC_Read
  1096  0254  0020               	movlb	0	; select bank0
  1097  0255  00BC               	movwf	??_main
  1098  0256  083C               	movf	??_main,w
  1099  0257  00A3               	movwf	_YY
  1100                           
  1101                           ;PIC16F1827-I2C01.c: 341: if (YY % 16 == 9) YY -= 9;
  1102  0258  300F               	movlw	15
  1103  0259  0523               	andwf	_YY,w
  1104  025A  00BC               	movwf	??_main
  1105  025B  083C               	movf	??_main,w
  1106  025C  3A09               	xorlw	9
  1107  025D  1D03               	skipz
  1108  025E  2A62               	goto	l2124
  1109  025F  3009               	movlw	9
  1110  0260  02A3               	subwf	_YY,f
  1111  0261  2A66               	goto	l2126
  1112  0262                     l2124:	
  1113                           
  1114                           ;PIC16F1827-I2C01.c: 342: else YY++;
  1115  0262  3001               	movlw	1
  1116  0263  00BC               	movwf	??_main
  1117  0264  083C               	movf	??_main,w
  1118  0265  07A3               	addwf	_YY,f
  1119  0266                     l2126:	
  1120                           
  1121                           ;PIC16F1827-I2C01.c: 343: RTC_Write(0x06, YY);
  1122  0266  0823               	movf	_YY,w
  1123  0267  00BC               	movwf	??_main
  1124  0268  083C               	movf	??_main,w
  1125  0269  00B0               	movwf	RTC_Write@c
  1126  026A  3006               	movlw	6
  1127  026B  3185  25E9  3180   	fcall	_RTC_Write
  1128  026E  0020               	movlb	0	; select bank0
  1129  026F                     l2128:	
  1130                           
  1131                           ;PIC16F1827-I2C01.c: 344: }
  1132                           ;PIC16F1827-I2C01.c: 345: if (long_hold_flag1x) {
  1133  026F  0020               	movlb	0	; select bank0
  1134  0270  0829               	movf	_long_hold_flag1x,w
  1135  0271  1903               	btfsc	3,2
  1136  0272  29F2               	goto	l2142
  1137                           
  1138                           ;PIC16F1827-I2C01.c: 346: long_hold_flag1x = 0;
  1139  0273  01A9               	clrf	_long_hold_flag1x
  1140                           
  1141                           ;PIC16F1827-I2C01.c: 347: YY = RTC_Read(0x06);
  1142  0274  3006               	movlw	6
  1143  0275  3184  24E3  3180   	fcall	_RTC_Read
  1144  0278  0020               	movlb	0	; select bank0
  1145  0279  00BC               	movwf	??_main
  1146  027A  083C               	movf	??_main,w
  1147  027B  00A3               	movwf	_YY
  1148                           
  1149                           ;PIC16F1827-I2C01.c: 348: if (YY / 16 == 9) YY -= 16 * 9;
  1150  027C  3010               	movlw	16
  1151  027D  00F2               	movwf	___awdiv@divisor
  1152  027E  3000               	movlw	0
  1153  027F  00F3               	movwf	___awdiv@divisor+1
  1154  0280  0823               	movf	_YY,w
  1155  0281  00BC               	movwf	??_main
  1156  0282  01BD               	clrf	??_main+1
  1157  0283  083C               	movf	??_main,w
  1158  0284  00F4               	movwf	___awdiv@dividend
  1159  0285  083D               	movf	??_main+1,w
  1160  0286  00F5               	movwf	___awdiv@dividend+1
  1161  0287  3184  248F  3180   	fcall	___awdiv
  1162  028A  3009               	movlw	9
  1163  028B  0672               	xorwf	?___awdiv,w
  1164  028C  0473               	iorwf	?___awdiv+1,w
  1165  028D  1D03               	skipz
  1166  028E  2A93               	goto	l2138
  1167  028F  3090               	movlw	144
  1168  0290  0020               	movlb	0	; select bank0
  1169  0291  02A3               	subwf	_YY,f
  1170  0292  2A98               	goto	l2140
  1171  0293                     l2138:	
  1172                           
  1173                           ;PIC16F1827-I2C01.c: 349: else YY += 16;
  1174  0293  3010               	movlw	16
  1175  0294  0020               	movlb	0	; select bank0
  1176  0295  00BC               	movwf	??_main
  1177  0296  083C               	movf	??_main,w
  1178  0297  07A3               	addwf	_YY,f
  1179  0298                     l2140:	
  1180                           
  1181                           ;PIC16F1827-I2C01.c: 350: RTC_Write(0x06, YY);
  1182  0298  0823               	movf	_YY,w
  1183  0299  00BC               	movwf	??_main
  1184  029A  083C               	movf	??_main,w
  1185  029B  00B0               	movwf	RTC_Write@c
  1186  029C  3006               	movlw	6
  1187  029D  3185  25E9  3180   	fcall	_RTC_Write
  1188  02A0  0020               	movlb	0	; select bank0
  1189  02A1  29F2               	goto	l2142
  1190  02A2                     l2144:	
  1191                           
  1192                           ;PIC16F1827-I2C01.c: 351: }
  1193                           ;PIC16F1827-I2C01.c: 352: }
  1194                           ;PIC16F1827-I2C01.c: 353: YY = RTC_Read(0x06);
  1195  02A2  3006               	movlw	6
  1196  02A3  3184  24E3  3180   	fcall	_RTC_Read
  1197  02A6  0020               	movlb	0	; select bank0
  1198  02A7  00BC               	movwf	??_main
  1199  02A8  083C               	movf	??_main,w
  1200  02A9  00A3               	movwf	_YY
  1201                           
  1202                           ;PIC16F1827-I2C01.c: 354: LCD_SetCursor(0, 0);
  1203  02AA  3000               	movlw	0
  1204  02AB  00B4               	movwf	LCD_SetCursor@col
  1205  02AC  3000               	movlw	0
  1206  02AD  00B5               	movwf	LCD_SetCursor@col+1
  1207  02AE  3000               	movlw	0
  1208  02AF  00B6               	movwf	LCD_SetCursor@row
  1209  02B0  3000               	movlw	0
  1210  02B1  00B7               	movwf	LCD_SetCursor@row+1
  1211  02B2  3186  26DF  3180   	fcall	_LCD_SetCursor
  1212                           
  1213                           ;PIC16F1827-I2C01.c: 355: LCD_Putc(YY / 16 + '0');
  1214  02B5  3010               	movlw	16
  1215  02B6  00F2               	movwf	___awdiv@divisor
  1216  02B7  3000               	movlw	0
  1217  02B8  00F3               	movwf	___awdiv@divisor+1
  1218  02B9  0020               	movlb	0	; select bank0
  1219  02BA  0823               	movf	_YY,w
  1220  02BB  00BC               	movwf	??_main
  1221  02BC  01BD               	clrf	??_main+1
  1222  02BD  083C               	movf	??_main,w
  1223  02BE  00F4               	movwf	___awdiv@dividend
  1224  02BF  083D               	movf	??_main+1,w
  1225  02C0  00F5               	movwf	___awdiv@dividend+1
  1226  02C1  3184  248F  3180   	fcall	___awdiv
  1227  02C4  0872               	movf	?___awdiv,w
  1228  02C5  3E30               	addlw	48
  1229  02C6  3186  2613  3180   	fcall	_LCD_Putc
  1230                           
  1231                           ;PIC16F1827-I2C01.c: 356: LCD_Putc(YY % 16 + '0');
  1232  02C9  0020               	movlb	0	; select bank0
  1233  02CA  0823               	movf	_YY,w
  1234  02CB  390F               	andlw	15
  1235  02CC  3E30               	addlw	48
  1236  02CD  3186  2613  3180   	fcall	_LCD_Putc
  1237                           
  1238                           ;PIC16F1827-I2C01.c: 357: press_flag = 0;
  1239  02D0  0020               	movlb	0	; select bank0
  1240  02D1  01AD               	clrf	_press_flag
  1241  02D2                     l2196:	
  1242                           ;PIC16F1827-I2C01.c: 358: while (!press_flag) {
  1243                           
  1244  02D2  0020               	movlb	0	; select bank0
  1245  02D3  082D               	movf	_press_flag,w
  1246  02D4  1D03               	skipz
  1247  02D5  2B81               	goto	l2198
  1248                           
  1249                           ;PIC16F1827-I2C01.c: 359: if (cnt_t1 % 3 == 0) {
  1250  02D6  3003               	movlw	3
  1251  02D7  00F2               	movwf	___awmod@divisor
  1252  02D8  3000               	movlw	0
  1253  02D9  00F3               	movwf	___awmod@divisor+1
  1254  02DA  0826               	movf	_cnt_t1,w
  1255  02DB  00BC               	movwf	??_main
  1256  02DC  01BD               	clrf	??_main+1
  1257  02DD  083C               	movf	??_main,w
  1258  02DE  00F4               	movwf	___awmod@dividend
  1259  02DF  083D               	movf	??_main+1,w
  1260  02E0  00F5               	movwf	___awmod@dividend+1
  1261  02E1  3185  252B  3180   	fcall	___awmod
  1262  02E4  0873               	movf	?___awmod+1,w
  1263  02E5  0472               	iorwf	?___awmod,w
  1264  02E6  1D03               	skipz
  1265  02E7  2AFD               	goto	l2160
  1266                           
  1267                           ;PIC16F1827-I2C01.c: 360: LCD_SetCursor(3, 0);
  1268  02E8  3003               	movlw	3
  1269  02E9  0020               	movlb	0	; select bank0
  1270  02EA  00B4               	movwf	LCD_SetCursor@col
  1271  02EB  3000               	movlw	0
  1272  02EC  00B5               	movwf	LCD_SetCursor@col+1
  1273  02ED  3000               	movlw	0
  1274  02EE  00B6               	movwf	LCD_SetCursor@row
  1275  02EF  3000               	movlw	0
  1276  02F0  00B7               	movwf	LCD_SetCursor@row+1
  1277  02F1  3186  26DF  3180   	fcall	_LCD_SetCursor
  1278                           
  1279                           ;PIC16F1827-I2C01.c: 361: LCD_Puts("  ");
  1280  02F4  3000               	movlw	low (STR_1| (0+32768))
  1281  02F5  0020               	movlb	0	; select bank0
  1282  02F6  00B0               	movwf	LCD_Puts@s
  1283  02F7  3088               	movlw	high (STR_1| (0+32768))
  1284  02F8  00B1               	movwf	LCD_Puts@s+1
  1285  02F9  3185  25B0  3180   	fcall	_LCD_Puts
  1286                           
  1287                           ;PIC16F1827-I2C01.c: 362: } else {
  1288  02FC  2B2A               	goto	l2168
  1289  02FD                     l2160:	
  1290                           
  1291                           ;PIC16F1827-I2C01.c: 363: MM = RTC_Read(0x05);
  1292  02FD  3005               	movlw	5
  1293  02FE  3184  24E3  3180   	fcall	_RTC_Read
  1294  0301  0020               	movlb	0	; select bank0
  1295  0302  00BC               	movwf	??_main
  1296  0303  083C               	movf	??_main,w
  1297  0304  00FB               	movwf	_MM
  1298                           
  1299                           ;PIC16F1827-I2C01.c: 364: LCD_SetCursor(3, 0);
  1300  0305  3003               	movlw	3
  1301  0306  00B4               	movwf	LCD_SetCursor@col
  1302  0307  3000               	movlw	0
  1303  0308  00B5               	movwf	LCD_SetCursor@col+1
  1304  0309  3000               	movlw	0
  1305  030A  00B6               	movwf	LCD_SetCursor@row
  1306  030B  3000               	movlw	0
  1307  030C  00B7               	movwf	LCD_SetCursor@row+1
  1308  030D  3186  26DF  3180   	fcall	_LCD_SetCursor
  1309                           
  1310                           ;PIC16F1827-I2C01.c: 365: LCD_Putc(MM / 16 + '0');
  1311  0310  3010               	movlw	16
  1312  0311  00F2               	movwf	___awdiv@divisor
  1313  0312  3000               	movlw	0
  1314  0313  00F3               	movwf	___awdiv@divisor+1
  1315  0314  087B               	movf	_MM,w
  1316  0315  0020               	movlb	0	; select bank0
  1317  0316  00BC               	movwf	??_main
  1318  0317  01BD               	clrf	??_main+1
  1319  0318  083C               	movf	??_main,w
  1320  0319  00F4               	movwf	___awdiv@dividend
  1321  031A  083D               	movf	??_main+1,w
  1322  031B  00F5               	movwf	___awdiv@dividend+1
  1323  031C  3184  248F  3180   	fcall	___awdiv
  1324  031F  0872               	movf	?___awdiv,w
  1325  0320  3E30               	addlw	48
  1326  0321  3186  2613  3180   	fcall	_LCD_Putc
  1327                           
  1328                           ;PIC16F1827-I2C01.c: 366: LCD_Putc(MM % 16 + '0');
  1329  0324  087B               	movf	_MM,w
  1330  0325  390F               	andlw	15
  1331  0326  3E30               	addlw	48
  1332  0327  3186  2613  3180   	fcall	_LCD_Putc
  1333  032A                     l2168:	
  1334                           
  1335                           ;PIC16F1827-I2C01.c: 367: }
  1336                           ;PIC16F1827-I2C01.c: 368: if (press_flagx) {
  1337  032A  0020               	movlb	0	; select bank0
  1338  032B  082E               	movf	_press_flagx,w
  1339  032C  1903               	btfsc	3,2
  1340  032D  2B4E               	goto	l2182
  1341                           
  1342                           ;PIC16F1827-I2C01.c: 369: press_flagx = 0;
  1343  032E  01AE               	clrf	_press_flagx
  1344                           
  1345                           ;PIC16F1827-I2C01.c: 370: MM = RTC_Read(0x05);
  1346  032F  3005               	movlw	5
  1347  0330  3184  24E3  3180   	fcall	_RTC_Read
  1348  0333  0020               	movlb	0	; select bank0
  1349  0334  00BC               	movwf	??_main
  1350  0335  083C               	movf	??_main,w
  1351  0336  00FB               	movwf	_MM
  1352                           
  1353                           ;PIC16F1827-I2C01.c: 371: if (MM % 16 == 9) MM -= 9;
  1354  0337  300F               	movlw	15
  1355  0338  057B               	andwf	_MM,w
  1356  0339  00BC               	movwf	??_main
  1357  033A  083C               	movf	??_main,w
  1358  033B  3A09               	xorlw	9
  1359  033C  1D03               	skipz
  1360  033D  2B41               	goto	l2178
  1361  033E  3009               	movlw	9
  1362  033F  02FB               	subwf	_MM,f
  1363  0340  2B45               	goto	l2180
  1364  0341                     l2178:	
  1365                           
  1366                           ;PIC16F1827-I2C01.c: 372: else MM++;
  1367  0341  3001               	movlw	1
  1368  0342  00BC               	movwf	??_main
  1369  0343  083C               	movf	??_main,w
  1370  0344  07FB               	addwf	_MM,f
  1371  0345                     l2180:	
  1372                           
  1373                           ;PIC16F1827-I2C01.c: 373: RTC_Write(0x06, MM);
  1374  0345  087B               	movf	_MM,w
  1375  0346  00BC               	movwf	??_main
  1376  0347  083C               	movf	??_main,w
  1377  0348  00B0               	movwf	RTC_Write@c
  1378  0349  3006               	movlw	6
  1379  034A  3185  25E9  3180   	fcall	_RTC_Write
  1380  034D  0020               	movlb	0	; select bank0
  1381  034E                     l2182:	
  1382                           
  1383                           ;PIC16F1827-I2C01.c: 374: }
  1384                           ;PIC16F1827-I2C01.c: 375: if (long_hold_flag1x) {
  1385  034E  0020               	movlb	0	; select bank0
  1386  034F  0829               	movf	_long_hold_flag1x,w
  1387  0350  1903               	btfsc	3,2
  1388  0351  2AD2               	goto	l2196
  1389                           
  1390                           ;PIC16F1827-I2C01.c: 376: long_hold_flag1x = 0;
  1391  0352  01A9               	clrf	_long_hold_flag1x
  1392                           
  1393                           ;PIC16F1827-I2C01.c: 377: MM = RTC_Read(0x05);
  1394  0353  3005               	movlw	5
  1395  0354  3184  24E3  3180   	fcall	_RTC_Read
  1396  0357  0020               	movlb	0	; select bank0
  1397  0358  00BC               	movwf	??_main
  1398  0359  083C               	movf	??_main,w
  1399  035A  00FB               	movwf	_MM
  1400                           
  1401                           ;PIC16F1827-I2C01.c: 378: if (MM / 16 == 9) MM -= 16 * 9;
  1402  035B  3010               	movlw	16
  1403  035C  00F2               	movwf	___awdiv@divisor
  1404  035D  3000               	movlw	0
  1405  035E  00F3               	movwf	___awdiv@divisor+1
  1406  035F  087B               	movf	_MM,w
  1407  0360  00BC               	movwf	??_main
  1408  0361  01BD               	clrf	??_main+1
  1409  0362  083C               	movf	??_main,w
  1410  0363  00F4               	movwf	___awdiv@dividend
  1411  0364  083D               	movf	??_main+1,w
  1412  0365  00F5               	movwf	___awdiv@dividend+1
  1413  0366  3184  248F  3180   	fcall	___awdiv
  1414  0369  3009               	movlw	9
  1415  036A  0672               	xorwf	?___awdiv,w
  1416  036B  0473               	iorwf	?___awdiv+1,w
  1417  036C  1D03               	skipz
  1418  036D  2B71               	goto	l2192
  1419  036E  3090               	movlw	144
  1420  036F  02FB               	subwf	_MM,f
  1421  0370  2B76               	goto	l2194
  1422  0371                     l2192:	
  1423                           
  1424                           ;PIC16F1827-I2C01.c: 379: else MM += 16;
  1425  0371  3010               	movlw	16
  1426  0372  0020               	movlb	0	; select bank0
  1427  0373  00BC               	movwf	??_main
  1428  0374  083C               	movf	??_main,w
  1429  0375  07FB               	addwf	_MM,f
  1430  0376                     l2194:	
  1431                           
  1432                           ;PIC16F1827-I2C01.c: 380: RTC_Write(0x05, MM);
  1433  0376  087B               	movf	_MM,w
  1434  0377  0020               	movlb	0	; select bank0
  1435  0378  00BC               	movwf	??_main
  1436  0379  083C               	movf	??_main,w
  1437  037A  00B0               	movwf	RTC_Write@c
  1438  037B  3005               	movlw	5
  1439  037C  3185  25E9  3180   	fcall	_RTC_Write
  1440  037F  0020               	movlb	0	; select bank0
  1441  0380  2AD2               	goto	l2196
  1442  0381                     l2198:	
  1443                           
  1444                           ;PIC16F1827-I2C01.c: 381: }
  1445                           ;PIC16F1827-I2C01.c: 382: }
  1446                           ;PIC16F1827-I2C01.c: 383: press_flag = 0;
  1447  0381  01AD               	clrf	_press_flag
  1448                           
  1449                           ;PIC16F1827-I2C01.c: 384: MM = RTC_Read(0x05);
  1450  0382  3005               	movlw	5
  1451  0383  3184  24E3  3180   	fcall	_RTC_Read
  1452  0386  0020               	movlb	0	; select bank0
  1453  0387  00BC               	movwf	??_main
  1454  0388  083C               	movf	??_main,w
  1455  0389  00FB               	movwf	_MM
  1456                           
  1457                           ;PIC16F1827-I2C01.c: 385: LCD_SetCursor(3, 0);
  1458  038A  3003               	movlw	3
  1459  038B  00B4               	movwf	LCD_SetCursor@col
  1460  038C  3000               	movlw	0
  1461  038D  00B5               	movwf	LCD_SetCursor@col+1
  1462  038E  3000               	movlw	0
  1463  038F  00B6               	movwf	LCD_SetCursor@row
  1464  0390  3000               	movlw	0
  1465  0391  00B7               	movwf	LCD_SetCursor@row+1
  1466  0392  3186  26DF  3180   	fcall	_LCD_SetCursor
  1467                           
  1468                           ;PIC16F1827-I2C01.c: 386: LCD_Putc(MM / 16 + '0');
  1469  0395  3010               	movlw	16
  1470  0396  00F2               	movwf	___awdiv@divisor
  1471  0397  3000               	movlw	0
  1472  0398  00F3               	movwf	___awdiv@divisor+1
  1473  0399  087B               	movf	_MM,w
  1474  039A  0020               	movlb	0	; select bank0
  1475  039B  00BC               	movwf	??_main
  1476  039C  01BD               	clrf	??_main+1
  1477  039D  083C               	movf	??_main,w
  1478  039E  00F4               	movwf	___awdiv@dividend
  1479  039F  083D               	movf	??_main+1,w
  1480  03A0  00F5               	movwf	___awdiv@dividend+1
  1481  03A1  3184  248F  3180   	fcall	___awdiv
  1482  03A4  0872               	movf	?___awdiv,w
  1483  03A5  3E30               	addlw	48
  1484  03A6  3186  2613  3180   	fcall	_LCD_Putc
  1485                           
  1486                           ;PIC16F1827-I2C01.c: 387: LCD_Putc(MM % 16 + '0');
  1487  03A9  087B               	movf	_MM,w
  1488  03AA  390F               	andlw	15
  1489  03AB  3E30               	addlw	48
  1490  03AC  3186  2613  3180   	fcall	_LCD_Putc
  1491  03AF                     l2250:	
  1492                           ;PIC16F1827-I2C01.c: 389: while (!press_flag) {
  1493                           
  1494  03AF  0020               	movlb	0	; select bank0
  1495  03B0  082D               	movf	_press_flag,w
  1496  03B1  1D03               	skipz
  1497  03B2  2C5F               	goto	l2252
  1498                           
  1499                           ;PIC16F1827-I2C01.c: 390: if (cnt_t1 % 3 == 0) {
  1500  03B3  3003               	movlw	3
  1501  03B4  00F2               	movwf	___awmod@divisor
  1502  03B5  3000               	movlw	0
  1503  03B6  00F3               	movwf	___awmod@divisor+1
  1504  03B7  0020               	movlb	0	; select bank0
  1505  03B8  0826               	movf	_cnt_t1,w
  1506  03B9  00BC               	movwf	??_main
  1507  03BA  01BD               	clrf	??_main+1
  1508  03BB  083C               	movf	??_main,w
  1509  03BC  00F4               	movwf	___awmod@dividend
  1510  03BD  083D               	movf	??_main+1,w
  1511  03BE  00F5               	movwf	___awmod@dividend+1
  1512  03BF  3185  252B  3180   	fcall	___awmod
  1513  03C2  0873               	movf	?___awmod+1,w
  1514  03C3  0472               	iorwf	?___awmod,w
  1515  03C4  1D03               	skipz
  1516  03C5  2BDB               	goto	l2214
  1517                           
  1518                           ;PIC16F1827-I2C01.c: 391: LCD_SetCursor(6, 0);
  1519  03C6  3006               	movlw	6
  1520  03C7  0020               	movlb	0	; select bank0
  1521  03C8  00B4               	movwf	LCD_SetCursor@col
  1522  03C9  3000               	movlw	0
  1523  03CA  00B5               	movwf	LCD_SetCursor@col+1
  1524  03CB  3000               	movlw	0
  1525  03CC  00B6               	movwf	LCD_SetCursor@row
  1526  03CD  3000               	movlw	0
  1527  03CE  00B7               	movwf	LCD_SetCursor@row+1
  1528  03CF  3186  26DF  3180   	fcall	_LCD_SetCursor
  1529                           
  1530                           ;PIC16F1827-I2C01.c: 392: LCD_Puts("  ");
  1531  03D2  3000               	movlw	low (STR_1| (0+32768))
  1532  03D3  0020               	movlb	0	; select bank0
  1533  03D4  00B0               	movwf	LCD_Puts@s
  1534  03D5  3088               	movlw	high (STR_1| (0+32768))
  1535  03D6  00B1               	movwf	LCD_Puts@s+1
  1536  03D7  3185  25B0  3180   	fcall	_LCD_Puts
  1537                           
  1538                           ;PIC16F1827-I2C01.c: 393: } else {
  1539  03DA  2C08               	goto	l2222
  1540  03DB                     l2214:	
  1541                           
  1542                           ;PIC16F1827-I2C01.c: 394: DD = RTC_Read(0x04);
  1543  03DB  3004               	movlw	4
  1544  03DC  3184  24E3  3180   	fcall	_RTC_Read
  1545  03DF  0020               	movlb	0	; select bank0
  1546  03E0  00BC               	movwf	??_main
  1547  03E1  083C               	movf	??_main,w
  1548  03E2  00FA               	movwf	_DD
  1549                           
  1550                           ;PIC16F1827-I2C01.c: 395: LCD_SetCursor(6, 0);
  1551  03E3  3006               	movlw	6
  1552  03E4  00B4               	movwf	LCD_SetCursor@col
  1553  03E5  3000               	movlw	0
  1554  03E6  00B5               	movwf	LCD_SetCursor@col+1
  1555  03E7  3000               	movlw	0
  1556  03E8  00B6               	movwf	LCD_SetCursor@row
  1557  03E9  3000               	movlw	0
  1558  03EA  00B7               	movwf	LCD_SetCursor@row+1
  1559  03EB  3186  26DF  3180   	fcall	_LCD_SetCursor
  1560                           
  1561                           ;PIC16F1827-I2C01.c: 396: LCD_Putc(DD / 16 + '0');
  1562  03EE  3010               	movlw	16
  1563  03EF  00F2               	movwf	___awdiv@divisor
  1564  03F0  3000               	movlw	0
  1565  03F1  00F3               	movwf	___awdiv@divisor+1
  1566  03F2  087A               	movf	_DD,w
  1567  03F3  0020               	movlb	0	; select bank0
  1568  03F4  00BC               	movwf	??_main
  1569  03F5  01BD               	clrf	??_main+1
  1570  03F6  083C               	movf	??_main,w
  1571  03F7  00F4               	movwf	___awdiv@dividend
  1572  03F8  083D               	movf	??_main+1,w
  1573  03F9  00F5               	movwf	___awdiv@dividend+1
  1574  03FA  3184  248F  3180   	fcall	___awdiv
  1575  03FD  0872               	movf	?___awdiv,w
  1576  03FE  3E30               	addlw	48
  1577  03FF  3186  2613  3180   	fcall	_LCD_Putc
  1578                           
  1579                           ;PIC16F1827-I2C01.c: 397: LCD_Putc(DD % 16 + '0');
  1580  0402  087A               	movf	_DD,w
  1581  0403  390F               	andlw	15
  1582  0404  3E30               	addlw	48
  1583  0405  3186  2613  3180   	fcall	_LCD_Putc
  1584  0408                     l2222:	
  1585                           
  1586                           ;PIC16F1827-I2C01.c: 398: }
  1587                           ;PIC16F1827-I2C01.c: 399: if (press_flagx) {
  1588  0408  0020               	movlb	0	; select bank0
  1589  0409  082E               	movf	_press_flagx,w
  1590  040A  1903               	btfsc	3,2
  1591  040B  2C2C               	goto	l2236
  1592                           
  1593                           ;PIC16F1827-I2C01.c: 400: press_flagx = 0;
  1594  040C  01AE               	clrf	_press_flagx
  1595                           
  1596                           ;PIC16F1827-I2C01.c: 401: DD = RTC_Read(0x04);
  1597  040D  3004               	movlw	4
  1598  040E  3184  24E3  3180   	fcall	_RTC_Read
  1599  0411  0020               	movlb	0	; select bank0
  1600  0412  00BC               	movwf	??_main
  1601  0413  083C               	movf	??_main,w
  1602  0414  00FA               	movwf	_DD
  1603                           
  1604                           ;PIC16F1827-I2C01.c: 402: if (DD % 16 == 9) DD -= 9;
  1605  0415  300F               	movlw	15
  1606  0416  057A               	andwf	_DD,w
  1607  0417  00BC               	movwf	??_main
  1608  0418  083C               	movf	??_main,w
  1609  0419  3A09               	xorlw	9
  1610  041A  1D03               	skipz
  1611  041B  2C1F               	goto	l2232
  1612  041C  3009               	movlw	9
  1613  041D  02FA               	subwf	_DD,f
  1614  041E  2C23               	goto	l2234
  1615  041F                     l2232:	
  1616                           
  1617                           ;PIC16F1827-I2C01.c: 403: else DD++;
  1618  041F  3001               	movlw	1
  1619  0420  00BC               	movwf	??_main
  1620  0421  083C               	movf	??_main,w
  1621  0422  07FA               	addwf	_DD,f
  1622  0423                     l2234:	
  1623                           
  1624                           ;PIC16F1827-I2C01.c: 404: RTC_Write(0x04, DD);
  1625  0423  087A               	movf	_DD,w
  1626  0424  00BC               	movwf	??_main
  1627  0425  083C               	movf	??_main,w
  1628  0426  00B0               	movwf	RTC_Write@c
  1629  0427  3004               	movlw	4
  1630  0428  3185  25E9  3180   	fcall	_RTC_Write
  1631  042B  0020               	movlb	0	; select bank0
  1632  042C                     l2236:	
  1633                           
  1634                           ;PIC16F1827-I2C01.c: 405: }
  1635                           ;PIC16F1827-I2C01.c: 406: if (long_hold_flag1x) {
  1636  042C  0020               	movlb	0	; select bank0
  1637  042D  0829               	movf	_long_hold_flag1x,w
  1638  042E  1903               	btfsc	3,2
  1639  042F  2BAF               	goto	l2250
  1640                           
  1641                           ;PIC16F1827-I2C01.c: 407: long_hold_flag1x = 0;
  1642  0430  01A9               	clrf	_long_hold_flag1x
  1643                           
  1644                           ;PIC16F1827-I2C01.c: 408: DD = RTC_Read(0x04);
  1645  0431  3004               	movlw	4
  1646  0432  3184  24E3  3180   	fcall	_RTC_Read
  1647  0435  0020               	movlb	0	; select bank0
  1648  0436  00BC               	movwf	??_main
  1649  0437  083C               	movf	??_main,w
  1650  0438  00FA               	movwf	_DD
  1651                           
  1652                           ;PIC16F1827-I2C01.c: 409: if (DD / 16 == 9) DD -= 16 * 9;
  1653  0439  3010               	movlw	16
  1654  043A  00F2               	movwf	___awdiv@divisor
  1655  043B  3000               	movlw	0
  1656  043C  00F3               	movwf	___awdiv@divisor+1
  1657  043D  087A               	movf	_DD,w
  1658  043E  00BC               	movwf	??_main
  1659  043F  01BD               	clrf	??_main+1
  1660  0440  083C               	movf	??_main,w
  1661  0441  00F4               	movwf	___awdiv@dividend
  1662  0442  083D               	movf	??_main+1,w
  1663  0443  00F5               	movwf	___awdiv@dividend+1
  1664  0444  3184  248F  3180   	fcall	___awdiv
  1665  0447  3009               	movlw	9
  1666  0448  0672               	xorwf	?___awdiv,w
  1667  0449  0473               	iorwf	?___awdiv+1,w
  1668  044A  1D03               	skipz
  1669  044B  2C4F               	goto	l2246
  1670  044C  3090               	movlw	144
  1671  044D  02FA               	subwf	_DD,f
  1672  044E  2C54               	goto	l2248
  1673  044F                     l2246:	
  1674                           
  1675                           ;PIC16F1827-I2C01.c: 410: else DD += 16;
  1676  044F  3010               	movlw	16
  1677  0450  0020               	movlb	0	; select bank0
  1678  0451  00BC               	movwf	??_main
  1679  0452  083C               	movf	??_main,w
  1680  0453  07FA               	addwf	_DD,f
  1681  0454                     l2248:	
  1682                           
  1683                           ;PIC16F1827-I2C01.c: 411: RTC_Write(0x04, DD);
  1684  0454  087A               	movf	_DD,w
  1685  0455  0020               	movlb	0	; select bank0
  1686  0456  00BC               	movwf	??_main
  1687  0457  083C               	movf	??_main,w
  1688  0458  00B0               	movwf	RTC_Write@c
  1689  0459  3004               	movlw	4
  1690  045A  3185  25E9  3180   	fcall	_RTC_Write
  1691  045D  0020               	movlb	0	; select bank0
  1692  045E  2BAF               	goto	l2250
  1693  045F                     l2252:	
  1694                           
  1695                           ;PIC16F1827-I2C01.c: 412: }
  1696                           ;PIC16F1827-I2C01.c: 413: }
  1697                           ;PIC16F1827-I2C01.c: 414: press_flag = 0;
  1698  045F  01AD               	clrf	_press_flag
  1699                           
  1700                           ;PIC16F1827-I2C01.c: 415: DD = RTC_Read(0x04);
  1701  0460  3004               	movlw	4
  1702  0461  3184  24E3  3180   	fcall	_RTC_Read
  1703  0464  0020               	movlb	0	; select bank0
  1704  0465  00BC               	movwf	??_main
  1705  0466  083C               	movf	??_main,w
  1706  0467  00FA               	movwf	_DD
  1707                           
  1708                           ;PIC16F1827-I2C01.c: 416: LCD_SetCursor(6, 0);
  1709  0468  3006               	movlw	6
  1710  0469  00B4               	movwf	LCD_SetCursor@col
  1711  046A  3000               	movlw	0
  1712  046B  00B5               	movwf	LCD_SetCursor@col+1
  1713  046C  3000               	movlw	0
  1714  046D  00B6               	movwf	LCD_SetCursor@row
  1715  046E  3000               	movlw	0
  1716  046F  00B7               	movwf	LCD_SetCursor@row+1
  1717  0470  3186  26DF  3180   	fcall	_LCD_SetCursor
  1718                           
  1719                           ;PIC16F1827-I2C01.c: 417: LCD_Putc(DD / 16 + '0');
  1720  0473  3010               	movlw	16
  1721  0474  00F2               	movwf	___awdiv@divisor
  1722  0475  3000               	movlw	0
  1723  0476  00F3               	movwf	___awdiv@divisor+1
  1724  0477  087A               	movf	_DD,w
  1725  0478  0020               	movlb	0	; select bank0
  1726  0479  00BC               	movwf	??_main
  1727  047A  01BD               	clrf	??_main+1
  1728  047B  083C               	movf	??_main,w
  1729  047C  00F4               	movwf	___awdiv@dividend
  1730  047D  083D               	movf	??_main+1,w
  1731  047E  00F5               	movwf	___awdiv@dividend+1
  1732  047F  3184  248F  3180   	fcall	___awdiv
  1733  0482  0872               	movf	?___awdiv,w
  1734  0483  3E30               	addlw	48
  1735  0484  3186  2613  3180   	fcall	_LCD_Putc
  1736                           
  1737                           ;PIC16F1827-I2C01.c: 418: LCD_Putc(DD % 16 + '0');
  1738  0487  087A               	movf	_DD,w
  1739  0488  390F               	andlw	15
  1740  0489  3E30               	addlw	48
  1741  048A  3186  2613  3180   	fcall	_LCD_Putc
  1742  048D  0020               	movlb	0	; select bank0
  1743  048E  28EE               	goto	l2046
  1744  048F                     __end_of_main:	
  1745                           
  1746                           	psect	text1
  1747  052B                     __ptext1:	
  1748 ;; *************** function ___awmod *****************
  1749 ;; Defined at:
  1750 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  divisor         2    2[COMMON] int 
  1753 ;;  dividend        2    4[COMMON] int 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  sign            1    8[COMMON] unsigned char 
  1756 ;;  counter         1    7[COMMON] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    2[COMMON] int 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1766 ;;      Params:         4       0       0       0       0       0
  1767 ;;      Locals:         2       0       0       0       0       0
  1768 ;;      Temps:          1       0       0       0       0       0
  1769 ;;      Totals:         7       0       0       0       0       0
  1770 ;;Total ram usage:        7 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function ___awmod
  1782  052B                     ___awmod:	
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1786  052B  01F8               	clrf	___awmod@sign
  1787  052C  1FF5               	btfss	___awmod@dividend+1,7
  1788  052D  2D35               	goto	l1494
  1789  052E  09F4               	comf	___awmod@dividend,f
  1790  052F  09F5               	comf	___awmod@dividend+1,f
  1791  0530  0AF4               	incf	___awmod@dividend,f
  1792  0531  1903               	skipnz
  1793  0532  0AF5               	incf	___awmod@dividend+1,f
  1794  0533  01F8               	clrf	___awmod@sign
  1795  0534  0AF8               	incf	___awmod@sign,f
  1796  0535                     l1494:	
  1797  0535  1FF3               	btfss	___awmod@divisor+1,7
  1798  0536  2D3C               	goto	l1498
  1799  0537  09F2               	comf	___awmod@divisor,f
  1800  0538  09F3               	comf	___awmod@divisor+1,f
  1801  0539  0AF2               	incf	___awmod@divisor,f
  1802  053A  1903               	skipnz
  1803  053B  0AF3               	incf	___awmod@divisor+1,f
  1804  053C                     l1498:	
  1805  053C  0873               	movf	___awmod@divisor+1,w
  1806  053D  0472               	iorwf	___awmod@divisor,w
  1807  053E  1903               	skipnz
  1808  053F  2D63               	goto	l1516
  1809  0540  01F7               	clrf	___awmod@counter
  1810  0541  0AF7               	incf	___awmod@counter,f
  1811  0542                     l1506:	
  1812  0542  1BF3               	btfsc	___awmod@divisor+1,7
  1813  0543  2D4E               	goto	l1508
  1814  0544  3001               	movlw	1
  1815  0545                     u965:	
  1816  0545  35F2               	lslf	___awmod@divisor,f
  1817  0546  0DF3               	rlf	___awmod@divisor+1,f
  1818  0547  0B89               	decfsz	9,f
  1819  0548  2D45               	goto	u965
  1820  0549  3001               	movlw	1
  1821  054A  00F6               	movwf	??___awmod
  1822  054B  0876               	movf	??___awmod,w
  1823  054C  07F7               	addwf	___awmod@counter,f
  1824  054D  2D42               	goto	l1506
  1825  054E                     l1508:	
  1826  054E  0873               	movf	___awmod@divisor+1,w
  1827  054F  0275               	subwf	___awmod@dividend+1,w
  1828  0550  1D03               	skipz
  1829  0551  2D54               	goto	u985
  1830  0552  0872               	movf	___awmod@divisor,w
  1831  0553  0274               	subwf	___awmod@dividend,w
  1832  0554                     u985:	
  1833  0554  1C03               	skipc
  1834  0555  2D5A               	goto	l1512
  1835  0556  0872               	movf	___awmod@divisor,w
  1836  0557  02F4               	subwf	___awmod@dividend,f
  1837  0558  0873               	movf	___awmod@divisor+1,w
  1838  0559  3BF5               	subwfb	___awmod@dividend+1,f
  1839  055A                     l1512:	
  1840  055A  3001               	movlw	1
  1841  055B                     u995:	
  1842  055B  36F3               	lsrf	___awmod@divisor+1,f
  1843  055C  0CF2               	rrf	___awmod@divisor,f
  1844  055D  0B89               	decfsz	9,f
  1845  055E  2D5B               	goto	u995
  1846  055F  3001               	movlw	1
  1847  0560  02F7               	subwf	___awmod@counter,f
  1848  0561  1D03               	btfss	3,2
  1849  0562  2D4E               	goto	l1508
  1850  0563                     l1516:	
  1851  0563  0878               	movf	___awmod@sign,w
  1852  0564  1903               	btfsc	3,2
  1853  0565  2D6B               	goto	l1520
  1854  0566  09F4               	comf	___awmod@dividend,f
  1855  0567  09F5               	comf	___awmod@dividend+1,f
  1856  0568  0AF4               	incf	___awmod@dividend,f
  1857  0569  1903               	skipnz
  1858  056A  0AF5               	incf	___awmod@dividend+1,f
  1859  056B                     l1520:	
  1860  056B  0875               	movf	___awmod@dividend+1,w
  1861  056C  01F3               	clrf	?___awmod+1
  1862  056D  07F3               	addwf	?___awmod+1,f
  1863  056E  0874               	movf	___awmod@dividend,w
  1864  056F  01F2               	clrf	?___awmod
  1865  0570  07F2               	addwf	?___awmod,f
  1866  0571  0008               	return
  1867  0572                     __end_of___awmod:	
  1868                           
  1869                           	psect	text2
  1870  048F                     __ptext2:	
  1871 ;; *************** function ___awdiv *****************
  1872 ;; Defined at:
  1873 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  divisor         2    2[COMMON] int 
  1876 ;;  dividend        2    4[COMMON] int 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  quotient        2    2[BANK0 ] int 
  1879 ;;  sign            1    1[BANK0 ] unsigned char 
  1880 ;;  counter         1    0[BANK0 ] unsigned char 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2    2[COMMON] int 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1890 ;;      Params:         4       0       0       0       0       0
  1891 ;;      Locals:         0       4       0       0       0       0
  1892 ;;      Temps:          1       0       0       0       0       0
  1893 ;;      Totals:         5       4       0       0       0       0
  1894 ;;Total ram usage:        9 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function ___awdiv
  1906  048F                     ___awdiv:	
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1910  048F  0020               	movlb	0	; select bank0
  1911  0490  01B1               	clrf	___awdiv@sign
  1912  0491  1FF3               	btfss	___awdiv@divisor+1,7
  1913  0492  2C9A               	goto	l1968
  1914  0493  09F2               	comf	___awdiv@divisor,f
  1915  0494  09F3               	comf	___awdiv@divisor+1,f
  1916  0495  0AF2               	incf	___awdiv@divisor,f
  1917  0496  1903               	skipnz
  1918  0497  0AF3               	incf	___awdiv@divisor+1,f
  1919  0498  01B1               	clrf	___awdiv@sign
  1920  0499  0AB1               	incf	___awdiv@sign,f
  1921  049A                     l1968:	
  1922  049A  1FF5               	btfss	___awdiv@dividend+1,7
  1923  049B  2CA5               	goto	l1974
  1924  049C  09F4               	comf	___awdiv@dividend,f
  1925  049D  09F5               	comf	___awdiv@dividend+1,f
  1926  049E  0AF4               	incf	___awdiv@dividend,f
  1927  049F  1903               	skipnz
  1928  04A0  0AF5               	incf	___awdiv@dividend+1,f
  1929  04A1  3001               	movlw	1
  1930  04A2  00F6               	movwf	??___awdiv
  1931  04A3  0876               	movf	??___awdiv,w
  1932  04A4  06B1               	xorwf	___awdiv@sign,f
  1933  04A5                     l1974:	
  1934  04A5  01B2               	clrf	___awdiv@quotient
  1935  04A6  01B3               	clrf	___awdiv@quotient+1
  1936  04A7  0873               	movf	___awdiv@divisor+1,w
  1937  04A8  0472               	iorwf	___awdiv@divisor,w
  1938  04A9  1903               	skipnz
  1939  04AA  2CD4               	goto	l1996
  1940  04AB  01B0               	clrf	___awdiv@counter
  1941  04AC  0AB0               	incf	___awdiv@counter,f
  1942  04AD                     l1984:	
  1943  04AD  1BF3               	btfsc	___awdiv@divisor+1,7
  1944  04AE  2CB9               	goto	l1986
  1945  04AF  3001               	movlw	1
  1946  04B0                     u1535:	
  1947  04B0  35F2               	lslf	___awdiv@divisor,f
  1948  04B1  0DF3               	rlf	___awdiv@divisor+1,f
  1949  04B2  0B89               	decfsz	9,f
  1950  04B3  2CB0               	goto	u1535
  1951  04B4  3001               	movlw	1
  1952  04B5  00F6               	movwf	??___awdiv
  1953  04B6  0876               	movf	??___awdiv,w
  1954  04B7  07B0               	addwf	___awdiv@counter,f
  1955  04B8  2CAD               	goto	l1984
  1956  04B9                     l1986:	
  1957  04B9  3001               	movlw	1
  1958  04BA                     u1555:	
  1959  04BA  35B2               	lslf	___awdiv@quotient,f
  1960  04BB  0DB3               	rlf	___awdiv@quotient+1,f
  1961  04BC  0B89               	decfsz	9,f
  1962  04BD  2CBA               	goto	u1555
  1963  04BE  0873               	movf	___awdiv@divisor+1,w
  1964  04BF  0275               	subwf	___awdiv@dividend+1,w
  1965  04C0  1D03               	skipz
  1966  04C1  2CC4               	goto	u1565
  1967  04C2  0872               	movf	___awdiv@divisor,w
  1968  04C3  0274               	subwf	___awdiv@dividend,w
  1969  04C4                     u1565:	
  1970  04C4  1C03               	skipc
  1971  04C5  2CCB               	goto	l1992
  1972  04C6  0872               	movf	___awdiv@divisor,w
  1973  04C7  02F4               	subwf	___awdiv@dividend,f
  1974  04C8  0873               	movf	___awdiv@divisor+1,w
  1975  04C9  3BF5               	subwfb	___awdiv@dividend+1,f
  1976  04CA  1432               	bsf	___awdiv@quotient,0
  1977  04CB                     l1992:	
  1978  04CB  3001               	movlw	1
  1979  04CC                     u1575:	
  1980  04CC  36F3               	lsrf	___awdiv@divisor+1,f
  1981  04CD  0CF2               	rrf	___awdiv@divisor,f
  1982  04CE  0B89               	decfsz	9,f
  1983  04CF  2CCC               	goto	u1575
  1984  04D0  3001               	movlw	1
  1985  04D1  02B0               	subwf	___awdiv@counter,f
  1986  04D2  1D03               	btfss	3,2
  1987  04D3  2CB9               	goto	l1986
  1988  04D4                     l1996:	
  1989  04D4  0831               	movf	___awdiv@sign,w
  1990  04D5  1903               	btfsc	3,2
  1991  04D6  2CDC               	goto	l2000
  1992  04D7  09B2               	comf	___awdiv@quotient,f
  1993  04D8  09B3               	comf	___awdiv@quotient+1,f
  1994  04D9  0AB2               	incf	___awdiv@quotient,f
  1995  04DA  1903               	skipnz
  1996  04DB  0AB3               	incf	___awdiv@quotient+1,f
  1997  04DC                     l2000:	
  1998  04DC  0833               	movf	___awdiv@quotient+1,w
  1999  04DD  01F3               	clrf	?___awdiv+1
  2000  04DE  07F3               	addwf	?___awdiv+1,f
  2001  04DF  0832               	movf	___awdiv@quotient,w
  2002  04E0  01F2               	clrf	?___awdiv
  2003  04E1  07F2               	addwf	?___awdiv,f
  2004  04E2  0008               	return
  2005  04E3                     __end_of___awdiv:	
  2006                           
  2007                           	psect	text3
  2008  05E9                     __ptext3:	
  2009 ;; *************** function _RTC_Write *****************
  2010 ;; Defined at:
  2011 ;;		line 239 in file "PIC16F1827-I2C01.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  Reg             1    wreg     unsigned char 
  2014 ;;  c               1    0[BANK0 ] unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  Reg             1    2[BANK0 ] unsigned char 
  2017 ;;  ans             2    3[BANK0 ] int 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;		None               void
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2027 ;;      Params:         0       1       0       0       0       0
  2028 ;;      Locals:         0       3       0       0       0       0
  2029 ;;      Temps:          0       1       0       0       0       0
  2030 ;;      Totals:         0       5       0       0       0       0
  2031 ;;Total ram usage:        5 bytes
  2032 ;; Hardware stack levels used:    1
  2033 ;; Hardware stack levels required when called:    3
  2034 ;; This function calls:
  2035 ;;		_I2C_Send
  2036 ;;		_I2C_Start
  2037 ;;		_I2C_Stop
  2038 ;; This function is called by:
  2039 ;;		_main
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function _RTC_Write
  2045  05E9                     _RTC_Write:	
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _RTC_Write: [wreg+status,2+status,0+pclath+cstack]
  2049                           ;RTC_Write@Reg stored from wreg
  2050  05E9  0020               	movlb	0	; select bank0
  2051  05EA  00B2               	movwf	RTC_Write@Reg
  2052                           
  2053                           ;PIC16F1827-I2C01.c: 240: int ans;
  2054                           ;PIC16F1827-I2C01.c: 242: ans = I2C_Start(0x68, 0);
  2055  05EB  3068               	movlw	104
  2056  05EC  00F4               	movwf	I2C_Start@adrs
  2057  05ED  3000               	movlw	0
  2058  05EE  00F5               	movwf	I2C_Start@adrs+1
  2059  05EF  3000               	movlw	0
  2060  05F0  00F6               	movwf	I2C_Start@rw
  2061  05F1  3000               	movlw	0
  2062  05F2  00F7               	movwf	I2C_Start@rw+1
  2063  05F3  3186  268B  3185   	fcall	_I2C_Start
  2064  05F6  0875               	movf	?_I2C_Start+1,w
  2065  05F7  0020               	movlb	0	; select bank0
  2066  05F8  01B4               	clrf	RTC_Write@ans+1
  2067  05F9  07B4               	addwf	RTC_Write@ans+1,f
  2068  05FA  0874               	movf	?_I2C_Start,w
  2069  05FB  01B3               	clrf	RTC_Write@ans
  2070  05FC  07B3               	addwf	RTC_Write@ans,f
  2071                           
  2072                           ;PIC16F1827-I2C01.c: 243: if (ans == 0) {
  2073  05FD  0834               	movf	RTC_Write@ans+1,w
  2074  05FE  0433               	iorwf	RTC_Write@ans,w
  2075  05FF  1D03               	skipz
  2076  0600  2E0A               	goto	l183
  2077                           
  2078                           ;PIC16F1827-I2C01.c: 245: I2C_Send(Reg);
  2079  0601  0832               	movf	RTC_Write@Reg,w
  2080  0602  3186  26CA  3185   	fcall	_I2C_Send
  2081                           
  2082                           ;PIC16F1827-I2C01.c: 246: I2C_Send(c);
  2083  0605  0020               	movlb	0	; select bank0
  2084  0606  0830               	movf	RTC_Write@c,w
  2085  0607  3186  26CA  3185   	fcall	_I2C_Send
  2086  060A                     l183:	
  2087                           
  2088                           ;PIC16F1827-I2C01.c: 247: }
  2089                           ;PIC16F1827-I2C01.c: 248: I2C_Stop();
  2090  060A  3187  2722  3185   	fcall	_I2C_Stop
  2091                           
  2092                           ;PIC16F1827-I2C01.c: 249: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2093  060D  3011               	movlw	17
  2094  060E  0020               	movlb	0	; select bank0
  2095  060F  00B1               	movwf	??_RTC_Write
  2096  0610                     u1797:	
  2097  0610  0BB1               	decfsz	??_RTC_Write,f
  2098  0611  2E10               	goto	u1797
  2099  0612  0008               	return
  2100  0613                     __end_of_RTC_Write:	
  2101                           
  2102                           	psect	text4
  2103  04E3                     __ptext4:	
  2104 ;; *************** function _RTC_Read *****************
  2105 ;; Defined at:
  2106 ;;		line 252 in file "PIC16F1827-I2C01.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  Reg             1    wreg     unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  Reg             1    1[BANK0 ] unsigned char 
  2111 ;;  ans             2    3[BANK0 ] int 
  2112 ;;  data            1    2[BANK0 ] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      unsigned char 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0, pclath, cstack
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2122 ;;      Params:         0       0       0       0       0       0
  2123 ;;      Locals:         0       4       0       0       0       0
  2124 ;;      Temps:          0       1       0       0       0       0
  2125 ;;      Totals:         0       5       0       0       0       0
  2126 ;;Total ram usage:        5 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    3
  2129 ;; This function calls:
  2130 ;;		_I2C_Receive
  2131 ;;		_I2C_Send
  2132 ;;		_I2C_Start
  2133 ;;		_I2C_Stop
  2134 ;;		_I2C_rStart
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _RTC_Read
  2142  04E3                     _RTC_Read:	
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _RTC_Read: [wreg+status,2+status,0+pclath+cstack]
  2146                           ;RTC_Read@Reg stored from wreg
  2147  04E3  0020               	movlb	0	; select bank0
  2148  04E4  00B1               	movwf	RTC_Read@Reg
  2149                           
  2150                           ;PIC16F1827-I2C01.c: 253: int ans;
  2151                           ;PIC16F1827-I2C01.c: 254: unsigned char data;
  2152                           ;PIC16F1827-I2C01.c: 256: ans = I2C_Start(0x68, 0);
  2153  04E5  3068               	movlw	104
  2154  04E6  00F4               	movwf	I2C_Start@adrs
  2155  04E7  3000               	movlw	0
  2156  04E8  00F5               	movwf	I2C_Start@adrs+1
  2157  04E9  3000               	movlw	0
  2158  04EA  00F6               	movwf	I2C_Start@rw
  2159  04EB  3000               	movlw	0
  2160  04EC  00F7               	movwf	I2C_Start@rw+1
  2161  04ED  3186  268B  3184   	fcall	_I2C_Start
  2162  04F0  0875               	movf	?_I2C_Start+1,w
  2163  04F1  0020               	movlb	0	; select bank0
  2164  04F2  01B4               	clrf	RTC_Read@ans+1
  2165  04F3  07B4               	addwf	RTC_Read@ans+1,f
  2166  04F4  0874               	movf	?_I2C_Start,w
  2167  04F5  01B3               	clrf	RTC_Read@ans
  2168  04F6  07B3               	addwf	RTC_Read@ans,f
  2169                           
  2170                           ;PIC16F1827-I2C01.c: 257: if (ans == 0) {
  2171  04F7  0834               	movf	RTC_Read@ans+1,w
  2172  04F8  0433               	iorwf	RTC_Read@ans,w
  2173  04F9  1D03               	skipz
  2174  04FA  2CFF               	goto	l187
  2175                           
  2176                           ;PIC16F1827-I2C01.c: 259: I2C_Send(Reg);
  2177  04FB  0831               	movf	RTC_Read@Reg,w
  2178  04FC  3186  26CA  3184   	fcall	_I2C_Send
  2179  04FF                     l187:	
  2180                           
  2181                           ;PIC16F1827-I2C01.c: 260: }
  2182                           ;PIC16F1827-I2C01.c: 261: ans = I2C_rStart(0x68, 1);
  2183  04FF  3068               	movlw	104
  2184  0500  00F4               	movwf	I2C_rStart@adrs
  2185  0501  3000               	movlw	0
  2186  0502  00F5               	movwf	I2C_rStart@adrs+1
  2187  0503  3001               	movlw	1
  2188  0504  00F6               	movwf	I2C_rStart@rw
  2189  0505  3000               	movlw	0
  2190  0506  00F7               	movwf	I2C_rStart@rw+1
  2191  0507  3186  2667  3184   	fcall	_I2C_rStart
  2192  050A  0875               	movf	?_I2C_rStart+1,w
  2193  050B  0020               	movlb	0	; select bank0
  2194  050C  01B4               	clrf	RTC_Read@ans+1
  2195  050D  07B4               	addwf	RTC_Read@ans+1,f
  2196  050E  0874               	movf	?_I2C_rStart,w
  2197  050F  01B3               	clrf	RTC_Read@ans
  2198  0510  07B3               	addwf	RTC_Read@ans,f
  2199                           
  2200                           ;PIC16F1827-I2C01.c: 262: if (ans == 0) {
  2201  0511  0834               	movf	RTC_Read@ans+1,w
  2202  0512  0433               	iorwf	RTC_Read@ans,w
  2203  0513  1D03               	skipz
  2204  0514  2D20               	goto	l188
  2205                           
  2206                           ;PIC16F1827-I2C01.c: 264: data = I2C_Receive(1);
  2207  0515  3001               	movlw	1
  2208  0516  00F4               	movwf	I2C_Receive@ack
  2209  0517  3000               	movlw	0
  2210  0518  00F5               	movwf	I2C_Receive@ack+1
  2211  0519  3186  26AF  3184   	fcall	_I2C_Receive
  2212  051C  0020               	movlb	0	; select bank0
  2213  051D  00B0               	movwf	??_RTC_Read
  2214  051E  0830               	movf	??_RTC_Read,w
  2215  051F  00B2               	movwf	RTC_Read@data
  2216  0520                     l188:	
  2217                           
  2218                           ;PIC16F1827-I2C01.c: 265: }
  2219                           ;PIC16F1827-I2C01.c: 266: I2C_Stop();
  2220  0520  3187  2722  3184   	fcall	_I2C_Stop
  2221                           
  2222                           ;PIC16F1827-I2C01.c: 267: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2223  0523  3011               	movlw	17
  2224  0524  0020               	movlb	0	; select bank0
  2225  0525  00B0               	movwf	??_RTC_Read
  2226  0526                     u1807:	
  2227  0526  0BB0               	decfsz	??_RTC_Read,f
  2228  0527  2D26               	goto	u1807
  2229                           
  2230                           ;PIC16F1827-I2C01.c: 268: return data;
  2231  0528  0020               	movlb	0	; select bank0
  2232  0529  0832               	movf	RTC_Read@data,w
  2233  052A  0008               	return
  2234  052B                     __end_of_RTC_Read:	
  2235                           
  2236                           	psect	text5
  2237  0667                     __ptext5:	
  2238 ;; *************** function _I2C_rStart *****************
  2239 ;; Defined at:
  2240 ;;		line 115 in file "PIC16F1827-I2C01.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  adrs            2    4[COMMON] int 
  2243 ;;  rw              2    6[COMMON] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2    4[COMMON] int 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0, pclath, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2255 ;;      Params:         4       0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0
  2257 ;;      Temps:          2       0       0       0       0       0
  2258 ;;      Totals:         6       0       0       0       0       0
  2259 ;;Total ram usage:        6 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    2
  2262 ;; This function calls:
  2263 ;;		_I2C_IdleCheck
  2264 ;; This function is called by:
  2265 ;;		_RTC_Read
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _I2C_rStart
  2271  0667                     _I2C_rStart:	
  2272                           
  2273                           ;PIC16F1827-I2C01.c: 117: I2C_IdleCheck(0x5);
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _I2C_rStart: [wreg+status,2+status,0+pclath+cstack]
  2277  0667  3005               	movlw	5
  2278  0668  3187  2711  3186   	fcall	_I2C_IdleCheck
  2279                           
  2280                           ;PIC16F1827-I2C01.c: 118: SSP1CON2bits.RSEN = 1;
  2281  066B  0024               	movlb	4	; select bank4
  2282  066C  1496               	bsf	22,1	;volatile
  2283                           
  2284                           ;PIC16F1827-I2C01.c: 120: I2C_IdleCheck(0x5);
  2285  066D  3005               	movlw	5
  2286  066E  3187  2711  3186   	fcall	_I2C_IdleCheck
  2287                           
  2288                           ;PIC16F1827-I2C01.c: 121: AckCheck = 1;
  2289  0671  3001               	movlw	1
  2290  0672  0020               	movlb	0	; select bank0
  2291  0673  00A0               	movwf	_AckCheck
  2292  0674  3000               	movlw	0
  2293  0675  00A1               	movwf	_AckCheck+1
  2294                           
  2295                           ;PIC16F1827-I2C01.c: 122: SSP1BUF = (char) ((adrs << 1) + rw);
  2296  0676  3574               	lslf	I2C_rStart@adrs,w
  2297  0677  0776               	addwf	I2C_rStart@rw,w
  2298  0678  0024               	movlb	4	; select bank4
  2299  0679  0091               	movwf	17	;volatile
  2300  067A                     l1332:	
  2301                           ;PIC16F1827-I2C01.c: 123: while (AckCheck);
  2302                           
  2303  067A  0020               	movlb	0	; select bank0
  2304  067B  0821               	movf	_AckCheck+1,w
  2305  067C  0420               	iorwf	_AckCheck,w
  2306  067D  1D03               	skipz
  2307  067E  2E7A               	goto	l1332
  2308                           
  2309                           ;PIC16F1827-I2C01.c: 124: return SSP1CON2bits.ACKSTAT;
  2310  067F  0024               	movlb	4	; select bank4
  2311  0680  0E16               	swapf	22,w	;volatile
  2312  0681  0C89               	rrf	9,f
  2313  0682  0C89               	rrf	9,f
  2314  0683  3901               	andlw	1
  2315  0684  00F8               	movwf	??_I2C_rStart
  2316  0685  01F9               	clrf	??_I2C_rStart+1
  2317  0686  0878               	movf	??_I2C_rStart,w
  2318  0687  00F4               	movwf	?_I2C_rStart
  2319  0688  0879               	movf	??_I2C_rStart+1,w
  2320  0689  00F5               	movwf	?_I2C_rStart+1
  2321  068A  0008               	return
  2322  068B                     __end_of_I2C_rStart:	
  2323                           
  2324                           	psect	text6
  2325  06AF                     __ptext6:	
  2326 ;; *************** function _I2C_Receive *****************
  2327 ;; Defined at:
  2328 ;;		line 141 in file "PIC16F1827-I2C01.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  ack             2    4[COMMON] int 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  dt              1    7[COMMON] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2342 ;;      Params:         2       0       0       0       0       0
  2343 ;;      Locals:         1       0       0       0       0       0
  2344 ;;      Temps:          1       0       0       0       0       0
  2345 ;;      Totals:         4       0       0       0       0       0
  2346 ;;Total ram usage:        4 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    2
  2349 ;; This function calls:
  2350 ;;		_I2C_IdleCheck
  2351 ;; This function is called by:
  2352 ;;		_RTC_Read
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _I2C_Receive
  2358  06AF                     _I2C_Receive:	
  2359                           
  2360                           ;PIC16F1827-I2C01.c: 142: char dt;
  2361                           ;PIC16F1827-I2C01.c: 144: I2C_IdleCheck(0x5);
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  2365  06AF  3005               	movlw	5
  2366  06B0  3187  2711  3186   	fcall	_I2C_IdleCheck
  2367                           
  2368                           ;PIC16F1827-I2C01.c: 145: SSP1CON2bits.RCEN = 1;
  2369  06B3  0024               	movlb	4	; select bank4
  2370  06B4  1596               	bsf	22,3	;volatile
  2371                           
  2372                           ;PIC16F1827-I2C01.c: 146: I2C_IdleCheck(0x4);
  2373  06B5  3004               	movlw	4
  2374  06B6  3187  2711  3186   	fcall	_I2C_IdleCheck
  2375                           
  2376                           ;PIC16F1827-I2C01.c: 147: dt = SSP1BUF;
  2377  06B9  0024               	movlb	4	; select bank4
  2378  06BA  0811               	movf	17,w	;volatile
  2379  06BB  00F6               	movwf	??_I2C_Receive
  2380  06BC  0876               	movf	??_I2C_Receive,w
  2381  06BD  00F7               	movwf	I2C_Receive@dt
  2382                           
  2383                           ;PIC16F1827-I2C01.c: 148: I2C_IdleCheck(0x5);
  2384  06BE  3005               	movlw	5
  2385  06BF  3187  2711         	fcall	_I2C_IdleCheck
  2386                           
  2387                           ;PIC16F1827-I2C01.c: 149: SSP1CON2bits.ACKDT = ack;
  2388  06C1  0874               	movf	I2C_Receive@ack,w
  2389  06C2  0024               	movlb	4	; select bank4
  2390  06C3  1D03               	skipz
  2391  06C4  1696               	bsf	22,5	;volatile
  2392  06C5  1903               	skipnz
  2393  06C6  1296               	bcf	22,5	;volatile
  2394                           
  2395                           ;PIC16F1827-I2C01.c: 150: SSP1CON2bits.ACKEN = 1;
  2396  06C7  1616               	bsf	22,4	;volatile
  2397                           
  2398                           ;PIC16F1827-I2C01.c: 151: return dt;
  2399  06C8  0877               	movf	I2C_Receive@dt,w
  2400  06C9  0008               	return
  2401  06CA                     __end_of_I2C_Receive:	
  2402                           
  2403                           	psect	text7
  2404  06DF                     __ptext7:	
  2405 ;; *************** function _LCD_SetCursor *****************
  2406 ;; Defined at:
  2407 ;;		line 172 in file "PIC16F1827-I2C01.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  col             2    4[BANK0 ] int 
  2410 ;;  row             2    6[BANK0 ] int 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  row_offsets     4    8[BANK0 ] int [2]
  2413 ;; Return value:  Size  Location     Type
  2414 ;;		None               void
  2415 ;; Registers used:
  2416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2422 ;;      Params:         0       4       0       0       0       0
  2423 ;;      Locals:         0       4       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0
  2425 ;;      Totals:         0       8       0       0       0       0
  2426 ;;Total ram usage:        8 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    4
  2429 ;; This function calls:
  2430 ;;		_command
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _LCD_SetCursor
  2438  06DF                     _LCD_SetCursor:	
  2439                           
  2440                           ;PIC16F1827-I2C01.c: 173: int row_offsets[] = {0x00, 0x40};
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2444  06DF  0020               	movlb	0	; select bank0
  2445  06E0  0841               	movf	LCD_SetCursor@F2873+3,w
  2446  06E1  00BB               	movwf	LCD_SetCursor@row_offsets+3
  2447  06E2  0840               	movf	LCD_SetCursor@F2873+2,w
  2448  06E3  00BA               	movwf	LCD_SetCursor@row_offsets+2
  2449  06E4  083F               	movf	LCD_SetCursor@F2873+1,w
  2450  06E5  00B9               	movwf	LCD_SetCursor@row_offsets+1
  2451  06E6  083E               	movf	LCD_SetCursor@F2873,w
  2452  06E7  00B8               	movwf	LCD_SetCursor@row_offsets
  2453                           
  2454                           ;PIC16F1827-I2C01.c: 175: command(0x80 | (col + row_offsets[row]));
  2455  06E8  3536               	lslf	LCD_SetCursor@row,w
  2456  06E9  3E38               	addlw	LCD_SetCursor@row_offsets& (0+255)
  2457  06EA  0086               	movwf	6
  2458  06EB  0187               	clrf	7
  2459  06EC  0801               	movf	1,w
  2460  06ED  0734               	addwf	LCD_SetCursor@col,w
  2461  06EE  3880               	iorlw	128
  2462  06EF  3186  263D         	fcall	_command
  2463  06F1  0008               	return
  2464  06F2                     __end_of_LCD_SetCursor:	
  2465                           
  2466                           	psect	text8
  2467  05B0                     __ptext8:	
  2468 ;; *************** function _LCD_Puts *****************
  2469 ;; Defined at:
  2470 ;;		line 191 in file "PIC16F1827-I2C01.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2473 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  ans             2    3[BANK0 ] int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;		None               void
  2478 ;; Registers used:
  2479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2485 ;;      Params:         0       2       0       0       0       0
  2486 ;;      Locals:         0       2       0       0       0       0
  2487 ;;      Temps:          0       1       0       0       0       0
  2488 ;;      Totals:         0       5       0       0       0       0
  2489 ;;Total ram usage:        5 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    3
  2492 ;; This function calls:
  2493 ;;		_I2C_Send
  2494 ;;		_I2C_Start
  2495 ;;		_I2C_Stop
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _LCD_Puts
  2503  05B0                     _LCD_Puts:	
  2504                           
  2505                           ;PIC16F1827-I2C01.c: 192: int ans;
  2506                           ;PIC16F1827-I2C01.c: 194: ans = I2C_Start(0x3E, 0);
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2510  05B0  303E               	movlw	62
  2511  05B1  00F4               	movwf	I2C_Start@adrs
  2512  05B2  3000               	movlw	0
  2513  05B3  00F5               	movwf	I2C_Start@adrs+1
  2514  05B4  3000               	movlw	0
  2515  05B5  00F6               	movwf	I2C_Start@rw
  2516  05B6  3000               	movlw	0
  2517  05B7  00F7               	movwf	I2C_Start@rw+1
  2518  05B8  3186  268B  3185   	fcall	_I2C_Start
  2519  05BB  0875               	movf	?_I2C_Start+1,w
  2520  05BC  0020               	movlb	0	; select bank0
  2521  05BD  01B4               	clrf	LCD_Puts@ans+1
  2522  05BE  07B4               	addwf	LCD_Puts@ans+1,f
  2523  05BF  0874               	movf	?_I2C_Start,w
  2524  05C0  01B3               	clrf	LCD_Puts@ans
  2525  05C1  07B3               	addwf	LCD_Puts@ans,f
  2526                           
  2527                           ;PIC16F1827-I2C01.c: 195: if (ans == 0) {
  2528  05C2  0834               	movf	LCD_Puts@ans+1,w
  2529  05C3  0433               	iorwf	LCD_Puts@ans,w
  2530  05C4  1D03               	skipz
  2531  05C5  2DE6               	goto	l1912
  2532                           
  2533                           ;PIC16F1827-I2C01.c: 196: I2C_Send(0b01000000);
  2534  05C6  3040               	movlw	64
  2535  05C7  3186  26CA  3185   	fcall	_I2C_Send
  2536  05CA                     l1910:	
  2537                           ;PIC16F1827-I2C01.c: 197: while (*s) {
  2538                           
  2539  05CA  0020               	movlb	0	; select bank0
  2540  05CB  0830               	movf	LCD_Puts@s,w
  2541  05CC  0084               	movwf	4
  2542  05CD  0831               	movf	LCD_Puts@s+1,w
  2543  05CE  0085               	movwf	5
  2544  05CF  0800               	movf	0,w	;code access
  2545  05D0  3800               	iorlw	0
  2546  05D1  1903               	btfsc	3,2
  2547  05D2  2DE6               	goto	l1912
  2548                           
  2549                           ;PIC16F1827-I2C01.c: 198: I2C_Send(*s++);
  2550  05D3  0020               	movlb	0	; select bank0
  2551  05D4  0830               	movf	LCD_Puts@s,w
  2552  05D5  0084               	movwf	4
  2553  05D6  0831               	movf	LCD_Puts@s+1,w
  2554  05D7  0085               	movwf	5
  2555  05D8  0800               	movf	0,w	;code access
  2556  05D9  3186  26CA  3185   	fcall	_I2C_Send
  2557  05DC  3001               	movlw	1
  2558  05DD  0020               	movlb	0	; select bank0
  2559  05DE  07B0               	addwf	LCD_Puts@s,f
  2560  05DF  3000               	movlw	0
  2561  05E0  3DB1               	addwfc	LCD_Puts@s+1,f
  2562                           
  2563                           ;PIC16F1827-I2C01.c: 199: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2564  05E1  3011               	movlw	17
  2565  05E2  00B2               	movwf	??_LCD_Puts
  2566  05E3                     u1817:	
  2567  05E3  0BB2               	decfsz	??_LCD_Puts,f
  2568  05E4  2DE3               	goto	u1817
  2569  05E5  2DCA               	goto	l1910
  2570  05E6                     l1912:	
  2571                           
  2572                           ;PIC16F1827-I2C01.c: 200: }
  2573                           ;PIC16F1827-I2C01.c: 201: }
  2574                           ;PIC16F1827-I2C01.c: 202: I2C_Stop();
  2575  05E6  3187  2722         	fcall	_I2C_Stop
  2576  05E8  0008               	return
  2577  05E9                     __end_of_LCD_Puts:	
  2578                           
  2579                           	psect	text9
  2580  0613                     __ptext9:	
  2581 ;; *************** function _LCD_Putc *****************
  2582 ;; Defined at:
  2583 ;;		line 178 in file "PIC16F1827-I2C01.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  c               1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  c               1    1[BANK0 ] unsigned char 
  2588 ;;  ans             2    2[BANK0 ] int 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2598 ;;      Params:         0       0       0       0       0       0
  2599 ;;      Locals:         0       3       0       0       0       0
  2600 ;;      Temps:          0       1       0       0       0       0
  2601 ;;      Totals:         0       4       0       0       0       0
  2602 ;;Total ram usage:        4 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    3
  2605 ;; This function calls:
  2606 ;;		_I2C_Send
  2607 ;;		_I2C_Start
  2608 ;;		_I2C_Stop
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _LCD_Putc
  2616  0613                     _LCD_Putc:	
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  2620                           ;LCD_Putc@c stored from wreg
  2621  0613  0020               	movlb	0	; select bank0
  2622  0614  00B1               	movwf	LCD_Putc@c
  2623                           
  2624                           ;PIC16F1827-I2C01.c: 179: int ans;
  2625                           ;PIC16F1827-I2C01.c: 181: ans = I2C_Start(0x3E, 0);
  2626  0615  303E               	movlw	62
  2627  0616  00F4               	movwf	I2C_Start@adrs
  2628  0617  3000               	movlw	0
  2629  0618  00F5               	movwf	I2C_Start@adrs+1
  2630  0619  3000               	movlw	0
  2631  061A  00F6               	movwf	I2C_Start@rw
  2632  061B  3000               	movlw	0
  2633  061C  00F7               	movwf	I2C_Start@rw+1
  2634  061D  3186  268B  3186   	fcall	_I2C_Start
  2635  0620  0875               	movf	?_I2C_Start+1,w
  2636  0621  0020               	movlb	0	; select bank0
  2637  0622  01B3               	clrf	LCD_Putc@ans+1
  2638  0623  07B3               	addwf	LCD_Putc@ans+1,f
  2639  0624  0874               	movf	?_I2C_Start,w
  2640  0625  01B2               	clrf	LCD_Putc@ans
  2641  0626  07B2               	addwf	LCD_Putc@ans,f
  2642                           
  2643                           ;PIC16F1827-I2C01.c: 182: if (ans == 0) {
  2644  0627  0833               	movf	LCD_Putc@ans+1,w
  2645  0628  0432               	iorwf	LCD_Putc@ans,w
  2646  0629  1D03               	skipz
  2647  062A  2E34               	goto	l163
  2648                           
  2649                           ;PIC16F1827-I2C01.c: 184: I2C_Send(0b11000000);
  2650  062B  30C0               	movlw	192
  2651  062C  3186  26CA  3186   	fcall	_I2C_Send
  2652                           
  2653                           ;PIC16F1827-I2C01.c: 185: I2C_Send(c);
  2654  062F  0020               	movlb	0	; select bank0
  2655  0630  0831               	movf	LCD_Putc@c,w
  2656  0631  3186  26CA  3186   	fcall	_I2C_Send
  2657  0634                     l163:	
  2658                           
  2659                           ;PIC16F1827-I2C01.c: 186: }
  2660                           ;PIC16F1827-I2C01.c: 187: I2C_Stop();
  2661  0634  3187  2722  3186   	fcall	_I2C_Stop
  2662                           
  2663                           ;PIC16F1827-I2C01.c: 188: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2664  0637  3011               	movlw	17
  2665  0638  0020               	movlb	0	; select bank0
  2666  0639  00B0               	movwf	??_LCD_Putc
  2667  063A                     u1827:	
  2668  063A  0BB0               	decfsz	??_LCD_Putc,f
  2669  063B  2E3A               	goto	u1827
  2670  063C  0008               	return
  2671  063D                     __end_of_LCD_Putc:	
  2672                           
  2673                           	psect	text10
  2674  0572                     __ptext10:	
  2675 ;; *************** function _LCD_Init *****************
  2676 ;; Defined at:
  2677 ;;		line 224 in file "PIC16F1827-I2C01.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2691 ;;      Params:         0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0
  2693 ;;      Temps:          0       3       0       0       0       0
  2694 ;;      Totals:         0       3       0       0       0       0
  2695 ;;Total ram usage:        3 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    5
  2698 ;; This function calls:
  2699 ;;		_LCD_Clear
  2700 ;;		_command
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           
  2707                           ;psect for function _LCD_Init
  2708  0572                     _LCD_Init:	
  2709                           
  2710                           ;PIC16F1827-I2C01.c: 225: _delay((unsigned long)((40)*(8000000/4000.0)));
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2714  0572  3068               	movlw	104
  2715  0573  0020               	movlb	0	; select bank0
  2716  0574  00B7               	movwf	??_LCD_Init+1
  2717  0575  30E4               	movlw	228
  2718  0576  00B6               	movwf	??_LCD_Init
  2719  0577                     u1837:	
  2720  0577  0BB6               	decfsz	??_LCD_Init,f
  2721  0578  2D77               	goto	u1837
  2722  0579  0BB7               	decfsz	??_LCD_Init+1,f
  2723  057A  2D77               	goto	u1837
  2724  057B  0000               	nop
  2725                           
  2726                           ;PIC16F1827-I2C01.c: 226: command(0x38);
  2727  057C  3038               	movlw	56
  2728  057D  3186  263D  3185   	fcall	_command
  2729                           
  2730                           ;PIC16F1827-I2C01.c: 227: command(0x39);
  2731  0580  3039               	movlw	57
  2732  0581  3186  263D  3185   	fcall	_command
  2733                           
  2734                           ;PIC16F1827-I2C01.c: 228: command(0x14);
  2735  0584  3014               	movlw	20
  2736  0585  3186  263D  3185   	fcall	_command
  2737                           
  2738                           ;PIC16F1827-I2C01.c: 229: command(0x70);
  2739  0588  3070               	movlw	112
  2740  0589  3186  263D  3185   	fcall	_command
  2741                           
  2742                           ;PIC16F1827-I2C01.c: 230: command(0x56);
  2743  058C  3056               	movlw	86
  2744  058D  3186  263D  3185   	fcall	_command
  2745                           
  2746                           ;PIC16F1827-I2C01.c: 231: command(0x6C);
  2747  0590  306C               	movlw	108
  2748  0591  3186  263D  3185   	fcall	_command
  2749                           
  2750                           ;PIC16F1827-I2C01.c: 232: _delay((unsigned long)((200)*(8000000/4000.0)));
  2751  0594  3003               	movlw	3
  2752  0595  0020               	movlb	0	; select bank0
  2753  0596  00B8               	movwf	??_LCD_Init+2
  2754  0597  3008               	movlw	8
  2755  0598  00B7               	movwf	??_LCD_Init+1
  2756  0599  3078               	movlw	120
  2757  059A  00B6               	movwf	??_LCD_Init
  2758  059B                     u1847:	
  2759  059B  0BB6               	decfsz	??_LCD_Init,f
  2760  059C  2D9B               	goto	u1847
  2761  059D  0BB7               	decfsz	??_LCD_Init+1,f
  2762  059E  2D9B               	goto	u1847
  2763  059F  0BB8               	decfsz	??_LCD_Init+2,f
  2764  05A0  2D9B               	goto	u1847
  2765                           
  2766                           ;PIC16F1827-I2C01.c: 233: command(0x38);
  2767  05A1  3038               	movlw	56
  2768  05A2  3186  263D  3185   	fcall	_command
  2769                           
  2770                           ;PIC16F1827-I2C01.c: 234: command(0x0C);
  2771  05A5  300C               	movlw	12
  2772  05A6  3186  263D  3185   	fcall	_command
  2773                           
  2774                           ;PIC16F1827-I2C01.c: 235: command(0x06);
  2775  05A9  3006               	movlw	6
  2776  05AA  3186  263D  3185   	fcall	_command
  2777                           
  2778                           ;PIC16F1827-I2C01.c: 236: LCD_Clear();
  2779  05AD  3187  2702         	fcall	_LCD_Clear
  2780  05AF  0008               	return
  2781  05B0                     __end_of_LCD_Init:	
  2782                           
  2783                           	psect	text11
  2784  0702                     __ptext11:	
  2785 ;; *************** function _LCD_Clear *****************
  2786 ;; Defined at:
  2787 ;;		line 167 in file "PIC16F1827-I2C01.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;		None               void
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2801 ;;      Params:         0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0
  2803 ;;      Temps:          0       2       0       0       0       0
  2804 ;;      Totals:         0       2       0       0       0       0
  2805 ;;Total ram usage:        2 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    4
  2808 ;; This function calls:
  2809 ;;		_command
  2810 ;; This function is called by:
  2811 ;;		_LCD_Init
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function _LCD_Clear
  2817  0702                     _LCD_Clear:	
  2818                           
  2819                           ;PIC16F1827-I2C01.c: 168: command(0x01);
  2820                           
  2821                           ;incstack = 0
  2822                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2823  0702  3001               	movlw	1
  2824  0703  3186  263D  3187   	fcall	_command
  2825                           
  2826                           ;PIC16F1827-I2C01.c: 169: _delay((unsigned long)((1100)*(8000000/4000000.0)));
  2827  0706  3003               	movlw	3
  2828  0707  0020               	movlb	0	; select bank0
  2829  0708  00B5               	movwf	??_LCD_Clear+1
  2830  0709  30DA               	movlw	218
  2831  070A  00B4               	movwf	??_LCD_Clear
  2832  070B                     u1857:	
  2833  070B  0BB4               	decfsz	??_LCD_Clear,f
  2834  070C  2F0B               	goto	u1857
  2835  070D  0BB5               	decfsz	??_LCD_Clear+1,f
  2836  070E  2F0B               	goto	u1857
  2837  070F  0000               	nop
  2838  0710  0008               	return
  2839  0711                     __end_of_LCD_Clear:	
  2840                           
  2841                           	psect	text12
  2842  063D                     __ptext12:	
  2843 ;; *************** function _command *****************
  2844 ;; Defined at:
  2845 ;;		line 154 in file "PIC16F1827-I2C01.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  c               1    wreg     unsigned char 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  c               1    1[BANK0 ] unsigned char 
  2850 ;;  ans             2    2[BANK0 ] int 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;		None               void
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2860 ;;      Params:         0       0       0       0       0       0
  2861 ;;      Locals:         0       3       0       0       0       0
  2862 ;;      Temps:          0       1       0       0       0       0
  2863 ;;      Totals:         0       4       0       0       0       0
  2864 ;;Total ram usage:        4 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    3
  2867 ;; This function calls:
  2868 ;;		_I2C_Send
  2869 ;;		_I2C_Start
  2870 ;;		_I2C_Stop
  2871 ;; This function is called by:
  2872 ;;		_LCD_Clear
  2873 ;;		_LCD_SetCursor
  2874 ;;		_LCD_Init
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           
  2879                           ;psect for function _command
  2880  063D                     _command:	
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  2884                           ;command@c stored from wreg
  2885  063D  0020               	movlb	0	; select bank0
  2886  063E  00B1               	movwf	command@c
  2887                           
  2888                           ;PIC16F1827-I2C01.c: 155: int ans;
  2889                           ;PIC16F1827-I2C01.c: 157: ans = I2C_Start(0x3E, 0);
  2890  063F  303E               	movlw	62
  2891  0640  00F4               	movwf	I2C_Start@adrs
  2892  0641  3000               	movlw	0
  2893  0642  00F5               	movwf	I2C_Start@adrs+1
  2894  0643  3000               	movlw	0
  2895  0644  00F6               	movwf	I2C_Start@rw
  2896  0645  3000               	movlw	0
  2897  0646  00F7               	movwf	I2C_Start@rw+1
  2898  0647  3186  268B  3186   	fcall	_I2C_Start
  2899  064A  0875               	movf	?_I2C_Start+1,w
  2900  064B  0020               	movlb	0	; select bank0
  2901  064C  01B3               	clrf	command@ans+1
  2902  064D  07B3               	addwf	command@ans+1,f
  2903  064E  0874               	movf	?_I2C_Start,w
  2904  064F  01B2               	clrf	command@ans
  2905  0650  07B2               	addwf	command@ans,f
  2906                           
  2907                           ;PIC16F1827-I2C01.c: 158: if (ans == 0) {
  2908  0651  0833               	movf	command@ans+1,w
  2909  0652  0432               	iorwf	command@ans,w
  2910  0653  1D03               	skipz
  2911  0654  2E5E               	goto	l151
  2912                           
  2913                           ;PIC16F1827-I2C01.c: 160: I2C_Send(0b10000000);
  2914  0655  3080               	movlw	128
  2915  0656  3186  26CA  3186   	fcall	_I2C_Send
  2916                           
  2917                           ;PIC16F1827-I2C01.c: 161: I2C_Send(c);
  2918  0659  0020               	movlb	0	; select bank0
  2919  065A  0831               	movf	command@c,w
  2920  065B  3186  26CA  3186   	fcall	_I2C_Send
  2921  065E                     l151:	
  2922                           
  2923                           ;PIC16F1827-I2C01.c: 162: }
  2924                           ;PIC16F1827-I2C01.c: 163: I2C_Stop();
  2925  065E  3187  2722  3186   	fcall	_I2C_Stop
  2926                           
  2927                           ;PIC16F1827-I2C01.c: 164: _delay((unsigned long)((26)*(8000000/4000000.0)));
  2928  0661  3011               	movlw	17
  2929  0662  0020               	movlb	0	; select bank0
  2930  0663  00B0               	movwf	??_command
  2931  0664                     u1867:	
  2932  0664  0BB0               	decfsz	??_command,f
  2933  0665  2E64               	goto	u1867
  2934  0666  0008               	return
  2935  0667                     __end_of_command:	
  2936                           
  2937                           	psect	text13
  2938  0722                     __ptext13:	
  2939 ;; *************** function _I2C_Stop *****************
  2940 ;; Defined at:
  2941 ;;		line 127 in file "PIC16F1827-I2C01.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;		None               void
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, pclath, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2955 ;;      Params:         0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0
  2958 ;;      Totals:         0       0       0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    2
  2962 ;; This function calls:
  2963 ;;		_I2C_IdleCheck
  2964 ;; This function is called by:
  2965 ;;		_command
  2966 ;;		_LCD_Putc
  2967 ;;		_LCD_Puts
  2968 ;;		_RTC_Write
  2969 ;;		_RTC_Read
  2970 ;;		_LCD_CreateChar
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _I2C_Stop
  2976  0722                     _I2C_Stop:	
  2977                           
  2978                           ;PIC16F1827-I2C01.c: 129: I2C_IdleCheck(0x5);
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2982  0722  3005               	movlw	5
  2983  0723  3187  2711         	fcall	_I2C_IdleCheck
  2984                           
  2985                           ;PIC16F1827-I2C01.c: 130: SSP1CON2bits.PEN = 1;
  2986  0725  0024               	movlb	4	; select bank4
  2987  0726  1516               	bsf	22,2	;volatile
  2988  0727  0008               	return
  2989  0728                     __end_of_I2C_Stop:	
  2990                           
  2991                           	psect	text14
  2992  068B                     __ptext14:	
  2993 ;; *************** function _I2C_Start *****************
  2994 ;; Defined at:
  2995 ;;		line 103 in file "PIC16F1827-I2C01.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  adrs            2    4[COMMON] int 
  2998 ;;  rw              2    6[COMMON] int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  2    4[COMMON] int 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3010 ;;      Params:         4       0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0
  3012 ;;      Temps:          2       0       0       0       0       0
  3013 ;;      Totals:         6       0       0       0       0       0
  3014 ;;Total ram usage:        6 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    2
  3017 ;; This function calls:
  3018 ;;		_I2C_IdleCheck
  3019 ;; This function is called by:
  3020 ;;		_command
  3021 ;;		_LCD_Putc
  3022 ;;		_LCD_Puts
  3023 ;;		_RTC_Write
  3024 ;;		_RTC_Read
  3025 ;;		_LCD_CreateChar
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _I2C_Start
  3031  068B                     _I2C_Start:	
  3032                           
  3033                           ;PIC16F1827-I2C01.c: 105: I2C_IdleCheck(0x5);
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3037  068B  3005               	movlw	5
  3038  068C  3187  2711  3186   	fcall	_I2C_IdleCheck
  3039                           
  3040                           ;PIC16F1827-I2C01.c: 106: SSP1CON2bits.SEN = 1;
  3041  068F  0024               	movlb	4	; select bank4
  3042  0690  1416               	bsf	22,0	;volatile
  3043                           
  3044                           ;PIC16F1827-I2C01.c: 108: I2C_IdleCheck(0x5);
  3045  0691  3005               	movlw	5
  3046  0692  3187  2711  3186   	fcall	_I2C_IdleCheck
  3047                           
  3048                           ;PIC16F1827-I2C01.c: 109: AckCheck = 1;
  3049  0695  3001               	movlw	1
  3050  0696  0020               	movlb	0	; select bank0
  3051  0697  00A0               	movwf	_AckCheck
  3052  0698  3000               	movlw	0
  3053  0699  00A1               	movwf	_AckCheck+1
  3054                           
  3055                           ;PIC16F1827-I2C01.c: 110: SSP1BUF = (char) ((adrs << 1) + rw);
  3056  069A  3574               	lslf	I2C_Start@adrs,w
  3057  069B  0776               	addwf	I2C_Start@rw,w
  3058  069C  0024               	movlb	4	; select bank4
  3059  069D  0091               	movwf	17	;volatile
  3060  069E                     l1294:	
  3061                           ;PIC16F1827-I2C01.c: 111: while (AckCheck);
  3062                           
  3063  069E  0020               	movlb	0	; select bank0
  3064  069F  0821               	movf	_AckCheck+1,w
  3065  06A0  0420               	iorwf	_AckCheck,w
  3066  06A1  1D03               	skipz
  3067  06A2  2E9E               	goto	l1294
  3068                           
  3069                           ;PIC16F1827-I2C01.c: 112: return SSP1CON2bits.ACKSTAT;
  3070  06A3  0024               	movlb	4	; select bank4
  3071  06A4  0E16               	swapf	22,w	;volatile
  3072  06A5  0C89               	rrf	9,f
  3073  06A6  0C89               	rrf	9,f
  3074  06A7  3901               	andlw	1
  3075  06A8  00F8               	movwf	??_I2C_Start
  3076  06A9  01F9               	clrf	??_I2C_Start+1
  3077  06AA  0878               	movf	??_I2C_Start,w
  3078  06AB  00F4               	movwf	?_I2C_Start
  3079  06AC  0879               	movf	??_I2C_Start+1,w
  3080  06AD  00F5               	movwf	?_I2C_Start+1
  3081  06AE  0008               	return
  3082  06AF                     __end_of_I2C_Start:	
  3083                           
  3084                           	psect	text15
  3085  06CA                     __ptext15:	
  3086 ;; *************** function _I2C_Send *****************
  3087 ;; Defined at:
  3088 ;;		line 133 in file "PIC16F1827-I2C01.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  dt              1    wreg     unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  dt              1    4[COMMON] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2  141[COMMON] int 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3102 ;;      Params:         0       0       0       0       0       0
  3103 ;;      Locals:         1       0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0
  3105 ;;      Totals:         1       0       0       0       0       0
  3106 ;;Total ram usage:        1 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    2
  3109 ;; This function calls:
  3110 ;;		_I2C_IdleCheck
  3111 ;; This function is called by:
  3112 ;;		_command
  3113 ;;		_LCD_Putc
  3114 ;;		_LCD_Puts
  3115 ;;		_RTC_Write
  3116 ;;		_RTC_Read
  3117 ;;		_LCD_CreateChar
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _I2C_Send
  3123  06CA                     _I2C_Send:	
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  3127                           ;I2C_Send@dt stored from wreg
  3128  06CA  00F4               	movwf	I2C_Send@dt
  3129                           
  3130                           ;PIC16F1827-I2C01.c: 134: I2C_IdleCheck(0x5);
  3131  06CB  3005               	movlw	5
  3132  06CC  3187  2711  3186   	fcall	_I2C_IdleCheck
  3133                           
  3134                           ;PIC16F1827-I2C01.c: 135: AckCheck = 1;
  3135  06CF  3001               	movlw	1
  3136  06D0  0020               	movlb	0	; select bank0
  3137  06D1  00A0               	movwf	_AckCheck
  3138  06D2  3000               	movlw	0
  3139  06D3  00A1               	movwf	_AckCheck+1
  3140                           
  3141                           ;PIC16F1827-I2C01.c: 136: SSP1BUF = dt;
  3142  06D4  0874               	movf	I2C_Send@dt,w
  3143  06D5  0024               	movlb	4	; select bank4
  3144  06D6  0091               	movwf	17	;volatile
  3145  06D7                     l1310:	
  3146                           ;PIC16F1827-I2C01.c: 137: while (AckCheck);
  3147                           
  3148  06D7  0020               	movlb	0	; select bank0
  3149  06D8  0821               	movf	_AckCheck+1,w
  3150  06D9  0420               	iorwf	_AckCheck,w
  3151  06DA  1D03               	skipz
  3152  06DB  2ED7               	goto	l1310
  3153                           
  3154                           ;PIC16F1827-I2C01.c: 138: return SSP1CON2bits.ACKSTAT;
  3155                           ;	Return value of _I2C_Send is never used
  3156  06DC  0024               	movlb	4	; select bank4
  3157  06DD  0816               	movf	22,w	;volatile
  3158  06DE  0008               	return
  3159  06DF                     __end_of_I2C_Send:	
  3160                           
  3161                           	psect	text16
  3162  0711                     __ptext16:	
  3163 ;; *************** function _I2C_IdleCheck *****************
  3164 ;; Defined at:
  3165 ;;		line 87 in file "PIC16F1827-I2C01.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  mask            1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  mask            1    3[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3179 ;;      Params:         0       0       0       0       0       0
  3180 ;;      Locals:         1       0       0       0       0       0
  3181 ;;      Temps:          1       0       0       0       0       0
  3182 ;;      Totals:         2       0       0       0       0       0
  3183 ;;Total ram usage:        2 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_I2C_Start
  3190 ;;		_I2C_rStart
  3191 ;;		_I2C_Stop
  3192 ;;		_I2C_Send
  3193 ;;		_I2C_Receive
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _I2C_IdleCheck
  3199  0711                     _I2C_IdleCheck:	
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _I2C_IdleCheck: [wreg+status,2+status,0]
  3203                           ;I2C_IdleCheck@mask stored from wreg
  3204  0711  00F3               	movwf	I2C_IdleCheck@mask
  3205  0712                     l1284:	
  3206                           ;PIC16F1827-I2C01.c: 88: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  3207                           
  3208  0712  0873               	movf	I2C_IdleCheck@mask,w
  3209  0713  0024               	movlb	4	; select bank4
  3210  0714  0514               	andwf	20,w	;volatile
  3211  0715  00F2               	movwf	??_I2C_IdleCheck
  3212  0716  0816               	movf	22,w	;volatile
  3213  0717  391F               	andlw	31
  3214  0718  0472               	iorwf	??_I2C_IdleCheck,w
  3215  0719  1903               	btfsc	3,2
  3216  071A  0008               	return
  3217  071B  2F12               	goto	l1284
  3218  071C                     __end_of_I2C_IdleCheck:	
  3219                           
  3220                           	psect	text17
  3221  06F2                     __ptext17:	
  3222 ;; *************** function _InitI2C_Master *****************
  3223 ;; Defined at:
  3224 ;;		line 91 in file "PIC16F1827-I2C01.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;		None               void
  3231 ;; Registers used:
  3232 ;;		wreg
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3238 ;;      Params:         0       0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0
  3241 ;;      Totals:         0       0       0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _InitI2C_Master
  3254  06F2                     _InitI2C_Master:	
  3255                           
  3256                           ;PIC16F1827-I2C01.c: 92: SSP1STAT = 0b10000000;
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _InitI2C_Master: [wreg]
  3260  06F2  3080               	movlw	128
  3261  06F3  0024               	movlb	4	; select bank4
  3262  06F4  0094               	movwf	20	;volatile
  3263                           
  3264                           ;PIC16F1827-I2C01.c: 93: SSP1CON1 = 0b00101000;
  3265  06F5  3028               	movlw	40
  3266  06F6  0095               	movwf	21	;volatile
  3267                           
  3268                           ;PIC16F1827-I2C01.c: 94: SSP1ADD = 0x13;
  3269  06F7  3013               	movlw	19
  3270  06F8  0092               	movwf	18	;volatile
  3271                           
  3272                           ;PIC16F1827-I2C01.c: 95: SSP1IE = 1;
  3273  06F9  0021               	movlb	1	; select bank1
  3274  06FA  1591               	bsf	17,3	;volatile
  3275                           
  3276                           ;PIC16F1827-I2C01.c: 96: BCL1IE = 1;
  3277  06FB  1592               	bsf	18,3	;volatile
  3278                           
  3279                           ;PIC16F1827-I2C01.c: 97: PEIE = 1;
  3280  06FC  170B               	bsf	11,6	;volatile
  3281                           
  3282                           ;PIC16F1827-I2C01.c: 98: GIE = 1;
  3283  06FD  178B               	bsf	11,7	;volatile
  3284                           
  3285                           ;PIC16F1827-I2C01.c: 99: SSP1IF = 0;
  3286  06FE  0020               	movlb	0	; select bank0
  3287  06FF  1191               	bcf	17,3	;volatile
  3288                           
  3289                           ;PIC16F1827-I2C01.c: 100: BCL1IF = 0;
  3290  0700  1192               	bcf	18,3	;volatile
  3291  0701  0008               	return
  3292  0702                     __end_of_InitI2C_Master:	
  3293                           
  3294                           	psect	intentry
  3295  0004                     __pintentry:	
  3296 ;; *************** function _InterFunction *****************
  3297 ;; Defined at:
  3298 ;;		line 56 in file "PIC16F1827-I2C01.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;		None               void
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3312 ;;      Params:         0       0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0
  3314 ;;      Temps:          2       0       0       0       0       0
  3315 ;;      Totals:         2       0       0       0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		Interrupt level 1
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325  0004                     _InterFunction:	
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _InterFunction: [wreg+status,2+status,0]
  3329  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3330  0005  3180               	pagesel	$
  3331  0006  0020               	movlb	0	; select bank0
  3332  0007  087F               	movf	127,w
  3333  0008  00F1               	movwf	??_InterFunction+1
  3334                           
  3335                           ;PIC16F1827-I2C01.c: 57: if (SSP1IF == 1) {
  3336  0009  1D91               	btfss	17,3	;volatile
  3337  000A  2813               	goto	i1l1532
  3338                           
  3339                           ;PIC16F1827-I2C01.c: 58: if (AckCheck == 1) AckCheck = 0;
  3340  000B  3001               	movlw	1
  3341  000C  0620               	xorwf	_AckCheck,w
  3342  000D  0421               	iorwf	_AckCheck+1,w
  3343  000E  1D03               	skipz
  3344  000F  2812               	goto	i1l1530
  3345  0010  01A0               	clrf	_AckCheck
  3346  0011  01A1               	clrf	_AckCheck+1
  3347  0012                     i1l1530:	
  3348                           
  3349                           ;PIC16F1827-I2C01.c: 59: SSP1IF = 0;
  3350  0012  1191               	bcf	17,3	;volatile
  3351  0013                     i1l1532:	
  3352                           
  3353                           ;PIC16F1827-I2C01.c: 60: }
  3354                           ;PIC16F1827-I2C01.c: 61: if (BCL1IF == 1) {
  3355  0013  1992               	btfsc	18,3	;volatile
  3356                           
  3357                           ;PIC16F1827-I2C01.c: 62: BCL1IF = 0;
  3358  0014  1192               	bcf	18,3	;volatile
  3359                           
  3360                           ;PIC16F1827-I2C01.c: 63: }
  3361                           ;PIC16F1827-I2C01.c: 64: if (TMR1IF == 1) {
  3362  0015  1C11               	btfss	17,0	;volatile
  3363  0016  286A               	goto	i1l115
  3364                           
  3365                           ;PIC16F1827-I2C01.c: 65: TMR1IF = 0;
  3366  0017  1011               	bcf	17,0	;volatile
  3367                           
  3368                           ;PIC16F1827-I2C01.c: 66: cnt_t1++;
  3369  0018  3001               	movlw	1
  3370  0019  00F0               	movwf	??_InterFunction
  3371  001A  0870               	movf	??_InterFunction,w
  3372  001B  07A6               	addwf	_cnt_t1,f
  3373                           
  3374                           ;PIC16F1827-I2C01.c: 68: if (RA0 == 0) {
  3375  001C  180C               	btfsc	12,0	;volatile
  3376  001D  2827               	goto	i1l1546
  3377                           
  3378                           ;PIC16F1827-I2C01.c: 69: if (cnt_sw < 100 + 1) cnt_sw++;
  3379  001E  3065               	movlw	101
  3380  001F  0224               	subwf	_cnt_sw,w
  3381  0020  1803               	skipnc
  3382  0021  2843               	goto	i1l1564
  3383  0022  3001               	movlw	1
  3384  0023  00F0               	movwf	??_InterFunction
  3385  0024  0870               	movf	??_InterFunction,w
  3386  0025  07A4               	addwf	_cnt_sw,f
  3387                           
  3388                           ;PIC16F1827-I2C01.c: 70: } else {
  3389  0026  2843               	goto	i1l1564
  3390  0027                     i1l1546:	
  3391                           
  3392                           ;PIC16F1827-I2C01.c: 71: if (cnt_sw >= 100)long_hold_flag2 = 1;
  3393  0027  3064               	movlw	100
  3394  0028  0224               	subwf	_cnt_sw,w
  3395  0029  1C03               	skipc
  3396  002A  282E               	goto	i1l1550
  3397  002B  01AA               	clrf	_long_hold_flag2
  3398  002C  0AAA               	incf	_long_hold_flag2,f
  3399  002D  2842               	goto	i1l1562
  3400  002E                     i1l1550:	
  3401                           
  3402                           ;PIC16F1827-I2C01.c: 72: else if (cnt_sw >= 5 && cnt_sw < 100)long_hold_flag1 = 1;
  3403  002E  3005               	movlw	5
  3404  002F  0224               	subwf	_cnt_sw,w
  3405  0030  1C03               	skipc
  3406  0031  2839               	goto	i1l1556
  3407  0032  3064               	movlw	100
  3408  0033  0224               	subwf	_cnt_sw,w
  3409  0034  1803               	skipnc
  3410  0035  2839               	goto	i1l1556
  3411  0036  01A8               	clrf	_long_hold_flag1
  3412  0037  0AA8               	incf	_long_hold_flag1,f
  3413  0038  2842               	goto	i1l1562
  3414  0039                     i1l1556:	
  3415                           
  3416                           ;PIC16F1827-I2C01.c: 73: else if (cnt_sw >= 1 && cnt_sw < 5)press_flag = 1;
  3417  0039  0824               	movf	_cnt_sw,w
  3418  003A  1903               	btfsc	3,2
  3419  003B  2842               	goto	i1l1562
  3420  003C  3005               	movlw	5
  3421  003D  0224               	subwf	_cnt_sw,w
  3422  003E  1803               	skipnc
  3423  003F  2842               	goto	i1l1562
  3424  0040  01AD               	clrf	_press_flag
  3425  0041  0AAD               	incf	_press_flag,f
  3426  0042                     i1l1562:	
  3427                           
  3428                           ;PIC16F1827-I2C01.c: 74: cnt_sw = 0;
  3429  0042  01A4               	clrf	_cnt_sw
  3430  0043                     i1l1564:	
  3431                           
  3432                           ;PIC16F1827-I2C01.c: 75: }
  3433                           ;PIC16F1827-I2C01.c: 76: if (RA1 == 0) {
  3434  0043  188C               	btfsc	12,1	;volatile
  3435  0044  284E               	goto	i1l1570
  3436                           
  3437                           ;PIC16F1827-I2C01.c: 77: if (cnt_swx < 100 + 1) cnt_swx++;
  3438  0045  3065               	movlw	101
  3439  0046  0225               	subwf	_cnt_swx,w
  3440  0047  1803               	skipnc
  3441  0048  286A               	goto	i1l115
  3442  0049  3001               	movlw	1
  3443  004A  00F0               	movwf	??_InterFunction
  3444  004B  0870               	movf	??_InterFunction,w
  3445  004C  07A5               	addwf	_cnt_swx,f
  3446                           
  3447                           ;PIC16F1827-I2C01.c: 78: } else {
  3448  004D  286A               	goto	i1l115
  3449  004E                     i1l1570:	
  3450                           
  3451                           ;PIC16F1827-I2C01.c: 79: if (cnt_swx >= 100)long_hold_flag2x = 1;
  3452  004E  3064               	movlw	100
  3453  004F  0225               	subwf	_cnt_swx,w
  3454  0050  1C03               	skipc
  3455  0051  2855               	goto	i1l1574
  3456  0052  01AB               	clrf	_long_hold_flag2x
  3457  0053  0AAB               	incf	_long_hold_flag2x,f
  3458  0054  2869               	goto	i1l1586
  3459  0055                     i1l1574:	
  3460                           
  3461                           ;PIC16F1827-I2C01.c: 80: else if (cnt_swx >= 5 && cnt_swx < 100)long_hold_flag1x = 1;
  3462  0055  3005               	movlw	5
  3463  0056  0225               	subwf	_cnt_swx,w
  3464  0057  1C03               	skipc
  3465  0058  2860               	goto	i1l1580
  3466  0059  3064               	movlw	100
  3467  005A  0225               	subwf	_cnt_swx,w
  3468  005B  1803               	skipnc
  3469  005C  2860               	goto	i1l1580
  3470  005D  01A9               	clrf	_long_hold_flag1x
  3471  005E  0AA9               	incf	_long_hold_flag1x,f
  3472  005F  2869               	goto	i1l1586
  3473  0060                     i1l1580:	
  3474                           
  3475                           ;PIC16F1827-I2C01.c: 81: else if (cnt_swx >= 1 && cnt_swx < 5)press_flagx = 1;
  3476  0060  0825               	movf	_cnt_swx,w
  3477  0061  1903               	btfsc	3,2
  3478  0062  2869               	goto	i1l1586
  3479  0063  3005               	movlw	5
  3480  0064  0225               	subwf	_cnt_swx,w
  3481  0065  1803               	skipnc
  3482  0066  2869               	goto	i1l1586
  3483  0067  01AE               	clrf	_press_flagx
  3484  0068  0AAE               	incf	_press_flagx,f
  3485  0069                     i1l1586:	
  3486                           
  3487                           ;PIC16F1827-I2C01.c: 82: cnt_swx = 0;
  3488  0069  01A5               	clrf	_cnt_swx
  3489  006A                     i1l115:	
  3490  006A  0871               	movf	??_InterFunction+1,w
  3491  006B  00FF               	movwf	127
  3492  006C  107E               	bcf	126,0	;clear compiler interrupt flag
  3493  006D  0009               	retfie
  3494  006E                     __end_of_InterFunction:	
  3495  007E                     btemp	set	126	;btemp
  3496  007E                     pic14e$flags	set	126
  3497  007E                     wtemp	set	126
  3498  007E                     wtemp0	set	126
  3499  0080                     wtemp1	set	128
  3500  0082                     wtemp2	set	130
  3501  0084                     wtemp3	set	132
  3502  0086                     wtemp4	set	134
  3503  0088                     wtemp5	set	136
  3504  007F                     wtemp6	set	127
  3505  007E                     ttemp	set	126
  3506  007E                     ttemp0	set	126
  3507  0081                     ttemp1	set	129
  3508  0084                     ttemp2	set	132
  3509  0087                     ttemp3	set	135
  3510  007F                     ttemp4	set	127
  3511  007E                     ltemp	set	126
  3512  007E                     ltemp0	set	126
  3513  0082                     ltemp1	set	130
  3514  0086                     ltemp2	set	134
  3515  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     14      34
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _RTC_Write->_I2C_Start
    _RTC_Read->_I2C_Start
    _RTC_Read->_I2C_rStart
    _I2C_rStart->_I2C_IdleCheck
    _I2C_Receive->_I2C_IdleCheck
    _LCD_Puts->_I2C_Start
    _LCD_Putc->_I2C_Start
    _command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _InterFunction in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_SetCursor
    _LCD_SetCursor->_command
    _LCD_Init->_LCD_Clear
    _LCD_Clear->_command

Critical Paths under _InterFunction in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterFunction in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterFunction in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterFunction in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterFunction in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13750
                                             12 BANK0      2     2      0
                     _InitI2C_Master
                           _LCD_Init
                           _LCD_Putc
                           _LCD_Puts
                      _LCD_SetCursor
                           _RTC_Read
                          _RTC_Write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     680
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2755
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _RTC_Write                                            5     4      1    2074
                                              0 BANK0      5     4      1
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _RTC_Read                                             5     5      0    1358
                                              0 BANK0      5     5      0
                        _I2C_Receive
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                         _I2C_rStart
 ---------------------------------------------------------------------------------
 (2) _I2C_rStart                                           6     2      4     194
                                              4 COMMON     6     2      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          4     2      2     131
                                              4 COMMON     4     2      2
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (1) _LCD_SetCursor                                        8     4      4    2758
                                              4 BANK0      8     4      4
                            _command
 ---------------------------------------------------------------------------------
 (1) _LCD_Puts                                             5     3      2    1230
                                              0 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCD_Putc                                             4     4      0     965
                                              0 BANK0      4     4      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0    1930
                                              6 BANK0      3     3      0
                          _LCD_Clear
                            _command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0     965
                                              4 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              4     4      0     965
                                              0 BANK0      4     4      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0      22
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            6     2      4     834
                                              4 COMMON     6     2      4
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (2) _I2C_Send                                             1     1      0      44
                                              4 COMMON     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_IdleCheck                                        2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitI2C_Master                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterFunction                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitI2C_Master
   _LCD_Init
     _LCD_Clear
       _command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _LCD_Putc
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _LCD_SetCursor
     _command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTC_Read
     _I2C_Receive
       _I2C_IdleCheck
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
     _I2C_rStart
       _I2C_IdleCheck
   _RTC_Write
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   ___awdiv
   ___awmod

 _InterFunction (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      22       6       42.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2E      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jan 07 07:55:39 2015

      __size_of_I2C_Start 0024                        _DD 007A                        _EE 0022  
                      _MM 007B                        _YY 0023              ___awdiv@sign 0031  
                      _hh 0027                        _mm 002C                        _ss 002F  
           _LCD_SetCursor 06DF                       l151 065E                       l163 0634  
                     l183 060A                       l187 04FF                       l188 0520  
                     _GIE 005F                       _RA0 0060                       _RA1 0061  
                     u965 0545                       u985 0554                       u995 055B  
            ___awmod@sign 0078       __size_of_I2C_rStart 0024      __size_of_I2C_Receive 001B  
            __CFG_BORV$HI 0000                       wreg 0009              __CFG_LVP$OFF 0000  
                    l2000 04DC                      l1310 06D7                      l2114 024B  
                    l2106 021D                      l1332 067A                      l2140 0298  
                    l2124 0262                      l2222 0408                      l2214 03DB  
                    l2126 0266                      l2142 01F2                      l2046 00EE  
                    l1520 056B                      l1512 055A                      l2232 041F  
                    l2160 02FD                      l2144 02A2                      l2128 026F  
                    l1506 0542                      l2234 0423                      l2250 03AF  
                    l2138 0293                      l1284 0712                      l1508 054E  
                    l1516 0563                      l2252 045F                      l2236 042C  
                    l2180 0345                      l1294 069E                      l2246 044F  
                    l2182 034E                      l2248 0454                      l2192 0371  
                    l2168 032A                      l2194 0376                      l2178 0341  
                    l2196 02D2                      l1910 05CA                      l1494 0535  
                    l2198 0381                      l1912 05E6                      l1498 053C  
                    l1974 04A5                      l1992 04CB                      l1984 04AD  
                    l1968 049A                      l1986 04B9                      l1996 04D4  
                    STR_1 0800                      STR_2 0800                      STR_3 0800  
                    u1535 04B0                      u1555 04BA                      u1565 04C4  
                    u1807 0526                      u1575 04CC                      u1817 05E3  
                    u1827 063A                      u1837 0577                      u1847 059B  
                    u1857 070B                      u1867 0664                      _PEIE 005E  
                    u1797 0610                      _WPUB 020D                      _main 008D  
      __size_of_LCD_Clear 000F                      fsr0h 0005                      fsr1h 0007  
                    fsr0l 0004                      indf0 0000                      indf1 0001  
                    fsr1l 0006          __end_of_I2C_Send 06DF                      btemp 007E  
        __end_of_I2C_Stop 0728                      ltemp 007E                      start 006E  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
  __size_of_I2C_IdleCheck 000B           _long_hold_flag1 0028           _long_hold_flag2 002A  
        __end_of_LCD_Init 05B0          __end_of_LCD_Putc 063D          __end_of_LCD_Puts 05E9  
          ?_LCD_SetCursor 0034                     ?_main 0070           __end_of___awdiv 04E3  
             LCD_Putc@ans 0032             __CFG_WDTE$OFF 0000           __end_of___awmod 0572  
         ___awdiv@divisor 0072                     _T1CON 0018                     i1l115 006A  
         ___awdiv@counter 0030               LCD_Puts@ans 0033                     _TMR1H 0017  
                   _TMR1L 0016                     _PORTA 000C                     _PORTB 000D  
                   _TRISA 008C                     _TRISB 008D              RTC_Read@data 0032  
           __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000           __end_of_command 0667  
        __end_of_RTC_Read 052B         __end_of_I2C_Start 06AF                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
  __size_of_InterFunction 006A                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F        __size_of_RTC_Write 002A  
        ??_InitI2C_Master 0072            __CFG_MCLRE$OFF 0000           __initialization 0070  
            __end_of_main 048F          _long_hold_flag1x 0029          _long_hold_flag2x 002B  
                  ??_main 003C         __end_of_LCD_Clear 0711            __CFG_PLLEN$OFF 0000  
            RTC_Write@Reg 0032              RTC_Write@ans 0033                    _BCL1IE 0493  
                  _BCL1IF 0093             _I2C_IdleCheck 0711          ___awdiv@dividend 0074  
                  _ANSELA 018C                    _ANSELB 018D                    i1l1530 0012  
                  i1l1532 0013                    i1l1550 002E                    i1l1570 004E  
                  i1l1562 0042                    i1l1546 0027                    i1l1580 0060  
                  i1l1556 0039                    i1l1564 0043                    i1l1574 0055  
                  i1l1586 0069                    _OSCCON 0099                    _TMR1IF 0088  
                  _SSP1IE 048B                    _SSP1IF 008B              ??_I2C_rStart 0078  
               ??___awdiv 0076                 ??___awmod 0076           ??_LCD_SetCursor 007A  
                  _cnt_t1 0026                    _cnt_sw 0024          ___awdiv@quotient 0032  
         ___awmod@divisor 0072           ___awmod@counter 0077             _InterFunction 0004  
               ??_command 0030         __end_of_RTC_Write 0613                 ?_I2C_Send 0070  
               ?_I2C_Stop 0070        __end_of_I2C_rStart 068B            ?_I2C_IdleCheck 0070  
 __end_of__initialization 0089                 ?_LCD_Init 0070                 ?_LCD_Putc 0070  
               ?_LCD_Puts 0030            __pcstackCOMMON 0070                 LCD_Putc@c 0031  
            __pidataBANK0 0728                 LCD_Puts@s 0030            ?_InterFunction 0070  
               ?_RTC_Read 0070                ??_I2C_Send 0074                ??_I2C_Stop 0074  
              __pbssBANK0 0020                ??_LCD_Init 0036                ??_LCD_Putc 0030  
              ??_LCD_Puts 0032                __pmaintext 008D                I2C_Send@dt 0074  
              __pintentry 0004                ??_RTC_Read 0030             ??_I2C_Receive 0076  
         ??_I2C_IdleCheck 0072                   _SSP1ADD 0212                   _SSP1BUF 0211  
               _I2C_Start 068B            I2C_Receive@ack 0074                   ___awdiv 048F  
                 ___awmod 052B           ??_InterFunction 0070  LCD_SetCursor@row_offsets 0038  
                 __ptext1 052B                   __ptext2 048F                   __ptext3 05E9  
                 __ptext4 04E3                   __ptext5 0667                   __ptext6 06AF  
                 __ptext7 06DF                   __ptext8 05B0                   __ptext9 0613  
                 _command 063D                   _cnt_swx 0025          ___awmod@dividend 0074  
               _LCD_Clear 0702       __end_of_I2C_Receive 06CA                   clrloop0 071D  
    end_of_initialization 0089          LCD_SetCursor@col 0034          LCD_SetCursor@row 0036  
              ?_I2C_Start 0074              I2C_rStart@rw 0076              __pstringtext 0800  
              _press_flag 002D          __CFG_FOSC$INTOSC 0000                ?_LCD_Clear 0070  
               _RTC_Write 05E9         __size_of_I2C_Send 0015         __size_of_I2C_Stop 0006  
              command@ans 0032         __size_of_LCD_Init 003E         __size_of_LCD_Putc 002A  
       __size_of_LCD_Puts 0039               RTC_Read@Reg 0031               RTC_Read@ans 0033  
   __end_of_LCD_SetCursor 06F2   __size_of_InitI2C_Master 0010               _I2C_Receive 06AF  
       __size_of_RTC_Read 0048       start_initialization 0070                ?_RTC_Write 0030  
             ??_I2C_Start 0078               __pdataBANK0 003E               __pbssCOMMON 007A  
               ___latbits 0001             __pcstackBANK0 0030               ??_LCD_Clear 0034  
     __end_of__stringdata 0803                  ?___awdiv 0072                  ?___awmod 0072  
                ?_command 0070               I2C_Start@rw 0076                  _I2C_Send 06CA  
                _I2C_Stop 0722             I2C_Receive@dt 0077     __end_of_I2C_IdleCheck 071C  
             ??_RTC_Write 0031                  _LCD_Init 0572                  _LCD_Putc 0613  
                _LCD_Puts 05B0                 clear_ram0 071C                  _PIE1bits 0091  
                _SSP1CON1 0215                  _SSP1CON2 0216                  _SSP1STAT 0214  
                _AckCheck 0020     __end_of_InterFunction 006E                  _RTC_Read 04E3  
          _InitI2C_Master 06F2               __stringdata 0800             I2C_Start@adrs 0074  
      LCD_SetCursor@F2873 003E                RTC_Write@c 0030                _I2C_rStart 0667  
  __end_of_InitI2C_Master 0702          __size_of___awdiv 0054          __size_of___awmod 0047  
       I2C_IdleCheck@mask 0073              ?_I2C_Receive 0074          __size_of_command 002A  
                __ptext10 0572                  __ptext11 0702                  __ptext12 063D  
                __ptext13 0722                  __ptext14 068B                  __ptext15 06CA  
                __ptext16 0711                  __ptext17 06F2              _SSP1CON2bits 0216  
          I2C_rStart@adrs 0074             __size_of_main 0402           ?_InitI2C_Master 0070  
                command@c 0031               pic14e$flags 007E                  intlevel1 0000  
  __size_of_LCD_SetCursor 0013               ?_I2C_rStart 0074                _OPTION_REG 0095  
             _press_flagx 002E  
