

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jul 18 22:01:55 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	dabs	1,0xD00,48,_BDT
    62                           	dabs	1,0xD38,8,_CtrlTrfData
    63                           	dabs	1,0xD30,8,_SetupPkt
    64  0000                     
    65                           	psect	idataBANK0
    66  00248A                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for I2C_LCD_SetCursor@F9845
    70  00248A  00                 	db	0
    71  00248B  40                 	db	64
    72                           
    73                           ;initializer for epoch_to_caltime@month_cache
    74  00248C  01                 	db	1
    75                           
    76                           	psect	smallconst
    77  000F00                     __psmallconst:
    78                           	opt stack 0
    79  000F00  00                 	db	0
    80  000F01                     _USB_SD_Ptr:
    81                           	opt stack 0
    82  000F01  E2                 	db	low _sd000
    83  000F02  0F                 	db	high _sd000
    84  000F03  4C                 	db	low _sd001
    85  000F04  0F                 	db	high _sd001
    86  000F05  80                 	db	low _sd002
    87  000F06  0F                 	db	high _sd002
    88  000F07                     __end_of_USB_SD_Ptr:
    89                           	opt stack 0
    90  000F07                     _USB_CD_Ptr:
    91                           	opt stack 0
    92  000F07  09                 	db	low _configDescriptor1
    93  000F08  0F                 	db	high _configDescriptor1
    94  000F09                     __end_of_USB_CD_Ptr:
    95                           	opt stack 0
    96  000F09                     _configDescriptor1:
    97                           	opt stack 0
    98  000F09  09                 	db	9
    99  000F0A  02                 	db	2
   100  000F0B  43                 	db	67
   101  000F0C  00                 	db	0
   102  000F0D  02                 	db	2
   103  000F0E  01                 	db	1
   104  000F0F  00                 	db	0
   105  000F10  C0                 	db	192
   106  000F11  32                 	db	50
   107  000F12  09                 	db	9
   108  000F13  04                 	db	4
   109  000F14  00                 	db	0
   110  000F15  00                 	db	0
   111  000F16  01                 	db	1
   112  000F17  02                 	db	2
   113  000F18  02                 	db	2
   114  000F19  01                 	db	1
   115  000F1A  00                 	db	0
   116  000F1B  05                 	db	5
   117  000F1C  24                 	db	36
   118  000F1D  00                 	db	0
   119  000F1E  10                 	db	16
   120  000F1F  01                 	db	1
   121  000F20  04                 	db	4
   122  000F21  24                 	db	36
   123  000F22  02                 	db	2
   124  000F23  02                 	db	2
   125  000F24  05                 	db	5
   126  000F25  24                 	db	36
   127  000F26  06                 	db	6
   128  000F27  00                 	db	0
   129  000F28  01                 	db	1
   130  000F29  05                 	db	5
   131  000F2A  24                 	db	36
   132  000F2B  01                 	db	1
   133  000F2C  00                 	db	0
   134  000F2D  01                 	db	1
   135  000F2E  07                 	db	7
   136  000F2F  05                 	db	5
   137  000F30  81                 	db	129
   138  000F31  03                 	db	3
   139  000F32  08                 	db	8
   140  000F33  00                 	db	0
   141  000F34  02                 	db	2
   142  000F35  09                 	db	9
   143  000F36  04                 	db	4
   144  000F37  01                 	db	1
   145  000F38  00                 	db	0
   146  000F39  02                 	db	2
   147  000F3A  0A                 	db	10
   148  000F3B  00                 	db	0
   149  000F3C  00                 	db	0
   150  000F3D  00                 	db	0
   151  000F3E  07                 	db	7
   152  000F3F  05                 	db	5
   153  000F40  02                 	db	2
   154  000F41  02                 	db	2
   155  000F42  40                 	db	64
   156  000F43  00                 	db	0
   157  000F44  00                 	db	0
   158  000F45  07                 	db	7
   159  000F46  05                 	db	5
   160  000F47  82                 	db	130
   161  000F48  02                 	db	2
   162  000F49  40                 	db	64
   163  000F4A  00                 	db	0
   164  000F4B  00                 	db	0
   165  000F4C                     __end_of_configDescriptor1:
   166                           	opt stack 0
   167  000F4C                     _sd001:
   168                           	opt stack 0
   169  000F4C  34                 	db	52
   170  000F4D  03                 	db	3
   171  000F4E  004D               	dw	77
   172  000F50  0069               	dw	105
   173  000F52  0063               	dw	99
   174  000F54  0072               	dw	114
   175  000F56  006F               	dw	111
   176  000F58  0063               	dw	99
   177  000F5A  0068               	dw	104
   178  000F5C  0069               	dw	105
   179  000F5E  0070               	dw	112
   180  000F60  0020               	dw	32
   181  000F62  0054               	dw	84
   182  000F64  0065               	dw	101
   183  000F66  0063               	dw	99
   184  000F68  0068               	dw	104
   185  000F6A  006E               	dw	110
   186  000F6C  006F               	dw	111
   187  000F6E  006C               	dw	108
   188  000F70  006F               	dw	111
   189  000F72  0067               	dw	103
   190  000F74  0079               	dw	121
   191  000F76  0020               	dw	32
   192  000F78  0049               	dw	73
   193  000F7A  006E               	dw	110
   194  000F7C  0063               	dw	99
   195  000F7E  002E               	dw	46
   196  000F80                     __end_of_sd001:
   197                           	opt stack 0
   198  000F80                     _sd002:
   199                           	opt stack 0
   200  000F80  34                 	db	52
   201  000F81  03                 	db	3
   202  000F82  0043               	dw	67
   203  000F84  0044               	dw	68
   204  000F86  0043               	dw	67
   205  000F88  0020               	dw	32
   206  000F8A  0052               	dw	82
   207  000F8C  0053               	dw	83
   208  000F8E  002D               	dw	45
   209  000F90  0032               	dw	50
   210  000F92  0033               	dw	51
   211  000F94  0032               	dw	50
   212  000F96  0020               	dw	32
   213  000F98  0045               	dw	69
   214  000F9A  006D               	dw	109
   215  000F9C  0075               	dw	117
   216  000F9E  006C               	dw	108
   217  000FA0  0061               	dw	97
   218  000FA2  0074               	dw	116
   219  000FA4  0069               	dw	105
   220  000FA6  006F               	dw	111
   221  000FA8  006E               	dw	110
   222  000FAA  0020               	dw	32
   223  000FAC  0044               	dw	68
   224  000FAE  0065               	dw	101
   225  000FB0  006D               	dw	109
   226  000FB2  006F               	dw	111
   227  000FB4                     __end_of_sd002:
   228                           	opt stack 0
   229  000FB4                     _weekday_3char:
   230                           	opt stack 0
   231  000FB4  53                 	db	83
   232  000FB5  55                 	db	85
   233  000FB6  4E                 	db	78
   234  000FB7  00                 	db	0
   235  000FB8  4D                 	db	77
   236  000FB9  4F                 	db	79
   237  000FBA  4E                 	db	78
   238  000FBB  00                 	db	0
   239  000FBC  54                 	db	84
   240  000FBD  55                 	db	85
   241  000FBE  45                 	db	69
   242  000FBF  00                 	db	0
   243  000FC0  57                 	db	87
   244  000FC1  45                 	db	69
   245  000FC2  44                 	db	68
   246  000FC3  00                 	db	0
   247  000FC4  54                 	db	84
   248  000FC5  48                 	db	72
   249  000FC6  55                 	db	85
   250  000FC7  00                 	db	0
   251  000FC8  46                 	db	70
   252  000FC9  52                 	db	82
   253  000FCA  49                 	db	73
   254  000FCB  00                 	db	0
   255  000FCC  53                 	db	83
   256  000FCD  41                 	db	65
   257  000FCE  54                 	db	84
   258  000FCF  00                 	db	0
   259  000FD0                     __end_of_weekday_3char:
   260                           	opt stack 0
   261  000FD0                     _device_dsc:
   262                           	opt stack 0
   263  000FD0  12                 	db	18
   264  000FD1  01                 	db	1
   265  000FD2  0200               	dw	512
   266  000FD4  02                 	db	2
   267  000FD5  00                 	db	0
   268  000FD6  00                 	db	0
   269  000FD7  08                 	db	8
   270  000FD8  04D8               	dw	1240
   271  000FDA  000A               	dw	10
   272  000FDC  0100               	dw	256
   273  000FDE  01                 	db	1
   274  000FDF  02                 	db	2
   275  000FE0  00                 	db	0
   276  000FE1  01                 	db	1
   277  000FE2                     __end_of_device_dsc:
   278                           	opt stack 0
   279  000FE2                     _sd000:
   280                           	opt stack 0
   281  000FE2  04                 	db	4
   282  000FE3  03                 	db	3
   283  000FE4  0409               	dw	1033
   284  000FE6                     __end_of_sd000:
   285                           	opt stack 0
   286  0000                     _ANCON0	set	3912
   287  0000                     _ANCON1	set	3913
   288  0000                     _PADCFG1bits	set	3900
   289  0000                     _RTCCAL	set	3902
   290  0000                     _RTCCFGbits	set	3903
   291  0000                     _RTCVALH	set	3899
   292  0000                     _RTCVALL	set	3898
   293  0000                     _T5CONbits	set	3874
   294  0000                     _UADDR	set	3896
   295  0000                     _UCFG	set	3897
   296  0000                     _UEIE	set	3895
   297  0000                     _UEP0bits	set	3878
   298  0000                     _UIE	set	3894
   299  0000                     _UIEbits	set	3894
   300  0000                     _UEP0	set	3878
   301  0000                     _UEP1	set	3879
   302  0000                     _ADRES	set	4035
   303  0000                     _ADCON0bits	set	4034
   304  0000                     _ADCON1bits	set	4033
   305  0000                     _BAUDCON1bits	set	3966
   306  0000                     _CTMUCONH	set	4019
   307  0000                     _CTMUCONHbits	set	4019
   308  0000                     _CTMUCONL	set	4018
   309  0000                     _CTMUCONLbits	set	4018
   310  0000                     _CTMUICON	set	4017
   311  0000                     _EECON2	set	4007
   312  0000                     _INTCON2bits	set	4081
   313  0000                     _INTCONbits	set	4082
   314  0000                     _IPR1bits	set	3999
   315  0000                     _IPR2bits	set	4002
   316  0000                     _IPR5bits	set	3993
   317  0000                     _LATBbits	set	3978
   318  0000                     _OSCCONbits	set	4051
   319  0000                     _OSCTUNEbits	set	3995
   320  0000                     _PIE1bits	set	3997
   321  0000                     _PIE2bits	set	4000
   322  0000                     _PIE5bits	set	3985
   323  0000                     _PIR1bits	set	3998
   324  0000                     _PIR2bits	set	4001
   325  0000                     _PIR5bits	set	3992
   326  0000                     _RCONbits	set	4048
   327  0000                     _RCREG1	set	4015
   328  0000                     _RCSTA1bits	set	4012
   329  0000                     _SPBRG1	set	4016
   330  0000                     _SPBRGH1	set	3967
   331  0000                     _SSP1ADD	set	4040
   332  0000                     _SSP1BUF	set	4041
   333  0000                     _SSP1CON1	set	4038
   334  0000                     _SSP1CON2	set	4037
   335  0000                     _SSP1CON2bits	set	4037
   336  0000                     _SSP1STAT	set	4039
   337  0000                     _T0CONbits	set	4053
   338  0000                     _T1CONbits	set	4045
   339  0000                     _T3CONbits	set	3961
   340  0000                     _TMR1H	set	4047
   341  0000                     _TRISA	set	3986
   342  0000                     _TRISB	set	3987
   343  0000                     _TRISC	set	3988
   344  0000                     _TXREG1	set	4014
   345  0000                     _TXSTA1bits	set	4013
   346  0000                     _UCON	set	3941
   347  0000                     _UCONbits	set	3941
   348  0000                     _UEIR	set	3939
   349  0000                     _UIR	set	3938
   350  0000                     _UIRbits	set	3938
   351  0000                     _USTAT	set	3940
   352  0000                     _BCL1IF	set	32011
   353  0000                     _LATB2	set	31826
   354  0000                     _SSP1IF	set	31987
   355  000FE6                     STR_2:
   356  000FE6  31                 	db	49	;'1'
   357  000FE7  38                 	db	56	;'8'
   358  000FE8  46                 	db	70	;'F'
   359  000FE9  32                 	db	50	;'2'
   360  000FEA  37                 	db	55	;'7'
   361  000FEB  4A                 	db	74	;'J'
   362  000FEC  35                 	db	53	;'5'
   363  000FED  33                 	db	51	;'3'
   364  000FEE  00                 	db	0
   365  000FEF                     STR_3:
   366  000FEF  53                 	db	83	;'S'
   367  000FF0  4C                 	db	76	;'L'
   368  000FF1  45                 	db	69	;'E'
   369  000FF2  45                 	db	69	;'E'
   370  000FF3  50                 	db	80	;'P'
   371  000FF4  00                 	db	0
   372  000FF5  20                 	db	32
   373  000FF6  20                 	db	32
   374  000FF7  00                 	db	0
   375                           
   376                           ; #config settings
   377  000FF8  00                 	db	0	; dummy byte at the end
   378  0000                     
   379                           	psect	cinit
   380  00207E                     __pcinit:
   381                           	opt stack 0
   382  00207E                     start_initialization:
   383                           	opt stack 0
   384  00207E                     __initialization:
   385                           	opt stack 0
   386                           
   387                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   388  00207E  EE01  F0E8         	lfsr	0,__pbssBIGRAMl
   389  002082  EE17 F0D0          	lfsr	1,2000
   390  002086                     clear_0:
   391  002086  6AEE               	clrf	postinc0,c
   392  002088  50E5               	movf	postdec1,w,c
   393  00208A  50E1               	movf	fsr1l,w,c
   394  00208C  E1FC               	bnz	clear_0
   395  00208E  50E2               	movf	fsr1h,w,c
   396  002090  E1FA               	bnz	clear_0
   397                           
   398                           ; Clear objects allocated to BANK1 (228 bytes)
   399  002092  EE01  F000         	lfsr	0,__pbssBANK1
   400  002096  0EE4               	movlw	228
   401  002098                     clear_1:
   402  002098  6AEE               	clrf	postinc0,c
   403  00209A  06E8               	decf	wreg,f,c
   404  00209C  E1FD               	bnz	clear_1
   405                           
   406                           ; Clear objects allocated to BANK0 (110 bytes)
   407  00209E  EE00  F060         	lfsr	0,__pbssBANK0
   408  0020A2  0E6E               	movlw	110
   409  0020A4                     clear_2:
   410  0020A4  6AEE               	clrf	postinc0,c
   411  0020A6  06E8               	decf	wreg,f,c
   412  0020A8  E1FD               	bnz	clear_2
   413                           
   414                           ; Clear objects allocated to COMRAM (30 bytes)
   415  0020AA  EE00  F024         	lfsr	0,__pbssCOMRAM
   416  0020AE  0E1E               	movlw	30
   417  0020B0                     clear_3:
   418  0020B0  6AEE               	clrf	postinc0,c
   419  0020B2  06E8               	decf	wreg,f,c
   420  0020B4  E1FD               	bnz	clear_3
   421                           
   422                           ; Initialize objects allocated to BANK0 (3 bytes)
   423                           ; load TBLPTR registers with __pidataBANK0
   424  0020B6  0E8A               	movlw	low __pidataBANK0
   425  0020B8  6EF6               	movwf	tblptrl,c
   426  0020BA  0E24               	movlw	high __pidataBANK0
   427  0020BC  6EF7               	movwf	tblptrh,c
   428  0020BE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   429  0020C0  6EF8               	movwf	tblptru,c
   430  0020C2  0009               	tblrd		*+	;fetch initializer
   431  0020C4  CFF5 F0FA          	movff	tablat,__pdataBANK0
   432  0020C8  0009               	tblrd		*+	;fetch initializer
   433  0020CA  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   434  0020CE  0009               	tblrd		*+	;fetch initializer
   435  0020D0  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   436  0020D4                     end_of_initialization:
   437                           	opt stack 0
   438  0020D4                     __end_of__initialization:
   439                           	opt stack 0
   440  0020D4  0100               	movlb	0
   441  0020D6  EFE1  F00B         	goto	_main	;jump to C main() function
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1h	equ	0xFE2
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bssCOMRAM
   453  000024                     __pbssCOMRAM:
   454                           	opt stack 0
   455  000024                     _pBDTEntryIn:
   456                           	opt stack 0
   457  000024                     	ds	6
   458  00002A                     _CDCDataOutHandle:
   459                           	opt stack 0
   460  00002A                     	ds	2
   461  00002C                     _pBDTEntryEP0OutCurrent:
   462                           	opt stack 0
   463  00002C                     	ds	2
   464  00002E                     _pBDTEntryEP0OutNext:
   465                           	opt stack 0
   466  00002E                     	ds	2
   467  000030                     _USBDeferStatusStagePacket:
   468                           	opt stack 0
   469  000030                     	ds	1
   470  000031                     _USBDeviceState:
   471                           	opt stack 0
   472  000031                     	ds	1
   473  000032                     _USBStatusStageTimeoutCounter:
   474                           	opt stack 0
   475  000032                     	ds	1
   476  000033                     _cdc_rx_len:
   477                           	opt stack 0
   478  000033                     	ds	1
   479  000034                     _cdc_trf_state:
   480                           	opt stack 0
   481  000034                     	ds	1
   482  000035                     _cdc_tx_len:
   483                           	opt stack 0
   484  000035                     	ds	1
   485  000036                     _controlTransferState:
   486                           	opt stack 0
   487  000036                     	ds	1
   488  000037                     _edit_flag:
   489                           	opt stack 0
   490  000037                     	ds	1
   491  000038                     _endpoint_number:
   492                           	opt stack 0
   493  000038                     	ds	1
   494  000039                     _shortPacketStatus:
   495                           	opt stack 0
   496  000039                     	ds	1
   497  00003A                     _inPipes:
   498                           	opt stack 0
   499  00003A                     	ds	6
   500  000040                     _USBActiveConfiguration:
   501                           	opt stack 0
   502  000040                     	ds	1
   503  000041                     _USTATcopy:
   504                           	opt stack 0
   505  000041                     	ds	1
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           postdec1	equ	0xFE5
   513                           fsr1h	equ	0xFE2
   514                           fsr1l	equ	0xFE1
   515                           
   516                           	psect	bssBANK0
   517  000060                     __pbssBANK0:
   518                           	opt stack 0
   519  000060                     _cdc_notice:
   520                           	opt stack 0
   521  000060                     	ds	10
   522  00006A                     _outPipes:
   523                           	opt stack 0
   524  00006A                     	ds	9
   525  000073                     _pBDTEntryOut:
   526                           	opt stack 0
   527  000073                     	ds	6
   528  000079                     _BaudRateGen:
   529                           	opt stack 0
   530  000079                     	ds	4
   531  00007D                     _d1:
   532                           	opt stack 0
   533  00007D                     	ds	3
   534  000080                     _ep_data_in:
   535                           	opt stack 0
   536  000080                     	ds	3
   537  000083                     _ep_data_out:
   538                           	opt stack 0
   539  000083                     	ds	3
   540  000086                     _pCDCDst:
   541                           	opt stack 0
   542  000086                     	ds	3
   543  000089                     _pCDCSrc:
   544                           	opt stack 0
   545  000089                     	ds	3
   546  00008C                     USBCBSendResume@delay_count:
   547                           	opt stack 0
   548  00008C                     	ds	2
   549  00008E                     _CDCDataInHandle:
   550                           	opt stack 0
   551  00008E                     	ds	2
   552  000090                     _pDst:
   553                           	opt stack 0
   554  000090                     	ds	2
   555  000092                     epoch_to_caltime@day_cache:
   556                           	opt stack 0
   557  000092                     	ds	2
   558  000094                     RTCC_loop@prev_halfsec:
   559                           	opt stack 0
   560  000094                     	ds	1
   561  000095                     _BothEP0OutUOWNsSet:
   562                           	opt stack 0
   563  000095                     	ds	1
   564  000096                     _RemoteWakeup:
   565                           	opt stack 0
   566  000096                     	ds	1
   567  000097                     _USBBusIsSuspended:
   568                           	opt stack 0
   569  000097                     	ds	1
   570  000098                     _USBDeferINDataStagePackets:
   571                           	opt stack 0
   572  000098                     	ds	1
   573  000099                     _USBDeferOUTDataStagePackets:
   574                           	opt stack 0
   575  000099                     	ds	1
   576  00009A                     _USBStatusStageEnabledFlag1:
   577                           	opt stack 0
   578  00009A                     	ds	1
   579  00009B                     _USBStatusStageEnabledFlag2:
   580                           	opt stack 0
   581  00009B                     	ds	1
   582  00009C                     _cdc_mem_type:
   583                           	opt stack 0
   584  00009C                     	ds	1
   585  00009D                     _colon:
   586                           	opt stack 0
   587  00009D                     	ds	1
   588  00009E                     _control_signal_bitmap:
   589                           	opt stack 0
   590  00009E                     	ds	1
   591  00009F                     _halfsec:
   592                           	opt stack 0
   593  00009F                     	ds	1
   594  0000A0                     _time_change_flag:
   595                           	opt stack 0
   596  0000A0                     	ds	1
   597  0000A1                     epoch_to_caltime@year_cache:
   598                           	opt stack 0
   599  0000A1                     	ds	1
   600  0000A2                     _dummy_encapsulated_cmd_response:
   601                           	opt stack 0
   602  0000A2                     	ds	8
   603  0000AA                     _rx_buf:
   604                           	opt stack 0
   605  0000AA                     	ds	8
   606  0000B2                     _tx_buf:
   607                           	opt stack 0
   608  0000B2                     	ds	8
   609  0000BA                     _caltime_now:
   610                           	opt stack 0
   611  0000BA                     	ds	7
   612  0000C1                     _line_coding:
   613                           	opt stack 0
   614  0000C1                     	ds	7
   615  0000C8                     _epoch_now:
   616                           	opt stack 0
   617  0000C8                     	ds	4
   618  0000CC                     _USBAlternateInterface:
   619                           	opt stack 0
   620  0000CC                     	ds	2
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1h	equ	0xFE2
   629                           fsr1l	equ	0xFE1
   630                           
   631                           	psect	dataBANK0
   632  0000FA                     __pdataBANK0:
   633                           	opt stack 0
   634  0000FA                     I2C_LCD_SetCursor@F9845:
   635                           	opt stack 0
   636  0000FA                     	ds	2
   637  0000FC                     epoch_to_caltime@month_cache:
   638                           	opt stack 0
   639  0000FC                     	ds	1
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           postinc0	equ	0xFEE
   645                           wreg	equ	0xFE8
   646                           postdec1	equ	0xFE5
   647                           fsr1h	equ	0xFE2
   648                           fsr1l	equ	0xFE1
   649                           
   650                           	psect	bssBANK1
   651  000100                     __pbssBANK1:
   652                           	opt stack 0
   653  000100                     main_init@rxbuf:
   654                           	opt stack 0
   655  000100                     	ds	100
   656  000164                     _cdc_data_rx:
   657                           	opt stack 0
   658  000164                     	ds	64
   659  0001A4                     _cdc_data_tx:
   660                           	opt stack 0
   661  0001A4                     	ds	64
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           postdec1	equ	0xFE5
   669                           fsr1h	equ	0xFE2
   670                           fsr1l	equ	0xFE1
   671                           
   672                           	psect	bssBIGRAMl
   673  0001E8                     __pbssBIGRAMl:
   674                           	opt stack 0
   675  0001E8                     main_init@txbuf:
   676                           	opt stack 0
   677  0001E8                     	ds	2000
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1h	equ	0xFE2
   686                           fsr1l	equ	0xFE1
   687                           
   688                           	psect	cstackBANK1
   689  0001E4                     __pcstackBANK1:
   690                           	opt stack 0
   691  0001E4                     RTCC_from_epoch@ct:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x0
   695  0001E4                     	ds	2
   696  0001E6                     RTCC_from_epoch@ep:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x2
   700  0001E6                     	ds	2
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1h	equ	0xFE2
   709                           fsr1l	equ	0xFE1
   710                           
   711                           	psect	cstackBANK0
   712  0000CE                     __pcstackBANK0:
   713                           	opt stack 0
   714  0000CE                     ??_ringbuf_num:
   715  0000CE                     ?___lldiv:
   716                           	opt stack 0
   717  0000CE                     I2C_LCD_Command@c:
   718                           	opt stack 0
   719  0000CE                     ___awdiv@counter:
   720                           	opt stack 0
   721  0000CE                     ___awmod@counter:
   722                           	opt stack 0
   723  0000CE                     ringbuf_init@rb:
   724                           	opt stack 0
   725  0000CE                     I2C_LCD_Puts@s:
   726                           	opt stack 0
   727  0000CE                     ___lldiv@dividend:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x0
   731  0000CE                     	ds	1
   732  0000CF                     I2C_LCD_Command@ans:
   733                           	opt stack 0
   734  0000CF                     ___awdiv@sign:
   735                           	opt stack 0
   736  0000CF                     ___awmod@sign:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x1
   740  0000CF                     	ds	1
   741  0000D0                     ??_month_length:
   742  0000D0                     ringbuf_init@internal_buf:
   743                           	opt stack 0
   744  0000D0                     I2C_LCD_SetCursor@row_offsets:
   745                           	opt stack 0
   746  0000D0                     I2C_LCD_Puts@ans:
   747                           	opt stack 0
   748  0000D0                     ___awdiv@quotient:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x2
   752  0000D0                     	ds	2
   753  0000D2                     I2C_LCD_SetCursor@col:
   754                           	opt stack 0
   755  0000D2                     ringbuf_init@bufsize:
   756                           	opt stack 0
   757  0000D2                     caltime_to_RTCC@ct:
   758                           	opt stack 0
   759  0000D2                     ___lldiv@divisor:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x4
   763  0000D2                     	ds	2
   764  0000D4                     ??_ringbuf_put:
   765  0000D4                     ??_ringbuf_pop:
   766  0000D4                     month_length@year:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x6
   770  0000D4                     	ds	2
   771  0000D6                     ?___lmul:
   772                           	opt stack 0
   773  0000D6                     ___lmul@multiplier:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x8
   777  0000D6                     	ds	2
   778  0000D8                     tx_send@asciicode:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0xA
   782  0000D8                     	ds	2
   783  0000DA                     ___lmul@multiplicand:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0xC
   787  0000DA                     	ds	4
   788  0000DE                     ___lmul@product:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x10
   792  0000DE                     	ds	4
   793  0000E2                     ?_get_quot_rem:
   794                           	opt stack 0
   795  0000E2                     get_quot_rem@quot:
   796                           	opt stack 0
   797  0000E2                     caltime_to_epoch@ct:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x14
   801  0000E2                     	ds	2
   802  0000E4                     get_quot_rem@div:
   803                           	opt stack 0
   804  0000E4                     caltime_to_epoch@ep:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x16
   808  0000E4                     	ds	2
   809  0000E6                     ??_caltime_to_epoch:
   810  0000E6                     get_quot_rem@num:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x18
   814  0000E6                     	ds	4
   815  0000EA                     caltime_to_epoch@year:
   816                           	opt stack 0
   817  0000EA                     epoch_to_caltime@ct:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x1C
   821  0000EA                     	ds	1
   822  0000EB                     caltime_to_epoch@month_3886:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x1D
   826  0000EB                     	ds	1
   827  0000EC                     epoch_to_caltime@ep:
   828                           	opt stack 0
   829  0000EC                     caltime_to_epoch@epoch:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x1E
   833  0000EC                     	ds	2
   834  0000EE                     ??_epoch_to_caltime:
   835                           
   836                           ; 0 bytes @ 0x20
   837  0000EE                     	ds	2
   838  0000F0                     caltime_to_epoch@month:
   839                           	opt stack 0
   840  0000F0                     epoch_to_caltime@day_since_epoch:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x22
   844  0000F0                     	ds	1
   845  0000F1                     RTCC_from_RTCC@ct:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x23
   849  0000F1                     	ds	1
   850  0000F2                     epoch_to_caltime@day:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x24
   854  0000F2                     	ds	1
   855  0000F3                     RTCC_from_RTCC@ep:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x25
   859  0000F3                     	ds	1
   860  0000F4                     epoch_to_caltime@year:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x26
   864  0000F4                     	ds	1
   865  0000F5                     epoch_to_caltime@month:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x27
   869  0000F5                     	ds	1
   870  0000F6                     epoch_to_caltime@num:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x28
   874  0000F6                     	ds	4
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           postinc0	equ	0xFEE
   880                           wreg	equ	0xFE8
   881                           postdec1	equ	0xFE5
   882                           fsr1h	equ	0xFE2
   883                           fsr1l	equ	0xFE1
   884                           
   885                           	psect	cstackCOMRAM
   886  000001                     __pcstackCOMRAM:
   887                           	opt stack 0
   888  000001                     ?i2_ringbuf_num:
   889                           	opt stack 0
   890  000001                     i2ringbuf_num@rb:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x0
   894  000001                     	ds	2
   895  000003                     ??i2_ringbuf_num:
   896                           
   897                           ; 0 bytes @ 0x2
   898  000003                     	ds	6
   899  000009                     i2ringbuf_put@rb:
   900                           	opt stack 0
   901  000009                     i2ringbuf_pop@rb:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x8
   905  000009                     	ds	2
   906  00000B                     ??i2_ringbuf_pop:
   907  00000B                     i2ringbuf_put@asciicode:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0xA
   911  00000B                     	ds	1
   912  00000C                     ??i2_ringbuf_put:
   913                           
   914                           ; 0 bytes @ 0xB
   915  00000C                     	ds	3
   916  00000F                     i2ringbuf_pop@ret:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0xE
   920  00000F                     	ds	1
   921  000010                     UART_ISR@ascii:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0xF
   925  000010                     	ds	1
   926  000011                     ??_ISR:
   927                           
   928                           ; 0 bytes @ 0x10
   929  000011                     	ds	14
   930  00001F                     ??_timer0_init:
   931  00001F                     ??_timer3_init:
   932  00001F                     ??_I2C_IdleCheck:
   933  00001F                     ??_x_to_d:
   934  00001F                     ?_ringbuf_num:
   935                           	opt stack 0
   936  00001F                     ?___awdiv:
   937                           	opt stack 0
   938  00001F                     ?___awmod:
   939                           	opt stack 0
   940  00001F                     timer1_init@clock_select:
   941                           	opt stack 0
   942  00001F                     ADC_init@p_ref:
   943                           	opt stack 0
   944  00001F                     ringbuf_num@rb:
   945                           	opt stack 0
   946  00001F                     Delay_ms@ms:
   947                           	opt stack 0
   948  00001F                     ___awdiv@dividend:
   949                           	opt stack 0
   950  00001F                     ___awmod@dividend:
   951                           	opt stack 0
   952  00001F                     ___lldiv@quotient:
   953                           	opt stack 0
   954                           
   955                           ; 4 bytes @ 0x1E
   956  00001F                     	ds	1
   957  000020                     ??_timer1_init:
   958  000020                     timer0_init@prescaler:
   959                           	opt stack 0
   960  000020                     timer3_init@prescaler:
   961                           	opt stack 0
   962  000020                     I2C_IdleCheck@mask:
   963                           	opt stack 0
   964  000020                     x_to_d@hex:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x1F
   968  000020                     	ds	1
   969  000021                     ??_Delay_ms:
   970  000021                     timer1_init@prescaler:
   971                           	opt stack 0
   972  000021                     I2C_Start@rw:
   973                           	opt stack 0
   974  000021                     I2C_Send@data:
   975                           	opt stack 0
   976  000021                     ringbuf_put@rb:
   977                           	opt stack 0
   978  000021                     ringbuf_pop@rb:
   979                           	opt stack 0
   980  000021                     RTCC_to_caltime@ct:
   981                           	opt stack 0
   982  000021                     ___awdiv@divisor:
   983                           	opt stack 0
   984  000021                     ___awmod@divisor:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x20
   988  000021                     	ds	1
   989  000022                     I2C_Start@adrs:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x21
   993  000022                     	ds	1
   994  000023                     ??_I2C_LCD_Clear:
   995  000023                     ??_I2C_LCD_Puts:
   996  000023                     ringbuf_put@asciicode:
   997                           	opt stack 0
   998  000023                     ringbuf_pop@ret:
   999                           	opt stack 0
  1000  000023                     I2C_LCD_SetCursor@row:
  1001                           	opt stack 0
  1002  000023                     d_to_x@dec:
  1003                           	opt stack 0
  1004  000023                     month_length@month:
  1005                           	opt stack 0
  1006  000023                     RTCC_to_caltime@dumy:
  1007                           	opt stack 0
  1008  000023                     ___lldiv@counter:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x22
  1012  000023                     	ds	1
  1013  000024                     tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1h	equ	0xFE2
  1021                           fsr1l	equ	0xFE1
  1022                           
  1023                           ; 0 bytes @ 0x23
  1024 ;;
  1025 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1026 ;;
  1027 ;; *************** function _main *****************
  1028 ;; Defined at:
  1029 ;;		line 83 in file "PIC18F27J53-SLEEP01.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2  1130[None  ] int 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels required when called:   10
  1049 ;; This function calls:
  1050 ;;		_I2C_LCD_Puts
  1051 ;;		_I2C_LCD_SetCursor
  1052 ;;		_RTCC_from_RTCC
  1053 ;;		_RTCC_from_epoch
  1054 ;;		_main_init
  1055 ;;		_ringbuf_num
  1056 ;;		_ringbuf_pop
  1057 ;;		_tx_send
  1058 ;; This function is called by:
  1059 ;;		Startup code after reset
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text0
  1064  0017C2                     __ptext0:
  1065                           	opt stack 0
  1066  0017C2                     _main:
  1067                           	opt stack 21
  1068                           
  1069                           ;PIC18F27J53-SLEEP01.c: 84: main_init();
  1070                           
  1071                           ;incstack = 0
  1072  0017C2  EC24  F00F         	call	_main_init	;wreg free
  1073                           
  1074                           ;PIC18F27J53-SLEEP01.c: 86: RTCC_from_RTCC(&caltime_now, &epoch_now);
  1075  0017C6  0EBA               	movlw	low _caltime_now
  1076  0017C8  0100               	movlb	0	; () banked
  1077  0017CA  6FF1               	movwf	RTCC_from_RTCC@ct& (0+255),b
  1078  0017CC  0E00               	movlw	high _caltime_now
  1079  0017CE  0100               	movlb	0	; () banked
  1080  0017D0  6FF2               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  1081  0017D2  0EC8               	movlw	low _epoch_now
  1082  0017D4  0100               	movlb	0	; () banked
  1083  0017D6  6FF3               	movwf	RTCC_from_RTCC@ep& (0+255),b
  1084  0017D8  0E00               	movlw	high _epoch_now
  1085  0017DA  0100               	movlb	0	; () banked
  1086  0017DC  6FF4               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  1087  0017DE  ECBA  F011         	call	_RTCC_from_RTCC	;wreg free
  1088                           
  1089                           ;PIC18F27J53-SLEEP01.c: 87: if (caltime_now.DD == 0) {
  1090  0017E2  0100               	movlb	0	; () banked
  1091  0017E4  51BE               	movf	(_caltime_now+4)& (0+255),w,b
  1092  0017E6  A4D8               	btfss	status,2,c
  1093  0017E8  D018               	goto	l7020
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;PIC18F27J53-SLEEP01.c: 88: epoch_now = 0;
  1097  0017EA  0E00               	movlw	0
  1098  0017EC  0100               	movlb	0	; () banked
  1099  0017EE  6FC8               	movwf	_epoch_now& (0+255),b
  1100  0017F0  0E00               	movlw	0
  1101  0017F2  6FC9               	movwf	(_epoch_now+1)& (0+255),b
  1102  0017F4  0E00               	movlw	0
  1103  0017F6  6FCA               	movwf	(_epoch_now+2)& (0+255),b
  1104  0017F8  0E00               	movlw	0
  1105  0017FA  6FCB               	movwf	(_epoch_now+3)& (0+255),b
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;PIC18F27J53-SLEEP01.c: 89: RTCC_from_epoch(&caltime_now, &epoch_now);
  1109  0017FC  0EBA               	movlw	low _caltime_now
  1110  0017FE  0101               	movlb	1	; () banked
  1111  001800  6FE4               	movwf	RTCC_from_epoch@ct& (0+255),b
  1112  001802  0E00               	movlw	high _caltime_now
  1113  001804  0101               	movlb	1	; () banked
  1114  001806  6FE5               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1115  001808  0EC8               	movlw	low _epoch_now
  1116  00180A  0101               	movlb	1	; () banked
  1117  00180C  6FE6               	movwf	RTCC_from_epoch@ep& (0+255),b
  1118  00180E  0E00               	movlw	high _epoch_now
  1119  001810  0101               	movlb	1	; () banked
  1120  001812  6FE7               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1121  001814  ECA9  F011         	call	_RTCC_from_epoch	;wreg free
  1122  001818  D000               	goto	l7020
  1123  00181A                     l7020:
  1124                           
  1125                           ;PIC18F27J53-SLEEP01.c: 90: }
  1126                           ;PIC18F27J53-SLEEP01.c: 92: I2C_LCD_SetCursor(0, 0);
  1127  00181A  0E00               	movlw	0
  1128  00181C  6E23               	movwf	I2C_LCD_SetCursor@row,c
  1129  00181E  0E00               	movlw	0
  1130  001820  EC6E  F011         	call	_I2C_LCD_SetCursor
  1131                           
  1132                           ;PIC18F27J53-SLEEP01.c: 93: I2C_LCD_Puts("18F27J53");
  1133  001824  0EE6               	movlw	low STR_2
  1134  001826  0100               	movlb	0	; () banked
  1135  001828  6FCE               	movwf	I2C_LCD_Puts@s& (0+255),b
  1136  00182A  0E0F               	movlw	high STR_2
  1137  00182C  0100               	movlb	0	; () banked
  1138  00182E  6FCF               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1139  001830  ECBB  F00F         	call	_I2C_LCD_Puts	;wreg free
  1140                           
  1141                           ;PIC18F27J53-SLEEP01.c: 94: I2C_LCD_SetCursor(0, 1);
  1142  001834  0E01               	movlw	1
  1143  001836  6E23               	movwf	I2C_LCD_SetCursor@row,c
  1144  001838  0E00               	movlw	0
  1145  00183A  EC6E  F011         	call	_I2C_LCD_SetCursor
  1146                           
  1147                           ;PIC18F27J53-SLEEP01.c: 95: I2C_LCD_Puts("SLEEP");
  1148  00183E  0EEF               	movlw	low STR_3
  1149  001840  0100               	movlb	0	; () banked
  1150  001842  6FCE               	movwf	I2C_LCD_Puts@s& (0+255),b
  1151  001844  0E0F               	movlw	high STR_3
  1152  001846  0100               	movlb	0	; () banked
  1153  001848  6FCF               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1154  00184A  ECBB  F00F         	call	_I2C_LCD_Puts	;wreg free
  1155  00184E  D019               	goto	l7044
  1156  001850                     l7030:
  1157                           
  1158                           ;PIC18F27J53-SLEEP01.c: 100: LATBbits.LATB2 = 0;
  1159  001850  948A               	bcf	3978,2,c	;volatile
  1160  001852  0003               	sleep		;# 
  1161                           
  1162                           ;PIC18F27J53-SLEEP01.c: 102: __nop();
  1163  001854  F000               	nop	
  1164                           
  1165                           ;PIC18F27J53-SLEEP01.c: 103: LATBbits.LATB2 = 1;
  1166  001856  848A               	bsf	3978,2,c	;volatile
  1167                           
  1168                           ;PIC18F27J53-SLEEP01.c: 104: INTCONbits.GIE = 0;
  1169  001858  9EF2               	bcf	intcon,7,c	;volatile
  1170                           
  1171                           ;PIC18F27J53-SLEEP01.c: 105: if (ringbuf_num(&rx_buf)) {
  1172  00185A  0EAA               	movlw	low _rx_buf
  1173  00185C  6E1F               	movwf	ringbuf_num@rb,c
  1174  00185E  0E00               	movlw	high _rx_buf
  1175  001860  6E20               	movwf	ringbuf_num@rb+1,c
  1176  001862  EC3B  F00A         	call	_ringbuf_num	;wreg free
  1177  001866  501F               	movf	?_ringbuf_num,w,c
  1178  001868  1020               	iorwf	?_ringbuf_num+1,w,c
  1179  00186A  B4D8               	btfsc	status,2,c
  1180  00186C  D00A               	goto	l7044
  1181                           
  1182                           ;PIC18F27J53-SLEEP01.c: 106: tx_send(ringbuf_pop(&rx_buf));
  1183  00186E  0EAA               	movlw	low _rx_buf
  1184  001870  6E21               	movwf	ringbuf_pop@rb,c
  1185  001872  0E00               	movlw	high _rx_buf
  1186  001874  6E22               	movwf	ringbuf_pop@rb+1,c
  1187  001876  ECA8  F00C         	call	_ringbuf_pop	;wreg free
  1188  00187A  EC13  F012         	call	_tx_send
  1189                           
  1190                           ;PIC18F27J53-SLEEP01.c: 107: LATBbits.LATB1 = !LATBbits.LATB1;
  1191  00187E  728A               	btg	3978,1,c	;volatile
  1192  001880  D000               	goto	l7044
  1193  001882                     l7044:
  1194                           
  1195                           ;PIC18F27J53-SLEEP01.c: 108: }
  1196                           ;PIC18F27J53-SLEEP01.c: 109: INTCONbits.GIE = 1;
  1197  001882  8EF2               	bsf	intcon,7,c	;volatile
  1198  001884  D7E5               	goto	l7030
  1199                           
  1200                           ;PIC18F27J53-SLEEP01.c: 110: }
  1201                           ;PIC18F27J53-SLEEP01.c: 111: return 0;
  1202                           ;	Return value of _main is never used
  1203  001886  EF52  F000         	goto	start
  1204  00188A                     __end_of_main:
  1205                           	opt stack 0
  1206                           tblptru	equ	0xFF8
  1207                           tblptrh	equ	0xFF7
  1208                           tblptrl	equ	0xFF6
  1209                           tablat	equ	0xFF5
  1210                           intcon	equ	0xFF2
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           postdec1	equ	0xFE5
  1214                           fsr1h	equ	0xFE2
  1215                           fsr1l	equ	0xFE1
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _tx_send *****************
  1219 ;; Defined at:
  1220 ;;		line 222 in file "../My_header\My_header.h"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  asciicode       1    wreg     const unsigned char 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  asciicode       1   10[BANK0 ] const unsigned char 
  1225 ;; Return value:  Size  Location     Type
  1226 ;;		None               void
  1227 ;; Registers used:
  1228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;Total ram usage:        1 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    6
  1241 ;; This function calls:
  1242 ;;		_ringbuf_put
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;;		_tx_sendn
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text1
  1250  002426                     __ptext1:
  1251                           	opt stack 0
  1252  002426                     _tx_send:
  1253                           	opt stack 24
  1254                           
  1255                           ;incstack = 0
  1256                           ;tx_send@asciicode stored from wreg
  1257  002426  0100               	movlb	0	; () banked
  1258  002428  6FD8               	movwf	tx_send@asciicode& (0+255),b
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;My_header\My_header.h: 223: ringbuf_put(&tx_buf, asciicode);
  1262  00242A  0EB2               	movlw	low _tx_buf
  1263  00242C  6E21               	movwf	ringbuf_put@rb,c
  1264  00242E  0E00               	movlw	high _tx_buf
  1265  002430  6E22               	movwf	ringbuf_put@rb+1,c
  1266  002432  C0D8  F023         	movff	tx_send@asciicode,ringbuf_put@asciicode
  1267  002436  EC45  F00C         	call	_ringbuf_put	;wreg free
  1268                           
  1269                           ;My_header\My_header.h: 224: PIE1bits.TXIE = 1;
  1270  00243A  889D               	bsf	3997,4,c	;volatile
  1271  00243C  0012               	return		;funcret
  1272  00243E                     __end_of_tx_send:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           intcon	equ	0xFF2
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1h	equ	0xFE2
  1283                           fsr1l	equ	0xFE1
  1284                           status	equ	0xFD8
  1285                           
  1286 ;; *************** function _ringbuf_put *****************
  1287 ;; Defined at:
  1288 ;;		line 39 in file "../My_header\My_ringbuf.h"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  1291 ;;		 -> rx_buf(8), tx_buf(8), 
  1292 ;;  asciicode       1   34[COMRAM] unsigned char 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;		None               void
  1297 ;; Registers used:
  1298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1306 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1307 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1308 ;;Total ram usage:        7 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    5
  1311 ;; This function calls:
  1312 ;;		_ringbuf_num
  1313 ;; This function is called by:
  1314 ;;		_tx_send
  1315 ;;		_ringbuf_put_num
  1316 ;;		_ringbuf_put_str
  1317 ;;		_tx_sends
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text2
  1322  00188A                     __ptext2:
  1323                           	opt stack 0
  1324  00188A                     _ringbuf_put:
  1325                           	opt stack 24
  1326                           
  1327                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  1328                           
  1329                           ;incstack = 0
  1330  00188A  C021  F01F         	movff	ringbuf_put@rb,ringbuf_num@rb
  1331  00188E  C022  F020         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
  1332  001892  EC3B  F00A         	call	_ringbuf_num	;wreg free
  1333  001896  EE20 F002          	lfsr	2,2
  1334  00189A  5021               	movf	ringbuf_put@rb,w,c
  1335  00189C  26D9               	addwf	fsr2l,f,c
  1336  00189E  5022               	movf	ringbuf_put@rb+1,w,c
  1337  0018A0  22DA               	addwfc	fsr2h,f,c
  1338  0018A2  50DE               	movf	postinc2,w,c
  1339  0018A4  5C1F               	subwf	?_ringbuf_num,w,c
  1340  0018A6  50DE               	movf	postinc2,w,c
  1341  0018A8  5820               	subwfb	?_ringbuf_num+1,w,c
  1342  0018AA  B0D8               	btfsc	status,0,c
  1343  0018AC  0012               	return	
  1344                           
  1345                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  1346  0018AE  EE20 F004          	lfsr	2,4
  1347  0018B2  5021               	movf	ringbuf_put@rb,w,c
  1348  0018B4  26D9               	addwf	fsr2l,f,c
  1349  0018B6  5022               	movf	ringbuf_put@rb+1,w,c
  1350  0018B8  22DA               	addwfc	fsr2h,f,c
  1351  0018BA  CFDE F0D4          	movff	postinc2,??_ringbuf_put
  1352  0018BE  CFDD F0D5          	movff	postdec2,??_ringbuf_put+1
  1353  0018C2  C021  FFD9         	movff	ringbuf_put@rb,fsr2l
  1354  0018C6  C022  FFDA         	movff	ringbuf_put@rb+1,fsr2h
  1355  0018CA  CFDE F0D6          	movff	postinc2,??_ringbuf_put+2
  1356  0018CE  CFDD F0D7          	movff	postdec2,??_ringbuf_put+3
  1357  0018D2  0100               	movlb	0	; () banked
  1358  0018D4  51D4               	movf	??_ringbuf_put& (0+255),w,b
  1359  0018D6  0100               	movlb	0	; () banked
  1360  0018D8  25D6               	addwf	(??_ringbuf_put+2)& (0+255),w,b
  1361  0018DA  6ED9               	movwf	fsr2l,c
  1362  0018DC  0100               	movlb	0	; () banked
  1363  0018DE  51D5               	movf	(??_ringbuf_put+1)& (0+255),w,b
  1364  0018E0  0100               	movlb	0	; () banked
  1365  0018E2  21D7               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
  1366  0018E4  6EDA               	movwf	fsr2h,c
  1367  0018E6  C023  FFDF         	movff	ringbuf_put@asciicode,indf2
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  1371  0018EA  EE20 F002          	lfsr	2,2
  1372  0018EE  5021               	movf	ringbuf_put@rb,w,c
  1373  0018F0  26D9               	addwf	fsr2l,f,c
  1374  0018F2  5022               	movf	ringbuf_put@rb+1,w,c
  1375  0018F4  22DA               	addwfc	fsr2h,f,c
  1376  0018F6  EE10 F004          	lfsr	1,4
  1377  0018FA  5021               	movf	ringbuf_put@rb,w,c
  1378  0018FC  26E1               	addwf	fsr1l,f,c
  1379  0018FE  5022               	movf	ringbuf_put@rb+1,w,c
  1380  001900  22E2               	addwfc	fsr1h,f,c
  1381  001902  CFE6 F0D6          	movff	postinc1,??_ringbuf_put+2
  1382  001906  CFE5 F0D7          	movff	postdec1,??_ringbuf_put+3
  1383  00190A  0E01               	movlw	1
  1384  00190C  0100               	movlb	0	; () banked
  1385  00190E  27D6               	addwf	(??_ringbuf_put+2)& (0+255),f,b
  1386  001910  0E00               	movlw	0
  1387  001912  23D7               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
  1388  001914  50DE               	movf	postinc2,w,c
  1389  001916  0100               	movlb	0	; () banked
  1390  001918  5DD6               	subwf	(??_ringbuf_put+2)& (0+255),w,b
  1391  00191A  50DE               	movf	postinc2,w,c
  1392  00191C  0100               	movlb	0	; () banked
  1393  00191E  59D7               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
  1394  001920  B0D8               	btfsc	status,0,c
  1395  001922  D00A               	goto	l6442
  1396                           
  1397                           ; BSR set to: 0
  1398  001924  EE20 F004          	lfsr	2,4
  1399  001928  5021               	movf	ringbuf_put@rb,w,c
  1400  00192A  26D9               	addwf	fsr2l,f,c
  1401  00192C  5022               	movf	ringbuf_put@rb+1,w,c
  1402  00192E  22DA               	addwfc	fsr2h,f,c
  1403  001930  2ADE               	incf	postinc2,f,c
  1404  001932  0E00               	movlw	0
  1405  001934  22DD               	addwfc	postdec2,f,c
  1406  001936  0012               	return	
  1407  001938                     l6442:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  1411  001938  EE20 F004          	lfsr	2,4
  1412  00193C  5021               	movf	ringbuf_put@rb,w,c
  1413  00193E  26D9               	addwf	fsr2l,f,c
  1414  001940  5022               	movf	ringbuf_put@rb+1,w,c
  1415  001942  22DA               	addwfc	fsr2h,f,c
  1416  001944  0E00               	movlw	0
  1417  001946  6EDE               	movwf	postinc2,c
  1418  001948  0E00               	movlw	0
  1419  00194A  6EDD               	movwf	postdec2,c
  1420                           
  1421                           ; BSR set to: 0
  1422  00194C  0012               	return	
  1423                           
  1424                           ; BSR set to: 0
  1425  00194E  0012               	return		;funcret
  1426  001950                     __end_of_ringbuf_put:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           intcon	equ	0xFF2
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           postinc1	equ	0xFE6
  1436                           postdec1	equ	0xFE5
  1437                           fsr1h	equ	0xFE2
  1438                           fsr1l	equ	0xFE1
  1439                           indf2	equ	0xFDF
  1440                           postinc2	equ	0xFDE
  1441                           postdec2	equ	0xFDD
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _ringbuf_pop *****************
  1447 ;; Defined at:
  1448 ;;		line 64 in file "../My_header\My_ringbuf.h"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  rb              2   32[COMRAM] PTR struct ringbuf
  1451 ;;		 -> rx_buf(8), tx_buf(8), 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  ret             1   34[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      unsigned char 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1466 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;Total ram usage:        7 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    5
  1470 ;; This function calls:
  1471 ;;		_ringbuf_num
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text3
  1478  001950                     __ptext3:
  1479                           	opt stack 0
  1480  001950                     _ringbuf_pop:
  1481                           	opt stack 25
  1482                           
  1483                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  1484                           
  1485                           ;incstack = 0
  1486  001950  C021  F01F         	movff	ringbuf_pop@rb,ringbuf_num@rb
  1487  001954  C022  F020         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  1488  001958  EC3B  F00A         	call	_ringbuf_num	;wreg free
  1489  00195C  501F               	movf	?_ringbuf_num,w,c
  1490  00195E  1020               	iorwf	?_ringbuf_num+1,w,c
  1491  001960  B4D8               	btfsc	status,2,c
  1492  001962  D052               	goto	l6574
  1493                           
  1494                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  1495  001964  EE20 F006          	lfsr	2,6
  1496  001968  5021               	movf	ringbuf_pop@rb,w,c
  1497  00196A  26D9               	addwf	fsr2l,f,c
  1498  00196C  5022               	movf	ringbuf_pop@rb+1,w,c
  1499  00196E  22DA               	addwfc	fsr2h,f,c
  1500  001970  CFDE F0D4          	movff	postinc2,??_ringbuf_pop
  1501  001974  CFDD F0D5          	movff	postdec2,??_ringbuf_pop+1
  1502  001978  C021  FFD9         	movff	ringbuf_pop@rb,fsr2l
  1503  00197C  C022  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  1504  001980  CFDE F0D6          	movff	postinc2,??_ringbuf_pop+2
  1505  001984  CFDD F0D7          	movff	postdec2,??_ringbuf_pop+3
  1506  001988  0100               	movlb	0	; () banked
  1507  00198A  51D4               	movf	??_ringbuf_pop& (0+255),w,b
  1508  00198C  0100               	movlb	0	; () banked
  1509  00198E  25D6               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
  1510  001990  6ED9               	movwf	fsr2l,c
  1511  001992  0100               	movlb	0	; () banked
  1512  001994  51D5               	movf	(??_ringbuf_pop+1)& (0+255),w,b
  1513  001996  0100               	movlb	0	; () banked
  1514  001998  21D7               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
  1515  00199A  6EDA               	movwf	fsr2h,c
  1516  00199C  50DF               	movf	indf2,w,c
  1517  00199E  6E23               	movwf	ringbuf_pop@ret,c
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  1521  0019A0  EE20 F002          	lfsr	2,2
  1522  0019A4  5021               	movf	ringbuf_pop@rb,w,c
  1523  0019A6  26D9               	addwf	fsr2l,f,c
  1524  0019A8  5022               	movf	ringbuf_pop@rb+1,w,c
  1525  0019AA  22DA               	addwfc	fsr2h,f,c
  1526  0019AC  EE10 F006          	lfsr	1,6
  1527  0019B0  5021               	movf	ringbuf_pop@rb,w,c
  1528  0019B2  26E1               	addwf	fsr1l,f,c
  1529  0019B4  5022               	movf	ringbuf_pop@rb+1,w,c
  1530  0019B6  22E2               	addwfc	fsr1h,f,c
  1531  0019B8  CFE6 F0D6          	movff	postinc1,??_ringbuf_pop+2
  1532  0019BC  CFE5 F0D7          	movff	postdec1,??_ringbuf_pop+3
  1533  0019C0  0E01               	movlw	1
  1534  0019C2  0100               	movlb	0	; () banked
  1535  0019C4  27D6               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
  1536  0019C6  0E00               	movlw	0
  1537  0019C8  23D7               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
  1538  0019CA  50DE               	movf	postinc2,w,c
  1539  0019CC  0100               	movlb	0	; () banked
  1540  0019CE  5DD6               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
  1541  0019D0  50DE               	movf	postinc2,w,c
  1542  0019D2  0100               	movlb	0	; () banked
  1543  0019D4  59D7               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
  1544  0019D6  B0D8               	btfsc	status,0,c
  1545  0019D8  D00A               	goto	l6566
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  1549  0019DA  EE20 F006          	lfsr	2,6
  1550  0019DE  5021               	movf	ringbuf_pop@rb,w,c
  1551  0019E0  26D9               	addwf	fsr2l,f,c
  1552  0019E2  5022               	movf	ringbuf_pop@rb+1,w,c
  1553  0019E4  22DA               	addwfc	fsr2h,f,c
  1554  0019E6  2ADE               	incf	postinc2,f,c
  1555  0019E8  0E00               	movlw	0
  1556  0019EA  22DD               	addwfc	postdec2,f,c
  1557                           
  1558                           ;My_header\My_ringbuf.h: 69: } else {
  1559  0019EC  D00B               	goto	l6568
  1560  0019EE                     l6566:
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  1564  0019EE  EE20 F006          	lfsr	2,6
  1565  0019F2  5021               	movf	ringbuf_pop@rb,w,c
  1566  0019F4  26D9               	addwf	fsr2l,f,c
  1567  0019F6  5022               	movf	ringbuf_pop@rb+1,w,c
  1568  0019F8  22DA               	addwfc	fsr2h,f,c
  1569  0019FA  0E00               	movlw	0
  1570  0019FC  6EDE               	movwf	postinc2,c
  1571  0019FE  0E00               	movlw	0
  1572  001A00  6EDD               	movwf	postdec2,c
  1573  001A02  D000               	goto	l6568
  1574  001A04                     l6568:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;My_header\My_ringbuf.h: 71: }
  1578                           ;My_header\My_ringbuf.h: 72: return ret;
  1579  001A04  5023               	movf	ringbuf_pop@ret,w,c
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;My_header\My_ringbuf.h: 73: } else {
  1583                           
  1584                           ; BSR set to: 0
  1585  001A06  0012               	return	
  1586  001A08                     l6574:
  1587                           
  1588                           ;My_header\My_ringbuf.h: 74: return 0;
  1589  001A08  0E00               	movlw	0
  1590  001A0A  0012               	return	
  1591  001A0C  0012               	return		;funcret
  1592  001A0E                     __end_of_ringbuf_pop:
  1593                           	opt stack 0
  1594                           tblptru	equ	0xFF8
  1595                           tblptrh	equ	0xFF7
  1596                           tblptrl	equ	0xFF6
  1597                           tablat	equ	0xFF5
  1598                           intcon	equ	0xFF2
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           postinc1	equ	0xFE6
  1602                           postdec1	equ	0xFE5
  1603                           fsr1h	equ	0xFE2
  1604                           fsr1l	equ	0xFE1
  1605                           indf2	equ	0xFDF
  1606                           postinc2	equ	0xFDE
  1607                           postdec2	equ	0xFDD
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function _ringbuf_num *****************
  1613 ;; Defined at:
  1614 ;;		line 31 in file "../My_header\My_ringbuf.h"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  rb              2   30[COMRAM] PTR struct ringbuf
  1617 ;;		 -> rx_buf(8), tx_buf(8), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2   30[COMRAM] unsigned int 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;Total ram usage:        8 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    4
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_ringbuf_put
  1640 ;;		_ringbuf_pop
  1641 ;;		_main
  1642 ;;		_ringbuf_backspace
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text4
  1647  001476                     __ptext4:
  1648                           	opt stack 0
  1649  001476                     _ringbuf_num:
  1650                           	opt stack 24
  1651                           
  1652                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  1653                           
  1654                           ;incstack = 0
  1655  001476  EE20 F006          	lfsr	2,6
  1656  00147A  501F               	movf	ringbuf_num@rb,w,c
  1657  00147C  26D9               	addwf	fsr2l,f,c
  1658  00147E  5020               	movf	ringbuf_num@rb+1,w,c
  1659  001480  22DA               	addwfc	fsr2h,f,c
  1660  001482  EE10 F004          	lfsr	1,4
  1661  001486  501F               	movf	ringbuf_num@rb,w,c
  1662  001488  26E1               	addwf	fsr1l,f,c
  1663  00148A  5020               	movf	ringbuf_num@rb+1,w,c
  1664  00148C  22E2               	addwfc	fsr1h,f,c
  1665  00148E  50DE               	movf	postinc2,w,c
  1666  001490  5CE6               	subwf	postinc1,w,c
  1667  001492  50DE               	movf	postinc2,w,c
  1668  001494  58E6               	subwfb	postinc1,w,c
  1669  001496  A0D8               	btfss	status,0,c
  1670  001498  D024               	goto	l6396
  1671                           
  1672                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  1673  00149A  EE20 F004          	lfsr	2,4
  1674  00149E  501F               	movf	ringbuf_num@rb,w,c
  1675  0014A0  26D9               	addwf	fsr2l,f,c
  1676  0014A2  5020               	movf	ringbuf_num@rb+1,w,c
  1677  0014A4  22DA               	addwfc	fsr2h,f,c
  1678  0014A6  CFDE F0CE          	movff	postinc2,??_ringbuf_num
  1679  0014AA  CFDD F0CF          	movff	postdec2,??_ringbuf_num+1
  1680  0014AE  EE20 F006          	lfsr	2,6
  1681  0014B2  501F               	movf	ringbuf_num@rb,w,c
  1682  0014B4  26D9               	addwf	fsr2l,f,c
  1683  0014B6  5020               	movf	ringbuf_num@rb+1,w,c
  1684  0014B8  22DA               	addwfc	fsr2h,f,c
  1685  0014BA  CFDE F0D0          	movff	postinc2,??_ringbuf_num+2
  1686  0014BE  CFDD F0D1          	movff	postdec2,??_ringbuf_num+3
  1687  0014C2  0100               	movlb	0	; () banked
  1688  0014C4  1FD0               	comf	(??_ringbuf_num+2)& (0+255),f,b
  1689  0014C6  1FD1               	comf	(??_ringbuf_num+3)& (0+255),f,b
  1690  0014C8  4BD0               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
  1691  0014CA  2BD1               	incf	(??_ringbuf_num+3)& (0+255),f,b
  1692  0014CC  0100               	movlb	0	; () banked
  1693  0014CE  51CE               	movf	??_ringbuf_num& (0+255),w,b
  1694  0014D0  0100               	movlb	0	; () banked
  1695  0014D2  25D0               	addwf	(??_ringbuf_num+2)& (0+255),w,b
  1696  0014D4  6E1F               	movwf	?_ringbuf_num,c
  1697  0014D6  0100               	movlb	0	; () banked
  1698  0014D8  51CF               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1699  0014DA  0100               	movlb	0	; () banked
  1700  0014DC  21D1               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
  1701  0014DE  6E20               	movwf	?_ringbuf_num+1,c
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;My_header\My_ringbuf.h: 34: } else {
  1705                           
  1706                           ; BSR set to: 0
  1707  0014E0  0012               	return	
  1708  0014E2                     l6396:
  1709                           
  1710                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  1711  0014E2  EE20 F004          	lfsr	2,4
  1712  0014E6  501F               	movf	ringbuf_num@rb,w,c
  1713  0014E8  26D9               	addwf	fsr2l,f,c
  1714  0014EA  5020               	movf	ringbuf_num@rb+1,w,c
  1715  0014EC  22DA               	addwfc	fsr2h,f,c
  1716  0014EE  CFDE F0CE          	movff	postinc2,??_ringbuf_num
  1717  0014F2  CFDD F0CF          	movff	postdec2,??_ringbuf_num+1
  1718  0014F6  EE20 F002          	lfsr	2,2
  1719  0014FA  501F               	movf	ringbuf_num@rb,w,c
  1720  0014FC  26D9               	addwf	fsr2l,f,c
  1721  0014FE  5020               	movf	ringbuf_num@rb+1,w,c
  1722  001500  22DA               	addwfc	fsr2h,f,c
  1723  001502  CFDE F0D0          	movff	postinc2,??_ringbuf_num+2
  1724  001506  CFDD F0D1          	movff	postdec2,??_ringbuf_num+3
  1725  00150A  EE20 F006          	lfsr	2,6
  1726  00150E  501F               	movf	ringbuf_num@rb,w,c
  1727  001510  26D9               	addwf	fsr2l,f,c
  1728  001512  5020               	movf	ringbuf_num@rb+1,w,c
  1729  001514  22DA               	addwfc	fsr2h,f,c
  1730  001516  CFDE F0D2          	movff	postinc2,??_ringbuf_num+4
  1731  00151A  CFDD F0D3          	movff	postdec2,??_ringbuf_num+5
  1732  00151E  0100               	movlb	0	; () banked
  1733  001520  1FD2               	comf	(??_ringbuf_num+4)& (0+255),f,b
  1734  001522  1FD3               	comf	(??_ringbuf_num+5)& (0+255),f,b
  1735  001524  4BD2               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
  1736  001526  2BD3               	incf	(??_ringbuf_num+5)& (0+255),f,b
  1737  001528  0100               	movlb	0	; () banked
  1738  00152A  51D0               	movf	(??_ringbuf_num+2)& (0+255),w,b
  1739  00152C  0100               	movlb	0	; () banked
  1740  00152E  27D2               	addwf	(??_ringbuf_num+4)& (0+255),f,b
  1741  001530  0100               	movlb	0	; () banked
  1742  001532  51D1               	movf	(??_ringbuf_num+3)& (0+255),w,b
  1743  001534  0100               	movlb	0	; () banked
  1744  001536  23D3               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
  1745  001538  0100               	movlb	0	; () banked
  1746  00153A  51CE               	movf	??_ringbuf_num& (0+255),w,b
  1747  00153C  0100               	movlb	0	; () banked
  1748  00153E  25D2               	addwf	(??_ringbuf_num+4)& (0+255),w,b
  1749  001540  6E1F               	movwf	?_ringbuf_num,c
  1750  001542  0100               	movlb	0	; () banked
  1751  001544  51CF               	movf	(??_ringbuf_num+1)& (0+255),w,b
  1752  001546  0100               	movlb	0	; () banked
  1753  001548  21D3               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
  1754  00154A  6E20               	movwf	?_ringbuf_num+1,c
  1755                           
  1756                           ; BSR set to: 0
  1757  00154C  0012               	return	
  1758                           
  1759                           ; BSR set to: 0
  1760                           
  1761                           ; BSR set to: 0
  1762  00154E  0012               	return		;funcret
  1763  001550                     __end_of_ringbuf_num:
  1764                           	opt stack 0
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           intcon	equ	0xFF2
  1770                           postinc0	equ	0xFEE
  1771                           wreg	equ	0xFE8
  1772                           postinc1	equ	0xFE6
  1773                           postdec1	equ	0xFE5
  1774                           fsr1h	equ	0xFE2
  1775                           fsr1l	equ	0xFE1
  1776                           indf2	equ	0xFDF
  1777                           postinc2	equ	0xFDE
  1778                           postdec2	equ	0xFDD
  1779                           fsr2h	equ	0xFDA
  1780                           fsr2l	equ	0xFD9
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _main_init *****************
  1784 ;; Defined at:
  1785 ;;		line 57 in file "PIC18F27J53-SLEEP01.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    9
  1806 ;; This function calls:
  1807 ;;		_ADC_init
  1808 ;;		_I2C_LCD_init
  1809 ;;		_I2C_init
  1810 ;;		_RTCC_init
  1811 ;;		_UART_init
  1812 ;;		_ringbuf_init
  1813 ;;		_timer0_init
  1814 ;;		_timer1_init
  1815 ;;		_timer3_init
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text5
  1822  001E48                     __ptext5:
  1823                           	opt stack 0
  1824  001E48                     _main_init:
  1825                           	opt stack 21
  1826                           
  1827                           ;PIC18F27J53-SLEEP01.c: 58: OSCCONbits.IRCF = 7;
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;incstack = 0
  1831  001E48  88D3               	bsf	4051,4,c	;volatile
  1832  001E4A  8AD3               	bsf	4051,5,c	;volatile
  1833  001E4C  8CD3               	bsf	4051,6,c	;volatile
  1834                           
  1835                           ;PIC18F27J53-SLEEP01.c: 59: OSCTUNEbits.PLLEN = 1;
  1836  001E4E  8C9B               	bsf	3995,6,c	;volatile
  1837                           
  1838                           ;PIC18F27J53-SLEEP01.c: 60: OSCCONbits.SCS = 0;
  1839  001E50  0EFC               	movlw	-4
  1840  001E52  16D3               	andwf	4051,f,c	;volatile
  1841                           
  1842                           ;PIC18F27J53-SLEEP01.c: 61: TRISA = 0b00011111;
  1843  001E54  0E1F               	movlw	31
  1844  001E56  6E92               	movwf	3986,c	;volatile
  1845                           
  1846                           ;PIC18F27J53-SLEEP01.c: 62: TRISB = 0b00110001;
  1847  001E58  0E31               	movlw	49
  1848  001E5A  6E93               	movwf	3987,c	;volatile
  1849                           
  1850                           ;PIC18F27J53-SLEEP01.c: 63: TRISC = 0b10111010;
  1851  001E5C  0EBA               	movlw	186
  1852  001E5E  6E94               	movwf	3988,c	;volatile
  1853                           
  1854                           ;PIC18F27J53-SLEEP01.c: 64: ANCON0 = 0b11111111;
  1855  001E60  010F               	movlb	15	; () banked
  1856  001E62  6948               	setf	72,b	;volatile
  1857                           
  1858                           ;PIC18F27J53-SLEEP01.c: 65: ANCON1 = 0b00001111;
  1859  001E64  0E0F               	movlw	15
  1860  001E66  010F               	movlb	15	; () banked
  1861  001E68  6F49               	movwf	73,b	;volatile
  1862                           
  1863                           ; BSR set to: 15
  1864                           ;PIC18F27J53-SLEEP01.c: 66: INTCON2bits.RBPU = 0;
  1865  001E6A  9EF1               	bcf	intcon2,7,c	;volatile
  1866                           
  1867                           ; BSR set to: 15
  1868                           ;PIC18F27J53-SLEEP01.c: 68: timer0_init(8);
  1869  001E6C  0E08               	movlw	8
  1870  001E6E  EC26  F011         	call	_timer0_init
  1871                           
  1872                           ;PIC18F27J53-SLEEP01.c: 69: timer1_init(0, 2);
  1873  001E72  0E02               	movlw	2
  1874  001E74  6E1F               	movwf	timer1_init@clock_select,c
  1875  001E76  0E00               	movlw	0
  1876  001E78  ECE8  F010         	call	_timer1_init
  1877                           
  1878                           ;PIC18F27J53-SLEEP01.c: 70: timer3_init(3);
  1879  001E7C  0E03               	movlw	3
  1880  001E7E  EC83  F011         	call	_timer3_init
  1881                           
  1882                           ;PIC18F27J53-SLEEP01.c: 71: I2C_init();
  1883  001E82  EC37  F012         	call	_I2C_init	;wreg free
  1884                           
  1885                           ;PIC18F27J53-SLEEP01.c: 72: I2C_LCD_init();
  1886  001E86  EC97  F010         	call	_I2C_LCD_init	;wreg free
  1887                           
  1888                           ;PIC18F27J53-SLEEP01.c: 73: RTCC_init();
  1889  001E8A  EC3F  F011         	call	_RTCC_init	;wreg free
  1890                           
  1891                           ;PIC18F27J53-SLEEP01.c: 74: ADC_init(0);
  1892  001E8E  0E00               	movlw	0
  1893  001E90  ECEB  F011         	call	_ADC_init
  1894                           
  1895                           ;PIC18F27J53-SLEEP01.c: 76: UART_init();
  1896  001E94  ECCB  F011         	call	_UART_init	;wreg free
  1897                           
  1898                           ;PIC18F27J53-SLEEP01.c: 77: static uint8_t txbuf[2000];
  1899                           ;PIC18F27J53-SLEEP01.c: 78: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  1900  001E98  0EB2               	movlw	low _tx_buf
  1901  001E9A  0100               	movlb	0	; () banked
  1902  001E9C  6FCE               	movwf	ringbuf_init@rb& (0+255),b
  1903  001E9E  0E00               	movlw	high _tx_buf
  1904  001EA0  0100               	movlb	0	; () banked
  1905  001EA2  6FCF               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1906  001EA4  0EE8               	movlw	low main_init@txbuf
  1907  001EA6  0100               	movlb	0	; () banked
  1908  001EA8  6FD0               	movwf	ringbuf_init@internal_buf& (0+255),b
  1909  001EAA  0E01               	movlw	high main_init@txbuf
  1910  001EAC  0100               	movlb	0	; () banked
  1911  001EAE  6FD1               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1912  001EB0  0E07               	movlw	7
  1913  001EB2  0100               	movlb	0	; () banked
  1914  001EB4  6FD3               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1915  001EB6  0ED0               	movlw	208
  1916  001EB8  6FD2               	movwf	ringbuf_init@bufsize& (0+255),b
  1917  001EBA  EC6D  F010         	call	_ringbuf_init	;wreg free
  1918                           
  1919                           ;PIC18F27J53-SLEEP01.c: 79: static uint8_t rxbuf[100];
  1920                           ;PIC18F27J53-SLEEP01.c: 80: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  1921  001EBE  0EAA               	movlw	low _rx_buf
  1922  001EC0  0100               	movlb	0	; () banked
  1923  001EC2  6FCE               	movwf	ringbuf_init@rb& (0+255),b
  1924  001EC4  0E00               	movlw	high _rx_buf
  1925  001EC6  0100               	movlb	0	; () banked
  1926  001EC8  6FCF               	movwf	(ringbuf_init@rb+1)& (0+255),b
  1927  001ECA  0E00               	movlw	low main_init@rxbuf
  1928  001ECC  0100               	movlb	0	; () banked
  1929  001ECE  6FD0               	movwf	ringbuf_init@internal_buf& (0+255),b
  1930  001ED0  0E01               	movlw	high main_init@rxbuf
  1931  001ED2  0100               	movlb	0	; () banked
  1932  001ED4  6FD1               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  1933  001ED6  0E00               	movlw	0
  1934  001ED8  0100               	movlb	0	; () banked
  1935  001EDA  6FD3               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  1936  001EDC  0E64               	movlw	100
  1937  001EDE  6FD2               	movwf	ringbuf_init@bufsize& (0+255),b
  1938  001EE0  EC6D  F010         	call	_ringbuf_init	;wreg free
  1939  001EE4  0012               	return		;funcret
  1940  001EE6                     __end_of_main_init:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           intcon	equ	0xFF2
  1947                           intcon2	equ	0xFF1
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postinc1	equ	0xFE6
  1951                           postdec1	equ	0xFE5
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           indf2	equ	0xFDF
  1955                           postinc2	equ	0xFDE
  1956                           postdec2	equ	0xFDD
  1957                           fsr2h	equ	0xFDA
  1958                           fsr2l	equ	0xFD9
  1959                           status	equ	0xFD8
  1960                           
  1961 ;; *************** function _timer3_init *****************
  1962 ;; Defined at:
  1963 ;;		line 85 in file "../My_header\My_header.h"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  prescaler       1    wreg     unsigned char 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  prescaler       1   31[COMRAM] unsigned char 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1981 ;;Total ram usage:        2 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    4
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main_init
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text6
  1992  002306                     __ptext6:
  1993                           	opt stack 0
  1994  002306                     _timer3_init:
  1995                           	opt stack 25
  1996                           
  1997                           ;incstack = 0
  1998                           ;timer3_init@prescaler stored from wreg
  1999  002306  6E20               	movwf	timer3_init@prescaler,c
  2000                           
  2001                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
  2002  002308  0E3F               	movlw	-193
  2003  00230A  1679               	andwf	3961,f,c	;volatile
  2004                           
  2005                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
  2006  00230C  9679               	bcf	3961,3,c	;volatile
  2007                           
  2008                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
  2009  00230E  C020  F01F         	movff	timer3_init@prescaler,??_timer3_init
  2010  002312  3A1F               	swapf	??_timer3_init,f,c
  2011  002314  5079               	movf	3961,w,c	;volatile
  2012  002316  181F               	xorwf	??_timer3_init,w,c
  2013  002318  0BCF               	andlw	-49
  2014  00231A  181F               	xorwf	??_timer3_init,w,c
  2015  00231C  6E79               	movwf	3961,c	;volatile
  2016                           
  2017                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
  2018  00231E  9E79               	bcf	3961,7,c	;volatile
  2019                           
  2020                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
  2021  002320  8079               	bsf	3961,0,c	;volatile
  2022                           
  2023                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
  2024  002322  92A2               	bcf	4002,1,c	;volatile
  2025                           
  2026                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
  2027  002324  92A1               	bcf	4001,1,c	;volatile
  2028                           
  2029                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
  2030  002326  82A0               	bsf	4000,1,c	;volatile
  2031                           
  2032                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
  2033  002328  8CF2               	bsf	intcon,6,c	;volatile
  2034  00232A  0012               	return		;funcret
  2035  00232C                     __end_of_timer3_init:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           intcon	equ	0xFF2
  2042                           intcon2	equ	0xFF1
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           postinc1	equ	0xFE6
  2046                           postdec1	equ	0xFE5
  2047                           fsr1h	equ	0xFE2
  2048                           fsr1l	equ	0xFE1
  2049                           indf2	equ	0xFDF
  2050                           postinc2	equ	0xFDE
  2051                           postdec2	equ	0xFDD
  2052                           fsr2h	equ	0xFDA
  2053                           fsr2l	equ	0xFD9
  2054                           status	equ	0xFD8
  2055                           
  2056 ;; *************** function _timer1_init *****************
  2057 ;; Defined at:
  2058 ;;		line 54 in file "../My_header\My_header.h"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  prescaler       1    wreg     unsigned char 
  2061 ;;  clock_select    1   30[COMRAM] unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  prescaler       1   32[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2076 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;Total ram usage:        3 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    4
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_main_init
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text7
  2088  0021D0                     __ptext7:
  2089                           	opt stack 0
  2090  0021D0                     _timer1_init:
  2091                           	opt stack 25
  2092                           
  2093                           ;incstack = 0
  2094                           ;timer1_init@prescaler stored from wreg
  2095  0021D0  6E21               	movwf	timer1_init@prescaler,c
  2096                           
  2097                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
  2098  0021D2  C01F  F020         	movff	timer1_init@clock_select,??_timer1_init
  2099  0021D6  3A20               	swapf	??_timer1_init,f,c
  2100  0021D8  4620               	rlncf	??_timer1_init,f,c
  2101  0021DA  4620               	rlncf	??_timer1_init,f,c
  2102  0021DC  50CD               	movf	4045,w,c	;volatile
  2103  0021DE  1820               	xorwf	??_timer1_init,w,c
  2104  0021E0  0B3F               	andlw	-193
  2105  0021E2  1820               	xorwf	??_timer1_init,w,c
  2106  0021E4  6ECD               	movwf	4045,c	;volatile
  2107                           
  2108                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  2109  0021E6  0E02               	movlw	2
  2110  0021E8  181F               	xorwf	timer1_init@clock_select,w,c
  2111  0021EA  A4D8               	btfss	status,2,c
  2112  0021EC  D002               	goto	l702
  2113  0021EE  86CD               	bsf	4045,3,c	;volatile
  2114  0021F0  D002               	goto	l4916
  2115  0021F2                     l702:
  2116                           
  2117                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
  2118  0021F2  96CD               	bcf	4045,3,c	;volatile
  2119  0021F4  D000               	goto	l4916
  2120  0021F6                     l4916:
  2121                           
  2122                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
  2123  0021F6  C021  F020         	movff	timer1_init@prescaler,??_timer1_init
  2124  0021FA  3A20               	swapf	??_timer1_init,f,c
  2125  0021FC  50CD               	movf	4045,w,c	;volatile
  2126  0021FE  1820               	xorwf	??_timer1_init,w,c
  2127  002200  0BCF               	andlw	-49
  2128  002202  1820               	xorwf	??_timer1_init,w,c
  2129  002204  6ECD               	movwf	4045,c	;volatile
  2130                           
  2131                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
  2132  002206  84CD               	bsf	4045,2,c	;volatile
  2133                           
  2134                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
  2135  002208  92CD               	bcf	4045,1,c	;volatile
  2136                           
  2137                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
  2138  00220A  80CD               	bsf	4045,0,c	;volatile
  2139                           
  2140                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
  2141  00220C  909F               	bcf	3999,0,c	;volatile
  2142                           
  2143                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
  2144  00220E  909E               	bcf	3998,0,c	;volatile
  2145                           
  2146                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
  2147  002210  809D               	bsf	3997,0,c	;volatile
  2148                           
  2149                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
  2150  002212  8CF2               	bsf	intcon,6,c	;volatile
  2151  002214  0012               	return		;funcret
  2152  002216                     __end_of_timer1_init:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           intcon	equ	0xFF2
  2159                           intcon2	equ	0xFF1
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           postinc1	equ	0xFE6
  2163                           postdec1	equ	0xFE5
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           indf2	equ	0xFDF
  2167                           postinc2	equ	0xFDE
  2168                           postdec2	equ	0xFDD
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _timer0_init *****************
  2174 ;; Defined at:
  2175 ;;		line 15 in file "../My_header\My_header.h"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  prescaler       1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  prescaler       1   31[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    4
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_main_init
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text8
  2204  00224C                     __ptext8:
  2205                           	opt stack 0
  2206  00224C                     _timer0_init:
  2207                           	opt stack 25
  2208                           
  2209                           ;incstack = 0
  2210                           ;timer0_init@prescaler stored from wreg
  2211  00224C  6E20               	movwf	timer0_init@prescaler,c
  2212                           
  2213                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
  2214  00224E  8ED5               	bsf	4053,7,c	;volatile
  2215                           
  2216                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
  2217  002250  8CD5               	bsf	4053,6,c	;volatile
  2218                           
  2219                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
  2220  002252  9AD5               	bcf	4053,5,c	;volatile
  2221                           
  2222                           ;My_header\My_header.h: 19: if (prescaler == 0) {
  2223  002254  5020               	movf	timer0_init@prescaler,w,c
  2224  002256  A4D8               	btfss	status,2,c
  2225  002258  D002               	goto	l697
  2226                           
  2227                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
  2228  00225A  86D5               	bsf	4053,3,c	;volatile
  2229                           
  2230                           ;My_header\My_header.h: 21: } else {
  2231  00225C  D00B               	goto	l4904
  2232  00225E                     l697:
  2233                           
  2234                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
  2235  00225E  96D5               	bcf	4053,3,c	;volatile
  2236                           
  2237                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
  2238  002260  C020  F01F         	movff	timer0_init@prescaler,??_timer0_init
  2239  002264  0EFF               	movlw	255
  2240  002266  261F               	addwf	??_timer0_init,f,c
  2241  002268  50D5               	movf	4053,w,c	;volatile
  2242  00226A  181F               	xorwf	??_timer0_init,w,c
  2243  00226C  0BF8               	andlw	-8
  2244  00226E  181F               	xorwf	??_timer0_init,w,c
  2245  002270  6ED5               	movwf	4053,c	;volatile
  2246  002272  D000               	goto	l4904
  2247  002274                     l4904:
  2248                           
  2249                           ;My_header\My_header.h: 24: }
  2250                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
  2251  002274  8AF2               	bsf	intcon,5,c	;volatile
  2252                           
  2253                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
  2254  002276  94F2               	bcf	intcon,2,c	;volatile
  2255                           
  2256                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
  2257  002278  94F1               	bcf	intcon2,2,c	;volatile
  2258                           
  2259                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
  2260  00227A  8CF2               	bsf	intcon,6,c	;volatile
  2261  00227C  0012               	return		;funcret
  2262  00227E                     __end_of_timer0_init:
  2263                           	opt stack 0
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           intcon	equ	0xFF2
  2269                           intcon2	equ	0xFF1
  2270                           postinc0	equ	0xFEE
  2271                           wreg	equ	0xFE8
  2272                           postinc1	equ	0xFE6
  2273                           postdec1	equ	0xFE5
  2274                           fsr1h	equ	0xFE2
  2275                           fsr1l	equ	0xFE1
  2276                           indf2	equ	0xFDF
  2277                           postinc2	equ	0xFDE
  2278                           postdec2	equ	0xFDD
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _ringbuf_init *****************
  2284 ;; Defined at:
  2285 ;;		line 24 in file "../My_header\My_ringbuf.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  2288 ;;		 -> rx_buf(8), tx_buf(8), 
  2289 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  2290 ;;		 -> main_init@rxbuf(100), main_init@txbuf(2000), 
  2291 ;;  bufsize         2    4[BANK0 ] unsigned int 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        6 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    4
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main_init
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text9
  2318  0020DA                     __ptext9:
  2319                           	opt stack 0
  2320  0020DA                     _ringbuf_init:
  2321                           	opt stack 25
  2322                           
  2323                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
  2324                           
  2325                           ;incstack = 0
  2326  0020DA  C0CE  FFD9         	movff	ringbuf_init@rb,fsr2l
  2327  0020DE  C0CF  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  2328  0020E2  C0D0  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  2329  0020E6  C0D1  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  2330                           
  2331                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
  2332  0020EA  0100               	movlb	0	; () banked
  2333  0020EC  EE20 F002          	lfsr	2,2
  2334  0020F0  51CE               	movf	ringbuf_init@rb& (0+255),w,b
  2335  0020F2  26D9               	addwf	fsr2l,f,c
  2336  0020F4  51CF               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2337  0020F6  22DA               	addwfc	fsr2h,f,c
  2338  0020F8  C0D2  FFDE         	movff	ringbuf_init@bufsize,postinc2
  2339  0020FC  C0D3  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
  2343  002100  0100               	movlb	0	; () banked
  2344  002102  EE20 F004          	lfsr	2,4
  2345  002106  51CE               	movf	ringbuf_init@rb& (0+255),w,b
  2346  002108  26D9               	addwf	fsr2l,f,c
  2347  00210A  51CF               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2348  00210C  22DA               	addwfc	fsr2h,f,c
  2349  00210E  0E00               	movlw	0
  2350  002110  6EDE               	movwf	postinc2,c
  2351  002112  0E00               	movlw	0
  2352  002114  6EDD               	movwf	postdec2,c
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
  2356  002116  0100               	movlb	0	; () banked
  2357  002118  EE20 F006          	lfsr	2,6
  2358  00211C  51CE               	movf	ringbuf_init@rb& (0+255),w,b
  2359  00211E  26D9               	addwf	fsr2l,f,c
  2360  002120  51CF               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  2361  002122  22DA               	addwfc	fsr2h,f,c
  2362  002124  0E00               	movlw	0
  2363  002126  6EDE               	movwf	postinc2,c
  2364  002128  0E00               	movlw	0
  2365  00212A  6EDD               	movwf	postdec2,c
  2366                           
  2367                           ; BSR set to: 0
  2368  00212C  0012               	return		;funcret
  2369  00212E                     __end_of_ringbuf_init:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           intcon	equ	0xFF2
  2376                           intcon2	equ	0xFF1
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           postinc1	equ	0xFE6
  2380                           postdec1	equ	0xFE5
  2381                           fsr1h	equ	0xFE2
  2382                           fsr1l	equ	0xFE1
  2383                           indf2	equ	0xFDF
  2384                           postinc2	equ	0xFDE
  2385                           postdec2	equ	0xFDD
  2386                           fsr2h	equ	0xFDA
  2387                           fsr2l	equ	0xFD9
  2388                           status	equ	0xFD8
  2389                           
  2390 ;; *************** function _UART_init *****************
  2391 ;; Defined at:
  2392 ;;		line 192 in file "../My_header\My_header.h"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, status,2
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    4
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_main_init
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text10
  2421  002396                     __ptext10:
  2422                           	opt stack 0
  2423  002396                     _UART_init:
  2424                           	opt stack 25
  2425                           
  2426                           ;My_header\My_header.h: 193: TXSTA1bits.TX9 = 0;
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;incstack = 0
  2430  002396  9CAD               	bcf	4013,6,c	;volatile
  2431                           
  2432                           ;My_header\My_header.h: 194: TXSTA1bits.TXEN = 1;
  2433  002398  8AAD               	bsf	4013,5,c	;volatile
  2434                           
  2435                           ;My_header\My_header.h: 195: TXSTA1bits.SYNC = 0;
  2436  00239A  98AD               	bcf	4013,4,c	;volatile
  2437                           
  2438                           ;My_header\My_header.h: 196: TXSTA1bits.BRGH = 0;
  2439  00239C  94AD               	bcf	4013,2,c	;volatile
  2440                           
  2441                           ;My_header\My_header.h: 197: RCSTA1bits.SPEN = 1;
  2442  00239E  8EAC               	bsf	4012,7,c	;volatile
  2443                           
  2444                           ;My_header\My_header.h: 198: RCSTA1bits.RX9 = 0;
  2445  0023A0  9CAC               	bcf	4012,6,c	;volatile
  2446                           
  2447                           ;My_header\My_header.h: 199: RCSTA1bits.CREN = 1;
  2448  0023A2  88AC               	bsf	4012,4,c	;volatile
  2449                           
  2450                           ;My_header\My_header.h: 200: BAUDCON1bits.BRG16 = 0;
  2451  0023A4  967E               	bcf	3966,3,c	;volatile
  2452                           
  2453                           ;My_header\My_header.h: 201: SPBRG1 = 48000000 / 64 / 9600 - 1;
  2454  0023A6  0E4D               	movlw	77
  2455  0023A8  6EB0               	movwf	4016,c	;volatile
  2456                           
  2457                           ;My_header\My_header.h: 202: SPBRGH1 = 0;
  2458  0023AA  0E00               	movlw	0
  2459  0023AC  6E7F               	movwf	3967,c	;volatile
  2460                           
  2461                           ;My_header\My_header.h: 203: IPR1bits.RC1IP = 0;
  2462  0023AE  9A9F               	bcf	3999,5,c	;volatile
  2463                           
  2464                           ;My_header\My_header.h: 204: PIE1bits.RCIE = 1;
  2465  0023B0  8A9D               	bsf	3997,5,c	;volatile
  2466                           
  2467                           ;My_header\My_header.h: 205: INTCONbits.PEIE = 1;
  2468  0023B2  8CF2               	bsf	intcon,6,c	;volatile
  2469  0023B4  0012               	return		;funcret
  2470  0023B6                     __end_of_UART_init:
  2471                           	opt stack 0
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           intcon	equ	0xFF2
  2477                           intcon2	equ	0xFF1
  2478                           postinc0	equ	0xFEE
  2479                           wreg	equ	0xFE8
  2480                           postinc1	equ	0xFE6
  2481                           postdec1	equ	0xFE5
  2482                           fsr1h	equ	0xFE2
  2483                           fsr1l	equ	0xFE1
  2484                           indf2	equ	0xFDF
  2485                           postinc2	equ	0xFDE
  2486                           postdec2	equ	0xFDD
  2487                           fsr2h	equ	0xFDA
  2488                           fsr2l	equ	0xFD9
  2489                           status	equ	0xFD8
  2490                           
  2491 ;; *************** function _RTCC_init *****************
  2492 ;; Defined at:
  2493 ;;		line 56 in file "../My_header\My_RTCC.h"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg, status,2
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    4
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_main_init
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text11
  2522  00227E                     __ptext11:
  2523                           	opt stack 0
  2524  00227E                     _RTCC_init:
  2525                           	opt stack 25
  2526                           
  2527                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
  2528                           
  2529                           ;incstack = 0
  2530  00227E  010F               	movlb	15	; () banked
  2531  002280  8B3F               	bsf	63,5,b	;volatile
  2532                           
  2533                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
  2534  002282  010F               	movlb	15	; () banked
  2535  002284  BB3F               	btfsc	63,5,b	;volatile
  2536  002286  D007               	goto	l5002
  2537                           
  2538                           ; BSR set to: 15
  2539                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
  2540  002288  0E55               	movlw	85
  2541  00228A  6EA7               	movwf	4007,c	;volatile
  2542                           
  2543                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
  2544  00228C  0EAA               	movlw	170
  2545  00228E  6EA7               	movwf	4007,c	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
  2549  002290  010F               	movlb	15	; () banked
  2550  002292  8B3F               	bsf	63,5,b	;volatile
  2551  002294  D000               	goto	l5002
  2552  002296                     l5002:
  2553                           
  2554                           ; BSR set to: 15
  2555                           ;My_header\My_RTCC.h: 62: }
  2556                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
  2557  002296  010F               	movlb	15	; () banked
  2558  002298  8F3F               	bsf	63,7,b	;volatile
  2559                           
  2560                           ; BSR set to: 15
  2561                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
  2562  00229A  010F               	movlb	15	; () banked
  2563  00229C  953F               	bcf	63,2,b	;volatile
  2564                           
  2565                           ; BSR set to: 15
  2566                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
  2567  00229E  010F               	movlb	15	; () banked
  2568  0022A0  833C               	bsf	60,1,b	;volatile
  2569                           
  2570                           ; BSR set to: 15
  2571                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
  2572  0022A2  010F               	movlb	15	; () banked
  2573  0022A4  853C               	bsf	60,2,b	;volatile
  2574                           
  2575                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
  2576  0022A6  0E00               	movlw	0
  2577  0022A8  010F               	movlb	15	; () banked
  2578  0022AA  6F3E               	movwf	62,b	;volatile
  2579                           
  2580                           ; BSR set to: 15
  2581  0022AC  0012               	return		;funcret
  2582  0022AE                     __end_of_RTCC_init:
  2583                           	opt stack 0
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           intcon	equ	0xFF2
  2589                           intcon2	equ	0xFF1
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           postinc1	equ	0xFE6
  2593                           postdec1	equ	0xFE5
  2594                           fsr1h	equ	0xFE2
  2595                           fsr1l	equ	0xFE1
  2596                           indf2	equ	0xFDF
  2597                           postinc2	equ	0xFDE
  2598                           postdec2	equ	0xFDD
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _I2C_init *****************
  2604 ;; Defined at:
  2605 ;;		line 25 in file "../My_header\My_I2C.h"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;		None               void
  2612 ;; Registers used:
  2613 ;;		wreg, status,2
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    4
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main_init
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text12
  2634  00246E                     __ptext12:
  2635                           	opt stack 0
  2636  00246E                     _I2C_init:
  2637                           	opt stack 25
  2638                           
  2639                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
  2640                           
  2641                           ; BSR set to: 15
  2642                           ;incstack = 0
  2643  00246E  0E80               	movlw	128
  2644  002470  6EC7               	movwf	4039,c	;volatile
  2645                           
  2646                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
  2647  002472  0E28               	movlw	40
  2648  002474  6EC6               	movwf	4038,c	;volatile
  2649                           
  2650                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
  2651  002476  0E13               	movlw	19
  2652  002478  6EC8               	movwf	4040,c	;volatile
  2653                           
  2654                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
  2655  00247A  969E               	bcf	3998,3,c	;volatile
  2656                           
  2657                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
  2658  00247C  96A1               	bcf	4001,3,c	;volatile
  2659  00247E  0012               	return		;funcret
  2660  002480                     __end_of_I2C_init:
  2661                           	opt stack 0
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           intcon	equ	0xFF2
  2667                           intcon2	equ	0xFF1
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           postinc1	equ	0xFE6
  2671                           postdec1	equ	0xFE5
  2672                           fsr1h	equ	0xFE2
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           postinc2	equ	0xFDE
  2676                           postdec2	equ	0xFDD
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8
  2680                           
  2681 ;; *************** function _I2C_LCD_init *****************
  2682 ;; Defined at:
  2683 ;;		line 164 in file "../My_header\My_I2C.h"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;		None               void
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    8
  2704 ;; This function calls:
  2705 ;;		_Delay_ms
  2706 ;;		_I2C_LCD_Clear
  2707 ;;		_I2C_LCD_Command
  2708 ;; This function is called by:
  2709 ;;		_main_init
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text13
  2714  00212E                     __ptext13:
  2715                           	opt stack 0
  2716  00212E                     _I2C_LCD_init:
  2717                           	opt stack 21
  2718                           
  2719                           ;My_header\My_I2C.h: 165: Delay_ms(40);
  2720                           
  2721                           ;incstack = 0
  2722  00212E  0E00               	movlw	0
  2723  002130  6E20               	movwf	Delay_ms@ms+1,c
  2724  002132  0E28               	movlw	40
  2725  002134  6E1F               	movwf	Delay_ms@ms,c
  2726  002136  EC96  F011         	call	_Delay_ms	;wreg free
  2727                           
  2728                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
  2729  00213A  0E38               	movlw	56
  2730  00213C  EC0B  F011         	call	_I2C_LCD_Command
  2731                           
  2732                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
  2733  002140  0E39               	movlw	57
  2734  002142  EC0B  F011         	call	_I2C_LCD_Command
  2735                           
  2736                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
  2737  002146  0E14               	movlw	20
  2738  002148  EC0B  F011         	call	_I2C_LCD_Command
  2739                           
  2740                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
  2741  00214C  0E70               	movlw	112
  2742  00214E  EC0B  F011         	call	_I2C_LCD_Command
  2743                           
  2744                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
  2745  002152  0E56               	movlw	86
  2746  002154  EC0B  F011         	call	_I2C_LCD_Command
  2747                           
  2748                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
  2749  002158  0E6C               	movlw	108
  2750  00215A  EC0B  F011         	call	_I2C_LCD_Command
  2751                           
  2752                           ;My_header\My_I2C.h: 172: Delay_ms(200);
  2753  00215E  0E00               	movlw	0
  2754  002160  6E20               	movwf	Delay_ms@ms+1,c
  2755  002162  0EC8               	movlw	200
  2756  002164  6E1F               	movwf	Delay_ms@ms,c
  2757  002166  EC96  F011         	call	_Delay_ms	;wreg free
  2758                           
  2759                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
  2760  00216A  0E38               	movlw	56
  2761  00216C  EC0B  F011         	call	_I2C_LCD_Command
  2762                           
  2763                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
  2764  002170  0E0C               	movlw	12
  2765  002172  EC0B  F011         	call	_I2C_LCD_Command
  2766                           
  2767                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
  2768  002176  0E06               	movlw	6
  2769  002178  EC0B  F011         	call	_I2C_LCD_Command
  2770                           
  2771                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
  2772  00217C  EC1F  F012         	call	_I2C_LCD_Clear	;wreg free
  2773  002180  0012               	return		;funcret
  2774  002182                     __end_of_I2C_LCD_init:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           intcon	equ	0xFF2
  2781                           intcon2	equ	0xFF1
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           postinc1	equ	0xFE6
  2785                           postdec1	equ	0xFE5
  2786                           fsr1h	equ	0xFE2
  2787                           fsr1l	equ	0xFE1
  2788                           indf2	equ	0xFDF
  2789                           postinc2	equ	0xFDE
  2790                           postdec2	equ	0xFDD
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _I2C_LCD_Clear *****************
  2796 ;; Defined at:
  2797 ;;		line 107 in file "../My_header\My_I2C.h"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;Total ram usage:        1 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    7
  2818 ;; This function calls:
  2819 ;;		_I2C_LCD_Command
  2820 ;; This function is called by:
  2821 ;;		_I2C_LCD_init
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text14
  2826  00243E                     __ptext14:
  2827                           	opt stack 0
  2828  00243E                     _I2C_LCD_Clear:
  2829                           	opt stack 21
  2830                           
  2831                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
  2832                           
  2833                           ;incstack = 0
  2834  00243E  0E01               	movlw	1
  2835  002440  EC0B  F011         	call	_I2C_LCD_Command
  2836                           
  2837                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  2838  002444  0E12               	movlw	18
  2839  002446  6E23               	movwf	??_I2C_LCD_Clear& (0+255),c
  2840  002448  0E23               	movlw	35
  2841  00244A                     u6947:
  2842  00244A  2EE8               	decfsz	wreg,f,c
  2843  00244C  D7FE               	goto	u6947
  2844  00244E  2E23               	decfsz	??_I2C_LCD_Clear& (0+255),f,c
  2845  002450  D7FC               	goto	u6947
  2846  002452  F000               	nop	
  2847  002454  0012               	return		;funcret
  2848  002456                     __end_of_I2C_LCD_Clear:
  2849                           	opt stack 0
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           intcon	equ	0xFF2
  2855                           intcon2	equ	0xFF1
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           postinc1	equ	0xFE6
  2859                           postdec1	equ	0xFE5
  2860                           fsr1h	equ	0xFE2
  2861                           fsr1l	equ	0xFE1
  2862                           indf2	equ	0xFDF
  2863                           postinc2	equ	0xFDE
  2864                           postdec2	equ	0xFDD
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _Delay_ms *****************
  2870 ;; Defined at:
  2871 ;;		line 333 in file "../My_header\My_header.h"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  ms              2   30[COMRAM] unsigned int 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;Total ram usage:        3 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    4
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_I2C_LCD_init
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text15
  2900  00232C                     __ptext15:
  2901                           	opt stack 0
  2902  00232C                     _Delay_ms:
  2903                           	opt stack 24
  2904                           
  2905                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  2906                           
  2907                           ;incstack = 0
  2908  00232C  D009               	goto	l4740
  2909  00232E                     l4738:
  2910  00232E  0E10               	movlw	16
  2911  002330  6E21               	movwf	??_Delay_ms& (0+255),c
  2912  002332  0E94               	movlw	148
  2913  002334                     u6957:
  2914  002334  2EE8               	decfsz	wreg,f,c
  2915  002336  D7FE               	goto	u6957
  2916  002338  2E21               	decfsz	??_Delay_ms& (0+255),f,c
  2917  00233A  D7FC               	goto	u6957
  2918  00233C  D000               	nop2	
  2919  00233E  D000               	goto	l4740
  2920  002340                     l4740:
  2921  002340  061F               	decf	Delay_ms@ms,f,c
  2922  002342  A0D8               	btfss	status,0,c
  2923  002344  0620               	decf	Delay_ms@ms+1,f,c
  2924  002346  281F               	incf	Delay_ms@ms,w,c
  2925  002348  E1F2               	bnz	l4738
  2926  00234A  2820               	incf	Delay_ms@ms+1,w,c
  2927  00234C  A4D8               	btfss	status,2,c
  2928  00234E  D7EF               	goto	l4738
  2929  002350  0012               	return		;funcret
  2930  002352                     __end_of_Delay_ms:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           intcon	equ	0xFF2
  2937                           intcon2	equ	0xFF1
  2938                           postinc0	equ	0xFEE
  2939                           wreg	equ	0xFE8
  2940                           postinc1	equ	0xFE6
  2941                           postdec1	equ	0xFE5
  2942                           fsr1h	equ	0xFE2
  2943                           fsr1l	equ	0xFE1
  2944                           indf2	equ	0xFDF
  2945                           postinc2	equ	0xFDE
  2946                           postdec2	equ	0xFDD
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function _ADC_init *****************
  2952 ;; Defined at:
  2953 ;;		line 149 in file "../My_header\My_header.h"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  p_ref           1    wreg     unsigned char 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  p_ref           1   30[COMRAM] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		wreg, status,2
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2968 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;Total ram usage:        1 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    4
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_main_init
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text16
  2982  0023D6                     __ptext16:
  2983                           	opt stack 0
  2984  0023D6                     _ADC_init:
  2985                           	opt stack 25
  2986                           
  2987                           ;incstack = 0
  2988                           ;ADC_init@p_ref stored from wreg
  2989  0023D6  6E1F               	movwf	ADC_init@p_ref,c
  2990                           
  2991                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
  2992  0023D8  9EC2               	bcf	4034,7,c	;volatile
  2993                           
  2994                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
  2995  0023DA  B01F               	btfsc	ADC_init@p_ref,0,c
  2996  0023DC  D002               	bra	u4295
  2997  0023DE  9CC2               	bcf	4034,6,c	;volatile
  2998  0023E0  D001               	bra	u4296
  2999  0023E2                     u4295:
  3000  0023E2  8CC2               	bsf	4034,6,c	;volatile
  3001  0023E4                     u4296:
  3002                           
  3003                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
  3004  0023E4  8EC1               	bsf	4033,7,c	;volatile
  3005                           
  3006                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
  3007  0023E6  9CC1               	bcf	4033,6,c	;volatile
  3008                           
  3009                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
  3010  0023E8  50C1               	movf	4033,w,c	;volatile
  3011  0023EA  0BF8               	andlw	-8
  3012  0023EC  0906               	iorlw	6
  3013  0023EE  6EC1               	movwf	4033,c	;volatile
  3014  0023F0  0012               	return		;funcret
  3015  0023F2                     __end_of_ADC_init:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           intcon	equ	0xFF2
  3022                           intcon2	equ	0xFF1
  3023                           postinc0	equ	0xFEE
  3024                           wreg	equ	0xFE8
  3025                           postinc1	equ	0xFE6
  3026                           postdec1	equ	0xFE5
  3027                           fsr1h	equ	0xFE2
  3028                           fsr1l	equ	0xFE1
  3029                           indf2	equ	0xFDF
  3030                           postinc2	equ	0xFDE
  3031                           postdec2	equ	0xFDD
  3032                           fsr2h	equ	0xFDA
  3033                           fsr2l	equ	0xFD9
  3034                           status	equ	0xFD8
  3035                           
  3036 ;; *************** function _RTCC_from_epoch *****************
  3037 ;; Defined at:
  3038 ;;		line 242 in file "../My_header\My_RTCC.h"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  ct              2    0[BANK1 ] PTR struct .
  3041 ;;		 -> caltime_now(7), 
  3042 ;;  ep              2    2[BANK1 ] PTR unsigned long 
  3043 ;;		 -> epoch_now(4), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3055 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;Total ram usage:        4 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    7
  3062 ;; This function calls:
  3063 ;;		_caltime_to_RTCC
  3064 ;;		_epoch_to_caltime
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;;		_RTCC_adjust_time_inc
  3068 ;;		_RTCC_adjust_time_dec
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text17
  3073  002352                     __ptext17:
  3074                           	opt stack 0
  3075  002352                     _RTCC_from_epoch:
  3076                           	opt stack 23
  3077                           
  3078                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  3079                           
  3080                           ;incstack = 0
  3081  002352  C1E4  F0EA         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  3082  002356  C1E5  F0EB         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  3083  00235A  C1E6  F0EC         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  3084  00235E  C1E7  F0ED         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  3085  002362  EC43  F009         	call	_epoch_to_caltime	;wreg free
  3086                           
  3087                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  3088  002366  C1E4  F0D2         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  3089  00236A  C1E5  F0D3         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  3090  00236E  EC13  F00B         	call	_caltime_to_RTCC	;wreg free
  3091  002372  0012               	return		;funcret
  3092  002374                     __end_of_RTCC_from_epoch:
  3093                           	opt stack 0
  3094                           tblptru	equ	0xFF8
  3095                           tblptrh	equ	0xFF7
  3096                           tblptrl	equ	0xFF6
  3097                           tablat	equ	0xFF5
  3098                           intcon	equ	0xFF2
  3099                           intcon2	equ	0xFF1
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           postinc1	equ	0xFE6
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _epoch_to_caltime *****************
  3114 ;; Defined at:
  3115 ;;		line 157 in file "../My_header\My_RTCC.h"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  ct              2   28[BANK0 ] PTR struct .
  3118 ;;		 -> caltime_now(7), 
  3119 ;;  ep              2   30[BANK0 ] PTR unsigned long 
  3120 ;;		 -> epoch_now(4), 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  num             4   40[BANK0 ] unsigned long 
  3123 ;;  day             2   36[BANK0 ] unsigned int 
  3124 ;;  day_since_ep    2   34[BANK0 ] unsigned int 
  3125 ;;  month           1   39[BANK0 ] unsigned char 
  3126 ;;  year            1   38[BANK0 ] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;		None               void
  3129 ;; Registers used:
  3130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;Total ram usage:       16 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    6
  3143 ;; This function calls:
  3144 ;;		_get_quot_rem
  3145 ;;		_month_length
  3146 ;; This function is called by:
  3147 ;;		_RTCC_from_epoch
  3148 ;;		_RTCC_from_caltime
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text18
  3153  001286                     __ptext18:
  3154                           	opt stack 0
  3155  001286                     _epoch_to_caltime:
  3156                           	opt stack 23
  3157                           
  3158                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
  3159                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
  3160                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
  3161                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
  3162                           ;My_header\My_RTCC.h: 164: uint16_t day;
  3163                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
  3164                           
  3165                           ;incstack = 0
  3166  001286  0E00               	movlw	0
  3167  001288  0100               	movlb	0	; () banked
  3168  00128A  6FF4               	movwf	epoch_to_caltime@year& (0+255),b
  3169                           
  3170                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
  3171  00128C  0E01               	movlw	1
  3172  00128E  0100               	movlb	0	; () banked
  3173  001290  6FF5               	movwf	epoch_to_caltime@month& (0+255),b
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;My_header\My_RTCC.h: 167: epoch_t num;
  3177                           ;My_header\My_RTCC.h: 169: num = *ep;
  3178  001292  C0EC  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  3179  001296  C0ED  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  3180  00129A  CFDE F0F6          	movff	postinc2,epoch_to_caltime@num
  3181  00129E  CFDE F0F7          	movff	postinc2,epoch_to_caltime@num+1
  3182  0012A2  CFDE F0F8          	movff	postinc2,epoch_to_caltime@num+2
  3183  0012A6  CFDE F0F9          	movff	postinc2,epoch_to_caltime@num+3
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
  3187  0012AA  0EF6               	movlw	low epoch_to_caltime@num
  3188  0012AC  0100               	movlb	0	; () banked
  3189  0012AE  6FE2               	movwf	get_quot_rem@quot& (0+255),b
  3190  0012B0  0E00               	movlw	high epoch_to_caltime@num
  3191  0012B2  0100               	movlb	0	; () banked
  3192  0012B4  6FE3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3193  0012B6  0E3C               	movlw	60
  3194  0012B8  0100               	movlb	0	; () banked
  3195  0012BA  6FE4               	movwf	get_quot_rem@div& (0+255),b
  3196  0012BC  ECA8  F00A         	call	_get_quot_rem	;wreg free
  3197  0012C0  0100               	movlb	0	; () banked
  3198  0012C2  51E2               	movf	?_get_quot_rem& (0+255),w,b
  3199  0012C4  C0EA  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  3200  0012C8  C0EB  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  3201  0012CC  6EDF               	movwf	indf2,c
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
  3205  0012CE  0EF6               	movlw	low epoch_to_caltime@num
  3206  0012D0  0100               	movlb	0	; () banked
  3207  0012D2  6FE2               	movwf	get_quot_rem@quot& (0+255),b
  3208  0012D4  0E00               	movlw	high epoch_to_caltime@num
  3209  0012D6  0100               	movlb	0	; () banked
  3210  0012D8  6FE3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3211  0012DA  0E3C               	movlw	60
  3212  0012DC  0100               	movlb	0	; () banked
  3213  0012DE  6FE4               	movwf	get_quot_rem@div& (0+255),b
  3214  0012E0  ECA8  F00A         	call	_get_quot_rem	;wreg free
  3215  0012E4  0100               	movlb	0	; () banked
  3216  0012E6  EE20 F001          	lfsr	2,1
  3217  0012EA  51EA               	movf	epoch_to_caltime@ct& (0+255),w,b
  3218  0012EC  26D9               	addwf	fsr2l,f,c
  3219  0012EE  51EB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3220  0012F0  22DA               	addwfc	fsr2h,f,c
  3221  0012F2  0100               	movlb	0	; () banked
  3222  0012F4  C0E2  FFDF         	movff	?_get_quot_rem,indf2
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
  3226  0012F8  0EF6               	movlw	low epoch_to_caltime@num
  3227  0012FA  0100               	movlb	0	; () banked
  3228  0012FC  6FE2               	movwf	get_quot_rem@quot& (0+255),b
  3229  0012FE  0E00               	movlw	high epoch_to_caltime@num
  3230  001300  0100               	movlb	0	; () banked
  3231  001302  6FE3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3232  001304  0E18               	movlw	24
  3233  001306  0100               	movlb	0	; () banked
  3234  001308  6FE4               	movwf	get_quot_rem@div& (0+255),b
  3235  00130A  ECA8  F00A         	call	_get_quot_rem	;wreg free
  3236  00130E  0100               	movlb	0	; () banked
  3237  001310  EE20 F002          	lfsr	2,2
  3238  001314  51EA               	movf	epoch_to_caltime@ct& (0+255),w,b
  3239  001316  26D9               	addwf	fsr2l,f,c
  3240  001318  51EB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3241  00131A  22DA               	addwfc	fsr2h,f,c
  3242  00131C  0100               	movlb	0	; () banked
  3243  00131E  C0E2  FFDF         	movff	?_get_quot_rem,indf2
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;My_header\My_RTCC.h: 173: day = num;
  3247  001322  C0F6  F0F2         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  3248  001326  C0F7  F0F3         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
  3252  00132A  C0F2  F0F0         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  3253  00132E  C0F3  F0F1         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;My_header\My_RTCC.h: 176: num += 6;
  3257  001332  0E06               	movlw	6
  3258  001334  0100               	movlb	0	; () banked
  3259  001336  27F6               	addwf	epoch_to_caltime@num& (0+255),f,b
  3260  001338  0E00               	movlw	0
  3261  00133A  23F7               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  3262  00133C  23F8               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  3263  00133E  23F9               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
  3267  001340  0EF6               	movlw	low epoch_to_caltime@num
  3268  001342  0100               	movlb	0	; () banked
  3269  001344  6FE2               	movwf	get_quot_rem@quot& (0+255),b
  3270  001346  0E00               	movlw	high epoch_to_caltime@num
  3271  001348  0100               	movlb	0	; () banked
  3272  00134A  6FE3               	movwf	(get_quot_rem@quot+1)& (0+255),b
  3273  00134C  0E07               	movlw	7
  3274  00134E  0100               	movlb	0	; () banked
  3275  001350  6FE4               	movwf	get_quot_rem@div& (0+255),b
  3276  001352  ECA8  F00A         	call	_get_quot_rem	;wreg free
  3277  001356  0100               	movlb	0	; () banked
  3278  001358  EE20 F003          	lfsr	2,3
  3279  00135C  51EA               	movf	epoch_to_caltime@ct& (0+255),w,b
  3280  00135E  26D9               	addwf	fsr2l,f,c
  3281  001360  51EB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3282  001362  22DA               	addwfc	fsr2h,f,c
  3283  001364  0100               	movlb	0	; () banked
  3284  001366  C0E2  FFDF         	movff	?_get_quot_rem,indf2
  3285                           
  3286                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
  3287  00136A  D041               	goto	l6514
  3288  00136C                     l974:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
  3292  00136C  848A               	bsf	3978,2,c	;volatile
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
  3296  00136E  C0F5  F023         	movff	epoch_to_caltime@month,month_length@month
  3297  001372  0100               	movlb	0	; () banked
  3298  001374  51F4               	movf	epoch_to_caltime@year& (0+255),w,b
  3299  001376  EC7C  F00B         	call	_month_length
  3300  00137A  0100               	movlb	0	; () banked
  3301  00137C  6FEE               	movwf	??_epoch_to_caltime& (0+255),b
  3302  00137E  6BEF               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  3303  001380  0100               	movlb	0	; () banked
  3304  001382  1FEE               	comf	??_epoch_to_caltime& (0+255),f,b
  3305  001384  1FEF               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3306  001386  4BEE               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3307  001388  2BEF               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3308  00138A  0100               	movlb	0	; () banked
  3309  00138C  51F2               	movf	epoch_to_caltime@day& (0+255),w,b
  3310  00138E  0100               	movlb	0	; () banked
  3311  001390  25EE               	addwf	??_epoch_to_caltime& (0+255),w,b
  3312  001392  0100               	movlb	0	; () banked
  3313  001394  6FF2               	movwf	epoch_to_caltime@day& (0+255),b
  3314  001396  0100               	movlb	0	; () banked
  3315  001398  51F3               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  3316  00139A  0100               	movlb	0	; () banked
  3317  00139C  21EF               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3318  00139E  0100               	movlb	0	; () banked
  3319  0013A0  6FF3               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;My_header\My_RTCC.h: 189: if (month == 12) {
  3323  0013A2  0E0C               	movlw	12
  3324  0013A4  0100               	movlb	0	; () banked
  3325  0013A6  19F5               	xorwf	epoch_to_caltime@month& (0+255),w,b
  3326  0013A8  A4D8               	btfss	status,2,c
  3327  0013AA  D019               	goto	l6508
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;My_header\My_RTCC.h: 190: month = 1;
  3331  0013AC  0E01               	movlw	1
  3332  0013AE  0100               	movlb	0	; () banked
  3333  0013B0  6FF5               	movwf	epoch_to_caltime@month& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;My_header\My_RTCC.h: 191: year++;
  3337  0013B2  0100               	movlb	0	; () banked
  3338  0013B4  2BF4               	incf	epoch_to_caltime@year& (0+255),f,b
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
  3342  0013B6  0E63               	movlw	99
  3343  0013B8  0100               	movlb	0	; () banked
  3344  0013BA  65F4               	cpfsgt	epoch_to_caltime@year& (0+255),b
  3345  0013BC  D013               	goto	l6510
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
  3349  0013BE  C0EC  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  3350  0013C2  C0ED  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  3351  0013C6  0E80               	movlw	128
  3352  0013C8  5EDE               	subwf	postinc2,f,c
  3353  0013CA  0E13               	movlw	19
  3354  0013CC  5ADE               	subwfb	postinc2,f,c
  3355  0013CE  0E19               	movlw	25
  3356  0013D0  5ADE               	subwfb	postinc2,f,c
  3357  0013D2  0EBC               	movlw	188
  3358  0013D4  5ADE               	subwfb	postinc2,f,c
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;My_header\My_RTCC.h: 195: year = 0;
  3362  0013D6  0E00               	movlw	0
  3363  0013D8  0100               	movlb	0	; () banked
  3364  0013DA  6FF4               	movwf	epoch_to_caltime@year& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;My_header\My_RTCC.h: 196: }
  3368                           ;My_header\My_RTCC.h: 197: } else {
  3369  0013DC  D003               	goto	l6510
  3370  0013DE                     l6508:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;My_header\My_RTCC.h: 198: month++;
  3374  0013DE  0100               	movlb	0	; () banked
  3375  0013E0  2BF5               	incf	epoch_to_caltime@month& (0+255),f,b
  3376  0013E2  D000               	goto	l6510
  3377  0013E4                     l6510:
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;My_header\My_RTCC.h: 199: }
  3381                           ;My_header\My_RTCC.h: 200: month_cache = month;
  3382  0013E4  C0F5  F0FC         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;My_header\My_RTCC.h: 201: year_cache = year;
  3386  0013E8  C0F4  F0A1         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  3387  0013EC  D000               	goto	l6514
  3388  0013EE                     l6514:
  3389                           
  3390                           ; BSR set to: 0
  3391  0013EE  C0F5  F023         	movff	epoch_to_caltime@month,month_length@month
  3392  0013F2  0100               	movlb	0	; () banked
  3393  0013F4  51F4               	movf	epoch_to_caltime@year& (0+255),w,b
  3394  0013F6  EC7C  F00B         	call	_month_length
  3395  0013FA  0100               	movlb	0	; () banked
  3396  0013FC  6FEE               	movwf	??_epoch_to_caltime& (0+255),b
  3397  0013FE  0100               	movlb	0	; () banked
  3398  001400  51EE               	movf	??_epoch_to_caltime& (0+255),w,b
  3399  001402  0100               	movlb	0	; () banked
  3400  001404  5DF2               	subwf	epoch_to_caltime@day& (0+255),w,b
  3401  001406  0E00               	movlw	0
  3402  001408  59F3               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  3403  00140A  B0D8               	btfsc	status,0,c
  3404  00140C  D7AF               	goto	l974
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;My_header\My_RTCC.h: 202: }
  3408                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
  3409                           
  3410                           ; BSR set to: 0
  3411  00140E  C0F2  F0EE         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  3412  001412  C0F3  F0EF         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  3413  001416  0100               	movlb	0	; () banked
  3414  001418  1FEE               	comf	??_epoch_to_caltime& (0+255),f,b
  3415  00141A  1FEF               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  3416  00141C  4BEE               	infsnz	??_epoch_to_caltime& (0+255),f,b
  3417  00141E  2BEF               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  3418  001420  0100               	movlb	0	; () banked
  3419  001422  51F0               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  3420  001424  0100               	movlb	0	; () banked
  3421  001426  25EE               	addwf	??_epoch_to_caltime& (0+255),w,b
  3422  001428  0100               	movlb	0	; () banked
  3423  00142A  6F92               	movwf	epoch_to_caltime@day_cache& (0+255),b
  3424  00142C  0100               	movlb	0	; () banked
  3425  00142E  51F1               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  3426  001430  0100               	movlb	0	; () banked
  3427  001432  21EF               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  3428  001434  0100               	movlb	0	; () banked
  3429  001436  6F93               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;My_header\My_RTCC.h: 204: day++;
  3433  001438  0100               	movlb	0	; () banked
  3434  00143A  4BF2               	infsnz	epoch_to_caltime@day& (0+255),f,b
  3435  00143C  2BF3               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;My_header\My_RTCC.h: 206: ct->YY = year;
  3439  00143E  0100               	movlb	0	; () banked
  3440  001440  EE20 F006          	lfsr	2,6
  3441  001444  51EA               	movf	epoch_to_caltime@ct& (0+255),w,b
  3442  001446  26D9               	addwf	fsr2l,f,c
  3443  001448  51EB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3444  00144A  22DA               	addwfc	fsr2h,f,c
  3445  00144C  C0F4  FFDF         	movff	epoch_to_caltime@year,indf2
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;My_header\My_RTCC.h: 207: ct->MM = month;
  3449  001450  0100               	movlb	0	; () banked
  3450  001452  EE20 F005          	lfsr	2,5
  3451  001456  51EA               	movf	epoch_to_caltime@ct& (0+255),w,b
  3452  001458  26D9               	addwf	fsr2l,f,c
  3453  00145A  51EB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3454  00145C  22DA               	addwfc	fsr2h,f,c
  3455  00145E  C0F5  FFDF         	movff	epoch_to_caltime@month,indf2
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;My_header\My_RTCC.h: 208: ct->DD = day;
  3459  001462  0100               	movlb	0	; () banked
  3460  001464  EE20 F004          	lfsr	2,4
  3461  001468  51EA               	movf	epoch_to_caltime@ct& (0+255),w,b
  3462  00146A  26D9               	addwf	fsr2l,f,c
  3463  00146C  51EB               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  3464  00146E  22DA               	addwfc	fsr2h,f,c
  3465  001470  C0F2  FFDF         	movff	epoch_to_caltime@day,indf2
  3466                           
  3467                           ; BSR set to: 0
  3468  001474  0012               	return		;funcret
  3469  001476                     __end_of_epoch_to_caltime:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           intcon	equ	0xFF2
  3476                           intcon2	equ	0xFF1
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postinc1	equ	0xFE6
  3480                           postdec1	equ	0xFE5
  3481                           fsr1h	equ	0xFE2
  3482                           fsr1l	equ	0xFE1
  3483                           indf2	equ	0xFDF
  3484                           postinc2	equ	0xFDE
  3485                           postdec2	equ	0xFDD
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8
  3489                           
  3490 ;; *************** function _get_quot_rem *****************
  3491 ;; Defined at:
  3492 ;;		line 112 in file "../My_header\My_RTCC.h"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  quot            2   20[BANK0 ] PTR unsigned long 
  3495 ;;		 -> epoch_to_caltime@num(4), 
  3496 ;;  div             1   22[BANK0 ] unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  num             4   24[BANK0 ] unsigned long 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  4   20[BANK0 ] unsigned long 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3511 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3512 ;;Total ram usage:        8 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    5
  3515 ;; This function calls:
  3516 ;;		___lldiv
  3517 ;;		___lmul
  3518 ;; This function is called by:
  3519 ;;		_epoch_to_caltime
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text19
  3524  001550                     __ptext19:
  3525                           	opt stack 0
  3526  001550                     _get_quot_rem:
  3527                           	opt stack 23
  3528                           
  3529                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;incstack = 0
  3533  001550  C0E2  FFD9         	movff	get_quot_rem@quot,fsr2l
  3534  001554  C0E3  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3535  001558  CFDE F0E6          	movff	postinc2,get_quot_rem@num
  3536  00155C  CFDE F0E7          	movff	postinc2,get_quot_rem@num+1
  3537  001560  CFDE F0E8          	movff	postinc2,get_quot_rem@num+2
  3538  001564  CFDE F0E9          	movff	postinc2,get_quot_rem@num+3
  3539                           
  3540                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
  3541  001568  0100               	movlb	0	; () banked
  3542  00156A  51E4               	movf	get_quot_rem@div& (0+255),w,b
  3543  00156C  0100               	movlb	0	; () banked
  3544  00156E  6FD2               	movwf	___lldiv@divisor& (0+255),b
  3545  001570  6BD3               	clrf	(___lldiv@divisor+1)& (0+255),b
  3546  001572  6BD4               	clrf	(___lldiv@divisor+2)& (0+255),b
  3547  001574  6BD5               	clrf	(___lldiv@divisor+3)& (0+255),b
  3548  001576  C0E6  F0CE         	movff	get_quot_rem@num,___lldiv@dividend
  3549  00157A  C0E7  F0CF         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  3550  00157E  C0E8  F0D0         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  3551  001582  C0E9  F0D1         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  3552  001586  EC66  F00D         	call	___lldiv	;wreg free
  3553  00158A  C0E2  FFD9         	movff	get_quot_rem@quot,fsr2l
  3554  00158E  C0E3  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  3555  001592  0100               	movlb	0	; () banked
  3556  001594  C0CE  FFDE         	movff	?___lldiv,postinc2
  3557  001598  0100               	movlb	0	; () banked
  3558  00159A  C0CF  FFDE         	movff	?___lldiv+1,postinc2
  3559  00159E  0100               	movlb	0	; () banked
  3560  0015A0  C0D0  FFDE         	movff	?___lldiv+2,postinc2
  3561  0015A4  0100               	movlb	0	; () banked
  3562  0015A6  C0D1  FFDD         	movff	?___lldiv+3,postdec2
  3563  0015AA  52DD               	movf	postdec2,f,c
  3564  0015AC  52DD               	movf	postdec2,f,c
  3565  0015AE  CFDE F0D6          	movff	postinc2,___lmul@multiplier
  3566  0015B2  CFDE F0D7          	movff	postinc2,___lmul@multiplier+1
  3567  0015B6  CFDE F0D8          	movff	postinc2,___lmul@multiplier+2
  3568  0015BA  CFDE F0D9          	movff	postinc2,___lmul@multiplier+3
  3569  0015BE  0100               	movlb	0	; () banked
  3570  0015C0  51E4               	movf	get_quot_rem@div& (0+255),w,b
  3571  0015C2  0100               	movlb	0	; () banked
  3572  0015C4  6FDA               	movwf	___lmul@multiplicand& (0+255),b
  3573  0015C6  6BDB               	clrf	(___lmul@multiplicand+1)& (0+255),b
  3574  0015C8  6BDC               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3575  0015CA  6BDD               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3576  0015CC  EC02  F010         	call	___lmul	;wreg free
  3577  0015D0  0100               	movlb	0	; () banked
  3578  0015D2  1FD6               	comf	?___lmul& (0+255),f,b
  3579  0015D4  0100               	movlb	0	; () banked
  3580  0015D6  1FD7               	comf	(?___lmul+1)& (0+255),f,b
  3581  0015D8  0100               	movlb	0	; () banked
  3582  0015DA  1FD8               	comf	(?___lmul+2)& (0+255),f,b
  3583  0015DC  0100               	movlb	0	; () banked
  3584  0015DE  1FD9               	comf	(?___lmul+3)& (0+255),f,b
  3585  0015E0  0100               	movlb	0	; () banked
  3586  0015E2  2BD6               	incf	?___lmul& (0+255),f,b
  3587  0015E4  0E00               	movlw	0
  3588  0015E6  0100               	movlb	0	; () banked
  3589  0015E8  23D7               	addwfc	(?___lmul+1)& (0+255),f,b
  3590  0015EA  0100               	movlb	0	; () banked
  3591  0015EC  23D8               	addwfc	(?___lmul+2)& (0+255),f,b
  3592  0015EE  0100               	movlb	0	; () banked
  3593  0015F0  23D9               	addwfc	(?___lmul+3)& (0+255),f,b
  3594  0015F2  0100               	movlb	0	; () banked
  3595  0015F4  51E6               	movf	get_quot_rem@num& (0+255),w,b
  3596  0015F6  0100               	movlb	0	; () banked
  3597  0015F8  25D6               	addwf	?___lmul& (0+255),w,b
  3598  0015FA  0100               	movlb	0	; () banked
  3599  0015FC  6FE2               	movwf	?_get_quot_rem& (0+255),b
  3600  0015FE  0100               	movlb	0	; () banked
  3601  001600  51E7               	movf	(get_quot_rem@num+1)& (0+255),w,b
  3602  001602  0100               	movlb	0	; () banked
  3603  001604  21D7               	addwfc	(?___lmul+1)& (0+255),w,b
  3604  001606  0100               	movlb	0	; () banked
  3605  001608  6FE3               	movwf	(?_get_quot_rem+1)& (0+255),b
  3606  00160A  0100               	movlb	0	; () banked
  3607  00160C  51E8               	movf	(get_quot_rem@num+2)& (0+255),w,b
  3608  00160E  0100               	movlb	0	; () banked
  3609  001610  21D8               	addwfc	(?___lmul+2)& (0+255),w,b
  3610  001612  0100               	movlb	0	; () banked
  3611  001614  6FE4               	movwf	(?_get_quot_rem+2)& (0+255),b
  3612  001616  0100               	movlb	0	; () banked
  3613  001618  51E9               	movf	(get_quot_rem@num+3)& (0+255),w,b
  3614  00161A  0100               	movlb	0	; () banked
  3615  00161C  21D9               	addwfc	(?___lmul+3)& (0+255),w,b
  3616  00161E  0100               	movlb	0	; () banked
  3617  001620  6FE5               	movwf	(?_get_quot_rem+3)& (0+255),b
  3618  001622  0012               	return	
  3619                           
  3620                           ; BSR set to: 0
  3621                           
  3622                           ; BSR set to: 0
  3623  001624  0012               	return		;funcret
  3624  001626                     __end_of_get_quot_rem:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           intcon	equ	0xFF2
  3631                           intcon2	equ	0xFF1
  3632                           postinc0	equ	0xFEE
  3633                           wreg	equ	0xFE8
  3634                           postinc1	equ	0xFE6
  3635                           postdec1	equ	0xFE5
  3636                           fsr1h	equ	0xFE2
  3637                           fsr1l	equ	0xFE1
  3638                           indf2	equ	0xFDF
  3639                           postinc2	equ	0xFDE
  3640                           postdec2	equ	0xFDD
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function ___lldiv *****************
  3646 ;; Defined at:
  3647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  dividend        4    0[BANK0 ] unsigned long 
  3650 ;;  divisor         4    4[BANK0 ] unsigned long 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  quotient        4   30[COMRAM] unsigned long 
  3653 ;;  counter         1   34[COMRAM] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  4    0[BANK0 ] unsigned long 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3663 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;Total ram usage:       13 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    4
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_get_quot_rem
  3674 ;;		_CTMU_read
  3675 ;;		_my_utoa32
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text20
  3680  001ACC                     __ptext20:
  3681                           	opt stack 0
  3682  001ACC                     ___lldiv:
  3683                           	opt stack 23
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;incstack = 0
  3687  001ACC  0E00               	movlw	0
  3688  001ACE  6E1F               	movwf	___lldiv@quotient,c
  3689  001AD0  0E00               	movlw	0
  3690  001AD2  6E20               	movwf	___lldiv@quotient+1,c
  3691  001AD4  0E00               	movlw	0
  3692  001AD6  6E21               	movwf	___lldiv@quotient+2,c
  3693  001AD8  0E00               	movlw	0
  3694  001ADA  6E22               	movwf	___lldiv@quotient+3,c
  3695  001ADC  0100               	movlb	0	; () banked
  3696  001ADE  51D2               	movf	___lldiv@divisor& (0+255),w,b
  3697  001AE0  0100               	movlb	0	; () banked
  3698  001AE2  11D3               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3699  001AE4  0100               	movlb	0	; () banked
  3700  001AE6  11D4               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3701  001AE8  0100               	movlb	0	; () banked
  3702  001AEA  11D5               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3703  001AEC  B4D8               	btfsc	status,2,c
  3704  001AEE  D042               	goto	l1594
  3705                           
  3706                           ; BSR set to: 0
  3707  001AF0  0E01               	movlw	1
  3708  001AF2  6E23               	movwf	___lldiv@counter,c
  3709  001AF4  D008               	goto	l6374
  3710  001AF6                     l6372:
  3711                           
  3712                           ; BSR set to: 0
  3713  001AF6  0100               	movlb	0	; () banked
  3714  001AF8  90D8               	bcf	status,0,c
  3715  001AFA  37D2               	rlcf	___lldiv@divisor& (0+255),f,b
  3716  001AFC  37D3               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3717  001AFE  37D4               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3718  001B00  37D5               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3719  001B02  2A23               	incf	___lldiv@counter,f,c
  3720  001B04  D000               	goto	l6374
  3721  001B06                     l6374:
  3722                           
  3723                           ; BSR set to: 0
  3724  001B06  0100               	movlb	0	; () banked
  3725  001B08  BFD5               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  3726  001B0A  D002               	goto	l6376
  3727  001B0C  D7F4               	goto	l6372
  3728                           
  3729                           ; BSR set to: 0
  3730  001B0E  D000               	goto	l6376
  3731  001B10                     l6376:
  3732                           
  3733                           ; BSR set to: 0
  3734  001B10  90D8               	bcf	status,0,c
  3735  001B12  361F               	rlcf	___lldiv@quotient,f,c
  3736  001B14  3620               	rlcf	___lldiv@quotient+1,f,c
  3737  001B16  3621               	rlcf	___lldiv@quotient+2,f,c
  3738  001B18  3622               	rlcf	___lldiv@quotient+3,f,c
  3739                           
  3740                           ; BSR set to: 0
  3741  001B1A  0100               	movlb	0	; () banked
  3742  001B1C  51D2               	movf	___lldiv@divisor& (0+255),w,b
  3743  001B1E  0100               	movlb	0	; () banked
  3744  001B20  5DCE               	subwf	___lldiv@dividend& (0+255),w,b
  3745  001B22  0100               	movlb	0	; () banked
  3746  001B24  51D3               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3747  001B26  0100               	movlb	0	; () banked
  3748  001B28  59CF               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3749  001B2A  0100               	movlb	0	; () banked
  3750  001B2C  51D4               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3751  001B2E  0100               	movlb	0	; () banked
  3752  001B30  59D0               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3753  001B32  0100               	movlb	0	; () banked
  3754  001B34  51D5               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3755  001B36  0100               	movlb	0	; () banked
  3756  001B38  59D1               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3757  001B3A  A0D8               	btfss	status,0,c
  3758  001B3C  D012               	goto	l6384
  3759                           
  3760                           ; BSR set to: 0
  3761  001B3E  0100               	movlb	0	; () banked
  3762  001B40  51D2               	movf	___lldiv@divisor& (0+255),w,b
  3763  001B42  0100               	movlb	0	; () banked
  3764  001B44  5FCE               	subwf	___lldiv@dividend& (0+255),f,b
  3765  001B46  0100               	movlb	0	; () banked
  3766  001B48  51D3               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3767  001B4A  0100               	movlb	0	; () banked
  3768  001B4C  5BCF               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3769  001B4E  0100               	movlb	0	; () banked
  3770  001B50  51D4               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3771  001B52  0100               	movlb	0	; () banked
  3772  001B54  5BD0               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3773  001B56  0100               	movlb	0	; () banked
  3774  001B58  51D5               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3775  001B5A  0100               	movlb	0	; () banked
  3776  001B5C  5BD1               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3777                           
  3778                           ; BSR set to: 0
  3779  001B5E  801F               	bsf	___lldiv@quotient,0,c
  3780  001B60  D000               	goto	l6384
  3781  001B62                     l6384:
  3782                           
  3783                           ; BSR set to: 0
  3784  001B62  0100               	movlb	0	; () banked
  3785  001B64  90D8               	bcf	status,0,c
  3786  001B66  33D5               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3787  001B68  33D4               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3788  001B6A  33D3               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3789  001B6C  33D2               	rrcf	___lldiv@divisor& (0+255),f,b
  3790                           
  3791                           ; BSR set to: 0
  3792  001B6E  2E23               	decfsz	___lldiv@counter,f,c
  3793  001B70  D7CF               	goto	l6376
  3794  001B72  D000               	goto	l1594
  3795  001B74                     l1594:
  3796                           
  3797                           ; BSR set to: 0
  3798  001B74  C01F  F0CE         	movff	___lldiv@quotient,?___lldiv
  3799  001B78  C020  F0CF         	movff	___lldiv@quotient+1,?___lldiv+1
  3800  001B7C  C021  F0D0         	movff	___lldiv@quotient+2,?___lldiv+2
  3801  001B80  C022  F0D1         	movff	___lldiv@quotient+3,?___lldiv+3
  3802                           
  3803                           ; BSR set to: 0
  3804  001B84  0012               	return		;funcret
  3805  001B86                     __end_of___lldiv:
  3806                           	opt stack 0
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           intcon	equ	0xFF2
  3812                           intcon2	equ	0xFF1
  3813                           postinc0	equ	0xFEE
  3814                           wreg	equ	0xFE8
  3815                           postinc1	equ	0xFE6
  3816                           postdec1	equ	0xFE5
  3817                           fsr1h	equ	0xFE2
  3818                           fsr1l	equ	0xFE1
  3819                           indf2	equ	0xFDF
  3820                           postinc2	equ	0xFDE
  3821                           postdec2	equ	0xFDD
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _caltime_to_RTCC *****************
  3827 ;; Defined at:
  3828 ;;		line 137 in file "../My_header\My_RTCC.h"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  ct              2    4[BANK0 ] PTR struct .
  3831 ;;		 -> caltime_now(7), 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;		None               void
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3843 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;Total ram usage:        2 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    6
  3850 ;; This function calls:
  3851 ;;		_d_to_x
  3852 ;; This function is called by:
  3853 ;;		_RTCC_from_epoch
  3854 ;;		_RTCC_from_caltime
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text21
  3859  001626                     __ptext21:
  3860                           	opt stack 0
  3861  001626                     _caltime_to_RTCC:
  3862                           	opt stack 23
  3863                           
  3864                           ;My_header\My_RTCC.h: 138: while (RTCCFGbits.RTCSYNC);
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;incstack = 0
  3868  001626  D000               	goto	l961
  3869  001628                     l961:
  3870  001628  010F               	movlb	15	; () banked
  3871  00162A  B93F               	btfsc	63,4,b	;volatile
  3872  00162C  D7FD               	goto	l961
  3873                           
  3874                           ; BSR set to: 15
  3875                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
  3876  00162E  010F               	movlb	15	; () banked
  3877  001630  813F               	bsf	63,0,b	;volatile
  3878                           
  3879                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
  3880  001632  010F               	movlb	15	; () banked
  3881  001634  833F               	bsf	63,1,b	;volatile
  3882                           
  3883                           ; BSR set to: 15
  3884                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
  3885  001636  0100               	movlb	0	; () banked
  3886  001638  EE20 F006          	lfsr	2,6
  3887  00163C  51D2               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3888  00163E  26D9               	addwf	fsr2l,f,c
  3889  001640  51D3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  3890  001642  22DA               	addwfc	fsr2h,f,c
  3891  001644  50DF               	movf	indf2,w,c
  3892  001646  ECDB  F011         	call	_d_to_x
  3893  00164A  010F               	movlb	15	; () banked
  3894  00164C  6F3A               	movwf	58,b	;volatile
  3895                           
  3896                           ; BSR set to: 15
  3897                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
  3898  00164E  0E00               	movlw	0
  3899  001650  010F               	movlb	15	; () banked
  3900  001652  6F3B               	movwf	59,b	;volatile
  3901                           
  3902                           ; BSR set to: 15
  3903                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
  3904  001654  010F               	movlb	15	; () banked
  3905  001656  913F               	bcf	63,0,b	;volatile
  3906                           
  3907                           ; BSR set to: 15
  3908                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
  3909  001658  010F               	movlb	15	; () banked
  3910  00165A  833F               	bsf	63,1,b	;volatile
  3911                           
  3912                           ; BSR set to: 15
  3913                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
  3914  00165C  0100               	movlb	0	; () banked
  3915  00165E  EE20 F004          	lfsr	2,4
  3916  001662  51D2               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3917  001664  26D9               	addwf	fsr2l,f,c
  3918  001666  51D3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  3919  001668  22DA               	addwfc	fsr2h,f,c
  3920  00166A  50DF               	movf	indf2,w,c
  3921  00166C  ECDB  F011         	call	_d_to_x
  3922  001670  010F               	movlb	15	; () banked
  3923  001672  6F3A               	movwf	58,b	;volatile
  3924                           
  3925                           ; BSR set to: 15
  3926                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
  3927  001674  0100               	movlb	0	; () banked
  3928  001676  EE20 F005          	lfsr	2,5
  3929  00167A  51D2               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3930  00167C  26D9               	addwf	fsr2l,f,c
  3931  00167E  51D3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  3932  001680  22DA               	addwfc	fsr2h,f,c
  3933  001682  50DF               	movf	indf2,w,c
  3934  001684  ECDB  F011         	call	_d_to_x
  3935  001688  010F               	movlb	15	; () banked
  3936  00168A  6F3B               	movwf	59,b	;volatile
  3937                           
  3938                           ; BSR set to: 15
  3939                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
  3940  00168C  010F               	movlb	15	; () banked
  3941  00168E  813F               	bsf	63,0,b	;volatile
  3942                           
  3943                           ; BSR set to: 15
  3944                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
  3945  001690  010F               	movlb	15	; () banked
  3946  001692  933F               	bcf	63,1,b	;volatile
  3947                           
  3948                           ; BSR set to: 15
  3949                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
  3950  001694  0100               	movlb	0	; () banked
  3951  001696  EE20 F002          	lfsr	2,2
  3952  00169A  51D2               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3953  00169C  26D9               	addwf	fsr2l,f,c
  3954  00169E  51D3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  3955  0016A0  22DA               	addwfc	fsr2h,f,c
  3956  0016A2  50DF               	movf	indf2,w,c
  3957  0016A4  ECDB  F011         	call	_d_to_x
  3958  0016A8  010F               	movlb	15	; () banked
  3959  0016AA  6F3A               	movwf	58,b	;volatile
  3960                           
  3961                           ; BSR set to: 15
  3962                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
  3963  0016AC  0100               	movlb	0	; () banked
  3964  0016AE  EE20 F003          	lfsr	2,3
  3965  0016B2  51D2               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3966  0016B4  26D9               	addwf	fsr2l,f,c
  3967  0016B6  51D3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  3968  0016B8  22DA               	addwfc	fsr2h,f,c
  3969  0016BA  50DF               	movf	indf2,w,c
  3970  0016BC  ECDB  F011         	call	_d_to_x
  3971  0016C0  010F               	movlb	15	; () banked
  3972  0016C2  6F3B               	movwf	59,b	;volatile
  3973                           
  3974                           ; BSR set to: 15
  3975                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
  3976  0016C4  010F               	movlb	15	; () banked
  3977  0016C6  913F               	bcf	63,0,b	;volatile
  3978                           
  3979                           ; BSR set to: 15
  3980                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
  3981  0016C8  010F               	movlb	15	; () banked
  3982  0016CA  933F               	bcf	63,1,b	;volatile
  3983                           
  3984                           ; BSR set to: 15
  3985                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
  3986  0016CC  C0D2  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  3987  0016D0  C0D3  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  3988  0016D4  50DF               	movf	indf2,w,c
  3989  0016D6  ECDB  F011         	call	_d_to_x
  3990  0016DA  010F               	movlb	15	; () banked
  3991  0016DC  6F3A               	movwf	58,b	;volatile
  3992                           
  3993                           ; BSR set to: 15
  3994                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
  3995  0016DE  0100               	movlb	0	; () banked
  3996  0016E0  EE20 F001          	lfsr	2,1
  3997  0016E4  51D2               	movf	caltime_to_RTCC@ct& (0+255),w,b
  3998  0016E6  26D9               	addwf	fsr2l,f,c
  3999  0016E8  51D3               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
  4000  0016EA  22DA               	addwfc	fsr2h,f,c
  4001  0016EC  50DF               	movf	indf2,w,c
  4002  0016EE  ECDB  F011         	call	_d_to_x
  4003  0016F2  010F               	movlb	15	; () banked
  4004  0016F4  6F3B               	movwf	59,b	;volatile
  4005                           
  4006                           ; BSR set to: 15
  4007  0016F6  0012               	return		;funcret
  4008  0016F8                     __end_of_caltime_to_RTCC:
  4009                           	opt stack 0
  4010                           tblptru	equ	0xFF8
  4011                           tblptrh	equ	0xFF7
  4012                           tblptrl	equ	0xFF6
  4013                           tablat	equ	0xFF5
  4014                           intcon	equ	0xFF2
  4015                           intcon2	equ	0xFF1
  4016                           postinc0	equ	0xFEE
  4017                           wreg	equ	0xFE8
  4018                           postinc1	equ	0xFE6
  4019                           postdec1	equ	0xFE5
  4020                           fsr1h	equ	0xFE2
  4021                           fsr1l	equ	0xFE1
  4022                           indf2	equ	0xFDF
  4023                           postinc2	equ	0xFDE
  4024                           postdec2	equ	0xFDD
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function _d_to_x *****************
  4030 ;; Defined at:
  4031 ;;		line 73 in file "../My_header\My_RTCC.h"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  dec             1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  dec             1   34[COMRAM] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      unsigned char 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4049 ;;Total ram usage:        1 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    5
  4052 ;; This function calls:
  4053 ;;		___awdiv
  4054 ;; This function is called by:
  4055 ;;		_caltime_to_RTCC
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text22
  4060  0023B6                     __ptext22:
  4061                           	opt stack 0
  4062  0023B6                     _d_to_x:
  4063                           	opt stack 23
  4064                           
  4065                           ; BSR set to: 15
  4066                           ;incstack = 0
  4067                           ;d_to_x@dec stored from wreg
  4068  0023B6  6E23               	movwf	d_to_x@dec,c
  4069                           
  4070                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
  4071  0023B8  C023  F01F         	movff	d_to_x@dec,___awdiv@dividend
  4072  0023BC  6A20               	clrf	___awdiv@dividend+1,c
  4073  0023BE  0E00               	movlw	0
  4074  0023C0  6E22               	movwf	___awdiv@divisor+1,c
  4075  0023C2  0E0A               	movlw	10
  4076  0023C4  6E21               	movwf	___awdiv@divisor,c
  4077  0023C6  EC77  F00E         	call	___awdiv	;wreg free
  4078  0023CA  501F               	movf	?___awdiv,w,c
  4079  0023CC  0D06               	mullw	6
  4080  0023CE  50F3               	movf	prodl,w,c
  4081  0023D0  2423               	addwf	d_to_x@dec,w,c
  4082  0023D2  0012               	return	
  4083  0023D4  0012               	return		;funcret
  4084  0023D6                     __end_of_d_to_x:
  4085                           	opt stack 0
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           intcon2	equ	0xFF1
  4093                           postinc0	equ	0xFEE
  4094                           wreg	equ	0xFE8
  4095                           postinc1	equ	0xFE6
  4096                           postdec1	equ	0xFE5
  4097                           fsr1h	equ	0xFE2
  4098                           fsr1l	equ	0xFE1
  4099                           indf2	equ	0xFDF
  4100                           postinc2	equ	0xFDE
  4101                           postdec2	equ	0xFDD
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           
  4106 ;; *************** function ___awdiv *****************
  4107 ;; Defined at:
  4108 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  dividend        2   30[COMRAM] int 
  4111 ;;  divisor         2   32[COMRAM] int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  quotient        2    2[BANK0 ] int 
  4114 ;;  sign            1    1[BANK0 ] unsigned char 
  4115 ;;  counter         1    0[BANK0 ] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2   30[COMRAM] int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4126 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;Total ram usage:        8 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    4
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_d_to_x
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text23
  4140  001CEE                     __ptext23:
  4141                           	opt stack 0
  4142  001CEE                     ___awdiv:
  4143                           	opt stack 23
  4144                           
  4145                           ;incstack = 0
  4146  001CEE  0E00               	movlw	0
  4147  001CF0  0100               	movlb	0	; () banked
  4148  001CF2  6FCF               	movwf	___awdiv@sign& (0+255),b
  4149                           
  4150                           ; BSR set to: 0
  4151  001CF4  AE22               	btfss	___awdiv@divisor+1,7,c
  4152  001CF6  D008               	goto	l6294
  4153                           
  4154                           ; BSR set to: 0
  4155  001CF8  6C21               	negf	___awdiv@divisor,c
  4156  001CFA  1E22               	comf	___awdiv@divisor+1,f,c
  4157  001CFC  B0D8               	btfsc	status,0,c
  4158  001CFE  2A22               	incf	___awdiv@divisor+1,f,c
  4159                           
  4160                           ; BSR set to: 0
  4161  001D00  0E01               	movlw	1
  4162  001D02  0100               	movlb	0	; () banked
  4163  001D04  6FCF               	movwf	___awdiv@sign& (0+255),b
  4164  001D06  D000               	goto	l6294
  4165  001D08                     l6294:
  4166                           
  4167                           ; BSR set to: 0
  4168  001D08  AE20               	btfss	___awdiv@dividend+1,7,c
  4169  001D0A  D008               	goto	l6300
  4170                           
  4171                           ; BSR set to: 0
  4172  001D0C  6C1F               	negf	___awdiv@dividend,c
  4173  001D0E  1E20               	comf	___awdiv@dividend+1,f,c
  4174  001D10  B0D8               	btfsc	status,0,c
  4175  001D12  2A20               	incf	___awdiv@dividend+1,f,c
  4176                           
  4177                           ; BSR set to: 0
  4178  001D14  0E01               	movlw	1
  4179  001D16  0100               	movlb	0	; () banked
  4180  001D18  1BCF               	xorwf	___awdiv@sign& (0+255),f,b
  4181  001D1A  D000               	goto	l6300
  4182  001D1C                     l6300:
  4183                           
  4184                           ; BSR set to: 0
  4185  001D1C  0E00               	movlw	0
  4186  001D1E  0100               	movlb	0	; () banked
  4187  001D20  6FD1               	movwf	(___awdiv@quotient+1)& (0+255),b
  4188  001D22  0E00               	movlw	0
  4189  001D24  6FD0               	movwf	___awdiv@quotient& (0+255),b
  4190                           
  4191                           ; BSR set to: 0
  4192  001D26  5021               	movf	___awdiv@divisor,w,c
  4193  001D28  1022               	iorwf	___awdiv@divisor+1,w,c
  4194  001D2A  B4D8               	btfsc	status,2,c
  4195  001D2C  D026               	goto	l6322
  4196                           
  4197                           ; BSR set to: 0
  4198  001D2E  0E01               	movlw	1
  4199  001D30  0100               	movlb	0	; () banked
  4200  001D32  6FCE               	movwf	___awdiv@counter& (0+255),b
  4201  001D34  D006               	goto	l6308
  4202  001D36                     l6306:
  4203                           
  4204                           ; BSR set to: 0
  4205  001D36  90D8               	bcf	status,0,c
  4206  001D38  3621               	rlcf	___awdiv@divisor,f,c
  4207  001D3A  3622               	rlcf	___awdiv@divisor+1,f,c
  4208  001D3C  0100               	movlb	0	; () banked
  4209  001D3E  2BCE               	incf	___awdiv@counter& (0+255),f,b
  4210  001D40  D000               	goto	l6308
  4211  001D42                     l6308:
  4212                           
  4213                           ; BSR set to: 0
  4214  001D42  BE22               	btfsc	___awdiv@divisor+1,7,c
  4215  001D44  D002               	goto	l6310
  4216  001D46  D7F7               	goto	l6306
  4217                           
  4218                           ; BSR set to: 0
  4219  001D48  D000               	goto	l6310
  4220  001D4A                     l6310:
  4221                           
  4222                           ; BSR set to: 0
  4223  001D4A  0100               	movlb	0	; () banked
  4224  001D4C  90D8               	bcf	status,0,c
  4225  001D4E  37D0               	rlcf	___awdiv@quotient& (0+255),f,b
  4226  001D50  37D1               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4227                           
  4228                           ; BSR set to: 0
  4229  001D52  5021               	movf	___awdiv@divisor,w,c
  4230  001D54  5C1F               	subwf	___awdiv@dividend,w,c
  4231  001D56  5022               	movf	___awdiv@divisor+1,w,c
  4232  001D58  5820               	subwfb	___awdiv@dividend+1,w,c
  4233  001D5A  A0D8               	btfss	status,0,c
  4234  001D5C  D007               	goto	l6318
  4235                           
  4236                           ; BSR set to: 0
  4237  001D5E  5021               	movf	___awdiv@divisor,w,c
  4238  001D60  5E1F               	subwf	___awdiv@dividend,f,c
  4239  001D62  5022               	movf	___awdiv@divisor+1,w,c
  4240  001D64  5A20               	subwfb	___awdiv@dividend+1,f,c
  4241                           
  4242                           ; BSR set to: 0
  4243  001D66  0100               	movlb	0	; () banked
  4244  001D68  81D0               	bsf	___awdiv@quotient& (0+255),0,b
  4245  001D6A  D000               	goto	l6318
  4246  001D6C                     l6318:
  4247                           
  4248                           ; BSR set to: 0
  4249  001D6C  90D8               	bcf	status,0,c
  4250  001D6E  3222               	rrcf	___awdiv@divisor+1,f,c
  4251  001D70  3221               	rrcf	___awdiv@divisor,f,c
  4252                           
  4253                           ; BSR set to: 0
  4254  001D72  0100               	movlb	0	; () banked
  4255  001D74  2FCE               	decfsz	___awdiv@counter& (0+255),f,b
  4256  001D76  D7E9               	goto	l6310
  4257                           
  4258                           ; BSR set to: 0
  4259  001D78  D000               	goto	l6322
  4260  001D7A                     l6322:
  4261                           
  4262                           ; BSR set to: 0
  4263  001D7A  0100               	movlb	0	; () banked
  4264  001D7C  51CF               	movf	___awdiv@sign& (0+255),w,b
  4265  001D7E  0100               	movlb	0	; () banked
  4266  001D80  B4D8               	btfsc	status,2,c
  4267  001D82  D006               	goto	l6326
  4268                           
  4269                           ; BSR set to: 0
  4270  001D84  0100               	movlb	0	; () banked
  4271  001D86  6DD0               	negf	___awdiv@quotient& (0+255),b
  4272  001D88  1FD1               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4273  001D8A  B0D8               	btfsc	status,0,c
  4274  001D8C  2BD1               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4275  001D8E  D000               	goto	l6326
  4276  001D90                     l6326:
  4277                           
  4278                           ; BSR set to: 0
  4279  001D90  C0D0  F01F         	movff	___awdiv@quotient,?___awdiv
  4280  001D94  C0D1  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  4281  001D98  0012               	return	
  4282                           
  4283                           ; BSR set to: 0
  4284                           
  4285                           ; BSR set to: 0
  4286  001D9A  0012               	return		;funcret
  4287  001D9C                     __end_of___awdiv:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodl	equ	0xFF3
  4294                           intcon	equ	0xFF2
  4295                           intcon2	equ	0xFF1
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           postinc1	equ	0xFE6
  4299                           postdec1	equ	0xFE5
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _RTCC_from_RTCC *****************
  4310 ;; Defined at:
  4311 ;;		line 231 in file "../My_header\My_RTCC.h"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  ct              2   35[BANK0 ] PTR struct .
  4314 ;;		 -> caltime_now(7), 
  4315 ;;  ep              2   37[BANK0 ] PTR unsigned long 
  4316 ;;		 -> epoch_now(4), 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;		None               void
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4332 ;;Total ram usage:        4 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    7
  4335 ;; This function calls:
  4336 ;;		_RTCC_to_caltime
  4337 ;;		_caltime_to_epoch
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;;		_display_time_0802
  4341 ;;		_display_time_1602
  4342 ;;		_RTCC_adjust_time_inc
  4343 ;;		_RTCC_adjust_time_dec
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text24
  4348  002374                     __ptext24:
  4349                           	opt stack 0
  4350  002374                     _RTCC_from_RTCC:
  4351                           	opt stack 23
  4352                           
  4353                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;incstack = 0
  4357  002374  C0F1  F021         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  4358  002378  C0F2  F022         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  4359  00237C  ECCE  F00E         	call	_RTCC_to_caltime	;wreg free
  4360                           
  4361                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
  4362  002380  C0F1  F0E2         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  4363  002384  C0F2  F0E3         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  4364  002388  C0F3  F0E4         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  4365  00238C  C0F4  F0E5         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  4366  002390  ECFD  F007         	call	_caltime_to_epoch	;wreg free
  4367  002394  0012               	return		;funcret
  4368  002396                     __end_of_RTCC_from_RTCC:
  4369                           	opt stack 0
  4370                           tblptru	equ	0xFF8
  4371                           tblptrh	equ	0xFF7
  4372                           tblptrl	equ	0xFF6
  4373                           tablat	equ	0xFF5
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           intcon2	equ	0xFF1
  4377                           postinc0	equ	0xFEE
  4378                           wreg	equ	0xFE8
  4379                           postinc1	equ	0xFE6
  4380                           postdec1	equ	0xFE5
  4381                           fsr1h	equ	0xFE2
  4382                           fsr1l	equ	0xFE1
  4383                           indf2	equ	0xFDF
  4384                           postinc2	equ	0xFDE
  4385                           postdec2	equ	0xFDD
  4386                           fsr2h	equ	0xFDA
  4387                           fsr2l	equ	0xFD9
  4388                           status	equ	0xFD8
  4389                           
  4390 ;; *************** function _caltime_to_epoch *****************
  4391 ;; Defined at:
  4392 ;;		line 211 in file "../My_header\My_RTCC.h"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  ct              2   20[BANK0 ] PTR struct .
  4395 ;;		 -> caltime_now(7), 
  4396 ;;  ep              2   22[BANK0 ] PTR unsigned long 
  4397 ;;		 -> epoch_now(4), 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  month           1   34[BANK0 ] unsigned char 
  4400 ;;  month           1   29[BANK0 ] unsigned char 
  4401 ;;  year            1   28[BANK0 ] unsigned char 
  4402 ;;  epoch           4   30[BANK0 ] unsigned long 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;Total ram usage:       15 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    6
  4419 ;; This function calls:
  4420 ;;		___lmul
  4421 ;;		_month_length
  4422 ;; This function is called by:
  4423 ;;		_RTCC_from_RTCC
  4424 ;;		_RTCC_from_caltime
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text25
  4429  000FFA                     __ptext25:
  4430                           	opt stack 0
  4431  000FFA                     _caltime_to_epoch:
  4432                           	opt stack 23
  4433                           
  4434                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
  4435                           
  4436                           ;incstack = 0
  4437  000FFA  0E00               	movlw	0
  4438  000FFC  0100               	movlb	0	; () banked
  4439  000FFE  6FEC               	movwf	caltime_to_epoch@epoch& (0+255),b
  4440  001000  0E00               	movlw	0
  4441  001002  6FED               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  4442  001004  0E00               	movlw	0
  4443  001006  6FEE               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  4444  001008  0E00               	movlw	0
  4445  00100A  6FEF               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  4446                           
  4447                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
  4448  00100C  0E00               	movlw	0
  4449  00100E  0100               	movlb	0	; () banked
  4450  001010  6FEA               	movwf	caltime_to_epoch@year& (0+255),b
  4451  001012  D038               	goto	l6542
  4452  001014                     l6528:
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
  4456  001014  0E01               	movlw	1
  4457  001016  0100               	movlb	0	; () banked
  4458  001018  6FF0               	movwf	caltime_to_epoch@month& (0+255),b
  4459  00101A                     l6530:
  4460                           
  4461                           ; BSR set to: 0
  4462  00101A  0E0C               	movlw	12
  4463  00101C  0100               	movlb	0	; () banked
  4464  00101E  65F0               	cpfsgt	caltime_to_epoch@month& (0+255),b
  4465  001020  D001               	goto	l6534
  4466                           
  4467                           ; BSR set to: 0
  4468  001022  D02D               	goto	l6540
  4469  001024                     l6534:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  4473  001024  C0F0  F023         	movff	caltime_to_epoch@month,month_length@month
  4474  001028  0100               	movlb	0	; () banked
  4475  00102A  51EA               	movf	caltime_to_epoch@year& (0+255),w,b
  4476  00102C  EC7C  F00B         	call	_month_length
  4477  001030  0100               	movlb	0	; () banked
  4478  001032  6FE6               	movwf	??_caltime_to_epoch& (0+255),b
  4479  001034  0100               	movlb	0	; () banked
  4480  001036  51E6               	movf	??_caltime_to_epoch& (0+255),w,b
  4481  001038  0100               	movlb	0	; () banked
  4482  00103A  6FD6               	movwf	___lmul@multiplier& (0+255),b
  4483  00103C  6BD7               	clrf	(___lmul@multiplier+1)& (0+255),b
  4484  00103E  6BD8               	clrf	(___lmul@multiplier+2)& (0+255),b
  4485  001040  6BD9               	clrf	(___lmul@multiplier+3)& (0+255),b
  4486  001042  0E80               	movlw	128
  4487  001044  0100               	movlb	0	; () banked
  4488  001046  6FDA               	movwf	___lmul@multiplicand& (0+255),b
  4489  001048  0E51               	movlw	81
  4490  00104A  6FDB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4491  00104C  0E01               	movlw	1
  4492  00104E  6FDC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4493  001050  0E00               	movlw	0
  4494  001052  6FDD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4495  001054  EC02  F010         	call	___lmul	;wreg free
  4496  001058  0100               	movlb	0	; () banked
  4497  00105A  51D6               	movf	?___lmul& (0+255),w,b
  4498  00105C  0100               	movlb	0	; () banked
  4499  00105E  27EC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4500  001060  0100               	movlb	0	; () banked
  4501  001062  51D7               	movf	(?___lmul+1)& (0+255),w,b
  4502  001064  0100               	movlb	0	; () banked
  4503  001066  23ED               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4504  001068  0100               	movlb	0	; () banked
  4505  00106A  51D8               	movf	(?___lmul+2)& (0+255),w,b
  4506  00106C  0100               	movlb	0	; () banked
  4507  00106E  23EE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4508  001070  0100               	movlb	0	; () banked
  4509  001072  51D9               	movf	(?___lmul+3)& (0+255),w,b
  4510  001074  0100               	movlb	0	; () banked
  4511  001076  23EF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4512                           
  4513                           ; BSR set to: 0
  4514  001078  0100               	movlb	0	; () banked
  4515  00107A  2BF0               	incf	caltime_to_epoch@month& (0+255),f,b
  4516  00107C  D7CE               	goto	l6530
  4517  00107E                     l6540:
  4518                           
  4519                           ; BSR set to: 0
  4520  00107E  0100               	movlb	0	; () banked
  4521  001080  2BEA               	incf	caltime_to_epoch@year& (0+255),f,b
  4522  001082  D000               	goto	l6542
  4523  001084                     l6542:
  4524                           
  4525                           ; BSR set to: 0
  4526  001084  0100               	movlb	0	; () banked
  4527  001086  EE20 F006          	lfsr	2,6
  4528  00108A  51E2               	movf	caltime_to_epoch@ct& (0+255),w,b
  4529  00108C  26D9               	addwf	fsr2l,f,c
  4530  00108E  51E3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4531  001090  22DA               	addwfc	fsr2h,f,c
  4532  001092  50DE               	movf	postinc2,w,c
  4533  001094  0100               	movlb	0	; () banked
  4534  001096  5DEA               	subwf	caltime_to_epoch@year& (0+255),w,b
  4535  001098  A0D8               	btfss	status,0,c
  4536  00109A  D7BC               	goto	l6528
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;My_header\My_RTCC.h: 216: }
  4540                           ;My_header\My_RTCC.h: 217: }
  4541                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
  4542                           
  4543                           ; BSR set to: 0
  4544  00109C  0E01               	movlw	1
  4545  00109E  0100               	movlb	0	; () banked
  4546  0010A0  6FEB               	movwf	caltime_to_epoch@month_3886& (0+255),b
  4547  0010A2  D033               	goto	l6550
  4548  0010A4                     l6546:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  4552  0010A4  C0EB  F023         	movff	caltime_to_epoch@month_3886,month_length@month
  4553  0010A8  0100               	movlb	0	; () banked
  4554  0010AA  EE20 F006          	lfsr	2,6
  4555  0010AE  51E2               	movf	caltime_to_epoch@ct& (0+255),w,b
  4556  0010B0  26D9               	addwf	fsr2l,f,c
  4557  0010B2  51E3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4558  0010B4  22DA               	addwfc	fsr2h,f,c
  4559  0010B6  50DF               	movf	indf2,w,c
  4560  0010B8  EC7C  F00B         	call	_month_length
  4561  0010BC  0100               	movlb	0	; () banked
  4562  0010BE  6FE6               	movwf	??_caltime_to_epoch& (0+255),b
  4563  0010C0  0100               	movlb	0	; () banked
  4564  0010C2  51E6               	movf	??_caltime_to_epoch& (0+255),w,b
  4565  0010C4  0100               	movlb	0	; () banked
  4566  0010C6  6FD6               	movwf	___lmul@multiplier& (0+255),b
  4567  0010C8  6BD7               	clrf	(___lmul@multiplier+1)& (0+255),b
  4568  0010CA  6BD8               	clrf	(___lmul@multiplier+2)& (0+255),b
  4569  0010CC  6BD9               	clrf	(___lmul@multiplier+3)& (0+255),b
  4570  0010CE  0E80               	movlw	128
  4571  0010D0  0100               	movlb	0	; () banked
  4572  0010D2  6FDA               	movwf	___lmul@multiplicand& (0+255),b
  4573  0010D4  0E51               	movlw	81
  4574  0010D6  6FDB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4575  0010D8  0E01               	movlw	1
  4576  0010DA  6FDC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4577  0010DC  0E00               	movlw	0
  4578  0010DE  6FDD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4579  0010E0  EC02  F010         	call	___lmul	;wreg free
  4580  0010E4  0100               	movlb	0	; () banked
  4581  0010E6  51D6               	movf	?___lmul& (0+255),w,b
  4582  0010E8  0100               	movlb	0	; () banked
  4583  0010EA  27EC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4584  0010EC  0100               	movlb	0	; () banked
  4585  0010EE  51D7               	movf	(?___lmul+1)& (0+255),w,b
  4586  0010F0  0100               	movlb	0	; () banked
  4587  0010F2  23ED               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4588  0010F4  0100               	movlb	0	; () banked
  4589  0010F6  51D8               	movf	(?___lmul+2)& (0+255),w,b
  4590  0010F8  0100               	movlb	0	; () banked
  4591  0010FA  23EE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4592  0010FC  0100               	movlb	0	; () banked
  4593  0010FE  51D9               	movf	(?___lmul+3)& (0+255),w,b
  4594  001100  0100               	movlb	0	; () banked
  4595  001102  23EF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4596                           
  4597                           ; BSR set to: 0
  4598  001104  0100               	movlb	0	; () banked
  4599  001106  2BEB               	incf	caltime_to_epoch@month_3886& (0+255),f,b
  4600  001108  D000               	goto	l6550
  4601  00110A                     l6550:
  4602                           
  4603                           ; BSR set to: 0
  4604  00110A  0100               	movlb	0	; () banked
  4605  00110C  EE20 F005          	lfsr	2,5
  4606  001110  51E2               	movf	caltime_to_epoch@ct& (0+255),w,b
  4607  001112  26D9               	addwf	fsr2l,f,c
  4608  001114  51E3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4609  001116  22DA               	addwfc	fsr2h,f,c
  4610  001118  50DE               	movf	postinc2,w,c
  4611  00111A  0100               	movlb	0	; () banked
  4612  00111C  5DEB               	subwf	caltime_to_epoch@month_3886& (0+255),w,b
  4613  00111E  A0D8               	btfss	status,0,c
  4614  001120  D7C1               	goto	l6546
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;My_header\My_RTCC.h: 220: }
  4618                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  4619                           
  4620                           ; BSR set to: 0
  4621  001122  0EFF               	movlw	255
  4622  001124  0100               	movlb	0	; () banked
  4623  001126  6FE6               	movwf	??_caltime_to_epoch& (0+255),b
  4624  001128  0EFF               	movlw	255
  4625  00112A  0100               	movlb	0	; () banked
  4626  00112C  6FE7               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  4627  00112E  0100               	movlb	0	; () banked
  4628  001130  EE20 F004          	lfsr	2,4
  4629  001134  51E2               	movf	caltime_to_epoch@ct& (0+255),w,b
  4630  001136  26D9               	addwf	fsr2l,f,c
  4631  001138  51E3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4632  00113A  22DA               	addwfc	fsr2h,f,c
  4633  00113C  50DF               	movf	indf2,w,c
  4634  00113E  0100               	movlb	0	; () banked
  4635  001140  6FE8               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  4636  001142  6BE9               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  4637  001144  0100               	movlb	0	; () banked
  4638  001146  51E6               	movf	??_caltime_to_epoch& (0+255),w,b
  4639  001148  0100               	movlb	0	; () banked
  4640  00114A  27E8               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  4641  00114C  0100               	movlb	0	; () banked
  4642  00114E  51E7               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  4643  001150  0100               	movlb	0	; () banked
  4644  001152  23E9               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  4645  001154  C0E8  F0D6         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  4646  001158  C0E9  F0D7         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  4647  00115C  0100               	movlb	0	; () banked
  4648  00115E  0E00               	movlw	0
  4649  001160  BFD7               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  4650  001162  0EFF               	movlw	-1
  4651  001164  6FD8               	movwf	(___lmul@multiplier+2)& (0+255),b
  4652  001166  6FD9               	movwf	(___lmul@multiplier+3)& (0+255),b
  4653  001168  0E80               	movlw	128
  4654  00116A  0100               	movlb	0	; () banked
  4655  00116C  6FDA               	movwf	___lmul@multiplicand& (0+255),b
  4656  00116E  0E51               	movlw	81
  4657  001170  6FDB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4658  001172  0E01               	movlw	1
  4659  001174  6FDC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4660  001176  0E00               	movlw	0
  4661  001178  6FDD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4662  00117A  EC02  F010         	call	___lmul	;wreg free
  4663  00117E  0100               	movlb	0	; () banked
  4664  001180  51D6               	movf	?___lmul& (0+255),w,b
  4665  001182  0100               	movlb	0	; () banked
  4666  001184  27EC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4667  001186  0100               	movlb	0	; () banked
  4668  001188  51D7               	movf	(?___lmul+1)& (0+255),w,b
  4669  00118A  0100               	movlb	0	; () banked
  4670  00118C  23ED               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4671  00118E  0100               	movlb	0	; () banked
  4672  001190  51D8               	movf	(?___lmul+2)& (0+255),w,b
  4673  001192  0100               	movlb	0	; () banked
  4674  001194  23EE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4675  001196  0100               	movlb	0	; () banked
  4676  001198  51D9               	movf	(?___lmul+3)& (0+255),w,b
  4677  00119A  0100               	movlb	0	; () banked
  4678  00119C  23EF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4679                           
  4680                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
  4681  00119E  0100               	movlb	0	; () banked
  4682  0011A0  EE20 F002          	lfsr	2,2
  4683  0011A4  51E2               	movf	caltime_to_epoch@ct& (0+255),w,b
  4684  0011A6  26D9               	addwf	fsr2l,f,c
  4685  0011A8  51E3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4686  0011AA  22DA               	addwfc	fsr2h,f,c
  4687  0011AC  50DF               	movf	indf2,w,c
  4688  0011AE  0100               	movlb	0	; () banked
  4689  0011B0  6FE6               	movwf	??_caltime_to_epoch& (0+255),b
  4690  0011B2  0100               	movlb	0	; () banked
  4691  0011B4  51E6               	movf	??_caltime_to_epoch& (0+255),w,b
  4692  0011B6  0100               	movlb	0	; () banked
  4693  0011B8  6FD6               	movwf	___lmul@multiplier& (0+255),b
  4694  0011BA  6BD7               	clrf	(___lmul@multiplier+1)& (0+255),b
  4695  0011BC  6BD8               	clrf	(___lmul@multiplier+2)& (0+255),b
  4696  0011BE  6BD9               	clrf	(___lmul@multiplier+3)& (0+255),b
  4697  0011C0  0E10               	movlw	16
  4698  0011C2  0100               	movlb	0	; () banked
  4699  0011C4  6FDA               	movwf	___lmul@multiplicand& (0+255),b
  4700  0011C6  0E0E               	movlw	14
  4701  0011C8  6FDB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4702  0011CA  0E00               	movlw	0
  4703  0011CC  6FDC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4704  0011CE  0E00               	movlw	0
  4705  0011D0  6FDD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4706  0011D2  EC02  F010         	call	___lmul	;wreg free
  4707  0011D6  0100               	movlb	0	; () banked
  4708  0011D8  51D6               	movf	?___lmul& (0+255),w,b
  4709  0011DA  0100               	movlb	0	; () banked
  4710  0011DC  27EC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4711  0011DE  0100               	movlb	0	; () banked
  4712  0011E0  51D7               	movf	(?___lmul+1)& (0+255),w,b
  4713  0011E2  0100               	movlb	0	; () banked
  4714  0011E4  23ED               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4715  0011E6  0100               	movlb	0	; () banked
  4716  0011E8  51D8               	movf	(?___lmul+2)& (0+255),w,b
  4717  0011EA  0100               	movlb	0	; () banked
  4718  0011EC  23EE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4719  0011EE  0100               	movlb	0	; () banked
  4720  0011F0  51D9               	movf	(?___lmul+3)& (0+255),w,b
  4721  0011F2  0100               	movlb	0	; () banked
  4722  0011F4  23EF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4723                           
  4724                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
  4725  0011F6  0100               	movlb	0	; () banked
  4726  0011F8  EE20 F001          	lfsr	2,1
  4727  0011FC  51E2               	movf	caltime_to_epoch@ct& (0+255),w,b
  4728  0011FE  26D9               	addwf	fsr2l,f,c
  4729  001200  51E3               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  4730  001202  22DA               	addwfc	fsr2h,f,c
  4731  001204  50DF               	movf	indf2,w,c
  4732  001206  0100               	movlb	0	; () banked
  4733  001208  6FE6               	movwf	??_caltime_to_epoch& (0+255),b
  4734  00120A  0100               	movlb	0	; () banked
  4735  00120C  51E6               	movf	??_caltime_to_epoch& (0+255),w,b
  4736  00120E  0100               	movlb	0	; () banked
  4737  001210  6FD6               	movwf	___lmul@multiplier& (0+255),b
  4738  001212  6BD7               	clrf	(___lmul@multiplier+1)& (0+255),b
  4739  001214  6BD8               	clrf	(___lmul@multiplier+2)& (0+255),b
  4740  001216  6BD9               	clrf	(___lmul@multiplier+3)& (0+255),b
  4741  001218  0E3C               	movlw	60
  4742  00121A  0100               	movlb	0	; () banked
  4743  00121C  6FDA               	movwf	___lmul@multiplicand& (0+255),b
  4744  00121E  0E00               	movlw	0
  4745  001220  6FDB               	movwf	(___lmul@multiplicand+1)& (0+255),b
  4746  001222  0E00               	movlw	0
  4747  001224  6FDC               	movwf	(___lmul@multiplicand+2)& (0+255),b
  4748  001226  0E00               	movlw	0
  4749  001228  6FDD               	movwf	(___lmul@multiplicand+3)& (0+255),b
  4750  00122A  EC02  F010         	call	___lmul	;wreg free
  4751  00122E  0100               	movlb	0	; () banked
  4752  001230  51D6               	movf	?___lmul& (0+255),w,b
  4753  001232  0100               	movlb	0	; () banked
  4754  001234  27EC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4755  001236  0100               	movlb	0	; () banked
  4756  001238  51D7               	movf	(?___lmul+1)& (0+255),w,b
  4757  00123A  0100               	movlb	0	; () banked
  4758  00123C  23ED               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4759  00123E  0100               	movlb	0	; () banked
  4760  001240  51D8               	movf	(?___lmul+2)& (0+255),w,b
  4761  001242  0100               	movlb	0	; () banked
  4762  001244  23EE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4763  001246  0100               	movlb	0	; () banked
  4764  001248  51D9               	movf	(?___lmul+3)& (0+255),w,b
  4765  00124A  0100               	movlb	0	; () banked
  4766  00124C  23EF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
  4770  00124E  C0E2  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  4771  001252  C0E3  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  4772  001256  50DF               	movf	indf2,w,c
  4773  001258  0100               	movlb	0	; () banked
  4774  00125A  6FE6               	movwf	??_caltime_to_epoch& (0+255),b
  4775  00125C  0100               	movlb	0	; () banked
  4776  00125E  51E6               	movf	??_caltime_to_epoch& (0+255),w,b
  4777  001260  0100               	movlb	0	; () banked
  4778  001262  27EC               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  4779  001264  0E00               	movlw	0
  4780  001266  23ED               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  4781  001268  23EE               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  4782  00126A  23EF               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;My_header\My_RTCC.h: 226: *ep = epoch;
  4786  00126C  C0E4  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  4787  001270  C0E5  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  4788  001274  C0EC  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  4789  001278  C0ED  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  4790  00127C  C0EE  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  4791  001280  C0EF  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  4792                           
  4793                           ; BSR set to: 0
  4794  001284  0012               	return		;funcret
  4795  001286                     __end_of_caltime_to_epoch:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodl	equ	0xFF3
  4802                           intcon	equ	0xFF2
  4803                           intcon2	equ	0xFF1
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           postinc1	equ	0xFE6
  4807                           postdec1	equ	0xFE5
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           postdec2	equ	0xFDD
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function _month_length *****************
  4818 ;; Defined at:
  4819 ;;		line 87 in file "../My_header\My_RTCC.h"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  year            1    wreg     unsigned char 
  4822 ;;  month           1   34[COMRAM] unsigned char 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  year            1    6[BANK0 ] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      unsigned char 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;Total ram usage:        6 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    5
  4841 ;; This function calls:
  4842 ;;		___awmod
  4843 ;; This function is called by:
  4844 ;;		_epoch_to_caltime
  4845 ;;		_caltime_to_epoch
  4846 ;;		_RTCC_adjust_time_inc
  4847 ;;		_RTCC_adjust_time_dec
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text26
  4852  0016F8                     __ptext26:
  4853                           	opt stack 0
  4854  0016F8                     _month_length:
  4855                           	opt stack 23
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;incstack = 0
  4859                           ;month_length@year stored from wreg
  4860  0016F8  0100               	movlb	0	; () banked
  4861  0016FA  6FD4               	movwf	month_length@year& (0+255),b
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  4865  0016FC  0E02               	movlw	2
  4866  0016FE  1823               	xorwf	month_length@month,w,c
  4867  001700  A4D8               	btfss	status,2,c
  4868  001702  D036               	goto	l6416
  4869                           
  4870                           ; BSR set to: 0
  4871  001704  C0D4  F01F         	movff	month_length@year,___awmod@dividend
  4872  001708  6A20               	clrf	___awmod@dividend+1,c
  4873  00170A  0E00               	movlw	0
  4874  00170C  6E22               	movwf	___awmod@divisor+1,c
  4875  00170E  0E64               	movlw	100
  4876  001710  6E21               	movwf	___awmod@divisor,c
  4877  001712  EC73  F00F         	call	___awmod	;wreg free
  4878  001716  501F               	movf	?___awmod,w,c
  4879  001718  1020               	iorwf	?___awmod+1,w,c
  4880  00171A  A4D8               	btfss	status,2,c
  4881  00171C  D002               	goto	u6220
  4882  00171E  0E01               	movlw	1
  4883  001720  D001               	goto	u6230
  4884  001722                     u6220:
  4885  001722  0E00               	movlw	0
  4886  001724                     u6230:
  4887  001724  0800               	sublw	0
  4888  001726  0100               	movlb	0	; () banked
  4889  001728  6FD0               	movwf	??_month_length& (0+255),b
  4890  00172A  C0D4  F01F         	movff	month_length@year,___awmod@dividend
  4891  00172E  6A20               	clrf	___awmod@dividend+1,c
  4892  001730  0E01               	movlw	1
  4893  001732  6E22               	movwf	___awmod@divisor+1,c
  4894  001734  0E90               	movlw	144
  4895  001736  6E21               	movwf	___awmod@divisor,c
  4896  001738  EC73  F00F         	call	___awmod	;wreg free
  4897  00173C  501F               	movf	?___awmod,w,c
  4898  00173E  1020               	iorwf	?___awmod+1,w,c
  4899  001740  A4D8               	btfss	status,2,c
  4900  001742  D004               	goto	u6240
  4901  001744  0100               	movlb	0	; () banked
  4902  001746  6BD1               	clrf	(??_month_length+1)& (0+255),b
  4903  001748  2BD1               	incf	(??_month_length+1)& (0+255),f,b
  4904  00174A  D002               	goto	u6258
  4905  00174C                     u6240:
  4906  00174C  0100               	movlb	0	; () banked
  4907  00174E  6BD1               	clrf	(??_month_length+1)& (0+255),b
  4908  001750                     u6258:
  4909  001750  C0D4  F0D2         	movff	month_length@year,??_month_length+2
  4910  001754  0E03               	movlw	3
  4911  001756  0100               	movlb	0	; () banked
  4912  001758  17D2               	andwf	(??_month_length+2)& (0+255),f,b
  4913  00175A  A4D8               	btfss	status,2,c
  4914  00175C  D002               	goto	u6260
  4915  00175E  0E01               	movlw	1
  4916  001760  D001               	goto	u6270
  4917  001762                     u6260:
  4918  001762  0E00               	movlw	0
  4919  001764                     u6270:
  4920  001764  0100               	movlb	0	; () banked
  4921  001766  25D1               	addwf	(??_month_length+1)& (0+255),w,b
  4922  001768  0100               	movlb	0	; () banked
  4923  00176A  25D0               	addwf	??_month_length& (0+255),w,b
  4924  00176C  0F1C               	addlw	28
  4925                           
  4926                           ; BSR set to: 0
  4927                           
  4928                           ; BSR set to: 0
  4929  00176E  0012               	return	
  4930  001770                     l6416:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
  4934  001770  5023               	movf	month_length@month,w,c
  4935  001772  0B01               	andlw	1
  4936  001774  0100               	movlb	0	; () banked
  4937  001776  6FD0               	movwf	??_month_length& (0+255),b
  4938  001778  6BD1               	clrf	(??_month_length+1)& (0+255),b
  4939  00177A  0100               	movlb	0	; () banked
  4940  00177C  1FD0               	comf	??_month_length& (0+255),f,b
  4941  00177E  1FD1               	comf	(??_month_length+1)& (0+255),f,b
  4942  001780  4BD0               	infsnz	??_month_length& (0+255),f,b
  4943  001782  2BD1               	incf	(??_month_length+1)& (0+255),f,b
  4944  001784  5023               	movf	month_length@month,w,c
  4945  001786  0100               	movlb	0	; () banked
  4946  001788  6FD2               	movwf	(??_month_length+2)& (0+255),b
  4947  00178A  6BD3               	clrf	(??_month_length+3)& (0+255),b
  4948  00178C  0100               	movlb	0	; () banked
  4949  00178E  51D0               	movf	??_month_length& (0+255),w,b
  4950  001790  0100               	movlb	0	; () banked
  4951  001792  1BD2               	xorwf	(??_month_length+2)& (0+255),f,b
  4952  001794  0100               	movlb	0	; () banked
  4953  001796  51D1               	movf	(??_month_length+1)& (0+255),w,b
  4954  001798  0100               	movlb	0	; () banked
  4955  00179A  1BD3               	xorwf	(??_month_length+3)& (0+255),f,b
  4956  00179C  0E0D               	movlw	13
  4957  00179E  0100               	movlb	0	; () banked
  4958  0017A0  17D2               	andwf	(??_month_length+2)& (0+255),f,b
  4959  0017A2  0E00               	movlw	0
  4960  0017A4  17D3               	andwf	(??_month_length+3)& (0+255),f,b
  4961  0017A6  0E04               	movlw	4
  4962  0017A8  0100               	movlb	0	; () banked
  4963  0017AA  19D2               	xorwf	(??_month_length+2)& (0+255),w,b
  4964  0017AC  0100               	movlb	0	; () banked
  4965  0017AE  11D3               	iorwf	(??_month_length+3)& (0+255),w,b
  4966  0017B0  A4D8               	btfss	status,2,c
  4967  0017B2  D002               	goto	u6280
  4968  0017B4  0E01               	movlw	1
  4969  0017B6  D001               	goto	u6290
  4970  0017B8                     u6280:
  4971  0017B8  0E00               	movlw	0
  4972  0017BA                     u6290:
  4973  0017BA  0800               	sublw	0
  4974  0017BC  0F1F               	addlw	31
  4975                           
  4976                           ; BSR set to: 0
  4977  0017BE  0012               	return	
  4978                           
  4979                           ; BSR set to: 0
  4980                           
  4981                           ; BSR set to: 0
  4982  0017C0  0012               	return		;funcret
  4983  0017C2                     __end_of_month_length:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           intcon2	equ	0xFF1
  4992                           postinc0	equ	0xFEE
  4993                           wreg	equ	0xFE8
  4994                           postinc1	equ	0xFE6
  4995                           postdec1	equ	0xFE5
  4996                           fsr1h	equ	0xFE2
  4997                           fsr1l	equ	0xFE1
  4998                           indf2	equ	0xFDF
  4999                           postinc2	equ	0xFDE
  5000                           postdec2	equ	0xFDD
  5001                           fsr2h	equ	0xFDA
  5002                           fsr2l	equ	0xFD9
  5003                           status	equ	0xFD8
  5004                           
  5005 ;; *************** function ___awmod *****************
  5006 ;; Defined at:
  5007 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  dividend        2   30[COMRAM] int 
  5010 ;;  divisor         2   32[COMRAM] int 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  sign            1    1[BANK0 ] unsigned char 
  5013 ;;  counter         1    0[BANK0 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  2   30[COMRAM] int 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;Total ram usage:        6 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_month_length
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text27
  5038  001EE6                     __ptext27:
  5039                           	opt stack 0
  5040  001EE6                     ___awmod:
  5041                           	opt stack 23
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;incstack = 0
  5045  001EE6  0E00               	movlw	0
  5046  001EE8  0100               	movlb	0	; () banked
  5047  001EEA  6FCF               	movwf	___awmod@sign& (0+255),b
  5048                           
  5049                           ; BSR set to: 0
  5050  001EEC  AE20               	btfss	___awmod@dividend+1,7,c
  5051  001EEE  D008               	goto	l6338
  5052                           
  5053                           ; BSR set to: 0
  5054  001EF0  6C1F               	negf	___awmod@dividend,c
  5055  001EF2  1E20               	comf	___awmod@dividend+1,f,c
  5056  001EF4  B0D8               	btfsc	status,0,c
  5057  001EF6  2A20               	incf	___awmod@dividend+1,f,c
  5058                           
  5059                           ; BSR set to: 0
  5060  001EF8  0E01               	movlw	1
  5061  001EFA  0100               	movlb	0	; () banked
  5062  001EFC  6FCF               	movwf	___awmod@sign& (0+255),b
  5063  001EFE  D000               	goto	l6338
  5064  001F00                     l6338:
  5065                           
  5066                           ; BSR set to: 0
  5067  001F00  AE22               	btfss	___awmod@divisor+1,7,c
  5068  001F02  D005               	goto	l6342
  5069                           
  5070                           ; BSR set to: 0
  5071  001F04  6C21               	negf	___awmod@divisor,c
  5072  001F06  1E22               	comf	___awmod@divisor+1,f,c
  5073  001F08  B0D8               	btfsc	status,0,c
  5074  001F0A  2A22               	incf	___awmod@divisor+1,f,c
  5075  001F0C  D000               	goto	l6342
  5076  001F0E                     l6342:
  5077                           
  5078                           ; BSR set to: 0
  5079  001F0E  5021               	movf	___awmod@divisor,w,c
  5080  001F10  1022               	iorwf	___awmod@divisor+1,w,c
  5081  001F12  B4D8               	btfsc	status,2,c
  5082  001F14  D020               	goto	l6358
  5083                           
  5084                           ; BSR set to: 0
  5085  001F16  0E01               	movlw	1
  5086  001F18  0100               	movlb	0	; () banked
  5087  001F1A  6FCE               	movwf	___awmod@counter& (0+255),b
  5088  001F1C  D006               	goto	l6348
  5089  001F1E                     l6346:
  5090                           
  5091                           ; BSR set to: 0
  5092  001F1E  90D8               	bcf	status,0,c
  5093  001F20  3621               	rlcf	___awmod@divisor,f,c
  5094  001F22  3622               	rlcf	___awmod@divisor+1,f,c
  5095  001F24  0100               	movlb	0	; () banked
  5096  001F26  2BCE               	incf	___awmod@counter& (0+255),f,b
  5097  001F28  D000               	goto	l6348
  5098  001F2A                     l6348:
  5099                           
  5100                           ; BSR set to: 0
  5101  001F2A  BE22               	btfsc	___awmod@divisor+1,7,c
  5102  001F2C  D002               	goto	l6350
  5103  001F2E  D7F7               	goto	l6346
  5104                           
  5105                           ; BSR set to: 0
  5106  001F30  D000               	goto	l6350
  5107  001F32                     l6350:
  5108                           
  5109                           ; BSR set to: 0
  5110  001F32  5021               	movf	___awmod@divisor,w,c
  5111  001F34  5C1F               	subwf	___awmod@dividend,w,c
  5112  001F36  5022               	movf	___awmod@divisor+1,w,c
  5113  001F38  5820               	subwfb	___awmod@dividend+1,w,c
  5114  001F3A  A0D8               	btfss	status,0,c
  5115  001F3C  D005               	goto	l6354
  5116                           
  5117                           ; BSR set to: 0
  5118  001F3E  5021               	movf	___awmod@divisor,w,c
  5119  001F40  5E1F               	subwf	___awmod@dividend,f,c
  5120  001F42  5022               	movf	___awmod@divisor+1,w,c
  5121  001F44  5A20               	subwfb	___awmod@dividend+1,f,c
  5122  001F46  D000               	goto	l6354
  5123  001F48                     l6354:
  5124                           
  5125                           ; BSR set to: 0
  5126  001F48  90D8               	bcf	status,0,c
  5127  001F4A  3222               	rrcf	___awmod@divisor+1,f,c
  5128  001F4C  3221               	rrcf	___awmod@divisor,f,c
  5129                           
  5130                           ; BSR set to: 0
  5131  001F4E  0100               	movlb	0	; () banked
  5132  001F50  2FCE               	decfsz	___awmod@counter& (0+255),f,b
  5133  001F52  D7EF               	goto	l6350
  5134                           
  5135                           ; BSR set to: 0
  5136  001F54  D000               	goto	l6358
  5137  001F56                     l6358:
  5138                           
  5139                           ; BSR set to: 0
  5140  001F56  0100               	movlb	0	; () banked
  5141  001F58  51CF               	movf	___awmod@sign& (0+255),w,b
  5142  001F5A  0100               	movlb	0	; () banked
  5143  001F5C  B4D8               	btfsc	status,2,c
  5144  001F5E  D005               	goto	l6362
  5145                           
  5146                           ; BSR set to: 0
  5147  001F60  6C1F               	negf	___awmod@dividend,c
  5148  001F62  1E20               	comf	___awmod@dividend+1,f,c
  5149  001F64  B0D8               	btfsc	status,0,c
  5150  001F66  2A20               	incf	___awmod@dividend+1,f,c
  5151  001F68  D000               	goto	l6362
  5152  001F6A                     l6362:
  5153                           
  5154                           ; BSR set to: 0
  5155  001F6A  C01F  F01F         	movff	___awmod@dividend,?___awmod
  5156  001F6E  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  5157  001F72  0012               	return	
  5158                           
  5159                           ; BSR set to: 0
  5160                           
  5161                           ; BSR set to: 0
  5162  001F74  0012               	return		;funcret
  5163  001F76                     __end_of___awmod:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodl	equ	0xFF3
  5170                           intcon	equ	0xFF2
  5171                           intcon2	equ	0xFF1
  5172                           postinc0	equ	0xFEE
  5173                           wreg	equ	0xFE8
  5174                           postinc1	equ	0xFE6
  5175                           postdec1	equ	0xFE5
  5176                           fsr1h	equ	0xFE2
  5177                           fsr1l	equ	0xFE1
  5178                           indf2	equ	0xFDF
  5179                           postinc2	equ	0xFDE
  5180                           postdec2	equ	0xFDD
  5181                           fsr2h	equ	0xFDA
  5182                           fsr2l	equ	0xFD9
  5183                           status	equ	0xFD8
  5184                           
  5185 ;; *************** function ___lmul *****************
  5186 ;; Defined at:
  5187 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  multiplier      4    8[BANK0 ] unsigned long 
  5190 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  product         4   16[BANK0 ] unsigned long 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  4    8[BANK0 ] unsigned long 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5202 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5205 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;Total ram usage:       12 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    4
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_get_quot_rem
  5213 ;;		_caltime_to_epoch
  5214 ;;		_RTCC_adjust_time_inc
  5215 ;;		_RTCC_adjust_time_dec
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text28
  5220  002004                     __ptext28:
  5221                           	opt stack 0
  5222  002004                     ___lmul:
  5223                           	opt stack 23
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;incstack = 0
  5227  002004  0E00               	movlw	0
  5228  002006  0100               	movlb	0	; () banked
  5229  002008  6FDE               	movwf	___lmul@product& (0+255),b
  5230  00200A  0E00               	movlw	0
  5231  00200C  6FDF               	movwf	(___lmul@product+1)& (0+255),b
  5232  00200E  0E00               	movlw	0
  5233  002010  6FE0               	movwf	(___lmul@product+2)& (0+255),b
  5234  002012  0E00               	movlw	0
  5235  002014  6FE1               	movwf	(___lmul@product+3)& (0+255),b
  5236  002016  D000               	goto	l6278
  5237  002018                     l6278:
  5238                           
  5239                           ; BSR set to: 0
  5240  002018  0100               	movlb	0	; () banked
  5241  00201A  A1D6               	btfss	___lmul@multiplier& (0+255),0,b
  5242  00201C  D011               	goto	l6282
  5243                           
  5244                           ; BSR set to: 0
  5245  00201E  0100               	movlb	0	; () banked
  5246  002020  51DA               	movf	___lmul@multiplicand& (0+255),w,b
  5247  002022  0100               	movlb	0	; () banked
  5248  002024  27DE               	addwf	___lmul@product& (0+255),f,b
  5249  002026  0100               	movlb	0	; () banked
  5250  002028  51DB               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  5251  00202A  0100               	movlb	0	; () banked
  5252  00202C  23DF               	addwfc	(___lmul@product+1)& (0+255),f,b
  5253  00202E  0100               	movlb	0	; () banked
  5254  002030  51DC               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  5255  002032  0100               	movlb	0	; () banked
  5256  002034  23E0               	addwfc	(___lmul@product+2)& (0+255),f,b
  5257  002036  0100               	movlb	0	; () banked
  5258  002038  51DD               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  5259  00203A  0100               	movlb	0	; () banked
  5260  00203C  23E1               	addwfc	(___lmul@product+3)& (0+255),f,b
  5261  00203E  D000               	goto	l6282
  5262  002040                     l6282:
  5263                           
  5264                           ; BSR set to: 0
  5265  002040  0100               	movlb	0	; () banked
  5266  002042  90D8               	bcf	status,0,c
  5267  002044  37DA               	rlcf	___lmul@multiplicand& (0+255),f,b
  5268  002046  37DB               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  5269  002048  37DC               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  5270  00204A  37DD               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  5271                           
  5272                           ; BSR set to: 0
  5273  00204C  0100               	movlb	0	; () banked
  5274  00204E  90D8               	bcf	status,0,c
  5275  002050  33D9               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  5276  002052  33D8               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  5277  002054  33D7               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  5278  002056  33D6               	rrcf	___lmul@multiplier& (0+255),f,b
  5279  002058  0100               	movlb	0	; () banked
  5280  00205A  51D6               	movf	___lmul@multiplier& (0+255),w,b
  5281  00205C  0100               	movlb	0	; () banked
  5282  00205E  11D7               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  5283  002060  0100               	movlb	0	; () banked
  5284  002062  11D8               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  5285  002064  0100               	movlb	0	; () banked
  5286  002066  11D9               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  5287  002068  A4D8               	btfss	status,2,c
  5288  00206A  D7D6               	goto	l6278
  5289                           
  5290                           ; BSR set to: 0
  5291  00206C  C0DE  F0D6         	movff	___lmul@product,?___lmul
  5292  002070  C0DF  F0D7         	movff	___lmul@product+1,?___lmul+1
  5293  002074  C0E0  F0D8         	movff	___lmul@product+2,?___lmul+2
  5294  002078  C0E1  F0D9         	movff	___lmul@product+3,?___lmul+3
  5295                           
  5296                           ; BSR set to: 0
  5297  00207C  0012               	return		;funcret
  5298  00207E                     __end_of___lmul:
  5299                           	opt stack 0
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           intcon2	equ	0xFF1
  5307                           postinc0	equ	0xFEE
  5308                           wreg	equ	0xFE8
  5309                           postinc1	equ	0xFE6
  5310                           postdec1	equ	0xFE5
  5311                           fsr1h	equ	0xFE2
  5312                           fsr1l	equ	0xFE1
  5313                           indf2	equ	0xFDF
  5314                           postinc2	equ	0xFDE
  5315                           postdec2	equ	0xFDD
  5316                           fsr2h	equ	0xFDA
  5317                           fsr2l	equ	0xFD9
  5318                           status	equ	0xFD8
  5319                           
  5320 ;; *************** function _RTCC_to_caltime *****************
  5321 ;; Defined at:
  5322 ;;		line 121 in file "../My_header\My_RTCC.h"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  ct              2   32[COMRAM] PTR struct .
  5325 ;;		 -> caltime_now(7), 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  dumy            1   34[COMRAM] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;		None               void
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;Total ram usage:        3 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    5
  5344 ;; This function calls:
  5345 ;;		_x_to_d
  5346 ;; This function is called by:
  5347 ;;		_RTCC_from_RTCC
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text29
  5352  001D9C                     __ptext29:
  5353                           	opt stack 0
  5354  001D9C                     _RTCC_to_caltime:
  5355                           	opt stack 24
  5356                           
  5357                           ;My_header\My_RTCC.h: 122: while (RTCCFGbits.RTCSYNC);
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;incstack = 0
  5361  001D9C  D000               	goto	l955
  5362  001D9E                     l955:
  5363  001D9E  010F               	movlb	15	; () banked
  5364  001DA0  B93F               	btfsc	63,4,b	;volatile
  5365  001DA2  D7FD               	goto	l955
  5366                           
  5367                           ; BSR set to: 15
  5368                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
  5369  001DA4  010F               	movlb	15	; () banked
  5370  001DA6  813F               	bsf	63,0,b	;volatile
  5371                           
  5372                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
  5373  001DA8  010F               	movlb	15	; () banked
  5374  001DAA  833F               	bsf	63,1,b	;volatile
  5375                           
  5376                           ; BSR set to: 15
  5377                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
  5378  001DAC  EE20 F006          	lfsr	2,6
  5379  001DB0  5021               	movf	RTCC_to_caltime@ct,w,c
  5380  001DB2  26D9               	addwf	fsr2l,f,c
  5381  001DB4  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5382  001DB6  22DA               	addwfc	fsr2h,f,c
  5383  001DB8  010F               	movlb	15	; () banked
  5384  001DBA  513A               	movf	58,w,b	;volatile
  5385  001DBC  ECF9  F011         	call	_x_to_d
  5386  001DC0  6EDF               	movwf	indf2,c
  5387                           
  5388                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
  5389  001DC2  CF3B F023          	movff	3899,RTCC_to_caltime@dumy	;volatile
  5390                           
  5391                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
  5392  001DC6  EE20 F004          	lfsr	2,4
  5393  001DCA  5021               	movf	RTCC_to_caltime@ct,w,c
  5394  001DCC  26D9               	addwf	fsr2l,f,c
  5395  001DCE  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5396  001DD0  22DA               	addwfc	fsr2h,f,c
  5397  001DD2  010F               	movlb	15	; () banked
  5398  001DD4  513A               	movf	58,w,b	;volatile
  5399  001DD6  ECF9  F011         	call	_x_to_d
  5400  001DDA  6EDF               	movwf	indf2,c
  5401                           
  5402                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
  5403  001DDC  EE20 F005          	lfsr	2,5
  5404  001DE0  5021               	movf	RTCC_to_caltime@ct,w,c
  5405  001DE2  26D9               	addwf	fsr2l,f,c
  5406  001DE4  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5407  001DE6  22DA               	addwfc	fsr2h,f,c
  5408  001DE8  010F               	movlb	15	; () banked
  5409  001DEA  513B               	movf	59,w,b	;volatile
  5410  001DEC  ECF9  F011         	call	_x_to_d
  5411  001DF0  6EDF               	movwf	indf2,c
  5412                           
  5413                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
  5414  001DF2  EE20 F002          	lfsr	2,2
  5415  001DF6  5021               	movf	RTCC_to_caltime@ct,w,c
  5416  001DF8  26D9               	addwf	fsr2l,f,c
  5417  001DFA  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5418  001DFC  22DA               	addwfc	fsr2h,f,c
  5419  001DFE  010F               	movlb	15	; () banked
  5420  001E00  513A               	movf	58,w,b	;volatile
  5421  001E02  ECF9  F011         	call	_x_to_d
  5422  001E06  6EDF               	movwf	indf2,c
  5423                           
  5424                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
  5425  001E08  EE20 F003          	lfsr	2,3
  5426  001E0C  5021               	movf	RTCC_to_caltime@ct,w,c
  5427  001E0E  26D9               	addwf	fsr2l,f,c
  5428  001E10  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5429  001E12  22DA               	addwfc	fsr2h,f,c
  5430  001E14  010F               	movlb	15	; () banked
  5431  001E16  513B               	movf	59,w,b	;volatile
  5432  001E18  ECF9  F011         	call	_x_to_d
  5433  001E1C  6EDF               	movwf	indf2,c
  5434                           
  5435                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
  5436  001E1E  010F               	movlb	15	; () banked
  5437  001E20  513A               	movf	58,w,b	;volatile
  5438  001E22  ECF9  F011         	call	_x_to_d
  5439  001E26  C021  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  5440  001E2A  C022  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  5441  001E2E  6EDF               	movwf	indf2,c
  5442                           
  5443                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
  5444  001E30  EE20 F001          	lfsr	2,1
  5445  001E34  5021               	movf	RTCC_to_caltime@ct,w,c
  5446  001E36  26D9               	addwf	fsr2l,f,c
  5447  001E38  5022               	movf	RTCC_to_caltime@ct+1,w,c
  5448  001E3A  22DA               	addwfc	fsr2h,f,c
  5449  001E3C  010F               	movlb	15	; () banked
  5450  001E3E  513B               	movf	59,w,b	;volatile
  5451  001E40  ECF9  F011         	call	_x_to_d
  5452  001E44  6EDF               	movwf	indf2,c
  5453  001E46  0012               	return		;funcret
  5454  001E48                     __end_of_RTCC_to_caltime:
  5455                           	opt stack 0
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodl	equ	0xFF3
  5461                           intcon	equ	0xFF2
  5462                           intcon2	equ	0xFF1
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           postinc1	equ	0xFE6
  5466                           postdec1	equ	0xFE5
  5467                           fsr1h	equ	0xFE2
  5468                           fsr1l	equ	0xFE1
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function _x_to_d *****************
  5477 ;; Defined at:
  5478 ;;		line 81 in file "../My_header\My_RTCC.h"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  hex             1    wreg     unsigned char 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  hex             1   31[COMRAM] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      unsigned char 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0, prodl, prodh
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5496 ;;Total ram usage:        2 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    4
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_RTCC_to_caltime
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text30
  5507  0023F2                     __ptext30:
  5508                           	opt stack 0
  5509  0023F2                     _x_to_d:
  5510                           	opt stack 24
  5511                           
  5512                           ;incstack = 0
  5513                           ;x_to_d@hex stored from wreg
  5514  0023F2  6E20               	movwf	x_to_d@hex,c
  5515                           
  5516                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  5517  0023F4  C020  F01F         	movff	x_to_d@hex,??_x_to_d
  5518  0023F8  0E0F               	movlw	15
  5519  0023FA  161F               	andwf	??_x_to_d,f,c
  5520  0023FC  3820               	swapf	x_to_d@hex,w,c
  5521  0023FE  0B0F               	andlw	15
  5522  002400  0B0F               	andlw	15
  5523  002402  0D0A               	mullw	10
  5524  002404  50F3               	movf	prodl,w,c
  5525  002406  241F               	addwf	??_x_to_d,w,c
  5526  002408  0012               	return	
  5527  00240A  0012               	return		;funcret
  5528  00240C                     __end_of_x_to_d:
  5529                           	opt stack 0
  5530                           tblptru	equ	0xFF8
  5531                           tblptrh	equ	0xFF7
  5532                           tblptrl	equ	0xFF6
  5533                           tablat	equ	0xFF5
  5534                           prodl	equ	0xFF3
  5535                           intcon	equ	0xFF2
  5536                           intcon2	equ	0xFF1
  5537                           postinc0	equ	0xFEE
  5538                           wreg	equ	0xFE8
  5539                           postinc1	equ	0xFE6
  5540                           postdec1	equ	0xFE5
  5541                           fsr1h	equ	0xFE2
  5542                           fsr1l	equ	0xFE1
  5543                           indf2	equ	0xFDF
  5544                           postinc2	equ	0xFDE
  5545                           postdec2	equ	0xFDD
  5546                           fsr2h	equ	0xFDA
  5547                           fsr2l	equ	0xFD9
  5548                           status	equ	0xFD8
  5549                           
  5550 ;; *************** function _I2C_LCD_SetCursor *****************
  5551 ;; Defined at:
  5552 ;;		line 112 in file "../My_header\My_I2C.h"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  col             1    wreg     unsigned char 
  5555 ;;  row             1   34[COMRAM] unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  col             1    4[BANK0 ] unsigned char 
  5558 ;;  row_offsets     2    2[BANK0 ] unsigned char [2]
  5559 ;; Return value:  Size  Location     Type
  5560 ;;		None               void
  5561 ;; Registers used:
  5562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5568 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;Total ram usage:        4 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    7
  5575 ;; This function calls:
  5576 ;;		_I2C_LCD_Command
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;;		_display_time_0802
  5580 ;;		_display_time_1602
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text31
  5585  0022DC                     __ptext31:
  5586                           	opt stack 0
  5587  0022DC                     _I2C_LCD_SetCursor:
  5588                           	opt stack 23
  5589                           
  5590                           ;incstack = 0
  5591                           ;I2C_LCD_SetCursor@col stored from wreg
  5592  0022DC  0100               	movlb	0	; () banked
  5593  0022DE  6FD2               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  5597  0022E0  C0FA  F0D0         	movff	I2C_LCD_SetCursor@F9845,I2C_LCD_SetCursor@row_offsets
  5598  0022E4  C0FB  F0D1         	movff	I2C_LCD_SetCursor@F9845+1,I2C_LCD_SetCursor@row_offsets+1
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  5602  0022E8  5023               	movf	I2C_LCD_SetCursor@row,w,c
  5603  0022EA  0D01               	mullw	1
  5604  0022EC  0ED0               	movlw	low I2C_LCD_SetCursor@row_offsets
  5605  0022EE  24F3               	addwf	prodl,w,c
  5606  0022F0  6ED9               	movwf	fsr2l,c
  5607  0022F2  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  5608  0022F4  20F4               	addwfc	prodh,w,c
  5609  0022F6  6EDA               	movwf	fsr2h,c
  5610  0022F8  50DF               	movf	indf2,w,c
  5611  0022FA  0100               	movlb	0	; () banked
  5612  0022FC  25D2               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  5613  0022FE  0980               	iorlw	128
  5614  002300  EC0B  F011         	call	_I2C_LCD_Command
  5615  002304  0012               	return		;funcret
  5616  002306                     __end_of_I2C_LCD_SetCursor:
  5617                           	opt stack 0
  5618                           tblptru	equ	0xFF8
  5619                           tblptrh	equ	0xFF7
  5620                           tblptrl	equ	0xFF6
  5621                           tablat	equ	0xFF5
  5622                           prodh	equ	0xFF4
  5623                           prodl	equ	0xFF3
  5624                           intcon	equ	0xFF2
  5625                           intcon2	equ	0xFF1
  5626                           postinc0	equ	0xFEE
  5627                           wreg	equ	0xFE8
  5628                           postinc1	equ	0xFE6
  5629                           postdec1	equ	0xFE5
  5630                           fsr1h	equ	0xFE2
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _I2C_LCD_Command *****************
  5640 ;; Defined at:
  5641 ;;		line 94 in file "../My_header\My_I2C.h"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  c               1    wreg     unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  c               1    0[BANK0 ] unsigned char 
  5646 ;;  ans             1    1[BANK0 ] unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;		None               void
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;Total ram usage:        2 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; Hardware stack levels required when called:    6
  5663 ;; This function calls:
  5664 ;;		_I2C_Send
  5665 ;;		_I2C_Start
  5666 ;;		_I2C_Stop
  5667 ;; This function is called by:
  5668 ;;		_I2C_LCD_Clear
  5669 ;;		_I2C_LCD_SetCursor
  5670 ;;		_I2C_LCD_init
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text32
  5675  002216                     __ptext32:
  5676                           	opt stack 0
  5677  002216                     _I2C_LCD_Command:
  5678                           	opt stack 22
  5679                           
  5680                           ;incstack = 0
  5681                           ;I2C_LCD_Command@c stored from wreg
  5682  002216  0100               	movlb	0	; () banked
  5683  002218  6FCE               	movwf	I2C_LCD_Command@c& (0+255),b
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;My_header\My_I2C.h: 95: uint8_t ans;
  5687                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
  5688  00221A  0E00               	movlw	0
  5689  00221C  6E21               	movwf	I2C_Start@rw,c
  5690  00221E  0E3E               	movlw	62
  5691  002220  EC57  F011         	call	_I2C_Start
  5692  002224  0100               	movlb	0	; () banked
  5693  002226  6FCF               	movwf	I2C_LCD_Command@ans& (0+255),b
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;My_header\My_I2C.h: 98: if (ans == 0) {
  5697  002228  0100               	movlb	0	; () banked
  5698  00222A  51CF               	movf	I2C_LCD_Command@ans& (0+255),w,b
  5699  00222C  0100               	movlb	0	; () banked
  5700  00222E  A4D8               	btfss	status,2,c
  5701  002230  D007               	goto	l891
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
  5705  002232  0E80               	movlw	128
  5706  002234  EC06  F012         	call	_I2C_Send
  5707                           
  5708                           ;My_header\My_I2C.h: 101: I2C_Send(c);
  5709  002238  0100               	movlb	0	; () banked
  5710  00223A  51CE               	movf	I2C_LCD_Command@c& (0+255),w,b
  5711  00223C  EC06  F012         	call	_I2C_Send
  5712  002240                     l891:
  5713                           
  5714                           ;My_header\My_I2C.h: 102: }
  5715                           ;My_header\My_I2C.h: 103: I2C_Stop();
  5716  002240  EC40  F012         	call	_I2C_Stop	;wreg free
  5717                           
  5718                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5719  002244  0E68               	movlw	104
  5720  002246                     u6967:
  5721  002246  2EE8               	decfsz	wreg,f,c
  5722  002248  D7FE               	goto	u6967
  5723  00224A  0012               	return		;funcret
  5724  00224C                     __end_of_I2C_LCD_Command:
  5725                           	opt stack 0
  5726                           tblptru	equ	0xFF8
  5727                           tblptrh	equ	0xFF7
  5728                           tblptrl	equ	0xFF6
  5729                           tablat	equ	0xFF5
  5730                           prodh	equ	0xFF4
  5731                           prodl	equ	0xFF3
  5732                           intcon	equ	0xFF2
  5733                           intcon2	equ	0xFF1
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           postinc1	equ	0xFE6
  5737                           postdec1	equ	0xFE5
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           fsr2h	equ	0xFDA
  5744                           fsr2l	equ	0xFD9
  5745                           status	equ	0xFD8
  5746                           
  5747 ;; *************** function _I2C_LCD_Puts *****************
  5748 ;; Defined at:
  5749 ;;		line 131 in file "../My_header\My_I2C.h"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5752 ;;		 -> STR_3(6), STR_2(9), weekday_3char(28), STR_1(3), 
  5753 ;;		 -> display_dec@str(10), 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  ans             2    2[BANK0 ] int 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5765 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;Total ram usage:        5 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    6
  5772 ;; This function calls:
  5773 ;;		_I2C_Send
  5774 ;;		_I2C_Start
  5775 ;;		_I2C_Stop
  5776 ;; This function is called by:
  5777 ;;		_main
  5778 ;;		_display_dec
  5779 ;;		_display_time_0802
  5780 ;;		_display_time_1602
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text33
  5785  001F76                     __ptext33:
  5786                           	opt stack 0
  5787  001F76                     _I2C_LCD_Puts:
  5788                           	opt stack 24
  5789                           
  5790                           ;My_header\My_I2C.h: 132: int ans;
  5791                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  5792                           
  5793                           ;incstack = 0
  5794  001F76  0E00               	movlw	0
  5795  001F78  6E21               	movwf	I2C_Start@rw,c
  5796  001F7A  0E3E               	movlw	62
  5797  001F7C  EC57  F011         	call	_I2C_Start
  5798  001F80  6E23               	movwf	??_I2C_LCD_Puts& (0+255),c
  5799  001F82  5023               	movf	??_I2C_LCD_Puts,w,c
  5800  001F84  0100               	movlb	0	; () banked
  5801  001F86  6FD0               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5802  001F88  6BD1               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  5806  001F8A  0100               	movlb	0	; () banked
  5807  001F8C  51D0               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  5808  001F8E  0100               	movlb	0	; () banked
  5809  001F90  11D1               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5810  001F92  A4D8               	btfss	status,2,c
  5811  001F94  D034               	goto	l6608
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  5815  001F96  0E40               	movlw	64
  5816  001F98  EC06  F012         	call	_I2C_Send
  5817                           
  5818                           ;My_header\My_I2C.h: 137: while (*s) {
  5819  001F9C  D01A               	goto	l6606
  5820  001F9E                     l6600:
  5821                           
  5822                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  5823  001F9E  C0CE  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5824  001FA2  C0CF  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5825  001FA6  0E00               	movlw	low (__smallconst shr (0+16))
  5826  001FA8  6EF8               	movwf	tblptru,c
  5827  001FAA  0E0E               	movlw	(high __ramtop+-1)
  5828  001FAC  64F7               	cpfsgt	tblptrh,c
  5829  001FAE  D003               	bra	u6447
  5830  001FB0  0008               	tblrd		*
  5831  001FB2  50F5               	movf	tablat,w,c
  5832  001FB4  D005               	bra	u6440
  5833  001FB6                     u6447:
  5834  001FB6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5835  001FBA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5836  001FBE  50EF               	movf	indf0,w,c
  5837  001FC0                     u6440:
  5838  001FC0  EC06  F012         	call	_I2C_Send
  5839  001FC4  0100               	movlb	0	; () banked
  5840  001FC6  4BCE               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5841  001FC8  2BCF               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5845  001FCA  0E68               	movlw	104
  5846  001FCC                     u6977:
  5847  001FCC  2EE8               	decfsz	wreg,f,c
  5848  001FCE  D7FE               	goto	u6977
  5849  001FD0  D000               	goto	l6606
  5850  001FD2                     l6606:
  5851  001FD2  C0CE  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5852  001FD6  C0CF  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5853  001FDA  0E00               	movlw	low (__smallconst shr (0+16))
  5854  001FDC  6EF8               	movwf	tblptru,c
  5855  001FDE  0E0E               	movlw	(high __ramtop+-1)
  5856  001FE0  64F7               	cpfsgt	tblptrh,c
  5857  001FE2  D003               	bra	u6457
  5858  001FE4  0008               	tblrd		*
  5859  001FE6  50F5               	movf	tablat,w,c
  5860  001FE8  D005               	bra	u6450
  5861  001FEA                     u6457:
  5862  001FEA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5863  001FEE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5864  001FF2  50EF               	movf	indf0,w,c
  5865  001FF4                     u6450:
  5866  001FF4  0900               	iorlw	0
  5867  001FF6  B4D8               	btfsc	status,2,c
  5868  001FF8  D002               	goto	l6608
  5869  001FFA  D7D1               	goto	l6600
  5870  001FFC  D000               	goto	l6608
  5871  001FFE                     l6608:
  5872                           
  5873                           ;My_header\My_I2C.h: 140: }
  5874                           ;My_header\My_I2C.h: 141: }
  5875                           ;My_header\My_I2C.h: 142: I2C_Stop();
  5876  001FFE  EC40  F012         	call	_I2C_Stop	;wreg free
  5877  002002  0012               	return		;funcret
  5878  002004                     __end_of_I2C_LCD_Puts:
  5879                           	opt stack 0
  5880                           tblptru	equ	0xFF8
  5881                           tblptrh	equ	0xFF7
  5882                           tblptrl	equ	0xFF6
  5883                           tablat	equ	0xFF5
  5884                           prodh	equ	0xFF4
  5885                           prodl	equ	0xFF3
  5886                           intcon	equ	0xFF2
  5887                           intcon2	equ	0xFF1
  5888                           indf0	equ	0xFEF
  5889                           postinc0	equ	0xFEE
  5890                           fsr0h	equ	0xFEA
  5891                           fsr0l	equ	0xFE9
  5892                           wreg	equ	0xFE8
  5893                           postinc1	equ	0xFE6
  5894                           postdec1	equ	0xFE5
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function _I2C_Stop *****************
  5905 ;; Defined at:
  5906 ;;		line 59 in file "../My_header\My_I2C.h"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;Total ram usage:        0 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    5
  5927 ;; This function calls:
  5928 ;;		_I2C_IdleCheck
  5929 ;; This function is called by:
  5930 ;;		_I2C_LCD_Command
  5931 ;;		_I2C_LCD_Puts
  5932 ;;		_I2C_LCD_Putc
  5933 ;;		_I2C_LCD_CreateChar
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text34
  5938  002480                     __ptext34:
  5939                           	opt stack 0
  5940  002480                     _I2C_Stop:
  5941                           	opt stack 22
  5942                           
  5943                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
  5944                           
  5945                           ;incstack = 0
  5946  002480  0E05               	movlw	5
  5947  002482  EC2B  F012         	call	_I2C_IdleCheck
  5948                           
  5949                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
  5950  002486  84C5               	bsf	4037,2,c	;volatile
  5951  002488  0012               	return		;funcret
  5952  00248A                     __end_of_I2C_Stop:
  5953                           	opt stack 0
  5954                           tblptru	equ	0xFF8
  5955                           tblptrh	equ	0xFF7
  5956                           tblptrl	equ	0xFF6
  5957                           tablat	equ	0xFF5
  5958                           prodh	equ	0xFF4
  5959                           prodl	equ	0xFF3
  5960                           intcon	equ	0xFF2
  5961                           intcon2	equ	0xFF1
  5962                           indf0	equ	0xFEF
  5963                           postinc0	equ	0xFEE
  5964                           fsr0h	equ	0xFEA
  5965                           fsr0l	equ	0xFE9
  5966                           wreg	equ	0xFE8
  5967                           postinc1	equ	0xFE6
  5968                           postdec1	equ	0xFE5
  5969                           fsr1h	equ	0xFE2
  5970                           fsr1l	equ	0xFE1
  5971                           indf2	equ	0xFDF
  5972                           postinc2	equ	0xFDE
  5973                           postdec2	equ	0xFDD
  5974                           fsr2h	equ	0xFDA
  5975                           fsr2l	equ	0xFD9
  5976                           status	equ	0xFD8
  5977                           
  5978 ;; *************** function _I2C_Start *****************
  5979 ;; Defined at:
  5980 ;;		line 35 in file "../My_header\My_I2C.h"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  adrs            1    wreg     unsigned char 
  5983 ;;  rw              1   32[COMRAM] unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  adrs            1   33[COMRAM] unsigned char 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      unsigned char 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5995 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    5
  6002 ;; This function calls:
  6003 ;;		_I2C_IdleCheck
  6004 ;; This function is called by:
  6005 ;;		_I2C_LCD_Command
  6006 ;;		_I2C_LCD_Puts
  6007 ;;		_I2C_LCD_Putc
  6008 ;;		_I2C_LCD_CreateChar
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text35
  6013  0022AE                     __ptext35:
  6014                           	opt stack 0
  6015  0022AE                     _I2C_Start:
  6016                           	opt stack 22
  6017                           
  6018                           ;incstack = 0
  6019                           ;I2C_Start@adrs stored from wreg
  6020  0022AE  6E22               	movwf	I2C_Start@adrs,c
  6021                           
  6022                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
  6023  0022B0  0E05               	movlw	5
  6024  0022B2  EC2B  F012         	call	_I2C_IdleCheck
  6025                           
  6026                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
  6027  0022B6  80C5               	bsf	4037,0,c	;volatile
  6028                           
  6029                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
  6030  0022B8  0E05               	movlw	5
  6031  0022BA  EC2B  F012         	call	_I2C_IdleCheck
  6032                           
  6033                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
  6034  0022BE  969E               	bcf	3998,3,c	;volatile
  6035                           
  6036                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6037  0022C0  5022               	movf	I2C_Start@adrs,w,c
  6038  0022C2  2422               	addwf	I2C_Start@adrs,w,c
  6039  0022C4  2421               	addwf	I2C_Start@rw,w,c
  6040  0022C6  6EC9               	movwf	4041,c	;volatile
  6041                           
  6042                           ;My_header\My_I2C.h: 43: while (!SSP1IF);
  6043  0022C8  D000               	goto	l867
  6044  0022CA                     l867:
  6045  0022CA  A69E               	btfss	3998,3,c	;volatile
  6046  0022CC  D7FE               	goto	l867
  6047                           
  6048                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
  6049  0022CE  ACC5               	btfss	4037,6,c	;volatile
  6050  0022D0  D002               	goto	u6000
  6051  0022D2  0E01               	movlw	1
  6052  0022D4  0012               	return	
  6053  0022D6                     u6000:
  6054  0022D6  0E00               	movlw	0
  6055  0022D8  0012               	return	
  6056  0022DA  0012               	return		;funcret
  6057  0022DC                     __end_of_I2C_Start:
  6058                           	opt stack 0
  6059                           tblptru	equ	0xFF8
  6060                           tblptrh	equ	0xFF7
  6061                           tblptrl	equ	0xFF6
  6062                           tablat	equ	0xFF5
  6063                           prodh	equ	0xFF4
  6064                           prodl	equ	0xFF3
  6065                           intcon	equ	0xFF2
  6066                           intcon2	equ	0xFF1
  6067                           indf0	equ	0xFEF
  6068                           postinc0	equ	0xFEE
  6069                           fsr0h	equ	0xFEA
  6070                           fsr0l	equ	0xFE9
  6071                           wreg	equ	0xFE8
  6072                           postinc1	equ	0xFE6
  6073                           postdec1	equ	0xFE5
  6074                           fsr1h	equ	0xFE2
  6075                           fsr1l	equ	0xFE1
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function _I2C_Send *****************
  6084 ;; Defined at:
  6085 ;;		line 65 in file "../My_header\My_I2C.h"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  data            1    wreg     unsigned char 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  data            1   32[COMRAM] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      unsigned char 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;Total ram usage:        1 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    5
  6106 ;; This function calls:
  6107 ;;		_I2C_IdleCheck
  6108 ;; This function is called by:
  6109 ;;		_I2C_LCD_Command
  6110 ;;		_I2C_LCD_Puts
  6111 ;;		_I2C_LCD_Putc
  6112 ;;		_I2C_LCD_CreateChar
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text36
  6117  00240C                     __ptext36:
  6118                           	opt stack 0
  6119  00240C                     _I2C_Send:
  6120                           	opt stack 22
  6121                           
  6122                           ;incstack = 0
  6123                           ;I2C_Send@data stored from wreg
  6124  00240C  6E21               	movwf	I2C_Send@data,c
  6125                           
  6126                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
  6127  00240E  0E05               	movlw	5
  6128  002410  EC2B  F012         	call	_I2C_IdleCheck
  6129                           
  6130                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
  6131  002414  969E               	bcf	3998,3,c	;volatile
  6132                           
  6133                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
  6134  002416  C021  FFC9         	movff	I2C_Send@data,4041	;volatile
  6135                           
  6136                           ;My_header\My_I2C.h: 69: while (!SSP1IF);
  6137  00241A  D000               	goto	l882
  6138  00241C                     l882:
  6139  00241C  A69E               	btfss	3998,3,c	;volatile
  6140  00241E  D7FE               	goto	l882
  6141                           
  6142                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
  6143                           ;	Return value of _I2C_Send is never used
  6144  002420  50C5               	movf	4037,w,c	;volatile
  6145  002422  0012               	return	
  6146  002424  0012               	return		;funcret
  6147  002426                     __end_of_I2C_Send:
  6148                           	opt stack 0
  6149                           tblptru	equ	0xFF8
  6150                           tblptrh	equ	0xFF7
  6151                           tblptrl	equ	0xFF6
  6152                           tablat	equ	0xFF5
  6153                           prodh	equ	0xFF4
  6154                           prodl	equ	0xFF3
  6155                           intcon	equ	0xFF2
  6156                           intcon2	equ	0xFF1
  6157                           indf0	equ	0xFEF
  6158                           postinc0	equ	0xFEE
  6159                           fsr0h	equ	0xFEA
  6160                           fsr0l	equ	0xFE9
  6161                           wreg	equ	0xFE8
  6162                           postinc1	equ	0xFE6
  6163                           postdec1	equ	0xFE5
  6164                           fsr1h	equ	0xFE2
  6165                           fsr1l	equ	0xFE1
  6166                           indf2	equ	0xFDF
  6167                           postinc2	equ	0xFDE
  6168                           postdec2	equ	0xFDD
  6169                           fsr2h	equ	0xFDA
  6170                           fsr2l	equ	0xFD9
  6171                           status	equ	0xFD8
  6172                           
  6173 ;; *************** function _I2C_IdleCheck *****************
  6174 ;; Defined at:
  6175 ;;		line 21 in file "../My_header\My_I2C.h"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  mask            1    wreg     unsigned char 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  mask            1   31[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;		None               void
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;Total ram usage:        2 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    4
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_I2C_Start
  6200 ;;		_I2C_Stop
  6201 ;;		_I2C_Send
  6202 ;;		_I2C_rStart
  6203 ;;		_I2C_Receive
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text37
  6208  002456                     __ptext37:
  6209                           	opt stack 0
  6210  002456                     _I2C_IdleCheck:
  6211                           	opt stack 22
  6212                           
  6213                           ;incstack = 0
  6214                           ;I2C_IdleCheck@mask stored from wreg
  6215  002456  6E20               	movwf	I2C_IdleCheck@mask,c
  6216                           
  6217                           ;My_header\My_I2C.h: 22: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
  6218  002458  D000               	goto	l6240
  6219  00245A                     l6240:
  6220  00245A  50C7               	movf	4039,w,c	;volatile
  6221  00245C  1420               	andwf	I2C_IdleCheck@mask,w,c
  6222  00245E  6E1F               	movwf	??_I2C_IdleCheck& (0+255),c
  6223  002460  50C5               	movf	4037,w,c	;volatile
  6224  002462  0B1F               	andlw	31
  6225  002464  101F               	iorwf	??_I2C_IdleCheck,w,c
  6226  002466  0900               	iorlw	0
  6227  002468  A4D8               	btfss	status,2,c
  6228  00246A  D7F7               	goto	l6240
  6229  00246C  0012               	return		;funcret
  6230  00246E                     __end_of_I2C_IdleCheck:
  6231                           	opt stack 0
  6232                           tblptru	equ	0xFF8
  6233                           tblptrh	equ	0xFF7
  6234                           tblptrl	equ	0xFF6
  6235                           tablat	equ	0xFF5
  6236                           prodh	equ	0xFF4
  6237                           prodl	equ	0xFF3
  6238                           intcon	equ	0xFF2
  6239                           intcon2	equ	0xFF1
  6240                           indf0	equ	0xFEF
  6241                           postinc0	equ	0xFEE
  6242                           fsr0h	equ	0xFEA
  6243                           fsr0l	equ	0xFE9
  6244                           wreg	equ	0xFE8
  6245                           postinc1	equ	0xFE6
  6246                           postdec1	equ	0xFE5
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256 ;; *************** function _ISR *****************
  6257 ;; Defined at:
  6258 ;;		line 40 in file "PIC18F27J53-SLEEP01.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;Total ram usage:       14 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    3
  6279 ;; This function calls:
  6280 ;;		_UART_ISR
  6281 ;; This function is called by:
  6282 ;;		Interrupt level 2
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	intcode
  6287  000008                     __pintcode:
  6288                           	opt stack 0
  6289  000008                     _ISR:
  6290                           	opt stack 21
  6291                           
  6292                           ;incstack = 0
  6293  000008  CFFA F011          	movff	pclath,??_ISR
  6294  00000C  CFFB F012          	movff	pclatu,??_ISR+1
  6295  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
  6296  000014  CFEA F014          	movff	fsr0h,??_ISR+3
  6297  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
  6298  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
  6299  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
  6300  000024  CFDA F018          	movff	fsr2h,??_ISR+7
  6301  000028  CFF3 F019          	movff	prodl,??_ISR+8
  6302  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
  6303  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
  6304  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
  6305  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
  6306  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
  6307                           
  6308                           ;PIC18F27J53-SLEEP01.c: 41: UART_ISR();
  6309  000040  ECC1  F010         	call	_UART_ISR	;wreg free
  6310                           
  6311                           ;PIC18F27J53-SLEEP01.c: 42: if (INTCONbits.T0IF && INTCONbits.T0IE) {
  6312  000044  B4F2               	btfsc	intcon,2,c	;volatile
  6313  000046  AAF2               	btfss	intcon,5,c	;volatile
  6314  000048  D002               	goto	i2l1118
  6315                           
  6316                           ;PIC18F27J53-SLEEP01.c: 43: INTCONbits.T0IF = 0;
  6317  00004A  94F2               	bcf	intcon,2,c	;volatile
  6318                           
  6319                           ;PIC18F27J53-SLEEP01.c: 44: LATBbits.LATB7 = !LATBbits.LATB7;
  6320  00004C  7E8A               	btg	3978,7,c	;volatile
  6321  00004E                     i2l1118:
  6322                           
  6323                           ;PIC18F27J53-SLEEP01.c: 45: }
  6324                           ;PIC18F27J53-SLEEP01.c: 46: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
  6325  00004E  B09E               	btfsc	3998,0,c	;volatile
  6326  000050  A09D               	btfss	3997,0,c	;volatile
  6327  000052  D005               	goto	i2l6158
  6328                           
  6329                           ;PIC18F27J53-SLEEP01.c: 47: PIR1bits.TMR1IF = 0;
  6330  000054  909E               	bcf	3998,0,c	;volatile
  6331                           
  6332                           ;PIC18F27J53-SLEEP01.c: 48: TMR1H = 0xC0;
  6333  000056  0EC0               	movlw	192
  6334  000058  6ECF               	movwf	4047,c	;volatile
  6335                           
  6336                           ;PIC18F27J53-SLEEP01.c: 49: LATBbits.LATB6 = !LATBbits.LATB6;
  6337  00005A  7C8A               	btg	3978,6,c	;volatile
  6338  00005C  D000               	goto	i2l6158
  6339  00005E                     i2l6158:
  6340                           
  6341                           ;PIC18F27J53-SLEEP01.c: 50: }
  6342                           ;PIC18F27J53-SLEEP01.c: 51: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
  6343  00005E  B2A1               	btfsc	4001,1,c	;volatile
  6344  000060  A2A0               	btfss	4000,1,c	;volatile
  6345  000062  D003               	goto	i2l1121
  6346                           
  6347                           ;PIC18F27J53-SLEEP01.c: 52: PIR2bits.TMR3IF = 0;
  6348  000064  92A1               	bcf	4001,1,c	;volatile
  6349                           
  6350                           ;PIC18F27J53-SLEEP01.c: 53: LATBbits.LATB3 = !LATBbits.LATB3;
  6351  000066  768A               	btg	3978,3,c	;volatile
  6352  000068  D000               	goto	i2l1121
  6353  00006A                     i2l1121:
  6354  00006A  C01E  FFF5         	movff	??_ISR+13,tablat
  6355  00006E  C01D  FFF8         	movff	??_ISR+12,tblptru
  6356  000072  C01C  FFF7         	movff	??_ISR+11,tblptrh
  6357  000076  C01B  FFF6         	movff	??_ISR+10,tblptrl
  6358  00007A  C01A  FFF4         	movff	??_ISR+9,prodh
  6359  00007E  C019  FFF3         	movff	??_ISR+8,prodl
  6360  000082  C018  FFDA         	movff	??_ISR+7,fsr2h
  6361  000086  C017  FFD9         	movff	??_ISR+6,fsr2l
  6362  00008A  C016  FFE2         	movff	??_ISR+5,fsr1h
  6363  00008E  C015  FFE1         	movff	??_ISR+4,fsr1l
  6364  000092  C014  FFEA         	movff	??_ISR+3,fsr0h
  6365  000096  C013  FFE9         	movff	??_ISR+2,fsr0l
  6366  00009A  C012  FFFB         	movff	??_ISR+1,pclatu
  6367  00009E  C011  FFFA         	movff	??_ISR,pclath
  6368  0000A2  0011               	retfie		f
  6369  0000A4                     __end_of_ISR:
  6370                           	opt stack 0
  6371                           pclatu	equ	0xFFB
  6372                           pclath	equ	0xFFA
  6373                           tblptru	equ	0xFF8
  6374                           tblptrh	equ	0xFF7
  6375                           tblptrl	equ	0xFF6
  6376                           tablat	equ	0xFF5
  6377                           prodh	equ	0xFF4
  6378                           prodl	equ	0xFF3
  6379                           intcon	equ	0xFF2
  6380                           intcon2	equ	0xFF1
  6381                           indf0	equ	0xFEF
  6382                           postinc0	equ	0xFEE
  6383                           fsr0h	equ	0xFEA
  6384                           fsr0l	equ	0xFE9
  6385                           wreg	equ	0xFE8
  6386                           postinc1	equ	0xFE6
  6387                           postdec1	equ	0xFE5
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           indf2	equ	0xFDF
  6391                           postinc2	equ	0xFDE
  6392                           postdec2	equ	0xFDD
  6393                           fsr2h	equ	0xFDA
  6394                           fsr2l	equ	0xFD9
  6395                           status	equ	0xFD8
  6396                           
  6397 ;; *************** function _UART_ISR *****************
  6398 ;; Defined at:
  6399 ;;		line 208 in file "../My_header\My_header.h"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  ascii           1   15[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;		None               void
  6406 ;; Registers used:
  6407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;Total ram usage:        1 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    2
  6420 ;; This function calls:
  6421 ;;		i2_ringbuf_num
  6422 ;;		i2_ringbuf_pop
  6423 ;;		i2_ringbuf_put
  6424 ;; This function is called by:
  6425 ;;		_ISR
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           	psect	text39
  6430  002182                     __ptext39:
  6431                           	opt stack 0
  6432  002182                     _UART_ISR:
  6433                           	opt stack 21
  6434                           
  6435                           ;My_header\My_header.h: 209: if (PIE1bits.TXIE && PIR1bits.TXIF) {
  6436                           
  6437                           ;incstack = 0
  6438  002182  B89D               	btfsc	3997,4,c	;volatile
  6439  002184  A89E               	btfss	3998,4,c	;volatile
  6440  002186  D014               	goto	i2l777
  6441                           
  6442                           ;My_header\My_header.h: 210: if (ringbuf_num(&tx_buf)) {
  6443  002188  0EB2               	movlw	low _tx_buf
  6444  00218A  6E01               	movwf	i2ringbuf_num@rb,c
  6445  00218C  0E00               	movlw	high _tx_buf
  6446  00218E  6E02               	movwf	i2ringbuf_num@rb+1,c
  6447  002190  EC07  F00D         	call	i2_ringbuf_num	;wreg free
  6448  002194  5001               	movf	?i2_ringbuf_num,w,c
  6449  002196  1002               	iorwf	?i2_ringbuf_num+1,w,c
  6450  002198  B4D8               	btfsc	status,2,c
  6451  00219A  D008               	goto	i2l778
  6452                           
  6453                           ;My_header\My_header.h: 211: TXREG1 = ringbuf_pop(&tx_buf);
  6454  00219C  0EB2               	movlw	low _tx_buf
  6455  00219E  6E09               	movwf	i2ringbuf_pop@rb,c
  6456  0021A0  0E00               	movlw	high _tx_buf
  6457  0021A2  6E0A               	movwf	i2ringbuf_pop@rb+1,c
  6458  0021A4  EC1F  F00E         	call	i2_ringbuf_pop	;wreg free
  6459  0021A8  6EAE               	movwf	4014,c	;volatile
  6460                           
  6461                           ;My_header\My_header.h: 212: } else {
  6462  0021AA  D002               	goto	i2l777
  6463  0021AC                     i2l778:
  6464                           
  6465                           ;My_header\My_header.h: 213: PIE1bits.TXIE = 0;
  6466  0021AC  989D               	bcf	3997,4,c	;volatile
  6467  0021AE  D000               	goto	i2l777
  6468  0021B0                     i2l777:
  6469                           
  6470                           ;My_header\My_header.h: 214: }
  6471                           ;My_header\My_header.h: 215: }
  6472                           ;My_header\My_header.h: 216: if (PIR1bits.RCIF && PIE1bits.RCIE) {
  6473  0021B0  AA9E               	btfss	3998,5,c	;volatile
  6474  0021B2  0012               	return	
  6475  0021B4  AA9D               	btfss	3997,5,c	;volatile
  6476  0021B6  0012               	return	
  6477                           
  6478                           ;My_header\My_header.h: 217: char ascii = RCREG1;
  6479  0021B8  CFAF F010          	movff	4015,UART_ISR@ascii	;volatile
  6480                           
  6481                           ;My_header\My_header.h: 218: ringbuf_put(&rx_buf, ascii);
  6482  0021BC  0EAA               	movlw	low _rx_buf
  6483  0021BE  6E09               	movwf	i2ringbuf_put@rb,c
  6484  0021C0  0E00               	movlw	high _rx_buf
  6485  0021C2  6E0A               	movwf	i2ringbuf_put@rb+1,c
  6486  0021C4  C010  F00B         	movff	UART_ISR@ascii,i2ringbuf_put@asciicode
  6487  0021C8  ECC3  F00D         	call	i2_ringbuf_put	;wreg free
  6488  0021CC  0012               	return	
  6489  0021CE  0012               	return		;funcret
  6490  0021D0                     __end_of_UART_ISR:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           intcon2	equ	0xFF1
  6502                           indf0	equ	0xFEF
  6503                           postinc0	equ	0xFEE
  6504                           fsr0h	equ	0xFEA
  6505                           fsr0l	equ	0xFE9
  6506                           wreg	equ	0xFE8
  6507                           postinc1	equ	0xFE6
  6508                           postdec1	equ	0xFE5
  6509                           fsr1h	equ	0xFE2
  6510                           fsr1l	equ	0xFE1
  6511                           indf2	equ	0xFDF
  6512                           postinc2	equ	0xFDE
  6513                           postdec2	equ	0xFDD
  6514                           fsr2h	equ	0xFDA
  6515                           fsr2l	equ	0xFD9
  6516                           status	equ	0xFD8
  6517                           
  6518 ;; *************** function i2_ringbuf_put *****************
  6519 ;; Defined at:
  6520 ;;		line 39 in file "../My_header\My_ringbuf.h"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  6523 ;;		 -> rx_buf(8), tx_buf(8), 
  6524 ;;  asciicode       1   10[COMRAM] unsigned char 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;		None               void
  6529 ;; Registers used:
  6530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;Total ram usage:        7 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:    1
  6543 ;; This function calls:
  6544 ;;		i2_ringbuf_num
  6545 ;; This function is called by:
  6546 ;;		_UART_ISR
  6547 ;; This function uses a non-reentrant model
  6548 ;;
  6549                           
  6550                           	psect	text40
  6551  001B86                     __ptext40:
  6552                           	opt stack 0
  6553  001B86                     i2_ringbuf_put:
  6554                           	opt stack 21
  6555                           
  6556                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
  6557                           
  6558                           ;incstack = 0
  6559  001B86  C009  F001         	movff	i2ringbuf_put@rb,i2ringbuf_num@rb
  6560  001B8A  C00A  F002         	movff	i2ringbuf_put@rb+1,i2ringbuf_num@rb+1
  6561  001B8E  EC07  F00D         	call	i2_ringbuf_num	;wreg free
  6562  001B92  EE20 F002          	lfsr	2,2
  6563  001B96  5009               	movf	i2ringbuf_put@rb,w,c
  6564  001B98  26D9               	addwf	fsr2l,f,c
  6565  001B9A  500A               	movf	i2ringbuf_put@rb+1,w,c
  6566  001B9C  22DA               	addwfc	fsr2h,f,c
  6567  001B9E  50DE               	movf	postinc2,w,c
  6568  001BA0  5C01               	subwf	?i2_ringbuf_num,w,c
  6569  001BA2  50DE               	movf	postinc2,w,c
  6570  001BA4  5802               	subwfb	?i2_ringbuf_num+1,w,c
  6571  001BA6  B0D8               	btfsc	status,0,c
  6572  001BA8  0012               	return	
  6573                           
  6574                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
  6575  001BAA  EE20 F004          	lfsr	2,4
  6576  001BAE  5009               	movf	i2ringbuf_put@rb,w,c
  6577  001BB0  26D9               	addwf	fsr2l,f,c
  6578  001BB2  500A               	movf	i2ringbuf_put@rb+1,w,c
  6579  001BB4  22DA               	addwfc	fsr2h,f,c
  6580  001BB6  CFDE F00C          	movff	postinc2,??i2_ringbuf_put
  6581  001BBA  CFDD F00D          	movff	postdec2,??i2_ringbuf_put+1
  6582  001BBE  C009  FFD9         	movff	i2ringbuf_put@rb,fsr2l
  6583  001BC2  C00A  FFDA         	movff	i2ringbuf_put@rb+1,fsr2h
  6584  001BC6  CFDE F00E          	movff	postinc2,??i2_ringbuf_put+2
  6585  001BCA  CFDD F00F          	movff	postdec2,??i2_ringbuf_put+3
  6586  001BCE  500C               	movf	??i2_ringbuf_put,w,c
  6587  001BD0  240E               	addwf	??i2_ringbuf_put+2,w,c
  6588  001BD2  6ED9               	movwf	fsr2l,c
  6589  001BD4  500D               	movf	??i2_ringbuf_put+1,w,c
  6590  001BD6  200F               	addwfc	??i2_ringbuf_put+3,w,c
  6591  001BD8  6EDA               	movwf	fsr2h,c
  6592  001BDA  C00B  FFDF         	movff	i2ringbuf_put@asciicode,indf2
  6593                           
  6594                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
  6595  001BDE  EE20 F002          	lfsr	2,2
  6596  001BE2  5009               	movf	i2ringbuf_put@rb,w,c
  6597  001BE4  26D9               	addwf	fsr2l,f,c
  6598  001BE6  500A               	movf	i2ringbuf_put@rb+1,w,c
  6599  001BE8  22DA               	addwfc	fsr2h,f,c
  6600  001BEA  EE10 F004          	lfsr	1,4
  6601  001BEE  5009               	movf	i2ringbuf_put@rb,w,c
  6602  001BF0  26E1               	addwf	fsr1l,f,c
  6603  001BF2  500A               	movf	i2ringbuf_put@rb+1,w,c
  6604  001BF4  22E2               	addwfc	fsr1h,f,c
  6605  001BF6  CFE6 F00E          	movff	postinc1,??i2_ringbuf_put+2
  6606  001BFA  CFE5 F00F          	movff	postdec1,??i2_ringbuf_put+3
  6607  001BFE  0E01               	movlw	1
  6608  001C00  260E               	addwf	??i2_ringbuf_put+2,f,c
  6609  001C02  0E00               	movlw	0
  6610  001C04  220F               	addwfc	??i2_ringbuf_put+3,f,c
  6611  001C06  50DE               	movf	postinc2,w,c
  6612  001C08  5C0E               	subwf	??i2_ringbuf_put+2,w,c
  6613  001C0A  50DE               	movf	postinc2,w,c
  6614  001C0C  580F               	subwfb	??i2_ringbuf_put+3,w,c
  6615  001C0E  B0D8               	btfsc	status,0,c
  6616  001C10  D00A               	goto	i2l5152
  6617  001C12  EE20 F004          	lfsr	2,4
  6618  001C16  5009               	movf	i2ringbuf_put@rb,w,c
  6619  001C18  26D9               	addwf	fsr2l,f,c
  6620  001C1A  500A               	movf	i2ringbuf_put@rb+1,w,c
  6621  001C1C  22DA               	addwfc	fsr2h,f,c
  6622  001C1E  2ADE               	incf	postinc2,f,c
  6623  001C20  0E00               	movlw	0
  6624  001C22  22DD               	addwfc	postdec2,f,c
  6625  001C24  0012               	return	
  6626  001C26                     i2l5152:
  6627                           
  6628                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
  6629  001C26  EE20 F004          	lfsr	2,4
  6630  001C2A  5009               	movf	i2ringbuf_put@rb,w,c
  6631  001C2C  26D9               	addwf	fsr2l,f,c
  6632  001C2E  500A               	movf	i2ringbuf_put@rb+1,w,c
  6633  001C30  22DA               	addwfc	fsr2h,f,c
  6634  001C32  0E00               	movlw	0
  6635  001C34  6EDE               	movwf	postinc2,c
  6636  001C36  0E00               	movlw	0
  6637  001C38  6EDD               	movwf	postdec2,c
  6638  001C3A  0012               	return	
  6639  001C3C  0012               	return		;funcret
  6640  001C3E                     __end_ofi2_ringbuf_put:
  6641                           	opt stack 0
  6642                           pclatu	equ	0xFFB
  6643                           pclath	equ	0xFFA
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           intcon2	equ	0xFF1
  6652                           indf0	equ	0xFEF
  6653                           postinc0	equ	0xFEE
  6654                           fsr0h	equ	0xFEA
  6655                           fsr0l	equ	0xFE9
  6656                           wreg	equ	0xFE8
  6657                           postinc1	equ	0xFE6
  6658                           postdec1	equ	0xFE5
  6659                           fsr1h	equ	0xFE2
  6660                           fsr1l	equ	0xFE1
  6661                           indf2	equ	0xFDF
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           fsr2h	equ	0xFDA
  6665                           fsr2l	equ	0xFD9
  6666                           status	equ	0xFD8
  6667                           
  6668 ;; *************** function i2_ringbuf_pop *****************
  6669 ;; Defined at:
  6670 ;;		line 64 in file "../My_header\My_ringbuf.h"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  rb              2    8[COMRAM] PTR struct ringbuf
  6673 ;;		 -> rx_buf(8), tx_buf(8), 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  ringbuf_pop     1   14[COMRAM] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      unsigned char 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6687 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;Total ram usage:        7 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    1
  6692 ;; This function calls:
  6693 ;;		i2_ringbuf_num
  6694 ;; This function is called by:
  6695 ;;		_UART_ISR
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text41
  6700  001C3E                     __ptext41:
  6701                           	opt stack 0
  6702  001C3E                     i2_ringbuf_pop:
  6703                           	opt stack 21
  6704                           
  6705                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
  6706                           
  6707                           ;incstack = 0
  6708  001C3E  C009  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
  6709  001C42  C00A  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
  6710  001C46  EC07  F00D         	call	i2_ringbuf_num	;wreg free
  6711  001C4A  5001               	movf	?i2_ringbuf_num,w,c
  6712  001C4C  1002               	iorwf	?i2_ringbuf_num+1,w,c
  6713  001C4E  B4D8               	btfsc	status,2,c
  6714  001C50  D04B               	goto	i2l5170
  6715                           
  6716                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
  6717  001C52  EE20 F006          	lfsr	2,6
  6718  001C56  5009               	movf	i2ringbuf_pop@rb,w,c
  6719  001C58  26D9               	addwf	fsr2l,f,c
  6720  001C5A  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6721  001C5C  22DA               	addwfc	fsr2h,f,c
  6722  001C5E  CFDE F00B          	movff	postinc2,??i2_ringbuf_pop
  6723  001C62  CFDD F00C          	movff	postdec2,??i2_ringbuf_pop+1
  6724  001C66  C009  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
  6725  001C6A  C00A  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
  6726  001C6E  CFDE F00D          	movff	postinc2,??i2_ringbuf_pop+2
  6727  001C72  CFDD F00E          	movff	postdec2,??i2_ringbuf_pop+3
  6728  001C76  500B               	movf	??i2_ringbuf_pop,w,c
  6729  001C78  240D               	addwf	??i2_ringbuf_pop+2,w,c
  6730  001C7A  6ED9               	movwf	fsr2l,c
  6731  001C7C  500C               	movf	??i2_ringbuf_pop+1,w,c
  6732  001C7E  200E               	addwfc	??i2_ringbuf_pop+3,w,c
  6733  001C80  6EDA               	movwf	fsr2h,c
  6734  001C82  50DF               	movf	indf2,w,c
  6735  001C84  6E0F               	movwf	i2ringbuf_pop@ret,c
  6736                           
  6737                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
  6738  001C86  EE20 F002          	lfsr	2,2
  6739  001C8A  5009               	movf	i2ringbuf_pop@rb,w,c
  6740  001C8C  26D9               	addwf	fsr2l,f,c
  6741  001C8E  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6742  001C90  22DA               	addwfc	fsr2h,f,c
  6743  001C92  EE10 F006          	lfsr	1,6
  6744  001C96  5009               	movf	i2ringbuf_pop@rb,w,c
  6745  001C98  26E1               	addwf	fsr1l,f,c
  6746  001C9A  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6747  001C9C  22E2               	addwfc	fsr1h,f,c
  6748  001C9E  CFE6 F00D          	movff	postinc1,??i2_ringbuf_pop+2
  6749  001CA2  CFE5 F00E          	movff	postdec1,??i2_ringbuf_pop+3
  6750  001CA6  0E01               	movlw	1
  6751  001CA8  260D               	addwf	??i2_ringbuf_pop+2,f,c
  6752  001CAA  0E00               	movlw	0
  6753  001CAC  220E               	addwfc	??i2_ringbuf_pop+3,f,c
  6754  001CAE  50DE               	movf	postinc2,w,c
  6755  001CB0  5C0D               	subwf	??i2_ringbuf_pop+2,w,c
  6756  001CB2  50DE               	movf	postinc2,w,c
  6757  001CB4  580E               	subwfb	??i2_ringbuf_pop+3,w,c
  6758  001CB6  B0D8               	btfsc	status,0,c
  6759  001CB8  D00A               	goto	i2l5162
  6760                           
  6761                           ;My_header\My_ringbuf.h: 68: rb->tail++;
  6762  001CBA  EE20 F006          	lfsr	2,6
  6763  001CBE  5009               	movf	i2ringbuf_pop@rb,w,c
  6764  001CC0  26D9               	addwf	fsr2l,f,c
  6765  001CC2  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6766  001CC4  22DA               	addwfc	fsr2h,f,c
  6767  001CC6  2ADE               	incf	postinc2,f,c
  6768  001CC8  0E00               	movlw	0
  6769  001CCA  22DD               	addwfc	postdec2,f,c
  6770                           
  6771                           ;My_header\My_ringbuf.h: 69: } else {
  6772  001CCC  D00B               	goto	i2l5164
  6773  001CCE                     i2l5162:
  6774                           
  6775                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
  6776  001CCE  EE20 F006          	lfsr	2,6
  6777  001CD2  5009               	movf	i2ringbuf_pop@rb,w,c
  6778  001CD4  26D9               	addwf	fsr2l,f,c
  6779  001CD6  500A               	movf	i2ringbuf_pop@rb+1,w,c
  6780  001CD8  22DA               	addwfc	fsr2h,f,c
  6781  001CDA  0E00               	movlw	0
  6782  001CDC  6EDE               	movwf	postinc2,c
  6783  001CDE  0E00               	movlw	0
  6784  001CE0  6EDD               	movwf	postdec2,c
  6785  001CE2  D000               	goto	i2l5164
  6786  001CE4                     i2l5164:
  6787                           
  6788                           ;My_header\My_ringbuf.h: 71: }
  6789                           ;My_header\My_ringbuf.h: 72: return ret;
  6790  001CE4  500F               	movf	i2ringbuf_pop@ret,w,c
  6791                           
  6792                           ;My_header\My_ringbuf.h: 73: } else {
  6793  001CE6  0012               	return	
  6794  001CE8                     i2l5170:
  6795                           
  6796                           ;My_header\My_ringbuf.h: 74: return 0;
  6797  001CE8  0E00               	movlw	0
  6798  001CEA  0012               	return	
  6799  001CEC  0012               	return		;funcret
  6800  001CEE                     __end_ofi2_ringbuf_pop:
  6801                           	opt stack 0
  6802                           pclatu	equ	0xFFB
  6803                           pclath	equ	0xFFA
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           prodh	equ	0xFF4
  6809                           prodl	equ	0xFF3
  6810                           intcon	equ	0xFF2
  6811                           intcon2	equ	0xFF1
  6812                           indf0	equ	0xFEF
  6813                           postinc0	equ	0xFEE
  6814                           fsr0h	equ	0xFEA
  6815                           fsr0l	equ	0xFE9
  6816                           wreg	equ	0xFE8
  6817                           postinc1	equ	0xFE6
  6818                           postdec1	equ	0xFE5
  6819                           fsr1h	equ	0xFE2
  6820                           fsr1l	equ	0xFE1
  6821                           indf2	equ	0xFDF
  6822                           postinc2	equ	0xFDE
  6823                           postdec2	equ	0xFDD
  6824                           fsr2h	equ	0xFDA
  6825                           fsr2l	equ	0xFD9
  6826                           status	equ	0xFD8
  6827                           
  6828 ;; *************** function i2_ringbuf_num *****************
  6829 ;; Defined at:
  6830 ;;		line 31 in file "../My_header\My_ringbuf.h"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  6833 ;;		 -> rx_buf(8), tx_buf(8), 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  2    0[COMRAM] unsigned int 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;Total ram usage:        8 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_UART_ISR
  6855 ;;		i2_ringbuf_put
  6856 ;;		i2_ringbuf_pop
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text42
  6861  001A0E                     __ptext42:
  6862                           	opt stack 0
  6863  001A0E                     i2_ringbuf_num:
  6864                           	opt stack 21
  6865                           
  6866                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
  6867                           
  6868                           ;incstack = 0
  6869  001A0E  EE20 F006          	lfsr	2,6
  6870  001A12  5001               	movf	i2ringbuf_num@rb,w,c
  6871  001A14  26D9               	addwf	fsr2l,f,c
  6872  001A16  5002               	movf	i2ringbuf_num@rb+1,w,c
  6873  001A18  22DA               	addwfc	fsr2h,f,c
  6874  001A1A  EE10 F004          	lfsr	1,4
  6875  001A1E  5001               	movf	i2ringbuf_num@rb,w,c
  6876  001A20  26E1               	addwf	fsr1l,f,c
  6877  001A22  5002               	movf	i2ringbuf_num@rb+1,w,c
  6878  001A24  22E2               	addwfc	fsr1h,f,c
  6879  001A26  50DE               	movf	postinc2,w,c
  6880  001A28  5CE6               	subwf	postinc1,w,c
  6881  001A2A  50DE               	movf	postinc2,w,c
  6882  001A2C  58E6               	subwfb	postinc1,w,c
  6883  001A2E  A0D8               	btfss	status,0,c
  6884  001A30  D01F               	goto	i2l4780
  6885                           
  6886                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
  6887  001A32  EE20 F004          	lfsr	2,4
  6888  001A36  5001               	movf	i2ringbuf_num@rb,w,c
  6889  001A38  26D9               	addwf	fsr2l,f,c
  6890  001A3A  5002               	movf	i2ringbuf_num@rb+1,w,c
  6891  001A3C  22DA               	addwfc	fsr2h,f,c
  6892  001A3E  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  6893  001A42  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  6894  001A46  EE20 F006          	lfsr	2,6
  6895  001A4A  5001               	movf	i2ringbuf_num@rb,w,c
  6896  001A4C  26D9               	addwf	fsr2l,f,c
  6897  001A4E  5002               	movf	i2ringbuf_num@rb+1,w,c
  6898  001A50  22DA               	addwfc	fsr2h,f,c
  6899  001A52  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  6900  001A56  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  6901  001A5A  1E05               	comf	??i2_ringbuf_num+2,f,c
  6902  001A5C  1E06               	comf	??i2_ringbuf_num+3,f,c
  6903  001A5E  4A05               	infsnz	??i2_ringbuf_num+2,f,c
  6904  001A60  2A06               	incf	??i2_ringbuf_num+3,f,c
  6905  001A62  5003               	movf	??i2_ringbuf_num,w,c
  6906  001A64  2405               	addwf	??i2_ringbuf_num+2,w,c
  6907  001A66  6E01               	movwf	?i2_ringbuf_num,c
  6908  001A68  5004               	movf	??i2_ringbuf_num+1,w,c
  6909  001A6A  2006               	addwfc	??i2_ringbuf_num+3,w,c
  6910  001A6C  6E02               	movwf	?i2_ringbuf_num+1,c
  6911                           
  6912                           ;My_header\My_ringbuf.h: 34: } else {
  6913  001A6E  0012               	return	
  6914  001A70                     i2l4780:
  6915                           
  6916                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
  6917  001A70  EE20 F004          	lfsr	2,4
  6918  001A74  5001               	movf	i2ringbuf_num@rb,w,c
  6919  001A76  26D9               	addwf	fsr2l,f,c
  6920  001A78  5002               	movf	i2ringbuf_num@rb+1,w,c
  6921  001A7A  22DA               	addwfc	fsr2h,f,c
  6922  001A7C  CFDE F003          	movff	postinc2,??i2_ringbuf_num
  6923  001A80  CFDD F004          	movff	postdec2,??i2_ringbuf_num+1
  6924  001A84  EE20 F002          	lfsr	2,2
  6925  001A88  5001               	movf	i2ringbuf_num@rb,w,c
  6926  001A8A  26D9               	addwf	fsr2l,f,c
  6927  001A8C  5002               	movf	i2ringbuf_num@rb+1,w,c
  6928  001A8E  22DA               	addwfc	fsr2h,f,c
  6929  001A90  CFDE F005          	movff	postinc2,??i2_ringbuf_num+2
  6930  001A94  CFDD F006          	movff	postdec2,??i2_ringbuf_num+3
  6931  001A98  EE20 F006          	lfsr	2,6
  6932  001A9C  5001               	movf	i2ringbuf_num@rb,w,c
  6933  001A9E  26D9               	addwf	fsr2l,f,c
  6934  001AA0  5002               	movf	i2ringbuf_num@rb+1,w,c
  6935  001AA2  22DA               	addwfc	fsr2h,f,c
  6936  001AA4  CFDE F007          	movff	postinc2,??i2_ringbuf_num+4
  6937  001AA8  CFDD F008          	movff	postdec2,??i2_ringbuf_num+5
  6938  001AAC  1E07               	comf	??i2_ringbuf_num+4,f,c
  6939  001AAE  1E08               	comf	??i2_ringbuf_num+5,f,c
  6940  001AB0  4A07               	infsnz	??i2_ringbuf_num+4,f,c
  6941  001AB2  2A08               	incf	??i2_ringbuf_num+5,f,c
  6942  001AB4  5005               	movf	??i2_ringbuf_num+2,w,c
  6943  001AB6  2607               	addwf	??i2_ringbuf_num+4,f,c
  6944  001AB8  5006               	movf	??i2_ringbuf_num+3,w,c
  6945  001ABA  2208               	addwfc	??i2_ringbuf_num+5,f,c
  6946  001ABC  5003               	movf	??i2_ringbuf_num,w,c
  6947  001ABE  2407               	addwf	??i2_ringbuf_num+4,w,c
  6948  001AC0  6E01               	movwf	?i2_ringbuf_num,c
  6949  001AC2  5004               	movf	??i2_ringbuf_num+1,w,c
  6950  001AC4  2008               	addwfc	??i2_ringbuf_num+5,w,c
  6951  001AC6  6E02               	movwf	?i2_ringbuf_num+1,c
  6952  001AC8  0012               	return	
  6953  001ACA  0012               	return		;funcret
  6954  001ACC                     __end_ofi2_ringbuf_num:
  6955                           	opt stack 0
  6956                           pclatu	equ	0xFFB
  6957                           pclath	equ	0xFFA
  6958                           tblptru	equ	0xFF8
  6959                           tblptrh	equ	0xFF7
  6960                           tblptrl	equ	0xFF6
  6961                           tablat	equ	0xFF5
  6962                           prodh	equ	0xFF4
  6963                           prodl	equ	0xFF3
  6964                           intcon	equ	0xFF2
  6965                           intcon2	equ	0xFF1
  6966                           indf0	equ	0xFEF
  6967                           postinc0	equ	0xFEE
  6968                           fsr0h	equ	0xFEA
  6969                           fsr0l	equ	0xFE9
  6970                           wreg	equ	0xFE8
  6971                           postinc1	equ	0xFE6
  6972                           postdec1	equ	0xFE5
  6973                           fsr1h	equ	0xFE2
  6974                           fsr1l	equ	0xFE1
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           pclatu	equ	0xFFB
  6982                           pclath	equ	0xFFA
  6983                           tblptru	equ	0xFF8
  6984                           tblptrh	equ	0xFF7
  6985                           tblptrl	equ	0xFF6
  6986                           tablat	equ	0xFF5
  6987                           prodh	equ	0xFF4
  6988                           prodl	equ	0xFF3
  6989                           intcon	equ	0xFF2
  6990                           intcon2	equ	0xFF1
  6991                           indf0	equ	0xFEF
  6992                           postinc0	equ	0xFEE
  6993                           fsr0h	equ	0xFEA
  6994                           fsr0l	equ	0xFE9
  6995                           wreg	equ	0xFE8
  6996                           postinc1	equ	0xFE6
  6997                           postdec1	equ	0xFE5
  6998                           fsr1h	equ	0xFE2
  6999                           fsr1l	equ	0xFE1
  7000                           indf2	equ	0xFDF
  7001                           postinc2	equ	0xFDE
  7002                           postdec2	equ	0xFDD
  7003                           fsr2h	equ	0xFDA
  7004                           fsr2l	equ	0xFD9
  7005                           status	equ	0xFD8
  7006                           
  7007                           	psect	rparam
  7008  0000                     pclatu	equ	0xFFB
  7009                           pclath	equ	0xFFA
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           prodh	equ	0xFF4
  7015                           prodl	equ	0xFF3
  7016                           intcon	equ	0xFF2
  7017                           intcon2	equ	0xFF1
  7018                           indf0	equ	0xFEF
  7019                           postinc0	equ	0xFEE
  7020                           fsr0h	equ	0xFEA
  7021                           fsr0l	equ	0xFE9
  7022                           wreg	equ	0xFE8
  7023                           postinc1	equ	0xFE6
  7024                           postdec1	equ	0xFE5
  7025                           fsr1h	equ	0xFE2
  7026                           fsr1l	equ	0xFE1
  7027                           indf2	equ	0xFDF
  7028                           postinc2	equ	0xFDE
  7029                           postdec2	equ	0xFDD
  7030                           fsr2h	equ	0xFDA
  7031                           fsr2l	equ	0xFD9
  7032                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    229
    Data        3
    BSS         2368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      65
    BANK0           160     44     157
    BANK1           256      4     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_3(CODE[6]), STR_2(CODE[9]), weekday_3char(CODE[28]), STR_1(CODE[3]), 
		 -> display_dec@str(COMRAM[10]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    S2787ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@rxbuf(BANK1[100]), main_init@txbuf(BIGRAMl[2000]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> rx_buf(BANK0[8]), tx_buf(BANK0[8]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_I2C_LCD_Puts
    _main->_I2C_LCD_SetCursor
    _main->_ringbuf_pop
    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _I2C_LCD_init->_I2C_LCD_Clear
    _epoch_to_caltime->_month_length
    _get_quot_rem->___lldiv
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_RTCC_to_caltime
    _caltime_to_epoch->_month_length
    _month_length->___awmod
    ___lmul->___lldiv
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in COMRAM

    _ISR->_UART_ISR
    _UART_ISR->i2_ringbuf_pop
    _UART_ISR->i2_ringbuf_put
    i2_ringbuf_put->i2_ringbuf_num
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _tx_send->_ringbuf_put
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _main_init->_ringbuf_init
    _I2C_LCD_init->_I2C_LCD_Command
    _I2C_LCD_Clear->_I2C_LCD_Command
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _I2C_LCD_SetCursor->_I2C_LCD_Command

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_RTCC_from_epoch

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24688
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _main_init
                        _ringbuf_num
                        _ringbuf_pop
                            _tx_send
 ---------------------------------------------------------------------------------
 (1) _tx_send                                              1     1      0    1982
                                             10 BANK0      1     1      0
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put                                          7     4      3    1951
                                             32 COMRAM     3     0      3
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _ringbuf_pop                                          7     5      2    1126
                                             32 COMRAM     3     1      2
                                              6 BANK0      4     4      0
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          8     6      2     702
                                             30 COMRAM     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2587
                           _ADC_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             30 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6     810
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1534
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     667
                                             34 COMRAM     1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     200
                                             30 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_epoch                                      4     0      4    9169
                                              0 BANK1      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (2) _epoch_to_caltime                                    16    12      4    7312
                                             28 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _get_quot_rem                                         8     4      4    3846
                                             20 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     865
                                             30 COMRAM     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _caltime_to_RTCC                                      2     0      2    1140
                                              4 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (3) _d_to_x                                               1     1      0     715
                                             34 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     653
                                             30 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_from_RTCC                                       4     0      4    6407
                                             35 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (2) _caltime_to_epoch                                    15    11      4    4986
                                             20 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _month_length                                         6     5      1    2075
                                             34 COMRAM     1     0      1
                                              2 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     849
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1960
                                              8 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (2) _RTCC_to_caltime                                      3     1      2     288
                                             32 COMRAM     3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (3) _x_to_d                                               2     2      0      44
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1390
                                             34 COMRAM     1     0      1
                                              2 BANK0      3     3      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              0 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1325
                                             34 COMRAM     1     1      0
                                              0 BANK0      4     2      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                             32 COMRAM     2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                             32 COMRAM     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                             30 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0    1172
                                             16 COMRAM    14    14      0
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (8) _UART_ISR                                             1     1      0    1172
                                             15 COMRAM     1     1      0
                      i2_ringbuf_num
                      i2_ringbuf_pop
                      i2_ringbuf_put
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_put                                        7     4      3     482
                                              8 COMRAM     7     4      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        7     5      2     435
                                              8 COMRAM     7     5      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_num                                       8     6      2     232
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _main_init
     _ADC_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _ringbuf_num
   _ringbuf_pop
     _ringbuf_num
   _tx_send
     _ringbuf_put
       _ringbuf_num

 _ISR (ROOT)
   _UART_ISR
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
     i2_ringbuf_put
       i2_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      E8       7       90.6%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2C      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      41       1       68.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C6       8        0.0%
DATA                 0      0     996       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jul 18 22:01:55 2015

                     _USB_SD_Ptr 0F01               __size_of_I2C_Start 002E  
                             _d1 007D                     ___awdiv@sign 00CF  
              ??_RTCC_from_epoch 0024                     __CFG_CP0$OFF 000000  
                            l702 21F2                              _BDT 000D00  
                            l961 1628                              l697 225E  
                            l882 241C                              l867 22CA  
                            l891 2240                              l955 1D9E  
                            l974 136C                              _ISR 0008  
                            _UIE 000F36                              _UIR 000F62  
                  ?_get_quot_rem 00E2               caltime_to_epoch@ep 00E4  
             caltime_to_epoch@ct 00E2                     ___awmod@sign 00CF  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                   _USBDeviceState 0031  
                   _I2C_LCD_Puts 1F76                ??_I2C_LCD_Command 0023  
                           ?_ISR 0001                     _I2C_LCD_init 212E  
                           l5002 2296                             l1594 1B74  
                           l6300 1D1C                             l7020 181A  
                           l6310 1D4A                             l7030 1850  
                           l6240 245A                             l6306 1D36  
                           l6322 1D7A                             l6308 1D42  
                           l4740 2340                             l7044 1882  
                           l6350 1F32                             l6342 1F0E  
                           l6326 1D90                             l6318 1D6C  
                           l6510 13E4                             l6600 1F9E  
                           l6416 1770                             l4904 2274  
                           l6282 2040                             l6362 1F6A  
                           l6354 1F48                             l6346 1F1E  
                           l6338 1F00                             l6530 101A  
                           l6514 13EE                             l4738 232E  
                           l6442 1938                             l6348 1F2A  
                           l6540 107E                             l6372 1AF6  
                           l6508 13DE                             l4916 21F6  
                           l6606 1FD2                             l6278 2018  
                           l6358 1F56                             l6550 110A  
                           l6534 1024                             l6542 1084  
                           l6294 1D08                             l6374 1B06  
                           l6608 1FFE                             l6528 1014  
                           l6384 1B62                             l6376 1B10  
             __CFG_WPFP$PAGE_127 000000                             l6546 10A4  
                           l6396 14E2                             l6566 19EE  
                           l6574 1A08                             l6568 1A04  
                           STR_1 0FF5                             STR_2 0FE6  
                           STR_3 0FEF                             u6000 22D6  
                           u6220 1722                             u6230 1724  
                           u4295 23E2                             u6240 174C  
                           u4296 23E4                             u6260 1762  
                           u6270 1764                             u6440 1FC0  
                           u6280 17B8                             u6450 1FF4  
                           u6290 17BA                             u6258 1750  
                           u6447 1FB6                             u6457 1FEA  
                           _UCFG 000F39                             _UEP0 000F26  
                           _UEP1 000F27                             u6947 244A  
                           _UEIE 000F37                             u6957 2334  
                           u6967 2246                             u6977 1FCC  
                           _UEIR 000F63                             _UCON 000F65  
                _CDCDataInHandle 008E                             _pDst 0090  
                           _main 17C2                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr0l 000FE9                             fsr2h 000FDA  
                    _BaudRateGen 0079                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
               __end_of_I2C_Send 2426           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 248A                             pclat 000FFA  
               __end_of_I2C_init 2480                             prodh 000FF4  
                           prodl 000FF3                             start 00A4  
               __end_of_ADC_init 23F2                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010                    _I2C_LCD_Clear 243E  
          __end_ofi2_ringbuf_pop 1CEE            __end_ofi2_ringbuf_num 1ACC  
          __end_ofi2_ringbuf_put 1C3E                    ADC_init@p_ref 001F  
                          ??_ISR 0011           __size_of_I2C_IdleCheck 0018  
              ??_RTCC_to_caltime 0023                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E                            ?_main 0001  
                 ??_get_quot_rem 0024                  __end_of___awdiv 1D9C  
                          _ADRES 000FC3                  __end_of___awmod 1F76  
                __end_of___lldiv 1B86                  ___awdiv@divisor 0021  
                          _LATB2 007C52                            i2l777 21B0  
                          i2l778 21AC                            _UADDR 000F38  
                ___awdiv@counter 00CE                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _USTAT 000F64  
            ___lmul@multiplicand 00DA                   __CFG_FCMEN$OFF 000000  
               __end_of_UART_ISR 21D0                            _sd000 0FE2  
                          _sd001 0F4C                            _sd002 0F80  
           caltime_to_epoch@year 00EA               __size_of_UART_init 0020  
                          _colon 009D               __size_of_RTCC_init 0030  
              __end_of_I2C_Start 22DC                            tablat 000FF5  
                          status 000FD8                  __end_of_tx_send 243E  
               __end_of_Delay_ms 2352                month_length@month 0023  
                 ?_I2C_LCD_Clear 0001                  __initialization 207E  
                   __end_of_main 188A            _control_signal_bitmap 009E  
            ringbuf_init@bufsize 00D2                 RTCC_from_RTCC@ep 00F3  
               RTCC_from_RTCC@ct 00F1                           ??_main 0024  
                  __activetblptr 000003                     _cdc_mem_type 009C  
                         _BCL1IF 007D0B                    _I2C_IdleCheck 2456  
               _CDCDataOutHandle 002A                _I2C_LCD_SetCursor 22DC  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 001F  
             I2C_LCD_Command@ans 00CF                           i2l1121 006A  
                         i2l1118 004E                   __CFG_WDTEN$OFF 000000  
                         i2l5152 1C26                           i2l5162 1CCE  
                         i2l5170 1CE8                           i2l5164 1CE4  
                         i2l6158 005E                           i2l4780 1A70  
             ?_I2C_LCD_SetCursor 0023                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0009  
                i2ringbuf_num@rb 0001                  i2ringbuf_put@rb 0009  
                 __CFG_WPDIS$OFF 000000               epoch_to_caltime@ep 00EC  
             epoch_to_caltime@ct 00EA                _shortPacketStatus 0039  
            ??_I2C_LCD_SetCursor 0024                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 00EA            caltime_to_epoch@epoch 00EC  
                   ?_ringbuf_pop 0021                     ?_ringbuf_num 001F  
                   ?_ringbuf_put 0021            caltime_to_epoch@month 00F0  
                         ___lmul 2004                  _caltime_to_RTCC 1626  
             ??_epoch_to_caltime 00EE                __end_of_UART_init 23B6  
                      ??___awdiv 0023                        ??___awmod 0023  
                         _d_to_x 23B6                        ??___lldiv 001F  
                   ?_timer0_init 0001                __end_of_RTCC_init 22AE  
                   ?_timer1_init 001F                     ?_timer3_init 0001  
                         clear_0 2086                           clear_1 2098  
                         clear_2 20A4                           clear_3 20B0  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 00D0  
                ___awmod@divisor 0021                  ___awmod@counter 00CE  
                         _x_to_d 23F2                           _rx_buf 00AA  
                         _tx_buf 00B2        __size_of_caltime_to_epoch 028C  
                      ?_I2C_Send 0001                        ?_I2C_Stop 0001  
                   __mediumconst 0000                        ?_I2C_init 0001  
      __end_of_I2C_LCD_SetCursor 2306                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                      ?_ADC_init 0001                   ?_I2C_IdleCheck 0001  
                      ??_tx_send 0024                      _CtrlTrfData 000D38  
           _controlTransferState 0036             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 20D4  
                   __pbssBIGRAMl 01E8             __end_of_get_quot_rem 1626  
                  ___rparam_used 000001                  ??_I2C_LCD_Clear 0023  
                _RTCC_from_epoch 2352             __CFG_WPEND$PAGE_WPFP 000000  
                 __pcstackCOMRAM 0001                    __end_of_sd000 0FE6  
                  __end_of_sd001 0F80                    __end_of_sd002 0FB4  
                   __pidataBANK0 248A                        ?_UART_ISR 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 2216  
               I2C_LCD_Command@c 00CE                       ??_I2C_Send 0021  
                     ??_I2C_Stop 0021                       _cdc_notice 0060  
                     _cdc_rx_len 0033                       ??_I2C_init 001F  
                      ?_Delay_ms 001F                       _cdc_tx_len 0035  
                     ??_ADC_init 001F       caltime_to_epoch@month_3886 00EB  
             __size_of_main_init 009E                       __pbssBANK0 0060  
                     __pbssBANK1 0100          __end_of_caltime_to_RTCC 16F8  
                _RTCC_to_caltime 1D9C                      _pBDTEntryIn 0024  
          __end_of_weekday_3char 0FD0                          ?___lmul 00D6  
                     ??_UART_ISR 0010                          ?_d_to_x 0001  
           I2C_LCD_SetCursor@col 00D2                   ___lmul@product 00DE  
                     _device_dsc 0FD0             I2C_LCD_SetCursor@row 0023  
                        ?_x_to_d 0001                     I2C_Send@data 0021  
                     _ep_data_in 0080                _configDescriptor1 0F09  
             __CFG_OSC$INTOSCPLL 000000                  ??_I2C_IdleCheck 001F  
                     ??_Delay_ms 0021       __size_of_I2C_LCD_SetCursor 002A  
         I2C_LCD_SetCursor@F9845 00FA                  __CFG_WDTPS$1024 000000  
                        _SPBRGH1 000F7F                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _RTCVALH 000F3B  
                        _RTCVALL 000F3A                          _UIEbits 000F36  
        __end_of_RTCC_from_epoch 2374             timer1_init@prescaler 0021  
                        _UIRbits 000F62                 i2ringbuf_pop@ret 000F  
               __CFG_CFGPLLEN$ON 000000                    _cdc_trf_state 0034  
                  ?_month_length 0023              epoch_to_caltime@day 00F2  
              RTCC_from_epoch@ep 01E6                RTCC_from_epoch@ct 01E4  
            epoch_to_caltime@num 00F6                        _I2C_Start 22AE  
                        _pCDCDst 0086                          _pCDCSrc 0089  
                        __Hparam 0000                          __Lparam 0000  
        __end_of_I2C_LCD_Command 224C                    ?_ringbuf_init 00CE  
                        ___awdiv 1CEE                  __size_of___lmul 007A  
                        ___awmod 1EE6                          ___lldiv 1ACC  
                __size_of_d_to_x 0020                     __psmallconst 0F00  
           __size_of_ringbuf_pop 00BE             __size_of_ringbuf_num 00DA  
           __size_of_ringbuf_put 00C6                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 1EE6      epoch_to_caltime@month_cache 00FC  
                        __pcinit 207E        __end_of_configDescriptor1 0F4C  
                        __ramtop 0F00             __size_of_timer0_init 0032  
                        _halfsec 009F             __size_of_timer1_init 0046  
                        __ptext0 17C2                          __ptext1 2426  
                        __ptext2 188A                          __ptext3 1950  
                        __ptext4 1476                          __ptext5 1E48  
                        __ptext6 2306                          __ptext7 21D0  
                        __ptext8 224C                          __ptext9 20DA  
                        _inPipes 003A             __size_of_timer3_init 0026  
                __size_of_x_to_d 001A                    I2C_LCD_Puts@s 00CE  
    _USBDeferOUTDataStagePackets 0099                        _T0CONbits 000FD5  
               _time_change_flag 00A0                 _caltime_to_epoch 0FFA  
                   __size_of_ISR 009C                        _T1CONbits 000FCD  
        __size_of_RTCC_from_RTCC 0022                        _T3CONbits 000F79  
               ___awmod@dividend 001F                        _T5CONbits 000F22  
             __end_of_USB_CD_Ptr 0F09          __end_of_RTCC_to_caltime 1E48  
                        _tx_send 2426            __size_of_get_quot_rem 00D6  
           end_of_initialization 20D4           __size_ofi2_ringbuf_pop 00B0  
         __size_ofi2_ringbuf_num 00BE           __size_ofi2_ringbuf_put 00B8  
                   _CTMUCONHbits 000FB3               __end_of_USB_SD_Ptr 0F07  
                   _CTMUCONLbits 000FB2              _pBDTEntryEP0OutNext 002E  
                 ??_month_length 00D0  _dummy_encapsulated_cmd_response 00A2  
               ?_caltime_to_RTCC 00D2                       ?_I2C_Start 0021  
                ___lldiv@divisor 00D2             timer3_init@prescaler 0020  
                ___lldiv@counter 0023                   ??_ringbuf_init 001F  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE       _USBStatusStageEnabledFlag1 009A  
     _USBStatusStageEnabledFlag2 009B                        _UART_init 2396  
               __CFG_DSBOREN$OFF 000000                        _RTCC_init 227E  
      epoch_to_caltime@day_cache 0092           i2ringbuf_put@asciicode 000B  
                   _get_quot_rem 1550        __size_of_epoch_to_caltime 01F0  
               __CFG_CPUDIV$OSC1 000000               _BothEP0OutUOWNsSet 0095  
              __size_of_I2C_Send 001A                __size_of_I2C_Stop 000A  
              __size_of_I2C_init 0012                __size_of_ADC_init 001C  
               ?_RTCC_from_epoch 01E4                        _USTATcopy 0041  
        timer1_init@clock_select 001F                 __CFG_IOL1WAY$OFF 000000  
            __CFG_MSSP7B_EN$MSK7 000000                 ?_I2C_LCD_Command 0001  
                 ringbuf_init@rb 00CE                   ringbuf_pop@ret 0023  
                  i2_ringbuf_pop 1C3E                    i2_ringbuf_num 1A0E  
                  i2_ringbuf_put 1B86                   __end_of___lmul 207E  
                 __end_of_d_to_x 23D6                __size_of_UART_ISR 004E  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
               __CFG_DSWDTEN$OFF 000000                _USBBusIsSuspended 0097  
                 __end_of_x_to_d 240C            epoch_to_caltime@month 00F5  
            start_initialization 207E                 month_length@year 00D4  
                    __end_of_ISR 00A4                    ?_I2C_LCD_Puts 00CE  
                  ?_I2C_LCD_init 0001                      _cdc_data_rx 0164  
                    _cdc_data_tx 01A4                    UART_ISR@ascii 0010  
              __size_of_Delay_ms 0026                 ?_RTCC_to_caltime 0021  
                    ??_I2C_Start 0022            __end_of_I2C_LCD_Clear 2456  
         _pBDTEntryEP0OutCurrent 002C                         ??___lmul 0024  
                 ?i2_ringbuf_pop 0009                   ?i2_ringbuf_num 0001  
                 ?i2_ringbuf_put 0009                         ??_d_to_x 0023  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00FA  
                       ??_x_to_d 001F             __end_of_month_length 17C2  
                 _RTCC_from_RTCC 2374           _USBActiveConfiguration 0040  
                    __pbssCOMRAM 0024              RTCC_to_caltime@dumy 0023  
                  __pcstackBANK0 00CE                    __pcstackBANK1 01E4  
                 ??_I2C_LCD_Puts 0023                   ??_I2C_LCD_init 0024  
                    _caltime_now 00BA             __end_of_ringbuf_init 212E  
               tx_send@asciicode 00D8                     _pBDTEntryOut 0073  
       __end_of_caltime_to_epoch 1286                        _edit_flag 0037  
                      __pintcode 0008                         ?___awdiv 001F  
                       ?___awmod 001F                         ?___lldiv 00CE  
         __end_of_RTCC_from_RTCC 2396                  I2C_LCD_Puts@ans 00D0  
                    ??_UART_init 001F       USBCBSendResume@delay_count 008C  
                    ??_RTCC_init 001F                      __smallconst 0F00  
                      _epoch_now 00C8                        _main_init 1E48  
                    I2C_Start@rw 0021                 _epoch_to_caltime 1286  
                       _I2C_Send 240C                         _I2C_Stop 2480  
           __CFG_RTCOSC$T1OSCREF 000000                         _I2C_init 246E  
                       _ADC_init 23D6            __end_of_I2C_IdleCheck 246E  
                    _PADCFG1bits 000F3C                      _ep_data_out 0083  
                       ?_tx_send 0001                        d_to_x@dec 0023  
                       _CTMUCONH 000FB3                         _CTMUCONL 000FB2  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 00D0  
                       _LATBbits 000F8A                         _IPR1bits 000F9F  
                       _IPR2bits 000FA2                         _PIE1bits 000F9D  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91                  ??i2_ringbuf_pop 000B  
                ??i2_ringbuf_num 0003                  ??i2_ringbuf_put 000C  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                       _PIR5bits 000F98       epoch_to_caltime@year_cache 00A1  
                  ??_ringbuf_pop 00D4                    ??_ringbuf_num 00CE  
                  ??_ringbuf_put 00D4                         _RCONbits 000FD0  
                       _UEP0bits 000F26       _USBDeferINDataStagePackets 0098  
                       _UART_ISR 2182                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 001F  
                  ??_timer1_init 0020                    ??_timer3_init 001F  
                       _SSP1STAT 000FC7                         _UCONbits 000F65  
                ?_RTCC_from_RTCC 00F1                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                 __CFG_SOSCSEL$LOW 000000  
                     ?_main_init 0001                     _RemoteWakeup 0096  
                       _Delay_ms 232C                    ringbuf_pop@rb 0021  
                  ringbuf_num@rb 001F                    I2C_Start@adrs 0022  
                  ringbuf_put@rb 0021                ___lmul@multiplier 00D6  
                    _INTCON2bits 000FF1             epoch_to_caltime@year 00F4  
             __end_of_device_dsc 0FE2                         __Hrparam 0000  
                       __Lrparam 0000             __end_of_I2C_LCD_Puts 2004  
                       _SetupPkt 000D30                    _weekday_3char 0FB4  
           __end_of_I2C_LCD_init 2182            __size_of_month_length 00CA  
       __size_of_caltime_to_RTCC 00D2                 __size_of___awdiv 00AE  
               __size_of___awmod 0090                I2C_IdleCheck@mask 0020  
               __size_of___lldiv 00BA              __end_of_ringbuf_pop 1A0E  
            __end_of_ringbuf_num 1550              __end_of_ringbuf_put 1950  
                    _line_coding 00C1              __end_of_timer0_init 227E  
          __size_of_ringbuf_init 0054              __end_of_timer1_init 2216  
            __end_of_timer3_init 232C             timer0_init@prescaler 0020  
                       __ptext10 2396                         __ptext11 227E  
                       __ptext20 1ACC                         __ptext12 246E  
                       __ptext21 1626                         __ptext13 212E  
                       __ptext30 23F2                         __ptext22 23B6  
                       __ptext14 243E                         __ptext31 22DC  
                       __ptext23 1CEE                         __ptext15 232C  
                       __ptext40 1B86                         __ptext32 2216  
                       __ptext24 2374                         __ptext16 23D6  
                       __ptext41 1C3E                         __ptext33 1F76  
                       __ptext25 0FFA                         __ptext17 2352  
                       __ptext42 1A0E                         __ptext34 2480  
                       __ptext26 16F8                         __ptext18 1286  
                       __ptext35 22AE                         __ptext27 1EE6  
                       __ptext19 1550                         __ptext36 240C  
                       __ptext28 2004                         __ptext37 2456  
                       __ptext29 1D9C                         __ptext39 2182  
                   _SSP1CON2bits 000FC5            RTCC_loop@prev_halfsec 0094  
               __size_of_tx_send 0018                    __size_of_main 00C8  
                   _month_length 16F8         __size_of_RTCC_from_epoch 0022  
                       _outPipes 006A                     _ringbuf_init 20DA  
                      x_to_d@hex 0020         __size_of_I2C_LCD_Command 0036  
      _USBDeferStatusStagePacket 0030                   main_init@rxbuf 0100  
                 main_init@txbuf 01E8                      ??_main_init 0024  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
           ringbuf_put@asciicode 0023     I2C_LCD_SetCursor@row_offsets 00D0  
                     Delay_ms@ms 001F                 get_quot_rem@quot 00E2  
              RTCC_to_caltime@ct 0021                         intlevel2 0000  
               ___lldiv@dividend 00CE                       _RCSTA1bits 000FAC  
              ?_caltime_to_epoch 00E2         __end_of_epoch_to_caltime 1476  
       __size_of_RTCC_to_caltime 00AC                       _OSCCONbits 000FD3  
             ??_caltime_to_epoch 00E6                      _ringbuf_pop 1950  
                    _ringbuf_num 1476                      _ringbuf_put 188A  
                    _timer0_init 224C                      _timer1_init 21D0  
                    _timer3_init 2306                  get_quot_rem@div 00E4  
                get_quot_rem@num 00E6                       _RTCCFGbits 000F3F  
               ___lldiv@quotient 001F                caltime_to_RTCC@ct 00D2  
              ??_caltime_to_RTCC 0024            _USBAlternateInterface 00CC  
                _endpoint_number 0038           __size_of_I2C_LCD_Clear 0018  
epoch_to_caltime@day_since_epoch 00F0     _USBStatusStageTimeoutCounter 0032  
          __size_of_I2C_LCD_Puts 008E            __size_of_I2C_LCD_init 0054  
                     _USB_CD_Ptr 0F07                 ??_RTCC_from_RTCC 0024  
