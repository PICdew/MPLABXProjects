

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat May 30 09:18:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    14                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    15                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    90  0000                     
    91                           	psect	idataCOMRAM
    92  003A34                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for I2C_LCD_SetCursor@F9850
    96  003A34  00                 	db	0
    97  003A35  40                 	db	64
    98                           
    99                           ;initializer for _cursor_down
   100  003A36  1B                 	db	27
   101  003A37  5B                 	db	91
   102  003A38  42                 	db	66
   103  003A39  00                 	db	0
   104                           
   105                           ;initializer for _cursor_up
   106  003A3A  1B                 	db	27
   107  003A3B  5B                 	db	91
   108  003A3C  41                 	db	65
   109  003A3D  00                 	db	0
   110                           
   111                           	psect	idataBANK0
   112  0038E8                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _weekday_char
   116  0038E8  0F66               	dw	STR_1& (0+65535)
   117  0038EA  0F62               	dw	STR_2& (0+65535)
   118  0038EC  0F5A               	dw	STR_3& (0+65535)
   119  0038EE  0F56               	dw	STR_4& (0+65535)
   120  0038F0  0F6E               	dw	STR_5& (0+65535)
   121  0038F2  0F5E               	dw	STR_6& (0+65535)
   122  0038F4  0F6A               	dw	STR_7& (0+65535)
   123                           
   124                           ;initializer for _weekday_char_full
   125  0038F6  0F3E               	dw	STR_8& (0+65535)
   126  0038F8  0F37               	dw	STR_9& (0+65535)
   127  0038FA  0F2F               	dw	STR_10& (0+65535)
   128  0038FC  0F01               	dw	STR_11& (0+65535)
   129  0038FE  0F26               	dw	STR_12& (0+65535)
   130  003900  0F45               	dw	STR_13& (0+65535)
   131  003902  0F1D               	dw	STR_14& (0+65535)
   132                           
   133                           ;initializer for _cursor_left
   134  003904  1B                 	db	27
   135  003905  5B                 	db	91
   136  003906  44                 	db	68
   137  003907  00                 	db	0
   138                           
   139                           ;initializer for epoch_to_caltime@month_cache
   140  003908  01                 	db	1
   141                           
   142                           ;initializer for _cursor_right
   143  003909  1B                 	db	27
   144  00390A  5B                 	db	91
   145  00390B  43                 	db	67
   146  00390C  00                 	db	0
   147  0000                     _ADRES	set	4035
   148  0000                     _ADCON0	set	4034
   149  0000                     _ADCON0bits	set	4034
   150  0000                     _ADCON1	set	4033
   151  0000                     _ADCON1bits	set	4033
   152  0000                     _ANCON0	set	3912
   153  0000                     _ANCON1	set	3913
   154  0000                     _BAUDCON1bits	set	3966
   155  0000                     _CTMUCONH	set	4019
   156  0000                     _CTMUCONHbits	set	4019
   157  0000                     _CTMUCONL	set	4018
   158  0000                     _CTMUCONLbits	set	4018
   159  0000                     _CTMUICON	set	4017
   160  0000                     _EECON2	set	4007
   161  0000                     _INTCON2bits	set	4081
   162  0000                     _INTCONbits	set	4082
   163  0000                     _IPR1bits	set	3999
   164  0000                     _IPR2bits	set	4002
   165  0000                     _IPR5bits	set	3993
   166  0000                     _OSCCONbits	set	4051
   167  0000                     _OSCTUNEbits	set	3995
   168  0000                     _PADCFG1bits	set	3900
   169  0000                     _PIE1bits	set	3997
   170  0000                     _PIE2bits	set	4000
   171  0000                     _PIE5bits	set	3985
   172  0000                     _PIR1bits	set	3998
   173  0000                     _PIR2bits	set	4001
   174  0000                     _PIR5bits	set	3992
   175  0000                     _PORTAbits	set	3968
   176  0000                     _RCREG1	set	4015
   177  0000                     _RCSTA1bits	set	4012
   178  0000                     _RTCCAL	set	3902
   179  0000                     _RTCCFGbits	set	3903
   180  0000                     _RTCVALH	set	3899
   181  0000                     _RTCVALL	set	3898
   182  0000                     _SPBRG1	set	4016
   183  0000                     _SPBRGH1	set	3967
   184  0000                     _SSP1ADD	set	4040
   185  0000                     _SSP1BUF	set	4041
   186  0000                     _SSP1CON1	set	4038
   187  0000                     _SSP1CON2	set	4037
   188  0000                     _SSP1CON2bits	set	4037
   189  0000                     _SSP1STAT	set	4039
   190  0000                     _T0CONbits	set	4053
   191  0000                     _T1CONbits	set	4045
   192  0000                     _T3CONbits	set	3961
   193  0000                     _T5CONbits	set	3874
   194  0000                     _TMR1H	set	4047
   195  0000                     _TRISA	set	3986
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISC	set	3988
   198  0000                     _TXREG1	set	4014
   199  0000                     _TXSTA1bits	set	4013
   200  0000                     _UCFGbits	set	3897
   201  0000                     _BCL1IF	set	32011
   202  0000                     _GIE	set	32663
   203  0000                     _LATB2	set	31826
   204  0000                     _SSP1IF	set	31987
   205                           
   206                           	psect	smallconst
   207  000F00                     __psmallconst:
   208                           	opt stack 0
   209  000F00  00                 	db	0
   210  000F01                     __stringdata:
   211                           	opt stack 0
   212  000F01                     STR_11:
   213  000F01  57                 	db	87	;'W'
   214  000F02  65                 	db	101	;'e'
   215  000F03  64                 	db	100	;'d'
   216  000F04  6E                 	db	110	;'n'
   217  000F05  65                 	db	101	;'e'
   218  000F06  73                 	db	115	;'s'
   219  000F07  64                 	db	100	;'d'
   220  000F08  61                 	db	97	;'a'
   221  000F09  79                 	db	121	;'y'
   222  000F0A  00                 	db	0
   223  000F0B                     STR_35:
   224  000F0B  2A                 	db	42
   225  000F0C  2A                 	db	42
   226  000F0D  52                 	db	82	;'R'
   227  000F0E  54                 	db	84	;'T'
   228  000F0F  43                 	db	67	;'C'
   229  000F10  43                 	db	67	;'C'
   230  000F11  2A                 	db	42
   231  000F12  2A                 	db	42
   232  000F13  00                 	db	0
   233  000F14                     STR_34:
   234  000F14  31                 	db	49	;'1'
   235  000F15  38                 	db	56	;'8'
   236  000F16  46                 	db	70	;'F'
   237  000F17  32                 	db	50	;'2'
   238  000F18  37                 	db	55	;'7'
   239  000F19  4A                 	db	74	;'J'
   240  000F1A  35                 	db	53	;'5'
   241  000F1B  33                 	db	51	;'3'
   242  000F1C  00                 	db	0
   243  000F1D                     STR_14:
   244  000F1D  53                 	db	83	;'S'
   245  000F1E  61                 	db	97	;'a'
   246  000F1F  74                 	db	116	;'t'
   247  000F20  75                 	db	117	;'u'
   248  000F21  72                 	db	114	;'r'
   249  000F22  64                 	db	100	;'d'
   250  000F23  61                 	db	97	;'a'
   251  000F24  79                 	db	121	;'y'
   252  000F25  00                 	db	0
   253  000F26                     STR_12:
   254  000F26  54                 	db	84	;'T'
   255  000F27  68                 	db	104	;'h'
   256  000F28  75                 	db	117	;'u'
   257  000F29  72                 	db	114	;'r'
   258  000F2A  73                 	db	115	;'s'
   259  000F2B  64                 	db	100	;'d'
   260  000F2C  61                 	db	97	;'a'
   261  000F2D  79                 	db	121	;'y'
   262  000F2E  00                 	db	0
   263  000F2F                     STR_10:
   264  000F2F  54                 	db	84	;'T'
   265  000F30  75                 	db	117	;'u'
   266  000F31  65                 	db	101	;'e'
   267  000F32  73                 	db	115	;'s'
   268  000F33  64                 	db	100	;'d'
   269  000F34  61                 	db	97	;'a'
   270  000F35  79                 	db	121	;'y'
   271  000F36  00                 	db	0
   272  000F37                     STR_9:
   273  000F37  4D                 	db	77	;'M'
   274  000F38  6F                 	db	111	;'o'
   275  000F39  6E                 	db	110	;'n'
   276  000F3A  64                 	db	100	;'d'
   277  000F3B  61                 	db	97	;'a'
   278  000F3C  79                 	db	121	;'y'
   279  000F3D  00                 	db	0
   280  000F3E                     STR_8:
   281  000F3E  53                 	db	83	;'S'
   282  000F3F  75                 	db	117	;'u'
   283  000F40  6E                 	db	110	;'n'
   284  000F41  64                 	db	100	;'d'
   285  000F42  61                 	db	97	;'a'
   286  000F43  79                 	db	121	;'y'
   287  000F44  00                 	db	0
   288  000F45                     STR_13:
   289  000F45  46                 	db	70	;'F'
   290  000F46  72                 	db	114	;'r'
   291  000F47  79                 	db	121	;'y'
   292  000F48  64                 	db	100	;'d'
   293  000F49  61                 	db	97	;'a'
   294  000F4A  79                 	db	121	;'y'
   295  000F4B  00                 	db	0
   296  000F4C                     STR_17:
   297  000F4C  08                 	db	8
   298  000F4D  5F                 	db	95	;'_'
   299  000F4E  20                 	db	32
   300  000F4F  08                 	db	8
   301  000F50  08                 	db	8
   302  000F51  00                 	db	0
   303  000F52                     STR_36:
   304  000F52  0A                 	db	10
   305  000F53  0A                 	db	10
   306  000F54  0A                 	db	10
   307  000F55  00                 	db	0
   308  000F56                     STR_4:
   309  000F56  57                 	db	87	;'W'
   310  000F57  45                 	db	69	;'E'
   311  000F58  44                 	db	68	;'D'
   312  000F59  00                 	db	0
   313  000F5A                     STR_3:
   314  000F5A  54                 	db	84	;'T'
   315  000F5B  55                 	db	85	;'U'
   316  000F5C  45                 	db	69	;'E'
   317  000F5D  00                 	db	0
   318  000F5E                     STR_6:
   319  000F5E  46                 	db	70	;'F'
   320  000F5F  52                 	db	82	;'R'
   321  000F60  49                 	db	73	;'I'
   322  000F61  00                 	db	0
   323  000F62                     STR_2:
   324  000F62  4D                 	db	77	;'M'
   325  000F63  4F                 	db	79	;'O'
   326  000F64  4E                 	db	78	;'N'
   327  000F65  00                 	db	0
   328  000F66                     STR_1:
   329  000F66  53                 	db	83	;'S'
   330  000F67  55                 	db	85	;'U'
   331  000F68  4E                 	db	78	;'N'
   332  000F69  00                 	db	0
   333  000F6A                     STR_7:
   334  000F6A  53                 	db	83	;'S'
   335  000F6B  41                 	db	65	;'A'
   336  000F6C  54                 	db	84	;'T'
   337  000F6D  00                 	db	0
   338  000F6E                     STR_5:
   339  000F6E  54                 	db	84	;'T'
   340  000F6F  48                 	db	72	;'H'
   341  000F70  55                 	db	85	;'U'
   342  000F71  00                 	db	0
   343  000F72                     STR_16:
   344  000F72  5F                 	db	95	;'_'
   345  000F73  08                 	db	8
   346  000F74  00                 	db	0
   347  000F75                     STR_15:
   348  000F75  20                 	db	32
   349  000F76  20                 	db	32
   350  000F77  00                 	db	0
   351  000F78                     STR_24:
   352  000F78  29                 	db	41
   353  000F79  20                 	db	32
   354  000F7A  00                 	db	0
   355  000F7B                     STR_23:
   356  000F7B  20                 	db	32
   357  000F7C  28                 	db	40
   358  000F7D  00                 	db	0
   359  000F7E                     STR_27:
   360  000F7E  74                 	db	116	;'t'
   361  000F7F  73                 	db	115	;'s'
   362  000F80  00                 	db	0
   363  000F81                     STR_25:
   364  000F81  2D                 	db	45
   365  000F82  00                 	db	0
   366  000F83                     STR_21:
   367  000F83  2F                 	db	47
   368  000F84  00                 	db	0
   369  000F85                     STR_29:
   370  000F85  4D                 	db	77	;'M'
   371  000F86  00                 	db	0
   372  000F87                     STR_30:
   373  000F87  64                 	db	100	;'d'
   374  000F88  00                 	db	0
   375  000F89                     STR_31:
   376  000F89  68                 	db	104	;'h'
   377  000F8A  00                 	db	0
   378  000F8B                     STR_32:
   379  000F8B  6D                 	db	109	;'m'
   380  000F8C  00                 	db	0
   381  000F8D                     __end_of__stringdata:
   382                           	opt stack 0
   383                           
   384                           ; #config settings
   385  000F8D  00                 	db	0	; dummy byte at the end
   386  0000                     
   387                           	psect	cinit
   388  0031E0                     __pcinit:
   389                           	opt stack 0
   390  0031E0                     start_initialization:
   391                           	opt stack 0
   392  0031E0                     __initialization:
   393                           	opt stack 0
   394                           
   395                           ; Clear objects allocated to BANK6 (250 bytes)
   396  0031E0  EE06  F000         	lfsr	0,__pbssBANK6
   397  0031E4  0EFA               	movlw	250
   398  0031E6                     clear_0:
   399  0031E6  6AEE               	clrf	postinc0,c
   400  0031E8  06E8               	decf	wreg,f,c
   401  0031EA  E1FD               	bnz	clear_0
   402                           
   403                           ; Clear objects allocated to BANK5 (250 bytes)
   404  0031EC  EE05  F000         	lfsr	0,__pbssBANK5
   405  0031F0  0EFA               	movlw	250
   406  0031F2                     clear_1:
   407  0031F2  6AEE               	clrf	postinc0,c
   408  0031F4  06E8               	decf	wreg,f,c
   409  0031F6  E1FD               	bnz	clear_1
   410                           
   411                           ; Clear objects allocated to BANK0 (17 bytes)
   412  0031F8  EE00  F0D0         	lfsr	0,__pbssBANK0
   413  0031FC  0E11               	movlw	17
   414  0031FE                     clear_2:
   415  0031FE  6AEE               	clrf	postinc0,c
   416  003200  06E8               	decf	wreg,f,c
   417  003202  E1FD               	bnz	clear_2
   418                           
   419                           ; Clear objects allocated to COMRAM (20 bytes)
   420  003204  EE00  F023         	lfsr	0,__pbssCOMRAM
   421  003208  0E14               	movlw	20
   422  00320A                     clear_3:
   423  00320A  6AEE               	clrf	postinc0,c
   424  00320C  06E8               	decf	wreg,f,c
   425  00320E  E1FD               	bnz	clear_3
   426                           
   427                           ; Initialize objects allocated to BANK0 (37 bytes)
   428                           ; load TBLPTR registers with __pidataBANK0
   429  003210  0EE8               	movlw	low __pidataBANK0
   430  003212  6EF6               	movwf	tblptrl,c
   431  003214  0E38               	movlw	high __pidataBANK0
   432  003216  6EF7               	movwf	tblptrh,c
   433  003218  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   434  00321A  6EF8               	movwf	tblptru,c
   435  00321C  EE00  F0AB         	lfsr	0,__pdataBANK0
   436  003220  EE10 F025          	lfsr	1,37
   437  003224                     copy_data0:
   438  003224  0009               	tblrd		*+
   439  003226  CFF5 FFEE          	movff	tablat,postinc0
   440  00322A  50E5               	movf	postdec1,w,c
   441  00322C  50E1               	movf	fsr1l,w,c
   442  00322E  E1FA               	bnz	copy_data0
   443                           
   444                           ; Initialize objects allocated to COMRAM (10 bytes)
   445                           ; load TBLPTR registers with __pidataCOMRAM
   446  003230  0E34               	movlw	low __pidataCOMRAM
   447  003232  6EF6               	movwf	tblptrl,c
   448  003234  0E3A               	movlw	high __pidataCOMRAM
   449  003236  6EF7               	movwf	tblptrh,c
   450  003238  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   451  00323A  6EF8               	movwf	tblptru,c
   452  00323C  EE00  F037         	lfsr	0,__pdataCOMRAM
   453  003240  EE10 F00A          	lfsr	1,10
   454  003244                     copy_data1:
   455  003244  0009               	tblrd		*+
   456  003246  CFF5 FFEE          	movff	tablat,postinc0
   457  00324A  50E5               	movf	postdec1,w,c
   458  00324C  50E1               	movf	fsr1l,w,c
   459  00324E  E1FA               	bnz	copy_data1
   460  003250                     end_of_initialization:
   461                           	opt stack 0
   462  003250                     __end_of__initialization:
   463                           	opt stack 0
   464  003250  0100               	movlb	0
   465  003252  EF7E  F011         	goto	_main	;jump to C main() function
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	bssCOMRAM
   476  000023                     __pbssCOMRAM:
   477                           	opt stack 0
   478  000023                     RTCC_loop@prev_halfsec:
   479                           	opt stack 0
   480  000023                     	ds	1
   481  000024                     _display_flag:
   482                           	opt stack 0
   483  000024                     	ds	1
   484  000025                     _rx_flag:
   485                           	opt stack 0
   486  000025                     	ds	1
   487  000026                     _rx_buf:
   488                           	opt stack 0
   489  000026                     	ds	5
   490  00002B                     _tx_buf:
   491                           	opt stack 0
   492  00002B                     	ds	5
   493  000030                     _sw:
   494                           	opt stack 0
   495  000030                     	ds	4
   496  000034                     _d1:
   497                           	opt stack 0
   498  000034                     	ds	3
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	dataCOMRAM
   509  000037                     __pdataCOMRAM:
   510                           	opt stack 0
   511  000037                     I2C_LCD_SetCursor@F9850:
   512                           	opt stack 0
   513  000037                     	ds	2
   514  000039                     _cursor_down:
   515                           	opt stack 0
   516  000039                     	ds	4
   517  00003D                     _cursor_up:
   518                           	opt stack 0
   519  00003D                     	ds	4
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           
   529                           	psect	bssBANK0
   530  0000D0                     __pbssBANK0:
   531                           	opt stack 0
   532  0000D0                     epoch_to_caltime@day_cache:
   533                           	opt stack 0
   534  0000D0                     	ds	2
   535  0000D2                     _colon:
   536                           	opt stack 0
   537  0000D2                     	ds	1
   538  0000D3                     _edit_flag:
   539                           	opt stack 0
   540  0000D3                     	ds	1
   541  0000D4                     _time_change_flag:
   542                           	opt stack 0
   543  0000D4                     	ds	1
   544  0000D5                     epoch_to_caltime@year_cache:
   545                           	opt stack 0
   546  0000D5                     	ds	1
   547  0000D6                     _caltime_now:
   548                           	opt stack 0
   549  0000D6                     	ds	7
   550  0000DD                     _epoch_now:
   551                           	opt stack 0
   552  0000DD                     	ds	4
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	dataBANK0
   563  0000AB                     __pdataBANK0:
   564                           	opt stack 0
   565  0000AB                     _weekday_char:
   566                           	opt stack 0
   567  0000AB                     	ds	14
   568  0000B9                     _weekday_char_full:
   569                           	opt stack 0
   570  0000B9                     	ds	14
   571  0000C7                     _cursor_left:
   572                           	opt stack 0
   573  0000C7                     	ds	4
   574  0000CB                     epoch_to_caltime@month_cache:
   575                           	opt stack 0
   576  0000CB                     	ds	1
   577  0000CC                     _cursor_right:
   578                           	opt stack 0
   579  0000CC                     	ds	4
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           postinc0	equ	0xFEE
   585                           wreg	equ	0xFE8
   586                           postdec1	equ	0xFE5
   587                           fsr1l	equ	0xFE1
   588                           
   589                           	psect	bssBANK5
   590  000500                     __pbssBANK5:
   591                           	opt stack 0
   592  000500                     main_init@txbuf:
   593                           	opt stack 0
   594  000500                     	ds	250
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           postinc0	equ	0xFEE
   600                           wreg	equ	0xFE8
   601                           postdec1	equ	0xFE5
   602                           fsr1l	equ	0xFE1
   603                           
   604                           	psect	bssBANK6
   605  000600                     __pbssBANK6:
   606                           	opt stack 0
   607  000600                     main_init@rxbuf:
   608                           	opt stack 0
   609  000600                     	ds	250
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           postdec1	equ	0xFE5
   617                           fsr1l	equ	0xFE1
   618                           
   619                           	psect	cstackBANK4
   620  000400                     __pcstackBANK4:
   621                           	opt stack 0
   622  000400                     rx_operation@opland2:
   623                           	opt stack 0
   624                           
   625                           ; 250 bytes @ 0x0
   626  000400                     	ds	250
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	cstackBANK3
   637  000300                     __pcstackBANK3:
   638                           	opt stack 0
   639  000300                     rx_operation@opland1:
   640                           	opt stack 0
   641                           
   642                           ; 250 bytes @ 0x0
   643  000300                     	ds	250
   644                           tblptru	equ	0xFF8
   645                           tblptrh	equ	0xFF7
   646                           tblptrl	equ	0xFF6
   647                           tablat	equ	0xFF5
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653                           	psect	cstackBANK2
   654  000200                     __pcstackBANK2:
   655                           	opt stack 0
   656  000200                     rx_operation@cmd:
   657                           	opt stack 0
   658                           
   659                           ; 250 bytes @ 0x0
   660  000200                     	ds	250
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           
   670                           	psect	cstackBANK1
   671  000100                     __pcstackBANK1:
   672                           	opt stack 0
   673  000100                     rx_operation@opcode:
   674                           	opt stack 0
   675                           
   676                           ; 250 bytes @ 0x0
   677  000100                     	ds	250
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1l	equ	0xFE1
   686                           
   687                           	psect	cstackBANK0
   688  000060                     __pcstackBANK0:
   689                           	opt stack 0
   690  000060                     ??_ringbuf_num:
   691  000060                     ?___awdiv:
   692                           	opt stack 0
   693  000060                     ?___awmod:
   694                           	opt stack 0
   695  000060                     ?___lwdiv:
   696                           	opt stack 0
   697  000060                     ?___lwmod:
   698                           	opt stack 0
   699  000060                     ?___lldiv:
   700                           	opt stack 0
   701  000060                     atoi@ret:
   702                           	opt stack 0
   703  000060                     I2C_Start@adrs:
   704                           	opt stack 0
   705  000060                     ringbuf_init@rb:
   706                           	opt stack 0
   707  000060                     strcmp@str1:
   708                           	opt stack 0
   709  000060                     RTCC_to_caltime@ct:
   710                           	opt stack 0
   711  000060                     ___awdiv@dividend:
   712                           	opt stack 0
   713  000060                     ___awmod@dividend:
   714                           	opt stack 0
   715  000060                     ___lwdiv@dividend:
   716                           	opt stack 0
   717  000060                     ___lwmod@dividend:
   718                           	opt stack 0
   719  000060                     ___lldiv@dividend:
   720                           	opt stack 0
   721                           
   722                           ; 4 bytes @ 0x0
   723  000060                     	ds	1
   724  000061                     I2C_LCD_Command@c:
   725                           	opt stack 0
   726  000061                     I2C_LCD_Putc@c:
   727                           	opt stack 0
   728  000061                     I2C_LCD_Puts@s:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x1
   732  000061                     	ds	1
   733  000062                     I2C_LCD_Command@ans:
   734                           	opt stack 0
   735  000062                     I2C_LCD_Putc@ans:
   736                           	opt stack 0
   737  000062                     ringbuf_init@internal_buf:
   738                           	opt stack 0
   739  000062                     ringbuf_push@rb:
   740                           	opt stack 0
   741  000062                     ringbuf_pop@rb:
   742                           	opt stack 0
   743  000062                     strcmp@str2:
   744                           	opt stack 0
   745  000062                     ___awdiv@divisor:
   746                           	opt stack 0
   747  000062                     ___awmod@divisor:
   748                           	opt stack 0
   749  000062                     ___lwdiv@divisor:
   750                           	opt stack 0
   751  000062                     ___lwmod@divisor:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x2
   755  000062                     	ds	1
   756  000063                     ??_I2C_LCD_Clear:
   757  000063                     ??_I2C_LCD_Puts:
   758  000063                     I2C_LCD_SetCursor@row:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x3
   762  000063                     	ds	1
   763  000064                     ??_ringbuf_pop:
   764  000064                     ??_month_length:
   765  000064                     ringbuf_init@bufsize:
   766                           	opt stack 0
   767  000064                     ringbuf_push@asciicode:
   768                           	opt stack 0
   769  000064                     ___awdiv@counter:
   770                           	opt stack 0
   771  000064                     utoa@str:
   772                           	opt stack 0
   773  000064                     I2C_LCD_SetCursor@row_offsets:
   774                           	opt stack 0
   775  000064                     I2C_LCD_Puts@ans:
   776                           	opt stack 0
   777  000064                     ___lldiv@divisor:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x4
   781  000064                     	ds	1
   782  000065                     ??_ringbuf_push:
   783  000065                     ___awdiv@sign:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x5
   787  000065                     	ds	1
   788  000066                     I2C_LCD_SetCursor@col:
   789                           	opt stack 0
   790  000066                     utoa@value:
   791                           	opt stack 0
   792  000066                     ___awdiv@quotient:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x6
   796  000066                     	ds	2
   797  000068                     utoa@digits:
   798                           	opt stack 0
   799  000068                     month_length@year:
   800                           	opt stack 0
   801  000068                     ___lldiv@quotient:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x8
   805  000068                     	ds	1
   806  000069                     utoa@d:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x9
   810  000069                     	ds	1
   811  00006A                     tx_sends@asciicode:
   812                           	opt stack 0
   813  00006A                     utoa@v:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0xA
   817  00006A                     	ds	2
   818  00006C                     display_dec@edit:
   819                           	opt stack 0
   820  00006C                     tx_send_dec@edit:
   821                           	opt stack 0
   822  00006C                     ___lldiv@counter:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0xC
   826  00006C                     	ds	1
   827  00006D                     ?___lmul:
   828                           	opt stack 0
   829  00006D                     ___lmul@multiplier:
   830                           	opt stack 0
   831  00006D                     display_dec@str:
   832                           	opt stack 0
   833  00006D                     tx_send_dec@str:
   834                           	opt stack 0
   835                           
   836                           ; 10 bytes @ 0xD
   837  00006D                     	ds	4
   838  000071                     ___lmul@multiplicand:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x11
   842  000071                     	ds	4
   843  000075                     ___lmul@product:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x15
   847  000075                     	ds	2
   848  000077                     display_dec@dec:
   849                           	opt stack 0
   850  000077                     tx_send_dec@dec:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x17
   854  000077                     	ds	2
   855  000079                     ?_get_quot_rem:
   856                           	opt stack 0
   857  000079                     get_quot_rem@quot:
   858                           	opt stack 0
   859  000079                     caltime_to_epoch@ct:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x19
   863  000079                     	ds	2
   864  00007B                     get_quot_rem@div:
   865                           	opt stack 0
   866  00007B                     caltime_to_epoch@ep:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x1B
   870  00007B                     	ds	2
   871  00007D                     ??_get_quot_rem:
   872  00007D                     ??_caltime_to_epoch:
   873                           
   874                           ; 0 bytes @ 0x1D
   875  00007D                     	ds	8
   876  000085                     caltime_to_epoch@year:
   877                           	opt stack 0
   878  000085                     get_quot_rem@num:
   879                           	opt stack 0
   880                           
   881                           ; 4 bytes @ 0x25
   882  000085                     	ds	1
   883  000086                     caltime_to_epoch@month_2018:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x26
   887  000086                     	ds	1
   888  000087                     caltime_to_epoch@epoch:
   889                           	opt stack 0
   890                           
   891                           ; 4 bytes @ 0x27
   892  000087                     	ds	2
   893  000089                     epoch_to_caltime@ct:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x29
   897  000089                     	ds	2
   898  00008B                     caltime_to_epoch@month:
   899                           	opt stack 0
   900  00008B                     epoch_to_caltime@ep:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x2B
   904  00008B                     	ds	1
   905  00008C                     RTCC_from_RTCC@ct:
   906                           	opt stack 0
   907  00008C                     RTCC_from_caltime@ct:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x2C
   911  00008C                     	ds	1
   912  00008D                     ??_epoch_to_caltime:
   913                           
   914                           ; 0 bytes @ 0x2D
   915  00008D                     	ds	1
   916  00008E                     RTCC_from_RTCC@ep:
   917                           	opt stack 0
   918  00008E                     RTCC_from_caltime@ep:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x2E
   922  00008E                     	ds	2
   923  000090                     ??_rx_operation:
   924  000090                     print_time@row:
   925                           	opt stack 0
   926  000090                     display_time@ct:
   927                           	opt stack 0
   928                           
   929                           ; 2 bytes @ 0x30
   930  000090                     	ds	1
   931  000091                     print_time@i:
   932                           	opt stack 0
   933  000091                     rx_operation@cnt_char:
   934                           	opt stack 0
   935  000091                     epoch_to_caltime@day_since_epoch:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x31
   939  000091                     	ds	1
   940  000092                     rx_operation@i:
   941                           	opt stack 0
   942  000092                     display_time@ep:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x32
   946  000092                     	ds	1
   947  000093                     epoch_to_caltime@day:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x33
   951  000093                     	ds	1
   952  000094                     ??_display_time:
   953                           
   954                           ; 0 bytes @ 0x34
   955  000094                     	ds	1
   956  000095                     epoch_to_caltime@year:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x35
   960  000095                     	ds	1
   961  000096                     epoch_to_caltime@month:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x36
   965  000096                     	ds	1
   966  000097                     epoch_to_caltime@num:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x37
   970  000097                     	ds	4
   971  00009B                     RTCC_from_epoch@ct:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x3B
   975  00009B                     	ds	2
   976  00009D                     RTCC_from_epoch@ep:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x3D
   980  00009D                     	ds	2
   981  00009F                     RTCC_time_set_inc@ct:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x3F
   985  00009F                     	ds	2
   986  0000A1                     RTCC_time_set_inc@ep:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x41
   990  0000A1                     	ds	2
   991  0000A3                     ??_RTCC_time_set_inc:
   992                           
   993                           ; 0 bytes @ 0x43
   994  0000A3                     	ds	6
   995  0000A9                     RTCC_time_set_inc@i_2072:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x49
   999  0000A9                     	ds	1
  1000  0000AA                     RTCC_time_set_inc@i:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x4A
  1004  0000AA                     	ds	1
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           postdec1	equ	0xFE5
  1012                           fsr1l	equ	0xFE1
  1013                           
  1014                           	psect	cstackCOMRAM
  1015  000001                     __pcstackCOMRAM:
  1016                           	opt stack 0
  1017  000001                     ringbuf_delete@rb:
  1018                           	opt stack 0
  1019  000001                     delay_timer_interrupt@d:
  1020                           	opt stack 0
  1021  000001                     button_timer_interrupt@bt:
  1022                           	opt stack 0
  1023  000001                     i2ringbuf_num@rb:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x0
  1027  000001                     	ds	2
  1028  000003                     ??i2_ringbuf_num:
  1029  000003                     button_timer_interrupt@sw_value:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x2
  1033  000003                     	ds	1
  1034  000004                     ??_button_timer_interrupt:
  1035                           
  1036                           ; 0 bytes @ 0x3
  1037  000004                     	ds	1
  1038  000005                     ringbuf_backspace@rb:
  1039                           	opt stack 0
  1040  000005                     i2ringbuf_push@rb:
  1041                           	opt stack 0
  1042  000005                     i2ringbuf_pop@rb:
  1043                           	opt stack 0
  1044                           
  1045                           ; 2 bytes @ 0x4
  1046  000005                     	ds	2
  1047  000007                     ??_ringbuf_backspace:
  1048  000007                     ??i2_ringbuf_pop:
  1049  000007                     i2ringbuf_push@asciicode:
  1050                           	opt stack 0
  1051                           
  1052                           ; 1 bytes @ 0x6
  1053  000007                     	ds	1
  1054  000008                     ??i2_ringbuf_push:
  1055                           
  1056                           ; 0 bytes @ 0x7
  1057  000008                     	ds	2
  1058  00000A                     i2ringbuf_pop@ret:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x9
  1062  00000A                     	ds	1
  1063  00000B                     
  1064                           ; 0 bytes @ 0xA
  1065  00000B                     	ds	2
  1066  00000D                     i2tx_send@asciicode:
  1067                           	opt stack 0
  1068  00000D                     i2tx_sends@asciicode:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0xC
  1072  00000D                     	ds	2
  1073  00000F                     judgement@ascii:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0xE
  1077  00000F                     	ds	1
  1078  000010                     judgement@i:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0xF
  1082  000010                     	ds	1
  1083  000011                     ??_ISR:
  1084                           
  1085                           ; 0 bytes @ 0x10
  1086  000011                     	ds	14
  1087  00001F                     ISR@ascii:
  1088                           	opt stack 0
  1089                           
  1090                           ; 1 bytes @ 0x1E
  1091  00001F                     	ds	1
  1092  000020                     ??_timer3_init:
  1093  000020                     ??_strcmp:
  1094  000020                     ??_I2C_IdleCheck:
  1095  000020                     ??_x_to_d:
  1096  000020                     timer1_init@clock_select:
  1097                           	opt stack 0
  1098  000020                     d_to_x@dec:
  1099                           	opt stack 0
  1100  000020                     ___awmod@counter:
  1101                           	opt stack 0
  1102  000020                     ___lwdiv@counter:
  1103                           	opt stack 0
  1104  000020                     ___lwmod@counter:
  1105                           	opt stack 0
  1106  000020                     ringbuf_num@rb:
  1107                           	opt stack 0
  1108  000020                     Delay_ms@ms:
  1109                           	opt stack 0
  1110  000020                     atoi@str:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x1F
  1114  000020                     	ds	1
  1115  000021                     ??_timer1_init:
  1116  000021                     timer3_init@prescaler:
  1117                           	opt stack 0
  1118  000021                     I2C_IdleCheck@mask:
  1119                           	opt stack 0
  1120  000021                     x_to_d@hex:
  1121                           	opt stack 0
  1122  000021                     ___awmod@sign:
  1123                           	opt stack 0
  1124  000021                     caltime_to_RTCC@ct:
  1125                           	opt stack 0
  1126  000021                     ___lwdiv@quotient:
  1127                           	opt stack 0
  1128                           
  1129                           ; 2 bytes @ 0x20
  1130  000021                     	ds	1
  1131  000022                     ??_Delay_ms:
  1132  000022                     ??_atoi:
  1133  000022                     timer1_init@prescaler:
  1134                           	opt stack 0
  1135  000022                     ringbuf_pop@ret:
  1136                           	opt stack 0
  1137  000022                     tx_send@asciicode:
  1138                           	opt stack 0
  1139  000022                     I2C_Start@rw:
  1140                           	opt stack 0
  1141  000022                     I2C_Send@data:
  1142                           	opt stack 0
  1143  000022                     month_length@month:
  1144                           	opt stack 0
  1145  000022                     RTCC_to_caltime@dumy:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x21
  1149  000022                     	ds	1
  1150  000023                     tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec1	equ	0xFE5
  1157                           fsr1l	equ	0xFE1
  1158                           
  1159                           ; 0 bytes @ 0x22
  1160 ;;
  1161 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1162 ;;
  1163 ;; *************** function _main *****************
  1164 ;; Defined at:
  1165 ;;		line 233 in file "PIC18F27J53-RTCC01.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2  610[COMRAM] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels required when called:   11
  1185 ;; This function calls:
  1186 ;;		_I2C_LCD_Clear
  1187 ;;		_I2C_LCD_Puts
  1188 ;;		_I2C_LCD_SetCursor
  1189 ;;		_RTCC_from_epoch
  1190 ;;		_RTCC_loop
  1191 ;;		_RTCC_time_set_cursor
  1192 ;;		_RTCC_time_set_inc
  1193 ;;		_RTCC_time_set_toggle
  1194 ;;		_display_time
  1195 ;;		_main_init
  1196 ;;		_print_time
  1197 ;;		_rx_operation
  1198 ;;		_tx_sends
  1199 ;; This function is called by:
  1200 ;;		Startup code after reset
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text0
  1205  0022FC                     __ptext0:
  1206                           	opt stack 0
  1207  0022FC                     _main:
  1208                           	opt stack 20
  1209                           
  1210                           ;PIC18F27J53-RTCC01.c: 234: main_init();
  1211                           
  1212                           ;incstack = 0
  1213  0022FC  EC1C  F017         	call	_main_init	;wreg free
  1214                           
  1215                           ;PIC18F27J53-RTCC01.c: 235: INTCONbits.GIE = 1;
  1216  002300  8EF2               	bsf	intcon,7,c	;volatile
  1217                           
  1218                           ;PIC18F27J53-RTCC01.c: 237: I2C_LCD_Clear();
  1219  002302  ECC5  F01C         	call	_I2C_LCD_Clear	;wreg free
  1220                           
  1221                           ;PIC18F27J53-RTCC01.c: 238: I2C_LCD_SetCursor(0, 0);
  1222  002306  0E00               	movlw	0
  1223  002308  0100               	movlb	0	; () banked
  1224  00230A  6F63               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1225  00230C  0E00               	movlw	0
  1226  00230E  ECA9  F01B         	call	_I2C_LCD_SetCursor
  1227                           
  1228                           ;PIC18F27J53-RTCC01.c: 239: I2C_LCD_Puts("18F27J53");
  1229  002312  0E0F               	movlw	high STR_34
  1230  002314  0100               	movlb	0	; () banked
  1231  002316  6F62               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1232  002318  0E14               	movlw	low STR_34
  1233  00231A  0100               	movlb	0	; () banked
  1234  00231C  6F61               	movwf	I2C_LCD_Puts@s& (0+255),b
  1235  00231E  ECD2  F016         	call	_I2C_LCD_Puts	;wreg free
  1236                           
  1237                           ;PIC18F27J53-RTCC01.c: 240: I2C_LCD_SetCursor(0, 1);
  1238  002322  0E01               	movlw	1
  1239  002324  0100               	movlb	0	; () banked
  1240  002326  6F63               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  1241  002328  0E00               	movlw	0
  1242  00232A  ECA9  F01B         	call	_I2C_LCD_SetCursor
  1243                           
  1244                           ;PIC18F27J53-RTCC01.c: 241: I2C_LCD_Puts("**RTCC**");
  1245  00232E  0E0F               	movlw	high STR_35
  1246  002330  0100               	movlb	0	; () banked
  1247  002332  6F62               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  1248  002334  0E0B               	movlw	low STR_35
  1249  002336  0100               	movlb	0	; () banked
  1250  002338  6F61               	movwf	I2C_LCD_Puts@s& (0+255),b
  1251  00233A  ECD2  F016         	call	_I2C_LCD_Puts	;wreg free
  1252                           
  1253                           ;PIC18F27J53-RTCC01.c: 243: epoch_now = 3155759990;
  1254  00233E  0E76               	movlw	118
  1255  002340  0100               	movlb	0	; () banked
  1256  002342  6FDD               	movwf	_epoch_now& (0+255),b
  1257  002344  0E13               	movlw	19
  1258  002346  0100               	movlb	0	; () banked
  1259  002348  6FDE               	movwf	(_epoch_now+1)& (0+255),b
  1260  00234A  0E19               	movlw	25
  1261  00234C  0100               	movlb	0	; () banked
  1262  00234E  6FDF               	movwf	(_epoch_now+2)& (0+255),b
  1263  002350  0EBC               	movlw	188
  1264  002352  0100               	movlb	0	; () banked
  1265  002354  6FE0               	movwf	(_epoch_now+3)& (0+255),b
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;PIC18F27J53-RTCC01.c: 244: RTCC_from_epoch(&caltime_now, &epoch_now);
  1269  002356  0100               	movlb	0	; () banked
  1270  002358  0E00               	movlw	high _caltime_now
  1271  00235A  0100               	movlb	0	; () banked
  1272  00235C  6F9C               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  1273  00235E  0100               	movlb	0	; () banked
  1274  002360  0ED6               	movlw	low _caltime_now
  1275  002362  0100               	movlb	0	; () banked
  1276  002364  6F9B               	movwf	RTCC_from_epoch@ct& (0+255),b
  1277  002366  0100               	movlb	0	; () banked
  1278  002368  0E00               	movlw	high _epoch_now
  1279  00236A  0100               	movlb	0	; () banked
  1280  00236C  6F9E               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  1281  00236E  0100               	movlb	0	; () banked
  1282  002370  0EDD               	movlw	low _epoch_now
  1283  002372  0100               	movlb	0	; () banked
  1284  002374  6F9D               	movwf	RTCC_from_epoch@ep& (0+255),b
  1285  002376  EC1F  F01C         	call	_RTCC_from_epoch	;wreg free
  1286                           
  1287                           ;PIC18F27J53-RTCC01.c: 245: tx_sends("\n\n\n");
  1288  00237A  0E0F               	movlw	high STR_36
  1289  00237C  0100               	movlb	0	; () banked
  1290  00237E  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  1291  002380  0E52               	movlw	low STR_36
  1292  002382  0100               	movlb	0	; () banked
  1293  002384  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  1294  002386  EC2B  F019         	call	_tx_sends	;wreg free
  1295  00238A                     l5113:
  1296                           
  1297                           ;PIC18F27J53-RTCC01.c: 248: RTCC_loop();
  1298  00238A  EC36  F018         	call	_RTCC_loop	;wreg free
  1299                           
  1300                           ;PIC18F27J53-RTCC01.c: 249: rx_operation();
  1301  00238E  ECC7  F007         	call	_rx_operation	;wreg free
  1302                           
  1303                           ;PIC18F27J53-RTCC01.c: 250: if (time_change_flag) {
  1304  002392  0100               	movlb	0	; () banked
  1305  002394  51D4               	movf	_time_change_flag& (0+255),w,b
  1306  002396  B4D8               	btfsc	status,2,c
  1307  002398  D018               	goto	l5125
  1308                           
  1309                           ; BSR set to: 0
  1310                           ;PIC18F27J53-RTCC01.c: 251: time_change_flag = 0;
  1311  00239A  0E00               	movlw	0
  1312  00239C  0100               	movlb	0	; () banked
  1313  00239E  6FD4               	movwf	_time_change_flag& (0+255),b
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;PIC18F27J53-RTCC01.c: 252: print_time(2);
  1317  0023A0  0E02               	movlw	2
  1318  0023A2  ECB4  F018         	call	_print_time
  1319                           
  1320                           ;PIC18F27J53-RTCC01.c: 253: display_time(&caltime_now, &epoch_now);
  1321  0023A6  0100               	movlb	0	; () banked
  1322  0023A8  0E00               	movlw	high _caltime_now
  1323  0023AA  0100               	movlb	0	; () banked
  1324  0023AC  6F91               	movwf	(display_time@ct+1)& (0+255),b
  1325  0023AE  0100               	movlb	0	; () banked
  1326  0023B0  0ED6               	movlw	low _caltime_now
  1327  0023B2  0100               	movlb	0	; () banked
  1328  0023B4  6F90               	movwf	display_time@ct& (0+255),b
  1329  0023B6  0100               	movlb	0	; () banked
  1330  0023B8  0E00               	movlw	high _epoch_now
  1331  0023BA  0100               	movlb	0	; () banked
  1332  0023BC  6F93               	movwf	(display_time@ep+1)& (0+255),b
  1333  0023BE  0100               	movlb	0	; () banked
  1334  0023C0  0EDD               	movlw	low _epoch_now
  1335  0023C2  0100               	movlb	0	; () banked
  1336  0023C4  6F92               	movwf	display_time@ep& (0+255),b
  1337  0023C6  EC20  F010         	call	_display_time	;wreg free
  1338  0023CA                     l5125:
  1339                           
  1340                           ;PIC18F27J53-RTCC01.c: 254: }
  1341                           ;PIC18F27J53-RTCC01.c: 255: if (sw.flag.long_holding_3) {
  1342  0023CA  A633               	btfss	_sw+3,3,c
  1343  0023CC  D006               	goto	l5131
  1344                           
  1345                           ;PIC18F27J53-RTCC01.c: 256: sw.flags = 0;
  1346  0023CE  0E00               	movlw	0
  1347  0023D0  6E33               	movwf	_sw+3,c
  1348  0023D2  0E00               	movlw	0
  1349  0023D4  6E32               	movwf	_sw+2,c
  1350                           
  1351                           ;PIC18F27J53-RTCC01.c: 257: RTCC_time_set_toggle();
  1352  0023D6  ECF4  F01C         	call	_RTCC_time_set_toggle	;wreg free
  1353  0023DA                     l5131:
  1354                           
  1355                           ;PIC18F27J53-RTCC01.c: 258: }
  1356                           ;PIC18F27J53-RTCC01.c: 259: if (edit_flag.flags) {
  1357  0023DA  0100               	movlb	0	; () banked
  1358  0023DC  51D3               	movf	_edit_flag& (0+255),w,b
  1359  0023DE  B4D8               	btfsc	status,2,c
  1360  0023E0  D7D4               	goto	l5113
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;PIC18F27J53-RTCC01.c: 260: if (sw.flag.long_hold_1) {
  1364  0023E2  A232               	btfss	_sw+2,1,c
  1365  0023E4  D006               	goto	l5139
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;PIC18F27J53-RTCC01.c: 261: sw.flags = 0;
  1369  0023E6  0E00               	movlw	0
  1370  0023E8  6E33               	movwf	_sw+3,c
  1371  0023EA  0E00               	movlw	0
  1372  0023EC  6E32               	movwf	_sw+2,c
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;PIC18F27J53-RTCC01.c: 262: RTCC_time_set_cursor();
  1376  0023EE  EC06  F01B         	call	_RTCC_time_set_cursor	;wreg free
  1377  0023F2                     l5139:
  1378                           
  1379                           ;PIC18F27J53-RTCC01.c: 263: }
  1380                           ;PIC18F27J53-RTCC01.c: 264: if (sw.flag.press) {
  1381  0023F2  A032               	btfss	_sw+2,0,c
  1382  0023F4  D7CA               	goto	l5113
  1383                           
  1384                           ;PIC18F27J53-RTCC01.c: 265: sw.flags = 0;
  1385  0023F6  0E00               	movlw	0
  1386  0023F8  6E33               	movwf	_sw+3,c
  1387  0023FA  0E00               	movlw	0
  1388  0023FC  6E32               	movwf	_sw+2,c
  1389                           
  1390                           ;PIC18F27J53-RTCC01.c: 266: RTCC_time_set_inc(&caltime_now, &epoch_now);
  1391  0023FE  0100               	movlb	0	; () banked
  1392  002400  0E00               	movlw	high _caltime_now
  1393  002402  0100               	movlb	0	; () banked
  1394  002404  6FA0               	movwf	(RTCC_time_set_inc@ct+1)& (0+255),b
  1395  002406  0100               	movlb	0	; () banked
  1396  002408  0ED6               	movlw	low _caltime_now
  1397  00240A  0100               	movlb	0	; () banked
  1398  00240C  6F9F               	movwf	RTCC_time_set_inc@ct& (0+255),b
  1399  00240E  0100               	movlb	0	; () banked
  1400  002410  0E00               	movlw	high _epoch_now
  1401  002412  0100               	movlb	0	; () banked
  1402  002414  6FA2               	movwf	(RTCC_time_set_inc@ep+1)& (0+255),b
  1403  002416  0100               	movlb	0	; () banked
  1404  002418  0EDD               	movlw	low _epoch_now
  1405  00241A  0100               	movlb	0	; () banked
  1406  00241C  6FA1               	movwf	RTCC_time_set_inc@ep& (0+255),b
  1407  00241E  EC46  F00B         	call	_RTCC_time_set_inc	;wreg free
  1408  002422  D7B3               	goto	l5113
  1409  002424                     __end_of_main:
  1410                           	opt stack 0
  1411                           tblptru	equ	0xFF8
  1412                           tblptrh	equ	0xFF7
  1413                           tblptrl	equ	0xFF6
  1414                           tablat	equ	0xFF5
  1415                           intcon	equ	0xFF2
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           postdec1	equ	0xFE5
  1419                           fsr1l	equ	0xFE1
  1420                           status	equ	0xFD8
  1421                           
  1422 ;; *************** function _rx_operation *****************
  1423 ;; Defined at:
  1424 ;;		line 156 in file "PIC18F27J53-RTCC01.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  opland2       250    0[BANK4 ] unsigned char [250]
  1429 ;;  opland1       250    0[BANK3 ] unsigned char [250]
  1430 ;;  cmd           250    0[BANK2 ] unsigned char [250]
  1431 ;;  opcode        250    0[BANK1 ] unsigned char [250]
  1432 ;;  i               1   50[BANK0 ] unsigned char 
  1433 ;;  cnt_char        1   49[BANK0 ] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;		None               void
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Locals:         0       2     250     250     250     250       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;      Totals:         0       3     250     250     250     250       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;Total ram usage:     1003 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    9
  1450 ;; This function calls:
  1451 ;;		_RTCC_from_caltime
  1452 ;;		_atoi
  1453 ;;		_ringbuf_pop
  1454 ;;		_strcmp
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text1
  1461  000F8E                     __ptext1:
  1462                           	opt stack 0
  1463  000F8E                     _rx_operation:
  1464                           	opt stack 21
  1465                           
  1466                           ;PIC18F27J53-RTCC01.c: 157: if (rx_flag) {
  1467                           
  1468                           ;incstack = 0
  1469  000F8E  5025               	movf	_rx_flag,w,c
  1470  000F90  B4D8               	btfsc	status,2,c
  1471  000F92  0012               	return	
  1472                           
  1473                           ;PIC18F27J53-RTCC01.c: 158: uint8_t i;
  1474                           ;PIC18F27J53-RTCC01.c: 159: rx_flag = 0;
  1475  000F94  0E00               	movlw	0
  1476  000F96  6E25               	movwf	_rx_flag,c
  1477                           
  1478                           ;PIC18F27J53-RTCC01.c: 160: uint8_t opcode[250];
  1479                           ;PIC18F27J53-RTCC01.c: 161: uint8_t opland1[250];
  1480                           ;PIC18F27J53-RTCC01.c: 162: uint8_t opland2[250];
  1481                           ;PIC18F27J53-RTCC01.c: 164: uint8_t cnt_char = 0;
  1482  000F98  0E00               	movlw	0
  1483  000F9A  0100               	movlb	0	; () banked
  1484  000F9C  6F91               	movwf	rx_operation@cnt_char& (0+255),b
  1485                           
  1486                           ;PIC18F27J53-RTCC01.c: 165: uint8_t cmd[250];
  1487                           ;PIC18F27J53-RTCC01.c: 167: for (i = 0; opcode[i] = ringbuf_pop(&rx_buf); i++) {
  1488  000F9E  0E00               	movlw	0
  1489  000FA0  0100               	movlb	0	; () banked
  1490  000FA2  6F92               	movwf	rx_operation@i& (0+255),b
  1491  000FA4  D01C               	goto	l4823
  1492  000FA6                     l4817:
  1493                           
  1494                           ;PIC18F27J53-RTCC01.c: 168: cmd[cnt_char++] = opcode[i];
  1495  000FA6  0100               	movlb	0	; () banked
  1496  000FA8  5192               	movf	rx_operation@i& (0+255),w,b
  1497  000FAA  0D01               	mullw	1
  1498  000FAC  0101               	movlb	1	; () banked
  1499  000FAE  0E00               	movlw	low rx_operation@opcode
  1500  000FB0  24F3               	addwf	prodl,w,c
  1501  000FB2  6ED9               	movwf	fsr2l,c
  1502  000FB4  0101               	movlb	1	; () banked
  1503  000FB6  0E01               	movlw	high rx_operation@opcode
  1504  000FB8  20F4               	addwfc	prodh,w,c
  1505  000FBA  6EDA               	movwf	fsr2h,c
  1506  000FBC  0100               	movlb	0	; () banked
  1507  000FBE  5191               	movf	rx_operation@cnt_char& (0+255),w,b
  1508  000FC0  0D01               	mullw	1
  1509  000FC2  0102               	movlb	2	; () banked
  1510  000FC4  0E00               	movlw	low rx_operation@cmd
  1511  000FC6  24F3               	addwf	prodl,w,c
  1512  000FC8  6EE1               	movwf	fsr1l,c
  1513  000FCA  0102               	movlb	2	; () banked
  1514  000FCC  0E02               	movlw	high rx_operation@cmd
  1515  000FCE  20F4               	addwfc	prodh,w,c
  1516  000FD0  6EE2               	movwf	fsr1h,c
  1517  000FD2  CFDF FFE7          	movff	indf2,indf1
  1518                           
  1519                           ; BSR set to: 2
  1520  000FD6  0100               	movlb	0	; () banked
  1521  000FD8  2B91               	incf	rx_operation@cnt_char& (0+255),f,b
  1522                           
  1523                           ; BSR set to: 0
  1524  000FDA  0100               	movlb	0	; () banked
  1525  000FDC  2B92               	incf	rx_operation@i& (0+255),f,b
  1526  000FDE                     l4823:
  1527                           
  1528                           ; BSR set to: 0
  1529  000FDE  0E00               	movlw	high _rx_buf
  1530  000FE0  0100               	movlb	0	; () banked
  1531  000FE2  6F63               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1532  000FE4  0E26               	movlw	low _rx_buf
  1533  000FE6  0100               	movlb	0	; () banked
  1534  000FE8  6F62               	movwf	ringbuf_pop@rb& (0+255),b
  1535  000FEA  ECBE  F014         	call	_ringbuf_pop	;wreg free
  1536  000FEE  0100               	movlb	0	; () banked
  1537  000FF0  6F90               	movwf	??_rx_operation& (0+255),b
  1538  000FF2  0100               	movlb	0	; () banked
  1539  000FF4  5192               	movf	rx_operation@i& (0+255),w,b
  1540  000FF6  0D01               	mullw	1
  1541  000FF8  0101               	movlb	1	; () banked
  1542  000FFA  0E00               	movlw	low rx_operation@opcode
  1543  000FFC  24F3               	addwf	prodl,w,c
  1544  000FFE  6ED9               	movwf	fsr2l,c
  1545  001000  0101               	movlb	1	; () banked
  1546  001002  0E01               	movlw	high rx_operation@opcode
  1547  001004  20F4               	addwfc	prodh,w,c
  1548  001006  6EDA               	movwf	fsr2h,c
  1549  001008  C090  FFDF         	movff	??_rx_operation,indf2
  1550  00100C  50DF               	movf	indf2,w,c
  1551  00100E  A4D8               	btfss	status,2,c
  1552  001010  D7CA               	goto	l4817
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;PIC18F27J53-RTCC01.c: 169: }
  1556                           ;PIC18F27J53-RTCC01.c: 170: opcode[i] = '\0';
  1557                           
  1558                           ; BSR set to: 1
  1559  001012  0100               	movlb	0	; () banked
  1560  001014  5192               	movf	rx_operation@i& (0+255),w,b
  1561  001016  0D01               	mullw	1
  1562  001018  0101               	movlb	1	; () banked
  1563  00101A  0E00               	movlw	low rx_operation@opcode
  1564  00101C  24F3               	addwf	prodl,w,c
  1565  00101E  6ED9               	movwf	fsr2l,c
  1566  001020  0101               	movlb	1	; () banked
  1567  001022  0E01               	movlw	high rx_operation@opcode
  1568  001024  20F4               	addwfc	prodh,w,c
  1569  001026  6EDA               	movwf	fsr2h,c
  1570  001028  0E00               	movlw	0
  1571  00102A  6EDF               	movwf	indf2,c
  1572                           
  1573                           ;PIC18F27J53-RTCC01.c: 171: cmd[cnt_char++] = ' ';
  1574  00102C  0100               	movlb	0	; () banked
  1575  00102E  5191               	movf	rx_operation@cnt_char& (0+255),w,b
  1576  001030  0D01               	mullw	1
  1577  001032  0102               	movlb	2	; () banked
  1578  001034  0E00               	movlw	low rx_operation@cmd
  1579  001036  24F3               	addwf	prodl,w,c
  1580  001038  6ED9               	movwf	fsr2l,c
  1581  00103A  0102               	movlb	2	; () banked
  1582  00103C  0E02               	movlw	high rx_operation@cmd
  1583  00103E  20F4               	addwfc	prodh,w,c
  1584  001040  6EDA               	movwf	fsr2h,c
  1585  001042  0E20               	movlw	32
  1586  001044  6EDF               	movwf	indf2,c
  1587                           
  1588                           ; BSR set to: 2
  1589  001046  0100               	movlb	0	; () banked
  1590  001048  2B91               	incf	rx_operation@cnt_char& (0+255),f,b
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;PIC18F27J53-RTCC01.c: 172: for (i = 0; opland1[i] = ringbuf_pop(&rx_buf); i++) {
  1594  00104A  0E00               	movlw	0
  1595  00104C  0100               	movlb	0	; () banked
  1596  00104E  6F92               	movwf	rx_operation@i& (0+255),b
  1597  001050  D01C               	goto	l4837
  1598  001052                     l4831:
  1599                           
  1600                           ;PIC18F27J53-RTCC01.c: 173: cmd[cnt_char++] = opcode[i];
  1601  001052  0100               	movlb	0	; () banked
  1602  001054  5192               	movf	rx_operation@i& (0+255),w,b
  1603  001056  0D01               	mullw	1
  1604  001058  0101               	movlb	1	; () banked
  1605  00105A  0E00               	movlw	low rx_operation@opcode
  1606  00105C  24F3               	addwf	prodl,w,c
  1607  00105E  6ED9               	movwf	fsr2l,c
  1608  001060  0101               	movlb	1	; () banked
  1609  001062  0E01               	movlw	high rx_operation@opcode
  1610  001064  20F4               	addwfc	prodh,w,c
  1611  001066  6EDA               	movwf	fsr2h,c
  1612  001068  0100               	movlb	0	; () banked
  1613  00106A  5191               	movf	rx_operation@cnt_char& (0+255),w,b
  1614  00106C  0D01               	mullw	1
  1615  00106E  0102               	movlb	2	; () banked
  1616  001070  0E00               	movlw	low rx_operation@cmd
  1617  001072  24F3               	addwf	prodl,w,c
  1618  001074  6EE1               	movwf	fsr1l,c
  1619  001076  0102               	movlb	2	; () banked
  1620  001078  0E02               	movlw	high rx_operation@cmd
  1621  00107A  20F4               	addwfc	prodh,w,c
  1622  00107C  6EE2               	movwf	fsr1h,c
  1623  00107E  CFDF FFE7          	movff	indf2,indf1
  1624                           
  1625                           ; BSR set to: 2
  1626  001082  0100               	movlb	0	; () banked
  1627  001084  2B91               	incf	rx_operation@cnt_char& (0+255),f,b
  1628                           
  1629                           ; BSR set to: 0
  1630  001086  0100               	movlb	0	; () banked
  1631  001088  2B92               	incf	rx_operation@i& (0+255),f,b
  1632  00108A                     l4837:
  1633                           
  1634                           ; BSR set to: 0
  1635  00108A  0E00               	movlw	high _rx_buf
  1636  00108C  0100               	movlb	0	; () banked
  1637  00108E  6F63               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1638  001090  0E26               	movlw	low _rx_buf
  1639  001092  0100               	movlb	0	; () banked
  1640  001094  6F62               	movwf	ringbuf_pop@rb& (0+255),b
  1641  001096  ECBE  F014         	call	_ringbuf_pop	;wreg free
  1642  00109A  0100               	movlb	0	; () banked
  1643  00109C  6F90               	movwf	??_rx_operation& (0+255),b
  1644  00109E  0100               	movlb	0	; () banked
  1645  0010A0  5192               	movf	rx_operation@i& (0+255),w,b
  1646  0010A2  0D01               	mullw	1
  1647  0010A4  0103               	movlb	3	; () banked
  1648  0010A6  0E00               	movlw	low rx_operation@opland1
  1649  0010A8  24F3               	addwf	prodl,w,c
  1650  0010AA  6ED9               	movwf	fsr2l,c
  1651  0010AC  0103               	movlb	3	; () banked
  1652  0010AE  0E03               	movlw	high rx_operation@opland1
  1653  0010B0  20F4               	addwfc	prodh,w,c
  1654  0010B2  6EDA               	movwf	fsr2h,c
  1655  0010B4  C090  FFDF         	movff	??_rx_operation,indf2
  1656  0010B8  50DF               	movf	indf2,w,c
  1657  0010BA  A4D8               	btfss	status,2,c
  1658  0010BC  D7CA               	goto	l4831
  1659                           
  1660                           ; BSR set to: 3
  1661                           ;PIC18F27J53-RTCC01.c: 174: }
  1662                           ;PIC18F27J53-RTCC01.c: 175: opland1[i] = '\0';
  1663                           
  1664                           ; BSR set to: 3
  1665  0010BE  0100               	movlb	0	; () banked
  1666  0010C0  5192               	movf	rx_operation@i& (0+255),w,b
  1667  0010C2  0D01               	mullw	1
  1668  0010C4  0103               	movlb	3	; () banked
  1669  0010C6  0E00               	movlw	low rx_operation@opland1
  1670  0010C8  24F3               	addwf	prodl,w,c
  1671  0010CA  6ED9               	movwf	fsr2l,c
  1672  0010CC  0103               	movlb	3	; () banked
  1673  0010CE  0E03               	movlw	high rx_operation@opland1
  1674  0010D0  20F4               	addwfc	prodh,w,c
  1675  0010D2  6EDA               	movwf	fsr2h,c
  1676  0010D4  0E00               	movlw	0
  1677  0010D6  6EDF               	movwf	indf2,c
  1678                           
  1679                           ;PIC18F27J53-RTCC01.c: 176: cmd[cnt_char++] = ' ';
  1680  0010D8  0100               	movlb	0	; () banked
  1681  0010DA  5191               	movf	rx_operation@cnt_char& (0+255),w,b
  1682  0010DC  0D01               	mullw	1
  1683  0010DE  0102               	movlb	2	; () banked
  1684  0010E0  0E00               	movlw	low rx_operation@cmd
  1685  0010E2  24F3               	addwf	prodl,w,c
  1686  0010E4  6ED9               	movwf	fsr2l,c
  1687  0010E6  0102               	movlb	2	; () banked
  1688  0010E8  0E02               	movlw	high rx_operation@cmd
  1689  0010EA  20F4               	addwfc	prodh,w,c
  1690  0010EC  6EDA               	movwf	fsr2h,c
  1691  0010EE  0E20               	movlw	32
  1692  0010F0  6EDF               	movwf	indf2,c
  1693                           
  1694                           ; BSR set to: 2
  1695  0010F2  0100               	movlb	0	; () banked
  1696  0010F4  2B91               	incf	rx_operation@cnt_char& (0+255),f,b
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;PIC18F27J53-RTCC01.c: 177: for (i = 0; opland2[i] = ringbuf_pop(&rx_buf); i++) {
  1700  0010F6  0E00               	movlw	0
  1701  0010F8  0100               	movlb	0	; () banked
  1702  0010FA  6F92               	movwf	rx_operation@i& (0+255),b
  1703  0010FC  D01C               	goto	l4851
  1704  0010FE                     l4845:
  1705                           
  1706                           ;PIC18F27J53-RTCC01.c: 178: cmd[cnt_char++] = opcode[i];
  1707  0010FE  0100               	movlb	0	; () banked
  1708  001100  5192               	movf	rx_operation@i& (0+255),w,b
  1709  001102  0D01               	mullw	1
  1710  001104  0101               	movlb	1	; () banked
  1711  001106  0E00               	movlw	low rx_operation@opcode
  1712  001108  24F3               	addwf	prodl,w,c
  1713  00110A  6ED9               	movwf	fsr2l,c
  1714  00110C  0101               	movlb	1	; () banked
  1715  00110E  0E01               	movlw	high rx_operation@opcode
  1716  001110  20F4               	addwfc	prodh,w,c
  1717  001112  6EDA               	movwf	fsr2h,c
  1718  001114  0100               	movlb	0	; () banked
  1719  001116  5191               	movf	rx_operation@cnt_char& (0+255),w,b
  1720  001118  0D01               	mullw	1
  1721  00111A  0102               	movlb	2	; () banked
  1722  00111C  0E00               	movlw	low rx_operation@cmd
  1723  00111E  24F3               	addwf	prodl,w,c
  1724  001120  6EE1               	movwf	fsr1l,c
  1725  001122  0102               	movlb	2	; () banked
  1726  001124  0E02               	movlw	high rx_operation@cmd
  1727  001126  20F4               	addwfc	prodh,w,c
  1728  001128  6EE2               	movwf	fsr1h,c
  1729  00112A  CFDF FFE7          	movff	indf2,indf1
  1730                           
  1731                           ; BSR set to: 2
  1732  00112E  0100               	movlb	0	; () banked
  1733  001130  2B91               	incf	rx_operation@cnt_char& (0+255),f,b
  1734                           
  1735                           ; BSR set to: 0
  1736  001132  0100               	movlb	0	; () banked
  1737  001134  2B92               	incf	rx_operation@i& (0+255),f,b
  1738  001136                     l4851:
  1739                           
  1740                           ; BSR set to: 0
  1741  001136  0E00               	movlw	high _rx_buf
  1742  001138  0100               	movlb	0	; () banked
  1743  00113A  6F63               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  1744  00113C  0E26               	movlw	low _rx_buf
  1745  00113E  0100               	movlb	0	; () banked
  1746  001140  6F62               	movwf	ringbuf_pop@rb& (0+255),b
  1747  001142  ECBE  F014         	call	_ringbuf_pop	;wreg free
  1748  001146  0100               	movlb	0	; () banked
  1749  001148  6F90               	movwf	??_rx_operation& (0+255),b
  1750  00114A  0100               	movlb	0	; () banked
  1751  00114C  5192               	movf	rx_operation@i& (0+255),w,b
  1752  00114E  0D01               	mullw	1
  1753  001150  0104               	movlb	4	; () banked
  1754  001152  0E00               	movlw	low rx_operation@opland2
  1755  001154  24F3               	addwf	prodl,w,c
  1756  001156  6ED9               	movwf	fsr2l,c
  1757  001158  0104               	movlb	4	; () banked
  1758  00115A  0E04               	movlw	high rx_operation@opland2
  1759  00115C  20F4               	addwfc	prodh,w,c
  1760  00115E  6EDA               	movwf	fsr2h,c
  1761  001160  C090  FFDF         	movff	??_rx_operation,indf2
  1762  001164  50DF               	movf	indf2,w,c
  1763  001166  A4D8               	btfss	status,2,c
  1764  001168  D7CA               	goto	l4845
  1765                           
  1766                           ; BSR set to: 4
  1767                           ;PIC18F27J53-RTCC01.c: 179: }
  1768                           ;PIC18F27J53-RTCC01.c: 180: opland2[i] = '\0';
  1769                           
  1770                           ; BSR set to: 4
  1771  00116A  0100               	movlb	0	; () banked
  1772  00116C  5192               	movf	rx_operation@i& (0+255),w,b
  1773  00116E  0D01               	mullw	1
  1774  001170  0104               	movlb	4	; () banked
  1775  001172  0E00               	movlw	low rx_operation@opland2
  1776  001174  24F3               	addwf	prodl,w,c
  1777  001176  6ED9               	movwf	fsr2l,c
  1778  001178  0104               	movlb	4	; () banked
  1779  00117A  0E04               	movlw	high rx_operation@opland2
  1780  00117C  20F4               	addwfc	prodh,w,c
  1781  00117E  6EDA               	movwf	fsr2h,c
  1782  001180  0E00               	movlw	0
  1783  001182  6EDF               	movwf	indf2,c
  1784                           
  1785                           ;PIC18F27J53-RTCC01.c: 181: cmd[cnt_char] = '\0';
  1786  001184  0100               	movlb	0	; () banked
  1787  001186  5191               	movf	rx_operation@cnt_char& (0+255),w,b
  1788  001188  0D01               	mullw	1
  1789  00118A  0102               	movlb	2	; () banked
  1790  00118C  0E00               	movlw	low rx_operation@cmd
  1791  00118E  24F3               	addwf	prodl,w,c
  1792  001190  6ED9               	movwf	fsr2l,c
  1793  001192  0102               	movlb	2	; () banked
  1794  001194  0E02               	movlw	high rx_operation@cmd
  1795  001196  20F4               	addwfc	prodh,w,c
  1796  001198  6EDA               	movwf	fsr2h,c
  1797  00119A  0E00               	movlw	0
  1798  00119C  6EDF               	movwf	indf2,c
  1799                           
  1800                           ; BSR set to: 2
  1801                           ;PIC18F27J53-RTCC01.c: 183: if (!strcmp(opcode, "ts")) {
  1802  00119E  0101               	movlb	1	; () banked
  1803  0011A0  0E01               	movlw	high rx_operation@opcode
  1804  0011A2  0100               	movlb	0	; () banked
  1805  0011A4  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1806  0011A6  0101               	movlb	1	; () banked
  1807  0011A8  0E00               	movlw	low rx_operation@opcode
  1808  0011AA  0100               	movlb	0	; () banked
  1809  0011AC  6F60               	movwf	strcmp@str1& (0+255),b
  1810  0011AE  0E0F               	movlw	high STR_27
  1811  0011B0  0100               	movlb	0	; () banked
  1812  0011B2  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1813  0011B4  0E7E               	movlw	low STR_27
  1814  0011B6  0100               	movlb	0	; () banked
  1815  0011B8  6F62               	movwf	strcmp@str2& (0+255),b
  1816  0011BA  EC34  F016         	call	_strcmp	;wreg free
  1817  0011BE  0900               	iorlw	0
  1818  0011C0  A4D8               	btfss	status,2,c
  1819  0011C2  0012               	return	
  1820                           
  1821                           ;PIC18F27J53-RTCC01.c: 184: if (!strcmp(opland1, "y")) {
  1822  0011C4  0103               	movlb	3	; () banked
  1823  0011C6  0E03               	movlw	high rx_operation@opland1
  1824  0011C8  0100               	movlb	0	; () banked
  1825  0011CA  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1826  0011CC  0103               	movlb	3	; () banked
  1827  0011CE  0E00               	movlw	low rx_operation@opland1
  1828  0011D0  0100               	movlb	0	; () banked
  1829  0011D2  6F60               	movwf	strcmp@str1& (0+255),b
  1830  0011D4  0E0F               	movlw	high (STR_9+5)
  1831  0011D6  0100               	movlb	0	; () banked
  1832  0011D8  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1833  0011DA  0E3C               	movlw	low (STR_9+5)
  1834  0011DC  0100               	movlb	0	; () banked
  1835  0011DE  6F62               	movwf	strcmp@str2& (0+255),b
  1836  0011E0  EC34  F016         	call	_strcmp	;wreg free
  1837  0011E4  0900               	iorlw	0
  1838  0011E6  A4D8               	btfss	status,2,c
  1839  0011E8  D00A               	goto	l4861
  1840                           
  1841                           ;PIC18F27J53-RTCC01.c: 185: caltime_now.YY = atoi(opland2);
  1842  0011EA  0104               	movlb	4	; () banked
  1843  0011EC  0E04               	movlw	high rx_operation@opland2
  1844  0011EE  6E21               	movwf	atoi@str+1,c
  1845  0011F0  0104               	movlb	4	; () banked
  1846  0011F2  0E00               	movlw	low rx_operation@opland2
  1847  0011F4  6E20               	movwf	atoi@str,c
  1848  0011F6  ECCA  F019         	call	_atoi	;wreg free
  1849  0011FA  0100               	movlb	0	; () banked
  1850  0011FC  6FDC               	movwf	(_caltime_now+6)& (0+255),b
  1851  0011FE                     l4861:
  1852                           
  1853                           ;PIC18F27J53-RTCC01.c: 186: }
  1854                           ;PIC18F27J53-RTCC01.c: 187: if (!strcmp(opland1, "M")) {
  1855  0011FE  0103               	movlb	3	; () banked
  1856  001200  0E03               	movlw	high rx_operation@opland1
  1857  001202  0100               	movlb	0	; () banked
  1858  001204  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1859  001206  0103               	movlb	3	; () banked
  1860  001208  0E00               	movlw	low rx_operation@opland1
  1861  00120A  0100               	movlb	0	; () banked
  1862  00120C  6F60               	movwf	strcmp@str1& (0+255),b
  1863  00120E  0E0F               	movlw	high STR_29
  1864  001210  0100               	movlb	0	; () banked
  1865  001212  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1866  001214  0E85               	movlw	low STR_29
  1867  001216  0100               	movlb	0	; () banked
  1868  001218  6F62               	movwf	strcmp@str2& (0+255),b
  1869  00121A  EC34  F016         	call	_strcmp	;wreg free
  1870  00121E  0900               	iorlw	0
  1871  001220  A4D8               	btfss	status,2,c
  1872  001222  D00A               	goto	l4865
  1873                           
  1874                           ;PIC18F27J53-RTCC01.c: 188: caltime_now.MM = atoi(opland2);
  1875  001224  0104               	movlb	4	; () banked
  1876  001226  0E04               	movlw	high rx_operation@opland2
  1877  001228  6E21               	movwf	atoi@str+1,c
  1878  00122A  0104               	movlb	4	; () banked
  1879  00122C  0E00               	movlw	low rx_operation@opland2
  1880  00122E  6E20               	movwf	atoi@str,c
  1881  001230  ECCA  F019         	call	_atoi	;wreg free
  1882  001234  0100               	movlb	0	; () banked
  1883  001236  6FDB               	movwf	(_caltime_now+5)& (0+255),b
  1884  001238                     l4865:
  1885                           
  1886                           ;PIC18F27J53-RTCC01.c: 189: }
  1887                           ;PIC18F27J53-RTCC01.c: 190: if (!strcmp(opland1, "d")) {
  1888  001238  0103               	movlb	3	; () banked
  1889  00123A  0E03               	movlw	high rx_operation@opland1
  1890  00123C  0100               	movlb	0	; () banked
  1891  00123E  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1892  001240  0103               	movlb	3	; () banked
  1893  001242  0E00               	movlw	low rx_operation@opland1
  1894  001244  0100               	movlb	0	; () banked
  1895  001246  6F60               	movwf	strcmp@str1& (0+255),b
  1896  001248  0E0F               	movlw	high STR_30
  1897  00124A  0100               	movlb	0	; () banked
  1898  00124C  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1899  00124E  0E87               	movlw	low STR_30
  1900  001250  0100               	movlb	0	; () banked
  1901  001252  6F62               	movwf	strcmp@str2& (0+255),b
  1902  001254  EC34  F016         	call	_strcmp	;wreg free
  1903  001258  0900               	iorlw	0
  1904  00125A  A4D8               	btfss	status,2,c
  1905  00125C  D00A               	goto	l4869
  1906                           
  1907                           ;PIC18F27J53-RTCC01.c: 191: caltime_now.DD = atoi(opland2);
  1908  00125E  0104               	movlb	4	; () banked
  1909  001260  0E04               	movlw	high rx_operation@opland2
  1910  001262  6E21               	movwf	atoi@str+1,c
  1911  001264  0104               	movlb	4	; () banked
  1912  001266  0E00               	movlw	low rx_operation@opland2
  1913  001268  6E20               	movwf	atoi@str,c
  1914  00126A  ECCA  F019         	call	_atoi	;wreg free
  1915  00126E  0100               	movlb	0	; () banked
  1916  001270  6FDA               	movwf	(_caltime_now+4)& (0+255),b
  1917  001272                     l4869:
  1918                           
  1919                           ;PIC18F27J53-RTCC01.c: 192: }
  1920                           ;PIC18F27J53-RTCC01.c: 193: if (!strcmp(opland1, "h")) {
  1921  001272  0103               	movlb	3	; () banked
  1922  001274  0E03               	movlw	high rx_operation@opland1
  1923  001276  0100               	movlb	0	; () banked
  1924  001278  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1925  00127A  0103               	movlb	3	; () banked
  1926  00127C  0E00               	movlw	low rx_operation@opland1
  1927  00127E  0100               	movlb	0	; () banked
  1928  001280  6F60               	movwf	strcmp@str1& (0+255),b
  1929  001282  0E0F               	movlw	high STR_31
  1930  001284  0100               	movlb	0	; () banked
  1931  001286  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1932  001288  0E89               	movlw	low STR_31
  1933  00128A  0100               	movlb	0	; () banked
  1934  00128C  6F62               	movwf	strcmp@str2& (0+255),b
  1935  00128E  EC34  F016         	call	_strcmp	;wreg free
  1936  001292  0900               	iorlw	0
  1937  001294  A4D8               	btfss	status,2,c
  1938  001296  D00A               	goto	l4873
  1939                           
  1940                           ;PIC18F27J53-RTCC01.c: 194: caltime_now.hh = atoi(opland2);
  1941  001298  0104               	movlb	4	; () banked
  1942  00129A  0E04               	movlw	high rx_operation@opland2
  1943  00129C  6E21               	movwf	atoi@str+1,c
  1944  00129E  0104               	movlb	4	; () banked
  1945  0012A0  0E00               	movlw	low rx_operation@opland2
  1946  0012A2  6E20               	movwf	atoi@str,c
  1947  0012A4  ECCA  F019         	call	_atoi	;wreg free
  1948  0012A8  0100               	movlb	0	; () banked
  1949  0012AA  6FD8               	movwf	(_caltime_now+2)& (0+255),b
  1950  0012AC                     l4873:
  1951                           
  1952                           ;PIC18F27J53-RTCC01.c: 195: }
  1953                           ;PIC18F27J53-RTCC01.c: 196: if (!strcmp(opland1, "m")) {
  1954  0012AC  0103               	movlb	3	; () banked
  1955  0012AE  0E03               	movlw	high rx_operation@opland1
  1956  0012B0  0100               	movlb	0	; () banked
  1957  0012B2  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1958  0012B4  0103               	movlb	3	; () banked
  1959  0012B6  0E00               	movlw	low rx_operation@opland1
  1960  0012B8  0100               	movlb	0	; () banked
  1961  0012BA  6F60               	movwf	strcmp@str1& (0+255),b
  1962  0012BC  0E0F               	movlw	high STR_32
  1963  0012BE  0100               	movlb	0	; () banked
  1964  0012C0  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1965  0012C2  0E8B               	movlw	low STR_32
  1966  0012C4  0100               	movlb	0	; () banked
  1967  0012C6  6F62               	movwf	strcmp@str2& (0+255),b
  1968  0012C8  EC34  F016         	call	_strcmp	;wreg free
  1969  0012CC  0900               	iorlw	0
  1970  0012CE  A4D8               	btfss	status,2,c
  1971  0012D0  D00A               	goto	l4877
  1972                           
  1973                           ;PIC18F27J53-RTCC01.c: 197: caltime_now.mm = atoi(opland2);
  1974  0012D2  0104               	movlb	4	; () banked
  1975  0012D4  0E04               	movlw	high rx_operation@opland2
  1976  0012D6  6E21               	movwf	atoi@str+1,c
  1977  0012D8  0104               	movlb	4	; () banked
  1978  0012DA  0E00               	movlw	low rx_operation@opland2
  1979  0012DC  6E20               	movwf	atoi@str,c
  1980  0012DE  ECCA  F019         	call	_atoi	;wreg free
  1981  0012E2  0100               	movlb	0	; () banked
  1982  0012E4  6FD7               	movwf	(_caltime_now+1)& (0+255),b
  1983  0012E6                     l4877:
  1984                           
  1985                           ;PIC18F27J53-RTCC01.c: 198: }
  1986                           ;PIC18F27J53-RTCC01.c: 199: if (!strcmp(opland1, "s")) {
  1987  0012E6  0103               	movlb	3	; () banked
  1988  0012E8  0E03               	movlw	high rx_operation@opland1
  1989  0012EA  0100               	movlb	0	; () banked
  1990  0012EC  6F61               	movwf	(strcmp@str1+1)& (0+255),b
  1991  0012EE  0103               	movlb	3	; () banked
  1992  0012F0  0E00               	movlw	low rx_operation@opland1
  1993  0012F2  0100               	movlb	0	; () banked
  1994  0012F4  6F60               	movwf	strcmp@str1& (0+255),b
  1995  0012F6  0E0F               	movlw	high (STR_27+1)
  1996  0012F8  0100               	movlb	0	; () banked
  1997  0012FA  6F63               	movwf	(strcmp@str2+1)& (0+255),b
  1998  0012FC  0E7F               	movlw	low (STR_27+1)
  1999  0012FE  0100               	movlb	0	; () banked
  2000  001300  6F62               	movwf	strcmp@str2& (0+255),b
  2001  001302  EC34  F016         	call	_strcmp	;wreg free
  2002  001306  0900               	iorlw	0
  2003  001308  A4D8               	btfss	status,2,c
  2004  00130A  D00A               	goto	l600
  2005                           
  2006                           ;PIC18F27J53-RTCC01.c: 200: caltime_now.ss = atoi(opland2);
  2007  00130C  0104               	movlb	4	; () banked
  2008  00130E  0E04               	movlw	high rx_operation@opland2
  2009  001310  6E21               	movwf	atoi@str+1,c
  2010  001312  0104               	movlb	4	; () banked
  2011  001314  0E00               	movlw	low rx_operation@opland2
  2012  001316  6E20               	movwf	atoi@str,c
  2013  001318  ECCA  F019         	call	_atoi	;wreg free
  2014  00131C  0100               	movlb	0	; () banked
  2015  00131E  6FD6               	movwf	_caltime_now& (0+255),b
  2016  001320                     l600:
  2017                           
  2018                           ;PIC18F27J53-RTCC01.c: 201: }
  2019                           ;PIC18F27J53-RTCC01.c: 202: RTCC_from_caltime(&caltime_now, &epoch_now);
  2020  001320  0100               	movlb	0	; () banked
  2021  001322  0E00               	movlw	high _caltime_now
  2022  001324  0100               	movlb	0	; () banked
  2023  001326  6F8D               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
  2024  001328  0100               	movlb	0	; () banked
  2025  00132A  0ED6               	movlw	low _caltime_now
  2026  00132C  0100               	movlb	0	; () banked
  2027  00132E  6F8C               	movwf	RTCC_from_caltime@ct& (0+255),b
  2028  001330  0100               	movlb	0	; () banked
  2029  001332  0E00               	movlw	high _epoch_now
  2030  001334  0100               	movlb	0	; () banked
  2031  001336  6F8F               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
  2032  001338  0100               	movlb	0	; () banked
  2033  00133A  0EDD               	movlw	low _epoch_now
  2034  00133C  0100               	movlb	0	; () banked
  2035  00133E  6F8E               	movwf	RTCC_from_caltime@ep& (0+255),b
  2036  001340  ECF1  F01B         	call	_RTCC_from_caltime	;wreg free
  2037                           
  2038                           ;PIC18F27J53-RTCC01.c: 203: time_change_flag = 1;
  2039  001344  0E01               	movlw	1
  2040  001346  0100               	movlb	0	; () banked
  2041  001348  6FD4               	movwf	_time_change_flag& (0+255),b
  2042  00134A  0012               	return	
  2043  00134C                     __end_of_rx_operation:
  2044                           	opt stack 0
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           prodh	equ	0xFF4
  2050                           prodl	equ	0xFF3
  2051                           intcon	equ	0xFF2
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           indf1	equ	0xFE7
  2055                           postdec1	equ	0xFE5
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           indf2	equ	0xFDF
  2059                           fsr2h	equ	0xFDA
  2060                           fsr2l	equ	0xFD9
  2061                           status	equ	0xFD8
  2062                           
  2063 ;; *************** function _strcmp *****************
  2064 ;; Defined at:
  2065 ;;		line 398 in file "../My_header\My_header.h"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
  2068 ;;		 -> rx_operation@opland1(250), rx_operation@opcode(250), 
  2069 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
  2070 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  2071 ;;		 -> STR_29(2), STR_28(2), STR_27(3), 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      char 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;Total ram usage:        5 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    5
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_rx_operation
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text2
  2098  002C68                     __ptext2:
  2099                           	opt stack 0
  2100  002C68                     _strcmp:
  2101                           	opt stack 24
  2102                           
  2103                           ;My_header\My_header.h: 399: while (*str1 && *str2) {
  2104                           
  2105                           ;incstack = 0
  2106  002C68  D02C               	goto	l4455
  2107  002C6A                     l4447:
  2108                           
  2109                           ;My_header\My_header.h: 400: if (*str1 != *str2)return (*str1 - *str2);
  2110  002C6A  0100               	movlb	0	; () banked
  2111  002C6C  C062  FFF6         	movff	strcmp@str2,tblptrl
  2112  002C70  0100               	movlb	0	; () banked
  2113  002C72  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2114  002C76                     	if	0	;tblptru may be non-zero
  2115  002C76                     	endif
  2116  002C76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2117  002C76  0E00               	movlw	low (__mediumconst shr (0+16))
  2118  002C78  6EF8               	movwf	tblptru,c
  2119  002C7A                     	endif
  2120  002C7A  0008               	tblrd		*
  2121  002C7C  CFF5 F020          	movff	tablat,??_strcmp
  2122  002C80  C060  FFD9         	movff	strcmp@str1,fsr2l
  2123  002C84  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2124  002C88  50DF               	movf	indf2,w,c
  2125  002C8A  1820               	xorwf	??_strcmp,w,c
  2126  002C8C  B4D8               	btfsc	status,2,c
  2127  002C8E  D013               	goto	l4453
  2128                           
  2129                           ; BSR set to: 0
  2130  002C90  C060  FFD9         	movff	strcmp@str1,fsr2l
  2131  002C94  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2132  002C98  50DF               	movf	indf2,w,c
  2133  002C9A  6E20               	movwf	??_strcmp& (0+255),c
  2134  002C9C  0100               	movlb	0	; () banked
  2135  002C9E  C062  FFF6         	movff	strcmp@str2,tblptrl
  2136  002CA2  0100               	movlb	0	; () banked
  2137  002CA4  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2138  002CA8                     	if	0	;tblptru may be non-zero
  2139  002CA8                     	endif
  2140  002CA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2141  002CA8  0E00               	movlw	low (__mediumconst shr (0+16))
  2142  002CAA  6EF8               	movwf	tblptru,c
  2143  002CAC                     	endif
  2144  002CAC  0008               	tblrd		*
  2145  002CAE  50F5               	movf	tablat,w,c
  2146  002CB0  0800               	sublw	0
  2147  002CB2  2420               	addwf	??_strcmp,w,c
  2148  002CB4  0012               	return	
  2149  002CB6                     l4453:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;My_header\My_header.h: 401: str1++;
  2153  002CB6  0100               	movlb	0	; () banked
  2154  002CB8  4B60               	infsnz	strcmp@str1& (0+255),f,b
  2155  002CBA  2B61               	incf	(strcmp@str1+1)& (0+255),f,b
  2156                           
  2157                           ;My_header\My_header.h: 402: str2++;
  2158  002CBC  0100               	movlb	0	; () banked
  2159  002CBE  4B62               	infsnz	strcmp@str2& (0+255),f,b
  2160  002CC0  2B63               	incf	(strcmp@str2+1)& (0+255),f,b
  2161  002CC2                     l4455:
  2162  002CC2  C060  FFD9         	movff	strcmp@str1,fsr2l
  2163  002CC6  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2164  002CCA  50DF               	movf	indf2,w,c
  2165  002CCC  B4D8               	btfsc	status,2,c
  2166  002CCE  D00D               	goto	l4459
  2167  002CD0  0100               	movlb	0	; () banked
  2168  002CD2  C062  FFF6         	movff	strcmp@str2,tblptrl
  2169  002CD6  0100               	movlb	0	; () banked
  2170  002CD8  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2171  002CDC                     	if	0	;tblptru may be non-zero
  2172  002CDC                     	endif
  2173  002CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2174  002CDC  0E00               	movlw	low (__mediumconst shr (0+16))
  2175  002CDE  6EF8               	movwf	tblptru,c
  2176  002CE0                     	endif
  2177  002CE0  0008               	tblrd		*
  2178  002CE2  50F5               	movf	tablat,w,c
  2179  002CE4  0900               	iorlw	0
  2180  002CE6  A4D8               	btfss	status,2,c
  2181  002CE8  D7C0               	goto	l4447
  2182  002CEA                     l4459:
  2183                           
  2184                           ;My_header\My_header.h: 403: }
  2185                           ;My_header\My_header.h: 404: return (*str1 - *str2);
  2186  002CEA  C060  FFD9         	movff	strcmp@str1,fsr2l
  2187  002CEE  C061  FFDA         	movff	strcmp@str1+1,fsr2h
  2188  002CF2  50DF               	movf	indf2,w,c
  2189  002CF4  6E20               	movwf	??_strcmp& (0+255),c
  2190  002CF6  0100               	movlb	0	; () banked
  2191  002CF8  C062  FFF6         	movff	strcmp@str2,tblptrl
  2192  002CFC  0100               	movlb	0	; () banked
  2193  002CFE  C063  FFF7         	movff	strcmp@str2+1,tblptrh
  2194  002D02                     	if	0	;tblptru may be non-zero
  2195  002D02                     	endif
  2196  002D02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2197  002D02  0E00               	movlw	low (__mediumconst shr (0+16))
  2198  002D04  6EF8               	movwf	tblptru,c
  2199  002D06                     	endif
  2200  002D06  0008               	tblrd		*
  2201  002D08  50F5               	movf	tablat,w,c
  2202  002D0A  0800               	sublw	0
  2203  002D0C  2420               	addwf	??_strcmp,w,c
  2204  002D0E  0012               	return	
  2205  002D10                     __end_of_strcmp:
  2206                           	opt stack 0
  2207                           tblptru	equ	0xFF8
  2208                           tblptrh	equ	0xFF7
  2209                           tblptrl	equ	0xFF6
  2210                           tablat	equ	0xFF5
  2211                           prodh	equ	0xFF4
  2212                           prodl	equ	0xFF3
  2213                           intcon	equ	0xFF2
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           indf1	equ	0xFE7
  2217                           postdec1	equ	0xFE5
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           indf2	equ	0xFDF
  2221                           fsr2h	equ	0xFDA
  2222                           fsr2l	equ	0xFD9
  2223                           status	equ	0xFD8
  2224                           
  2225 ;; *************** function _ringbuf_pop *****************
  2226 ;; Defined at:
  2227 ;;		line 45 in file "../My_header\My_ringbuf.h"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  rb              2    2[BANK0 ] PTR struct ringbuf
  2230 ;;		 -> rx_buf(5), tx_buf(5), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  ret             1   33[COMRAM] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      unsigned char 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2245 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;Total ram usage:        6 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    6
  2249 ;; This function calls:
  2250 ;;		_ringbuf_num
  2251 ;; This function is called by:
  2252 ;;		_rx_operation
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text3
  2257  00297C                     __ptext3:
  2258                           	opt stack 0
  2259  00297C                     _ringbuf_pop:
  2260                           	opt stack 23
  2261                           
  2262                           ;My_header\My_ringbuf.h: 46: if (ringbuf_num(rb)) {
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;incstack = 0
  2266  00297C  0100               	movlb	0	; () banked
  2267  00297E  C063  F021         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
  2268  002982  0100               	movlb	0	; () banked
  2269  002984  C062  F020         	movff	ringbuf_pop@rb,ringbuf_num@rb
  2270  002988  ECAC  F017         	call	_ringbuf_num	;wreg free
  2271  00298C  0900               	iorlw	0
  2272  00298E  B4D8               	btfsc	status,2,c
  2273  002990  D052               	goto	l4415
  2274                           
  2275                           ;My_header\My_ringbuf.h: 47: uint8_t ret = rb->buf[rb->tail];
  2276  002992  0100               	movlb	0	; () banked
  2277  002994  EE20 F004          	lfsr	2,4
  2278  002998  0100               	movlb	0	; () banked
  2279  00299A  5162               	movf	ringbuf_pop@rb& (0+255),w,b
  2280  00299C  26D9               	addwf	fsr2l,f,c
  2281  00299E  0100               	movlb	0	; () banked
  2282  0029A0  5163               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2283  0029A2  22DA               	addwfc	fsr2h,f,c
  2284  0029A4  50DF               	movf	indf2,w,c
  2285  0029A6  0100               	movlb	0	; () banked
  2286  0029A8  6F64               	movwf	??_ringbuf_pop& (0+255),b
  2287  0029AA  0100               	movlb	0	; () banked
  2288  0029AC  5164               	movf	??_ringbuf_pop& (0+255),w,b
  2289  0029AE  0D01               	mullw	1
  2290  0029B0  C062  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2291  0029B4  C063  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2292  0029B8  CFDE F065          	movff	postinc2,??_ringbuf_pop+1
  2293  0029BC  CFDD F066          	movff	postdec2,??_ringbuf_pop+2
  2294  0029C0  50F3               	movf	prodl,w,c
  2295  0029C2  0100               	movlb	0	; () banked
  2296  0029C4  2565               	addwf	(??_ringbuf_pop+1)& (0+255),w,b
  2297  0029C6  6ED9               	movwf	fsr2l,c
  2298  0029C8  50F4               	movf	prodh,w,c
  2299  0029CA  0100               	movlb	0	; () banked
  2300  0029CC  2166               	addwfc	(??_ringbuf_pop+2)& (0+255),w,b
  2301  0029CE  6EDA               	movwf	fsr2h,c
  2302  0029D0  50DF               	movf	indf2,w,c
  2303  0029D2  6E22               	movwf	ringbuf_pop@ret,c
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;My_header\My_ringbuf.h: 48: rb->tail++;
  2307  0029D4  0100               	movlb	0	; () banked
  2308  0029D6  EE20 F004          	lfsr	2,4
  2309  0029DA  0100               	movlb	0	; () banked
  2310  0029DC  5162               	movf	ringbuf_pop@rb& (0+255),w,b
  2311  0029DE  26D9               	addwf	fsr2l,f,c
  2312  0029E0  0100               	movlb	0	; () banked
  2313  0029E2  5163               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2314  0029E4  22DA               	addwfc	fsr2h,f,c
  2315  0029E6  2ADF               	incf	indf2,f,c
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;My_header\My_ringbuf.h: 49: if (rb->tail >= rb->size) {
  2319  0029E8  0100               	movlb	0	; () banked
  2320  0029EA  EE20 F004          	lfsr	2,4
  2321  0029EE  0100               	movlb	0	; () banked
  2322  0029F0  5162               	movf	ringbuf_pop@rb& (0+255),w,b
  2323  0029F2  26D9               	addwf	fsr2l,f,c
  2324  0029F4  0100               	movlb	0	; () banked
  2325  0029F6  5163               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2326  0029F8  22DA               	addwfc	fsr2h,f,c
  2327  0029FA  50DF               	movf	indf2,w,c
  2328  0029FC  0100               	movlb	0	; () banked
  2329  0029FE  6F64               	movwf	??_ringbuf_pop& (0+255),b
  2330  002A00  0100               	movlb	0	; () banked
  2331  002A02  EE20 F002          	lfsr	2,2
  2332  002A06  0100               	movlb	0	; () banked
  2333  002A08  5162               	movf	ringbuf_pop@rb& (0+255),w,b
  2334  002A0A  26D9               	addwf	fsr2l,f,c
  2335  002A0C  0100               	movlb	0	; () banked
  2336  002A0E  5163               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2337  002A10  22DA               	addwfc	fsr2h,f,c
  2338  002A12  50DF               	movf	indf2,w,c
  2339  002A14  0100               	movlb	0	; () banked
  2340  002A16  5D64               	subwf	??_ringbuf_pop& (0+255),w,b
  2341  002A18  A0D8               	btfss	status,0,c
  2342  002A1A  D00B               	goto	l4409
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;My_header\My_ringbuf.h: 50: rb->tail = 0;
  2346  002A1C  0100               	movlb	0	; () banked
  2347  002A1E  EE20 F004          	lfsr	2,4
  2348  002A22  0100               	movlb	0	; () banked
  2349  002A24  5162               	movf	ringbuf_pop@rb& (0+255),w,b
  2350  002A26  26D9               	addwf	fsr2l,f,c
  2351  002A28  0100               	movlb	0	; () banked
  2352  002A2A  5163               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
  2353  002A2C  22DA               	addwfc	fsr2h,f,c
  2354  002A2E  0E00               	movlw	0
  2355  002A30  6EDF               	movwf	indf2,c
  2356  002A32                     l4409:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;My_header\My_ringbuf.h: 51: }
  2360                           ;My_header\My_ringbuf.h: 52: return ret;
  2361  002A32  5022               	movf	ringbuf_pop@ret,w,c
  2362  002A34  0012               	return	
  2363  002A36                     l4415:
  2364                           
  2365                           ;My_header\My_ringbuf.h: 54: return 0;
  2366  002A36  0E00               	movlw	0
  2367  002A38  0012               	return	
  2368  002A3A                     __end_of_ringbuf_pop:
  2369                           	opt stack 0
  2370                           tblptru	equ	0xFF8
  2371                           tblptrh	equ	0xFF7
  2372                           tblptrl	equ	0xFF6
  2373                           tablat	equ	0xFF5
  2374                           prodh	equ	0xFF4
  2375                           prodl	equ	0xFF3
  2376                           intcon	equ	0xFF2
  2377                           postinc0	equ	0xFEE
  2378                           wreg	equ	0xFE8
  2379                           indf1	equ	0xFE7
  2380                           postdec1	equ	0xFE5
  2381                           fsr1h	equ	0xFE2
  2382                           fsr1l	equ	0xFE1
  2383                           indf2	equ	0xFDF
  2384                           postinc2	equ	0xFDE
  2385                           postdec2	equ	0xFDD
  2386                           fsr2h	equ	0xFDA
  2387                           fsr2l	equ	0xFD9
  2388                           status	equ	0xFD8
  2389                           
  2390 ;; *************** function _atoi *****************
  2391 ;; Defined at:
  2392 ;;		line 386 in file "../My_header\My_header.h"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  str             2   31[COMRAM] PTR const unsigned char 
  2395 ;;		 -> rx_operation@opland2(250), 
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;  ret             1    0[BANK0 ] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      unsigned char 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;Total ram usage:        4 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    5
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_rx_operation
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text4
  2422  003394                     __ptext4:
  2423                           	opt stack 0
  2424  003394                     _atoi:
  2425                           	opt stack 24
  2426                           
  2427                           ;My_header\My_header.h: 387: uint8_t ret = 0;
  2428                           
  2429                           ;incstack = 0
  2430  003394  0E00               	movlw	0
  2431  003396  0100               	movlb	0	; () banked
  2432  003398  6F60               	movwf	atoi@ret& (0+255),b
  2433                           
  2434                           ;My_header\My_header.h: 388: while (*str) {
  2435  00339A  D021               	goto	l4439
  2436  00339C                     l4429:
  2437                           
  2438                           ;My_header\My_header.h: 389: if (*str >= '0' && *str <= '9') {
  2439  00339C  C020  FFD9         	movff	atoi@str,fsr2l
  2440  0033A0  C021  FFDA         	movff	atoi@str+1,fsr2h
  2441  0033A4  0E2F               	movlw	47
  2442  0033A6  64DF               	cpfsgt	indf2,c
  2443  0033A8  D018               	goto	l4437
  2444  0033AA  C020  FFD9         	movff	atoi@str,fsr2l
  2445  0033AE  C021  FFDA         	movff	atoi@str+1,fsr2h
  2446  0033B2  50DF               	movf	indf2,w,c
  2447  0033B4  6E22               	movwf	??_atoi& (0+255),c
  2448  0033B6  0E3A               	movlw	58
  2449  0033B8  5C22               	subwf	??_atoi,w,c
  2450  0033BA  B0D8               	btfsc	status,0,c
  2451  0033BC  D00E               	goto	l4437
  2452                           
  2453                           ;My_header\My_header.h: 390: ret *= 10;
  2454  0033BE  0E0A               	movlw	10
  2455  0033C0  0100               	movlb	0	; () banked
  2456  0033C2  0360               	mulwf	atoi@ret& (0+255),b
  2457  0033C4  50F3               	movf	prodl,w,c
  2458  0033C6  0100               	movlb	0	; () banked
  2459  0033C8  6F60               	movwf	atoi@ret& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;My_header\My_header.h: 391: ret += *str - '0';
  2463  0033CA  C020  FFD9         	movff	atoi@str,fsr2l
  2464  0033CE  C021  FFDA         	movff	atoi@str+1,fsr2h
  2465  0033D2  50DF               	movf	indf2,w,c
  2466  0033D4  0FD0               	addlw	208
  2467  0033D6  0100               	movlb	0	; () banked
  2468  0033D8  2760               	addwf	atoi@ret& (0+255),f,b
  2469  0033DA                     l4437:
  2470                           
  2471                           ;My_header\My_header.h: 392: }
  2472                           ;My_header\My_header.h: 393: str++;
  2473  0033DA  4A20               	infsnz	atoi@str,f,c
  2474  0033DC  2A21               	incf	atoi@str+1,f,c
  2475  0033DE                     l4439:
  2476  0033DE  C020  FFD9         	movff	atoi@str,fsr2l
  2477  0033E2  C021  FFDA         	movff	atoi@str+1,fsr2h
  2478  0033E6  50DF               	movf	indf2,w,c
  2479  0033E8  A4D8               	btfss	status,2,c
  2480  0033EA  D7D8               	goto	l4429
  2481                           
  2482                           ;My_header\My_header.h: 394: }
  2483                           ;My_header\My_header.h: 395: return ret;
  2484  0033EC  0100               	movlb	0	; () banked
  2485  0033EE  5160               	movf	atoi@ret& (0+255),w,b
  2486  0033F0  0012               	return	
  2487  0033F2                     __end_of_atoi:
  2488                           	opt stack 0
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           prodh	equ	0xFF4
  2494                           prodl	equ	0xFF3
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           indf1	equ	0xFE7
  2499                           postdec1	equ	0xFE5
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           indf2	equ	0xFDF
  2503                           postinc2	equ	0xFDE
  2504                           postdec2	equ	0xFDD
  2505                           fsr2h	equ	0xFDA
  2506                           fsr2l	equ	0xFD9
  2507                           status	equ	0xFD8
  2508                           
  2509 ;; *************** function _RTCC_from_caltime *****************
  2510 ;; Defined at:
  2511 ;;		line 242 in file "../My_header\My_RTCC.h"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  ct              2   44[BANK0 ] PTR struct .
  2514 ;;		 -> caltime_now(7), 
  2515 ;;  ep              2   46[BANK0 ] PTR unsigned long 
  2516 ;;		 -> epoch_now(4), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2531 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;Total ram usage:        4 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    8
  2535 ;; This function calls:
  2536 ;;		_caltime_to_RTCC
  2537 ;;		_caltime_to_epoch
  2538 ;; This function is called by:
  2539 ;;		_rx_operation
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text5
  2544  0037E2                     __ptext5:
  2545                           	opt stack 0
  2546  0037E2                     _RTCC_from_caltime:
  2547                           	opt stack 21
  2548                           
  2549                           ;My_header\My_RTCC.h: 243: caltime_to_RTCC(ct);
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;incstack = 0
  2553  0037E2  0100               	movlb	0	; () banked
  2554  0037E4  C08D  F022         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
  2555  0037E8  0100               	movlb	0	; () banked
  2556  0037EA  C08C  F021         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
  2557  0037EE  EC1D  F015         	call	_caltime_to_RTCC	;wreg free
  2558                           
  2559                           ;My_header\My_RTCC.h: 244: caltime_to_epoch(ct, ep);
  2560  0037F2  0100               	movlb	0	; () banked
  2561  0037F4  C08D  F07A         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
  2562  0037F8  0100               	movlb	0	; () banked
  2563  0037FA  C08C  F079         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
  2564  0037FE  0100               	movlb	0	; () banked
  2565  003800  C08F  F07C         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
  2566  003804  0100               	movlb	0	; () banked
  2567  003806  C08E  F07B         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
  2568  00380A  ECA6  F009         	call	_caltime_to_epoch	;wreg free
  2569  00380E  0012               	return	
  2570  003810                     __end_of_RTCC_from_caltime:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           indf1	equ	0xFE7
  2582                           postdec1	equ	0xFE5
  2583                           fsr1h	equ	0xFE2
  2584                           fsr1l	equ	0xFE1
  2585                           indf2	equ	0xFDF
  2586                           postinc2	equ	0xFDE
  2587                           postdec2	equ	0xFDD
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592 ;; *************** function _print_time *****************
  2593 ;; Defined at:
  2594 ;;		line 136 in file "PIC18F27J53-RTCC01.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  row             1    wreg     unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  row             1   48[BANK0 ] unsigned char 
  2599 ;;  i               1   49[BANK0 ] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2613 ;;Total ram usage:        2 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:   10
  2616 ;; This function calls:
  2617 ;;		_tx_send
  2618 ;;		_tx_send_time
  2619 ;;		_tx_sends
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text6
  2626  003168                     __ptext6:
  2627                           	opt stack 0
  2628  003168                     _print_time:
  2629                           	opt stack 20
  2630                           
  2631                           ;incstack = 0
  2632                           ;print_time@row stored from wreg
  2633  003168  0100               	movlb	0	; () banked
  2634  00316A  6F90               	movwf	print_time@row& (0+255),b
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;PIC18F27J53-RTCC01.c: 137: uint8_t i;
  2638                           ;PIC18F27J53-RTCC01.c: 138: GIE = 0;
  2639  00316C  9EF2               	bcf	intcon,7,c	;volatile
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;PIC18F27J53-RTCC01.c: 139: for (i = 0; i < row; i++) tx_sends(cursor_down);
  2643  00316E  0E00               	movlw	0
  2644  003170  0100               	movlb	0	; () banked
  2645  003172  6F91               	movwf	print_time@i& (0+255),b
  2646  003174  D00A               	goto	l4789
  2647  003176                     l4785:
  2648                           
  2649                           ; BSR set to: 0
  2650  003176  0E00               	movlw	high _cursor_down
  2651  003178  0100               	movlb	0	; () banked
  2652  00317A  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2653  00317C  0E39               	movlw	low _cursor_down
  2654  00317E  0100               	movlb	0	; () banked
  2655  003180  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2656  003182  EC2B  F019         	call	_tx_sends	;wreg free
  2657  003186  0100               	movlb	0	; () banked
  2658  003188  2B91               	incf	print_time@i& (0+255),f,b
  2659  00318A                     l4789:
  2660                           
  2661                           ; BSR set to: 0
  2662  00318A  0100               	movlb	0	; () banked
  2663  00318C  5190               	movf	print_time@row& (0+255),w,b
  2664  00318E  0100               	movlb	0	; () banked
  2665  003190  5D91               	subwf	print_time@i& (0+255),w,b
  2666  003192  A0D8               	btfss	status,0,c
  2667  003194  D7F0               	goto	l4785
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;PIC18F27J53-RTCC01.c: 140: tx_send_time();
  2671                           
  2672                           ; BSR set to: 0
  2673  003196  ECD8  F010         	call	_tx_send_time	;wreg free
  2674                           
  2675                           ;PIC18F27J53-RTCC01.c: 141: for (i = 0; i < 26; i++) tx_send('\b');
  2676  00319A  0E00               	movlw	0
  2677  00319C  0100               	movlb	0	; () banked
  2678  00319E  6F91               	movwf	print_time@i& (0+255),b
  2679  0031A0  D005               	goto	L1
  2680  0031A2                     l4799:
  2681                           
  2682                           ; BSR set to: 0
  2683  0031A2  0E08               	movlw	8
  2684  0031A4  ECB8  F01C         	call	_tx_send
  2685  0031A8  0100               	movlb	0	; () banked
  2686  0031AA  2B91               	incf	print_time@i& (0+255),f,b
  2687  0031AC                     L1:
  2688                           
  2689                           ; BSR set to: 0
  2690  0031AC  0E19               	movlw	25
  2691  0031AE  0100               	movlb	0	; () banked
  2692  0031B0  6591               	cpfsgt	print_time@i& (0+255),b
  2693  0031B2  D7F7               	goto	l4799
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;PIC18F27J53-RTCC01.c: 142: for (i = 0; i < row; i++) tx_sends(cursor_up);
  2697                           
  2698                           ; BSR set to: 0
  2699  0031B4  0E00               	movlw	0
  2700  0031B6  0100               	movlb	0	; () banked
  2701  0031B8  6F91               	movwf	print_time@i& (0+255),b
  2702  0031BA  D00A               	goto	l4811
  2703  0031BC                     l4807:
  2704                           
  2705                           ; BSR set to: 0
  2706  0031BC  0E00               	movlw	high _cursor_up
  2707  0031BE  0100               	movlb	0	; () banked
  2708  0031C0  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2709  0031C2  0E3D               	movlw	low _cursor_up
  2710  0031C4  0100               	movlb	0	; () banked
  2711  0031C6  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2712  0031C8  EC2B  F019         	call	_tx_sends	;wreg free
  2713  0031CC  0100               	movlb	0	; () banked
  2714  0031CE  2B91               	incf	print_time@i& (0+255),f,b
  2715  0031D0                     l4811:
  2716                           
  2717                           ; BSR set to: 0
  2718  0031D0  0100               	movlb	0	; () banked
  2719  0031D2  5190               	movf	print_time@row& (0+255),w,b
  2720  0031D4  0100               	movlb	0	; () banked
  2721  0031D6  5D91               	subwf	print_time@i& (0+255),w,b
  2722  0031D8  A0D8               	btfss	status,0,c
  2723  0031DA  D7F0               	goto	l4807
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;PIC18F27J53-RTCC01.c: 143: GIE = 1;
  2727  0031DC  8EF2               	bsf	intcon,7,c	;volatile
  2728                           
  2729                           ; BSR set to: 0
  2730  0031DE  0012               	return	
  2731  0031E0                     __end_of_print_time:
  2732                           	opt stack 0
  2733                           tblptru	equ	0xFF8
  2734                           tblptrh	equ	0xFF7
  2735                           tblptrl	equ	0xFF6
  2736                           tablat	equ	0xFF5
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           intcon	equ	0xFF2
  2740                           postinc0	equ	0xFEE
  2741                           wreg	equ	0xFE8
  2742                           indf1	equ	0xFE7
  2743                           postdec1	equ	0xFE5
  2744                           fsr1h	equ	0xFE2
  2745                           fsr1l	equ	0xFE1
  2746                           indf2	equ	0xFDF
  2747                           postinc2	equ	0xFDE
  2748                           postdec2	equ	0xFDD
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function _tx_send_time *****************
  2754 ;; Defined at:
  2755 ;;		line 115 in file "PIC18F27J53-RTCC01.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    9
  2776 ;; This function calls:
  2777 ;;		_RTCC_from_RTCC
  2778 ;;		_tx_send
  2779 ;;		_tx_send_dec
  2780 ;;		_tx_sends
  2781 ;; This function is called by:
  2782 ;;		_print_time
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text7
  2787  0021B0                     __ptext7:
  2788                           	opt stack 0
  2789  0021B0                     _tx_send_time:
  2790                           	opt stack 20
  2791                           
  2792                           ;PIC18F27J53-RTCC01.c: 116: RTCC_from_RTCC(&caltime_now, &epoch_now);
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;incstack = 0
  2796  0021B0  0100               	movlb	0	; () banked
  2797  0021B2  0E00               	movlw	high _caltime_now
  2798  0021B4  0100               	movlb	0	; () banked
  2799  0021B6  6F8D               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  2800  0021B8  0100               	movlb	0	; () banked
  2801  0021BA  0ED6               	movlw	low _caltime_now
  2802  0021BC  0100               	movlb	0	; () banked
  2803  0021BE  6F8C               	movwf	RTCC_from_RTCC@ct& (0+255),b
  2804  0021C0  0100               	movlb	0	; () banked
  2805  0021C2  0E00               	movlw	high _epoch_now
  2806  0021C4  0100               	movlb	0	; () banked
  2807  0021C6  6F8F               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  2808  0021C8  0100               	movlb	0	; () banked
  2809  0021CA  0EDD               	movlw	low _epoch_now
  2810  0021CC  0100               	movlb	0	; () banked
  2811  0021CE  6F8E               	movwf	RTCC_from_RTCC@ep& (0+255),b
  2812  0021D0  EC36  F01C         	call	_RTCC_from_RTCC	;wreg free
  2813                           
  2814                           ;PIC18F27J53-RTCC01.c: 118: tx_send_dec(20, edit_flag.flag.YY);
  2815  0021D4  0E00               	movlw	0
  2816  0021D6  0100               	movlb	0	; () banked
  2817  0021D8  BBD3               	btfsc	_edit_flag& (0+255),5,b
  2818  0021DA  0E01               	movlw	1
  2819  0021DC  0100               	movlb	0	; () banked
  2820  0021DE  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2821  0021E0  0E14               	movlw	20
  2822  0021E2  ECF9  F019         	call	_tx_send_dec
  2823                           
  2824                           ;PIC18F27J53-RTCC01.c: 119: tx_send_dec(caltime_now.YY, edit_flag.flag.YY);
  2825  0021E6  0E00               	movlw	0
  2826  0021E8  0100               	movlb	0	; () banked
  2827  0021EA  BBD3               	btfsc	_edit_flag& (0+255),5,b
  2828  0021EC  0E01               	movlw	1
  2829  0021EE  0100               	movlb	0	; () banked
  2830  0021F0  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2831  0021F2  0100               	movlb	0	; () banked
  2832  0021F4  51DC               	movf	(_caltime_now+6)& (0+255),w,b
  2833  0021F6  ECF9  F019         	call	_tx_send_dec
  2834                           
  2835                           ;PIC18F27J53-RTCC01.c: 120: tx_sends("/");
  2836  0021FA  0E0F               	movlw	high STR_21
  2837  0021FC  0100               	movlb	0	; () banked
  2838  0021FE  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2839  002200  0E83               	movlw	low STR_21
  2840  002202  0100               	movlb	0	; () banked
  2841  002204  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2842  002206  EC2B  F019         	call	_tx_sends	;wreg free
  2843                           
  2844                           ;PIC18F27J53-RTCC01.c: 121: tx_send_dec(caltime_now.MM, edit_flag.flag.MM);
  2845  00220A  0E00               	movlw	0
  2846  00220C  0100               	movlb	0	; () banked
  2847  00220E  B9D3               	btfsc	_edit_flag& (0+255),4,b
  2848  002210  0E01               	movlw	1
  2849  002212  0100               	movlb	0	; () banked
  2850  002214  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2851  002216  0100               	movlb	0	; () banked
  2852  002218  51DB               	movf	(_caltime_now+5)& (0+255),w,b
  2853  00221A  ECF9  F019         	call	_tx_send_dec
  2854                           
  2855                           ;PIC18F27J53-RTCC01.c: 122: tx_sends("/");
  2856  00221E  0E0F               	movlw	high STR_21
  2857  002220  0100               	movlb	0	; () banked
  2858  002222  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2859  002224  0E83               	movlw	low STR_21
  2860  002226  0100               	movlb	0	; () banked
  2861  002228  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2862  00222A  EC2B  F019         	call	_tx_sends	;wreg free
  2863                           
  2864                           ;PIC18F27J53-RTCC01.c: 123: tx_send_dec(caltime_now.DD, edit_flag.flag.DD);
  2865  00222E  0E00               	movlw	0
  2866  002230  0100               	movlb	0	; () banked
  2867  002232  B7D3               	btfsc	_edit_flag& (0+255),3,b
  2868  002234  0E01               	movlw	1
  2869  002236  0100               	movlb	0	; () banked
  2870  002238  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2871  00223A  0100               	movlb	0	; () banked
  2872  00223C  51DA               	movf	(_caltime_now+4)& (0+255),w,b
  2873  00223E  ECF9  F019         	call	_tx_send_dec
  2874                           
  2875                           ;PIC18F27J53-RTCC01.c: 124: tx_sends(" (");
  2876  002242  0E0F               	movlw	high STR_23
  2877  002244  0100               	movlb	0	; () banked
  2878  002246  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2879  002248  0E7B               	movlw	low STR_23
  2880  00224A  0100               	movlb	0	; () banked
  2881  00224C  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2882  00224E  EC2B  F019         	call	_tx_sends	;wreg free
  2883                           
  2884                           ;PIC18F27J53-RTCC01.c: 125: tx_sends(weekday_char[caltime_now.EE]);
  2885  002252  0100               	movlb	0	; () banked
  2886  002254  51D9               	movf	(_caltime_now+3)& (0+255),w,b
  2887  002256  0D02               	mullw	2
  2888  002258  0100               	movlb	0	; () banked
  2889  00225A  0EAB               	movlw	low _weekday_char
  2890  00225C  24F3               	addwf	prodl,w,c
  2891  00225E  6ED9               	movwf	fsr2l,c
  2892  002260  0100               	movlb	0	; () banked
  2893  002262  0E00               	movlw	high _weekday_char
  2894  002264  20F4               	addwfc	prodh,w,c
  2895  002266  6EDA               	movwf	fsr2h,c
  2896  002268  0100               	movlb	0	; () banked
  2897  00226A  CFDE F06A          	movff	postinc2,tx_sends@asciicode
  2898  00226E  0100               	movlb	0	; () banked
  2899  002270  CFDD F06B          	movff	postdec2,tx_sends@asciicode+1
  2900  002274  EC2B  F019         	call	_tx_sends	;wreg free
  2901                           
  2902                           ;PIC18F27J53-RTCC01.c: 126: tx_sends(") ");
  2903  002278  0E0F               	movlw	high STR_24
  2904  00227A  0100               	movlb	0	; () banked
  2905  00227C  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2906  00227E  0E78               	movlw	low STR_24
  2907  002280  0100               	movlb	0	; () banked
  2908  002282  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2909  002284  EC2B  F019         	call	_tx_sends	;wreg free
  2910                           
  2911                           ;PIC18F27J53-RTCC01.c: 127: tx_send_dec(caltime_now.hh, edit_flag.flag.hh);
  2912  002288  0E00               	movlw	0
  2913  00228A  0100               	movlb	0	; () banked
  2914  00228C  B5D3               	btfsc	_edit_flag& (0+255),2,b
  2915  00228E  0E01               	movlw	1
  2916  002290  0100               	movlb	0	; () banked
  2917  002292  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2918  002294  0100               	movlb	0	; () banked
  2919  002296  51D8               	movf	(_caltime_now+2)& (0+255),w,b
  2920  002298  ECF9  F019         	call	_tx_send_dec
  2921                           
  2922                           ;PIC18F27J53-RTCC01.c: 128: if (colon)tx_send(':');
  2923  00229C  0100               	movlb	0	; () banked
  2924  00229E  51D2               	movf	_colon& (0+255),w,b
  2925  0022A0  B4D8               	btfsc	status,2,c
  2926  0022A2  D004               	goto	l4521
  2927                           
  2928                           ; BSR set to: 0
  2929  0022A4  0E3A               	movlw	58
  2930  0022A6  ECB8  F01C         	call	_tx_send
  2931  0022AA  D003               	goto	l4523
  2932  0022AC                     l4521:
  2933                           
  2934                           ;PIC18F27J53-RTCC01.c: 129: else tx_send(' ');
  2935  0022AC  0E20               	movlw	32
  2936  0022AE  ECB8  F01C         	call	_tx_send
  2937  0022B2                     l4523:
  2938                           
  2939                           ;PIC18F27J53-RTCC01.c: 130: tx_send_dec(caltime_now.mm, edit_flag.flag.mm);
  2940  0022B2  0E00               	movlw	0
  2941  0022B4  0100               	movlb	0	; () banked
  2942  0022B6  B3D3               	btfsc	_edit_flag& (0+255),1,b
  2943  0022B8  0E01               	movlw	1
  2944  0022BA  0100               	movlb	0	; () banked
  2945  0022BC  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2946  0022BE  0100               	movlb	0	; () banked
  2947  0022C0  51D7               	movf	(_caltime_now+1)& (0+255),w,b
  2948  0022C2  ECF9  F019         	call	_tx_send_dec
  2949                           
  2950                           ;PIC18F27J53-RTCC01.c: 131: tx_sends("-");
  2951  0022C6  0E0F               	movlw	high STR_25
  2952  0022C8  0100               	movlb	0	; () banked
  2953  0022CA  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2954  0022CC  0E81               	movlw	low STR_25
  2955  0022CE  0100               	movlb	0	; () banked
  2956  0022D0  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2957  0022D2  EC2B  F019         	call	_tx_sends	;wreg free
  2958                           
  2959                           ;PIC18F27J53-RTCC01.c: 132: tx_send_dec(caltime_now.ss, edit_flag.flag.ss);
  2960  0022D6  0E00               	movlw	0
  2961  0022D8  0100               	movlb	0	; () banked
  2962  0022DA  B1D3               	btfsc	_edit_flag& (0+255),0,b
  2963  0022DC  0E01               	movlw	1
  2964  0022DE  0100               	movlb	0	; () banked
  2965  0022E0  6F6C               	movwf	tx_send_dec@edit& (0+255),b
  2966  0022E2  0100               	movlb	0	; () banked
  2967  0022E4  51D6               	movf	_caltime_now& (0+255),w,b
  2968  0022E6  ECF9  F019         	call	_tx_send_dec
  2969                           
  2970                           ;PIC18F27J53-RTCC01.c: 133: tx_sends(" ");
  2971  0022EA  0E0F               	movlw	high (STR_15+1)
  2972  0022EC  0100               	movlb	0	; () banked
  2973  0022EE  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  2974  0022F0  0E76               	movlw	low (STR_15+1)
  2975  0022F2  0100               	movlb	0	; () banked
  2976  0022F4  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  2977  0022F6  EC2B  F019         	call	_tx_sends	;wreg free
  2978  0022FA  0012               	return	
  2979  0022FC                     __end_of_tx_send_time:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           intcon	equ	0xFF2
  2988                           postinc0	equ	0xFEE
  2989                           wreg	equ	0xFE8
  2990                           indf1	equ	0xFE7
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           indf2	equ	0xFDF
  2995                           postinc2	equ	0xFDE
  2996                           postdec2	equ	0xFDD
  2997                           fsr2h	equ	0xFDA
  2998                           fsr2l	equ	0xFD9
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _tx_send_dec *****************
  3002 ;; Defined at:
  3003 ;;		line 108 in file "PIC18F27J53-RTCC01.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  dec             1    wreg     unsigned char 
  3006 ;;  edit            1   12[BANK0 ] unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  dec             1   23[BANK0 ] unsigned char 
  3009 ;;  str            10   13[BANK0 ] unsigned char [10]
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3019 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3023 ;;Total ram usage:       12 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    8
  3026 ;; This function calls:
  3027 ;;		_tx_sends
  3028 ;;		_utoa
  3029 ;; This function is called by:
  3030 ;;		_tx_send_time
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text8
  3035  0033F2                     __ptext8:
  3036                           	opt stack 0
  3037  0033F2                     _tx_send_dec:
  3038                           	opt stack 20
  3039                           
  3040                           ;incstack = 0
  3041                           ;tx_send_dec@dec stored from wreg
  3042  0033F2  0100               	movlb	0	; () banked
  3043  0033F4  6F77               	movwf	tx_send_dec@dec& (0+255),b
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;PIC18F27J53-RTCC01.c: 109: uint8_t str[10];
  3047                           ;PIC18F27J53-RTCC01.c: 110: utoa(&str, dec, 2);
  3048  0033F6  0100               	movlb	0	; () banked
  3049  0033F8  0E00               	movlw	high tx_send_dec@str
  3050  0033FA  0100               	movlb	0	; () banked
  3051  0033FC  6F65               	movwf	(utoa@str+1)& (0+255),b
  3052  0033FE  0100               	movlb	0	; () banked
  3053  003400  0E6D               	movlw	low tx_send_dec@str
  3054  003402  0100               	movlb	0	; () banked
  3055  003404  6F64               	movwf	utoa@str& (0+255),b
  3056  003406  0100               	movlb	0	; () banked
  3057  003408  C077  F066         	movff	tx_send_dec@dec,utoa@value
  3058  00340C  0100               	movlb	0	; () banked
  3059  00340E  6B67               	clrf	(utoa@value+1)& (0+255),b
  3060  003410  0E02               	movlw	2
  3061  003412  0100               	movlb	0	; () banked
  3062  003414  6F68               	movwf	utoa@digits& (0+255),b
  3063  003416  EC88  F016         	call	_utoa	;wreg free
  3064                           
  3065                           ;PIC18F27J53-RTCC01.c: 111: if (edit && RTCCFGbits.HALFSEC)tx_sends("  ");
  3066  00341A  0100               	movlb	0	; () banked
  3067  00341C  516C               	movf	tx_send_dec@edit& (0+255),w,b
  3068  00341E  B4D8               	btfsc	status,2,c
  3069  003420  D00C               	goto	l4379
  3070                           
  3071                           ; BSR set to: 0
  3072  003422  010F               	movlb	15	; () banked
  3073  003424  A73F               	btfss	63,3,b	;volatile
  3074  003426  D009               	goto	l4379
  3075                           
  3076                           ; BSR set to: 15
  3077  003428  0E0F               	movlw	high STR_15
  3078  00342A  0100               	movlb	0	; () banked
  3079  00342C  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3080  00342E  0E75               	movlw	low STR_15
  3081  003430  0100               	movlb	0	; () banked
  3082  003432  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3083  003434  EC2B  F019         	call	_tx_sends	;wreg free
  3084  003438  0012               	return	
  3085  00343A                     l4379:
  3086                           
  3087                           ;PIC18F27J53-RTCC01.c: 112: else tx_sends(str);
  3088  00343A  0100               	movlb	0	; () banked
  3089  00343C  0E00               	movlw	high tx_send_dec@str
  3090  00343E  0100               	movlb	0	; () banked
  3091  003440  6F6B               	movwf	(tx_sends@asciicode+1)& (0+255),b
  3092  003442  0100               	movlb	0	; () banked
  3093  003444  0E6D               	movlw	low tx_send_dec@str
  3094  003446  0100               	movlb	0	; () banked
  3095  003448  6F6A               	movwf	tx_sends@asciicode& (0+255),b
  3096  00344A  EC2B  F019         	call	_tx_sends	;wreg free
  3097  00344E  0012               	return	
  3098  003450                     __end_of_tx_send_dec:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           intcon	equ	0xFF2
  3107                           postinc0	equ	0xFEE
  3108                           wreg	equ	0xFE8
  3109                           indf1	equ	0xFE7
  3110                           postdec1	equ	0xFE5
  3111                           fsr1h	equ	0xFE2
  3112                           fsr1l	equ	0xFE1
  3113                           indf2	equ	0xFDF
  3114                           postinc2	equ	0xFDE
  3115                           postdec2	equ	0xFDD
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _tx_sends *****************
  3121 ;; Defined at:
  3122 ;;		line 239 in file "../My_header\My_header.h"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  asciicode       2   10[BANK0 ] PTR const unsigned char 
  3125 ;;		 -> STR_36(4), STR_26(2), STR_25(2), STR_24(3), 
  3126 ;;		 -> STR_23(3), STR_22(2), STR_21(2), STR_20(3), 
  3127 ;;		 -> tx_send_dec@str(10), cursor_up(4), STR_19(3), STR_18(6), 
  3128 ;;		 -> STR_17(6), STR_16(3), cursor_right(4), cursor_down(4), 
  3129 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  3130 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;Total ram usage:        2 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    7
  3149 ;; This function calls:
  3150 ;;		_ringbuf_push
  3151 ;; This function is called by:
  3152 ;;		_tx_send_dec
  3153 ;;		_tx_send_time
  3154 ;;		_print_time
  3155 ;;		_main
  3156 ;;		_print
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text9
  3161  003256                     __ptext9:
  3162                           	opt stack 0
  3163  003256                     _tx_sends:
  3164                           	opt stack 23
  3165                           
  3166                           ;My_header\My_header.h: 240: while (*asciicode) {
  3167                           
  3168                           ;incstack = 0
  3169  003256  D020               	goto	l4177
  3170  003258                     l4173:
  3171                           
  3172                           ;My_header\My_header.h: 241: ringbuf_push(&tx_buf, *asciicode++);
  3173  003258  0E00               	movlw	high _tx_buf
  3174  00325A  0100               	movlb	0	; () banked
  3175  00325C  6F63               	movwf	(ringbuf_push@rb+1)& (0+255),b
  3176  00325E  0E2B               	movlw	low _tx_buf
  3177  003260  0100               	movlb	0	; () banked
  3178  003262  6F62               	movwf	ringbuf_push@rb& (0+255),b
  3179  003264  0100               	movlb	0	; () banked
  3180  003266  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  3181  00326A  0100               	movlb	0	; () banked
  3182  00326C  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3183  003270  0E00               	movlw	low (__smallconst shr (0+16))
  3184  003272  6EF8               	movwf	tblptru,c
  3185  003274  0E0E               	movlw	(high __ramtop+-1)
  3186  003276  64F7               	cpfsgt	tblptrh,c
  3187  003278  D003               	bra	u3897
  3188  00327A  0008               	tblrd		*
  3189  00327C  50F5               	movf	tablat,w,c
  3190  00327E  D005               	bra	u3890
  3191  003280                     u3897:
  3192  003280  CFF6 FFE1          	movff	tblptrl,fsr1l
  3193  003284  CFF7 FFE2          	movff	tblptrh,fsr1h
  3194  003288  50E7               	movf	indf1,w,c
  3195  00328A                     u3890:
  3196  00328A  0100               	movlb	0	; () banked
  3197  00328C  6F64               	movwf	ringbuf_push@asciicode& (0+255),b
  3198  00328E  EC12  F012         	call	_ringbuf_push	;wreg free
  3199  003292  0100               	movlb	0	; () banked
  3200  003294  4B6A               	infsnz	tx_sends@asciicode& (0+255),f,b
  3201  003296  2B6B               	incf	(tx_sends@asciicode+1)& (0+255),f,b
  3202  003298                     l4177:
  3203  003298  0100               	movlb	0	; () banked
  3204  00329A  C06A  FFF6         	movff	tx_sends@asciicode,tblptrl
  3205  00329E  0100               	movlb	0	; () banked
  3206  0032A0  C06B  FFF7         	movff	tx_sends@asciicode+1,tblptrh
  3207  0032A4  0E00               	movlw	low (__smallconst shr (0+16))
  3208  0032A6  6EF8               	movwf	tblptru,c
  3209  0032A8  0E0E               	movlw	(high __ramtop+-1)
  3210  0032AA  64F7               	cpfsgt	tblptrh,c
  3211  0032AC  D003               	bra	u3907
  3212  0032AE  0008               	tblrd		*
  3213  0032B0  50F5               	movf	tablat,w,c
  3214  0032B2  D005               	bra	u3900
  3215  0032B4                     u3907:
  3216  0032B4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3217  0032B8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3218  0032BC  50E7               	movf	indf1,w,c
  3219  0032BE                     u3900:
  3220  0032BE  0900               	iorlw	0
  3221  0032C0  A4D8               	btfss	status,2,c
  3222  0032C2  D7CA               	goto	l4173
  3223                           
  3224                           ;My_header\My_header.h: 242: }
  3225                           ;My_header\My_header.h: 243: PIE1bits.TX1IE = 1;
  3226  0032C4  889D               	bsf	3997,4,c	;volatile
  3227  0032C6  0012               	return	
  3228  0032C8                     __end_of_tx_sends:
  3229                           	opt stack 0
  3230                           tblptru	equ	0xFF8
  3231                           tblptrh	equ	0xFF7
  3232                           tblptrl	equ	0xFF6
  3233                           tablat	equ	0xFF5
  3234                           prodh	equ	0xFF4
  3235                           prodl	equ	0xFF3
  3236                           intcon	equ	0xFF2
  3237                           postinc0	equ	0xFEE
  3238                           wreg	equ	0xFE8
  3239                           indf1	equ	0xFE7
  3240                           postdec1	equ	0xFE5
  3241                           fsr1h	equ	0xFE2
  3242                           fsr1l	equ	0xFE1
  3243                           indf2	equ	0xFDF
  3244                           postinc2	equ	0xFDE
  3245                           postdec2	equ	0xFDD
  3246                           fsr2h	equ	0xFDA
  3247                           fsr2l	equ	0xFD9
  3248                           status	equ	0xFD8
  3249                           
  3250 ;; *************** function _tx_send *****************
  3251 ;; Defined at:
  3252 ;;		line 234 in file "../My_header\My_header.h"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  asciicode       1    wreg     const unsigned char 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  asciicode       1   33[COMRAM] const unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;		None               void
  3259 ;; Registers used:
  3260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;Total ram usage:        1 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    7
  3273 ;; This function calls:
  3274 ;;		_ringbuf_push
  3275 ;; This function is called by:
  3276 ;;		_tx_send_time
  3277 ;;		_print_time
  3278 ;;		_tx_sendn
  3279 ;;		_print
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text10
  3284  003970                     __ptext10:
  3285                           	opt stack 0
  3286  003970                     _tx_send:
  3287                           	opt stack 21
  3288                           
  3289                           ;incstack = 0
  3290                           ;tx_send@asciicode stored from wreg
  3291  003970  6E22               	movwf	tx_send@asciicode,c
  3292                           
  3293                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
  3294  003972  0E00               	movlw	high _tx_buf
  3295  003974  0100               	movlb	0	; () banked
  3296  003976  6F63               	movwf	(ringbuf_push@rb+1)& (0+255),b
  3297  003978  0E2B               	movlw	low _tx_buf
  3298  00397A  0100               	movlb	0	; () banked
  3299  00397C  6F62               	movwf	ringbuf_push@rb& (0+255),b
  3300  00397E  C022  F064         	movff	tx_send@asciicode,ringbuf_push@asciicode
  3301  003982  EC12  F012         	call	_ringbuf_push	;wreg free
  3302                           
  3303                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
  3304  003986  889D               	bsf	3997,4,c	;volatile
  3305  003988  0012               	return	
  3306  00398A                     __end_of_tx_send:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           indf1	equ	0xFE7
  3318                           postdec1	equ	0xFE5
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           fsr2h	equ	0xFDA
  3325                           fsr2l	equ	0xFD9
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _ringbuf_push *****************
  3329 ;; Defined at:
  3330 ;;		line 37 in file "../My_header\My_ringbuf.h"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  rb              2    2[BANK0 ] PTR struct ringbuf
  3333 ;;		 -> rx_buf(5), tx_buf(5), 
  3334 ;;  asciicode       1    4[BANK0 ] unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3346 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;Total ram usage:        8 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    6
  3353 ;; This function calls:
  3354 ;;		_ringbuf_num
  3355 ;; This function is called by:
  3356 ;;		_tx_send
  3357 ;;		_tx_sends
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text11
  3362  002424                     __ptext11:
  3363                           	opt stack 0
  3364  002424                     _ringbuf_push:
  3365                           	opt stack 23
  3366                           
  3367                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
  3368                           
  3369                           ;incstack = 0
  3370  002424  0100               	movlb	0	; () banked
  3371  002426  C063  F021         	movff	ringbuf_push@rb+1,ringbuf_num@rb+1
  3372  00242A  0100               	movlb	0	; () banked
  3373  00242C  C062  F020         	movff	ringbuf_push@rb,ringbuf_num@rb
  3374  002430  ECAC  F017         	call	_ringbuf_num	;wreg free
  3375  002434  0100               	movlb	0	; () banked
  3376  002436  6F65               	movwf	??_ringbuf_push& (0+255),b
  3377  002438  0100               	movlb	0	; () banked
  3378  00243A  EE20 F002          	lfsr	2,2
  3379  00243E  0100               	movlb	0	; () banked
  3380  002440  5162               	movf	ringbuf_push@rb& (0+255),w,b
  3381  002442  26D9               	addwf	fsr2l,f,c
  3382  002444  0100               	movlb	0	; () banked
  3383  002446  5163               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  3384  002448  22DA               	addwfc	fsr2h,f,c
  3385  00244A  50DF               	movf	indf2,w,c
  3386  00244C  0100               	movlb	0	; () banked
  3387  00244E  5D65               	subwf	??_ringbuf_push& (0+255),w,b
  3388  002450  B0D8               	btfsc	status,0,c
  3389  002452  0012               	return	
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
  3393  002454  0100               	movlb	0	; () banked
  3394  002456  EE20 F003          	lfsr	2,3
  3395  00245A  0100               	movlb	0	; () banked
  3396  00245C  5162               	movf	ringbuf_push@rb& (0+255),w,b
  3397  00245E  26D9               	addwf	fsr2l,f,c
  3398  002460  0100               	movlb	0	; () banked
  3399  002462  5163               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  3400  002464  22DA               	addwfc	fsr2h,f,c
  3401  002466  50DF               	movf	indf2,w,c
  3402  002468  0100               	movlb	0	; () banked
  3403  00246A  6F65               	movwf	??_ringbuf_push& (0+255),b
  3404  00246C  0100               	movlb	0	; () banked
  3405  00246E  5165               	movf	??_ringbuf_push& (0+255),w,b
  3406  002470  0D01               	mullw	1
  3407  002472  C062  FFD9         	movff	ringbuf_push@rb,fsr2l
  3408  002476  C063  FFDA         	movff	ringbuf_push@rb+1,fsr2h
  3409  00247A  CFDE F066          	movff	postinc2,??_ringbuf_push+1
  3410  00247E  CFDD F067          	movff	postdec2,??_ringbuf_push+2
  3411  002482  50F3               	movf	prodl,w,c
  3412  002484  0100               	movlb	0	; () banked
  3413  002486  2566               	addwf	(??_ringbuf_push+1)& (0+255),w,b
  3414  002488  6ED9               	movwf	fsr2l,c
  3415  00248A  50F4               	movf	prodh,w,c
  3416  00248C  0100               	movlb	0	; () banked
  3417  00248E  2167               	addwfc	(??_ringbuf_push+2)& (0+255),w,b
  3418  002490  6EDA               	movwf	fsr2h,c
  3419  002492  0100               	movlb	0	; () banked
  3420  002494  C064  FFDF         	movff	ringbuf_push@asciicode,indf2
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
  3424  002498  0100               	movlb	0	; () banked
  3425  00249A  EE20 F002          	lfsr	2,2
  3426  00249E  0100               	movlb	0	; () banked
  3427  0024A0  5162               	movf	ringbuf_push@rb& (0+255),w,b
  3428  0024A2  26D9               	addwf	fsr2l,f,c
  3429  0024A4  0100               	movlb	0	; () banked
  3430  0024A6  5163               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  3431  0024A8  22DA               	addwfc	fsr2h,f,c
  3432  0024AA  50DF               	movf	indf2,w,c
  3433  0024AC  0100               	movlb	0	; () banked
  3434  0024AE  6F65               	movwf	??_ringbuf_push& (0+255),b
  3435  0024B0  6B66               	clrf	(??_ringbuf_push+1)& (0+255),b
  3436  0024B2  0100               	movlb	0	; () banked
  3437  0024B4  EE20 F003          	lfsr	2,3
  3438  0024B8  0100               	movlb	0	; () banked
  3439  0024BA  5162               	movf	ringbuf_push@rb& (0+255),w,b
  3440  0024BC  26D9               	addwf	fsr2l,f,c
  3441  0024BE  0100               	movlb	0	; () banked
  3442  0024C0  5163               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  3443  0024C2  22DA               	addwfc	fsr2h,f,c
  3444  0024C4  50DF               	movf	indf2,w,c
  3445  0024C6  0100               	movlb	0	; () banked
  3446  0024C8  6F67               	movwf	(??_ringbuf_push+2)& (0+255),b
  3447  0024CA  6B68               	clrf	(??_ringbuf_push+3)& (0+255),b
  3448  0024CC  0E01               	movlw	1
  3449  0024CE  0100               	movlb	0	; () banked
  3450  0024D0  2767               	addwf	(??_ringbuf_push+2)& (0+255),f,b
  3451  0024D2  0E00               	movlw	0
  3452  0024D4  2368               	addwfc	(??_ringbuf_push+3)& (0+255),f,b
  3453  0024D6  0100               	movlb	0	; () banked
  3454  0024D8  5168               	movf	(??_ringbuf_push+3)& (0+255),w,b
  3455  0024DA  0A80               	xorlw	128
  3456  0024DC  0100               	movlb	0	; () banked
  3457  0024DE  6F69               	movwf	(??_ringbuf_push+4)& (0+255),b
  3458  0024E0  0100               	movlb	0	; () banked
  3459  0024E2  5165               	movf	??_ringbuf_push& (0+255),w,b
  3460  0024E4  0100               	movlb	0	; () banked
  3461  0024E6  5D67               	subwf	(??_ringbuf_push+2)& (0+255),w,b
  3462  0024E8  0100               	movlb	0	; () banked
  3463  0024EA  5166               	movf	(??_ringbuf_push+1)& (0+255),w,b
  3464  0024EC  0A80               	xorlw	128
  3465  0024EE  0100               	movlb	0	; () banked
  3466  0024F0  5969               	subwfb	(??_ringbuf_push+4)& (0+255),w,b
  3467  0024F2  B0D8               	btfsc	status,0,c
  3468  0024F4  D00B               	goto	l4017
  3469                           
  3470                           ; BSR set to: 0
  3471  0024F6  0100               	movlb	0	; () banked
  3472  0024F8  EE20 F003          	lfsr	2,3
  3473  0024FC  0100               	movlb	0	; () banked
  3474  0024FE  5162               	movf	ringbuf_push@rb& (0+255),w,b
  3475  002500  26D9               	addwf	fsr2l,f,c
  3476  002502  0100               	movlb	0	; () banked
  3477  002504  5163               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  3478  002506  22DA               	addwfc	fsr2h,f,c
  3479  002508  2ADF               	incf	indf2,f,c
  3480  00250A  0012               	return	
  3481  00250C                     l4017:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
  3485  00250C  0100               	movlb	0	; () banked
  3486  00250E  EE20 F003          	lfsr	2,3
  3487  002512  0100               	movlb	0	; () banked
  3488  002514  5162               	movf	ringbuf_push@rb& (0+255),w,b
  3489  002516  26D9               	addwf	fsr2l,f,c
  3490  002518  0100               	movlb	0	; () banked
  3491  00251A  5163               	movf	(ringbuf_push@rb+1)& (0+255),w,b
  3492  00251C  22DA               	addwfc	fsr2h,f,c
  3493  00251E  0E00               	movlw	0
  3494  002520  6EDF               	movwf	indf2,c
  3495  002522  0012               	return	
  3496  002524                     __end_of_ringbuf_push:
  3497                           	opt stack 0
  3498                           tblptru	equ	0xFF8
  3499                           tblptrh	equ	0xFF7
  3500                           tblptrl	equ	0xFF6
  3501                           tablat	equ	0xFF5
  3502                           prodh	equ	0xFF4
  3503                           prodl	equ	0xFF3
  3504                           intcon	equ	0xFF2
  3505                           postinc0	equ	0xFEE
  3506                           wreg	equ	0xFE8
  3507                           indf1	equ	0xFE7
  3508                           postdec1	equ	0xFE5
  3509                           fsr1h	equ	0xFE2
  3510                           fsr1l	equ	0xFE1
  3511                           indf2	equ	0xFDF
  3512                           postinc2	equ	0xFDE
  3513                           postdec2	equ	0xFDD
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _ringbuf_num *****************
  3519 ;; Defined at:
  3520 ;;		line 29 in file "../My_header\My_ringbuf.h"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  rb              2   31[COMRAM] PTR struct ringbuf
  3523 ;;		 -> rx_buf(5), tx_buf(5), 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      unsigned char 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3538 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3539 ;;Total ram usage:        4 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    5
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_ringbuf_push
  3546 ;;		_ringbuf_pop
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text12
  3551  002F58                     __ptext12:
  3552                           	opt stack 0
  3553  002F58                     _ringbuf_num:
  3554                           	opt stack 23
  3555                           
  3556                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;incstack = 0
  3560  002F58  EE20 F003          	lfsr	2,3
  3561  002F5C  5020               	movf	ringbuf_num@rb,w,c
  3562  002F5E  26D9               	addwf	fsr2l,f,c
  3563  002F60  5021               	movf	ringbuf_num@rb+1,w,c
  3564  002F62  22DA               	addwfc	fsr2h,f,c
  3565  002F64  50DF               	movf	indf2,w,c
  3566  002F66  0100               	movlb	0	; () banked
  3567  002F68  6F60               	movwf	??_ringbuf_num& (0+255),b
  3568  002F6A  EE20 F004          	lfsr	2,4
  3569  002F6E  5020               	movf	ringbuf_num@rb,w,c
  3570  002F70  26D9               	addwf	fsr2l,f,c
  3571  002F72  5021               	movf	ringbuf_num@rb+1,w,c
  3572  002F74  22DA               	addwfc	fsr2h,f,c
  3573  002F76  50DF               	movf	indf2,w,c
  3574  002F78  0100               	movlb	0	; () banked
  3575  002F7A  5D60               	subwf	??_ringbuf_num& (0+255),w,b
  3576  002F7C  A0D8               	btfss	status,0,c
  3577  002F7E  D014               	goto	l3965
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
  3581  002F80  EE20 F003          	lfsr	2,3
  3582  002F84  5020               	movf	ringbuf_num@rb,w,c
  3583  002F86  26D9               	addwf	fsr2l,f,c
  3584  002F88  5021               	movf	ringbuf_num@rb+1,w,c
  3585  002F8A  22DA               	addwfc	fsr2h,f,c
  3586  002F8C  50DF               	movf	indf2,w,c
  3587  002F8E  0100               	movlb	0	; () banked
  3588  002F90  6F60               	movwf	??_ringbuf_num& (0+255),b
  3589  002F92  EE20 F004          	lfsr	2,4
  3590  002F96  5020               	movf	ringbuf_num@rb,w,c
  3591  002F98  26D9               	addwf	fsr2l,f,c
  3592  002F9A  5021               	movf	ringbuf_num@rb+1,w,c
  3593  002F9C  22DA               	addwfc	fsr2h,f,c
  3594  002F9E  50DF               	movf	indf2,w,c
  3595  002FA0  0800               	sublw	0
  3596  002FA2  0100               	movlb	0	; () banked
  3597  002FA4  2560               	addwf	??_ringbuf_num& (0+255),w,b
  3598  002FA6  0012               	return	
  3599  002FA8                     l3965:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
  3603  002FA8  EE20 F003          	lfsr	2,3
  3604  002FAC  5020               	movf	ringbuf_num@rb,w,c
  3605  002FAE  26D9               	addwf	fsr2l,f,c
  3606  002FB0  5021               	movf	ringbuf_num@rb+1,w,c
  3607  002FB2  22DA               	addwfc	fsr2h,f,c
  3608  002FB4  50DF               	movf	indf2,w,c
  3609  002FB6  0100               	movlb	0	; () banked
  3610  002FB8  6F60               	movwf	??_ringbuf_num& (0+255),b
  3611  002FBA  EE20 F002          	lfsr	2,2
  3612  002FBE  5020               	movf	ringbuf_num@rb,w,c
  3613  002FC0  26D9               	addwf	fsr2l,f,c
  3614  002FC2  5021               	movf	ringbuf_num@rb+1,w,c
  3615  002FC4  22DA               	addwfc	fsr2h,f,c
  3616  002FC6  50DF               	movf	indf2,w,c
  3617  002FC8  0100               	movlb	0	; () banked
  3618  002FCA  6F61               	movwf	(??_ringbuf_num+1)& (0+255),b
  3619  002FCC  EE20 F004          	lfsr	2,4
  3620  002FD0  5020               	movf	ringbuf_num@rb,w,c
  3621  002FD2  26D9               	addwf	fsr2l,f,c
  3622  002FD4  5021               	movf	ringbuf_num@rb+1,w,c
  3623  002FD6  22DA               	addwfc	fsr2h,f,c
  3624  002FD8  50DF               	movf	indf2,w,c
  3625  002FDA  0800               	sublw	0
  3626  002FDC  0100               	movlb	0	; () banked
  3627  002FDE  2561               	addwf	(??_ringbuf_num+1)& (0+255),w,b
  3628  002FE0  0100               	movlb	0	; () banked
  3629  002FE2  2560               	addwf	??_ringbuf_num& (0+255),w,b
  3630  002FE4  0012               	return	
  3631  002FE6                     __end_of_ringbuf_num:
  3632                           	opt stack 0
  3633                           tblptru	equ	0xFF8
  3634                           tblptrh	equ	0xFF7
  3635                           tblptrl	equ	0xFF6
  3636                           tablat	equ	0xFF5
  3637                           prodh	equ	0xFF4
  3638                           prodl	equ	0xFF3
  3639                           intcon	equ	0xFF2
  3640                           postinc0	equ	0xFEE
  3641                           wreg	equ	0xFE8
  3642                           indf1	equ	0xFE7
  3643                           postdec1	equ	0xFE5
  3644                           fsr1h	equ	0xFE2
  3645                           fsr1l	equ	0xFE1
  3646                           indf2	equ	0xFDF
  3647                           postinc2	equ	0xFDE
  3648                           postdec2	equ	0xFDD
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8
  3652                           
  3653 ;; *************** function _main_init *****************
  3654 ;; Defined at:
  3655 ;;		line 208 in file "PIC18F27J53-RTCC01.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:   10
  3676 ;; This function calls:
  3677 ;;		_I2C_LCD_init
  3678 ;;		_I2C_init
  3679 ;;		_OSC_init
  3680 ;;		_RTCC_init
  3681 ;;		_UART_init
  3682 ;;		_ringbuf_init
  3683 ;;		_timer1_init
  3684 ;;		_timer3_init
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text13
  3691  002E38                     __ptext13:
  3692                           	opt stack 0
  3693  002E38                     _main_init:
  3694                           	opt stack 20
  3695                           
  3696                           ;PIC18F27J53-RTCC01.c: 209: OSC_init();
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;incstack = 0
  3700  002E38  EC13  F01D         	call	_OSC_init	;wreg free
  3701                           
  3702                           ;PIC18F27J53-RTCC01.c: 210: TRISA = 0b01000000;
  3703  002E3C  0E40               	movlw	64
  3704  002E3E  6E92               	movwf	3986,c	;volatile
  3705                           
  3706                           ;PIC18F27J53-RTCC01.c: 211: TRISB = 0b00110000;
  3707  002E40  0E30               	movlw	48
  3708  002E42  6E93               	movwf	3987,c	;volatile
  3709                           
  3710                           ;PIC18F27J53-RTCC01.c: 212: TRISC = 0b10110010;
  3711  002E44  0EB2               	movlw	178
  3712  002E46  6E94               	movwf	3988,c	;volatile
  3713                           
  3714                           ;PIC18F27J53-RTCC01.c: 213: ANCON0 = 0b11111000;
  3715  002E48  0EF8               	movlw	248
  3716  002E4A  010F               	movlb	15	; () banked
  3717  002E4C  6F48               	movwf	72,b	;volatile
  3718                           
  3719                           ; BSR set to: 15
  3720                           ;PIC18F27J53-RTCC01.c: 214: ANCON1 = 0b00011111;
  3721  002E4E  0E1F               	movlw	31
  3722  002E50  010F               	movlb	15	; () banked
  3723  002E52  6F49               	movwf	73,b	;volatile
  3724                           
  3725                           ; BSR set to: 15
  3726                           ;PIC18F27J53-RTCC01.c: 215: INTCON2bits.RBPU = 0;
  3727  002E54  9EF1               	bcf	intcon2,7,c	;volatile
  3728                           
  3729                           ; BSR set to: 15
  3730                           ;PIC18F27J53-RTCC01.c: 217: UCFGbits.UOEMON = 0;
  3731  002E56  010F               	movlb	15	; () banked
  3732  002E58  9D39               	bcf	57,6,b	;volatile
  3733                           
  3734                           ; BSR set to: 15
  3735                           ;PIC18F27J53-RTCC01.c: 220: timer1_init(0, 2);
  3736  002E5A  0E02               	movlw	2
  3737  002E5C  6E20               	movwf	timer1_init@clock_select,c
  3738  002E5E  0E00               	movlw	0
  3739  002E60  EC55  F01B         	call	_timer1_init
  3740                           
  3741                           ;PIC18F27J53-RTCC01.c: 221: timer3_init(2);
  3742  002E64  0E02               	movlw	2
  3743  002E66  EC61  F01C         	call	_timer3_init
  3744                           
  3745                           ;PIC18F27J53-RTCC01.c: 222: I2C_init();
  3746  002E6A  EC0A  F01D         	call	_I2C_init	;wreg free
  3747                           
  3748                           ;PIC18F27J53-RTCC01.c: 223: I2C_LCD_init();
  3749  002E6E  ECDC  F01A         	call	_I2C_LCD_init	;wreg free
  3750                           
  3751                           ;PIC18F27J53-RTCC01.c: 224: RTCC_init();
  3752  002E72  EC08  F01C         	call	_RTCC_init	;wreg free
  3753                           
  3754                           ;PIC18F27J53-RTCC01.c: 226: UART_init();
  3755  002E76  EC99  F01C         	call	_UART_init	;wreg free
  3756                           
  3757                           ;PIC18F27J53-RTCC01.c: 227: static uint8_t txbuf[250];
  3758                           ;PIC18F27J53-RTCC01.c: 228: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
  3759  002E7A  0E00               	movlw	high _tx_buf
  3760  002E7C  0100               	movlb	0	; () banked
  3761  002E7E  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3762  002E80  0E2B               	movlw	low _tx_buf
  3763  002E82  0100               	movlb	0	; () banked
  3764  002E84  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3765  002E86  0105               	movlb	5	; () banked
  3766  002E88  0E05               	movlw	high main_init@txbuf
  3767  002E8A  0100               	movlb	0	; () banked
  3768  002E8C  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3769  002E8E  0105               	movlb	5	; () banked
  3770  002E90  0E00               	movlw	low main_init@txbuf
  3771  002E92  0100               	movlb	0	; () banked
  3772  002E94  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3773  002E96  0EFA               	movlw	250
  3774  002E98  0100               	movlb	0	; () banked
  3775  002E9A  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3776  002E9C  EC57  F01A         	call	_ringbuf_init	;wreg free
  3777                           
  3778                           ;PIC18F27J53-RTCC01.c: 229: static uint8_t rxbuf[250];
  3779                           ;PIC18F27J53-RTCC01.c: 230: ringbuf_init(&rx_buf, rxbuf, sizeof (rxbuf));
  3780  002EA0  0E00               	movlw	high _rx_buf
  3781  002EA2  0100               	movlb	0	; () banked
  3782  002EA4  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  3783  002EA6  0E26               	movlw	low _rx_buf
  3784  002EA8  0100               	movlb	0	; () banked
  3785  002EAA  6F60               	movwf	ringbuf_init@rb& (0+255),b
  3786  002EAC  0106               	movlb	6	; () banked
  3787  002EAE  0E06               	movlw	high main_init@rxbuf
  3788  002EB0  0100               	movlb	0	; () banked
  3789  002EB2  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  3790  002EB4  0106               	movlb	6	; () banked
  3791  002EB6  0E00               	movlw	low main_init@rxbuf
  3792  002EB8  0100               	movlb	0	; () banked
  3793  002EBA  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  3794  002EBC  0EFA               	movlw	250
  3795  002EBE  0100               	movlb	0	; () banked
  3796  002EC0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  3797  002EC2  EC57  F01A         	call	_ringbuf_init	;wreg free
  3798  002EC6  0012               	return	
  3799  002EC8                     __end_of_main_init:
  3800                           	opt stack 0
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           prodh	equ	0xFF4
  3806                           prodl	equ	0xFF3
  3807                           intcon	equ	0xFF2
  3808                           intcon2	equ	0xFF1
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           indf1	equ	0xFE7
  3812                           postdec1	equ	0xFE5
  3813                           fsr1h	equ	0xFE2
  3814                           fsr1l	equ	0xFE1
  3815                           indf2	equ	0xFDF
  3816                           postinc2	equ	0xFDE
  3817                           postdec2	equ	0xFDD
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           
  3822 ;; *************** function _timer3_init *****************
  3823 ;; Defined at:
  3824 ;;		line 86 in file "../My_header\My_header.h"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  prescaler       1    wreg     unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  prescaler       1   32[COMRAM] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;		None               void
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;Total ram usage:        2 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    5
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_main_init
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text14
  3853  0038C2                     __ptext14:
  3854                           	opt stack 0
  3855  0038C2                     _timer3_init:
  3856                           	opt stack 24
  3857                           
  3858                           ;incstack = 0
  3859                           ;timer3_init@prescaler stored from wreg
  3860  0038C2  6E21               	movwf	timer3_init@prescaler,c
  3861                           
  3862                           ;My_header\My_header.h: 87: T3CONbits.TMR3CS = 0;
  3863  0038C4  0E3F               	movlw	-193
  3864  0038C6  1679               	andwf	3961,f,c	;volatile
  3865                           
  3866                           ;My_header\My_header.h: 88: T3CONbits.T3OSCEN = 0;
  3867  0038C8  9679               	bcf	3961,3,c	;volatile
  3868                           
  3869                           ;My_header\My_header.h: 89: T3CONbits.T3CKPS = prescaler;
  3870  0038CA  C021  F020         	movff	timer3_init@prescaler,??_timer3_init
  3871  0038CE  3A20               	swapf	??_timer3_init,f,c
  3872  0038D0  5079               	movf	3961,w,c	;volatile
  3873  0038D2  1820               	xorwf	??_timer3_init,w,c
  3874  0038D4  0BCF               	andlw	-49
  3875  0038D6  1820               	xorwf	??_timer3_init,w,c
  3876  0038D8  6E79               	movwf	3961,c	;volatile
  3877                           
  3878                           ;My_header\My_header.h: 90: T3CONbits.RD163 = 0;
  3879  0038DA  9E79               	bcf	3961,7,c	;volatile
  3880                           
  3881                           ;My_header\My_header.h: 91: T3CONbits.TMR3ON = 1;
  3882  0038DC  8079               	bsf	3961,0,c	;volatile
  3883                           
  3884                           ;My_header\My_header.h: 92: IPR2bits.TMR3IP = 0;
  3885  0038DE  92A2               	bcf	4002,1,c	;volatile
  3886                           
  3887                           ;My_header\My_header.h: 93: PIR2bits.TMR3IF = 0;
  3888  0038E0  92A1               	bcf	4001,1,c	;volatile
  3889                           
  3890                           ;My_header\My_header.h: 94: PIE2bits.TMR3IE = 1;
  3891  0038E2  82A0               	bsf	4000,1,c	;volatile
  3892                           
  3893                           ;My_header\My_header.h: 95: INTCONbits.PEIE = 1;
  3894  0038E4  8CF2               	bsf	intcon,6,c	;volatile
  3895  0038E6  0012               	return	
  3896  0038E8                     __end_of_timer3_init:
  3897                           	opt stack 0
  3898                           tblptru	equ	0xFF8
  3899                           tblptrh	equ	0xFF7
  3900                           tblptrl	equ	0xFF6
  3901                           tablat	equ	0xFF5
  3902                           prodh	equ	0xFF4
  3903                           prodl	equ	0xFF3
  3904                           intcon	equ	0xFF2
  3905                           intcon2	equ	0xFF1
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           indf1	equ	0xFE7
  3909                           postdec1	equ	0xFE5
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           indf2	equ	0xFDF
  3913                           postinc2	equ	0xFDE
  3914                           postdec2	equ	0xFDD
  3915                           fsr2h	equ	0xFDA
  3916                           fsr2l	equ	0xFD9
  3917                           status	equ	0xFD8
  3918                           
  3919 ;; *************** function _timer1_init *****************
  3920 ;; Defined at:
  3921 ;;		line 55 in file "../My_header\My_header.h"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  prescaler       1    wreg     unsigned char 
  3924 ;;  clock_select    1   31[COMRAM] unsigned char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  prescaler       1   33[COMRAM] unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:        3 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    5
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_main_init
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text15
  3951  0036AA                     __ptext15:
  3952                           	opt stack 0
  3953  0036AA                     _timer1_init:
  3954                           	opt stack 24
  3955                           
  3956                           ;incstack = 0
  3957                           ;timer1_init@prescaler stored from wreg
  3958  0036AA  6E22               	movwf	timer1_init@prescaler,c
  3959                           
  3960                           ;My_header\My_header.h: 56: T1CONbits.TMR1CS = clock_select;
  3961  0036AC  C020  F021         	movff	timer1_init@clock_select,??_timer1_init
  3962  0036B0  3A21               	swapf	??_timer1_init,f,c
  3963  0036B2  4621               	rlncf	??_timer1_init,f,c
  3964  0036B4  4621               	rlncf	??_timer1_init,f,c
  3965  0036B6  50CD               	movf	4045,w,c	;volatile
  3966  0036B8  1821               	xorwf	??_timer1_init,w,c
  3967  0036BA  0B3F               	andlw	-193
  3968  0036BC  1821               	xorwf	??_timer1_init,w,c
  3969  0036BE  6ECD               	movwf	4045,c	;volatile
  3970                           
  3971                           ;My_header\My_header.h: 57: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  3972  0036C0  5020               	movf	timer1_init@clock_select,w,c
  3973  0036C2  0A02               	xorlw	2
  3974  0036C4  A4D8               	btfss	status,2,c
  3975  0036C6  D002               	goto	l134
  3976  0036C8  86CD               	bsf	4045,3,c	;volatile
  3977  0036CA  D001               	goto	l3103
  3978  0036CC                     l134:
  3979                           
  3980                           ;My_header\My_header.h: 58: else T1CONbits.T1OSCEN = 0;
  3981  0036CC  96CD               	bcf	4045,3,c	;volatile
  3982  0036CE                     l3103:
  3983                           
  3984                           ;My_header\My_header.h: 59: T1CONbits.T1CKPS = prescaler;
  3985  0036CE  C022  F021         	movff	timer1_init@prescaler,??_timer1_init
  3986  0036D2  3A21               	swapf	??_timer1_init,f,c
  3987  0036D4  50CD               	movf	4045,w,c	;volatile
  3988  0036D6  1821               	xorwf	??_timer1_init,w,c
  3989  0036D8  0BCF               	andlw	-49
  3990  0036DA  1821               	xorwf	??_timer1_init,w,c
  3991  0036DC  6ECD               	movwf	4045,c	;volatile
  3992                           
  3993                           ;My_header\My_header.h: 60: T1CONbits.nT1SYNC = 1;
  3994  0036DE  84CD               	bsf	4045,2,c	;volatile
  3995                           
  3996                           ;My_header\My_header.h: 61: T1CONbits.RD16 = 0;
  3997  0036E0  92CD               	bcf	4045,1,c	;volatile
  3998                           
  3999                           ;My_header\My_header.h: 62: T1CONbits.TMR1ON = 1;
  4000  0036E2  80CD               	bsf	4045,0,c	;volatile
  4001                           
  4002                           ;My_header\My_header.h: 63: IPR1bits.TMR1IP = 0;
  4003  0036E4  909F               	bcf	3999,0,c	;volatile
  4004                           
  4005                           ;My_header\My_header.h: 64: PIR1bits.TMR1IF = 0;
  4006  0036E6  909E               	bcf	3998,0,c	;volatile
  4007                           
  4008                           ;My_header\My_header.h: 65: PIE1bits.TMR1IE = 1;
  4009  0036E8  809D               	bsf	3997,0,c	;volatile
  4010                           
  4011                           ;My_header\My_header.h: 66: INTCONbits.PEIE = 1;
  4012  0036EA  8CF2               	bsf	intcon,6,c	;volatile
  4013  0036EC  0012               	return	
  4014  0036EE                     __end_of_timer1_init:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodh	equ	0xFF4
  4021                           prodl	equ	0xFF3
  4022                           intcon	equ	0xFF2
  4023                           intcon2	equ	0xFF1
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           indf1	equ	0xFE7
  4027                           postdec1	equ	0xFE5
  4028                           fsr1h	equ	0xFE2
  4029                           fsr1l	equ	0xFE1
  4030                           indf2	equ	0xFDF
  4031                           postinc2	equ	0xFDE
  4032                           postdec2	equ	0xFDD
  4033                           fsr2h	equ	0xFDA
  4034                           fsr2l	equ	0xFD9
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _ringbuf_init *****************
  4038 ;; Defined at:
  4039 ;;		line 22 in file "../My_header\My_ringbuf.h"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  4042 ;;		 -> rx_buf(5), tx_buf(5), 
  4043 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  4044 ;;		 -> main_init@rxbuf(250), main_init@txbuf(250), 
  4045 ;;  bufsize         1    4[BANK0 ] unsigned char 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;		None               void
  4050 ;; Registers used:
  4051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4057 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;Total ram usage:        5 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    5
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_main_init
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text16
  4072  0034AE                     __ptext16:
  4073                           	opt stack 0
  4074  0034AE                     _ringbuf_init:
  4075                           	opt stack 24
  4076                           
  4077                           ;My_header\My_ringbuf.h: 23: rb->buf = internal_buf;
  4078                           
  4079                           ;incstack = 0
  4080  0034AE  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  4081  0034B2  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  4082  0034B6  0100               	movlb	0	; () banked
  4083  0034B8  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  4084  0034BC  0100               	movlb	0	; () banked
  4085  0034BE  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;My_header\My_ringbuf.h: 24: rb->size = bufsize;
  4089  0034C2  0100               	movlb	0	; () banked
  4090  0034C4  EE20 F002          	lfsr	2,2
  4091  0034C8  0100               	movlb	0	; () banked
  4092  0034CA  5160               	movf	ringbuf_init@rb& (0+255),w,b
  4093  0034CC  26D9               	addwf	fsr2l,f,c
  4094  0034CE  0100               	movlb	0	; () banked
  4095  0034D0  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  4096  0034D2  22DA               	addwfc	fsr2h,f,c
  4097  0034D4  0100               	movlb	0	; () banked
  4098  0034D6  C064  FFDF         	movff	ringbuf_init@bufsize,indf2
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;My_header\My_ringbuf.h: 25: rb->head = 0;
  4102  0034DA  0100               	movlb	0	; () banked
  4103  0034DC  EE20 F003          	lfsr	2,3
  4104  0034E0  0100               	movlb	0	; () banked
  4105  0034E2  5160               	movf	ringbuf_init@rb& (0+255),w,b
  4106  0034E4  26D9               	addwf	fsr2l,f,c
  4107  0034E6  0100               	movlb	0	; () banked
  4108  0034E8  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  4109  0034EA  22DA               	addwfc	fsr2h,f,c
  4110  0034EC  0E00               	movlw	0
  4111  0034EE  6EDF               	movwf	indf2,c
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;My_header\My_ringbuf.h: 26: rb->tail = 0;
  4115  0034F0  0100               	movlb	0	; () banked
  4116  0034F2  EE20 F004          	lfsr	2,4
  4117  0034F6  0100               	movlb	0	; () banked
  4118  0034F8  5160               	movf	ringbuf_init@rb& (0+255),w,b
  4119  0034FA  26D9               	addwf	fsr2l,f,c
  4120  0034FC  0100               	movlb	0	; () banked
  4121  0034FE  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  4122  003500  22DA               	addwfc	fsr2h,f,c
  4123  003502  0E00               	movlw	0
  4124  003504  6EDF               	movwf	indf2,c
  4125                           
  4126                           ; BSR set to: 0
  4127  003506  0012               	return	
  4128  003508                     __end_of_ringbuf_init:
  4129                           	opt stack 0
  4130                           tblptru	equ	0xFF8
  4131                           tblptrh	equ	0xFF7
  4132                           tblptrl	equ	0xFF6
  4133                           tablat	equ	0xFF5
  4134                           prodh	equ	0xFF4
  4135                           prodl	equ	0xFF3
  4136                           intcon	equ	0xFF2
  4137                           intcon2	equ	0xFF1
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           indf1	equ	0xFE7
  4141                           postdec1	equ	0xFE5
  4142                           fsr1h	equ	0xFE2
  4143                           fsr1l	equ	0xFE1
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           postdec2	equ	0xFDD
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151 ;; *************** function _UART_init *****************
  4152 ;; Defined at:
  4153 ;;		line 189 in file "../My_header\My_header.h"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;		None
  4158 ;; Return value:  Size  Location     Type
  4159 ;;		None               void
  4160 ;; Registers used:
  4161 ;;		wreg, status,2
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4171 ;;Total ram usage:        0 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    5
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_main_init
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text17
  4182  003932                     __ptext17:
  4183                           	opt stack 0
  4184  003932                     _UART_init:
  4185                           	opt stack 24
  4186                           
  4187                           ;My_header\My_header.h: 190: TXSTA1bits.TX9 = 0;
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;incstack = 0
  4191  003932  9CAD               	bcf	4013,6,c	;volatile
  4192                           
  4193                           ;My_header\My_header.h: 191: TXSTA1bits.TXEN = 1;
  4194  003934  8AAD               	bsf	4013,5,c	;volatile
  4195                           
  4196                           ;My_header\My_header.h: 192: TXSTA1bits.SYNC = 0;
  4197  003936  98AD               	bcf	4013,4,c	;volatile
  4198                           
  4199                           ;My_header\My_header.h: 193: TXSTA1bits.BRGH = 0;
  4200  003938  94AD               	bcf	4013,2,c	;volatile
  4201                           
  4202                           ;My_header\My_header.h: 194: RCSTA1bits.SPEN = 1;
  4203  00393A  8EAC               	bsf	4012,7,c	;volatile
  4204                           
  4205                           ;My_header\My_header.h: 195: RCSTA1bits.RX9 = 0;
  4206  00393C  9CAC               	bcf	4012,6,c	;volatile
  4207                           
  4208                           ;My_header\My_header.h: 196: RCSTA1bits.CREN = 1;
  4209  00393E  88AC               	bsf	4012,4,c	;volatile
  4210                           
  4211                           ;My_header\My_header.h: 197: BAUDCON1bits.BRG16 = 0;
  4212  003940  967E               	bcf	3966,3,c	;volatile
  4213                           
  4214                           ;My_header\My_header.h: 198: SPBRG1 = 48000000 / 64 / 9600 - 1;
  4215  003942  0E4D               	movlw	77
  4216  003944  6EB0               	movwf	4016,c	;volatile
  4217                           
  4218                           ;My_header\My_header.h: 199: SPBRGH1 = 0;
  4219  003946  0E00               	movlw	0
  4220  003948  6E7F               	movwf	3967,c	;volatile
  4221                           
  4222                           ;My_header\My_header.h: 200: IPR1bits.RC1IP = 0;
  4223  00394A  9A9F               	bcf	3999,5,c	;volatile
  4224                           
  4225                           ;My_header\My_header.h: 201: PIE1bits.RC1IE = 1;
  4226  00394C  8A9D               	bsf	3997,5,c	;volatile
  4227                           
  4228                           ;My_header\My_header.h: 202: INTCONbits.PEIE = 1;
  4229  00394E  8CF2               	bsf	intcon,6,c	;volatile
  4230  003950  0012               	return	
  4231  003952                     __end_of_UART_init:
  4232                           	opt stack 0
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           intcon	equ	0xFF2
  4240                           intcon2	equ	0xFF1
  4241                           postinc0	equ	0xFEE
  4242                           wreg	equ	0xFE8
  4243                           indf1	equ	0xFE7
  4244                           postdec1	equ	0xFE5
  4245                           fsr1h	equ	0xFE2
  4246                           fsr1l	equ	0xFE1
  4247                           indf2	equ	0xFDF
  4248                           postinc2	equ	0xFDE
  4249                           postdec2	equ	0xFDD
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _RTCC_init *****************
  4255 ;; Defined at:
  4256 ;;		line 53 in file "../My_header\My_RTCC.h"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;Total ram usage:        0 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    5
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_main_init
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text18
  4285  003810                     __ptext18:
  4286                           	opt stack 0
  4287  003810                     _RTCC_init:
  4288                           	opt stack 24
  4289                           
  4290                           ;My_header\My_RTCC.h: 54: RTCCFGbits.RTCWREN = 1;
  4291                           
  4292                           ;incstack = 0
  4293  003810  010F               	movlb	15	; () banked
  4294  003812  8B3F               	bsf	63,5,b	;volatile
  4295                           
  4296                           ;My_header\My_RTCC.h: 55: if (RTCCFGbits.RTCWREN != 1) {
  4297  003814  010F               	movlb	15	; () banked
  4298  003816  BB3F               	btfsc	63,5,b	;volatile
  4299  003818  D006               	goto	l3251
  4300                           
  4301                           ; BSR set to: 15
  4302                           ;My_header\My_RTCC.h: 56: EECON2 = 0x55;
  4303  00381A  0E55               	movlw	85
  4304  00381C  6EA7               	movwf	4007,c	;volatile
  4305                           
  4306                           ;My_header\My_RTCC.h: 57: EECON2 = 0xAA;
  4307  00381E  0EAA               	movlw	170
  4308  003820  6EA7               	movwf	4007,c	;volatile
  4309                           
  4310                           ; BSR set to: 15
  4311                           ;My_header\My_RTCC.h: 58: RTCCFGbits.RTCWREN = 1;
  4312  003822  010F               	movlb	15	; () banked
  4313  003824  8B3F               	bsf	63,5,b	;volatile
  4314  003826                     l3251:
  4315                           
  4316                           ; BSR set to: 15
  4317                           ;My_header\My_RTCC.h: 59: }
  4318                           ;My_header\My_RTCC.h: 60: RTCCFGbits.RTCEN = 1;
  4319  003826  010F               	movlb	15	; () banked
  4320  003828  8F3F               	bsf	63,7,b	;volatile
  4321                           
  4322                           ; BSR set to: 15
  4323                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCOE = 0;
  4324  00382A  010F               	movlb	15	; () banked
  4325  00382C  953F               	bcf	63,2,b	;volatile
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;My_header\My_RTCC.h: 62: PADCFG1bits.RTSECSEL0 = 0;
  4329  00382E  010F               	movlb	15	; () banked
  4330  003830  933C               	bcf	60,1,b	;volatile
  4331                           
  4332                           ; BSR set to: 15
  4333                           ;My_header\My_RTCC.h: 63: PADCFG1bits.RTSECSEL1 = 1;
  4334  003832  010F               	movlb	15	; () banked
  4335  003834  853C               	bsf	60,2,b	;volatile
  4336                           
  4337                           ;My_header\My_RTCC.h: 64: RTCCAL = 0x00;
  4338  003836  0E00               	movlw	0
  4339  003838  010F               	movlb	15	; () banked
  4340  00383A  6F3E               	movwf	62,b	;volatile
  4341                           
  4342                           ; BSR set to: 15
  4343  00383C  0012               	return	
  4344  00383E                     __end_of_RTCC_init:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           intcon2	equ	0xFF1
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           indf1	equ	0xFE7
  4357                           postdec1	equ	0xFE5
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           postinc2	equ	0xFDE
  4362                           postdec2	equ	0xFDD
  4363                           fsr2h	equ	0xFDA
  4364                           fsr2l	equ	0xFD9
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function _OSC_init *****************
  4368 ;; Defined at:
  4369 ;;		line 135 in file "../My_header\My_header.h"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;		None               void
  4376 ;; Registers used:
  4377 ;;		wreg, status,2
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;Total ram usage:        0 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    5
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main_init
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text19
  4398  003A26                     __ptext19:
  4399                           	opt stack 0
  4400  003A26                     _OSC_init:
  4401                           	opt stack 24
  4402                           
  4403                           ;My_header\My_header.h: 136: OSCCONbits.IRCF = 7;
  4404                           
  4405                           ; BSR set to: 15
  4406                           ;incstack = 0
  4407  003A26  88D3               	bsf	4051,4,c	;volatile
  4408  003A28  8AD3               	bsf	4051,5,c	;volatile
  4409  003A2A  8CD3               	bsf	4051,6,c	;volatile
  4410                           
  4411                           ;My_header\My_header.h: 137: OSCTUNEbits.PLLEN = 1;
  4412  003A2C  8C9B               	bsf	3995,6,c	;volatile
  4413                           
  4414                           ;My_header\My_header.h: 138: OSCCONbits.SCS = 0;
  4415  003A2E  0EFC               	movlw	-4
  4416  003A30  16D3               	andwf	4051,f,c	;volatile
  4417  003A32  0012               	return	
  4418  003A34                     __end_of_OSC_init:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           prodh	equ	0xFF4
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           intcon2	equ	0xFF1
  4428                           postinc0	equ	0xFEE
  4429                           wreg	equ	0xFE8
  4430                           indf1	equ	0xFE7
  4431                           postdec1	equ	0xFE5
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           indf2	equ	0xFDF
  4435                           postinc2	equ	0xFDE
  4436                           postdec2	equ	0xFDD
  4437                           fsr2h	equ	0xFDA
  4438                           fsr2l	equ	0xFD9
  4439                           status	equ	0xFD8
  4440                           
  4441 ;; *************** function _I2C_init *****************
  4442 ;; Defined at:
  4443 ;;		line 23 in file "../My_header\My_I2C.h"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg, status,2
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4461 ;;Total ram usage:        0 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    5
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main_init
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text20
  4472  003A14                     __ptext20:
  4473                           	opt stack 0
  4474  003A14                     _I2C_init:
  4475                           	opt stack 24
  4476                           
  4477                           ;My_header\My_I2C.h: 24: SSP1STAT = 0b10000000;
  4478                           
  4479                           ;incstack = 0
  4480  003A14  0E80               	movlw	128
  4481  003A16  6EC7               	movwf	4039,c	;volatile
  4482                           
  4483                           ;My_header\My_I2C.h: 25: SSP1CON1 = 0b00101000;
  4484  003A18  0E28               	movlw	40
  4485  003A1A  6EC6               	movwf	4038,c	;volatile
  4486                           
  4487                           ;My_header\My_I2C.h: 26: SSP1ADD = 0x13;
  4488  003A1C  0E13               	movlw	19
  4489  003A1E  6EC8               	movwf	4040,c	;volatile
  4490                           
  4491                           ;My_header\My_I2C.h: 29: SSP1IF = 0;
  4492  003A20  969E               	bcf	3998,3,c	;volatile
  4493                           
  4494                           ;My_header\My_I2C.h: 30: BCL1IF = 0;
  4495  003A22  96A1               	bcf	4001,3,c	;volatile
  4496  003A24  0012               	return	
  4497  003A26                     __end_of_I2C_init:
  4498                           	opt stack 0
  4499                           tblptru	equ	0xFF8
  4500                           tblptrh	equ	0xFF7
  4501                           tblptrl	equ	0xFF6
  4502                           tablat	equ	0xFF5
  4503                           prodh	equ	0xFF4
  4504                           prodl	equ	0xFF3
  4505                           intcon	equ	0xFF2
  4506                           intcon2	equ	0xFF1
  4507                           postinc0	equ	0xFEE
  4508                           wreg	equ	0xFE8
  4509                           indf1	equ	0xFE7
  4510                           postdec1	equ	0xFE5
  4511                           fsr1h	equ	0xFE2
  4512                           fsr1l	equ	0xFE1
  4513                           indf2	equ	0xFDF
  4514                           postinc2	equ	0xFDE
  4515                           postdec2	equ	0xFDD
  4516                           fsr2h	equ	0xFDA
  4517                           fsr2l	equ	0xFD9
  4518                           status	equ	0xFD8
  4519                           
  4520 ;; *************** function _I2C_LCD_init *****************
  4521 ;; Defined at:
  4522 ;;		line 163 in file "../My_header\My_I2C.h"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;		None
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;		None               void
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4540 ;;Total ram usage:        0 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:    9
  4543 ;; This function calls:
  4544 ;;		_Delay_ms
  4545 ;;		_I2C_LCD_Clear
  4546 ;;		_I2C_LCD_Command
  4547 ;; This function is called by:
  4548 ;;		_main_init
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text21
  4553  0035B8                     __ptext21:
  4554                           	opt stack 0
  4555  0035B8                     _I2C_LCD_init:
  4556                           	opt stack 20
  4557                           
  4558                           ;My_header\My_I2C.h: 164: Delay_ms(40);
  4559                           
  4560                           ;incstack = 0
  4561  0035B8  0E00               	movlw	0
  4562  0035BA  6E21               	movwf	Delay_ms@ms+1,c
  4563  0035BC  0E28               	movlw	40
  4564  0035BE  6E20               	movwf	Delay_ms@ms,c
  4565  0035C0  EC87  F01C         	call	_Delay_ms	;wreg free
  4566                           
  4567                           ;My_header\My_I2C.h: 165: I2C_LCD_Command(0x38);
  4568  0035C4  0E38               	movlw	56
  4569  0035C6  EC77  F01B         	call	_I2C_LCD_Command
  4570                           
  4571                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x39);
  4572  0035CA  0E39               	movlw	57
  4573  0035CC  EC77  F01B         	call	_I2C_LCD_Command
  4574                           
  4575                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x14);
  4576  0035D0  0E14               	movlw	20
  4577  0035D2  EC77  F01B         	call	_I2C_LCD_Command
  4578                           
  4579                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x70);
  4580  0035D6  0E70               	movlw	112
  4581  0035D8  EC77  F01B         	call	_I2C_LCD_Command
  4582                           
  4583                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x56);
  4584  0035DC  0E56               	movlw	86
  4585  0035DE  EC77  F01B         	call	_I2C_LCD_Command
  4586                           
  4587                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x6C);
  4588  0035E2  0E6C               	movlw	108
  4589  0035E4  EC77  F01B         	call	_I2C_LCD_Command
  4590                           
  4591                           ;My_header\My_I2C.h: 171: Delay_ms(200);
  4592  0035E8  0E00               	movlw	0
  4593  0035EA  6E21               	movwf	Delay_ms@ms+1,c
  4594  0035EC  0EC8               	movlw	200
  4595  0035EE  6E20               	movwf	Delay_ms@ms,c
  4596  0035F0  EC87  F01C         	call	_Delay_ms	;wreg free
  4597                           
  4598                           ;My_header\My_I2C.h: 172: I2C_LCD_Command(0x38);
  4599  0035F4  0E38               	movlw	56
  4600  0035F6  EC77  F01B         	call	_I2C_LCD_Command
  4601                           
  4602                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x0C);
  4603  0035FA  0E0C               	movlw	12
  4604  0035FC  EC77  F01B         	call	_I2C_LCD_Command
  4605                           
  4606                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x06);
  4607  003600  0E06               	movlw	6
  4608  003602  EC77  F01B         	call	_I2C_LCD_Command
  4609                           
  4610                           ;My_header\My_I2C.h: 175: I2C_LCD_Clear();
  4611  003606  ECC5  F01C         	call	_I2C_LCD_Clear	;wreg free
  4612  00360A  0012               	return	
  4613  00360C                     __end_of_I2C_LCD_init:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodh	equ	0xFF4
  4620                           prodl	equ	0xFF3
  4621                           intcon	equ	0xFF2
  4622                           intcon2	equ	0xFF1
  4623                           postinc0	equ	0xFEE
  4624                           wreg	equ	0xFE8
  4625                           indf1	equ	0xFE7
  4626                           postdec1	equ	0xFE5
  4627                           fsr1h	equ	0xFE2
  4628                           fsr1l	equ	0xFE1
  4629                           indf2	equ	0xFDF
  4630                           postinc2	equ	0xFDE
  4631                           postdec2	equ	0xFDD
  4632                           fsr2h	equ	0xFDA
  4633                           fsr2l	equ	0xFD9
  4634                           status	equ	0xFD8
  4635                           
  4636 ;; *************** function _I2C_LCD_Clear *****************
  4637 ;; Defined at:
  4638 ;;		line 106 in file "../My_header\My_I2C.h"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4654 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4656 ;;Total ram usage:        1 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    8
  4659 ;; This function calls:
  4660 ;;		_I2C_LCD_Command
  4661 ;; This function is called by:
  4662 ;;		_I2C_LCD_init
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text22
  4668  00398A                     __ptext22:
  4669                           	opt stack 0
  4670  00398A                     _I2C_LCD_Clear:
  4671                           	opt stack 20
  4672                           
  4673                           ;My_header\My_I2C.h: 107: I2C_LCD_Command(0x01);
  4674                           
  4675                           ;incstack = 0
  4676  00398A  0E01               	movlw	1
  4677  00398C  EC77  F01B         	call	_I2C_LCD_Command
  4678                           
  4679                           ;My_header\My_I2C.h: 108: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  4680  003990  0E12               	movlw	18
  4681  003992  0100               	movlb	0	; () banked
  4682  003994  6F63               	movwf	??_I2C_LCD_Clear& (0+255),b
  4683  003996  0E23               	movlw	35
  4684  003998                     u5057:
  4685  003998  2EE8               	decfsz	wreg,f,c
  4686  00399A  D7FE               	goto	u5057
  4687  00399C  2F63               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  4688  00399E  D7FC               	goto	u5057
  4689  0039A0  F000               	nop	
  4690  0039A2  0012               	return	
  4691  0039A4                     __end_of_I2C_LCD_Clear:
  4692                           	opt stack 0
  4693                           tblptru	equ	0xFF8
  4694                           tblptrh	equ	0xFF7
  4695                           tblptrl	equ	0xFF6
  4696                           tablat	equ	0xFF5
  4697                           prodh	equ	0xFF4
  4698                           prodl	equ	0xFF3
  4699                           intcon	equ	0xFF2
  4700                           intcon2	equ	0xFF1
  4701                           postinc0	equ	0xFEE
  4702                           wreg	equ	0xFE8
  4703                           indf1	equ	0xFE7
  4704                           postdec1	equ	0xFE5
  4705                           fsr1h	equ	0xFE2
  4706                           fsr1l	equ	0xFE1
  4707                           indf2	equ	0xFDF
  4708                           postinc2	equ	0xFDE
  4709                           postdec2	equ	0xFDD
  4710                           fsr2h	equ	0xFDA
  4711                           fsr2l	equ	0xFD9
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function _Delay_ms *****************
  4715 ;; Defined at:
  4716 ;;		line 348 in file "../My_header\My_header.h"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  ms              2   31[COMRAM] unsigned int 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;		None               void
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;Total ram usage:        3 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    5
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_I2C_LCD_init
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text23
  4745  00390E                     __ptext23:
  4746                           	opt stack 0
  4747  00390E                     _Delay_ms:
  4748                           	opt stack 23
  4749                           
  4750                           ;My_header\My_header.h: 349: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
  4751                           
  4752                           ;incstack = 0
  4753  00390E  D008               	goto	l2973
  4754  003910                     l2971:
  4755  003910  0E10               	movlw	16
  4756  003912  6E22               	movwf	??_Delay_ms& (0+255),c
  4757  003914  0E94               	movlw	148
  4758  003916                     u5067:
  4759  003916  2EE8               	decfsz	wreg,f,c
  4760  003918  D7FE               	goto	u5067
  4761  00391A  2E22               	decfsz	??_Delay_ms& (0+255),f,c
  4762  00391C  D7FC               	goto	u5067
  4763  00391E  D000               	nop2	
  4764  003920                     l2973:
  4765  003920  0620               	decf	Delay_ms@ms,f,c
  4766  003922  A0D8               	btfss	status,0,c
  4767  003924  0621               	decf	Delay_ms@ms+1,f,c
  4768  003926  2820               	incf	Delay_ms@ms& (0+255),w,c
  4769  003928  B4D8               	btfsc	status,2,c
  4770  00392A  2821               	incf	(Delay_ms@ms+1)& (0+255),w,c
  4771  00392C  B4D8               	btfsc	status,2,c
  4772  00392E  0012               	return	
  4773  003930  D7EF               	goto	l2971
  4774  003932                     __end_of_Delay_ms:
  4775                           	opt stack 0
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           intcon2	equ	0xFF1
  4784                           postinc0	equ	0xFEE
  4785                           wreg	equ	0xFE8
  4786                           indf1	equ	0xFE7
  4787                           postdec1	equ	0xFE5
  4788                           fsr1h	equ	0xFE2
  4789                           fsr1l	equ	0xFE1
  4790                           indf2	equ	0xFDF
  4791                           postinc2	equ	0xFDE
  4792                           postdec2	equ	0xFDD
  4793                           fsr2h	equ	0xFDA
  4794                           fsr2l	equ	0xFD9
  4795                           status	equ	0xFD8
  4796                           
  4797 ;; *************** function _display_time *****************
  4798 ;; Defined at:
  4799 ;;		line 261 in file "../My_header\My_RTCC.h"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  ct              2   48[BANK0 ] PTR struct .
  4802 ;;		 -> caltime_now(7), 
  4803 ;;  ep              2   50[BANK0 ] PTR unsigned long 
  4804 ;;		 -> epoch_now(4), 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;		None               void
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;Total ram usage:        5 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    9
  4823 ;; This function calls:
  4824 ;;		_I2C_LCD_Putc
  4825 ;;		_I2C_LCD_Puts
  4826 ;;		_I2C_LCD_SetCursor
  4827 ;;		_RTCC_from_RTCC
  4828 ;;		_display_dec
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text24
  4835  002040                     __ptext24:
  4836                           	opt stack 0
  4837  002040                     _display_time:
  4838                           	opt stack 21
  4839                           
  4840                           ;My_header\My_RTCC.h: 262: RTCC_from_RTCC(ct, ep);
  4841                           
  4842                           ;incstack = 0
  4843  002040  0100               	movlb	0	; () banked
  4844  002042  C091  F08D         	movff	display_time@ct+1,RTCC_from_RTCC@ct+1
  4845  002046  0100               	movlb	0	; () banked
  4846  002048  C090  F08C         	movff	display_time@ct,RTCC_from_RTCC@ct
  4847  00204C  0100               	movlb	0	; () banked
  4848  00204E  C093  F08F         	movff	display_time@ep+1,RTCC_from_RTCC@ep+1
  4849  002052  0100               	movlb	0	; () banked
  4850  002054  C092  F08E         	movff	display_time@ep,RTCC_from_RTCC@ep
  4851  002058  EC36  F01C         	call	_RTCC_from_RTCC	;wreg free
  4852                           
  4853                           ;My_header\My_RTCC.h: 264: I2C_LCD_SetCursor(0, 0);
  4854  00205C  0E00               	movlw	0
  4855  00205E  0100               	movlb	0	; () banked
  4856  002060  6F63               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4857  002062  0E00               	movlw	0
  4858  002064  ECA9  F01B         	call	_I2C_LCD_SetCursor
  4859                           
  4860                           ;My_header\My_RTCC.h: 265: display_dec(ct->YY, edit_flag.flag.YY);
  4861  002068  0E00               	movlw	0
  4862  00206A  0100               	movlb	0	; () banked
  4863  00206C  BBD3               	btfsc	_edit_flag& (0+255),5,b
  4864  00206E  0E01               	movlw	1
  4865  002070  0100               	movlb	0	; () banked
  4866  002072  6F6C               	movwf	display_dec@edit& (0+255),b
  4867  002074  0100               	movlb	0	; () banked
  4868  002076  EE20 F006          	lfsr	2,6
  4869  00207A  0100               	movlb	0	; () banked
  4870  00207C  5190               	movf	display_time@ct& (0+255),w,b
  4871  00207E  26D9               	addwf	fsr2l,f,c
  4872  002080  0100               	movlb	0	; () banked
  4873  002082  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4874  002084  22DA               	addwfc	fsr2h,f,c
  4875  002086  50DF               	movf	indf2,w,c
  4876  002088  EC28  F01A         	call	_display_dec
  4877                           
  4878                           ;My_header\My_RTCC.h: 266: I2C_LCD_Putc('/');
  4879  00208C  0E2F               	movlw	47
  4880  00208E  EC90  F01B         	call	_I2C_LCD_Putc
  4881                           
  4882                           ;My_header\My_RTCC.h: 267: display_dec(ct->MM, edit_flag.flag.MM);
  4883  002092  0E00               	movlw	0
  4884  002094  0100               	movlb	0	; () banked
  4885  002096  B9D3               	btfsc	_edit_flag& (0+255),4,b
  4886  002098  0E01               	movlw	1
  4887  00209A  0100               	movlb	0	; () banked
  4888  00209C  6F6C               	movwf	display_dec@edit& (0+255),b
  4889  00209E  0100               	movlb	0	; () banked
  4890  0020A0  EE20 F005          	lfsr	2,5
  4891  0020A4  0100               	movlb	0	; () banked
  4892  0020A6  5190               	movf	display_time@ct& (0+255),w,b
  4893  0020A8  26D9               	addwf	fsr2l,f,c
  4894  0020AA  0100               	movlb	0	; () banked
  4895  0020AC  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4896  0020AE  22DA               	addwfc	fsr2h,f,c
  4897  0020B0  50DF               	movf	indf2,w,c
  4898  0020B2  EC28  F01A         	call	_display_dec
  4899                           
  4900                           ;My_header\My_RTCC.h: 268: I2C_LCD_Putc('/');
  4901  0020B6  0E2F               	movlw	47
  4902  0020B8  EC90  F01B         	call	_I2C_LCD_Putc
  4903                           
  4904                           ;My_header\My_RTCC.h: 269: display_dec(ct->DD, edit_flag.flag.DD);
  4905  0020BC  0E00               	movlw	0
  4906  0020BE  0100               	movlb	0	; () banked
  4907  0020C0  B7D3               	btfsc	_edit_flag& (0+255),3,b
  4908  0020C2  0E01               	movlw	1
  4909  0020C4  0100               	movlb	0	; () banked
  4910  0020C6  6F6C               	movwf	display_dec@edit& (0+255),b
  4911  0020C8  0100               	movlb	0	; () banked
  4912  0020CA  EE20 F004          	lfsr	2,4
  4913  0020CE  0100               	movlb	0	; () banked
  4914  0020D0  5190               	movf	display_time@ct& (0+255),w,b
  4915  0020D2  26D9               	addwf	fsr2l,f,c
  4916  0020D4  0100               	movlb	0	; () banked
  4917  0020D6  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4918  0020D8  22DA               	addwfc	fsr2h,f,c
  4919  0020DA  50DF               	movf	indf2,w,c
  4920  0020DC  EC28  F01A         	call	_display_dec
  4921                           
  4922                           ;My_header\My_RTCC.h: 270: I2C_LCD_Putc('/');
  4923  0020E0  0E2F               	movlw	47
  4924  0020E2  EC90  F01B         	call	_I2C_LCD_Putc
  4925                           
  4926                           ;My_header\My_RTCC.h: 271: I2C_LCD_Puts(weekday_char[ct->EE]);
  4927  0020E6  0100               	movlb	0	; () banked
  4928  0020E8  EE20 F003          	lfsr	2,3
  4929  0020EC  0100               	movlb	0	; () banked
  4930  0020EE  5190               	movf	display_time@ct& (0+255),w,b
  4931  0020F0  26D9               	addwf	fsr2l,f,c
  4932  0020F2  0100               	movlb	0	; () banked
  4933  0020F4  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4934  0020F6  22DA               	addwfc	fsr2h,f,c
  4935  0020F8  50DF               	movf	indf2,w,c
  4936  0020FA  0100               	movlb	0	; () banked
  4937  0020FC  6F94               	movwf	??_display_time& (0+255),b
  4938  0020FE  0100               	movlb	0	; () banked
  4939  002100  5194               	movf	??_display_time& (0+255),w,b
  4940  002102  0D02               	mullw	2
  4941  002104  0100               	movlb	0	; () banked
  4942  002106  0EAB               	movlw	low _weekday_char
  4943  002108  24F3               	addwf	prodl,w,c
  4944  00210A  6ED9               	movwf	fsr2l,c
  4945  00210C  0100               	movlb	0	; () banked
  4946  00210E  0E00               	movlw	high _weekday_char
  4947  002110  20F4               	addwfc	prodh,w,c
  4948  002112  6EDA               	movwf	fsr2h,c
  4949  002114  0100               	movlb	0	; () banked
  4950  002116  CFDE F061          	movff	postinc2,I2C_LCD_Puts@s
  4951  00211A  0100               	movlb	0	; () banked
  4952  00211C  CFDD F062          	movff	postdec2,I2C_LCD_Puts@s+1
  4953  002120  ECD2  F016         	call	_I2C_LCD_Puts	;wreg free
  4954                           
  4955                           ;My_header\My_RTCC.h: 273: I2C_LCD_SetCursor(0, 1);
  4956  002124  0E01               	movlw	1
  4957  002126  0100               	movlb	0	; () banked
  4958  002128  6F63               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4959  00212A  0E00               	movlw	0
  4960  00212C  ECA9  F01B         	call	_I2C_LCD_SetCursor
  4961                           
  4962                           ;My_header\My_RTCC.h: 274: display_dec(ct->hh, edit_flag.flag.hh);
  4963  002130  0E00               	movlw	0
  4964  002132  0100               	movlb	0	; () banked
  4965  002134  B5D3               	btfsc	_edit_flag& (0+255),2,b
  4966  002136  0E01               	movlw	1
  4967  002138  0100               	movlb	0	; () banked
  4968  00213A  6F6C               	movwf	display_dec@edit& (0+255),b
  4969  00213C  0100               	movlb	0	; () banked
  4970  00213E  EE20 F002          	lfsr	2,2
  4971  002142  0100               	movlb	0	; () banked
  4972  002144  5190               	movf	display_time@ct& (0+255),w,b
  4973  002146  26D9               	addwf	fsr2l,f,c
  4974  002148  0100               	movlb	0	; () banked
  4975  00214A  5191               	movf	(display_time@ct+1)& (0+255),w,b
  4976  00214C  22DA               	addwfc	fsr2h,f,c
  4977  00214E  50DF               	movf	indf2,w,c
  4978  002150  EC28  F01A         	call	_display_dec
  4979                           
  4980                           ;My_header\My_RTCC.h: 275: if (colon) I2C_LCD_Putc(':');
  4981  002154  0100               	movlb	0	; () banked
  4982  002156  51D2               	movf	_colon& (0+255),w,b
  4983  002158  B4D8               	btfsc	status,2,c
  4984  00215A  D004               	goto	l4597
  4985                           
  4986                           ; BSR set to: 0
  4987  00215C  0E3A               	movlw	58
  4988  00215E  EC90  F01B         	call	_I2C_LCD_Putc
  4989  002162  D003               	goto	l4599
  4990  002164                     l4597:
  4991                           
  4992                           ;My_header\My_RTCC.h: 277: else I2C_LCD_Putc(' ');
  4993  002164  0E20               	movlw	32
  4994  002166  EC90  F01B         	call	_I2C_LCD_Putc
  4995  00216A                     l4599:
  4996                           
  4997                           ;My_header\My_RTCC.h: 278: display_dec(ct->mm, edit_flag.flag.mm);
  4998  00216A  0E00               	movlw	0
  4999  00216C  0100               	movlb	0	; () banked
  5000  00216E  B3D3               	btfsc	_edit_flag& (0+255),1,b
  5001  002170  0E01               	movlw	1
  5002  002172  0100               	movlb	0	; () banked
  5003  002174  6F6C               	movwf	display_dec@edit& (0+255),b
  5004  002176  0100               	movlb	0	; () banked
  5005  002178  EE20 F001          	lfsr	2,1
  5006  00217C  0100               	movlb	0	; () banked
  5007  00217E  5190               	movf	display_time@ct& (0+255),w,b
  5008  002180  26D9               	addwf	fsr2l,f,c
  5009  002182  0100               	movlb	0	; () banked
  5010  002184  5191               	movf	(display_time@ct+1)& (0+255),w,b
  5011  002186  22DA               	addwfc	fsr2h,f,c
  5012  002188  50DF               	movf	indf2,w,c
  5013  00218A  EC28  F01A         	call	_display_dec
  5014                           
  5015                           ;My_header\My_RTCC.h: 279: I2C_LCD_Putc('-');
  5016  00218E  0E2D               	movlw	45
  5017  002190  EC90  F01B         	call	_I2C_LCD_Putc
  5018                           
  5019                           ;My_header\My_RTCC.h: 280: display_dec(ct->ss, edit_flag.flag.ss);
  5020  002194  0E00               	movlw	0
  5021  002196  0100               	movlb	0	; () banked
  5022  002198  B1D3               	btfsc	_edit_flag& (0+255),0,b
  5023  00219A  0E01               	movlw	1
  5024  00219C  0100               	movlb	0	; () banked
  5025  00219E  6F6C               	movwf	display_dec@edit& (0+255),b
  5026  0021A0  C090  FFD9         	movff	display_time@ct,fsr2l
  5027  0021A4  C091  FFDA         	movff	display_time@ct+1,fsr2h
  5028  0021A8  50DF               	movf	indf2,w,c
  5029  0021AA  EC28  F01A         	call	_display_dec
  5030  0021AE  0012               	return	
  5031  0021B0                     __end_of_display_time:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           intcon2	equ	0xFF1
  5041                           postinc0	equ	0xFEE
  5042                           wreg	equ	0xFE8
  5043                           indf1	equ	0xFE7
  5044                           postdec1	equ	0xFE5
  5045                           fsr1h	equ	0xFE2
  5046                           fsr1l	equ	0xFE1
  5047                           indf2	equ	0xFDF
  5048                           postinc2	equ	0xFDE
  5049                           postdec2	equ	0xFDD
  5050                           fsr2h	equ	0xFDA
  5051                           fsr2l	equ	0xFD9
  5052                           status	equ	0xFD8
  5053                           
  5054 ;; *************** function _display_dec *****************
  5055 ;; Defined at:
  5056 ;;		line 254 in file "../My_header\My_RTCC.h"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  dec             1    wreg     unsigned char 
  5059 ;;  edit            1   12[BANK0 ] unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  dec             1   23[BANK0 ] unsigned char 
  5062 ;;  str            10   13[BANK0 ] unsigned char [10]
  5063 ;; Return value:  Size  Location     Type
  5064 ;;		None               void
  5065 ;; Registers used:
  5066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5072 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;Total ram usage:       12 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    8
  5079 ;; This function calls:
  5080 ;;		_I2C_LCD_Puts
  5081 ;;		_utoa
  5082 ;; This function is called by:
  5083 ;;		_display_time
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text25
  5088  003450                     __ptext25:
  5089                           	opt stack 0
  5090  003450                     _display_dec:
  5091                           	opt stack 21
  5092                           
  5093                           ;incstack = 0
  5094                           ;display_dec@dec stored from wreg
  5095  003450  0100               	movlb	0	; () banked
  5096  003452  6F77               	movwf	display_dec@dec& (0+255),b
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;My_header\My_RTCC.h: 255: uint8_t str[10];
  5100                           ;My_header\My_RTCC.h: 256: utoa(&str, dec, 2);
  5101  003454  0100               	movlb	0	; () banked
  5102  003456  0E00               	movlw	high display_dec@str
  5103  003458  0100               	movlb	0	; () banked
  5104  00345A  6F65               	movwf	(utoa@str+1)& (0+255),b
  5105  00345C  0100               	movlb	0	; () banked
  5106  00345E  0E6D               	movlw	low display_dec@str
  5107  003460  0100               	movlb	0	; () banked
  5108  003462  6F64               	movwf	utoa@str& (0+255),b
  5109  003464  0100               	movlb	0	; () banked
  5110  003466  C077  F066         	movff	display_dec@dec,utoa@value
  5111  00346A  0100               	movlb	0	; () banked
  5112  00346C  6B67               	clrf	(utoa@value+1)& (0+255),b
  5113  00346E  0E02               	movlw	2
  5114  003470  0100               	movlb	0	; () banked
  5115  003472  6F68               	movwf	utoa@digits& (0+255),b
  5116  003474  EC88  F016         	call	_utoa	;wreg free
  5117                           
  5118                           ;My_header\My_RTCC.h: 257: if (edit && RTCCFGbits.HALFSEC)I2C_LCD_Puts("  ");
  5119  003478  0100               	movlb	0	; () banked
  5120  00347A  516C               	movf	display_dec@edit& (0+255),w,b
  5121  00347C  B4D8               	btfsc	status,2,c
  5122  00347E  D00C               	goto	l4493
  5123                           
  5124                           ; BSR set to: 0
  5125  003480  010F               	movlb	15	; () banked
  5126  003482  A73F               	btfss	63,3,b	;volatile
  5127  003484  D009               	goto	l4493
  5128                           
  5129                           ; BSR set to: 15
  5130  003486  0E0F               	movlw	high STR_15
  5131  003488  0100               	movlb	0	; () banked
  5132  00348A  6F62               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5133  00348C  0E75               	movlw	low STR_15
  5134  00348E  0100               	movlb	0	; () banked
  5135  003490  6F61               	movwf	I2C_LCD_Puts@s& (0+255),b
  5136  003492  ECD2  F016         	call	_I2C_LCD_Puts	;wreg free
  5137  003496  0012               	return	
  5138  003498                     l4493:
  5139                           
  5140                           ;My_header\My_RTCC.h: 258: else I2C_LCD_Puts(str);
  5141  003498  0100               	movlb	0	; () banked
  5142  00349A  0E00               	movlw	high display_dec@str
  5143  00349C  0100               	movlb	0	; () banked
  5144  00349E  6F62               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5145  0034A0  0100               	movlb	0	; () banked
  5146  0034A2  0E6D               	movlw	low display_dec@str
  5147  0034A4  0100               	movlb	0	; () banked
  5148  0034A6  6F61               	movwf	I2C_LCD_Puts@s& (0+255),b
  5149  0034A8  ECD2  F016         	call	_I2C_LCD_Puts	;wreg free
  5150  0034AC  0012               	return	
  5151  0034AE                     __end_of_display_dec:
  5152                           	opt stack 0
  5153                           tblptru	equ	0xFF8
  5154                           tblptrh	equ	0xFF7
  5155                           tblptrl	equ	0xFF6
  5156                           tablat	equ	0xFF5
  5157                           prodh	equ	0xFF4
  5158                           prodl	equ	0xFF3
  5159                           intcon	equ	0xFF2
  5160                           intcon2	equ	0xFF1
  5161                           postinc0	equ	0xFEE
  5162                           wreg	equ	0xFE8
  5163                           indf1	equ	0xFE7
  5164                           postdec1	equ	0xFE5
  5165                           fsr1h	equ	0xFE2
  5166                           fsr1l	equ	0xFE1
  5167                           indf2	equ	0xFDF
  5168                           postinc2	equ	0xFDE
  5169                           postdec2	equ	0xFDD
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _utoa *****************
  5175 ;; Defined at:
  5176 ;;		line 371 in file "../My_header\My_header.h"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  str             2    4[BANK0 ] PTR unsigned char 
  5179 ;;		 -> tx_send_dec@str(10), display_dec@str(10), 
  5180 ;;  value           2    6[BANK0 ] unsigned int 
  5181 ;;  digits          1    8[BANK0 ] unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  v               2   10[BANK0 ] unsigned int 
  5184 ;;  d               1    9[BANK0 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;		None               void
  5187 ;; Registers used:
  5188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5194 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;Total ram usage:        8 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    6
  5201 ;; This function calls:
  5202 ;;		___lwdiv
  5203 ;;		___lwmod
  5204 ;; This function is called by:
  5205 ;;		_display_dec
  5206 ;;		_tx_send_dec
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text26
  5211  002D10                     __ptext26:
  5212                           	opt stack 0
  5213  002D10                     _utoa:
  5214                           	opt stack 21
  5215                           
  5216                           ;My_header\My_header.h: 372: uint16_t v;
  5217                           ;My_header\My_header.h: 373: uint8_t d;
  5218                           ;My_header\My_header.h: 374: while (digits--) {
  5219                           
  5220                           ;incstack = 0
  5221  002D10  D03C               	goto	l4191
  5222  002D12                     l243:
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;My_header\My_header.h: 375: v = value;
  5226  002D12  C066  F06A         	movff	utoa@value,utoa@v
  5227  002D16  C067  F06B         	movff	utoa@value+1,utoa@v+1
  5228                           
  5229                           ;My_header\My_header.h: 376: d = digits;
  5230  002D1A  C068  F069         	movff	utoa@digits,utoa@d
  5231                           
  5232                           ;My_header\My_header.h: 377: while (d--) {
  5233  002D1E  D012               	goto	l4183
  5234  002D20                     l4181:
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;My_header\My_header.h: 378: v /= 10;
  5238  002D20  C06A  F060         	movff	utoa@v,___lwdiv@dividend
  5239  002D24  C06B  F061         	movff	utoa@v+1,___lwdiv@dividend+1
  5240  002D28  0E00               	movlw	0
  5241  002D2A  0100               	movlb	0	; () banked
  5242  002D2C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5243  002D2E  0E0A               	movlw	10
  5244  002D30  0100               	movlb	0	; () banked
  5245  002D32  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5246  002D34  EC64  F019         	call	___lwdiv	;wreg free
  5247  002D38  0100               	movlb	0	; () banked
  5248  002D3A  C060  F06A         	movff	?___lwdiv,utoa@v
  5249  002D3E  0100               	movlb	0	; () banked
  5250  002D40  C061  F06B         	movff	?___lwdiv+1,utoa@v+1
  5251  002D44                     l4183:
  5252                           
  5253                           ; BSR set to: 0
  5254  002D44  0100               	movlb	0	; () banked
  5255  002D46  0769               	decf	utoa@d& (0+255),f,b
  5256  002D48  0100               	movlb	0	; () banked
  5257  002D4A  2969               	incf	utoa@d& (0+255),w,b
  5258  002D4C  A4D8               	btfss	status,2,c
  5259  002D4E  D7E8               	goto	l4181
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;My_header\My_header.h: 379: }
  5263                           ;My_header\My_header.h: 380: v %= 10;
  5264                           
  5265                           ; BSR set to: 0
  5266  002D50  C06A  F060         	movff	utoa@v,___lwmod@dividend
  5267  002D54  C06B  F061         	movff	utoa@v+1,___lwmod@dividend+1
  5268  002D58  0E00               	movlw	0
  5269  002D5A  0100               	movlb	0	; () banked
  5270  002D5C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5271  002D5E  0E0A               	movlw	10
  5272  002D60  0100               	movlb	0	; () banked
  5273  002D62  6F62               	movwf	___lwmod@divisor& (0+255),b
  5274  002D64  EC84  F01A         	call	___lwmod	;wreg free
  5275  002D68  0100               	movlb	0	; () banked
  5276  002D6A  C060  F06A         	movff	?___lwmod,utoa@v
  5277  002D6E  0100               	movlb	0	; () banked
  5278  002D70  C061  F06B         	movff	?___lwmod+1,utoa@v+1
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;My_header\My_header.h: 381: *str++ = '0' + v;
  5282  002D74  0100               	movlb	0	; () banked
  5283  002D76  516A               	movf	utoa@v& (0+255),w,b
  5284  002D78  0F30               	addlw	48
  5285  002D7A  C064  FFD9         	movff	utoa@str,fsr2l
  5286  002D7E  C065  FFDA         	movff	utoa@str+1,fsr2h
  5287  002D82  6EDF               	movwf	indf2,c
  5288                           
  5289                           ; BSR set to: 0
  5290  002D84  0100               	movlb	0	; () banked
  5291  002D86  4B64               	infsnz	utoa@str& (0+255),f,b
  5292  002D88  2B65               	incf	(utoa@str+1)& (0+255),f,b
  5293  002D8A                     l4191:
  5294  002D8A  0100               	movlb	0	; () banked
  5295  002D8C  0768               	decf	utoa@digits& (0+255),f,b
  5296  002D8E  0100               	movlb	0	; () banked
  5297  002D90  2968               	incf	utoa@digits& (0+255),w,b
  5298  002D92  A4D8               	btfss	status,2,c
  5299  002D94  D7BE               	goto	l243
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;My_header\My_header.h: 382: }
  5303                           ;My_header\My_header.h: 383: *str = '\0';
  5304                           
  5305                           ; BSR set to: 0
  5306  002D96  C064  FFD9         	movff	utoa@str,fsr2l
  5307  002D9A  C065  FFDA         	movff	utoa@str+1,fsr2h
  5308  002D9E  0E00               	movlw	0
  5309  002DA0  6EDF               	movwf	indf2,c
  5310                           
  5311                           ; BSR set to: 0
  5312  002DA2  0012               	return	
  5313  002DA4                     __end_of_utoa:
  5314                           	opt stack 0
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           intcon2	equ	0xFF1
  5323                           postinc0	equ	0xFEE
  5324                           wreg	equ	0xFE8
  5325                           indf1	equ	0xFE7
  5326                           postdec1	equ	0xFE5
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           postdec2	equ	0xFDD
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function ___lwmod *****************
  5337 ;; Defined at:
  5338 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  dividend        2    0[BANK0 ] unsigned int 
  5341 ;;  divisor         2    2[BANK0 ] unsigned int 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  counter         1   31[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  2    0[BANK0 ] unsigned int 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;Total ram usage:        5 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    5
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_utoa
  5364 ;;		_tx_sendn
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text27
  5369  003508                     __ptext27:
  5370                           	opt stack 0
  5371  003508                     ___lwmod:
  5372                           	opt stack 21
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;incstack = 0
  5376  003508  0100               	movlb	0	; () banked
  5377  00350A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5378  00350C  1162               	iorwf	___lwmod@divisor& (0+255),w,b
  5379  00350E  B4D8               	btfsc	status,2,c
  5380  003510  D023               	goto	l1144
  5381                           
  5382                           ; BSR set to: 0
  5383  003512  0E01               	movlw	1
  5384  003514  6E20               	movwf	___lwmod@counter,c
  5385  003516  D005               	goto	l4161
  5386  003518                     l4159:
  5387                           
  5388                           ; BSR set to: 0
  5389  003518  0100               	movlb	0	; () banked
  5390  00351A  90D8               	bcf	status,0,c
  5391  00351C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  5392  00351E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5393  003520  2A20               	incf	___lwmod@counter,f,c
  5394  003522                     l4161:
  5395                           
  5396                           ; BSR set to: 0
  5397  003522  0100               	movlb	0	; () banked
  5398  003524  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5399  003526  D7F8               	goto	l4159
  5400  003528                     l4163:
  5401                           
  5402                           ; BSR set to: 0
  5403  003528  0100               	movlb	0	; () banked
  5404  00352A  5162               	movf	___lwmod@divisor& (0+255),w,b
  5405  00352C  0100               	movlb	0	; () banked
  5406  00352E  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  5407  003530  0100               	movlb	0	; () banked
  5408  003532  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5409  003534  0100               	movlb	0	; () banked
  5410  003536  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5411  003538  A0D8               	btfss	status,0,c
  5412  00353A  D008               	goto	l4167
  5413                           
  5414                           ; BSR set to: 0
  5415  00353C  0100               	movlb	0	; () banked
  5416  00353E  5162               	movf	___lwmod@divisor& (0+255),w,b
  5417  003540  0100               	movlb	0	; () banked
  5418  003542  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  5419  003544  0100               	movlb	0	; () banked
  5420  003546  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5421  003548  0100               	movlb	0	; () banked
  5422  00354A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5423  00354C                     l4167:
  5424                           
  5425                           ; BSR set to: 0
  5426  00354C  0100               	movlb	0	; () banked
  5427  00354E  90D8               	bcf	status,0,c
  5428  003550  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5429  003552  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  5430                           
  5431                           ; BSR set to: 0
  5432  003554  2E20               	decfsz	___lwmod@counter,f,c
  5433  003556  D7E8               	goto	l4163
  5434  003558                     l1144:
  5435                           
  5436                           ; BSR set to: 0
  5437  003558  C060  F060         	movff	___lwmod@dividend,?___lwmod
  5438  00355C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  5439                           
  5440                           ; BSR set to: 0
  5441  003560  0012               	return	
  5442  003562                     __end_of___lwmod:
  5443                           	opt stack 0
  5444                           tblptru	equ	0xFF8
  5445                           tblptrh	equ	0xFF7
  5446                           tblptrl	equ	0xFF6
  5447                           tablat	equ	0xFF5
  5448                           prodh	equ	0xFF4
  5449                           prodl	equ	0xFF3
  5450                           intcon	equ	0xFF2
  5451                           intcon2	equ	0xFF1
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           indf1	equ	0xFE7
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           postinc2	equ	0xFDE
  5460                           postdec2	equ	0xFDD
  5461                           fsr2h	equ	0xFDA
  5462                           fsr2l	equ	0xFD9
  5463                           status	equ	0xFD8
  5464                           
  5465 ;; *************** function ___lwdiv *****************
  5466 ;; Defined at:
  5467 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  dividend        2    0[BANK0 ] unsigned int 
  5470 ;;  divisor         2    2[BANK0 ] unsigned int 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  quotient        2   32[COMRAM] unsigned int 
  5473 ;;  counter         1   31[COMRAM] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  2    0[BANK0 ] unsigned int 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5483 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5484 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5487 ;;Total ram usage:        7 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:    5
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_utoa
  5494 ;;		_tx_sendn
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text28
  5499  0032C8                     __ptext28:
  5500                           	opt stack 0
  5501  0032C8                     ___lwdiv:
  5502                           	opt stack 21
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;incstack = 0
  5506  0032C8  0E00               	movlw	0
  5507  0032CA  6E22               	movwf	___lwdiv@quotient+1,c
  5508  0032CC  0E00               	movlw	0
  5509  0032CE  6E21               	movwf	___lwdiv@quotient,c
  5510  0032D0  0100               	movlb	0	; () banked
  5511  0032D2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5512  0032D4  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
  5513  0032D6  B4D8               	btfsc	status,2,c
  5514  0032D8  D027               	goto	l1134
  5515                           
  5516                           ; BSR set to: 0
  5517  0032DA  0E01               	movlw	1
  5518  0032DC  6E20               	movwf	___lwdiv@counter,c
  5519  0032DE  D005               	goto	l4141
  5520  0032E0                     l4139:
  5521                           
  5522                           ; BSR set to: 0
  5523  0032E0  0100               	movlb	0	; () banked
  5524  0032E2  90D8               	bcf	status,0,c
  5525  0032E4  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5526  0032E6  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5527  0032E8  2A20               	incf	___lwdiv@counter,f,c
  5528  0032EA                     l4141:
  5529                           
  5530                           ; BSR set to: 0
  5531  0032EA  0100               	movlb	0	; () banked
  5532  0032EC  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5533  0032EE  D7F8               	goto	l4139
  5534  0032F0                     l4143:
  5535                           
  5536                           ; BSR set to: 0
  5537  0032F0  90D8               	bcf	status,0,c
  5538  0032F2  3621               	rlcf	___lwdiv@quotient,f,c
  5539  0032F4  3622               	rlcf	___lwdiv@quotient+1,f,c
  5540                           
  5541                           ; BSR set to: 0
  5542  0032F6  0100               	movlb	0	; () banked
  5543  0032F8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5544  0032FA  0100               	movlb	0	; () banked
  5545  0032FC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5546  0032FE  0100               	movlb	0	; () banked
  5547  003300  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5548  003302  0100               	movlb	0	; () banked
  5549  003304  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5550  003306  A0D8               	btfss	status,0,c
  5551  003308  D009               	goto	l4151
  5552                           
  5553                           ; BSR set to: 0
  5554  00330A  0100               	movlb	0	; () banked
  5555  00330C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5556  00330E  0100               	movlb	0	; () banked
  5557  003310  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5558  003312  0100               	movlb	0	; () banked
  5559  003314  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5560  003316  0100               	movlb	0	; () banked
  5561  003318  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5562                           
  5563                           ; BSR set to: 0
  5564  00331A  8021               	bsf	___lwdiv@quotient,0,c
  5565  00331C                     l4151:
  5566                           
  5567                           ; BSR set to: 0
  5568  00331C  0100               	movlb	0	; () banked
  5569  00331E  90D8               	bcf	status,0,c
  5570  003320  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5571  003322  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5572                           
  5573                           ; BSR set to: 0
  5574  003324  2E20               	decfsz	___lwdiv@counter,f,c
  5575  003326  D7E4               	goto	l4143
  5576  003328                     l1134:
  5577                           
  5578                           ; BSR set to: 0
  5579  003328  C021  F060         	movff	___lwdiv@quotient,?___lwdiv
  5580  00332C  C022  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5581                           
  5582                           ; BSR set to: 0
  5583  003330  0012               	return	
  5584  003332                     __end_of___lwdiv:
  5585                           	opt stack 0
  5586                           tblptru	equ	0xFF8
  5587                           tblptrh	equ	0xFF7
  5588                           tblptrl	equ	0xFF6
  5589                           tablat	equ	0xFF5
  5590                           prodh	equ	0xFF4
  5591                           prodl	equ	0xFF3
  5592                           intcon	equ	0xFF2
  5593                           intcon2	equ	0xFF1
  5594                           postinc0	equ	0xFEE
  5595                           wreg	equ	0xFE8
  5596                           indf1	equ	0xFE7
  5597                           postdec1	equ	0xFE5
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           indf2	equ	0xFDF
  5601                           postinc2	equ	0xFDE
  5602                           postdec2	equ	0xFDD
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607 ;; *************** function _I2C_LCD_Puts *****************
  5608 ;; Defined at:
  5609 ;;		line 130 in file "../My_header\My_I2C.h"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  5612 ;;		 -> STR_35(9), STR_34(9), STR_15(3), display_dec@str(10), 
  5613 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
  5614 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  ans             2    4[BANK0 ] int 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;		None               void
  5619 ;; Registers used:
  5620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5627 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5628 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5629 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5630 ;;Total ram usage:        5 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    7
  5633 ;; This function calls:
  5634 ;;		_I2C_Send
  5635 ;;		_I2C_Start
  5636 ;;		_I2C_Stop
  5637 ;; This function is called by:
  5638 ;;		_display_dec
  5639 ;;		_display_time
  5640 ;;		_main
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text29
  5645  002DA4                     __ptext29:
  5646                           	opt stack 0
  5647  002DA4                     _I2C_LCD_Puts:
  5648                           	opt stack 21
  5649                           
  5650                           ;My_header\My_I2C.h: 131: int ans;
  5651                           ;My_header\My_I2C.h: 133: ans = I2C_Start(0x3E, 0);
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;incstack = 0
  5655  002DA4  0E00               	movlw	0
  5656  002DA6  6E22               	movwf	I2C_Start@rw,c
  5657  002DA8  0E3E               	movlw	62
  5658  002DAA  ECC1  F01B         	call	_I2C_Start
  5659  002DAE  0100               	movlb	0	; () banked
  5660  002DB0  6F63               	movwf	??_I2C_LCD_Puts& (0+255),b
  5661  002DB2  0100               	movlb	0	; () banked
  5662  002DB4  5163               	movf	??_I2C_LCD_Puts& (0+255),w,b
  5663  002DB6  0100               	movlb	0	; () banked
  5664  002DB8  6F64               	movwf	I2C_LCD_Puts@ans& (0+255),b
  5665  002DBA  0100               	movlb	0	; () banked
  5666  002DBC  6B65               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;My_header\My_I2C.h: 134: if (ans == 0) {
  5670  002DBE  0100               	movlb	0	; () banked
  5671  002DC0  5165               	movf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  5672  002DC2  1164               	iorwf	I2C_LCD_Puts@ans& (0+255),w,b
  5673  002DC4  A4D8               	btfss	status,2,c
  5674  002DC6  D035               	goto	l4285
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;My_header\My_I2C.h: 135: I2C_Send(0b01000000);
  5678  002DC8  0E40               	movlw	64
  5679  002DCA  ECDE  F01C         	call	_I2C_Send
  5680                           
  5681                           ;My_header\My_I2C.h: 136: while (*s) {
  5682  002DCE  D01B               	goto	l4283
  5683  002DD0                     l4277:
  5684                           
  5685                           ;My_header\My_I2C.h: 137: I2C_Send(*s++);
  5686  002DD0  0100               	movlb	0	; () banked
  5687  002DD2  C061  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5688  002DD6  0100               	movlb	0	; () banked
  5689  002DD8  C062  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5690  002DDC  0E00               	movlw	low (__smallconst shr (0+16))
  5691  002DDE  6EF8               	movwf	tblptru,c
  5692  002DE0  0E0E               	movlw	(high __ramtop+-1)
  5693  002DE2  64F7               	cpfsgt	tblptrh,c
  5694  002DE4  D003               	bra	u4017
  5695  002DE6  0008               	tblrd		*
  5696  002DE8  50F5               	movf	tablat,w,c
  5697  002DEA  D005               	bra	u4010
  5698  002DEC                     u4017:
  5699  002DEC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5700  002DF0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5701  002DF4  50E7               	movf	indf1,w,c
  5702  002DF6                     u4010:
  5703  002DF6  ECDE  F01C         	call	_I2C_Send
  5704  002DFA  0100               	movlb	0	; () banked
  5705  002DFC  4B61               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  5706  002DFE  2B62               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;My_header\My_I2C.h: 138: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5710  002E00  0E68               	movlw	104
  5711  002E02                     u5077:
  5712  002E02  2EE8               	decfsz	wreg,f,c
  5713  002E04  D7FE               	goto	u5077
  5714  002E06                     l4283:
  5715  002E06  0100               	movlb	0	; () banked
  5716  002E08  C061  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  5717  002E0C  0100               	movlb	0	; () banked
  5718  002E0E  C062  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  5719  002E12  0E00               	movlw	low (__smallconst shr (0+16))
  5720  002E14  6EF8               	movwf	tblptru,c
  5721  002E16  0E0E               	movlw	(high __ramtop+-1)
  5722  002E18  64F7               	cpfsgt	tblptrh,c
  5723  002E1A  D003               	bra	u4027
  5724  002E1C  0008               	tblrd		*
  5725  002E1E  50F5               	movf	tablat,w,c
  5726  002E20  D005               	bra	u4020
  5727  002E22                     u4027:
  5728  002E22  CFF6 FFE1          	movff	tblptrl,fsr1l
  5729  002E26  CFF7 FFE2          	movff	tblptrh,fsr1h
  5730  002E2A  50E7               	movf	indf1,w,c
  5731  002E2C                     u4020:
  5732  002E2C  0900               	iorlw	0
  5733  002E2E  A4D8               	btfss	status,2,c
  5734  002E30  D7CF               	goto	l4277
  5735  002E32                     l4285:
  5736                           
  5737                           ;My_header\My_I2C.h: 139: }
  5738                           ;My_header\My_I2C.h: 140: }
  5739                           ;My_header\My_I2C.h: 141: I2C_Stop();
  5740  002E32  EC1F  F01D         	call	_I2C_Stop	;wreg free
  5741  002E36  0012               	return	
  5742  002E38                     __end_of_I2C_LCD_Puts:
  5743                           	opt stack 0
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           prodh	equ	0xFF4
  5749                           prodl	equ	0xFF3
  5750                           intcon	equ	0xFF2
  5751                           intcon2	equ	0xFF1
  5752                           postinc0	equ	0xFEE
  5753                           wreg	equ	0xFE8
  5754                           indf1	equ	0xFE7
  5755                           postdec1	equ	0xFE5
  5756                           fsr1h	equ	0xFE2
  5757                           fsr1l	equ	0xFE1
  5758                           indf2	equ	0xFDF
  5759                           postinc2	equ	0xFDE
  5760                           postdec2	equ	0xFDD
  5761                           fsr2h	equ	0xFDA
  5762                           fsr2l	equ	0xFD9
  5763                           status	equ	0xFD8
  5764                           
  5765 ;; *************** function _I2C_LCD_SetCursor *****************
  5766 ;; Defined at:
  5767 ;;		line 111 in file "../My_header\My_I2C.h"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  col             1    wreg     unsigned char 
  5770 ;;  row             1    3[BANK0 ] unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  col             1    6[BANK0 ] unsigned char 
  5773 ;;  row_offsets     2    4[BANK0 ] unsigned char [2]
  5774 ;; Return value:  Size  Location     Type
  5775 ;;		None               void
  5776 ;; Registers used:
  5777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5783 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;Total ram usage:        4 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    8
  5790 ;; This function calls:
  5791 ;;		_I2C_LCD_Command
  5792 ;; This function is called by:
  5793 ;;		_display_time
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text30
  5799  003752                     __ptext30:
  5800                           	opt stack 0
  5801  003752                     _I2C_LCD_SetCursor:
  5802                           	opt stack 21
  5803                           
  5804                           ;incstack = 0
  5805                           ;I2C_LCD_SetCursor@col stored from wreg
  5806  003752  0100               	movlb	0	; () banked
  5807  003754  6F66               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;My_header\My_I2C.h: 112: uint8_t row_offsets[] = {0x00, 0x40};
  5811  003756  C037  F064         	movff	I2C_LCD_SetCursor@F9850,I2C_LCD_SetCursor@row_offsets
  5812  00375A  C038  F065         	movff	I2C_LCD_SetCursor@F9850+1,I2C_LCD_SetCursor@row_offsets+1
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;My_header\My_I2C.h: 114: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  5816  00375E  0100               	movlb	0	; () banked
  5817  003760  5163               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  5818  003762  0D01               	mullw	1
  5819  003764  0100               	movlb	0	; () banked
  5820  003766  0E64               	movlw	low I2C_LCD_SetCursor@row_offsets
  5821  003768  24F3               	addwf	prodl,w,c
  5822  00376A  6ED9               	movwf	fsr2l,c
  5823  00376C  0100               	movlb	0	; () banked
  5824  00376E  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  5825  003770  20F4               	addwfc	prodh,w,c
  5826  003772  6EDA               	movwf	fsr2h,c
  5827  003774  50DF               	movf	indf2,w,c
  5828  003776  0100               	movlb	0	; () banked
  5829  003778  2566               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  5830  00377A  0980               	iorlw	128
  5831  00377C  EC77  F01B         	call	_I2C_LCD_Command
  5832  003780  0012               	return	
  5833  003782                     __end_of_I2C_LCD_SetCursor:
  5834                           	opt stack 0
  5835                           tblptru	equ	0xFF8
  5836                           tblptrh	equ	0xFF7
  5837                           tblptrl	equ	0xFF6
  5838                           tablat	equ	0xFF5
  5839                           prodh	equ	0xFF4
  5840                           prodl	equ	0xFF3
  5841                           intcon	equ	0xFF2
  5842                           intcon2	equ	0xFF1
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           indf1	equ	0xFE7
  5846                           postdec1	equ	0xFE5
  5847                           fsr1h	equ	0xFE2
  5848                           fsr1l	equ	0xFE1
  5849                           indf2	equ	0xFDF
  5850                           postinc2	equ	0xFDE
  5851                           postdec2	equ	0xFDD
  5852                           fsr2h	equ	0xFDA
  5853                           fsr2l	equ	0xFD9
  5854                           status	equ	0xFD8
  5855                           
  5856 ;; *************** function _I2C_LCD_Command *****************
  5857 ;; Defined at:
  5858 ;;		line 93 in file "../My_header\My_I2C.h"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  c               1    wreg     unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  c               1    1[BANK0 ] unsigned char 
  5863 ;;  ans             1    2[BANK0 ] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;		None               void
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5877 ;;Total ram usage:        2 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    7
  5880 ;; This function calls:
  5881 ;;		_I2C_Send
  5882 ;;		_I2C_Start
  5883 ;;		_I2C_Stop
  5884 ;; This function is called by:
  5885 ;;		_I2C_LCD_Clear
  5886 ;;		_I2C_LCD_SetCursor
  5887 ;;		_I2C_LCD_init
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text31
  5892  0036EE                     __ptext31:
  5893                           	opt stack 0
  5894  0036EE                     _I2C_LCD_Command:
  5895                           	opt stack 21
  5896                           
  5897                           ;incstack = 0
  5898                           ;I2C_LCD_Command@c stored from wreg
  5899  0036EE  0100               	movlb	0	; () banked
  5900  0036F0  6F61               	movwf	I2C_LCD_Command@c& (0+255),b
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;My_header\My_I2C.h: 94: uint8_t ans;
  5904                           ;My_header\My_I2C.h: 96: ans = I2C_Start(0x3E, 0);
  5905  0036F2  0E00               	movlw	0
  5906  0036F4  6E22               	movwf	I2C_Start@rw,c
  5907  0036F6  0E3E               	movlw	62
  5908  0036F8  ECC1  F01B         	call	_I2C_Start
  5909  0036FC  0100               	movlb	0	; () banked
  5910  0036FE  6F62               	movwf	I2C_LCD_Command@ans& (0+255),b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;My_header\My_I2C.h: 97: if (ans == 0) {
  5914  003700  0100               	movlb	0	; () banked
  5915  003702  6762               	tstfsz	I2C_LCD_Command@ans& (0+255),b
  5916  003704  D007               	goto	l329
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;My_header\My_I2C.h: 99: I2C_Send(0b10000000);
  5920  003706  0E80               	movlw	128
  5921  003708  ECDE  F01C         	call	_I2C_Send
  5922                           
  5923                           ;My_header\My_I2C.h: 100: I2C_Send(c);
  5924  00370C  0100               	movlb	0	; () banked
  5925  00370E  5161               	movf	I2C_LCD_Command@c& (0+255),w,b
  5926  003710  ECDE  F01C         	call	_I2C_Send
  5927  003714                     l329:
  5928                           
  5929                           ;My_header\My_I2C.h: 101: }
  5930                           ;My_header\My_I2C.h: 102: I2C_Stop();
  5931  003714  EC1F  F01D         	call	_I2C_Stop	;wreg free
  5932                           
  5933                           ;My_header\My_I2C.h: 103: _delay((unsigned long)((26)*(48000000/4000000.0)));
  5934  003718  0E68               	movlw	104
  5935  00371A                     u5087:
  5936  00371A  2EE8               	decfsz	wreg,f,c
  5937  00371C  D7FE               	goto	u5087
  5938  00371E  0012               	return	
  5939  003720                     __end_of_I2C_LCD_Command:
  5940                           	opt stack 0
  5941                           tblptru	equ	0xFF8
  5942                           tblptrh	equ	0xFF7
  5943                           tblptrl	equ	0xFF6
  5944                           tablat	equ	0xFF5
  5945                           prodh	equ	0xFF4
  5946                           prodl	equ	0xFF3
  5947                           intcon	equ	0xFF2
  5948                           intcon2	equ	0xFF1
  5949                           postinc0	equ	0xFEE
  5950                           wreg	equ	0xFE8
  5951                           indf1	equ	0xFE7
  5952                           postdec1	equ	0xFE5
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           indf2	equ	0xFDF
  5956                           postinc2	equ	0xFDE
  5957                           postdec2	equ	0xFDD
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _I2C_LCD_Putc *****************
  5963 ;; Defined at:
  5964 ;;		line 117 in file "../My_header\My_I2C.h"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  c               1    wreg     unsigned char 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  c               1    1[BANK0 ] unsigned char 
  5969 ;;  ans             1    2[BANK0 ] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;		None               void
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;Total ram usage:        2 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    7
  5986 ;; This function calls:
  5987 ;;		_I2C_Send
  5988 ;;		_I2C_Start
  5989 ;;		_I2C_Stop
  5990 ;; This function is called by:
  5991 ;;		_display_time
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text32
  5996  003720                     __ptext32:
  5997                           	opt stack 0
  5998  003720                     _I2C_LCD_Putc:
  5999                           	opt stack 22
  6000                           
  6001                           ;incstack = 0
  6002                           ;I2C_LCD_Putc@c stored from wreg
  6003  003720  0100               	movlb	0	; () banked
  6004  003722  6F61               	movwf	I2C_LCD_Putc@c& (0+255),b
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;My_header\My_I2C.h: 118: uint8_t ans;
  6008                           ;My_header\My_I2C.h: 120: ans = I2C_Start(0x3E, 0);
  6009  003724  0E00               	movlw	0
  6010  003726  6E22               	movwf	I2C_Start@rw,c
  6011  003728  0E3E               	movlw	62
  6012  00372A  ECC1  F01B         	call	_I2C_Start
  6013  00372E  0100               	movlb	0	; () banked
  6014  003730  6F62               	movwf	I2C_LCD_Putc@ans& (0+255),b
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;My_header\My_I2C.h: 121: if (ans == 0) {
  6018  003732  0100               	movlb	0	; () banked
  6019  003734  6762               	tstfsz	I2C_LCD_Putc@ans& (0+255),b
  6020  003736  D007               	goto	l341
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;My_header\My_I2C.h: 123: I2C_Send(0b11000000);
  6024  003738  0EC0               	movlw	192
  6025  00373A  ECDE  F01C         	call	_I2C_Send
  6026                           
  6027                           ;My_header\My_I2C.h: 124: I2C_Send(c);
  6028  00373E  0100               	movlb	0	; () banked
  6029  003740  5161               	movf	I2C_LCD_Putc@c& (0+255),w,b
  6030  003742  ECDE  F01C         	call	_I2C_Send
  6031  003746                     l341:
  6032                           
  6033                           ;My_header\My_I2C.h: 125: }
  6034                           ;My_header\My_I2C.h: 126: I2C_Stop();
  6035  003746  EC1F  F01D         	call	_I2C_Stop	;wreg free
  6036                           
  6037                           ;My_header\My_I2C.h: 127: _delay((unsigned long)((26)*(48000000/4000000.0)));
  6038  00374A  0E68               	movlw	104
  6039  00374C                     u5097:
  6040  00374C  2EE8               	decfsz	wreg,f,c
  6041  00374E  D7FE               	goto	u5097
  6042  003750  0012               	return	
  6043  003752                     __end_of_I2C_LCD_Putc:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           intcon2	equ	0xFF1
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           indf1	equ	0xFE7
  6056                           postdec1	equ	0xFE5
  6057                           fsr1h	equ	0xFE2
  6058                           fsr1l	equ	0xFE1
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function _I2C_Stop *****************
  6067 ;; Defined at:
  6068 ;;		line 57 in file "../My_header\My_I2C.h"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;		None
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;		None
  6073 ;; Return value:  Size  Location     Type
  6074 ;;		None               void
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;Total ram usage:        0 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    6
  6089 ;; This function calls:
  6090 ;;		_I2C_IdleCheck
  6091 ;; This function is called by:
  6092 ;;		_I2C_LCD_Command
  6093 ;;		_I2C_LCD_Putc
  6094 ;;		_I2C_LCD_Puts
  6095 ;;		_I2C_LCD_CreateChar
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text33
  6100  003A3E                     __ptext33:
  6101                           	opt stack 0
  6102  003A3E                     _I2C_Stop:
  6103                           	opt stack 21
  6104                           
  6105                           ;My_header\My_I2C.h: 59: I2C_IdleCheck(0x5);
  6106                           
  6107                           ;incstack = 0
  6108  003A3E  0E05               	movlw	5
  6109  003A40  ECE9  F01C         	call	_I2C_IdleCheck
  6110                           
  6111                           ;My_header\My_I2C.h: 60: SSP1CON2bits.PEN = 1;
  6112  003A44  84C5               	bsf	4037,2,c	;volatile
  6113  003A46  0012               	return	
  6114  003A48                     __end_of_I2C_Stop:
  6115                           	opt stack 0
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           intcon2	equ	0xFF1
  6124                           postinc0	equ	0xFEE
  6125                           wreg	equ	0xFE8
  6126                           indf1	equ	0xFE7
  6127                           postdec1	equ	0xFE5
  6128                           fsr1h	equ	0xFE2
  6129                           fsr1l	equ	0xFE1
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _I2C_Start *****************
  6138 ;; Defined at:
  6139 ;;		line 33 in file "../My_header\My_I2C.h"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  adrs            1    wreg     unsigned char 
  6142 ;;  rw              1   33[COMRAM] unsigned char 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  adrs            1    0[BANK0 ] unsigned char 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      unsigned char 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6154 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6158 ;;Total ram usage:        2 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    6
  6161 ;; This function calls:
  6162 ;;		_I2C_IdleCheck
  6163 ;; This function is called by:
  6164 ;;		_I2C_LCD_Command
  6165 ;;		_I2C_LCD_Putc
  6166 ;;		_I2C_LCD_Puts
  6167 ;;		_I2C_LCD_CreateChar
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text34
  6172  003782                     __ptext34:
  6173                           	opt stack 0
  6174  003782                     _I2C_Start:
  6175                           	opt stack 21
  6176                           
  6177                           ;incstack = 0
  6178                           ;I2C_Start@adrs stored from wreg
  6179  003782  0100               	movlb	0	; () banked
  6180  003784  6F60               	movwf	I2C_Start@adrs& (0+255),b
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;My_header\My_I2C.h: 35: I2C_IdleCheck(0x5);
  6184  003786  0E05               	movlw	5
  6185  003788  ECE9  F01C         	call	_I2C_IdleCheck
  6186                           
  6187                           ;My_header\My_I2C.h: 36: SSP1CON2bits.SEN = 1;
  6188  00378C  80C5               	bsf	4037,0,c	;volatile
  6189                           
  6190                           ;My_header\My_I2C.h: 38: I2C_IdleCheck(0x5);
  6191  00378E  0E05               	movlw	5
  6192  003790  ECE9  F01C         	call	_I2C_IdleCheck
  6193                           
  6194                           ;My_header\My_I2C.h: 39: SSP1IF = 0;
  6195  003794  969E               	bcf	3998,3,c	;volatile
  6196                           
  6197                           ;My_header\My_I2C.h: 40: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  6198  003796  0100               	movlb	0	; () banked
  6199  003798  5160               	movf	I2C_Start@adrs& (0+255),w,b
  6200  00379A  0100               	movlb	0	; () banked
  6201  00379C  2560               	addwf	I2C_Start@adrs& (0+255),w,b
  6202  00379E  2422               	addwf	I2C_Start@rw,w,c
  6203  0037A0  6EC9               	movwf	4041,c	;volatile
  6204  0037A2                     l305:
  6205                           
  6206                           ; BSR set to: 0
  6207  0037A2  A69E               	btfss	3998,3,c	;volatile
  6208  0037A4  D7FE               	goto	l305
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;My_header\My_I2C.h: 42: return SSP1CON2bits.ACKSTAT;
  6212                           
  6213                           ; BSR set to: 0
  6214  0037A6  ACC5               	btfss	4037,6,c	;volatile
  6215  0037A8  D002               	goto	u3650
  6216  0037AA  0E01               	movlw	1
  6217  0037AC  0012               	return	
  6218  0037AE                     u3650:
  6219  0037AE  0E00               	movlw	0
  6220  0037B0  0012               	return	
  6221  0037B2                     __end_of_I2C_Start:
  6222                           	opt stack 0
  6223                           tblptru	equ	0xFF8
  6224                           tblptrh	equ	0xFF7
  6225                           tblptrl	equ	0xFF6
  6226                           tablat	equ	0xFF5
  6227                           prodh	equ	0xFF4
  6228                           prodl	equ	0xFF3
  6229                           intcon	equ	0xFF2
  6230                           intcon2	equ	0xFF1
  6231                           postinc0	equ	0xFEE
  6232                           wreg	equ	0xFE8
  6233                           indf1	equ	0xFE7
  6234                           postdec1	equ	0xFE5
  6235                           fsr1h	equ	0xFE2
  6236                           fsr1l	equ	0xFE1
  6237                           indf2	equ	0xFDF
  6238                           postinc2	equ	0xFDE
  6239                           postdec2	equ	0xFDD
  6240                           fsr2h	equ	0xFDA
  6241                           fsr2l	equ	0xFD9
  6242                           status	equ	0xFD8
  6243                           
  6244 ;; *************** function _I2C_Send *****************
  6245 ;; Defined at:
  6246 ;;		line 63 in file "../My_header\My_I2C.h"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  data            1    wreg     unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  data            1   33[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      unsigned char 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;Total ram usage:        1 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    6
  6267 ;; This function calls:
  6268 ;;		_I2C_IdleCheck
  6269 ;; This function is called by:
  6270 ;;		_I2C_LCD_Command
  6271 ;;		_I2C_LCD_Putc
  6272 ;;		_I2C_LCD_Puts
  6273 ;;		_I2C_LCD_CreateChar
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text35
  6278  0039BC                     __ptext35:
  6279                           	opt stack 0
  6280  0039BC                     _I2C_Send:
  6281                           	opt stack 21
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;incstack = 0
  6285                           ;I2C_Send@data stored from wreg
  6286  0039BC  6E22               	movwf	I2C_Send@data,c
  6287                           
  6288                           ;My_header\My_I2C.h: 64: I2C_IdleCheck(0x5);
  6289  0039BE  0E05               	movlw	5
  6290  0039C0  ECE9  F01C         	call	_I2C_IdleCheck
  6291                           
  6292                           ;My_header\My_I2C.h: 65: SSP1IF = 0;
  6293  0039C4  969E               	bcf	3998,3,c	;volatile
  6294                           
  6295                           ;My_header\My_I2C.h: 66: SSP1BUF = data;
  6296  0039C6  C022  FFC9         	movff	I2C_Send@data,4041	;volatile
  6297  0039CA                     l320:
  6298  0039CA  A69E               	btfss	3998,3,c	;volatile
  6299  0039CC  D7FE               	goto	l320
  6300                           
  6301                           ;My_header\My_I2C.h: 68: return SSP1CON2bits.ACKSTAT;
  6302                           ;	Return value of _I2C_Send is never used
  6303  0039CE  50C5               	movf	4037,w,c	;volatile
  6304  0039D0  0012               	return	
  6305  0039D2                     __end_of_I2C_Send:
  6306                           	opt stack 0
  6307                           tblptru	equ	0xFF8
  6308                           tblptrh	equ	0xFF7
  6309                           tblptrl	equ	0xFF6
  6310                           tablat	equ	0xFF5
  6311                           prodh	equ	0xFF4
  6312                           prodl	equ	0xFF3
  6313                           intcon	equ	0xFF2
  6314                           intcon2	equ	0xFF1
  6315                           postinc0	equ	0xFEE
  6316                           wreg	equ	0xFE8
  6317                           indf1	equ	0xFE7
  6318                           postdec1	equ	0xFE5
  6319                           fsr1h	equ	0xFE2
  6320                           fsr1l	equ	0xFE1
  6321                           indf2	equ	0xFDF
  6322                           postinc2	equ	0xFDE
  6323                           postdec2	equ	0xFDD
  6324                           fsr2h	equ	0xFDA
  6325                           fsr2l	equ	0xFD9
  6326                           status	equ	0xFD8
  6327                           
  6328 ;; *************** function _I2C_IdleCheck *****************
  6329 ;; Defined at:
  6330 ;;		line 19 in file "../My_header\My_I2C.h"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  mask            1    wreg     unsigned char 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  mask            1   32[COMRAM] unsigned char 
  6335 ;; Return value:  Size  Location     Type
  6336 ;;		None               void
  6337 ;; Registers used:
  6338 ;;		wreg, status,2, status,0
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6348 ;;Total ram usage:        2 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    5
  6351 ;; This function calls:
  6352 ;;		Nothing
  6353 ;; This function is called by:
  6354 ;;		_I2C_Start
  6355 ;;		_I2C_Stop
  6356 ;;		_I2C_Send
  6357 ;;		_I2C_rStart
  6358 ;;		_I2C_Receive
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text36
  6363  0039D2                     __ptext36:
  6364                           	opt stack 0
  6365  0039D2                     _I2C_IdleCheck:
  6366                           	opt stack 21
  6367                           
  6368                           ;incstack = 0
  6369                           ;I2C_IdleCheck@mask stored from wreg
  6370  0039D2  6E21               	movwf	I2C_IdleCheck@mask,c
  6371  0039D4                     l3971:
  6372  0039D4  50C7               	movf	4039,w,c	;volatile
  6373  0039D6  1421               	andwf	I2C_IdleCheck@mask,w,c
  6374  0039D8  6E20               	movwf	??_I2C_IdleCheck& (0+255),c
  6375  0039DA  50C5               	movf	4037,w,c	;volatile
  6376  0039DC  0B1F               	andlw	31
  6377  0039DE  1020               	iorwf	??_I2C_IdleCheck,w,c
  6378  0039E0  0900               	iorlw	0
  6379  0039E2  B4D8               	btfsc	status,2,c
  6380  0039E4  0012               	return	
  6381  0039E6  D7F6               	goto	l3971
  6382  0039E8                     __end_of_I2C_IdleCheck:
  6383                           	opt stack 0
  6384                           tblptru	equ	0xFF8
  6385                           tblptrh	equ	0xFF7
  6386                           tblptrl	equ	0xFF6
  6387                           tablat	equ	0xFF5
  6388                           prodh	equ	0xFF4
  6389                           prodl	equ	0xFF3
  6390                           intcon	equ	0xFF2
  6391                           intcon2	equ	0xFF1
  6392                           postinc0	equ	0xFEE
  6393                           wreg	equ	0xFE8
  6394                           indf1	equ	0xFE7
  6395                           postdec1	equ	0xFE5
  6396                           fsr1h	equ	0xFE2
  6397                           fsr1l	equ	0xFE1
  6398                           indf2	equ	0xFDF
  6399                           postinc2	equ	0xFDE
  6400                           postdec2	equ	0xFDD
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function _RTCC_time_set_toggle *****************
  6406 ;; Defined at:
  6407 ;;		line 285 in file "../My_header\My_RTCC.h"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;		None
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;		None
  6412 ;; Return value:  Size  Location     Type
  6413 ;;		None               void
  6414 ;; Registers used:
  6415 ;;		wreg, status,2
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6425 ;;Total ram usage:        0 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; Hardware stack levels required when called:    5
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_main
  6432 ;;		_RTCC_time_set
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text37
  6437  0039E8                     __ptext37:
  6438                           	opt stack 0
  6439  0039E8                     _RTCC_time_set_toggle:
  6440                           	opt stack 25
  6441                           
  6442                           ;My_header\My_RTCC.h: 286: if (edit_flag.flags) {
  6443                           
  6444                           ;incstack = 0
  6445  0039E8  0100               	movlb	0	; () banked
  6446  0039EA  51D3               	movf	_edit_flag& (0+255),w,b
  6447  0039EC  B4D8               	btfsc	status,2,c
  6448  0039EE  D004               	goto	l444
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;My_header\My_RTCC.h: 287: edit_flag.flags = 0;
  6452  0039F0  0E00               	movlw	0
  6453  0039F2  0100               	movlb	0	; () banked
  6454  0039F4  6FD3               	movwf	_edit_flag& (0+255),b
  6455                           
  6456                           ;My_header\My_RTCC.h: 288: } else {
  6457  0039F6  0012               	return	
  6458  0039F8                     l444:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;My_header\My_RTCC.h: 289: edit_flag.flag.ss = 1;
  6462  0039F8  0100               	movlb	0	; () banked
  6463  0039FA  81D3               	bsf	_edit_flag& (0+255),0,b
  6464  0039FC  0012               	return	
  6465  0039FE                     __end_of_RTCC_time_set_toggle:
  6466                           	opt stack 0
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           intcon2	equ	0xFF1
  6475                           postinc0	equ	0xFEE
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           postdec1	equ	0xFE5
  6479                           fsr1h	equ	0xFE2
  6480                           fsr1l	equ	0xFE1
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function _RTCC_time_set_inc *****************
  6489 ;; Defined at:
  6490 ;;		line 302 in file "../My_header\My_RTCC.h"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  ct              2   63[BANK0 ] PTR struct .
  6493 ;;		 -> caltime_now(7), 
  6494 ;;  ep              2   65[BANK0 ] PTR unsigned long 
  6495 ;;		 -> epoch_now(4), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  i               1   73[BANK0 ] unsigned char 
  6498 ;;  i               1   74[BANK0 ] unsigned char 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;		None               void
  6501 ;; Registers used:
  6502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;Total ram usage:       12 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    9
  6515 ;; This function calls:
  6516 ;;		_RTCC_from_RTCC
  6517 ;;		_RTCC_from_epoch
  6518 ;;		___lmul
  6519 ;;		_month_length
  6520 ;; This function is called by:
  6521 ;;		_main
  6522 ;;		_RTCC_time_set
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text38
  6527  00168C                     __ptext38:
  6528                           	opt stack 0
  6529  00168C                     _RTCC_time_set_inc:
  6530                           	opt stack 21
  6531                           
  6532                           ;My_header\My_RTCC.h: 303: RTCC_from_RTCC(ct, ep);
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;incstack = 0
  6536  00168C  0100               	movlb	0	; () banked
  6537  00168E  C0A0  F08D         	movff	RTCC_time_set_inc@ct+1,RTCC_from_RTCC@ct+1
  6538  001692  0100               	movlb	0	; () banked
  6539  001694  C09F  F08C         	movff	RTCC_time_set_inc@ct,RTCC_from_RTCC@ct
  6540  001698  0100               	movlb	0	; () banked
  6541  00169A  C0A2  F08F         	movff	RTCC_time_set_inc@ep+1,RTCC_from_RTCC@ep+1
  6542  00169E  0100               	movlb	0	; () banked
  6543  0016A0  C0A1  F08E         	movff	RTCC_time_set_inc@ep,RTCC_from_RTCC@ep
  6544  0016A4  EC36  F01C         	call	_RTCC_from_RTCC	;wreg free
  6545                           
  6546                           ;My_header\My_RTCC.h: 304: if (edit_flag.flag.ss) *ep += 1;
  6547  0016A8  0100               	movlb	0	; () banked
  6548  0016AA  A1D3               	btfss	_edit_flag& (0+255),0,b
  6549  0016AC  D009               	goto	l4609
  6550                           
  6551                           ; BSR set to: 0
  6552  0016AE  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6553  0016B2  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6554  0016B6  2ADE               	incf	postinc2,f,c
  6555  0016B8  0E00               	movlw	0
  6556  0016BA  22DE               	addwfc	postinc2,f,c
  6557  0016BC  22DE               	addwfc	postinc2,f,c
  6558  0016BE  22DD               	addwfc	postdec2,f,c
  6559  0016C0                     l4609:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;My_header\My_RTCC.h: 305: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  6563  0016C0  0100               	movlb	0	; () banked
  6564  0016C2  A3D3               	btfss	_edit_flag& (0+255),1,b
  6565  0016C4  D00C               	goto	l4613
  6566                           
  6567                           ; BSR set to: 0
  6568  0016C6  0E3C               	movlw	60
  6569  0016C8  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6570  0016CC  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6571  0016D0  26DE               	addwf	postinc2,f,c
  6572  0016D2  0E00               	movlw	0
  6573  0016D4  22DE               	addwfc	postinc2,f,c
  6574  0016D6  22DE               	addwfc	postinc2,f,c
  6575  0016D8  22DD               	addwfc	postdec2,f,c
  6576  0016DA  52DD               	movf	postdec2,f,c
  6577  0016DC  52DD               	movf	postdec2,f,c
  6578  0016DE                     l4613:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;My_header\My_RTCC.h: 306: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  6582  0016DE  0100               	movlb	0	; () banked
  6583  0016E0  A5D3               	btfss	_edit_flag& (0+255),2,b
  6584  0016E2  D00E               	goto	l4617
  6585                           
  6586                           ; BSR set to: 0
  6587  0016E4  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6588  0016E8  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6589  0016EC  0E10               	movlw	16
  6590  0016EE  26DE               	addwf	postinc2,f,c
  6591  0016F0  0E0E               	movlw	14
  6592  0016F2  22DE               	addwfc	postinc2,f,c
  6593  0016F4  0E00               	movlw	0
  6594  0016F6  22DE               	addwfc	postinc2,f,c
  6595  0016F8  0E00               	movlw	0
  6596  0016FA  22DD               	addwfc	postdec2,f,c
  6597  0016FC  52DD               	movf	postdec2,f,c
  6598  0016FE  52DD               	movf	postdec2,f,c
  6599  001700                     l4617:
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;My_header\My_RTCC.h: 307: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  6603  001700  0100               	movlb	0	; () banked
  6604  001702  A7D3               	btfss	_edit_flag& (0+255),3,b
  6605  001704  D00E               	goto	l4621
  6606                           
  6607                           ; BSR set to: 0
  6608  001706  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6609  00170A  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6610  00170E  0E80               	movlw	128
  6611  001710  26DE               	addwf	postinc2,f,c
  6612  001712  0E51               	movlw	81
  6613  001714  22DE               	addwfc	postinc2,f,c
  6614  001716  0E01               	movlw	1
  6615  001718  22DE               	addwfc	postinc2,f,c
  6616  00171A  0E00               	movlw	0
  6617  00171C  22DD               	addwfc	postdec2,f,c
  6618  00171E  52DD               	movf	postdec2,f,c
  6619  001720  52DD               	movf	postdec2,f,c
  6620  001722                     l4621:
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;My_header\My_RTCC.h: 308: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  6624  001722  0100               	movlb	0	; () banked
  6625  001724  A9D3               	btfss	_edit_flag& (0+255),4,b
  6626  001726  D048               	goto	l4625
  6627                           
  6628                           ; BSR set to: 0
  6629  001728  0100               	movlb	0	; () banked
  6630  00172A  EE20 F005          	lfsr	2,5
  6631  00172E  0100               	movlb	0	; () banked
  6632  001730  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6633  001732  26D9               	addwf	fsr2l,f,c
  6634  001734  0100               	movlb	0	; () banked
  6635  001736  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6636  001738  22DA               	addwfc	fsr2h,f,c
  6637  00173A  50DF               	movf	indf2,w,c
  6638  00173C  6E22               	movwf	month_length@month,c
  6639  00173E  0100               	movlb	0	; () banked
  6640  001740  EE20 F006          	lfsr	2,6
  6641  001744  0100               	movlb	0	; () banked
  6642  001746  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6643  001748  26D9               	addwf	fsr2l,f,c
  6644  00174A  0100               	movlb	0	; () banked
  6645  00174C  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6646  00174E  22DA               	addwfc	fsr2h,f,c
  6647  001750  50DF               	movf	indf2,w,c
  6648  001752  EC82  F013         	call	_month_length
  6649  001756  0100               	movlb	0	; () banked
  6650  001758  6FA3               	movwf	??_RTCC_time_set_inc& (0+255),b
  6651  00175A  0100               	movlb	0	; () banked
  6652  00175C  51A3               	movf	??_RTCC_time_set_inc& (0+255),w,b
  6653  00175E  0100               	movlb	0	; () banked
  6654  001760  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6655  001762  0100               	movlb	0	; () banked
  6656  001764  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6657  001766  0100               	movlb	0	; () banked
  6658  001768  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6659  00176A  0100               	movlb	0	; () banked
  6660  00176C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6661  00176E  0E80               	movlw	128
  6662  001770  0100               	movlb	0	; () banked
  6663  001772  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6664  001774  0E51               	movlw	81
  6665  001776  0100               	movlb	0	; () banked
  6666  001778  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6667  00177A  0E01               	movlw	1
  6668  00177C  0100               	movlb	0	; () banked
  6669  00177E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6670  001780  0E00               	movlw	0
  6671  001782  0100               	movlb	0	; () banked
  6672  001784  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6673  001786  ECF3  F017         	call	___lmul	;wreg free
  6674  00178A  C06D  F0A4         	movff	?___lmul,??_RTCC_time_set_inc+1
  6675  00178E  C06E  F0A5         	movff	?___lmul+1,??_RTCC_time_set_inc+2
  6676  001792  C06F  F0A6         	movff	?___lmul+2,??_RTCC_time_set_inc+3
  6677  001796  C070  F0A7         	movff	?___lmul+3,??_RTCC_time_set_inc+4
  6678  00179A  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6679  00179E  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6680  0017A2  0100               	movlb	0	; () banked
  6681  0017A4  51A4               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6682  0017A6  26DE               	addwf	postinc2,f,c
  6683  0017A8  51A5               	movf	(??_RTCC_time_set_inc+2)& (0+255),w,b
  6684  0017AA  22DE               	addwfc	postinc2,f,c
  6685  0017AC  51A6               	movf	(??_RTCC_time_set_inc+3)& (0+255),w,b
  6686  0017AE  22DE               	addwfc	postinc2,f,c
  6687  0017B0  51A7               	movf	(??_RTCC_time_set_inc+4)& (0+255),w,b
  6688  0017B2  22DD               	addwfc	postdec2,f,c
  6689  0017B4  52DD               	movf	postdec2,f,c
  6690  0017B6  52DD               	movf	postdec2,f,c
  6691  0017B8                     l4625:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;My_header\My_RTCC.h: 309: if (edit_flag.flag.YY) {
  6695  0017B8  0100               	movlb	0	; () banked
  6696  0017BA  ABD3               	btfss	_edit_flag& (0+255),5,b
  6697  0017BC  D0A9               	goto	l4647
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;My_header\My_RTCC.h: 310: for (uint8_t i = ct->MM; i <= 12; i++) {
  6701  0017BE  0100               	movlb	0	; () banked
  6702  0017C0  EE20 F005          	lfsr	2,5
  6703  0017C4  0100               	movlb	0	; () banked
  6704  0017C6  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6705  0017C8  26D9               	addwf	fsr2l,f,c
  6706  0017CA  0100               	movlb	0	; () banked
  6707  0017CC  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6708  0017CE  22DA               	addwfc	fsr2h,f,c
  6709  0017D0  50DF               	movf	indf2,w,c
  6710  0017D2  0100               	movlb	0	; () banked
  6711  0017D4  6FAA               	movwf	RTCC_time_set_inc@i& (0+255),b
  6712  0017D6  D041               	goto	L2
  6713  0017D8                     l4633:
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;My_header\My_RTCC.h: 311: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  6717  0017D8  C0AA  F022         	movff	RTCC_time_set_inc@i,month_length@month
  6718  0017DC  0100               	movlb	0	; () banked
  6719  0017DE  EE20 F006          	lfsr	2,6
  6720  0017E2  0100               	movlb	0	; () banked
  6721  0017E4  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6722  0017E6  26D9               	addwf	fsr2l,f,c
  6723  0017E8  0100               	movlb	0	; () banked
  6724  0017EA  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6725  0017EC  22DA               	addwfc	fsr2h,f,c
  6726  0017EE  50DF               	movf	indf2,w,c
  6727  0017F0  EC82  F013         	call	_month_length
  6728  0017F4  0100               	movlb	0	; () banked
  6729  0017F6  6FA3               	movwf	??_RTCC_time_set_inc& (0+255),b
  6730  0017F8  0100               	movlb	0	; () banked
  6731  0017FA  51A3               	movf	??_RTCC_time_set_inc& (0+255),w,b
  6732  0017FC  0100               	movlb	0	; () banked
  6733  0017FE  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6734  001800  0100               	movlb	0	; () banked
  6735  001802  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6736  001804  0100               	movlb	0	; () banked
  6737  001806  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6738  001808  0100               	movlb	0	; () banked
  6739  00180A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6740  00180C  0E80               	movlw	128
  6741  00180E  0100               	movlb	0	; () banked
  6742  001810  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6743  001812  0E51               	movlw	81
  6744  001814  0100               	movlb	0	; () banked
  6745  001816  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6746  001818  0E01               	movlw	1
  6747  00181A  0100               	movlb	0	; () banked
  6748  00181C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6749  00181E  0E00               	movlw	0
  6750  001820  0100               	movlb	0	; () banked
  6751  001822  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6752  001824  ECF3  F017         	call	___lmul	;wreg free
  6753  001828  C06D  F0A4         	movff	?___lmul,??_RTCC_time_set_inc+1
  6754  00182C  C06E  F0A5         	movff	?___lmul+1,??_RTCC_time_set_inc+2
  6755  001830  C06F  F0A6         	movff	?___lmul+2,??_RTCC_time_set_inc+3
  6756  001834  C070  F0A7         	movff	?___lmul+3,??_RTCC_time_set_inc+4
  6757  001838  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6758  00183C  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6759  001840  0100               	movlb	0	; () banked
  6760  001842  51A4               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6761  001844  26DE               	addwf	postinc2,f,c
  6762  001846  51A5               	movf	(??_RTCC_time_set_inc+2)& (0+255),w,b
  6763  001848  22DE               	addwfc	postinc2,f,c
  6764  00184A  51A6               	movf	(??_RTCC_time_set_inc+3)& (0+255),w,b
  6765  00184C  22DE               	addwfc	postinc2,f,c
  6766  00184E  51A7               	movf	(??_RTCC_time_set_inc+4)& (0+255),w,b
  6767  001850  22DD               	addwfc	postdec2,f,c
  6768  001852  52DD               	movf	postdec2,f,c
  6769  001854  52DD               	movf	postdec2,f,c
  6770                           
  6771                           ; BSR set to: 0
  6772  001856  0100               	movlb	0	; () banked
  6773  001858  2BAA               	incf	RTCC_time_set_inc@i& (0+255),f,b
  6774  00185A                     L2:
  6775                           
  6776                           ; BSR set to: 0
  6777  00185A  0E0C               	movlw	12
  6778  00185C  0100               	movlb	0	; () banked
  6779  00185E  65AA               	cpfsgt	RTCC_time_set_inc@i& (0+255),b
  6780  001860  D7BB               	goto	l4633
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;My_header\My_RTCC.h: 312: }
  6784                           ;My_header\My_RTCC.h: 313: for (uint8_t i = 1; i < ct->MM; i++) {
  6785                           
  6786                           ; BSR set to: 0
  6787  001862  0E01               	movlw	1
  6788  001864  0100               	movlb	0	; () banked
  6789  001866  6FA9               	movwf	RTCC_time_set_inc@i_2072& (0+255),b
  6790  001868  D045               	goto	l4645
  6791  00186A                     l4641:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;My_header\My_RTCC.h: 314: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  6795  00186A  C0A9  F022         	movff	RTCC_time_set_inc@i_2072,month_length@month
  6796  00186E  0100               	movlb	0	; () banked
  6797  001870  EE20 F006          	lfsr	2,6
  6798  001874  0100               	movlb	0	; () banked
  6799  001876  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6800  001878  26D9               	addwf	fsr2l,f,c
  6801  00187A  0100               	movlb	0	; () banked
  6802  00187C  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6803  00187E  22DA               	addwfc	fsr2h,f,c
  6804  001880  50DF               	movf	indf2,w,c
  6805  001882  0100               	movlb	0	; () banked
  6806  001884  6FA3               	movwf	??_RTCC_time_set_inc& (0+255),b
  6807  001886  0100               	movlb	0	; () banked
  6808  001888  29A3               	incf	??_RTCC_time_set_inc& (0+255),w,b
  6809  00188A  EC82  F013         	call	_month_length
  6810  00188E  0100               	movlb	0	; () banked
  6811  001890  6FA4               	movwf	(??_RTCC_time_set_inc+1)& (0+255),b
  6812  001892  0100               	movlb	0	; () banked
  6813  001894  51A4               	movf	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6814  001896  0100               	movlb	0	; () banked
  6815  001898  6F6D               	movwf	___lmul@multiplier& (0+255),b
  6816  00189A  0100               	movlb	0	; () banked
  6817  00189C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  6818  00189E  0100               	movlb	0	; () banked
  6819  0018A0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  6820  0018A2  0100               	movlb	0	; () banked
  6821  0018A4  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  6822  0018A6  0E80               	movlw	128
  6823  0018A8  0100               	movlb	0	; () banked
  6824  0018AA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6825  0018AC  0E51               	movlw	81
  6826  0018AE  0100               	movlb	0	; () banked
  6827  0018B0  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  6828  0018B2  0E01               	movlw	1
  6829  0018B4  0100               	movlb	0	; () banked
  6830  0018B6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  6831  0018B8  0E00               	movlw	0
  6832  0018BA  0100               	movlb	0	; () banked
  6833  0018BC  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  6834  0018BE  ECF3  F017         	call	___lmul	;wreg free
  6835  0018C2  C06D  F0A5         	movff	?___lmul,??_RTCC_time_set_inc+2
  6836  0018C6  C06E  F0A6         	movff	?___lmul+1,??_RTCC_time_set_inc+3
  6837  0018CA  C06F  F0A7         	movff	?___lmul+2,??_RTCC_time_set_inc+4
  6838  0018CE  C070  F0A8         	movff	?___lmul+3,??_RTCC_time_set_inc+5
  6839  0018D2  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6840  0018D6  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6841  0018DA  0100               	movlb	0	; () banked
  6842  0018DC  51A5               	movf	(??_RTCC_time_set_inc+2)& (0+255),w,b
  6843  0018DE  26DE               	addwf	postinc2,f,c
  6844  0018E0  51A6               	movf	(??_RTCC_time_set_inc+3)& (0+255),w,b
  6845  0018E2  22DE               	addwfc	postinc2,f,c
  6846  0018E4  51A7               	movf	(??_RTCC_time_set_inc+4)& (0+255),w,b
  6847  0018E6  22DE               	addwfc	postinc2,f,c
  6848  0018E8  51A8               	movf	(??_RTCC_time_set_inc+5)& (0+255),w,b
  6849  0018EA  22DD               	addwfc	postdec2,f,c
  6850  0018EC  52DD               	movf	postdec2,f,c
  6851  0018EE  52DD               	movf	postdec2,f,c
  6852                           
  6853                           ; BSR set to: 0
  6854  0018F0  0100               	movlb	0	; () banked
  6855  0018F2  2BA9               	incf	RTCC_time_set_inc@i_2072& (0+255),f,b
  6856  0018F4                     l4645:
  6857                           
  6858                           ; BSR set to: 0
  6859  0018F4  0100               	movlb	0	; () banked
  6860  0018F6  EE20 F005          	lfsr	2,5
  6861  0018FA  0100               	movlb	0	; () banked
  6862  0018FC  519F               	movf	RTCC_time_set_inc@ct& (0+255),w,b
  6863  0018FE  26D9               	addwf	fsr2l,f,c
  6864  001900  0100               	movlb	0	; () banked
  6865  001902  51A0               	movf	(RTCC_time_set_inc@ct+1)& (0+255),w,b
  6866  001904  22DA               	addwfc	fsr2h,f,c
  6867  001906  50DF               	movf	indf2,w,c
  6868  001908  0100               	movlb	0	; () banked
  6869  00190A  5DA9               	subwf	RTCC_time_set_inc@i_2072& (0+255),w,b
  6870  00190C  A0D8               	btfss	status,0,c
  6871  00190E  D7AD               	goto	l4641
  6872  001910                     l4647:
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;My_header\My_RTCC.h: 315: }
  6876                           ;My_header\My_RTCC.h: 316: }
  6877                           ;My_header\My_RTCC.h: 318: if (*ep >= 3155760000)*ep -= 3155760000;
  6878  001910  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6879  001914  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6880  001918  CFDE F0A3          	movff	postinc2,??_RTCC_time_set_inc
  6881  00191C  CFDE F0A4          	movff	postinc2,??_RTCC_time_set_inc+1
  6882  001920  CFDE F0A5          	movff	postinc2,??_RTCC_time_set_inc+2
  6883  001924  CFDE F0A6          	movff	postinc2,??_RTCC_time_set_inc+3
  6884  001928  0E80               	movlw	128
  6885  00192A  0100               	movlb	0	; () banked
  6886  00192C  5DA3               	subwf	??_RTCC_time_set_inc& (0+255),w,b
  6887  00192E  0E13               	movlw	19
  6888  001930  59A4               	subwfb	(??_RTCC_time_set_inc+1)& (0+255),w,b
  6889  001932  0E19               	movlw	25
  6890  001934  59A5               	subwfb	(??_RTCC_time_set_inc+2)& (0+255),w,b
  6891  001936  0EBC               	movlw	188
  6892  001938  0100               	movlb	0	; () banked
  6893  00193A  59A6               	subwfb	(??_RTCC_time_set_inc+3)& (0+255),w,b
  6894  00193C  A0D8               	btfss	status,0,c
  6895  00193E  D00E               	goto	l4651
  6896                           
  6897                           ; BSR set to: 0
  6898  001940  C0A1  FFD9         	movff	RTCC_time_set_inc@ep,fsr2l
  6899  001944  C0A2  FFDA         	movff	RTCC_time_set_inc@ep+1,fsr2h
  6900  001948  0E80               	movlw	128
  6901  00194A  5EDE               	subwf	postinc2,f,c
  6902  00194C  0E13               	movlw	19
  6903  00194E  5ADE               	subwfb	postinc2,f,c
  6904  001950  0E19               	movlw	25
  6905  001952  5ADE               	subwfb	postinc2,f,c
  6906  001954  0EBC               	movlw	188
  6907  001956  5ADD               	subwfb	postdec2,f,c
  6908  001958  52DD               	movf	postdec2,f,c
  6909  00195A  52DD               	movf	postdec2,f,c
  6910  00195C                     l4651:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;My_header\My_RTCC.h: 319: RTCC_from_epoch(&caltime_now, &epoch_now);
  6914  00195C  0100               	movlb	0	; () banked
  6915  00195E  0E00               	movlw	high _caltime_now
  6916  001960  0100               	movlb	0	; () banked
  6917  001962  6F9C               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  6918  001964  0100               	movlb	0	; () banked
  6919  001966  0ED6               	movlw	low _caltime_now
  6920  001968  0100               	movlb	0	; () banked
  6921  00196A  6F9B               	movwf	RTCC_from_epoch@ct& (0+255),b
  6922  00196C  0100               	movlb	0	; () banked
  6923  00196E  0E00               	movlw	high _epoch_now
  6924  001970  0100               	movlb	0	; () banked
  6925  001972  6F9E               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  6926  001974  0100               	movlb	0	; () banked
  6927  001976  0EDD               	movlw	low _epoch_now
  6928  001978  0100               	movlb	0	; () banked
  6929  00197A  6F9D               	movwf	RTCC_from_epoch@ep& (0+255),b
  6930  00197C  EC1F  F01C         	call	_RTCC_from_epoch	;wreg free
  6931                           
  6932                           ;My_header\My_RTCC.h: 320: time_change_flag = 1;
  6933  001980  0E01               	movlw	1
  6934  001982  0100               	movlb	0	; () banked
  6935  001984  6FD4               	movwf	_time_change_flag& (0+255),b
  6936                           
  6937                           ; BSR set to: 0
  6938  001986  0012               	return	
  6939  001988                     __end_of_RTCC_time_set_inc:
  6940                           	opt stack 0
  6941                           tblptru	equ	0xFF8
  6942                           tblptrh	equ	0xFF7
  6943                           tblptrl	equ	0xFF6
  6944                           tablat	equ	0xFF5
  6945                           prodh	equ	0xFF4
  6946                           prodl	equ	0xFF3
  6947                           intcon	equ	0xFF2
  6948                           intcon2	equ	0xFF1
  6949                           postinc0	equ	0xFEE
  6950                           wreg	equ	0xFE8
  6951                           indf1	equ	0xFE7
  6952                           postdec1	equ	0xFE5
  6953                           fsr1h	equ	0xFE2
  6954                           fsr1l	equ	0xFE1
  6955                           indf2	equ	0xFDF
  6956                           postinc2	equ	0xFDE
  6957                           postdec2	equ	0xFDD
  6958                           fsr2h	equ	0xFDA
  6959                           fsr2l	equ	0xFD9
  6960                           status	equ	0xFD8
  6961                           
  6962 ;; *************** function _RTCC_from_epoch *****************
  6963 ;; Defined at:
  6964 ;;		line 247 in file "../My_header\My_RTCC.h"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  ct              2   59[BANK0 ] PTR struct .
  6967 ;;		 -> caltime_now(7), 
  6968 ;;  ep              2   61[BANK0 ] PTR unsigned long 
  6969 ;;		 -> epoch_now(4), 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;		None               void
  6974 ;; Registers used:
  6975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;Total ram usage:        4 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    8
  6988 ;; This function calls:
  6989 ;;		_caltime_to_RTCC
  6990 ;;		_epoch_to_caltime
  6991 ;; This function is called by:
  6992 ;;		_RTCC_time_set_inc
  6993 ;;		_main
  6994 ;;		_RTCC_time_set_dec
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text39
  6999  00383E                     __ptext39:
  7000                           	opt stack 0
  7001  00383E                     _RTCC_from_epoch:
  7002                           	opt stack 21
  7003                           
  7004                           ;My_header\My_RTCC.h: 248: epoch_to_caltime(ct, ep);
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;incstack = 0
  7008  00383E  0100               	movlb	0	; () banked
  7009  003840  C09C  F08A         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7010  003844  0100               	movlb	0	; () banked
  7011  003846  C09B  F089         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7012  00384A  0100               	movlb	0	; () banked
  7013  00384C  C09E  F08C         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7014  003850  0100               	movlb	0	; () banked
  7015  003852  C09D  F08B         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7016  003856  EC25  F00E         	call	_epoch_to_caltime	;wreg free
  7017                           
  7018                           ;My_header\My_RTCC.h: 249: caltime_to_RTCC(ct);
  7019  00385A  0100               	movlb	0	; () banked
  7020  00385C  C09C  F022         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7021  003860  0100               	movlb	0	; () banked
  7022  003862  C09B  F021         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7023  003866  EC1D  F015         	call	_caltime_to_RTCC	;wreg free
  7024  00386A  0012               	return	
  7025  00386C                     __end_of_RTCC_from_epoch:
  7026                           	opt stack 0
  7027                           tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           intcon	equ	0xFF2
  7034                           intcon2	equ	0xFF1
  7035                           postinc0	equ	0xFEE
  7036                           wreg	equ	0xFE8
  7037                           indf1	equ	0xFE7
  7038                           postdec1	equ	0xFE5
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           postdec2	equ	0xFDD
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function _epoch_to_caltime *****************
  7049 ;; Defined at:
  7050 ;;		line 162 in file "../My_header\My_RTCC.h"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  ct              2   41[BANK0 ] PTR struct .
  7053 ;;		 -> caltime_now(7), 
  7054 ;;  ep              2   43[BANK0 ] PTR unsigned long 
  7055 ;;		 -> epoch_now(4), 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  num             4   55[BANK0 ] unsigned long 
  7058 ;;  day             2   51[BANK0 ] unsigned int 
  7059 ;;  day_since_ep    2   49[BANK0 ] unsigned int 
  7060 ;;  month           1   54[BANK0 ] unsigned char 
  7061 ;;  year            1   53[BANK0 ] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;		None               void
  7064 ;; Registers used:
  7065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7071 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7072 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7073 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7074 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7075 ;;Total ram usage:       18 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    7
  7078 ;; This function calls:
  7079 ;;		_get_quot_rem
  7080 ;;		_month_length
  7081 ;; This function is called by:
  7082 ;;		_RTCC_from_epoch
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text40
  7087  001C4A                     __ptext40:
  7088                           	opt stack 0
  7089  001C4A                     _epoch_to_caltime:
  7090                           	opt stack 21
  7091                           
  7092                           ;My_header\My_RTCC.h: 165: static uint16_t day_cache = 0;
  7093                           ;My_header\My_RTCC.h: 166: static uint8_t month_cache = 1;
  7094                           ;My_header\My_RTCC.h: 167: static uint8_t year_cache = 0;
  7095                           ;My_header\My_RTCC.h: 168: uint16_t day_since_epoch;
  7096                           ;My_header\My_RTCC.h: 169: uint16_t day;
  7097                           ;My_header\My_RTCC.h: 170: uint8_t year = 0;
  7098                           
  7099                           ;incstack = 0
  7100  001C4A  0E00               	movlw	0
  7101  001C4C  0100               	movlb	0	; () banked
  7102  001C4E  6F95               	movwf	epoch_to_caltime@year& (0+255),b
  7103                           
  7104                           ;My_header\My_RTCC.h: 171: uint8_t month = 1;
  7105  001C50  0E01               	movlw	1
  7106  001C52  0100               	movlb	0	; () banked
  7107  001C54  6F96               	movwf	epoch_to_caltime@month& (0+255),b
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;My_header\My_RTCC.h: 172: epoch_t num;
  7111                           ;My_header\My_RTCC.h: 174: num = *ep;
  7112  001C56  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7113  001C5A  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7114  001C5E  0100               	movlb	0	; () banked
  7115  001C60  CFDE F097          	movff	postinc2,epoch_to_caltime@num
  7116  001C64  0100               	movlb	0	; () banked
  7117  001C66  CFDE F098          	movff	postinc2,epoch_to_caltime@num+1
  7118  001C6A  0100               	movlb	0	; () banked
  7119  001C6C  CFDE F099          	movff	postinc2,epoch_to_caltime@num+2
  7120  001C70  0100               	movlb	0	; () banked
  7121  001C72  CFDE F09A          	movff	postinc2,epoch_to_caltime@num+3
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;My_header\My_RTCC.h: 175: ct->ss = get_quot_rem(&num, 60);
  7125  001C76  0100               	movlb	0	; () banked
  7126  001C78  0E00               	movlw	high epoch_to_caltime@num
  7127  001C7A  0100               	movlb	0	; () banked
  7128  001C7C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7129  001C7E  0100               	movlb	0	; () banked
  7130  001C80  0E97               	movlw	low epoch_to_caltime@num
  7131  001C82  0100               	movlb	0	; () banked
  7132  001C84  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7133  001C86  0E3C               	movlw	60
  7134  001C88  0100               	movlb	0	; () banked
  7135  001C8A  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7136  001C8C  EC92  F012         	call	_get_quot_rem	;wreg free
  7137  001C90  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7138  001C94  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7139  001C98  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7140  001C9C  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7141  001CA0  0100               	movlb	0	; () banked
  7142  001CA2  518D               	movf	??_epoch_to_caltime& (0+255),w,b
  7143  001CA4  C089  FFD9         	movff	epoch_to_caltime@ct,fsr2l
  7144  001CA8  C08A  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
  7145  001CAC  6EDF               	movwf	indf2,c
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;My_header\My_RTCC.h: 176: ct->mm = get_quot_rem(&num, 60);
  7149  001CAE  0100               	movlb	0	; () banked
  7150  001CB0  0E00               	movlw	high epoch_to_caltime@num
  7151  001CB2  0100               	movlb	0	; () banked
  7152  001CB4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7153  001CB6  0100               	movlb	0	; () banked
  7154  001CB8  0E97               	movlw	low epoch_to_caltime@num
  7155  001CBA  0100               	movlb	0	; () banked
  7156  001CBC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7157  001CBE  0E3C               	movlw	60
  7158  001CC0  0100               	movlb	0	; () banked
  7159  001CC2  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7160  001CC4  EC92  F012         	call	_get_quot_rem	;wreg free
  7161  001CC8  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7162  001CCC  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7163  001CD0  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7164  001CD4  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7165  001CD8  0100               	movlb	0	; () banked
  7166  001CDA  EE20 F001          	lfsr	2,1
  7167  001CDE  0100               	movlb	0	; () banked
  7168  001CE0  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7169  001CE2  26D9               	addwf	fsr2l,f,c
  7170  001CE4  0100               	movlb	0	; () banked
  7171  001CE6  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7172  001CE8  22DA               	addwfc	fsr2h,f,c
  7173  001CEA  C08D  FFDF         	movff	??_epoch_to_caltime,indf2
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;My_header\My_RTCC.h: 177: ct->hh = get_quot_rem(&num, 24);
  7177  001CEE  0100               	movlb	0	; () banked
  7178  001CF0  0E00               	movlw	high epoch_to_caltime@num
  7179  001CF2  0100               	movlb	0	; () banked
  7180  001CF4  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7181  001CF6  0100               	movlb	0	; () banked
  7182  001CF8  0E97               	movlw	low epoch_to_caltime@num
  7183  001CFA  0100               	movlb	0	; () banked
  7184  001CFC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7185  001CFE  0E18               	movlw	24
  7186  001D00  0100               	movlb	0	; () banked
  7187  001D02  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7188  001D04  EC92  F012         	call	_get_quot_rem	;wreg free
  7189  001D08  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7190  001D0C  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7191  001D10  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7192  001D14  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7193  001D18  0100               	movlb	0	; () banked
  7194  001D1A  EE20 F002          	lfsr	2,2
  7195  001D1E  0100               	movlb	0	; () banked
  7196  001D20  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7197  001D22  26D9               	addwf	fsr2l,f,c
  7198  001D24  0100               	movlb	0	; () banked
  7199  001D26  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7200  001D28  22DA               	addwfc	fsr2h,f,c
  7201  001D2A  C08D  FFDF         	movff	??_epoch_to_caltime,indf2
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;My_header\My_RTCC.h: 181: day = num;
  7205  001D2E  C097  F093         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  7206  001D32  C098  F094         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;My_header\My_RTCC.h: 182: day_since_epoch = day;
  7210  001D36  C093  F091         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  7211  001D3A  C094  F092         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;My_header\My_RTCC.h: 184: num += 6;
  7215  001D3E  0E06               	movlw	6
  7216  001D40  0100               	movlb	0	; () banked
  7217  001D42  2797               	addwf	epoch_to_caltime@num& (0+255),f,b
  7218  001D44  0E00               	movlw	0
  7219  001D46  0100               	movlb	0	; () banked
  7220  001D48  2398               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  7221  001D4A  0100               	movlb	0	; () banked
  7222  001D4C  2399               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  7223  001D4E  0100               	movlb	0	; () banked
  7224  001D50  239A               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;My_header\My_RTCC.h: 185: ct->EE = get_quot_rem(&num, 7);
  7228  001D52  0100               	movlb	0	; () banked
  7229  001D54  0E00               	movlw	high epoch_to_caltime@num
  7230  001D56  0100               	movlb	0	; () banked
  7231  001D58  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  7232  001D5A  0100               	movlb	0	; () banked
  7233  001D5C  0E97               	movlw	low epoch_to_caltime@num
  7234  001D5E  0100               	movlb	0	; () banked
  7235  001D60  6F79               	movwf	get_quot_rem@quot& (0+255),b
  7236  001D62  0E07               	movlw	7
  7237  001D64  0100               	movlb	0	; () banked
  7238  001D66  6F7B               	movwf	get_quot_rem@div& (0+255),b
  7239  001D68  EC92  F012         	call	_get_quot_rem	;wreg free
  7240  001D6C  C079  F08D         	movff	?_get_quot_rem,??_epoch_to_caltime
  7241  001D70  C07A  F08E         	movff	?_get_quot_rem+1,??_epoch_to_caltime+1
  7242  001D74  C07B  F08F         	movff	?_get_quot_rem+2,??_epoch_to_caltime+2
  7243  001D78  C07C  F090         	movff	?_get_quot_rem+3,??_epoch_to_caltime+3
  7244  001D7C  0100               	movlb	0	; () banked
  7245  001D7E  EE20 F003          	lfsr	2,3
  7246  001D82  0100               	movlb	0	; () banked
  7247  001D84  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7248  001D86  26D9               	addwf	fsr2l,f,c
  7249  001D88  0100               	movlb	0	; () banked
  7250  001D8A  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7251  001D8C  22DA               	addwfc	fsr2h,f,c
  7252  001D8E  C08D  FFDF         	movff	??_epoch_to_caltime,indf2
  7253                           
  7254                           ;My_header\My_RTCC.h: 194: while (day >= month_length(year, month)) {
  7255  001D92  D041               	goto	l4355
  7256  001D94                     l406:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;My_header\My_RTCC.h: 195: LATB2 = 1;
  7260  001D94  848A               	bsf	3978,2,c	;volatile
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;My_header\My_RTCC.h: 196: day = day - month_length(year, month);
  7264  001D96  C096  F022         	movff	epoch_to_caltime@month,month_length@month
  7265  001D9A  0100               	movlb	0	; () banked
  7266  001D9C  5195               	movf	epoch_to_caltime@year& (0+255),w,b
  7267  001D9E  EC82  F013         	call	_month_length
  7268  001DA2  0100               	movlb	0	; () banked
  7269  001DA4  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  7270  001DA6  6B8E               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  7271  001DA8  0100               	movlb	0	; () banked
  7272  001DAA  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  7273  001DAC  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7274  001DAE  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7275  001DB0  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7276  001DB2  0100               	movlb	0	; () banked
  7277  001DB4  5193               	movf	epoch_to_caltime@day& (0+255),w,b
  7278  001DB6  0100               	movlb	0	; () banked
  7279  001DB8  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  7280  001DBA  0100               	movlb	0	; () banked
  7281  001DBC  6F93               	movwf	epoch_to_caltime@day& (0+255),b
  7282  001DBE  0100               	movlb	0	; () banked
  7283  001DC0  5194               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  7284  001DC2  0100               	movlb	0	; () banked
  7285  001DC4  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7286  001DC6  0100               	movlb	0	; () banked
  7287  001DC8  6F94               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;My_header\My_RTCC.h: 197: if (month == 12) {
  7291  001DCA  0100               	movlb	0	; () banked
  7292  001DCC  5196               	movf	epoch_to_caltime@month& (0+255),w,b
  7293  001DCE  0A0C               	xorlw	12
  7294  001DD0  A4D8               	btfss	status,2,c
  7295  001DD2  D01B               	goto	l4349
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;My_header\My_RTCC.h: 198: month = 1;
  7299  001DD4  0E01               	movlw	1
  7300  001DD6  0100               	movlb	0	; () banked
  7301  001DD8  6F96               	movwf	epoch_to_caltime@month& (0+255),b
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;My_header\My_RTCC.h: 199: year++;
  7305  001DDA  0100               	movlb	0	; () banked
  7306  001DDC  2B95               	incf	epoch_to_caltime@year& (0+255),f,b
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;My_header\My_RTCC.h: 201: if (year >= 100) {
  7310  001DDE  0E63               	movlw	99
  7311  001DE0  0100               	movlb	0	; () banked
  7312  001DE2  6595               	cpfsgt	epoch_to_caltime@year& (0+255),b
  7313  001DE4  D014               	goto	l4351
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;My_header\My_RTCC.h: 202: *ep -= 3155760000;
  7317  001DE6  C08B  FFD9         	movff	epoch_to_caltime@ep,fsr2l
  7318  001DEA  C08C  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
  7319  001DEE  0E80               	movlw	128
  7320  001DF0  5EDE               	subwf	postinc2,f,c
  7321  001DF2  0E13               	movlw	19
  7322  001DF4  5ADE               	subwfb	postinc2,f,c
  7323  001DF6  0E19               	movlw	25
  7324  001DF8  5ADE               	subwfb	postinc2,f,c
  7325  001DFA  0EBC               	movlw	188
  7326  001DFC  5ADD               	subwfb	postdec2,f,c
  7327  001DFE  52DD               	movf	postdec2,f,c
  7328  001E00  52DD               	movf	postdec2,f,c
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;My_header\My_RTCC.h: 203: year = 0;
  7332  001E02  0E00               	movlw	0
  7333  001E04  0100               	movlb	0	; () banked
  7334  001E06  6F95               	movwf	epoch_to_caltime@year& (0+255),b
  7335  001E08  D002               	goto	l4351
  7336  001E0A                     l4349:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;My_header\My_RTCC.h: 206: month++;
  7340  001E0A  0100               	movlb	0	; () banked
  7341  001E0C  2B96               	incf	epoch_to_caltime@month& (0+255),f,b
  7342  001E0E                     l4351:
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;My_header\My_RTCC.h: 207: }
  7346                           ;My_header\My_RTCC.h: 208: month_cache = month;
  7347  001E0E  C096  F0CB         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;My_header\My_RTCC.h: 209: year_cache = year;
  7351  001E12  C095  F0D5         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  7352  001E16                     l4355:
  7353                           
  7354                           ; BSR set to: 0
  7355  001E16  C096  F022         	movff	epoch_to_caltime@month,month_length@month
  7356  001E1A  0100               	movlb	0	; () banked
  7357  001E1C  5195               	movf	epoch_to_caltime@year& (0+255),w,b
  7358  001E1E  EC82  F013         	call	_month_length
  7359  001E22  0100               	movlb	0	; () banked
  7360  001E24  6F8D               	movwf	??_epoch_to_caltime& (0+255),b
  7361  001E26  0100               	movlb	0	; () banked
  7362  001E28  518D               	movf	??_epoch_to_caltime& (0+255),w,b
  7363  001E2A  0100               	movlb	0	; () banked
  7364  001E2C  5D93               	subwf	epoch_to_caltime@day& (0+255),w,b
  7365  001E2E  0E00               	movlw	0
  7366  001E30  0100               	movlb	0	; () banked
  7367  001E32  5994               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  7368  001E34  B0D8               	btfsc	status,0,c
  7369  001E36  D7AE               	goto	l406
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;My_header\My_RTCC.h: 210: }
  7373                           ;My_header\My_RTCC.h: 211: day_cache = day_since_epoch - day;
  7374                           
  7375                           ; BSR set to: 0
  7376  001E38  0100               	movlb	0	; () banked
  7377  001E3A  C093  F08D         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  7378  001E3E  0100               	movlb	0	; () banked
  7379  001E40  C094  F08E         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  7380  001E44  0100               	movlb	0	; () banked
  7381  001E46  1F8D               	comf	??_epoch_to_caltime& (0+255),f,b
  7382  001E48  1F8E               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  7383  001E4A  4B8D               	infsnz	??_epoch_to_caltime& (0+255),f,b
  7384  001E4C  2B8E               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  7385  001E4E  0100               	movlb	0	; () banked
  7386  001E50  5191               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  7387  001E52  0100               	movlb	0	; () banked
  7388  001E54  258D               	addwf	??_epoch_to_caltime& (0+255),w,b
  7389  001E56  0100               	movlb	0	; () banked
  7390  001E58  6FD0               	movwf	epoch_to_caltime@day_cache& (0+255),b
  7391  001E5A  0100               	movlb	0	; () banked
  7392  001E5C  5192               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  7393  001E5E  0100               	movlb	0	; () banked
  7394  001E60  218E               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  7395  001E62  0100               	movlb	0	; () banked
  7396  001E64  6FD1               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;My_header\My_RTCC.h: 212: day++;
  7400  001E66  0100               	movlb	0	; () banked
  7401  001E68  4B93               	infsnz	epoch_to_caltime@day& (0+255),f,b
  7402  001E6A  2B94               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;My_header\My_RTCC.h: 214: ct->YY = year;
  7406  001E6C  0100               	movlb	0	; () banked
  7407  001E6E  EE20 F006          	lfsr	2,6
  7408  001E72  0100               	movlb	0	; () banked
  7409  001E74  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7410  001E76  26D9               	addwf	fsr2l,f,c
  7411  001E78  0100               	movlb	0	; () banked
  7412  001E7A  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7413  001E7C  22DA               	addwfc	fsr2h,f,c
  7414  001E7E  0100               	movlb	0	; () banked
  7415  001E80  C095  FFDF         	movff	epoch_to_caltime@year,indf2
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;My_header\My_RTCC.h: 215: ct->MM = month;
  7419  001E84  0100               	movlb	0	; () banked
  7420  001E86  EE20 F005          	lfsr	2,5
  7421  001E8A  0100               	movlb	0	; () banked
  7422  001E8C  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7423  001E8E  26D9               	addwf	fsr2l,f,c
  7424  001E90  0100               	movlb	0	; () banked
  7425  001E92  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7426  001E94  22DA               	addwfc	fsr2h,f,c
  7427  001E96  0100               	movlb	0	; () banked
  7428  001E98  C096  FFDF         	movff	epoch_to_caltime@month,indf2
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;My_header\My_RTCC.h: 216: ct->DD = day;
  7432  001E9C  0100               	movlb	0	; () banked
  7433  001E9E  EE20 F004          	lfsr	2,4
  7434  001EA2  0100               	movlb	0	; () banked
  7435  001EA4  5189               	movf	epoch_to_caltime@ct& (0+255),w,b
  7436  001EA6  26D9               	addwf	fsr2l,f,c
  7437  001EA8  0100               	movlb	0	; () banked
  7438  001EAA  518A               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
  7439  001EAC  22DA               	addwfc	fsr2h,f,c
  7440  001EAE  0100               	movlb	0	; () banked
  7441  001EB0  C093  FFDF         	movff	epoch_to_caltime@day,indf2
  7442                           
  7443                           ; BSR set to: 0
  7444  001EB4  0012               	return	
  7445  001EB6                     __end_of_epoch_to_caltime:
  7446                           	opt stack 0
  7447                           tblptru	equ	0xFF8
  7448                           tblptrh	equ	0xFF7
  7449                           tblptrl	equ	0xFF6
  7450                           tablat	equ	0xFF5
  7451                           prodh	equ	0xFF4
  7452                           prodl	equ	0xFF3
  7453                           intcon	equ	0xFF2
  7454                           intcon2	equ	0xFF1
  7455                           postinc0	equ	0xFEE
  7456                           wreg	equ	0xFE8
  7457                           indf1	equ	0xFE7
  7458                           postdec1	equ	0xFE5
  7459                           fsr1h	equ	0xFE2
  7460                           fsr1l	equ	0xFE1
  7461                           indf2	equ	0xFDF
  7462                           postinc2	equ	0xFDE
  7463                           postdec2	equ	0xFDD
  7464                           fsr2h	equ	0xFDA
  7465                           fsr2l	equ	0xFD9
  7466                           status	equ	0xFD8
  7467                           
  7468 ;; *************** function _get_quot_rem *****************
  7469 ;; Defined at:
  7470 ;;		line 117 in file "../My_header\My_RTCC.h"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  7473 ;;		 -> epoch_to_caltime@num(4), 
  7474 ;;  div             1   27[BANK0 ] unsigned char 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  num             4   37[BANK0 ] unsigned long 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  4   25[BANK0 ] unsigned long 
  7479 ;; Registers used:
  7480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7487 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7490 ;;Total ram usage:       16 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    6
  7493 ;; This function calls:
  7494 ;;		___lldiv
  7495 ;;		___lmul
  7496 ;; This function is called by:
  7497 ;;		_epoch_to_caltime
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text41
  7502  002524                     __ptext41:
  7503                           	opt stack 0
  7504  002524                     _get_quot_rem:
  7505                           	opt stack 21
  7506                           
  7507                           ;My_header\My_RTCC.h: 120: epoch_t num = *quot;
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;incstack = 0
  7511  002524  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7512  002528  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7513  00252C  0100               	movlb	0	; () banked
  7514  00252E  CFDE F085          	movff	postinc2,get_quot_rem@num
  7515  002532  0100               	movlb	0	; () banked
  7516  002534  CFDE F086          	movff	postinc2,get_quot_rem@num+1
  7517  002538  0100               	movlb	0	; () banked
  7518  00253A  CFDE F087          	movff	postinc2,get_quot_rem@num+2
  7519  00253E  0100               	movlb	0	; () banked
  7520  002540  CFDE F088          	movff	postinc2,get_quot_rem@num+3
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;My_header\My_RTCC.h: 121: return num - (*quot = num / div) * div;
  7524  002544  0100               	movlb	0	; () banked
  7525  002546  517B               	movf	get_quot_rem@div& (0+255),w,b
  7526  002548  0100               	movlb	0	; () banked
  7527  00254A  6F64               	movwf	___lldiv@divisor& (0+255),b
  7528  00254C  0100               	movlb	0	; () banked
  7529  00254E  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  7530  002550  0100               	movlb	0	; () banked
  7531  002552  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  7532  002554  0100               	movlb	0	; () banked
  7533  002556  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  7534  002558  C085  F060         	movff	get_quot_rem@num,___lldiv@dividend
  7535  00255C  C086  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  7536  002560  C087  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  7537  002564  C088  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  7538  002568  ECF0  F013         	call	___lldiv	;wreg free
  7539  00256C  C060  F07D         	movff	?___lldiv,??_get_quot_rem
  7540  002570  C061  F07E         	movff	?___lldiv+1,??_get_quot_rem+1
  7541  002574  C062  F07F         	movff	?___lldiv+2,??_get_quot_rem+2
  7542  002578  C063  F080         	movff	?___lldiv+3,??_get_quot_rem+3
  7543  00257C  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  7544  002580  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  7545  002584  C07D  FFDE         	movff	??_get_quot_rem,postinc2
  7546  002588  C07E  FFDE         	movff	??_get_quot_rem+1,postinc2
  7547  00258C  C07F  FFDE         	movff	??_get_quot_rem+2,postinc2
  7548  002590  C080  FFDD         	movff	??_get_quot_rem+3,postdec2
  7549  002594  06D9               	decf	fsr2l,f,c
  7550  002596  06D9               	decf	fsr2l,f,c
  7551  002598  0100               	movlb	0	; () banked
  7552  00259A  CFDE F06D          	movff	postinc2,___lmul@multiplier
  7553  00259E  0100               	movlb	0	; () banked
  7554  0025A0  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  7555  0025A4  0100               	movlb	0	; () banked
  7556  0025A6  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  7557  0025AA  0100               	movlb	0	; () banked
  7558  0025AC  CFDD F070          	movff	postdec2,___lmul@multiplier+3
  7559  0025B0  52DD               	movf	postdec2,f,c
  7560  0025B2  52DD               	movf	postdec2,f,c
  7561  0025B4  0100               	movlb	0	; () banked
  7562  0025B6  517B               	movf	get_quot_rem@div& (0+255),w,b
  7563  0025B8  0100               	movlb	0	; () banked
  7564  0025BA  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7565  0025BC  0100               	movlb	0	; () banked
  7566  0025BE  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  7567  0025C0  0100               	movlb	0	; () banked
  7568  0025C2  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  7569  0025C4  0100               	movlb	0	; () banked
  7570  0025C6  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  7571  0025C8  ECF3  F017         	call	___lmul	;wreg free
  7572  0025CC  C06D  F081         	movff	?___lmul,??_get_quot_rem+4
  7573  0025D0  C06E  F082         	movff	?___lmul+1,??_get_quot_rem+5
  7574  0025D4  C06F  F083         	movff	?___lmul+2,??_get_quot_rem+6
  7575  0025D8  C070  F084         	movff	?___lmul+3,??_get_quot_rem+7
  7576  0025DC  0100               	movlb	0	; () banked
  7577  0025DE  1F81               	comf	(??_get_quot_rem+4)& (0+255),f,b
  7578  0025E0  1F82               	comf	(??_get_quot_rem+5)& (0+255),f,b
  7579  0025E2  1F83               	comf	(??_get_quot_rem+6)& (0+255),f,b
  7580  0025E4  1F84               	comf	(??_get_quot_rem+7)& (0+255),f,b
  7581  0025E6  2B81               	incf	(??_get_quot_rem+4)& (0+255),f,b
  7582  0025E8  0E00               	movlw	0
  7583  0025EA  2382               	addwfc	(??_get_quot_rem+5)& (0+255),f,b
  7584  0025EC  2383               	addwfc	(??_get_quot_rem+6)& (0+255),f,b
  7585  0025EE  2384               	addwfc	(??_get_quot_rem+7)& (0+255),f,b
  7586  0025F0  0100               	movlb	0	; () banked
  7587  0025F2  5185               	movf	get_quot_rem@num& (0+255),w,b
  7588  0025F4  0100               	movlb	0	; () banked
  7589  0025F6  2581               	addwf	(??_get_quot_rem+4)& (0+255),w,b
  7590  0025F8  0100               	movlb	0	; () banked
  7591  0025FA  6F79               	movwf	?_get_quot_rem& (0+255),b
  7592  0025FC  0100               	movlb	0	; () banked
  7593  0025FE  5186               	movf	(get_quot_rem@num+1)& (0+255),w,b
  7594  002600  0100               	movlb	0	; () banked
  7595  002602  2182               	addwfc	(??_get_quot_rem+5)& (0+255),w,b
  7596  002604  0100               	movlb	0	; () banked
  7597  002606  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  7598  002608  0100               	movlb	0	; () banked
  7599  00260A  5187               	movf	(get_quot_rem@num+2)& (0+255),w,b
  7600  00260C  0100               	movlb	0	; () banked
  7601  00260E  2183               	addwfc	(??_get_quot_rem+6)& (0+255),w,b
  7602  002610  0100               	movlb	0	; () banked
  7603  002612  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  7604  002614  0100               	movlb	0	; () banked
  7605  002616  5188               	movf	(get_quot_rem@num+3)& (0+255),w,b
  7606  002618  0100               	movlb	0	; () banked
  7607  00261A  2184               	addwfc	(??_get_quot_rem+7)& (0+255),w,b
  7608  00261C  0100               	movlb	0	; () banked
  7609  00261E  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  7610  002620  0012               	return	
  7611  002622                     __end_of_get_quot_rem:
  7612                           	opt stack 0
  7613                           tblptru	equ	0xFF8
  7614                           tblptrh	equ	0xFF7
  7615                           tblptrl	equ	0xFF6
  7616                           tablat	equ	0xFF5
  7617                           prodh	equ	0xFF4
  7618                           prodl	equ	0xFF3
  7619                           intcon	equ	0xFF2
  7620                           intcon2	equ	0xFF1
  7621                           postinc0	equ	0xFEE
  7622                           wreg	equ	0xFE8
  7623                           indf1	equ	0xFE7
  7624                           postdec1	equ	0xFE5
  7625                           fsr1h	equ	0xFE2
  7626                           fsr1l	equ	0xFE1
  7627                           indf2	equ	0xFDF
  7628                           postinc2	equ	0xFDE
  7629                           postdec2	equ	0xFDD
  7630                           fsr2h	equ	0xFDA
  7631                           fsr2l	equ	0xFD9
  7632                           status	equ	0xFD8
  7633                           
  7634 ;; *************** function ___lldiv *****************
  7635 ;; Defined at:
  7636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  dividend        4    0[BANK0 ] unsigned long 
  7639 ;;  divisor         4    4[BANK0 ] unsigned long 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  quotient        4    8[BANK0 ] unsigned long 
  7642 ;;  counter         1   12[BANK0 ] unsigned char 
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  4    0[BANK0 ] unsigned long 
  7645 ;; Registers used:
  7646 ;;		wreg, status,2, status,0
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7655 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7656 ;;Total ram usage:       13 bytes
  7657 ;; Hardware stack levels used:    1
  7658 ;; Hardware stack levels required when called:    5
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_get_quot_rem
  7663 ;;		_CTMU_read
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text42
  7668  0027E0                     __ptext42:
  7669                           	opt stack 0
  7670  0027E0                     ___lldiv:
  7671                           	opt stack 21
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;incstack = 0
  7675  0027E0  0E00               	movlw	0
  7676  0027E2  0100               	movlb	0	; () banked
  7677  0027E4  6F68               	movwf	___lldiv@quotient& (0+255),b
  7678  0027E6  0E00               	movlw	0
  7679  0027E8  0100               	movlb	0	; () banked
  7680  0027EA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  7681  0027EC  0E00               	movlw	0
  7682  0027EE  0100               	movlb	0	; () banked
  7683  0027F0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7684  0027F2  0E00               	movlw	0
  7685  0027F4  0100               	movlb	0	; () banked
  7686  0027F6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7687                           
  7688                           ; BSR set to: 0
  7689  0027F8  0100               	movlb	0	; () banked
  7690  0027FA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7691  0027FC  1164               	iorwf	___lldiv@divisor& (0+255),w,b
  7692  0027FE  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7693  002800  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7694  002802  B4D8               	btfsc	status,2,c
  7695  002804  D04E               	goto	l1071
  7696                           
  7697                           ; BSR set to: 0
  7698  002806  0E01               	movlw	1
  7699  002808  0100               	movlb	0	; () banked
  7700  00280A  6F6C               	movwf	___lldiv@counter& (0+255),b
  7701  00280C  D00C               	goto	l4119
  7702  00280E                     l4117:
  7703                           
  7704                           ; BSR set to: 0
  7705  00280E  0100               	movlb	0	; () banked
  7706  002810  90D8               	bcf	status,0,c
  7707  002812  0100               	movlb	0	; () banked
  7708  002814  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  7709  002816  0100               	movlb	0	; () banked
  7710  002818  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7711  00281A  0100               	movlb	0	; () banked
  7712  00281C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7713  00281E  0100               	movlb	0	; () banked
  7714  002820  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7715  002822  0100               	movlb	0	; () banked
  7716  002824  2B6C               	incf	___lldiv@counter& (0+255),f,b
  7717  002826                     l4119:
  7718                           
  7719                           ; BSR set to: 0
  7720  002826  0100               	movlb	0	; () banked
  7721  002828  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7722  00282A  D7F1               	goto	l4117
  7723  00282C                     l4121:
  7724                           
  7725                           ; BSR set to: 0
  7726  00282C  0100               	movlb	0	; () banked
  7727  00282E  90D8               	bcf	status,0,c
  7728  002830  0100               	movlb	0	; () banked
  7729  002832  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  7730  002834  0100               	movlb	0	; () banked
  7731  002836  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7732  002838  0100               	movlb	0	; () banked
  7733  00283A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7734  00283C  0100               	movlb	0	; () banked
  7735  00283E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7736                           
  7737                           ; BSR set to: 0
  7738  002840  0100               	movlb	0	; () banked
  7739  002842  5164               	movf	___lldiv@divisor& (0+255),w,b
  7740  002844  0100               	movlb	0	; () banked
  7741  002846  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  7742  002848  0100               	movlb	0	; () banked
  7743  00284A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7744  00284C  0100               	movlb	0	; () banked
  7745  00284E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7746  002850  0100               	movlb	0	; () banked
  7747  002852  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7748  002854  0100               	movlb	0	; () banked
  7749  002856  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7750  002858  0100               	movlb	0	; () banked
  7751  00285A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7752  00285C  0100               	movlb	0	; () banked
  7753  00285E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7754  002860  A0D8               	btfss	status,0,c
  7755  002862  D012               	goto	l4129
  7756                           
  7757                           ; BSR set to: 0
  7758  002864  0100               	movlb	0	; () banked
  7759  002866  5164               	movf	___lldiv@divisor& (0+255),w,b
  7760  002868  0100               	movlb	0	; () banked
  7761  00286A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  7762  00286C  0100               	movlb	0	; () banked
  7763  00286E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7764  002870  0100               	movlb	0	; () banked
  7765  002872  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7766  002874  0100               	movlb	0	; () banked
  7767  002876  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7768  002878  0100               	movlb	0	; () banked
  7769  00287A  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7770  00287C  0100               	movlb	0	; () banked
  7771  00287E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7772  002880  0100               	movlb	0	; () banked
  7773  002882  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7774                           
  7775                           ; BSR set to: 0
  7776  002884  0100               	movlb	0	; () banked
  7777  002886  8168               	bsf	___lldiv@quotient& (0+255),0,b
  7778  002888                     l4129:
  7779                           
  7780                           ; BSR set to: 0
  7781  002888  0100               	movlb	0	; () banked
  7782  00288A  90D8               	bcf	status,0,c
  7783  00288C  0100               	movlb	0	; () banked
  7784  00288E  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7785  002890  0100               	movlb	0	; () banked
  7786  002892  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7787  002894  0100               	movlb	0	; () banked
  7788  002896  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7789  002898  0100               	movlb	0	; () banked
  7790  00289A  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  7791                           
  7792                           ; BSR set to: 0
  7793  00289C  0100               	movlb	0	; () banked
  7794  00289E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  7795  0028A0  D7C5               	goto	l4121
  7796  0028A2                     l1071:
  7797                           
  7798                           ; BSR set to: 0
  7799  0028A2  C068  F060         	movff	___lldiv@quotient,?___lldiv
  7800  0028A6  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  7801  0028AA  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  7802  0028AE  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  7803                           
  7804                           ; BSR set to: 0
  7805  0028B2  0012               	return	
  7806  0028B4                     __end_of___lldiv:
  7807                           	opt stack 0
  7808                           tblptru	equ	0xFF8
  7809                           tblptrh	equ	0xFF7
  7810                           tblptrl	equ	0xFF6
  7811                           tablat	equ	0xFF5
  7812                           prodh	equ	0xFF4
  7813                           prodl	equ	0xFF3
  7814                           intcon	equ	0xFF2
  7815                           intcon2	equ	0xFF1
  7816                           postinc0	equ	0xFEE
  7817                           wreg	equ	0xFE8
  7818                           indf1	equ	0xFE7
  7819                           postdec1	equ	0xFE5
  7820                           fsr1h	equ	0xFE2
  7821                           fsr1l	equ	0xFE1
  7822                           indf2	equ	0xFDF
  7823                           postinc2	equ	0xFDE
  7824                           postdec2	equ	0xFDD
  7825                           fsr2h	equ	0xFDA
  7826                           fsr2l	equ	0xFD9
  7827                           status	equ	0xFD8
  7828                           
  7829 ;; *************** function _caltime_to_RTCC *****************
  7830 ;; Defined at:
  7831 ;;		line 142 in file "../My_header\My_RTCC.h"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  ct              2   32[COMRAM] PTR struct .
  7834 ;;		 -> caltime_now(7), 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;		None               void
  7839 ;; Registers used:
  7840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7846 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;Total ram usage:        2 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    7
  7853 ;; This function calls:
  7854 ;;		_d_to_x
  7855 ;; This function is called by:
  7856 ;;		_RTCC_from_caltime
  7857 ;;		_RTCC_from_epoch
  7858 ;; This function uses a non-reentrant model
  7859 ;;
  7860                           
  7861                           	psect	text43
  7862  002A3A                     __ptext43:
  7863                           	opt stack 0
  7864  002A3A                     _caltime_to_RTCC:
  7865                           	opt stack 21
  7866                           
  7867                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR0 = 1;
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;incstack = 0
  7871  002A3A  010F               	movlb	15	; () banked
  7872  002A3C  813F               	bsf	63,0,b	;volatile
  7873                           
  7874                           ;My_header\My_RTCC.h: 145: RTCCFGbits.RTCPTR1 = 1;
  7875  002A3E  010F               	movlb	15	; () banked
  7876  002A40  833F               	bsf	63,1,b	;volatile
  7877                           
  7878                           ; BSR set to: 15
  7879                           ;My_header\My_RTCC.h: 146: RTCVALL = d_to_x(ct->YY);
  7880  002A42  EE20 F006          	lfsr	2,6
  7881  002A46  5021               	movf	caltime_to_RTCC@ct,w,c
  7882  002A48  26D9               	addwf	fsr2l,f,c
  7883  002A4A  5022               	movf	caltime_to_RTCC@ct+1,w,c
  7884  002A4C  22DA               	addwfc	fsr2h,f,c
  7885  002A4E  50DF               	movf	indf2,w,c
  7886  002A50  EC4D  F01C         	call	_d_to_x
  7887  002A54  010F               	movlb	15	; () banked
  7888  002A56  6F3A               	movwf	58,b	;volatile
  7889                           
  7890                           ; BSR set to: 15
  7891                           ;My_header\My_RTCC.h: 147: RTCVALH = 0x00;
  7892  002A58  0E00               	movlw	0
  7893  002A5A  010F               	movlb	15	; () banked
  7894  002A5C  6F3B               	movwf	59,b	;volatile
  7895                           
  7896                           ; BSR set to: 15
  7897                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR0 = 0;
  7898  002A5E  010F               	movlb	15	; () banked
  7899  002A60  913F               	bcf	63,0,b	;volatile
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;My_header\My_RTCC.h: 149: RTCCFGbits.RTCPTR1 = 1;
  7903  002A62  010F               	movlb	15	; () banked
  7904  002A64  833F               	bsf	63,1,b	;volatile
  7905                           
  7906                           ; BSR set to: 15
  7907                           ;My_header\My_RTCC.h: 150: RTCVALL = d_to_x(ct->DD);
  7908  002A66  EE20 F004          	lfsr	2,4
  7909  002A6A  5021               	movf	caltime_to_RTCC@ct,w,c
  7910  002A6C  26D9               	addwf	fsr2l,f,c
  7911  002A6E  5022               	movf	caltime_to_RTCC@ct+1,w,c
  7912  002A70  22DA               	addwfc	fsr2h,f,c
  7913  002A72  50DF               	movf	indf2,w,c
  7914  002A74  EC4D  F01C         	call	_d_to_x
  7915  002A78  010F               	movlb	15	; () banked
  7916  002A7A  6F3A               	movwf	58,b	;volatile
  7917                           
  7918                           ; BSR set to: 15
  7919                           ;My_header\My_RTCC.h: 151: RTCVALH = d_to_x(ct->MM);
  7920  002A7C  EE20 F005          	lfsr	2,5
  7921  002A80  5021               	movf	caltime_to_RTCC@ct,w,c
  7922  002A82  26D9               	addwf	fsr2l,f,c
  7923  002A84  5022               	movf	caltime_to_RTCC@ct+1,w,c
  7924  002A86  22DA               	addwfc	fsr2h,f,c
  7925  002A88  50DF               	movf	indf2,w,c
  7926  002A8A  EC4D  F01C         	call	_d_to_x
  7927  002A8E  010F               	movlb	15	; () banked
  7928  002A90  6F3B               	movwf	59,b	;volatile
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR0 = 1;
  7932  002A92  010F               	movlb	15	; () banked
  7933  002A94  813F               	bsf	63,0,b	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;My_header\My_RTCC.h: 153: RTCCFGbits.RTCPTR1 = 0;
  7937  002A96  010F               	movlb	15	; () banked
  7938  002A98  933F               	bcf	63,1,b	;volatile
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;My_header\My_RTCC.h: 154: RTCVALL = d_to_x(ct->hh);
  7942  002A9A  EE20 F002          	lfsr	2,2
  7943  002A9E  5021               	movf	caltime_to_RTCC@ct,w,c
  7944  002AA0  26D9               	addwf	fsr2l,f,c
  7945  002AA2  5022               	movf	caltime_to_RTCC@ct+1,w,c
  7946  002AA4  22DA               	addwfc	fsr2h,f,c
  7947  002AA6  50DF               	movf	indf2,w,c
  7948  002AA8  EC4D  F01C         	call	_d_to_x
  7949  002AAC  010F               	movlb	15	; () banked
  7950  002AAE  6F3A               	movwf	58,b	;volatile
  7951                           
  7952                           ; BSR set to: 15
  7953                           ;My_header\My_RTCC.h: 155: RTCVALH = d_to_x(ct->EE);
  7954  002AB0  EE20 F003          	lfsr	2,3
  7955  002AB4  5021               	movf	caltime_to_RTCC@ct,w,c
  7956  002AB6  26D9               	addwf	fsr2l,f,c
  7957  002AB8  5022               	movf	caltime_to_RTCC@ct+1,w,c
  7958  002ABA  22DA               	addwfc	fsr2h,f,c
  7959  002ABC  50DF               	movf	indf2,w,c
  7960  002ABE  EC4D  F01C         	call	_d_to_x
  7961  002AC2  010F               	movlb	15	; () banked
  7962  002AC4  6F3B               	movwf	59,b	;volatile
  7963                           
  7964                           ; BSR set to: 15
  7965                           ;My_header\My_RTCC.h: 156: RTCCFGbits.RTCPTR0 = 0;
  7966  002AC6  010F               	movlb	15	; () banked
  7967  002AC8  913F               	bcf	63,0,b	;volatile
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;My_header\My_RTCC.h: 157: RTCCFGbits.RTCPTR1 = 0;
  7971  002ACA  010F               	movlb	15	; () banked
  7972  002ACC  933F               	bcf	63,1,b	;volatile
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;My_header\My_RTCC.h: 158: RTCVALL = d_to_x(ct->ss);
  7976  002ACE  C021  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
  7977  002AD2  C022  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
  7978  002AD6  50DF               	movf	indf2,w,c
  7979  002AD8  EC4D  F01C         	call	_d_to_x
  7980  002ADC  010F               	movlb	15	; () banked
  7981  002ADE  6F3A               	movwf	58,b	;volatile
  7982                           
  7983                           ; BSR set to: 15
  7984                           ;My_header\My_RTCC.h: 159: RTCVALH = d_to_x(ct->mm);
  7985  002AE0  EE20 F001          	lfsr	2,1
  7986  002AE4  5021               	movf	caltime_to_RTCC@ct,w,c
  7987  002AE6  26D9               	addwf	fsr2l,f,c
  7988  002AE8  5022               	movf	caltime_to_RTCC@ct+1,w,c
  7989  002AEA  22DA               	addwfc	fsr2h,f,c
  7990  002AEC  50DF               	movf	indf2,w,c
  7991  002AEE  EC4D  F01C         	call	_d_to_x
  7992  002AF2  010F               	movlb	15	; () banked
  7993  002AF4  6F3B               	movwf	59,b	;volatile
  7994                           
  7995                           ; BSR set to: 15
  7996  002AF6  0012               	return	
  7997  002AF8                     __end_of_caltime_to_RTCC:
  7998                           	opt stack 0
  7999                           tblptru	equ	0xFF8
  8000                           tblptrh	equ	0xFF7
  8001                           tblptrl	equ	0xFF6
  8002                           tablat	equ	0xFF5
  8003                           prodh	equ	0xFF4
  8004                           prodl	equ	0xFF3
  8005                           intcon	equ	0xFF2
  8006                           intcon2	equ	0xFF1
  8007                           postinc0	equ	0xFEE
  8008                           wreg	equ	0xFE8
  8009                           indf1	equ	0xFE7
  8010                           postdec1	equ	0xFE5
  8011                           fsr1h	equ	0xFE2
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           postinc2	equ	0xFDE
  8015                           postdec2	equ	0xFDD
  8016                           fsr2h	equ	0xFDA
  8017                           fsr2l	equ	0xFD9
  8018                           status	equ	0xFD8
  8019                           
  8020 ;; *************** function _d_to_x *****************
  8021 ;; Defined at:
  8022 ;;		line 70 in file "../My_header\My_RTCC.h"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  dec             1    wreg     unsigned char 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  dec             1   31[COMRAM] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      unsigned char 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8040 ;;Total ram usage:        1 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    6
  8043 ;; This function calls:
  8044 ;;		___awdiv
  8045 ;; This function is called by:
  8046 ;;		_caltime_to_RTCC
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text44
  8051  00389A                     __ptext44:
  8052                           	opt stack 0
  8053  00389A                     _d_to_x:
  8054                           	opt stack 21
  8055                           
  8056                           ; BSR set to: 15
  8057                           ;incstack = 0
  8058                           ;d_to_x@dec stored from wreg
  8059  00389A  6E20               	movwf	d_to_x@dec,c
  8060                           
  8061                           ;My_header\My_RTCC.h: 73: return dec / 10 * 6 + dec;
  8062  00389C  0100               	movlb	0	; () banked
  8063  00389E  C020  F060         	movff	d_to_x@dec,___awdiv@dividend
  8064  0038A2  0100               	movlb	0	; () banked
  8065  0038A4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  8066  0038A6  0E00               	movlw	0
  8067  0038A8  0100               	movlb	0	; () banked
  8068  0038AA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8069  0038AC  0E0A               	movlw	10
  8070  0038AE  0100               	movlb	0	; () banked
  8071  0038B0  6F62               	movwf	___awdiv@divisor& (0+255),b
  8072  0038B2  EC11  F013         	call	___awdiv	;wreg free
  8073  0038B6  0100               	movlb	0	; () banked
  8074  0038B8  5160               	movf	?___awdiv& (0+255),w,b
  8075  0038BA  0D06               	mullw	6
  8076  0038BC  50F3               	movf	prodl,w,c
  8077  0038BE  2420               	addwf	d_to_x@dec,w,c
  8078  0038C0  0012               	return	
  8079  0038C2                     __end_of_d_to_x:
  8080                           	opt stack 0
  8081                           tblptru	equ	0xFF8
  8082                           tblptrh	equ	0xFF7
  8083                           tblptrl	equ	0xFF6
  8084                           tablat	equ	0xFF5
  8085                           prodh	equ	0xFF4
  8086                           prodl	equ	0xFF3
  8087                           intcon	equ	0xFF2
  8088                           intcon2	equ	0xFF1
  8089                           postinc0	equ	0xFEE
  8090                           wreg	equ	0xFE8
  8091                           indf1	equ	0xFE7
  8092                           postdec1	equ	0xFE5
  8093                           fsr1h	equ	0xFE2
  8094                           fsr1l	equ	0xFE1
  8095                           indf2	equ	0xFDF
  8096                           postinc2	equ	0xFDE
  8097                           postdec2	equ	0xFDD
  8098                           fsr2h	equ	0xFDA
  8099                           fsr2l	equ	0xFD9
  8100                           status	equ	0xFD8
  8101                           
  8102 ;; *************** function ___awdiv *****************
  8103 ;; Defined at:
  8104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  dividend        2    0[BANK0 ] int 
  8107 ;;  divisor         2    2[BANK0 ] int 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  quotient        2    6[BANK0 ] int 
  8110 ;;  sign            1    5[BANK0 ] unsigned char 
  8111 ;;  counter         1    4[BANK0 ] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  2    0[BANK0 ] int 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0, prodl
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8121 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8122 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8124 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8125 ;;Total ram usage:        8 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    5
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_d_to_x
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text45
  8136  002622                     __ptext45:
  8137                           	opt stack 0
  8138  002622                     ___awdiv:
  8139                           	opt stack 21
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;incstack = 0
  8143  002622  0E00               	movlw	0
  8144  002624  0100               	movlb	0	; () banked
  8145  002626  6F65               	movwf	___awdiv@sign& (0+255),b
  8146                           
  8147                           ; BSR set to: 0
  8148  002628  0100               	movlb	0	; () banked
  8149  00262A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8150  00262C  0A80               	xorlw	128
  8151  00262E  6EF3               	movwf	prodl,c
  8152  002630  0E80               	movlw	128
  8153  002632  5CF3               	subwf	prodl,w,c
  8154  002634  0E00               	movlw	0
  8155  002636  B4D8               	btfsc	status,2,c
  8156  002638  5D62               	subwf	___awdiv@divisor& (0+255),w,b
  8157  00263A  B0D8               	btfsc	status,0,c
  8158  00263C  D009               	goto	l4075
  8159                           
  8160                           ; BSR set to: 0
  8161  00263E  0100               	movlb	0	; () banked
  8162  002640  6D62               	negf	___awdiv@divisor& (0+255),b
  8163  002642  0100               	movlb	0	; () banked
  8164  002644  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8165  002646  B0D8               	btfsc	status,0,c
  8166  002648  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8167                           
  8168                           ; BSR set to: 0
  8169  00264A  0E01               	movlw	1
  8170  00264C  0100               	movlb	0	; () banked
  8171  00264E  6F65               	movwf	___awdiv@sign& (0+255),b
  8172  002650                     l4075:
  8173                           
  8174                           ; BSR set to: 0
  8175  002650  0100               	movlb	0	; () banked
  8176  002652  5161               	movf	(___awdiv@dividend+1)& (0+255),w,b
  8177  002654  0A80               	xorlw	128
  8178  002656  6EF3               	movwf	prodl,c
  8179  002658  0E80               	movlw	128
  8180  00265A  5CF3               	subwf	prodl,w,c
  8181  00265C  0E00               	movlw	0
  8182  00265E  B4D8               	btfsc	status,2,c
  8183  002660  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8184  002662  B0D8               	btfsc	status,0,c
  8185  002664  D009               	goto	l4081
  8186                           
  8187                           ; BSR set to: 0
  8188  002666  0100               	movlb	0	; () banked
  8189  002668  6D60               	negf	___awdiv@dividend& (0+255),b
  8190  00266A  0100               	movlb	0	; () banked
  8191  00266C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8192  00266E  B0D8               	btfsc	status,0,c
  8193  002670  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8194                           
  8195                           ; BSR set to: 0
  8196  002672  0E01               	movlw	1
  8197  002674  0100               	movlb	0	; () banked
  8198  002676  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8199  002678                     l4081:
  8200                           
  8201                           ; BSR set to: 0
  8202  002678  0E00               	movlw	0
  8203  00267A  0100               	movlb	0	; () banked
  8204  00267C  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8205  00267E  0E00               	movlw	0
  8206  002680  0100               	movlb	0	; () banked
  8207  002682  6F66               	movwf	___awdiv@quotient& (0+255),b
  8208                           
  8209                           ; BSR set to: 0
  8210  002684  0100               	movlb	0	; () banked
  8211  002686  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8212  002688  1162               	iorwf	___awdiv@divisor& (0+255),w,b
  8213  00268A  B4D8               	btfsc	status,2,c
  8214  00268C  D02C               	goto	l4103
  8215                           
  8216                           ; BSR set to: 0
  8217  00268E  0E01               	movlw	1
  8218  002690  0100               	movlb	0	; () banked
  8219  002692  6F64               	movwf	___awdiv@counter& (0+255),b
  8220  002694  D006               	goto	l4089
  8221  002696                     l4087:
  8222                           
  8223                           ; BSR set to: 0
  8224  002696  0100               	movlb	0	; () banked
  8225  002698  90D8               	bcf	status,0,c
  8226  00269A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8227  00269C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8228  00269E  0100               	movlb	0	; () banked
  8229  0026A0  2B64               	incf	___awdiv@counter& (0+255),f,b
  8230  0026A2                     l4089:
  8231                           
  8232                           ; BSR set to: 0
  8233  0026A2  0100               	movlb	0	; () banked
  8234  0026A4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8235  0026A6  D7F7               	goto	l4087
  8236  0026A8                     l4091:
  8237                           
  8238                           ; BSR set to: 0
  8239  0026A8  0100               	movlb	0	; () banked
  8240  0026AA  90D8               	bcf	status,0,c
  8241  0026AC  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8242  0026AE  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8243                           
  8244                           ; BSR set to: 0
  8245  0026B0  0100               	movlb	0	; () banked
  8246  0026B2  5162               	movf	___awdiv@divisor& (0+255),w,b
  8247  0026B4  0100               	movlb	0	; () banked
  8248  0026B6  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8249  0026B8  0100               	movlb	0	; () banked
  8250  0026BA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8251  0026BC  0100               	movlb	0	; () banked
  8252  0026BE  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8253  0026C0  A0D8               	btfss	status,0,c
  8254  0026C2  D00A               	goto	l4099
  8255                           
  8256                           ; BSR set to: 0
  8257  0026C4  0100               	movlb	0	; () banked
  8258  0026C6  5162               	movf	___awdiv@divisor& (0+255),w,b
  8259  0026C8  0100               	movlb	0	; () banked
  8260  0026CA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8261  0026CC  0100               	movlb	0	; () banked
  8262  0026CE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8263  0026D0  0100               	movlb	0	; () banked
  8264  0026D2  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8265                           
  8266                           ; BSR set to: 0
  8267  0026D4  0100               	movlb	0	; () banked
  8268  0026D6  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8269  0026D8                     l4099:
  8270                           
  8271                           ; BSR set to: 0
  8272  0026D8  0100               	movlb	0	; () banked
  8273  0026DA  90D8               	bcf	status,0,c
  8274  0026DC  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8275  0026DE  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8276                           
  8277                           ; BSR set to: 0
  8278  0026E0  0100               	movlb	0	; () banked
  8279  0026E2  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8280  0026E4  D7E1               	goto	l4091
  8281  0026E6                     l4103:
  8282                           
  8283                           ; BSR set to: 0
  8284  0026E6  0100               	movlb	0	; () banked
  8285  0026E8  5165               	movf	___awdiv@sign& (0+255),w,b
  8286  0026EA  B4D8               	btfsc	status,2,c
  8287  0026EC  D006               	goto	l4107
  8288                           
  8289                           ; BSR set to: 0
  8290  0026EE  0100               	movlb	0	; () banked
  8291  0026F0  6D66               	negf	___awdiv@quotient& (0+255),b
  8292  0026F2  0100               	movlb	0	; () banked
  8293  0026F4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8294  0026F6  B0D8               	btfsc	status,0,c
  8295  0026F8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8296  0026FA                     l4107:
  8297                           
  8298                           ; BSR set to: 0
  8299  0026FA  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8300  0026FE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8301  002702  0012               	return	
  8302  002704                     __end_of___awdiv:
  8303                           	opt stack 0
  8304                           tblptru	equ	0xFF8
  8305                           tblptrh	equ	0xFF7
  8306                           tblptrl	equ	0xFF6
  8307                           tablat	equ	0xFF5
  8308                           prodh	equ	0xFF4
  8309                           prodl	equ	0xFF3
  8310                           intcon	equ	0xFF2
  8311                           intcon2	equ	0xFF1
  8312                           postinc0	equ	0xFEE
  8313                           wreg	equ	0xFE8
  8314                           indf1	equ	0xFE7
  8315                           postdec1	equ	0xFE5
  8316                           fsr1h	equ	0xFE2
  8317                           fsr1l	equ	0xFE1
  8318                           indf2	equ	0xFDF
  8319                           postinc2	equ	0xFDE
  8320                           postdec2	equ	0xFDD
  8321                           fsr2h	equ	0xFDA
  8322                           fsr2l	equ	0xFD9
  8323                           status	equ	0xFD8
  8324                           
  8325 ;; *************** function _RTCC_from_RTCC *****************
  8326 ;; Defined at:
  8327 ;;		line 237 in file "../My_header\My_RTCC.h"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  ct              2   44[BANK0 ] PTR struct .
  8330 ;;		 -> caltime_now(7), 
  8331 ;;  ep              2   46[BANK0 ] PTR unsigned long 
  8332 ;;		 -> epoch_now(4), 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;		None               void
  8337 ;; Registers used:
  8338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8347 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8348 ;;Total ram usage:        4 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    8
  8351 ;; This function calls:
  8352 ;;		_RTCC_to_caltime
  8353 ;;		_caltime_to_epoch
  8354 ;; This function is called by:
  8355 ;;		_display_time
  8356 ;;		_RTCC_time_set_inc
  8357 ;;		_tx_send_time
  8358 ;;		_RTCC_time_set_dec
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text46
  8363  00386C                     __ptext46:
  8364                           	opt stack 0
  8365  00386C                     _RTCC_from_RTCC:
  8366                           	opt stack 20
  8367                           
  8368                           ;My_header\My_RTCC.h: 238: RTCC_to_caltime(ct);
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;incstack = 0
  8372  00386C  0100               	movlb	0	; () banked
  8373  00386E  C08D  F061         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
  8374  003872  0100               	movlb	0	; () banked
  8375  003874  C08C  F060         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
  8376  003878  EC5A  F014         	call	_RTCC_to_caltime	;wreg free
  8377                           
  8378                           ;My_header\My_RTCC.h: 239: caltime_to_epoch(ct, ep);
  8379  00387C  0100               	movlb	0	; () banked
  8380  00387E  C08D  F07A         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
  8381  003882  0100               	movlb	0	; () banked
  8382  003884  C08C  F079         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
  8383  003888  0100               	movlb	0	; () banked
  8384  00388A  C08F  F07C         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
  8385  00388E  0100               	movlb	0	; () banked
  8386  003890  C08E  F07B         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
  8387  003894  ECA6  F009         	call	_caltime_to_epoch	;wreg free
  8388  003898  0012               	return	
  8389  00389A                     __end_of_RTCC_from_RTCC:
  8390                           	opt stack 0
  8391                           tblptru	equ	0xFF8
  8392                           tblptrh	equ	0xFF7
  8393                           tblptrl	equ	0xFF6
  8394                           tablat	equ	0xFF5
  8395                           prodh	equ	0xFF4
  8396                           prodl	equ	0xFF3
  8397                           intcon	equ	0xFF2
  8398                           intcon2	equ	0xFF1
  8399                           postinc0	equ	0xFEE
  8400                           wreg	equ	0xFE8
  8401                           indf1	equ	0xFE7
  8402                           postdec1	equ	0xFE5
  8403                           fsr1h	equ	0xFE2
  8404                           fsr1l	equ	0xFE1
  8405                           indf2	equ	0xFDF
  8406                           postinc2	equ	0xFDE
  8407                           postdec2	equ	0xFDD
  8408                           fsr2h	equ	0xFDA
  8409                           fsr2l	equ	0xFD9
  8410                           status	equ	0xFD8
  8411                           
  8412 ;; *************** function _caltime_to_epoch *****************
  8413 ;; Defined at:
  8414 ;;		line 219 in file "../My_header\My_RTCC.h"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  ct              2   25[BANK0 ] PTR struct .
  8417 ;;		 -> caltime_now(7), 
  8418 ;;  ep              2   27[BANK0 ] PTR unsigned long 
  8419 ;;		 -> epoch_now(4), 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  month           1   43[BANK0 ] unsigned char 
  8422 ;;  month           1   38[BANK0 ] unsigned char 
  8423 ;;  year            1   37[BANK0 ] unsigned char 
  8424 ;;  epoch           4   39[BANK0 ] unsigned long 
  8425 ;; Return value:  Size  Location     Type
  8426 ;;		None               void
  8427 ;; Registers used:
  8428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8435 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8436 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8437 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;Total ram usage:       19 bytes
  8439 ;; Hardware stack levels used:    1
  8440 ;; Hardware stack levels required when called:    7
  8441 ;; This function calls:
  8442 ;;		___lmul
  8443 ;;		_month_length
  8444 ;; This function is called by:
  8445 ;;		_RTCC_from_RTCC
  8446 ;;		_RTCC_from_caltime
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text47
  8451  00134C                     __ptext47:
  8452                           	opt stack 0
  8453  00134C                     _caltime_to_epoch:
  8454                           	opt stack 21
  8455                           
  8456                           ;My_header\My_RTCC.h: 220: epoch_t epoch = 0;
  8457                           
  8458                           ;incstack = 0
  8459  00134C  0E00               	movlw	0
  8460  00134E  0100               	movlb	0	; () banked
  8461  001350  6F87               	movwf	caltime_to_epoch@epoch& (0+255),b
  8462  001352  0E00               	movlw	0
  8463  001354  0100               	movlb	0	; () banked
  8464  001356  6F88               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
  8465  001358  0E00               	movlw	0
  8466  00135A  0100               	movlb	0	; () banked
  8467  00135C  6F89               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
  8468  00135E  0E00               	movlw	0
  8469  001360  0100               	movlb	0	; () banked
  8470  001362  6F8A               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
  8471                           
  8472                           ;My_header\My_RTCC.h: 221: for (uint8_t year = 0; year < ct->YY; year++) {
  8473  001364  0E00               	movlw	0
  8474  001366  0100               	movlb	0	; () banked
  8475  001368  6F85               	movwf	caltime_to_epoch@year& (0+255),b
  8476  00136A  D044               	goto	l4235
  8477  00136C                     l4221:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;My_header\My_RTCC.h: 222: for (uint8_t month = 1; month <= 12; month++) {
  8481  00136C  0E01               	movlw	1
  8482  00136E  0100               	movlb	0	; () banked
  8483  001370  6F8B               	movwf	caltime_to_epoch@month& (0+255),b
  8484  001372  D03A               	goto	L3
  8485  001374                     l4227:
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60*60*24) * month_length(year, month);
  8489  001374  C08B  F022         	movff	caltime_to_epoch@month,month_length@month
  8490  001378  0100               	movlb	0	; () banked
  8491  00137A  5185               	movf	caltime_to_epoch@year& (0+255),w,b
  8492  00137C  EC82  F013         	call	_month_length
  8493  001380  0100               	movlb	0	; () banked
  8494  001382  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  8495  001384  0100               	movlb	0	; () banked
  8496  001386  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  8497  001388  0100               	movlb	0	; () banked
  8498  00138A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  8499  00138C  0100               	movlb	0	; () banked
  8500  00138E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  8501  001390  0100               	movlb	0	; () banked
  8502  001392  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  8503  001394  0100               	movlb	0	; () banked
  8504  001396  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  8505  001398  0E80               	movlw	128
  8506  00139A  0100               	movlb	0	; () banked
  8507  00139C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8508  00139E  0E51               	movlw	81
  8509  0013A0  0100               	movlb	0	; () banked
  8510  0013A2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8511  0013A4  0E01               	movlw	1
  8512  0013A6  0100               	movlb	0	; () banked
  8513  0013A8  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8514  0013AA  0E00               	movlw	0
  8515  0013AC  0100               	movlb	0	; () banked
  8516  0013AE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8517  0013B0  ECF3  F017         	call	___lmul	;wreg free
  8518  0013B4  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  8519  0013B8  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  8520  0013BC  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  8521  0013C0  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  8522  0013C4  0100               	movlb	0	; () banked
  8523  0013C6  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8524  0013C8  0100               	movlb	0	; () banked
  8525  0013CA  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8526  0013CC  0100               	movlb	0	; () banked
  8527  0013CE  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  8528  0013D0  0100               	movlb	0	; () banked
  8529  0013D2  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8530  0013D4  0100               	movlb	0	; () banked
  8531  0013D6  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  8532  0013D8  0100               	movlb	0	; () banked
  8533  0013DA  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8534  0013DC  0100               	movlb	0	; () banked
  8535  0013DE  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  8536  0013E0  0100               	movlb	0	; () banked
  8537  0013E2  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8538                           
  8539                           ; BSR set to: 0
  8540  0013E4  0100               	movlb	0	; () banked
  8541  0013E6  2B8B               	incf	caltime_to_epoch@month& (0+255),f,b
  8542  0013E8                     L3:
  8543                           
  8544                           ; BSR set to: 0
  8545  0013E8  0E0C               	movlw	12
  8546  0013EA  0100               	movlb	0	; () banked
  8547  0013EC  658B               	cpfsgt	caltime_to_epoch@month& (0+255),b
  8548  0013EE  D7C2               	goto	l4227
  8549                           
  8550                           ; BSR set to: 0
  8551                           
  8552                           ; BSR set to: 0
  8553  0013F0  0100               	movlb	0	; () banked
  8554  0013F2  2B85               	incf	caltime_to_epoch@year& (0+255),f,b
  8555  0013F4                     l4235:
  8556                           
  8557                           ; BSR set to: 0
  8558  0013F4  0100               	movlb	0	; () banked
  8559  0013F6  EE20 F006          	lfsr	2,6
  8560  0013FA  0100               	movlb	0	; () banked
  8561  0013FC  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  8562  0013FE  26D9               	addwf	fsr2l,f,c
  8563  001400  0100               	movlb	0	; () banked
  8564  001402  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8565  001404  22DA               	addwfc	fsr2h,f,c
  8566  001406  50DF               	movf	indf2,w,c
  8567  001408  0100               	movlb	0	; () banked
  8568  00140A  5D85               	subwf	caltime_to_epoch@year& (0+255),w,b
  8569  00140C  A0D8               	btfss	status,0,c
  8570  00140E  D7AE               	goto	l4221
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;My_header\My_RTCC.h: 224: }
  8574                           ;My_header\My_RTCC.h: 225: }
  8575                           ;My_header\My_RTCC.h: 226: for (uint8_t month = 1; month < ct->MM; month++) {
  8576                           
  8577                           ; BSR set to: 0
  8578  001410  0E01               	movlw	1
  8579  001412  0100               	movlb	0	; () banked
  8580  001414  6F86               	movwf	caltime_to_epoch@month_2018& (0+255),b
  8581  001416  D042               	goto	l4243
  8582  001418                     l4239:
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;My_header\My_RTCC.h: 227: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
  8586  001418  C086  F022         	movff	caltime_to_epoch@month_2018,month_length@month
  8587  00141C  0100               	movlb	0	; () banked
  8588  00141E  EE20 F006          	lfsr	2,6
  8589  001422  0100               	movlb	0	; () banked
  8590  001424  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  8591  001426  26D9               	addwf	fsr2l,f,c
  8592  001428  0100               	movlb	0	; () banked
  8593  00142A  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8594  00142C  22DA               	addwfc	fsr2h,f,c
  8595  00142E  50DF               	movf	indf2,w,c
  8596  001430  EC82  F013         	call	_month_length
  8597  001434  0100               	movlb	0	; () banked
  8598  001436  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  8599  001438  0100               	movlb	0	; () banked
  8600  00143A  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  8601  00143C  0100               	movlb	0	; () banked
  8602  00143E  6F6D               	movwf	___lmul@multiplier& (0+255),b
  8603  001440  0100               	movlb	0	; () banked
  8604  001442  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  8605  001444  0100               	movlb	0	; () banked
  8606  001446  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  8607  001448  0100               	movlb	0	; () banked
  8608  00144A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  8609  00144C  0E80               	movlw	128
  8610  00144E  0100               	movlb	0	; () banked
  8611  001450  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8612  001452  0E51               	movlw	81
  8613  001454  0100               	movlb	0	; () banked
  8614  001456  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8615  001458  0E01               	movlw	1
  8616  00145A  0100               	movlb	0	; () banked
  8617  00145C  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8618  00145E  0E00               	movlw	0
  8619  001460  0100               	movlb	0	; () banked
  8620  001462  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8621  001464  ECF3  F017         	call	___lmul	;wreg free
  8622  001468  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  8623  00146C  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  8624  001470  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  8625  001474  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  8626  001478  0100               	movlb	0	; () banked
  8627  00147A  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8628  00147C  0100               	movlb	0	; () banked
  8629  00147E  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8630  001480  0100               	movlb	0	; () banked
  8631  001482  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  8632  001484  0100               	movlb	0	; () banked
  8633  001486  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8634  001488  0100               	movlb	0	; () banked
  8635  00148A  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  8636  00148C  0100               	movlb	0	; () banked
  8637  00148E  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8638  001490  0100               	movlb	0	; () banked
  8639  001492  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  8640  001494  0100               	movlb	0	; () banked
  8641  001496  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8642                           
  8643                           ; BSR set to: 0
  8644  001498  0100               	movlb	0	; () banked
  8645  00149A  2B86               	incf	caltime_to_epoch@month_2018& (0+255),f,b
  8646  00149C                     l4243:
  8647                           
  8648                           ; BSR set to: 0
  8649  00149C  0100               	movlb	0	; () banked
  8650  00149E  EE20 F005          	lfsr	2,5
  8651  0014A2  0100               	movlb	0	; () banked
  8652  0014A4  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  8653  0014A6  26D9               	addwf	fsr2l,f,c
  8654  0014A8  0100               	movlb	0	; () banked
  8655  0014AA  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8656  0014AC  22DA               	addwfc	fsr2h,f,c
  8657  0014AE  50DF               	movf	indf2,w,c
  8658  0014B0  0100               	movlb	0	; () banked
  8659  0014B2  5D86               	subwf	caltime_to_epoch@month_2018& (0+255),w,b
  8660  0014B4  A0D8               	btfss	status,0,c
  8661  0014B6  D7B0               	goto	l4239
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;My_header\My_RTCC.h: 228: }
  8665                           ;My_header\My_RTCC.h: 229: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
  8666                           
  8667                           ; BSR set to: 0
  8668  0014B8  0EFF               	movlw	255
  8669  0014BA  0100               	movlb	0	; () banked
  8670  0014BC  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  8671  0014BE  0EFF               	movlw	255
  8672  0014C0  6F7E               	movwf	(??_caltime_to_epoch+1)& (0+255),b
  8673  0014C2  0100               	movlb	0	; () banked
  8674  0014C4  EE20 F004          	lfsr	2,4
  8675  0014C8  0100               	movlb	0	; () banked
  8676  0014CA  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  8677  0014CC  26D9               	addwf	fsr2l,f,c
  8678  0014CE  0100               	movlb	0	; () banked
  8679  0014D0  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8680  0014D2  22DA               	addwfc	fsr2h,f,c
  8681  0014D4  50DF               	movf	indf2,w,c
  8682  0014D6  0100               	movlb	0	; () banked
  8683  0014D8  6F7F               	movwf	(??_caltime_to_epoch+2)& (0+255),b
  8684  0014DA  6B80               	clrf	(??_caltime_to_epoch+3)& (0+255),b
  8685  0014DC  0100               	movlb	0	; () banked
  8686  0014DE  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  8687  0014E0  0100               	movlb	0	; () banked
  8688  0014E2  277F               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
  8689  0014E4  0100               	movlb	0	; () banked
  8690  0014E6  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8691  0014E8  0100               	movlb	0	; () banked
  8692  0014EA  2380               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
  8693  0014EC  0100               	movlb	0	; () banked
  8694  0014EE  C07F  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
  8695  0014F2  0100               	movlb	0	; () banked
  8696  0014F4  C080  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
  8697  0014F8  0100               	movlb	0	; () banked
  8698  0014FA  0E00               	movlw	0
  8699  0014FC  0100               	movlb	0	; () banked
  8700  0014FE  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
  8701  001500  0EFF               	movlw	-1
  8702  001502  0100               	movlb	0	; () banked
  8703  001504  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
  8704  001506  0100               	movlb	0	; () banked
  8705  001508  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
  8706  00150A  0E80               	movlw	128
  8707  00150C  0100               	movlb	0	; () banked
  8708  00150E  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8709  001510  0E51               	movlw	81
  8710  001512  0100               	movlb	0	; () banked
  8711  001514  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8712  001516  0E01               	movlw	1
  8713  001518  0100               	movlb	0	; () banked
  8714  00151A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8715  00151C  0E00               	movlw	0
  8716  00151E  0100               	movlb	0	; () banked
  8717  001520  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8718  001522  ECF3  F017         	call	___lmul	;wreg free
  8719  001526  C06D  F081         	movff	?___lmul,??_caltime_to_epoch+4
  8720  00152A  C06E  F082         	movff	?___lmul+1,??_caltime_to_epoch+5
  8721  00152E  C06F  F083         	movff	?___lmul+2,??_caltime_to_epoch+6
  8722  001532  C070  F084         	movff	?___lmul+3,??_caltime_to_epoch+7
  8723  001536  0100               	movlb	0	; () banked
  8724  001538  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  8725  00153A  0100               	movlb	0	; () banked
  8726  00153C  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8727  00153E  0100               	movlb	0	; () banked
  8728  001540  5182               	movf	(??_caltime_to_epoch+5)& (0+255),w,b
  8729  001542  0100               	movlb	0	; () banked
  8730  001544  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8731  001546  0100               	movlb	0	; () banked
  8732  001548  5183               	movf	(??_caltime_to_epoch+6)& (0+255),w,b
  8733  00154A  0100               	movlb	0	; () banked
  8734  00154C  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8735  00154E  0100               	movlb	0	; () banked
  8736  001550  5184               	movf	(??_caltime_to_epoch+7)& (0+255),w,b
  8737  001552  0100               	movlb	0	; () banked
  8738  001554  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8739                           
  8740                           ;My_header\My_RTCC.h: 230: epoch += ((epoch_t)60*60) * ct->hh;
  8741  001556  0100               	movlb	0	; () banked
  8742  001558  EE20 F002          	lfsr	2,2
  8743  00155C  0100               	movlb	0	; () banked
  8744  00155E  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  8745  001560  26D9               	addwf	fsr2l,f,c
  8746  001562  0100               	movlb	0	; () banked
  8747  001564  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8748  001566  22DA               	addwfc	fsr2h,f,c
  8749  001568  50DF               	movf	indf2,w,c
  8750  00156A  0100               	movlb	0	; () banked
  8751  00156C  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  8752  00156E  0100               	movlb	0	; () banked
  8753  001570  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  8754  001572  0100               	movlb	0	; () banked
  8755  001574  6F6D               	movwf	___lmul@multiplier& (0+255),b
  8756  001576  0100               	movlb	0	; () banked
  8757  001578  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  8758  00157A  0100               	movlb	0	; () banked
  8759  00157C  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  8760  00157E  0100               	movlb	0	; () banked
  8761  001580  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  8762  001582  0E10               	movlw	16
  8763  001584  0100               	movlb	0	; () banked
  8764  001586  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8765  001588  0E0E               	movlw	14
  8766  00158A  0100               	movlb	0	; () banked
  8767  00158C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8768  00158E  0E00               	movlw	0
  8769  001590  0100               	movlb	0	; () banked
  8770  001592  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8771  001594  0E00               	movlw	0
  8772  001596  0100               	movlb	0	; () banked
  8773  001598  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8774  00159A  ECF3  F017         	call	___lmul	;wreg free
  8775  00159E  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  8776  0015A2  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  8777  0015A6  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  8778  0015AA  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  8779  0015AE  0100               	movlb	0	; () banked
  8780  0015B0  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8781  0015B2  0100               	movlb	0	; () banked
  8782  0015B4  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8783  0015B6  0100               	movlb	0	; () banked
  8784  0015B8  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  8785  0015BA  0100               	movlb	0	; () banked
  8786  0015BC  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8787  0015BE  0100               	movlb	0	; () banked
  8788  0015C0  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  8789  0015C2  0100               	movlb	0	; () banked
  8790  0015C4  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8791  0015C6  0100               	movlb	0	; () banked
  8792  0015C8  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  8793  0015CA  0100               	movlb	0	; () banked
  8794  0015CC  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8795                           
  8796                           ;My_header\My_RTCC.h: 231: epoch += ((epoch_t)60) * ct->mm;
  8797  0015CE  0100               	movlb	0	; () banked
  8798  0015D0  EE20 F001          	lfsr	2,1
  8799  0015D4  0100               	movlb	0	; () banked
  8800  0015D6  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
  8801  0015D8  26D9               	addwf	fsr2l,f,c
  8802  0015DA  0100               	movlb	0	; () banked
  8803  0015DC  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
  8804  0015DE  22DA               	addwfc	fsr2h,f,c
  8805  0015E0  50DF               	movf	indf2,w,c
  8806  0015E2  0100               	movlb	0	; () banked
  8807  0015E4  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  8808  0015E6  0100               	movlb	0	; () banked
  8809  0015E8  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  8810  0015EA  0100               	movlb	0	; () banked
  8811  0015EC  6F6D               	movwf	___lmul@multiplier& (0+255),b
  8812  0015EE  0100               	movlb	0	; () banked
  8813  0015F0  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  8814  0015F2  0100               	movlb	0	; () banked
  8815  0015F4  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  8816  0015F6  0100               	movlb	0	; () banked
  8817  0015F8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  8818  0015FA  0E3C               	movlw	60
  8819  0015FC  0100               	movlb	0	; () banked
  8820  0015FE  6F71               	movwf	___lmul@multiplicand& (0+255),b
  8821  001600  0E00               	movlw	0
  8822  001602  0100               	movlb	0	; () banked
  8823  001604  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  8824  001606  0E00               	movlw	0
  8825  001608  0100               	movlb	0	; () banked
  8826  00160A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  8827  00160C  0E00               	movlw	0
  8828  00160E  0100               	movlb	0	; () banked
  8829  001610  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  8830  001612  ECF3  F017         	call	___lmul	;wreg free
  8831  001616  C06D  F07E         	movff	?___lmul,??_caltime_to_epoch+1
  8832  00161A  C06E  F07F         	movff	?___lmul+1,??_caltime_to_epoch+2
  8833  00161E  C06F  F080         	movff	?___lmul+2,??_caltime_to_epoch+3
  8834  001622  C070  F081         	movff	?___lmul+3,??_caltime_to_epoch+4
  8835  001626  0100               	movlb	0	; () banked
  8836  001628  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
  8837  00162A  0100               	movlb	0	; () banked
  8838  00162C  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8839  00162E  0100               	movlb	0	; () banked
  8840  001630  517F               	movf	(??_caltime_to_epoch+2)& (0+255),w,b
  8841  001632  0100               	movlb	0	; () banked
  8842  001634  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8843  001636  0100               	movlb	0	; () banked
  8844  001638  5180               	movf	(??_caltime_to_epoch+3)& (0+255),w,b
  8845  00163A  0100               	movlb	0	; () banked
  8846  00163C  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8847  00163E  0100               	movlb	0	; () banked
  8848  001640  5181               	movf	(??_caltime_to_epoch+4)& (0+255),w,b
  8849  001642  0100               	movlb	0	; () banked
  8850  001644  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;My_header\My_RTCC.h: 232: epoch += ct->ss;
  8854  001646  C079  FFD9         	movff	caltime_to_epoch@ct,fsr2l
  8855  00164A  C07A  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
  8856  00164E  50DF               	movf	indf2,w,c
  8857  001650  0100               	movlb	0	; () banked
  8858  001652  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
  8859  001654  0100               	movlb	0	; () banked
  8860  001656  517D               	movf	??_caltime_to_epoch& (0+255),w,b
  8861  001658  0100               	movlb	0	; () banked
  8862  00165A  2787               	addwf	caltime_to_epoch@epoch& (0+255),f,b
  8863  00165C  0E00               	movlw	0
  8864  00165E  0100               	movlb	0	; () banked
  8865  001660  2388               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
  8866  001662  0100               	movlb	0	; () banked
  8867  001664  2389               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
  8868  001666  0100               	movlb	0	; () banked
  8869  001668  238A               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;My_header\My_RTCC.h: 234: *ep = epoch;
  8873  00166A  C07B  FFD9         	movff	caltime_to_epoch@ep,fsr2l
  8874  00166E  C07C  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
  8875  001672  0100               	movlb	0	; () banked
  8876  001674  C087  FFDE         	movff	caltime_to_epoch@epoch,postinc2
  8877  001678  0100               	movlb	0	; () banked
  8878  00167A  C088  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
  8879  00167E  0100               	movlb	0	; () banked
  8880  001680  C089  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
  8881  001684  0100               	movlb	0	; () banked
  8882  001686  C08A  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
  8883                           
  8884                           ; BSR set to: 0
  8885  00168A  0012               	return	
  8886  00168C                     __end_of_caltime_to_epoch:
  8887                           	opt stack 0
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           intcon	equ	0xFF2
  8895                           intcon2	equ	0xFF1
  8896                           postinc0	equ	0xFEE
  8897                           wreg	equ	0xFE8
  8898                           indf1	equ	0xFE7
  8899                           postdec1	equ	0xFE5
  8900                           fsr1h	equ	0xFE2
  8901                           fsr1l	equ	0xFE1
  8902                           indf2	equ	0xFDF
  8903                           postinc2	equ	0xFDE
  8904                           postdec2	equ	0xFDD
  8905                           fsr2h	equ	0xFDA
  8906                           fsr2l	equ	0xFD9
  8907                           status	equ	0xFD8
  8908                           
  8909 ;; *************** function _month_length *****************
  8910 ;; Defined at:
  8911 ;;		line 84 in file "../My_header\My_RTCC.h"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  year            1    wreg     unsigned char 
  8914 ;;  month           1   33[COMRAM] unsigned char 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  year            1    8[BANK0 ] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      unsigned char 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, prodl, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8926 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8929 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8930 ;;Total ram usage:        6 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    6
  8933 ;; This function calls:
  8934 ;;		___awmod
  8935 ;; This function is called by:
  8936 ;;		_epoch_to_caltime
  8937 ;;		_caltime_to_epoch
  8938 ;;		_RTCC_time_set_inc
  8939 ;;		_RTCC_time_set_dec
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text48
  8944  002704                     __ptext48:
  8945                           	opt stack 0
  8946  002704                     _month_length:
  8947                           	opt stack 21
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;incstack = 0
  8951                           ;month_length@year stored from wreg
  8952  002704  0100               	movlb	0	; () banked
  8953  002706  6F68               	movwf	month_length@year& (0+255),b
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;My_header\My_RTCC.h: 85: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
  8957  002708  5022               	movf	month_length@month,w,c
  8958  00270A  0A02               	xorlw	2
  8959  00270C  A4D8               	btfss	status,2,c
  8960  00270E  D041               	goto	l4053
  8961                           
  8962                           ; BSR set to: 0
  8963  002710  0100               	movlb	0	; () banked
  8964  002712  C068  F060         	movff	month_length@year,___awmod@dividend
  8965  002716  0100               	movlb	0	; () banked
  8966  002718  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8967  00271A  0E00               	movlw	0
  8968  00271C  0100               	movlb	0	; () banked
  8969  00271E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8970  002720  0E64               	movlw	100
  8971  002722  0100               	movlb	0	; () banked
  8972  002724  6F62               	movwf	___awmod@divisor& (0+255),b
  8973  002726  EC7C  F015         	call	___awmod	;wreg free
  8974  00272A  0100               	movlb	0	; () banked
  8975  00272C  5161               	movf	(?___awmod+1)& (0+255),w,b
  8976  00272E  0100               	movlb	0	; () banked
  8977  002730  1160               	iorwf	?___awmod& (0+255),w,b
  8978  002732  A4D8               	btfss	status,2,c
  8979  002734  D002               	goto	u3680
  8980  002736  0E01               	movlw	1
  8981  002738  D001               	goto	u3686
  8982  00273A                     u3680:
  8983  00273A  0E00               	movlw	0
  8984  00273C                     u3686:
  8985  00273C  0800               	sublw	0
  8986  00273E  0100               	movlb	0	; () banked
  8987  002740  6F64               	movwf	??_month_length& (0+255),b
  8988  002742  0100               	movlb	0	; () banked
  8989  002744  C068  F060         	movff	month_length@year,___awmod@dividend
  8990  002748  0100               	movlb	0	; () banked
  8991  00274A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  8992  00274C  0E01               	movlw	1
  8993  00274E  0100               	movlb	0	; () banked
  8994  002750  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8995  002752  0E90               	movlw	144
  8996  002754  0100               	movlb	0	; () banked
  8997  002756  6F62               	movwf	___awmod@divisor& (0+255),b
  8998  002758  EC7C  F015         	call	___awmod	;wreg free
  8999  00275C  0100               	movlb	0	; () banked
  9000  00275E  5161               	movf	(?___awmod+1)& (0+255),w,b
  9001  002760  0100               	movlb	0	; () banked
  9002  002762  1160               	iorwf	?___awmod& (0+255),w,b
  9003  002764  A4D8               	btfss	status,2,c
  9004  002766  D002               	goto	u3690
  9005  002768  0E01               	movlw	1
  9006  00276A  D001               	goto	u3696
  9007  00276C                     u3690:
  9008  00276C  0E00               	movlw	0
  9009  00276E                     u3696:
  9010  00276E  0100               	movlb	0	; () banked
  9011  002770  6F65               	movwf	(??_month_length+1)& (0+255),b
  9012  002772  C068  F066         	movff	month_length@year,??_month_length+2
  9013  002776  0E03               	movlw	3
  9014  002778  0100               	movlb	0	; () banked
  9015  00277A  1766               	andwf	(??_month_length+2)& (0+255),f,b
  9016  00277C  A4D8               	btfss	status,2,c
  9017  00277E  D002               	goto	u3700
  9018  002780  0E01               	movlw	1
  9019  002782  D001               	goto	u3706
  9020  002784                     u3700:
  9021  002784  0E00               	movlw	0
  9022  002786                     u3706:
  9023  002786  0100               	movlb	0	; () banked
  9024  002788  2565               	addwf	(??_month_length+1)& (0+255),w,b
  9025  00278A  0100               	movlb	0	; () banked
  9026  00278C  2564               	addwf	??_month_length& (0+255),w,b
  9027  00278E  0F1C               	addlw	28
  9028  002790  0012               	return	
  9029  002792                     l4053:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;My_header\My_RTCC.h: 86: else return 31 - (((-(month & 1)^month)&13) == 4);
  9033  002792  5022               	movf	month_length@month,w,c
  9034  002794  0B01               	andlw	1
  9035  002796  0100               	movlb	0	; () banked
  9036  002798  6F64               	movwf	??_month_length& (0+255),b
  9037  00279A  6B65               	clrf	(??_month_length+1)& (0+255),b
  9038  00279C  0100               	movlb	0	; () banked
  9039  00279E  1F64               	comf	??_month_length& (0+255),f,b
  9040  0027A0  1F65               	comf	(??_month_length+1)& (0+255),f,b
  9041  0027A2  4B64               	infsnz	??_month_length& (0+255),f,b
  9042  0027A4  2B65               	incf	(??_month_length+1)& (0+255),f,b
  9043  0027A6  5022               	movf	month_length@month,w,c
  9044  0027A8  0100               	movlb	0	; () banked
  9045  0027AA  6F66               	movwf	(??_month_length+2)& (0+255),b
  9046  0027AC  6B67               	clrf	(??_month_length+3)& (0+255),b
  9047  0027AE  0100               	movlb	0	; () banked
  9048  0027B0  5164               	movf	??_month_length& (0+255),w,b
  9049  0027B2  0100               	movlb	0	; () banked
  9050  0027B4  1B66               	xorwf	(??_month_length+2)& (0+255),f,b
  9051  0027B6  0100               	movlb	0	; () banked
  9052  0027B8  5165               	movf	(??_month_length+1)& (0+255),w,b
  9053  0027BA  0100               	movlb	0	; () banked
  9054  0027BC  1B67               	xorwf	(??_month_length+3)& (0+255),f,b
  9055  0027BE  0E0D               	movlw	13
  9056  0027C0  0100               	movlb	0	; () banked
  9057  0027C2  1766               	andwf	(??_month_length+2)& (0+255),f,b
  9058  0027C4  0E00               	movlw	0
  9059  0027C6  1767               	andwf	(??_month_length+3)& (0+255),f,b
  9060  0027C8  0100               	movlb	0	; () banked
  9061  0027CA  5166               	movf	(??_month_length+2)& (0+255),w,b
  9062  0027CC  0A04               	xorlw	4
  9063  0027CE  1167               	iorwf	(??_month_length+3)& (0+255),w,b
  9064  0027D0  A4D8               	btfss	status,2,c
  9065  0027D2  D002               	goto	u3710
  9066  0027D4  0E01               	movlw	1
  9067  0027D6  D001               	goto	u3716
  9068  0027D8                     u3710:
  9069  0027D8  0E00               	movlw	0
  9070  0027DA                     u3716:
  9071  0027DA  0800               	sublw	0
  9072  0027DC  0F1F               	addlw	31
  9073  0027DE  0012               	return	
  9074  0027E0                     __end_of_month_length:
  9075                           	opt stack 0
  9076                           tblptru	equ	0xFF8
  9077                           tblptrh	equ	0xFF7
  9078                           tblptrl	equ	0xFF6
  9079                           tablat	equ	0xFF5
  9080                           prodh	equ	0xFF4
  9081                           prodl	equ	0xFF3
  9082                           intcon	equ	0xFF2
  9083                           intcon2	equ	0xFF1
  9084                           postinc0	equ	0xFEE
  9085                           wreg	equ	0xFE8
  9086                           indf1	equ	0xFE7
  9087                           postdec1	equ	0xFE5
  9088                           fsr1h	equ	0xFE2
  9089                           fsr1l	equ	0xFE1
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           fsr2h	equ	0xFDA
  9094                           fsr2l	equ	0xFD9
  9095                           status	equ	0xFD8
  9096                           
  9097 ;; *************** function ___awmod *****************
  9098 ;; Defined at:
  9099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;  dividend        2    0[BANK0 ] int 
  9102 ;;  divisor         2    2[BANK0 ] int 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  sign            1   32[COMRAM] unsigned char 
  9105 ;;  counter         1   31[COMRAM] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  2    0[BANK0 ] int 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, prodl
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9118 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;Total ram usage:        6 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    5
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_month_length
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text49
  9130  002AF8                     __ptext49:
  9131                           	opt stack 0
  9132  002AF8                     ___awmod:
  9133                           	opt stack 21
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;incstack = 0
  9137  002AF8  0E00               	movlw	0
  9138  002AFA  6E21               	movwf	___awmod@sign,c
  9139  002AFC  0100               	movlb	0	; () banked
  9140  002AFE  5161               	movf	(___awmod@dividend+1)& (0+255),w,b
  9141  002B00  0A80               	xorlw	128
  9142  002B02  6EF3               	movwf	prodl,c
  9143  002B04  0E80               	movlw	128
  9144  002B06  5CF3               	subwf	prodl,w,c
  9145  002B08  0E00               	movlw	0
  9146  002B0A  B4D8               	btfsc	status,2,c
  9147  002B0C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9148  002B0E  B0D8               	btfsc	status,0,c
  9149  002B10  D008               	goto	l3981
  9150                           
  9151                           ; BSR set to: 0
  9152  002B12  0100               	movlb	0	; () banked
  9153  002B14  6D60               	negf	___awmod@dividend& (0+255),b
  9154  002B16  0100               	movlb	0	; () banked
  9155  002B18  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9156  002B1A  B0D8               	btfsc	status,0,c
  9157  002B1C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9158                           
  9159                           ; BSR set to: 0
  9160  002B1E  0E01               	movlw	1
  9161  002B20  6E21               	movwf	___awmod@sign,c
  9162  002B22                     l3981:
  9163                           
  9164                           ; BSR set to: 0
  9165  002B22  0100               	movlb	0	; () banked
  9166  002B24  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9167  002B26  0A80               	xorlw	128
  9168  002B28  6EF3               	movwf	prodl,c
  9169  002B2A  0E80               	movlw	128
  9170  002B2C  5CF3               	subwf	prodl,w,c
  9171  002B2E  0E00               	movlw	0
  9172  002B30  B4D8               	btfsc	status,2,c
  9173  002B32  5D62               	subwf	___awmod@divisor& (0+255),w,b
  9174  002B34  B0D8               	btfsc	status,0,c
  9175  002B36  D006               	goto	l3985
  9176                           
  9177                           ; BSR set to: 0
  9178  002B38  0100               	movlb	0	; () banked
  9179  002B3A  6D62               	negf	___awmod@divisor& (0+255),b
  9180  002B3C  0100               	movlb	0	; () banked
  9181  002B3E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  9182  002B40  B0D8               	btfsc	status,0,c
  9183  002B42  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  9184  002B44                     l3985:
  9185                           
  9186                           ; BSR set to: 0
  9187  002B44  0100               	movlb	0	; () banked
  9188  002B46  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9189  002B48  1162               	iorwf	___awmod@divisor& (0+255),w,b
  9190  002B4A  B4D8               	btfsc	status,2,c
  9191  002B4C  D023               	goto	l4001
  9192                           
  9193                           ; BSR set to: 0
  9194  002B4E  0E01               	movlw	1
  9195  002B50  6E20               	movwf	___awmod@counter,c
  9196  002B52  D005               	goto	l3991
  9197  002B54                     l3989:
  9198                           
  9199                           ; BSR set to: 0
  9200  002B54  0100               	movlb	0	; () banked
  9201  002B56  90D8               	bcf	status,0,c
  9202  002B58  3762               	rlcf	___awmod@divisor& (0+255),f,b
  9203  002B5A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9204  002B5C  2A20               	incf	___awmod@counter,f,c
  9205  002B5E                     l3991:
  9206                           
  9207                           ; BSR set to: 0
  9208  002B5E  0100               	movlb	0	; () banked
  9209  002B60  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9210  002B62  D7F8               	goto	l3989
  9211  002B64                     l3993:
  9212                           
  9213                           ; BSR set to: 0
  9214  002B64  0100               	movlb	0	; () banked
  9215  002B66  5162               	movf	___awmod@divisor& (0+255),w,b
  9216  002B68  0100               	movlb	0	; () banked
  9217  002B6A  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9218  002B6C  0100               	movlb	0	; () banked
  9219  002B6E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9220  002B70  0100               	movlb	0	; () banked
  9221  002B72  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9222  002B74  A0D8               	btfss	status,0,c
  9223  002B76  D008               	goto	l3997
  9224                           
  9225                           ; BSR set to: 0
  9226  002B78  0100               	movlb	0	; () banked
  9227  002B7A  5162               	movf	___awmod@divisor& (0+255),w,b
  9228  002B7C  0100               	movlb	0	; () banked
  9229  002B7E  5F60               	subwf	___awmod@dividend& (0+255),f,b
  9230  002B80  0100               	movlb	0	; () banked
  9231  002B82  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9232  002B84  0100               	movlb	0	; () banked
  9233  002B86  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9234  002B88                     l3997:
  9235                           
  9236                           ; BSR set to: 0
  9237  002B88  0100               	movlb	0	; () banked
  9238  002B8A  90D8               	bcf	status,0,c
  9239  002B8C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9240  002B8E  3362               	rrcf	___awmod@divisor& (0+255),f,b
  9241                           
  9242                           ; BSR set to: 0
  9243  002B90  2E20               	decfsz	___awmod@counter,f,c
  9244  002B92  D7E8               	goto	l3993
  9245  002B94                     l4001:
  9246                           
  9247                           ; BSR set to: 0
  9248  002B94  5021               	movf	___awmod@sign,w,c
  9249  002B96  B4D8               	btfsc	status,2,c
  9250  002B98  D006               	goto	l4005
  9251                           
  9252                           ; BSR set to: 0
  9253  002B9A  0100               	movlb	0	; () banked
  9254  002B9C  6D60               	negf	___awmod@dividend& (0+255),b
  9255  002B9E  0100               	movlb	0	; () banked
  9256  002BA0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9257  002BA2  B0D8               	btfsc	status,0,c
  9258  002BA4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9259  002BA6                     l4005:
  9260                           
  9261                           ; BSR set to: 0
  9262  002BA6  C060  F060         	movff	___awmod@dividend,?___awmod
  9263  002BAA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  9264  002BAE  0012               	return	
  9265  002BB0                     __end_of___awmod:
  9266                           	opt stack 0
  9267                           tblptru	equ	0xFF8
  9268                           tblptrh	equ	0xFF7
  9269                           tblptrl	equ	0xFF6
  9270                           tablat	equ	0xFF5
  9271                           prodh	equ	0xFF4
  9272                           prodl	equ	0xFF3
  9273                           intcon	equ	0xFF2
  9274                           intcon2	equ	0xFF1
  9275                           postinc0	equ	0xFEE
  9276                           wreg	equ	0xFE8
  9277                           indf1	equ	0xFE7
  9278                           postdec1	equ	0xFE5
  9279                           fsr1h	equ	0xFE2
  9280                           fsr1l	equ	0xFE1
  9281                           indf2	equ	0xFDF
  9282                           postinc2	equ	0xFDE
  9283                           postdec2	equ	0xFDD
  9284                           fsr2h	equ	0xFDA
  9285                           fsr2l	equ	0xFD9
  9286                           status	equ	0xFD8
  9287                           
  9288 ;; *************** function ___lmul *****************
  9289 ;; Defined at:
  9290 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  multiplier      4   13[BANK0 ] unsigned long 
  9293 ;;  multiplicand    4   17[BANK0 ] unsigned long 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  product         4   21[BANK0 ] unsigned long 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  4   13[BANK0 ] unsigned long 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9306 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9308 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9309 ;;Total ram usage:       12 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    5
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		_get_quot_rem
  9316 ;;		_caltime_to_epoch
  9317 ;;		_RTCC_time_set_inc
  9318 ;;		_RTCC_time_set_dec
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text50
  9323  002FE6                     __ptext50:
  9324                           	opt stack 0
  9325  002FE6                     ___lmul:
  9326                           	opt stack 22
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;incstack = 0
  9330  002FE6  0E00               	movlw	0
  9331  002FE8  0100               	movlb	0	; () banked
  9332  002FEA  6F75               	movwf	___lmul@product& (0+255),b
  9333  002FEC  0E00               	movlw	0
  9334  002FEE  0100               	movlb	0	; () banked
  9335  002FF0  6F76               	movwf	(___lmul@product+1)& (0+255),b
  9336  002FF2  0E00               	movlw	0
  9337  002FF4  0100               	movlb	0	; () banked
  9338  002FF6  6F77               	movwf	(___lmul@product+2)& (0+255),b
  9339  002FF8  0E00               	movlw	0
  9340  002FFA  0100               	movlb	0	; () banked
  9341  002FFC  6F78               	movwf	(___lmul@product+3)& (0+255),b
  9342  002FFE                     l4059:
  9343                           
  9344                           ; BSR set to: 0
  9345  002FFE  0100               	movlb	0	; () banked
  9346  003000  A16D               	btfss	___lmul@multiplier& (0+255),0,b
  9347  003002  D010               	goto	l4063
  9348                           
  9349                           ; BSR set to: 0
  9350  003004  0100               	movlb	0	; () banked
  9351  003006  5171               	movf	___lmul@multiplicand& (0+255),w,b
  9352  003008  0100               	movlb	0	; () banked
  9353  00300A  2775               	addwf	___lmul@product& (0+255),f,b
  9354  00300C  0100               	movlb	0	; () banked
  9355  00300E  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  9356  003010  0100               	movlb	0	; () banked
  9357  003012  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
  9358  003014  0100               	movlb	0	; () banked
  9359  003016  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  9360  003018  0100               	movlb	0	; () banked
  9361  00301A  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
  9362  00301C  0100               	movlb	0	; () banked
  9363  00301E  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  9364  003020  0100               	movlb	0	; () banked
  9365  003022  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
  9366  003024                     l4063:
  9367                           
  9368                           ; BSR set to: 0
  9369  003024  0100               	movlb	0	; () banked
  9370  003026  90D8               	bcf	status,0,c
  9371  003028  0100               	movlb	0	; () banked
  9372  00302A  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
  9373  00302C  0100               	movlb	0	; () banked
  9374  00302E  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  9375  003030  0100               	movlb	0	; () banked
  9376  003032  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  9377  003034  0100               	movlb	0	; () banked
  9378  003036  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  9379                           
  9380                           ; BSR set to: 0
  9381  003038  0100               	movlb	0	; () banked
  9382  00303A  90D8               	bcf	status,0,c
  9383  00303C  0100               	movlb	0	; () banked
  9384  00303E  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  9385  003040  0100               	movlb	0	; () banked
  9386  003042  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  9387  003044  0100               	movlb	0	; () banked
  9388  003046  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  9389  003048  0100               	movlb	0	; () banked
  9390  00304A  336D               	rrcf	___lmul@multiplier& (0+255),f,b
  9391  00304C  0100               	movlb	0	; () banked
  9392  00304E  5170               	movf	(___lmul@multiplier+3)& (0+255),w,b
  9393  003050  116D               	iorwf	___lmul@multiplier& (0+255),w,b
  9394  003052  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  9395  003054  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  9396  003056  A4D8               	btfss	status,2,c
  9397  003058  D7D2               	goto	l4059
  9398                           
  9399                           ; BSR set to: 0
  9400  00305A  C075  F06D         	movff	___lmul@product,?___lmul
  9401  00305E  C076  F06E         	movff	___lmul@product+1,?___lmul+1
  9402  003062  C077  F06F         	movff	___lmul@product+2,?___lmul+2
  9403  003066  C078  F070         	movff	___lmul@product+3,?___lmul+3
  9404                           
  9405                           ; BSR set to: 0
  9406  00306A  0012               	return	
  9407  00306C                     __end_of___lmul:
  9408                           	opt stack 0
  9409                           tblptru	equ	0xFF8
  9410                           tblptrh	equ	0xFF7
  9411                           tblptrl	equ	0xFF6
  9412                           tablat	equ	0xFF5
  9413                           prodh	equ	0xFF4
  9414                           prodl	equ	0xFF3
  9415                           intcon	equ	0xFF2
  9416                           intcon2	equ	0xFF1
  9417                           postinc0	equ	0xFEE
  9418                           wreg	equ	0xFE8
  9419                           indf1	equ	0xFE7
  9420                           postdec1	equ	0xFE5
  9421                           fsr1h	equ	0xFE2
  9422                           fsr1l	equ	0xFE1
  9423                           indf2	equ	0xFDF
  9424                           postinc2	equ	0xFDE
  9425                           postdec2	equ	0xFDD
  9426                           fsr2h	equ	0xFDA
  9427                           fsr2l	equ	0xFD9
  9428                           status	equ	0xFD8
  9429                           
  9430 ;; *************** function _RTCC_to_caltime *****************
  9431 ;; Defined at:
  9432 ;;		line 126 in file "../My_header\My_RTCC.h"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  ct              2    0[BANK0 ] PTR struct .
  9435 ;;		 -> caltime_now(7), 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  dumy            1   33[COMRAM] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;		None               void
  9440 ;; Registers used:
  9441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;Total ram usage:        3 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    6
  9454 ;; This function calls:
  9455 ;;		_x_to_d
  9456 ;; This function is called by:
  9457 ;;		_RTCC_from_RTCC
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           	psect	text51
  9462  0028B4                     __ptext51:
  9463                           	opt stack 0
  9464  0028B4                     _RTCC_to_caltime:
  9465                           	opt stack 21
  9466                           
  9467                           ;My_header\My_RTCC.h: 129: RTCCFGbits.RTCPTR0 = 1;
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;incstack = 0
  9471  0028B4  010F               	movlb	15	; () banked
  9472  0028B6  813F               	bsf	63,0,b	;volatile
  9473                           
  9474                           ;My_header\My_RTCC.h: 130: RTCCFGbits.RTCPTR1 = 1;
  9475  0028B8  010F               	movlb	15	; () banked
  9476  0028BA  833F               	bsf	63,1,b	;volatile
  9477                           
  9478                           ; BSR set to: 15
  9479                           ;My_header\My_RTCC.h: 132: ct->YY = x_to_d(RTCVALL);
  9480  0028BC  0100               	movlb	0	; () banked
  9481  0028BE  EE20 F006          	lfsr	2,6
  9482  0028C2  0100               	movlb	0	; () banked
  9483  0028C4  5160               	movf	RTCC_to_caltime@ct& (0+255),w,b
  9484  0028C6  26D9               	addwf	fsr2l,f,c
  9485  0028C8  0100               	movlb	0	; () banked
  9486  0028CA  5161               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  9487  0028CC  22DA               	addwfc	fsr2h,f,c
  9488  0028CE  010F               	movlb	15	; () banked
  9489  0028D0  513A               	movf	58,w,b	;volatile
  9490  0028D2  ECD2  F01C         	call	_x_to_d
  9491  0028D6  6EDF               	movwf	indf2,c
  9492                           
  9493                           ;My_header\My_RTCC.h: 133: uint8_t dumy = RTCVALH;
  9494  0028D8  CF3B F022          	movff	3899,RTCC_to_caltime@dumy	;volatile
  9495                           
  9496                           ;My_header\My_RTCC.h: 134: ct->DD = x_to_d(RTCVALL);
  9497  0028DC  0100               	movlb	0	; () banked
  9498  0028DE  EE20 F004          	lfsr	2,4
  9499  0028E2  0100               	movlb	0	; () banked
  9500  0028E4  5160               	movf	RTCC_to_caltime@ct& (0+255),w,b
  9501  0028E6  26D9               	addwf	fsr2l,f,c
  9502  0028E8  0100               	movlb	0	; () banked
  9503  0028EA  5161               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  9504  0028EC  22DA               	addwfc	fsr2h,f,c
  9505  0028EE  010F               	movlb	15	; () banked
  9506  0028F0  513A               	movf	58,w,b	;volatile
  9507  0028F2  ECD2  F01C         	call	_x_to_d
  9508  0028F6  6EDF               	movwf	indf2,c
  9509                           
  9510                           ;My_header\My_RTCC.h: 135: ct->MM = x_to_d(RTCVALH);
  9511  0028F8  0100               	movlb	0	; () banked
  9512  0028FA  EE20 F005          	lfsr	2,5
  9513  0028FE  0100               	movlb	0	; () banked
  9514  002900  5160               	movf	RTCC_to_caltime@ct& (0+255),w,b
  9515  002902  26D9               	addwf	fsr2l,f,c
  9516  002904  0100               	movlb	0	; () banked
  9517  002906  5161               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  9518  002908  22DA               	addwfc	fsr2h,f,c
  9519  00290A  010F               	movlb	15	; () banked
  9520  00290C  513B               	movf	59,w,b	;volatile
  9521  00290E  ECD2  F01C         	call	_x_to_d
  9522  002912  6EDF               	movwf	indf2,c
  9523                           
  9524                           ;My_header\My_RTCC.h: 136: ct->hh = x_to_d(RTCVALL);
  9525  002914  0100               	movlb	0	; () banked
  9526  002916  EE20 F002          	lfsr	2,2
  9527  00291A  0100               	movlb	0	; () banked
  9528  00291C  5160               	movf	RTCC_to_caltime@ct& (0+255),w,b
  9529  00291E  26D9               	addwf	fsr2l,f,c
  9530  002920  0100               	movlb	0	; () banked
  9531  002922  5161               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  9532  002924  22DA               	addwfc	fsr2h,f,c
  9533  002926  010F               	movlb	15	; () banked
  9534  002928  513A               	movf	58,w,b	;volatile
  9535  00292A  ECD2  F01C         	call	_x_to_d
  9536  00292E  6EDF               	movwf	indf2,c
  9537                           
  9538                           ;My_header\My_RTCC.h: 137: ct->EE = x_to_d(RTCVALH);
  9539  002930  0100               	movlb	0	; () banked
  9540  002932  EE20 F003          	lfsr	2,3
  9541  002936  0100               	movlb	0	; () banked
  9542  002938  5160               	movf	RTCC_to_caltime@ct& (0+255),w,b
  9543  00293A  26D9               	addwf	fsr2l,f,c
  9544  00293C  0100               	movlb	0	; () banked
  9545  00293E  5161               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  9546  002940  22DA               	addwfc	fsr2h,f,c
  9547  002942  010F               	movlb	15	; () banked
  9548  002944  513B               	movf	59,w,b	;volatile
  9549  002946  ECD2  F01C         	call	_x_to_d
  9550  00294A  6EDF               	movwf	indf2,c
  9551                           
  9552                           ;My_header\My_RTCC.h: 138: ct->ss = x_to_d(RTCVALL);
  9553  00294C  010F               	movlb	15	; () banked
  9554  00294E  513A               	movf	58,w,b	;volatile
  9555  002950  ECD2  F01C         	call	_x_to_d
  9556  002954  C060  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
  9557  002958  C061  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
  9558  00295C  6EDF               	movwf	indf2,c
  9559                           
  9560                           ;My_header\My_RTCC.h: 139: ct->mm = x_to_d(RTCVALH);
  9561  00295E  0100               	movlb	0	; () banked
  9562  002960  EE20 F001          	lfsr	2,1
  9563  002964  0100               	movlb	0	; () banked
  9564  002966  5160               	movf	RTCC_to_caltime@ct& (0+255),w,b
  9565  002968  26D9               	addwf	fsr2l,f,c
  9566  00296A  0100               	movlb	0	; () banked
  9567  00296C  5161               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
  9568  00296E  22DA               	addwfc	fsr2h,f,c
  9569  002970  010F               	movlb	15	; () banked
  9570  002972  513B               	movf	59,w,b	;volatile
  9571  002974  ECD2  F01C         	call	_x_to_d
  9572  002978  6EDF               	movwf	indf2,c
  9573  00297A  0012               	return	
  9574  00297C                     __end_of_RTCC_to_caltime:
  9575                           	opt stack 0
  9576                           tblptru	equ	0xFF8
  9577                           tblptrh	equ	0xFF7
  9578                           tblptrl	equ	0xFF6
  9579                           tablat	equ	0xFF5
  9580                           prodh	equ	0xFF4
  9581                           prodl	equ	0xFF3
  9582                           intcon	equ	0xFF2
  9583                           intcon2	equ	0xFF1
  9584                           postinc0	equ	0xFEE
  9585                           wreg	equ	0xFE8
  9586                           indf1	equ	0xFE7
  9587                           postdec1	equ	0xFE5
  9588                           fsr1h	equ	0xFE2
  9589                           fsr1l	equ	0xFE1
  9590                           indf2	equ	0xFDF
  9591                           postinc2	equ	0xFDE
  9592                           postdec2	equ	0xFDD
  9593                           fsr2h	equ	0xFDA
  9594                           fsr2l	equ	0xFD9
  9595                           status	equ	0xFD8
  9596                           
  9597 ;; *************** function _x_to_d *****************
  9598 ;; Defined at:
  9599 ;;		line 78 in file "../My_header\My_RTCC.h"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  hex             1    wreg     unsigned char 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  hex             1   32[COMRAM] unsigned char 
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      unsigned char 
  9606 ;; Registers used:
  9607 ;;		wreg, status,2, status,0, prodl, prodh
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9617 ;;Total ram usage:        2 bytes
  9618 ;; Hardware stack levels used:    1
  9619 ;; Hardware stack levels required when called:    5
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_RTCC_to_caltime
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text52
  9628  0039A4                     __ptext52:
  9629                           	opt stack 0
  9630  0039A4                     _x_to_d:
  9631                           	opt stack 21
  9632                           
  9633                           ;incstack = 0
  9634                           ;x_to_d@hex stored from wreg
  9635  0039A4  6E21               	movwf	x_to_d@hex,c
  9636                           
  9637                           ;My_header\My_RTCC.h: 79: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
  9638  0039A6  C021  F020         	movff	x_to_d@hex,??_x_to_d
  9639  0039AA  0E0F               	movlw	15
  9640  0039AC  1620               	andwf	??_x_to_d,f,c
  9641  0039AE  3821               	swapf	x_to_d@hex,w,c
  9642  0039B0  0B0F               	andlw	15
  9643  0039B2  0B0F               	andlw	15
  9644  0039B4  0D0A               	mullw	10
  9645  0039B6  50F3               	movf	prodl,w,c
  9646  0039B8  2420               	addwf	??_x_to_d,w,c
  9647  0039BA  0012               	return	
  9648  0039BC                     __end_of_x_to_d:
  9649                           	opt stack 0
  9650                           tblptru	equ	0xFF8
  9651                           tblptrh	equ	0xFF7
  9652                           tblptrl	equ	0xFF6
  9653                           tablat	equ	0xFF5
  9654                           prodh	equ	0xFF4
  9655                           prodl	equ	0xFF3
  9656                           intcon	equ	0xFF2
  9657                           intcon2	equ	0xFF1
  9658                           postinc0	equ	0xFEE
  9659                           wreg	equ	0xFE8
  9660                           indf1	equ	0xFE7
  9661                           postdec1	equ	0xFE5
  9662                           fsr1h	equ	0xFE2
  9663                           fsr1l	equ	0xFE1
  9664                           indf2	equ	0xFDF
  9665                           postinc2	equ	0xFDE
  9666                           postdec2	equ	0xFDD
  9667                           fsr2h	equ	0xFDA
  9668                           fsr2l	equ	0xFD9
  9669                           status	equ	0xFD8
  9670                           
  9671 ;; *************** function _RTCC_time_set_cursor *****************
  9672 ;; Defined at:
  9673 ;;		line 293 in file "../My_header\My_RTCC.h"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;		None
  9678 ;; Return value:  Size  Location     Type
  9679 ;;		None               void
  9680 ;; Registers used:
  9681 ;;		wreg, status,2
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9691 ;;Total ram usage:        0 bytes
  9692 ;; Hardware stack levels used:    1
  9693 ;; Hardware stack levels required when called:    5
  9694 ;; This function calls:
  9695 ;;		Nothing
  9696 ;; This function is called by:
  9697 ;;		_main
  9698 ;;		_RTCC_time_set
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text53
  9703  00360C                     __ptext53:
  9704                           	opt stack 0
  9705  00360C                     _RTCC_time_set_cursor:
  9706                           	opt stack 25
  9707                           
  9708                           ;My_header\My_RTCC.h: 294: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  9709                           
  9710                           ;incstack = 0
  9711  00360C  0100               	movlb	0	; () banked
  9712  00360E  A1D3               	btfss	_edit_flag& (0+255),0,b
  9713  003610  D004               	goto	l449
  9714                           
  9715                           ; BSR set to: 0
  9716  003612  0E02               	movlw	2
  9717  003614  0100               	movlb	0	; () banked
  9718  003616  6FD3               	movwf	_edit_flag& (0+255),b
  9719  003618  0012               	return	
  9720  00361A                     l449:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;My_header\My_RTCC.h: 295: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  9724  00361A  0100               	movlb	0	; () banked
  9725  00361C  A3D3               	btfss	_edit_flag& (0+255),1,b
  9726  00361E  D004               	goto	l451
  9727                           
  9728                           ; BSR set to: 0
  9729  003620  0E04               	movlw	4
  9730  003622  0100               	movlb	0	; () banked
  9731  003624  6FD3               	movwf	_edit_flag& (0+255),b
  9732  003626  0012               	return	
  9733  003628                     l451:
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;My_header\My_RTCC.h: 296: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  9737  003628  0100               	movlb	0	; () banked
  9738  00362A  A5D3               	btfss	_edit_flag& (0+255),2,b
  9739  00362C  D004               	goto	l453
  9740                           
  9741                           ; BSR set to: 0
  9742  00362E  0E08               	movlw	8
  9743  003630  0100               	movlb	0	; () banked
  9744  003632  6FD3               	movwf	_edit_flag& (0+255),b
  9745  003634  0012               	return	
  9746  003636                     l453:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;My_header\My_RTCC.h: 297: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  9750  003636  0100               	movlb	0	; () banked
  9751  003638  A7D3               	btfss	_edit_flag& (0+255),3,b
  9752  00363A  D004               	goto	l455
  9753                           
  9754                           ; BSR set to: 0
  9755  00363C  0E10               	movlw	16
  9756  00363E  0100               	movlb	0	; () banked
  9757  003640  6FD3               	movwf	_edit_flag& (0+255),b
  9758  003642  0012               	return	
  9759  003644                     l455:
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;My_header\My_RTCC.h: 298: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  9763  003644  0100               	movlb	0	; () banked
  9764  003646  A9D3               	btfss	_edit_flag& (0+255),4,b
  9765  003648  D004               	goto	l457
  9766                           
  9767                           ; BSR set to: 0
  9768  00364A  0E20               	movlw	32
  9769  00364C  0100               	movlb	0	; () banked
  9770  00364E  6FD3               	movwf	_edit_flag& (0+255),b
  9771  003650  0012               	return	
  9772  003652                     l457:
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;My_header\My_RTCC.h: 299: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  9776  003652  0100               	movlb	0	; () banked
  9777  003654  ABD3               	btfss	_edit_flag& (0+255),5,b
  9778  003656  0012               	return	
  9779                           
  9780                           ; BSR set to: 0
  9781  003658  0E01               	movlw	1
  9782  00365A  0100               	movlb	0	; () banked
  9783  00365C  6FD3               	movwf	_edit_flag& (0+255),b
  9784  00365E  0012               	return	
  9785  003660                     __end_of_RTCC_time_set_cursor:
  9786                           	opt stack 0
  9787                           tblptru	equ	0xFF8
  9788                           tblptrh	equ	0xFF7
  9789                           tblptrl	equ	0xFF6
  9790                           tablat	equ	0xFF5
  9791                           prodh	equ	0xFF4
  9792                           prodl	equ	0xFF3
  9793                           intcon	equ	0xFF2
  9794                           intcon2	equ	0xFF1
  9795                           postinc0	equ	0xFEE
  9796                           wreg	equ	0xFE8
  9797                           indf1	equ	0xFE7
  9798                           postdec1	equ	0xFE5
  9799                           fsr1h	equ	0xFE2
  9800                           fsr1l	equ	0xFE1
  9801                           indf2	equ	0xFDF
  9802                           postinc2	equ	0xFDE
  9803                           postdec2	equ	0xFDD
  9804                           fsr2h	equ	0xFDA
  9805                           fsr2l	equ	0xFD9
  9806                           status	equ	0xFD8
  9807                           
  9808 ;; *************** function _RTCC_loop *****************
  9809 ;; Defined at:
  9810 ;;		line 368 in file "../My_header\My_RTCC.h"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;		None
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;		None
  9815 ;; Return value:  Size  Location     Type
  9816 ;;		None               void
  9817 ;; Registers used:
  9818 ;;		wreg, status,2, status,0
  9819 ;; Tracked objects:
  9820 ;;		On entry : 0/0
  9821 ;;		On exit  : 0/0
  9822 ;;		Unchanged: 0/0
  9823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9828 ;;Total ram usage:        0 bytes
  9829 ;; Hardware stack levels used:    1
  9830 ;; Hardware stack levels required when called:    5
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_main
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text54
  9839  00306C                     __ptext54:
  9840                           	opt stack 0
  9841  00306C                     _RTCC_loop:
  9842                           	opt stack 25
  9843                           
  9844                           ;My_header\My_RTCC.h: 369: static uint8_t prev_halfsec;
  9845                           ;My_header\My_RTCC.h: 370: if (RTCCFGbits.HALFSEC != prev_halfsec) {
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;incstack = 0
  9849  00306C  010F               	movlb	15	; () banked
  9850  00306E  A73F               	btfss	63,3,b	;volatile
  9851  003070  D002               	goto	u2990
  9852  003072  0E01               	movlw	1
  9853  003074  D001               	goto	u2996
  9854  003076                     u2990:
  9855  003076  0E00               	movlw	0
  9856  003078                     u2996:
  9857  003078  1823               	xorwf	RTCC_loop@prev_halfsec,w,c
  9858  00307A  B4D8               	btfsc	status,2,c
  9859  00307C  0012               	return	
  9860                           
  9861                           ; BSR set to: 15
  9862                           ;My_header\My_RTCC.h: 371: prev_halfsec = RTCCFGbits.HALFSEC;
  9863  00307E  0E00               	movlw	0
  9864  003080  010F               	movlb	15	; () banked
  9865  003082  B73F               	btfsc	63,3,b	;volatile
  9866  003084  0E01               	movlw	1
  9867  003086  6E23               	movwf	RTCC_loop@prev_halfsec,c
  9868                           
  9869                           ;My_header\My_RTCC.h: 372: colon = RTCCFGbits.HALFSEC;
  9870  003088  0E00               	movlw	0
  9871  00308A  010F               	movlb	15	; () banked
  9872  00308C  B73F               	btfsc	63,3,b	;volatile
  9873  00308E  0E01               	movlw	1
  9874  003090  0100               	movlb	0	; () banked
  9875  003092  6FD2               	movwf	_colon& (0+255),b
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;My_header\My_RTCC.h: 373: if (!RTCCFGbits.HALFSEC) {
  9879  003094  010F               	movlb	15	; () banked
  9880  003096  B73F               	btfsc	63,3,b	;volatile
  9881  003098  D024               	goto	l3517
  9882                           
  9883                           ; BSR set to: 15
  9884                           ;My_header\My_RTCC.h: 374: epoch_now++;
  9885  00309A  0E01               	movlw	1
  9886  00309C  0100               	movlb	0	; () banked
  9887  00309E  27DD               	addwf	_epoch_now& (0+255),f,b
  9888  0030A0  0E00               	movlw	0
  9889  0030A2  0100               	movlb	0	; () banked
  9890  0030A4  23DE               	addwfc	(_epoch_now+1)& (0+255),f,b
  9891  0030A6  0100               	movlb	0	; () banked
  9892  0030A8  23DF               	addwfc	(_epoch_now+2)& (0+255),f,b
  9893  0030AA  0100               	movlb	0	; () banked
  9894  0030AC  23E0               	addwfc	(_epoch_now+3)& (0+255),f,b
  9895                           
  9896                           ;My_header\My_RTCC.h: 375: if (epoch_now >= 3155760000)epoch_now -= 3155760000;
  9897  0030AE  0E80               	movlw	128
  9898  0030B0  0100               	movlb	0	; () banked
  9899  0030B2  5DDD               	subwf	_epoch_now& (0+255),w,b
  9900  0030B4  0E13               	movlw	19
  9901  0030B6  0100               	movlb	0	; () banked
  9902  0030B8  59DE               	subwfb	(_epoch_now+1)& (0+255),w,b
  9903  0030BA  0E19               	movlw	25
  9904  0030BC  0100               	movlb	0	; () banked
  9905  0030BE  59DF               	subwfb	(_epoch_now+2)& (0+255),w,b
  9906  0030C0  0EBC               	movlw	188
  9907  0030C2  0100               	movlb	0	; () banked
  9908  0030C4  59E0               	subwfb	(_epoch_now+3)& (0+255),w,b
  9909  0030C6  A0D8               	btfss	status,0,c
  9910  0030C8  D00C               	goto	l3517
  9911                           
  9912                           ; BSR set to: 0
  9913  0030CA  0E80               	movlw	128
  9914  0030CC  0100               	movlb	0	; () banked
  9915  0030CE  5FDD               	subwf	_epoch_now& (0+255),f,b
  9916  0030D0  0E13               	movlw	19
  9917  0030D2  0100               	movlb	0	; () banked
  9918  0030D4  5BDE               	subwfb	(_epoch_now+1)& (0+255),f,b
  9919  0030D6  0E19               	movlw	25
  9920  0030D8  0100               	movlb	0	; () banked
  9921  0030DA  5BDF               	subwfb	(_epoch_now+2)& (0+255),f,b
  9922  0030DC  0EBC               	movlw	188
  9923  0030DE  0100               	movlb	0	; () banked
  9924  0030E0  5BE0               	subwfb	(_epoch_now+3)& (0+255),f,b
  9925  0030E2                     l3517:
  9926                           
  9927                           ;My_header\My_RTCC.h: 376: }
  9928                           ;My_header\My_RTCC.h: 377: time_change_flag = 1;
  9929  0030E2  0E01               	movlw	1
  9930  0030E4  0100               	movlb	0	; () banked
  9931  0030E6  6FD4               	movwf	_time_change_flag& (0+255),b
  9932  0030E8  0012               	return	
  9933  0030EA                     __end_of_RTCC_loop:
  9934                           	opt stack 0
  9935                           tblptru	equ	0xFF8
  9936                           tblptrh	equ	0xFF7
  9937                           tblptrl	equ	0xFF6
  9938                           tablat	equ	0xFF5
  9939                           prodh	equ	0xFF4
  9940                           prodl	equ	0xFF3
  9941                           intcon	equ	0xFF2
  9942                           intcon2	equ	0xFF1
  9943                           postinc0	equ	0xFEE
  9944                           wreg	equ	0xFE8
  9945                           indf1	equ	0xFE7
  9946                           postdec1	equ	0xFE5
  9947                           fsr1h	equ	0xFE2
  9948                           fsr1l	equ	0xFE1
  9949                           indf2	equ	0xFDF
  9950                           postinc2	equ	0xFDE
  9951                           postdec2	equ	0xFDD
  9952                           fsr2h	equ	0xFDA
  9953                           fsr2l	equ	0xFD9
  9954                           status	equ	0xFD8
  9955                           
  9956 ;; *************** function _ISR *****************
  9957 ;; Defined at:
  9958 ;;		line 87 in file "PIC18F27J53-RTCC01.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;		None
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  ascii           1   30[COMRAM] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;		None               void
  9965 ;; Registers used:
  9966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9974 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9975 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9976 ;;Total ram usage:       15 bytes
  9977 ;; Hardware stack levels used:    1
  9978 ;; Hardware stack levels required when called:    4
  9979 ;; This function calls:
  9980 ;;		_button_timer_interrupt
  9981 ;;		_delay_timer_interrupt
  9982 ;;		_interrupt_TXIF
  9983 ;;		_judgement
  9984 ;; This function is called by:
  9985 ;;		Interrupt level 2
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	intcode
  9990  000008                     __pintcode:
  9991                           	opt stack 0
  9992  000008                     _ISR:
  9993                           	opt stack 20
  9994                           
  9995                           ;incstack = 0
  9996  000008  CFFA F011          	movff	pclath,??_ISR
  9997  00000C  CFFB F012          	movff	pclatu,??_ISR+1
  9998  000010  CFE9 F013          	movff	fsr0l,??_ISR+2
  9999  000014  CFEA F014          	movff	fsr0h,??_ISR+3
 10000  000018  CFE1 F015          	movff	fsr1l,??_ISR+4
 10001  00001C  CFE2 F016          	movff	fsr1h,??_ISR+5
 10002  000020  CFD9 F017          	movff	fsr2l,??_ISR+6
 10003  000024  CFDA F018          	movff	fsr2h,??_ISR+7
 10004  000028  CFF3 F019          	movff	prodl,??_ISR+8
 10005  00002C  CFF4 F01A          	movff	prodh,??_ISR+9
 10006  000030  CFF6 F01B          	movff	tblptrl,??_ISR+10
 10007  000034  CFF7 F01C          	movff	tblptrh,??_ISR+11
 10008  000038  CFF8 F01D          	movff	tblptru,??_ISR+12
 10009  00003C  CFF5 F01E          	movff	tablat,??_ISR+13
 10010                           
 10011                           ;PIC18F27J53-RTCC01.c: 88: interrupt_TXIF();
 10012  000040  ECD9  F01B         	call	_interrupt_TXIF	;wreg free
 10013                           
 10014                           ;PIC18F27J53-RTCC01.c: 89: if (PIR1bits.RC1IF) {
 10015  000044  AA9E               	btfss	3998,5,c	;volatile
 10016  000046  D006               	goto	i2l5055
 10017                           
 10018                           ;PIC18F27J53-RTCC01.c: 90: PIR1bits.RC1IF = 0;
 10019  000048  9A9E               	bcf	3998,5,c	;volatile
 10020                           
 10021                           ;PIC18F27J53-RTCC01.c: 91: uint8_t ascii = RCREG1;
 10022  00004A  CFAF F01F          	movff	4015,ISR@ascii	;volatile
 10023                           
 10024                           ;PIC18F27J53-RTCC01.c: 92: judgement(ascii);
 10025  00004E  501F               	movf	ISR@ascii,w,c
 10026  000050  EC5B  F00F         	call	_judgement
 10027  000054                     i2l5055:
 10028                           
 10029                           ;PIC18F27J53-RTCC01.c: 93: }
 10030                           ;PIC18F27J53-RTCC01.c: 94: if (INTCONbits.T0IF) {
 10031  000054  B4F2               	btfsc	intcon,2,c	;volatile
 10032                           
 10033                           ;PIC18F27J53-RTCC01.c: 95: INTCONbits.T0IF = 0;
 10034  000056  94F2               	bcf	intcon,2,c	;volatile
 10035                           
 10036                           ;PIC18F27J53-RTCC01.c: 96: }
 10037                           ;PIC18F27J53-RTCC01.c: 97: if (PIR1bits.TMR1IF) {
 10038  000058  A09E               	btfss	3998,0,c	;volatile
 10039  00005A  D003               	goto	i2l5063
 10040                           
 10041                           ;PIC18F27J53-RTCC01.c: 98: PIR1bits.TMR1IF = 0;
 10042  00005C  909E               	bcf	3998,0,c	;volatile
 10043                           
 10044                           ;PIC18F27J53-RTCC01.c: 99: TMR1H = 0x80;
 10045  00005E  0E80               	movlw	128
 10046  000060  6ECF               	movwf	4047,c	;volatile
 10047  000062                     i2l5063:
 10048                           
 10049                           ;PIC18F27J53-RTCC01.c: 100: }
 10050                           ;PIC18F27J53-RTCC01.c: 101: if (PIR2bits.TMR3IF) {
 10051  000062  A2A1               	btfss	4001,1,c	;volatile
 10052  000064  D013               	goto	i2l548
 10053                           
 10054                           ;PIC18F27J53-RTCC01.c: 102: PIR2bits.TMR3IF = 0;
 10055  000066  92A1               	bcf	4001,1,c	;volatile
 10056                           
 10057                           ;PIC18F27J53-RTCC01.c: 103: button_timer_interrupt(&sw, !PORTAbits.RA6);
 10058  000068  0E00               	movlw	high _sw
 10059  00006A  6E02               	movwf	button_timer_interrupt@bt+1,c
 10060  00006C  0E30               	movlw	low _sw
 10061  00006E  6E01               	movwf	button_timer_interrupt@bt,c
 10062  000070  BC80               	btfsc	3968,6,c	;volatile
 10063  000072  D002               	goto	i2u496_40
 10064  000074  0E01               	movlw	1
 10065  000076  D001               	goto	i2u496_46
 10066  000078                     i2u496_40:
 10067  000078  0E00               	movlw	0
 10068  00007A                     i2u496_46:
 10069  00007A  6E03               	movwf	button_timer_interrupt@sw_value,c
 10070  00007C  ECC4  F00C         	call	_button_timer_interrupt	;wreg free
 10071                           
 10072                           ;PIC18F27J53-RTCC01.c: 104: delay_timer_interrupt(&d1);
 10073  000080  0E00               	movlw	high _d1
 10074  000082  6E02               	movwf	delay_timer_interrupt@d+1,c
 10075  000084  0E34               	movlw	low _d1
 10076  000086  6E01               	movwf	delay_timer_interrupt@d,c
 10077  000088  EC30  F01B         	call	_delay_timer_interrupt	;wreg free
 10078  00008C                     i2l548:
 10079  00008C  C01E  FFF5         	movff	??_ISR+13,tablat
 10080  000090  C01D  FFF8         	movff	??_ISR+12,tblptru
 10081  000094  C01C  FFF7         	movff	??_ISR+11,tblptrh
 10082  000098  C01B  FFF6         	movff	??_ISR+10,tblptrl
 10083  00009C  C01A  FFF4         	movff	??_ISR+9,prodh
 10084  0000A0  C019  FFF3         	movff	??_ISR+8,prodl
 10085  0000A4  C018  FFDA         	movff	??_ISR+7,fsr2h
 10086  0000A8  C017  FFD9         	movff	??_ISR+6,fsr2l
 10087  0000AC  C016  FFE2         	movff	??_ISR+5,fsr1h
 10088  0000B0  C015  FFE1         	movff	??_ISR+4,fsr1l
 10089  0000B4  C014  FFEA         	movff	??_ISR+3,fsr0h
 10090  0000B8  C013  FFE9         	movff	??_ISR+2,fsr0l
 10091  0000BC  C012  FFFB         	movff	??_ISR+1,pclatu
 10092  0000C0  C011  FFFA         	movff	??_ISR,pclath
 10093  0000C4  0011               	retfie		f
 10094  0000C6                     __end_of_ISR:
 10095                           	opt stack 0
 10096                           pclatu	equ	0xFFB
 10097                           pclath	equ	0xFFA
 10098                           tblptru	equ	0xFF8
 10099                           tblptrh	equ	0xFF7
 10100                           tblptrl	equ	0xFF6
 10101                           tablat	equ	0xFF5
 10102                           prodh	equ	0xFF4
 10103                           prodl	equ	0xFF3
 10104                           intcon	equ	0xFF2
 10105                           intcon2	equ	0xFF1
 10106                           postinc0	equ	0xFEE
 10107                           fsr0h	equ	0xFEA
 10108                           fsr0l	equ	0xFE9
 10109                           wreg	equ	0xFE8
 10110                           indf1	equ	0xFE7
 10111                           postdec1	equ	0xFE5
 10112                           fsr1h	equ	0xFE2
 10113                           fsr1l	equ	0xFE1
 10114                           indf2	equ	0xFDF
 10115                           postinc2	equ	0xFDE
 10116                           postdec2	equ	0xFDD
 10117                           fsr2h	equ	0xFDA
 10118                           fsr2l	equ	0xFD9
 10119                           status	equ	0xFD8
 10120                           
 10121 ;; *************** function _judgement *****************
 10122 ;; Defined at:
 10123 ;;		line 47 in file "PIC18F27J53-RTCC01.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  ascii           1    wreg     unsigned char 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  ascii           1   14[COMRAM] unsigned char 
 10128 ;;  i               1   15[COMRAM] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;		None               void
 10131 ;; Registers used:
 10132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10142 ;;Total ram usage:        2 bytes
 10143 ;; Hardware stack levels used:    1
 10144 ;; Hardware stack levels required when called:    3
 10145 ;; This function calls:
 10146 ;;		_ringbuf_backspace
 10147 ;;		_ringbuf_delete
 10148 ;;		i2_ringbuf_num
 10149 ;;		i2_ringbuf_push
 10150 ;;		i2_tx_send
 10151 ;;		i2_tx_sends
 10152 ;; This function is called by:
 10153 ;;		_ISR
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           	psect	text56
 10158  001EB6                     __ptext56:
 10159                           	opt stack 0
 10160  001EB6                     _judgement:
 10161                           	opt stack 20
 10162                           
 10163                           ;incstack = 0
 10164                           ;judgement@ascii stored from wreg
 10165  001EB6  6E0F               	movwf	judgement@ascii,c
 10166                           
 10167                           ;PIC18F27J53-RTCC01.c: 48: uint8_t i;
 10168                           ;PIC18F27J53-RTCC01.c: 49: tx_sends(cursor_down);
 10169  001EB8  0E00               	movlw	high _cursor_down
 10170  001EBA  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10171  001EBC  0E39               	movlw	low _cursor_down
 10172  001EBE  6E0D               	movwf	i2tx_sends@asciicode,c
 10173  001EC0  EC99  F019         	call	i2_tx_sends	;wreg free
 10174                           
 10175                           ;PIC18F27J53-RTCC01.c: 50: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_sends(cursor_ri
      +                          ght);
 10176  001EC4  0E00               	movlw	0
 10177  001EC6  6E10               	movwf	judgement@i,c
 10178  001EC8  D009               	goto	i2l4715
 10179  001ECA                     i2l4711:
 10180  001ECA  0100               	movlb	0	; () banked
 10181  001ECC  0E00               	movlw	high _cursor_right
 10182  001ECE  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10183  001ED0  0100               	movlb	0	; () banked
 10184  001ED2  0ECC               	movlw	low _cursor_right
 10185  001ED4  6E0D               	movwf	i2tx_sends@asciicode,c
 10186  001ED6  EC99  F019         	call	i2_tx_sends	;wreg free
 10187  001EDA  2A10               	incf	judgement@i,f,c
 10188  001EDC                     i2l4715:
 10189  001EDC  0E00               	movlw	high _rx_buf
 10190  001EDE  6E02               	movwf	i2ringbuf_num@rb+1,c
 10191  001EE0  0E26               	movlw	low _rx_buf
 10192  001EE2  6E01               	movwf	i2ringbuf_num@rb,c
 10193  001EE4  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10194  001EE8  5C10               	subwf	judgement@i,w,c
 10195  001EEA  B0D8               	btfsc	status,0,c
 10196  001EEC  D061               	goto	i2l4751
 10197  001EEE  D7ED               	goto	i2l4711
 10198  001EF0                     i2l4717:
 10199                           
 10200                           ;PIC18F27J53-RTCC01.c: 54: rx_flag = 1;
 10201  001EF0  0E01               	movlw	1
 10202  001EF2  6E25               	movwf	_rx_flag,c
 10203                           
 10204                           ;PIC18F27J53-RTCC01.c: 55: ringbuf_push(&rx_buf, '\0');
 10205  001EF4  0E00               	movlw	high _rx_buf
 10206  001EF6  6E06               	movwf	i2ringbuf_push@rb+1,c
 10207  001EF8  0E26               	movlw	low _rx_buf
 10208  001EFA  6E05               	movwf	i2ringbuf_push@rb,c
 10209  001EFC  0E00               	movlw	0
 10210  001EFE  6E07               	movwf	i2ringbuf_push@asciicode,c
 10211  001F00  ECD8  F015         	call	i2_ringbuf_push	;wreg free
 10212                           
 10213                           ;PIC18F27J53-RTCC01.c: 56: tx_send(' ');
 10214  001F04  0E20               	movlw	32
 10215  001F06  ECFF  F01C         	call	i2_tx_send
 10216                           
 10217                           ;PIC18F27J53-RTCC01.c: 57: break;
 10218  001F0A  D060               	goto	i2l4753
 10219  001F0C                     i2l4723:
 10220                           
 10221                           ;PIC18F27J53-RTCC01.c: 59: ringbuf_push(&rx_buf, '\0');
 10222  001F0C  0E00               	movlw	high _rx_buf
 10223  001F0E  6E06               	movwf	i2ringbuf_push@rb+1,c
 10224  001F10  0E26               	movlw	low _rx_buf
 10225  001F12  6E05               	movwf	i2ringbuf_push@rb,c
 10226  001F14  0E00               	movlw	0
 10227  001F16  6E07               	movwf	i2ringbuf_push@asciicode,c
 10228  001F18  ECD8  F015         	call	i2_ringbuf_push	;wreg free
 10229                           
 10230                           ;PIC18F27J53-RTCC01.c: 60: tx_send(' ');
 10231  001F1C  0E20               	movlw	32
 10232  001F1E  ECFF  F01C         	call	i2_tx_send
 10233                           
 10234                           ;PIC18F27J53-RTCC01.c: 61: tx_sends("_\b");
 10235  001F22  0E0F               	movlw	high STR_16
 10236  001F24  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10237  001F26  0E72               	movlw	low STR_16
 10238  001F28  6E0D               	movwf	i2tx_sends@asciicode,c
 10239  001F2A  EC99  F019         	call	i2_tx_sends	;wreg free
 10240                           
 10241                           ;PIC18F27J53-RTCC01.c: 62: break;
 10242  001F2E  D04E               	goto	i2l4753
 10243  001F30                     i2l4727:
 10244                           
 10245                           ;PIC18F27J53-RTCC01.c: 64: ringbuf_backspace(&rx_buf);
 10246  001F30  0E00               	movlw	high _rx_buf
 10247  001F32  6E06               	movwf	ringbuf_backspace@rb+1,c
 10248  001F34  0E26               	movlw	low _rx_buf
 10249  001F36  6E05               	movwf	ringbuf_backspace@rb,c
 10250  001F38  ECB1  F01A         	call	_ringbuf_backspace	;wreg free
 10251                           
 10252                           ;PIC18F27J53-RTCC01.c: 65: tx_sends("\b_ \b\b");
 10253  001F3C  0E0F               	movlw	high STR_17
 10254  001F3E  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10255  001F40  0E4C               	movlw	low STR_17
 10256  001F42  6E0D               	movwf	i2tx_sends@asciicode,c
 10257  001F44  EC99  F019         	call	i2_tx_sends	;wreg free
 10258                           
 10259                           ;PIC18F27J53-RTCC01.c: 66: break;
 10260  001F48  D041               	goto	i2l4753
 10261  001F4A                     i2l4731:
 10262                           
 10263                           ;PIC18F27J53-RTCC01.c: 68: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_sends("\b_ \b\b
      +                          ");
 10264  001F4A  0E00               	movlw	0
 10265  001F4C  6E10               	movwf	judgement@i,c
 10266  001F4E  D007               	goto	i2l4737
 10267  001F50                     i2l4733:
 10268  001F50  0E0F               	movlw	high STR_17
 10269  001F52  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10270  001F54  0E4C               	movlw	low STR_17
 10271  001F56  6E0D               	movwf	i2tx_sends@asciicode,c
 10272  001F58  EC99  F019         	call	i2_tx_sends	;wreg free
 10273  001F5C  2A10               	incf	judgement@i,f,c
 10274  001F5E                     i2l4737:
 10275  001F5E  0E00               	movlw	high _rx_buf
 10276  001F60  6E02               	movwf	i2ringbuf_num@rb+1,c
 10277  001F62  0E26               	movlw	low _rx_buf
 10278  001F64  6E01               	movwf	i2ringbuf_num@rb,c
 10279  001F66  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10280  001F6A  5C10               	subwf	judgement@i,w,c
 10281  001F6C  A0D8               	btfss	status,0,c
 10282  001F6E  D7F0               	goto	i2l4733
 10283                           
 10284                           ;PIC18F27J53-RTCC01.c: 69: ringbuf_delete(&rx_buf);
 10285  001F70  0E00               	movlw	high _rx_buf
 10286  001F72  6E02               	movwf	ringbuf_delete@rb+1,c
 10287  001F74  0E26               	movlw	low _rx_buf
 10288  001F76  6E01               	movwf	ringbuf_delete@rb,c
 10289  001F78  ECA9  F01C         	call	_ringbuf_delete	;wreg free
 10290                           
 10291                           ;PIC18F27J53-RTCC01.c: 70: break;
 10292  001F7C  D027               	goto	i2l4753
 10293  001F7E                     i2l4741:
 10294                           
 10295                           ;PIC18F27J53-RTCC01.c: 72: if (ascii >= ' ' && ascii <= '~') {
 10296  001F7E  0E1F               	movlw	31
 10297  001F80  640F               	cpfsgt	judgement@ascii,c
 10298  001F82  D024               	goto	i2l4753
 10299  001F84  0E7F               	movlw	127
 10300  001F86  5C0F               	subwf	judgement@ascii,w,c
 10301  001F88  B0D8               	btfsc	status,0,c
 10302  001F8A  D020               	goto	i2l4753
 10303                           
 10304                           ;PIC18F27J53-RTCC01.c: 73: ringbuf_push(&rx_buf, ascii);
 10305  001F8C  0E00               	movlw	high _rx_buf
 10306  001F8E  6E06               	movwf	i2ringbuf_push@rb+1,c
 10307  001F90  0E26               	movlw	low _rx_buf
 10308  001F92  6E05               	movwf	i2ringbuf_push@rb,c
 10309  001F94  C00F  F007         	movff	judgement@ascii,i2ringbuf_push@asciicode
 10310  001F98  ECD8  F015         	call	i2_ringbuf_push	;wreg free
 10311                           
 10312                           ;PIC18F27J53-RTCC01.c: 74: tx_send(ascii);
 10313  001F9C  500F               	movf	judgement@ascii,w,c
 10314  001F9E  ECFF  F01C         	call	i2_tx_send
 10315                           
 10316                           ;PIC18F27J53-RTCC01.c: 75: tx_sends("_\b");
 10317  001FA2  0E0F               	movlw	high STR_16
 10318  001FA4  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10319  001FA6  0E72               	movlw	low STR_16
 10320  001FA8  6E0D               	movwf	i2tx_sends@asciicode,c
 10321  001FAA  EC99  F019         	call	i2_tx_sends	;wreg free
 10322  001FAE  D00E               	goto	i2l4753
 10323  001FB0                     i2l4751:
 10324  001FB0  500F               	movf	judgement@ascii,w,c
 10325                           
 10326                           ; Switch size 1, requested type "space"
 10327                           ; Number of cases is 4, Range of values is 8 to 127
 10328                           ; switch strategies available:
 10329                           ; Name         Instructions Cycles
 10330                           ; simple_byte           13     7 (average)
 10331                           ;	Chosen strategy is simple_byte
 10332  001FB2  0A08               	xorlw	8	; case 8
 10333  001FB4  B4D8               	btfsc	status,2,c
 10334  001FB6  D7BC               	goto	i2l4727
 10335  001FB8  0A05               	xorlw	5	; case 13
 10336  001FBA  B4D8               	btfsc	status,2,c
 10337  001FBC  D799               	goto	i2l4717
 10338  001FBE  0A2D               	xorlw	45	; case 32
 10339  001FC0  B4D8               	btfsc	status,2,c
 10340  001FC2  D7A4               	goto	i2l4723
 10341  001FC4  0A5F               	xorlw	95	; case 127
 10342  001FC6  B4D8               	btfsc	status,2,c
 10343  001FC8  D7C0               	goto	i2l4731
 10344  001FCA  D7D9               	goto	i2l4741
 10345  001FCC                     i2l4753:
 10346                           
 10347                           ;PIC18F27J53-RTCC01.c: 79: if (rx_flag) {
 10348  001FCC  5025               	movf	_rx_flag,w,c
 10349  001FCE  B4D8               	btfsc	status,2,c
 10350  001FD0  D020               	goto	i2l4771
 10351                           
 10352                           ;PIC18F27J53-RTCC01.c: 80: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send('\b');
 10353  001FD2  0E00               	movlw	0
 10354  001FD4  6E10               	movwf	judgement@i,c
 10355  001FD6  D004               	goto	i2l4761
 10356  001FD8                     i2l4757:
 10357  001FD8  0E08               	movlw	8
 10358  001FDA  ECFF  F01C         	call	i2_tx_send
 10359  001FDE  2A10               	incf	judgement@i,f,c
 10360  001FE0                     i2l4761:
 10361  001FE0  0E00               	movlw	high _rx_buf
 10362  001FE2  6E02               	movwf	i2ringbuf_num@rb+1,c
 10363  001FE4  0E26               	movlw	low _rx_buf
 10364  001FE6  6E01               	movwf	i2ringbuf_num@rb,c
 10365  001FE8  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10366  001FEC  5C10               	subwf	judgement@i,w,c
 10367  001FEE  A0D8               	btfss	status,0,c
 10368  001FF0  D7F3               	goto	i2l4757
 10369                           
 10370                           ;PIC18F27J53-RTCC01.c: 81: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send(' ');
 10371  001FF2  0E00               	movlw	0
 10372  001FF4  6E10               	movwf	judgement@i,c
 10373  001FF6  D004               	goto	i2l4769
 10374  001FF8                     i2l4765:
 10375  001FF8  0E20               	movlw	32
 10376  001FFA  ECFF  F01C         	call	i2_tx_send
 10377  001FFE  2A10               	incf	judgement@i,f,c
 10378  002000                     i2l4769:
 10379  002000  0E00               	movlw	high _rx_buf
 10380  002002  6E02               	movwf	i2ringbuf_num@rb+1,c
 10381  002004  0E26               	movlw	low _rx_buf
 10382  002006  6E01               	movwf	i2ringbuf_num@rb,c
 10383  002008  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10384  00200C  5C10               	subwf	judgement@i,w,c
 10385  00200E  A0D8               	btfss	status,0,c
 10386  002010  D7F3               	goto	i2l4765
 10387  002012                     i2l4771:
 10388                           
 10389                           ;PIC18F27J53-RTCC01.c: 82: }
 10390                           ;PIC18F27J53-RTCC01.c: 83: for (i = 0; i < ringbuf_num(&rx_buf); i++) tx_send('\b');
 10391  002012  0E00               	movlw	0
 10392  002014  6E10               	movwf	judgement@i,c
 10393  002016  D004               	goto	i2l4777
 10394  002018                     i2l4773:
 10395  002018  0E08               	movlw	8
 10396  00201A  ECFF  F01C         	call	i2_tx_send
 10397  00201E  2A10               	incf	judgement@i,f,c
 10398  002020                     i2l4777:
 10399  002020  0E00               	movlw	high _rx_buf
 10400  002022  6E02               	movwf	i2ringbuf_num@rb+1,c
 10401  002024  0E26               	movlw	low _rx_buf
 10402  002026  6E01               	movwf	i2ringbuf_num@rb,c
 10403  002028  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10404  00202C  5C10               	subwf	judgement@i,w,c
 10405  00202E  A0D8               	btfss	status,0,c
 10406  002030  D7F3               	goto	i2l4773
 10407                           
 10408                           ;PIC18F27J53-RTCC01.c: 84: tx_sends(cursor_up);
 10409  002032  0E00               	movlw	high _cursor_up
 10410  002034  6E0E               	movwf	i2tx_sends@asciicode+1,c
 10411  002036  0E3D               	movlw	low _cursor_up
 10412  002038  6E0D               	movwf	i2tx_sends@asciicode,c
 10413  00203A  EC99  F019         	call	i2_tx_sends	;wreg free
 10414  00203E  0012               	return	
 10415  002040                     __end_of_judgement:
 10416                           	opt stack 0
 10417                           pclatu	equ	0xFFB
 10418                           pclath	equ	0xFFA
 10419                           tblptru	equ	0xFF8
 10420                           tblptrh	equ	0xFF7
 10421                           tblptrl	equ	0xFF6
 10422                           tablat	equ	0xFF5
 10423                           prodh	equ	0xFF4
 10424                           prodl	equ	0xFF3
 10425                           intcon	equ	0xFF2
 10426                           intcon2	equ	0xFF1
 10427                           postinc0	equ	0xFEE
 10428                           fsr0h	equ	0xFEA
 10429                           fsr0l	equ	0xFE9
 10430                           wreg	equ	0xFE8
 10431                           indf1	equ	0xFE7
 10432                           postdec1	equ	0xFE5
 10433                           fsr1h	equ	0xFE2
 10434                           fsr1l	equ	0xFE1
 10435                           indf2	equ	0xFDF
 10436                           postinc2	equ	0xFDE
 10437                           postdec2	equ	0xFDD
 10438                           fsr2h	equ	0xFDA
 10439                           fsr2l	equ	0xFD9
 10440                           status	equ	0xFD8
 10441                           
 10442 ;; *************** function i2_tx_sends *****************
 10443 ;; Defined at:
 10444 ;;		line 239 in file "../My_header\My_header.h"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  asciicode       2   12[COMRAM] PTR const unsigned char 
 10447 ;;		 -> STR_36(4), STR_26(2), STR_25(2), STR_24(3), 
 10448 ;;		 -> STR_23(3), STR_22(2), STR_21(2), STR_20(3), 
 10449 ;;		 -> tx_send_dec@str(10), cursor_up(4), STR_19(3), STR_18(6), 
 10450 ;;		 -> STR_17(6), STR_16(3), cursor_right(4), cursor_down(4), 
 10451 ;;		 -> STR_7(4), STR_6(4), STR_5(4), STR_4(4), 
 10452 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;		None               void
 10457 ;; Registers used:
 10458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10468 ;;Total ram usage:        2 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    2
 10471 ;; This function calls:
 10472 ;;		i2_ringbuf_push
 10473 ;; This function is called by:
 10474 ;;		_judgement
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           	psect	text57
 10479  003332                     __ptext57:
 10480                           	opt stack 0
 10481  003332                     i2_tx_sends:
 10482                           	opt stack 20
 10483                           
 10484                           ;My_header\My_header.h: 240: while (*asciicode) {
 10485                           
 10486                           ;incstack = 0
 10487  003332  D01A               	goto	i2l4561
 10488  003334                     i2l4557:
 10489                           
 10490                           ;My_header\My_header.h: 241: ringbuf_push(&tx_buf, *asciicode++);
 10491  003334  0E00               	movlw	high _tx_buf
 10492  003336  6E06               	movwf	i2ringbuf_push@rb+1,c
 10493  003338  0E2B               	movlw	low _tx_buf
 10494  00333A  6E05               	movwf	i2ringbuf_push@rb,c
 10495  00333C  C00D  FFF6         	movff	i2tx_sends@asciicode,tblptrl
 10496  003340  C00E  FFF7         	movff	i2tx_sends@asciicode+1,tblptrh
 10497  003344  0E00               	movlw	low (__smallconst shr (0+16))
 10498  003346  6EF8               	movwf	tblptru,c
 10499  003348  0E0E               	movlw	(high __ramtop+-1)
 10500  00334A  64F7               	cpfsgt	tblptrh,c
 10501  00334C  D003               	bra	i2u427_47
 10502  00334E  0008               	tblrd		*
 10503  003350  50F5               	movf	tablat,w,c
 10504  003352  D005               	bra	i2u427_40
 10505  003354                     i2u427_47:
 10506  003354  CFF6 FFE1          	movff	tblptrl,fsr1l
 10507  003358  CFF7 FFE2          	movff	tblptrh,fsr1h
 10508  00335C  50E7               	movf	indf1,w,c
 10509  00335E                     i2u427_40:
 10510  00335E  6E07               	movwf	i2ringbuf_push@asciicode,c
 10511  003360  ECD8  F015         	call	i2_ringbuf_push	;wreg free
 10512  003364  4A0D               	infsnz	i2tx_sends@asciicode,f,c
 10513  003366  2A0E               	incf	i2tx_sends@asciicode+1,f,c
 10514  003368                     i2l4561:
 10515  003368  C00D  FFF6         	movff	i2tx_sends@asciicode,tblptrl
 10516  00336C  C00E  FFF7         	movff	i2tx_sends@asciicode+1,tblptrh
 10517  003370  0E00               	movlw	low (__smallconst shr (0+16))
 10518  003372  6EF8               	movwf	tblptru,c
 10519  003374  0E0E               	movlw	(high __ramtop+-1)
 10520  003376  64F7               	cpfsgt	tblptrh,c
 10521  003378  D003               	bra	i2u428_47
 10522  00337A  0008               	tblrd		*
 10523  00337C  50F5               	movf	tablat,w,c
 10524  00337E  D005               	bra	i2u428_40
 10525  003380                     i2u428_47:
 10526  003380  CFF6 FFE1          	movff	tblptrl,fsr1l
 10527  003384  CFF7 FFE2          	movff	tblptrh,fsr1h
 10528  003388  50E7               	movf	indf1,w,c
 10529  00338A                     i2u428_40:
 10530  00338A  0900               	iorlw	0
 10531  00338C  A4D8               	btfss	status,2,c
 10532  00338E  D7D2               	goto	i2l4557
 10533                           
 10534                           ;My_header\My_header.h: 242: }
 10535                           ;My_header\My_header.h: 243: PIE1bits.TX1IE = 1;
 10536  003390  889D               	bsf	3997,4,c	;volatile
 10537  003392  0012               	return	
 10538  003394                     __end_ofi2_tx_sends:
 10539                           	opt stack 0
 10540                           pclatu	equ	0xFFB
 10541                           pclath	equ	0xFFA
 10542                           tblptru	equ	0xFF8
 10543                           tblptrh	equ	0xFF7
 10544                           tblptrl	equ	0xFF6
 10545                           tablat	equ	0xFF5
 10546                           prodh	equ	0xFF4
 10547                           prodl	equ	0xFF3
 10548                           intcon	equ	0xFF2
 10549                           intcon2	equ	0xFF1
 10550                           postinc0	equ	0xFEE
 10551                           fsr0h	equ	0xFEA
 10552                           fsr0l	equ	0xFE9
 10553                           wreg	equ	0xFE8
 10554                           indf1	equ	0xFE7
 10555                           postdec1	equ	0xFE5
 10556                           fsr1h	equ	0xFE2
 10557                           fsr1l	equ	0xFE1
 10558                           indf2	equ	0xFDF
 10559                           postinc2	equ	0xFDE
 10560                           postdec2	equ	0xFDD
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8
 10564                           
 10565 ;; *************** function i2_tx_send *****************
 10566 ;; Defined at:
 10567 ;;		line 234 in file "../My_header\My_header.h"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  asciicode       1    wreg     const unsigned char 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  asciicode       1   12[COMRAM] const unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;		None               void
 10574 ;; Registers used:
 10575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10585 ;;Total ram usage:        1 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    2
 10588 ;; This function calls:
 10589 ;;		i2_ringbuf_push
 10590 ;; This function is called by:
 10591 ;;		_judgement
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text58
 10596  0039FE                     __ptext58:
 10597                           	opt stack 0
 10598  0039FE                     i2_tx_send:
 10599                           	opt stack 20
 10600                           
 10601                           ;incstack = 0
 10602                           ;i2tx_send@asciicode stored from wreg
 10603  0039FE  6E0D               	movwf	i2tx_send@asciicode,c
 10604                           
 10605                           ;My_header\My_header.h: 235: ringbuf_push(&tx_buf, asciicode);
 10606  003A00  0E00               	movlw	high _tx_buf
 10607  003A02  6E06               	movwf	i2ringbuf_push@rb+1,c
 10608  003A04  0E2B               	movlw	low _tx_buf
 10609  003A06  6E05               	movwf	i2ringbuf_push@rb,c
 10610  003A08  C00D  F007         	movff	i2tx_send@asciicode,i2ringbuf_push@asciicode
 10611  003A0C  ECD8  F015         	call	i2_ringbuf_push	;wreg free
 10612                           
 10613                           ;My_header\My_header.h: 236: PIE1bits.TX1IE = 1;
 10614  003A10  889D               	bsf	3997,4,c	;volatile
 10615  003A12  0012               	return	
 10616  003A14                     __end_ofi2_tx_send:
 10617                           	opt stack 0
 10618                           pclatu	equ	0xFFB
 10619                           pclath	equ	0xFFA
 10620                           tblptru	equ	0xFF8
 10621                           tblptrh	equ	0xFF7
 10622                           tblptrl	equ	0xFF6
 10623                           tablat	equ	0xFF5
 10624                           prodh	equ	0xFF4
 10625                           prodl	equ	0xFF3
 10626                           intcon	equ	0xFF2
 10627                           intcon2	equ	0xFF1
 10628                           postinc0	equ	0xFEE
 10629                           fsr0h	equ	0xFEA
 10630                           fsr0l	equ	0xFE9
 10631                           wreg	equ	0xFE8
 10632                           indf1	equ	0xFE7
 10633                           postdec1	equ	0xFE5
 10634                           fsr1h	equ	0xFE2
 10635                           fsr1l	equ	0xFE1
 10636                           indf2	equ	0xFDF
 10637                           postinc2	equ	0xFDE
 10638                           postdec2	equ	0xFDD
 10639                           fsr2h	equ	0xFDA
 10640                           fsr2l	equ	0xFD9
 10641                           status	equ	0xFD8
 10642                           
 10643 ;; *************** function i2_ringbuf_push *****************
 10644 ;; Defined at:
 10645 ;;		line 37 in file "../My_header\My_ringbuf.h"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 10648 ;;		 -> rx_buf(5), tx_buf(5), 
 10649 ;;  asciicode       1    6[COMRAM] unsigned char 
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;		None
 10652 ;; Return value:  Size  Location     Type
 10653 ;;		None               void
 10654 ;; Registers used:
 10655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10661 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10663 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10664 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10665 ;;Total ram usage:        8 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:    1
 10668 ;; This function calls:
 10669 ;;		i2_ringbuf_num
 10670 ;; This function is called by:
 10671 ;;		_judgement
 10672 ;;		i2_tx_send
 10673 ;;		i2_tx_sends
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           	psect	text59
 10678  002BB0                     __ptext59:
 10679                           	opt stack 0
 10680  002BB0                     i2_ringbuf_push:
 10681                           	opt stack 20
 10682                           
 10683                           ;My_header\My_ringbuf.h: 38: if (ringbuf_num(rb) < rb->size) {
 10684                           
 10685                           ;incstack = 0
 10686  002BB0  C006  F002         	movff	i2ringbuf_push@rb+1,i2ringbuf_num@rb+1
 10687  002BB4  C005  F001         	movff	i2ringbuf_push@rb,i2ringbuf_num@rb
 10688  002BB8  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10689  002BBC  6E08               	movwf	??i2_ringbuf_push& (0+255),c
 10690  002BBE  EE20 F002          	lfsr	2,2
 10691  002BC2  5005               	movf	i2ringbuf_push@rb,w,c
 10692  002BC4  26D9               	addwf	fsr2l,f,c
 10693  002BC6  5006               	movf	i2ringbuf_push@rb+1,w,c
 10694  002BC8  22DA               	addwfc	fsr2h,f,c
 10695  002BCA  50DF               	movf	indf2,w,c
 10696  002BCC  5C08               	subwf	??i2_ringbuf_push,w,c
 10697  002BCE  B0D8               	btfsc	status,0,c
 10698  002BD0  0012               	return	
 10699                           
 10700                           ;My_header\My_ringbuf.h: 39: rb->buf[rb->head] = asciicode;
 10701  002BD2  EE20 F003          	lfsr	2,3
 10702  002BD6  5005               	movf	i2ringbuf_push@rb,w,c
 10703  002BD8  26D9               	addwf	fsr2l,f,c
 10704  002BDA  5006               	movf	i2ringbuf_push@rb+1,w,c
 10705  002BDC  22DA               	addwfc	fsr2h,f,c
 10706  002BDE  50DF               	movf	indf2,w,c
 10707  002BE0  6E08               	movwf	??i2_ringbuf_push& (0+255),c
 10708  002BE2  5008               	movf	??i2_ringbuf_push,w,c
 10709  002BE4  0D01               	mullw	1
 10710  002BE6  C005  FFD9         	movff	i2ringbuf_push@rb,fsr2l
 10711  002BEA  C006  FFDA         	movff	i2ringbuf_push@rb+1,fsr2h
 10712  002BEE  CFDE F009          	movff	postinc2,??i2_ringbuf_push+1
 10713  002BF2  CFDD F00A          	movff	postdec2,??i2_ringbuf_push+2
 10714  002BF6  50F3               	movf	prodl,w,c
 10715  002BF8  2409               	addwf	??i2_ringbuf_push+1,w,c
 10716  002BFA  6ED9               	movwf	fsr2l,c
 10717  002BFC  50F4               	movf	prodh,w,c
 10718  002BFE  200A               	addwfc	??i2_ringbuf_push+2,w,c
 10719  002C00  6EDA               	movwf	fsr2h,c
 10720  002C02  C007  FFDF         	movff	i2ringbuf_push@asciicode,indf2
 10721                           
 10722                           ;My_header\My_ringbuf.h: 40: if (rb->head + 1 < rb->size) rb->head++;
 10723  002C06  EE20 F002          	lfsr	2,2
 10724  002C0A  5005               	movf	i2ringbuf_push@rb,w,c
 10725  002C0C  26D9               	addwf	fsr2l,f,c
 10726  002C0E  5006               	movf	i2ringbuf_push@rb+1,w,c
 10727  002C10  22DA               	addwfc	fsr2h,f,c
 10728  002C12  50DF               	movf	indf2,w,c
 10729  002C14  6E08               	movwf	??i2_ringbuf_push& (0+255),c
 10730  002C16  6A09               	clrf	(??i2_ringbuf_push+1)& (0+255),c
 10731  002C18  EE20 F003          	lfsr	2,3
 10732  002C1C  5005               	movf	i2ringbuf_push@rb,w,c
 10733  002C1E  26D9               	addwf	fsr2l,f,c
 10734  002C20  5006               	movf	i2ringbuf_push@rb+1,w,c
 10735  002C22  22DA               	addwfc	fsr2h,f,c
 10736  002C24  50DF               	movf	indf2,w,c
 10737  002C26  6E0A               	movwf	(??i2_ringbuf_push+2)& (0+255),c
 10738  002C28  6A0B               	clrf	(??i2_ringbuf_push+3)& (0+255),c
 10739  002C2A  0E01               	movlw	1
 10740  002C2C  260A               	addwf	??i2_ringbuf_push+2,f,c
 10741  002C2E  0E00               	movlw	0
 10742  002C30  220B               	addwfc	??i2_ringbuf_push+3,f,c
 10743  002C32  500B               	movf	??i2_ringbuf_push+3,w,c
 10744  002C34  0A80               	xorlw	128
 10745  002C36  6E0C               	movwf	(??i2_ringbuf_push+4)& (0+255),c
 10746  002C38  5008               	movf	??i2_ringbuf_push,w,c
 10747  002C3A  5C0A               	subwf	??i2_ringbuf_push+2,w,c
 10748  002C3C  5009               	movf	??i2_ringbuf_push+1,w,c
 10749  002C3E  0A80               	xorlw	128
 10750  002C40  580C               	subwfb	(??i2_ringbuf_push+4)& (0+255),w,c
 10751  002C42  B0D8               	btfsc	status,0,c
 10752  002C44  D008               	goto	i2l4389
 10753  002C46  EE20 F003          	lfsr	2,3
 10754  002C4A  5005               	movf	i2ringbuf_push@rb,w,c
 10755  002C4C  26D9               	addwf	fsr2l,f,c
 10756  002C4E  5006               	movf	i2ringbuf_push@rb+1,w,c
 10757  002C50  22DA               	addwfc	fsr2h,f,c
 10758  002C52  2ADF               	incf	indf2,f,c
 10759  002C54  0012               	return	
 10760  002C56                     i2l4389:
 10761                           
 10762                           ;My_header\My_ringbuf.h: 41: else rb->head = 0;
 10763  002C56  EE20 F003          	lfsr	2,3
 10764  002C5A  5005               	movf	i2ringbuf_push@rb,w,c
 10765  002C5C  26D9               	addwf	fsr2l,f,c
 10766  002C5E  5006               	movf	i2ringbuf_push@rb+1,w,c
 10767  002C60  22DA               	addwfc	fsr2h,f,c
 10768  002C62  0E00               	movlw	0
 10769  002C64  6EDF               	movwf	indf2,c
 10770  002C66  0012               	return	
 10771  002C68                     __end_ofi2_ringbuf_push:
 10772                           	opt stack 0
 10773                           pclatu	equ	0xFFB
 10774                           pclath	equ	0xFFA
 10775                           tblptru	equ	0xFF8
 10776                           tblptrh	equ	0xFF7
 10777                           tblptrl	equ	0xFF6
 10778                           tablat	equ	0xFF5
 10779                           prodh	equ	0xFF4
 10780                           prodl	equ	0xFF3
 10781                           intcon	equ	0xFF2
 10782                           intcon2	equ	0xFF1
 10783                           postinc0	equ	0xFEE
 10784                           fsr0h	equ	0xFEA
 10785                           fsr0l	equ	0xFE9
 10786                           wreg	equ	0xFE8
 10787                           indf1	equ	0xFE7
 10788                           postdec1	equ	0xFE5
 10789                           fsr1h	equ	0xFE2
 10790                           fsr1l	equ	0xFE1
 10791                           indf2	equ	0xFDF
 10792                           postinc2	equ	0xFDE
 10793                           postdec2	equ	0xFDD
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function _ringbuf_delete *****************
 10799 ;; Defined at:
 10800 ;;		line 65 in file "../My_header\My_ringbuf.h"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 10803 ;;		 -> rx_buf(5), 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;		None
 10806 ;; Return value:  Size  Location     Type
 10807 ;;		None               void
 10808 ;; Registers used:
 10809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10819 ;;Total ram usage:        2 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; This function calls:
 10822 ;;		Nothing
 10823 ;; This function is called by:
 10824 ;;		_judgement
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text60
 10829  003952                     __ptext60:
 10830                           	opt stack 0
 10831  003952                     _ringbuf_delete:
 10832                           	opt stack 22
 10833                           
 10834                           ;My_header\My_ringbuf.h: 66: rb->head = rb->tail;
 10835                           
 10836                           ;incstack = 0
 10837  003952  EE20 F004          	lfsr	2,4
 10838  003956  5001               	movf	ringbuf_delete@rb,w,c
 10839  003958  26D9               	addwf	fsr2l,f,c
 10840  00395A  5002               	movf	ringbuf_delete@rb+1,w,c
 10841  00395C  22DA               	addwfc	fsr2h,f,c
 10842  00395E  EE10 F003          	lfsr	1,3
 10843  003962  5001               	movf	ringbuf_delete@rb,w,c
 10844  003964  26E1               	addwf	fsr1l,f,c
 10845  003966  5002               	movf	ringbuf_delete@rb+1,w,c
 10846  003968  22E2               	addwfc	fsr1h,f,c
 10847  00396A  CFDF FFE7          	movff	indf2,indf1
 10848  00396E  0012               	return	
 10849  003970                     __end_of_ringbuf_delete:
 10850                           	opt stack 0
 10851                           pclatu	equ	0xFFB
 10852                           pclath	equ	0xFFA
 10853                           tblptru	equ	0xFF8
 10854                           tblptrh	equ	0xFF7
 10855                           tblptrl	equ	0xFF6
 10856                           tablat	equ	0xFF5
 10857                           prodh	equ	0xFF4
 10858                           prodl	equ	0xFF3
 10859                           intcon	equ	0xFF2
 10860                           intcon2	equ	0xFF1
 10861                           postinc0	equ	0xFEE
 10862                           fsr0h	equ	0xFEA
 10863                           fsr0l	equ	0xFE9
 10864                           wreg	equ	0xFE8
 10865                           indf1	equ	0xFE7
 10866                           postdec1	equ	0xFE5
 10867                           fsr1h	equ	0xFE2
 10868                           fsr1l	equ	0xFE1
 10869                           indf2	equ	0xFDF
 10870                           postinc2	equ	0xFDE
 10871                           postdec2	equ	0xFDD
 10872                           fsr2h	equ	0xFDA
 10873                           fsr2l	equ	0xFD9
 10874                           status	equ	0xFD8
 10875                           
 10876 ;; *************** function _ringbuf_backspace *****************
 10877 ;; Defined at:
 10878 ;;		line 58 in file "../My_header\My_ringbuf.h"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 10881 ;;		 -> rx_buf(5), 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;		None
 10884 ;; Return value:  Size  Location     Type
 10885 ;;		None               void
 10886 ;; Registers used:
 10887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10888 ;; Tracked objects:
 10889 ;;		On entry : 0/0
 10890 ;;		On exit  : 0/0
 10891 ;;		Unchanged: 0/0
 10892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10897 ;;Total ram usage:        3 bytes
 10898 ;; Hardware stack levels used:    1
 10899 ;; Hardware stack levels required when called:    1
 10900 ;; This function calls:
 10901 ;;		i2_ringbuf_num
 10902 ;; This function is called by:
 10903 ;;		_judgement
 10904 ;; This function uses a non-reentrant model
 10905 ;;
 10906                           
 10907                           	psect	text61
 10908  003562                     __ptext61:
 10909                           	opt stack 0
 10910  003562                     _ringbuf_backspace:
 10911                           	opt stack 21
 10912                           
 10913                           ;My_header\My_ringbuf.h: 59: if (ringbuf_num(rb)) {
 10914                           
 10915                           ;incstack = 0
 10916  003562  C006  F002         	movff	ringbuf_backspace@rb+1,i2ringbuf_num@rb+1
 10917  003566  C005  F001         	movff	ringbuf_backspace@rb,i2ringbuf_num@rb
 10918  00356A  EC75  F018         	call	i2_ringbuf_num	;wreg free
 10919  00356E  0900               	iorlw	0
 10920  003570  B4D8               	btfsc	status,2,c
 10921  003572  0012               	return	
 10922                           
 10923                           ;My_header\My_ringbuf.h: 60: if (rb->head) rb->head--;
 10924  003574  EE20 F003          	lfsr	2,3
 10925  003578  5005               	movf	ringbuf_backspace@rb,w,c
 10926  00357A  26D9               	addwf	fsr2l,f,c
 10927  00357C  5006               	movf	ringbuf_backspace@rb+1,w,c
 10928  00357E  22DA               	addwfc	fsr2h,f,c
 10929  003580  50DF               	movf	indf2,w,c
 10930  003582  B4D8               	btfsc	status,2,c
 10931  003584  D008               	goto	i2l4425
 10932  003586  EE20 F003          	lfsr	2,3
 10933  00358A  5005               	movf	ringbuf_backspace@rb,w,c
 10934  00358C  26D9               	addwf	fsr2l,f,c
 10935  00358E  5006               	movf	ringbuf_backspace@rb+1,w,c
 10936  003590  22DA               	addwfc	fsr2h,f,c
 10937  003592  06DF               	decf	indf2,f,c
 10938  003594  0012               	return	
 10939  003596                     i2l4425:
 10940                           
 10941                           ;My_header\My_ringbuf.h: 61: else rb->head = rb->size - 1;
 10942  003596  EE20 F003          	lfsr	2,3
 10943  00359A  5005               	movf	ringbuf_backspace@rb,w,c
 10944  00359C  26D9               	addwf	fsr2l,f,c
 10945  00359E  5006               	movf	ringbuf_backspace@rb+1,w,c
 10946  0035A0  22DA               	addwfc	fsr2h,f,c
 10947  0035A2  EE10 F002          	lfsr	1,2
 10948  0035A6  5005               	movf	ringbuf_backspace@rb,w,c
 10949  0035A8  26E1               	addwf	fsr1l,f,c
 10950  0035AA  5006               	movf	ringbuf_backspace@rb+1,w,c
 10951  0035AC  22E2               	addwfc	fsr1h,f,c
 10952  0035AE  50E7               	movf	indf1,w,c
 10953  0035B0  6E07               	movwf	??_ringbuf_backspace& (0+255),c
 10954  0035B2  0407               	decf	??_ringbuf_backspace,w,c
 10955  0035B4  6EDF               	movwf	indf2,c
 10956  0035B6  0012               	return	
 10957  0035B8                     __end_of_ringbuf_backspace:
 10958                           	opt stack 0
 10959                           pclatu	equ	0xFFB
 10960                           pclath	equ	0xFFA
 10961                           tblptru	equ	0xFF8
 10962                           tblptrh	equ	0xFF7
 10963                           tblptrl	equ	0xFF6
 10964                           tablat	equ	0xFF5
 10965                           prodh	equ	0xFF4
 10966                           prodl	equ	0xFF3
 10967                           intcon	equ	0xFF2
 10968                           intcon2	equ	0xFF1
 10969                           postinc0	equ	0xFEE
 10970                           fsr0h	equ	0xFEA
 10971                           fsr0l	equ	0xFE9
 10972                           wreg	equ	0xFE8
 10973                           indf1	equ	0xFE7
 10974                           postdec1	equ	0xFE5
 10975                           fsr1h	equ	0xFE2
 10976                           fsr1l	equ	0xFE1
 10977                           indf2	equ	0xFDF
 10978                           postinc2	equ	0xFDE
 10979                           postdec2	equ	0xFDD
 10980                           fsr2h	equ	0xFDA
 10981                           fsr2l	equ	0xFD9
 10982                           status	equ	0xFD8
 10983                           
 10984 ;; *************** function _interrupt_TXIF *****************
 10985 ;; Defined at:
 10986 ;;		line 223 in file "../My_header\My_header.h"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;		None               void
 10993 ;; Registers used:
 10994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;Total ram usage:        0 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    2
 11007 ;; This function calls:
 11008 ;;		i2_ringbuf_num
 11009 ;;		i2_ringbuf_pop
 11010 ;; This function is called by:
 11011 ;;		_ISR
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text62
 11016  0037B2                     __ptext62:
 11017                           	opt stack 0
 11018  0037B2                     _interrupt_TXIF:
 11019                           	opt stack 21
 11020                           
 11021                           ;My_header\My_header.h: 224: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
 11022                           
 11023                           ;incstack = 0
 11024  0037B2  A89D               	btfss	3997,4,c	;volatile
 11025  0037B4  0012               	return	
 11026  0037B6  A89E               	btfss	3998,4,c	;volatile
 11027  0037B8  0012               	return	
 11028                           
 11029                           ;My_header\My_header.h: 225: PIR1bits.TX1IF = 0;
 11030  0037BA  989E               	bcf	3998,4,c	;volatile
 11031                           
 11032                           ;My_header\My_header.h: 226: if (ringbuf_num(&tx_buf) > 0) {
 11033  0037BC  0E00               	movlw	high _tx_buf
 11034  0037BE  6E02               	movwf	i2ringbuf_num@rb+1,c
 11035  0037C0  0E2B               	movlw	low _tx_buf
 11036  0037C2  6E01               	movwf	i2ringbuf_num@rb,c
 11037  0037C4  EC75  F018         	call	i2_ringbuf_num	;wreg free
 11038  0037C8  0900               	iorlw	0
 11039  0037CA  B4D8               	btfsc	status,2,c
 11040  0037CC  D008               	goto	i2l192
 11041                           
 11042                           ;My_header\My_header.h: 227: TXREG1 = ringbuf_pop(&tx_buf);
 11043  0037CE  0E00               	movlw	high _tx_buf
 11044  0037D0  6E06               	movwf	i2ringbuf_pop@rb+1,c
 11045  0037D2  0E2B               	movlw	low _tx_buf
 11046  0037D4  6E05               	movwf	i2ringbuf_pop@rb,c
 11047  0037D6  EC64  F017         	call	i2_ringbuf_pop	;wreg free
 11048  0037DA  6EAE               	movwf	4014,c	;volatile
 11049                           
 11050                           ;My_header\My_header.h: 228: } else {
 11051  0037DC  0012               	return	
 11052  0037DE                     i2l192:
 11053                           
 11054                           ;My_header\My_header.h: 229: PIE1bits.TX1IE = 0;
 11055  0037DE  989D               	bcf	3997,4,c	;volatile
 11056  0037E0  0012               	return	
 11057  0037E2                     __end_of_interrupt_TXIF:
 11058                           	opt stack 0
 11059                           pclatu	equ	0xFFB
 11060                           pclath	equ	0xFFA
 11061                           tblptru	equ	0xFF8
 11062                           tblptrh	equ	0xFF7
 11063                           tblptrl	equ	0xFF6
 11064                           tablat	equ	0xFF5
 11065                           prodh	equ	0xFF4
 11066                           prodl	equ	0xFF3
 11067                           intcon	equ	0xFF2
 11068                           intcon2	equ	0xFF1
 11069                           postinc0	equ	0xFEE
 11070                           fsr0h	equ	0xFEA
 11071                           fsr0l	equ	0xFE9
 11072                           wreg	equ	0xFE8
 11073                           indf1	equ	0xFE7
 11074                           postdec1	equ	0xFE5
 11075                           fsr1h	equ	0xFE2
 11076                           fsr1l	equ	0xFE1
 11077                           indf2	equ	0xFDF
 11078                           postinc2	equ	0xFDE
 11079                           postdec2	equ	0xFDD
 11080                           fsr2h	equ	0xFDA
 11081                           fsr2l	equ	0xFD9
 11082                           status	equ	0xFD8
 11083                           
 11084 ;; *************** function i2_ringbuf_pop *****************
 11085 ;; Defined at:
 11086 ;;		line 45 in file "../My_header\My_ringbuf.h"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  rb              2    4[COMRAM] PTR struct ringbuf
 11089 ;;		 -> rx_buf(5), tx_buf(5), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  ringbuf_pop     1    9[COMRAM] unsigned char 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      unsigned char 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11103 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;Total ram usage:        6 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    1
 11108 ;; This function calls:
 11109 ;;		i2_ringbuf_num
 11110 ;; This function is called by:
 11111 ;;		_interrupt_TXIF
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text63
 11116  002EC8                     __ptext63:
 11117                           	opt stack 0
 11118  002EC8                     i2_ringbuf_pop:
 11119                           	opt stack 21
 11120                           
 11121                           ;My_header\My_ringbuf.h: 46: if (ringbuf_num(rb)) {
 11122                           
 11123                           ;incstack = 0
 11124  002EC8  C006  F002         	movff	i2ringbuf_pop@rb+1,i2ringbuf_num@rb+1
 11125  002ECC  C005  F001         	movff	i2ringbuf_pop@rb,i2ringbuf_num@rb
 11126  002ED0  EC75  F018         	call	i2_ringbuf_num	;wreg free
 11127  002ED4  0900               	iorlw	0
 11128  002ED6  B4D8               	btfsc	status,2,c
 11129  002ED8  D03D               	goto	i2l4547
 11130                           
 11131                           ;My_header\My_ringbuf.h: 47: uint8_t ret = rb->buf[rb->tail];
 11132  002EDA  EE20 F004          	lfsr	2,4
 11133  002EDE  5005               	movf	i2ringbuf_pop@rb,w,c
 11134  002EE0  26D9               	addwf	fsr2l,f,c
 11135  002EE2  5006               	movf	i2ringbuf_pop@rb+1,w,c
 11136  002EE4  22DA               	addwfc	fsr2h,f,c
 11137  002EE6  50DF               	movf	indf2,w,c
 11138  002EE8  6E07               	movwf	??i2_ringbuf_pop& (0+255),c
 11139  002EEA  5007               	movf	??i2_ringbuf_pop,w,c
 11140  002EEC  0D01               	mullw	1
 11141  002EEE  C005  FFD9         	movff	i2ringbuf_pop@rb,fsr2l
 11142  002EF2  C006  FFDA         	movff	i2ringbuf_pop@rb+1,fsr2h
 11143  002EF6  CFDE F008          	movff	postinc2,??i2_ringbuf_pop+1
 11144  002EFA  CFDD F009          	movff	postdec2,??i2_ringbuf_pop+2
 11145  002EFE  50F3               	movf	prodl,w,c
 11146  002F00  2408               	addwf	??i2_ringbuf_pop+1,w,c
 11147  002F02  6ED9               	movwf	fsr2l,c
 11148  002F04  50F4               	movf	prodh,w,c
 11149  002F06  2009               	addwfc	??i2_ringbuf_pop+2,w,c
 11150  002F08  6EDA               	movwf	fsr2h,c
 11151  002F0A  50DF               	movf	indf2,w,c
 11152  002F0C  6E0A               	movwf	i2ringbuf_pop@ret,c
 11153                           
 11154                           ;My_header\My_ringbuf.h: 48: rb->tail++;
 11155  002F0E  EE20 F004          	lfsr	2,4
 11156  002F12  5005               	movf	i2ringbuf_pop@rb,w,c
 11157  002F14  26D9               	addwf	fsr2l,f,c
 11158  002F16  5006               	movf	i2ringbuf_pop@rb+1,w,c
 11159  002F18  22DA               	addwfc	fsr2h,f,c
 11160  002F1A  2ADF               	incf	indf2,f,c
 11161                           
 11162                           ;My_header\My_ringbuf.h: 49: if (rb->tail >= rb->size) {
 11163  002F1C  EE20 F004          	lfsr	2,4
 11164  002F20  5005               	movf	i2ringbuf_pop@rb,w,c
 11165  002F22  26D9               	addwf	fsr2l,f,c
 11166  002F24  5006               	movf	i2ringbuf_pop@rb+1,w,c
 11167  002F26  22DA               	addwfc	fsr2h,f,c
 11168  002F28  50DF               	movf	indf2,w,c
 11169  002F2A  6E07               	movwf	??i2_ringbuf_pop& (0+255),c
 11170  002F2C  EE20 F002          	lfsr	2,2
 11171  002F30  5005               	movf	i2ringbuf_pop@rb,w,c
 11172  002F32  26D9               	addwf	fsr2l,f,c
 11173  002F34  5006               	movf	i2ringbuf_pop@rb+1,w,c
 11174  002F36  22DA               	addwfc	fsr2h,f,c
 11175  002F38  50DF               	movf	indf2,w,c
 11176  002F3A  5C07               	subwf	??i2_ringbuf_pop,w,c
 11177  002F3C  A0D8               	btfss	status,0,c
 11178  002F3E  D008               	goto	i2l4541
 11179                           
 11180                           ;My_header\My_ringbuf.h: 50: rb->tail = 0;
 11181  002F40  EE20 F004          	lfsr	2,4
 11182  002F44  5005               	movf	i2ringbuf_pop@rb,w,c
 11183  002F46  26D9               	addwf	fsr2l,f,c
 11184  002F48  5006               	movf	i2ringbuf_pop@rb+1,w,c
 11185  002F4A  22DA               	addwfc	fsr2h,f,c
 11186  002F4C  0E00               	movlw	0
 11187  002F4E  6EDF               	movwf	indf2,c
 11188  002F50                     i2l4541:
 11189                           
 11190                           ;My_header\My_ringbuf.h: 51: }
 11191                           ;My_header\My_ringbuf.h: 52: return ret;
 11192  002F50  500A               	movf	i2ringbuf_pop@ret,w,c
 11193  002F52  0012               	return	
 11194  002F54                     i2l4547:
 11195                           
 11196                           ;My_header\My_ringbuf.h: 54: return 0;
 11197  002F54  0E00               	movlw	0
 11198  002F56  0012               	return	
 11199  002F58                     __end_ofi2_ringbuf_pop:
 11200                           	opt stack 0
 11201                           pclatu	equ	0xFFB
 11202                           pclath	equ	0xFFA
 11203                           tblptru	equ	0xFF8
 11204                           tblptrh	equ	0xFF7
 11205                           tblptrl	equ	0xFF6
 11206                           tablat	equ	0xFF5
 11207                           prodh	equ	0xFF4
 11208                           prodl	equ	0xFF3
 11209                           intcon	equ	0xFF2
 11210                           intcon2	equ	0xFF1
 11211                           postinc0	equ	0xFEE
 11212                           fsr0h	equ	0xFEA
 11213                           fsr0l	equ	0xFE9
 11214                           wreg	equ	0xFE8
 11215                           indf1	equ	0xFE7
 11216                           postdec1	equ	0xFE5
 11217                           fsr1h	equ	0xFE2
 11218                           fsr1l	equ	0xFE1
 11219                           indf2	equ	0xFDF
 11220                           postinc2	equ	0xFDE
 11221                           postdec2	equ	0xFDD
 11222                           fsr2h	equ	0xFDA
 11223                           fsr2l	equ	0xFD9
 11224                           status	equ	0xFD8
 11225                           
 11226 ;; *************** function i2_ringbuf_num *****************
 11227 ;; Defined at:
 11228 ;;		line 29 in file "../My_header\My_ringbuf.h"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  rb              2    0[COMRAM] PTR struct ringbuf
 11231 ;;		 -> rx_buf(5), tx_buf(5), 
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      unsigned char 
 11236 ;; Registers used:
 11237 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11247 ;;Total ram usage:        4 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_ringbuf_backspace
 11253 ;;		_interrupt_TXIF
 11254 ;;		_judgement
 11255 ;;		i2_ringbuf_push
 11256 ;;		i2_ringbuf_pop
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text64
 11261  0030EA                     __ptext64:
 11262                           	opt stack 0
 11263  0030EA                     i2_ringbuf_num:
 11264                           	opt stack 20
 11265                           
 11266                           ;My_header\My_ringbuf.h: 30: if (rb->head >= rb->tail) {
 11267                           
 11268                           ;incstack = 0
 11269  0030EA  EE20 F003          	lfsr	2,3
 11270  0030EE  5001               	movf	i2ringbuf_num@rb,w,c
 11271  0030F0  26D9               	addwf	fsr2l,f,c
 11272  0030F2  5002               	movf	i2ringbuf_num@rb+1,w,c
 11273  0030F4  22DA               	addwfc	fsr2h,f,c
 11274  0030F6  50DF               	movf	indf2,w,c
 11275  0030F8  6E03               	movwf	??i2_ringbuf_num& (0+255),c
 11276  0030FA  EE20 F004          	lfsr	2,4
 11277  0030FE  5001               	movf	i2ringbuf_num@rb,w,c
 11278  003100  26D9               	addwf	fsr2l,f,c
 11279  003102  5002               	movf	i2ringbuf_num@rb+1,w,c
 11280  003104  22DA               	addwfc	fsr2h,f,c
 11281  003106  50DF               	movf	indf2,w,c
 11282  003108  5C03               	subwf	??i2_ringbuf_num,w,c
 11283  00310A  A0D8               	btfss	status,0,c
 11284  00310C  D012               	goto	i2l4259
 11285                           
 11286                           ;My_header\My_ringbuf.h: 31: return (rb->head - rb->tail);
 11287  00310E  EE20 F003          	lfsr	2,3
 11288  003112  5001               	movf	i2ringbuf_num@rb,w,c
 11289  003114  26D9               	addwf	fsr2l,f,c
 11290  003116  5002               	movf	i2ringbuf_num@rb+1,w,c
 11291  003118  22DA               	addwfc	fsr2h,f,c
 11292  00311A  50DF               	movf	indf2,w,c
 11293  00311C  6E03               	movwf	??i2_ringbuf_num& (0+255),c
 11294  00311E  EE20 F004          	lfsr	2,4
 11295  003122  5001               	movf	i2ringbuf_num@rb,w,c
 11296  003124  26D9               	addwf	fsr2l,f,c
 11297  003126  5002               	movf	i2ringbuf_num@rb+1,w,c
 11298  003128  22DA               	addwfc	fsr2h,f,c
 11299  00312A  50DF               	movf	indf2,w,c
 11300  00312C  0800               	sublw	0
 11301  00312E  2403               	addwf	??i2_ringbuf_num,w,c
 11302  003130  0012               	return	
 11303  003132                     i2l4259:
 11304                           
 11305                           ;My_header\My_ringbuf.h: 33: return (rb->size + rb->head - rb->tail);
 11306  003132  EE20 F003          	lfsr	2,3
 11307  003136  5001               	movf	i2ringbuf_num@rb,w,c
 11308  003138  26D9               	addwf	fsr2l,f,c
 11309  00313A  5002               	movf	i2ringbuf_num@rb+1,w,c
 11310  00313C  22DA               	addwfc	fsr2h,f,c
 11311  00313E  50DF               	movf	indf2,w,c
 11312  003140  6E03               	movwf	??i2_ringbuf_num& (0+255),c
 11313  003142  EE20 F002          	lfsr	2,2
 11314  003146  5001               	movf	i2ringbuf_num@rb,w,c
 11315  003148  26D9               	addwf	fsr2l,f,c
 11316  00314A  5002               	movf	i2ringbuf_num@rb+1,w,c
 11317  00314C  22DA               	addwfc	fsr2h,f,c
 11318  00314E  50DF               	movf	indf2,w,c
 11319  003150  6E04               	movwf	(??i2_ringbuf_num+1)& (0+255),c
 11320  003152  EE20 F004          	lfsr	2,4
 11321  003156  5001               	movf	i2ringbuf_num@rb,w,c
 11322  003158  26D9               	addwf	fsr2l,f,c
 11323  00315A  5002               	movf	i2ringbuf_num@rb+1,w,c
 11324  00315C  22DA               	addwfc	fsr2h,f,c
 11325  00315E  50DF               	movf	indf2,w,c
 11326  003160  0800               	sublw	0
 11327  003162  2404               	addwf	??i2_ringbuf_num+1,w,c
 11328  003164  2403               	addwf	??i2_ringbuf_num,w,c
 11329  003166  0012               	return	
 11330  003168                     __end_ofi2_ringbuf_num:
 11331                           	opt stack 0
 11332                           pclatu	equ	0xFFB
 11333                           pclath	equ	0xFFA
 11334                           tblptru	equ	0xFF8
 11335                           tblptrh	equ	0xFF7
 11336                           tblptrl	equ	0xFF6
 11337                           tablat	equ	0xFF5
 11338                           prodh	equ	0xFF4
 11339                           prodl	equ	0xFF3
 11340                           intcon	equ	0xFF2
 11341                           intcon2	equ	0xFF1
 11342                           postinc0	equ	0xFEE
 11343                           fsr0h	equ	0xFEA
 11344                           fsr0l	equ	0xFE9
 11345                           wreg	equ	0xFE8
 11346                           indf1	equ	0xFE7
 11347                           postdec1	equ	0xFE5
 11348                           fsr1h	equ	0xFE2
 11349                           fsr1l	equ	0xFE1
 11350                           indf2	equ	0xFDF
 11351                           postinc2	equ	0xFDE
 11352                           postdec2	equ	0xFDD
 11353                           fsr2h	equ	0xFDA
 11354                           fsr2l	equ	0xFD9
 11355                           status	equ	0xFD8
 11356                           
 11357 ;; *************** function _delay_timer_interrupt *****************
 11358 ;; Defined at:
 11359 ;;		line 359 in file "../My_header\My_header.h"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  d               2    0[COMRAM] PTR struct Delay
 11362 ;;		 -> d1(3), 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;		None
 11365 ;; Return value:  Size  Location     Type
 11366 ;;		None               void
 11367 ;; Registers used:
 11368 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11378 ;;Total ram usage:        2 bytes
 11379 ;; Hardware stack levels used:    1
 11380 ;; This function calls:
 11381 ;;		Nothing
 11382 ;; This function is called by:
 11383 ;;		_ISR
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           	psect	text65
 11388  003660                     __ptext65:
 11389                           	opt stack 0
 11390  003660                     _delay_timer_interrupt:
 11391                           	opt stack 23
 11392                           
 11393                           ;My_header\My_header.h: 360: if (d->cnt)d->cnt--;
 11394                           
 11395                           ;incstack = 0
 11396  003660  EE20 F001          	lfsr	2,1
 11397  003664  5001               	movf	delay_timer_interrupt@d,w,c
 11398  003666  26D9               	addwf	fsr2l,f,c
 11399  003668  5002               	movf	delay_timer_interrupt@d+1,w,c
 11400  00366A  22DA               	addwfc	fsr2h,f,c
 11401  00366C  50DE               	movf	postinc2,w,c
 11402  00366E  10DD               	iorwf	postdec2,w,c
 11403  003670  B4D8               	btfsc	status,2,c
 11404  003672  D009               	goto	i2l234
 11405  003674  EE20 F001          	lfsr	2,1
 11406  003678  5001               	movf	delay_timer_interrupt@d,w,c
 11407  00367A  26D9               	addwf	fsr2l,f,c
 11408  00367C  5002               	movf	delay_timer_interrupt@d+1,w,c
 11409  00367E  22DA               	addwfc	fsr2h,f,c
 11410  003680  06DE               	decf	postinc2,f,c
 11411  003682  0E00               	movlw	0
 11412  003684  5ADD               	subwfb	postdec2,f,c
 11413  003686                     i2l234:
 11414                           
 11415                           ;My_header\My_header.h: 361: if (d->cnt == 1)d->flag = 1;
 11416  003686  EE20 F001          	lfsr	2,1
 11417  00368A  5001               	movf	delay_timer_interrupt@d,w,c
 11418  00368C  26D9               	addwf	fsr2l,f,c
 11419  00368E  5002               	movf	delay_timer_interrupt@d+1,w,c
 11420  003690  22DA               	addwfc	fsr2h,f,c
 11421  003692  50DE               	movf	postinc2,w,c
 11422  003694  0A01               	xorlw	1
 11423  003696  10DD               	iorwf	postdec2,w,c
 11424  003698  A4D8               	btfss	status,2,c
 11425  00369A  0012               	return	
 11426  00369C  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 11427  0036A0  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 11428  0036A4  0E01               	movlw	1
 11429  0036A6  6EDF               	movwf	indf2,c
 11430  0036A8  0012               	return	
 11431  0036AA                     __end_of_delay_timer_interrupt:
 11432                           	opt stack 0
 11433                           pclatu	equ	0xFFB
 11434                           pclath	equ	0xFFA
 11435                           tblptru	equ	0xFF8
 11436                           tblptrh	equ	0xFF7
 11437                           tblptrl	equ	0xFF6
 11438                           tablat	equ	0xFF5
 11439                           prodh	equ	0xFF4
 11440                           prodl	equ	0xFF3
 11441                           intcon	equ	0xFF2
 11442                           intcon2	equ	0xFF1
 11443                           postinc0	equ	0xFEE
 11444                           fsr0h	equ	0xFEA
 11445                           fsr0l	equ	0xFE9
 11446                           wreg	equ	0xFE8
 11447                           indf1	equ	0xFE7
 11448                           postdec1	equ	0xFE5
 11449                           fsr1h	equ	0xFE2
 11450                           fsr1l	equ	0xFE1
 11451                           indf2	equ	0xFDF
 11452                           postinc2	equ	0xFDE
 11453                           postdec2	equ	0xFDD
 11454                           fsr2h	equ	0xFDA
 11455                           fsr2l	equ	0xFD9
 11456                           status	equ	0xFD8
 11457                           
 11458 ;; *************** function _button_timer_interrupt *****************
 11459 ;; Defined at:
 11460 ;;		line 51 in file "../My_header\My_button.h"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;  bt              2    0[COMRAM] PTR struct button
 11463 ;;		 -> sw(4), 
 11464 ;;  sw_value        1    2[COMRAM] unsigned char 
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;		None
 11467 ;; Return value:  Size  Location     Type
 11468 ;;		None               void
 11469 ;; Registers used:
 11470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11479 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;Total ram usage:        5 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; This function calls:
 11483 ;;		Nothing
 11484 ;; This function is called by:
 11485 ;;		_ISR
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text66
 11490  001988                     __ptext66:
 11491                           	opt stack 0
 11492  001988                     _button_timer_interrupt:
 11493                           	opt stack 23
 11494                           
 11495                           ;My_header\My_button.h: 52: if (sw_value) {
 11496                           
 11497                           ;incstack = 0
 11498  001988  5003               	movf	button_timer_interrupt@sw_value,w,c
 11499  00198A  B4D8               	btfsc	status,2,c
 11500  00198C  D09C               	goto	i2l1955
 11501                           
 11502                           ;My_header\My_button.h: 53: if (bt->cnt_sw < 350 + 1) bt->cnt_sw++;
 11503  00198E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11504  001992  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11505  001996  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11506  00199A  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11507  00199E  0E5F               	movlw	95
 11508  0019A0  5C04               	subwf	??_button_timer_interrupt,w,c
 11509  0019A2  0E01               	movlw	1
 11510  0019A4  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11511  0019A6  B0D8               	btfsc	status,0,c
 11512  0019A8  D007               	goto	i2l268
 11513  0019AA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11514  0019AE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11515  0019B2  2ADE               	incf	postinc2,f,c
 11516  0019B4  0E00               	movlw	0
 11517  0019B6  22DD               	addwfc	postdec2,f,c
 11518  0019B8                     i2l268:
 11519                           
 11520                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 350)bt->flag.long_holding_7 = 1;
 11521  0019B8  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11522  0019BC  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11523  0019C0  2AD9               	incf	fsr2l,f,c
 11524  0019C2  50DD               	movf	postdec2,w,c
 11525  0019C4  0A01               	xorlw	1
 11526  0019C6  0E5E               	movlw	94
 11527  0019C8  B4D8               	btfsc	status,2,c
 11528  0019CA  18DF               	xorwf	indf2,w,c
 11529  0019CC  A4D8               	btfss	status,2,c
 11530  0019CE  D007               	goto	i2l269
 11531  0019D0  EE20 F003          	lfsr	2,3
 11532  0019D4  5001               	movf	button_timer_interrupt@bt,w,c
 11533  0019D6  26D9               	addwf	fsr2l,f,c
 11534  0019D8  5002               	movf	button_timer_interrupt@bt+1,w,c
 11535  0019DA  22DA               	addwfc	fsr2h,f,c
 11536  0019DC  8EDF               	bsf	indf2,7,c
 11537  0019DE                     i2l269:
 11538                           
 11539                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 300)bt->flag.long_holding_6 = 1;
 11540  0019DE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11541  0019E2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11542  0019E6  2AD9               	incf	fsr2l,f,c
 11543  0019E8  50DD               	movf	postdec2,w,c
 11544  0019EA  0A01               	xorlw	1
 11545  0019EC  0E2C               	movlw	44
 11546  0019EE  B4D8               	btfsc	status,2,c
 11547  0019F0  18DF               	xorwf	indf2,w,c
 11548  0019F2  A4D8               	btfss	status,2,c
 11549  0019F4  D007               	goto	i2l270
 11550  0019F6  EE20 F003          	lfsr	2,3
 11551  0019FA  5001               	movf	button_timer_interrupt@bt,w,c
 11552  0019FC  26D9               	addwf	fsr2l,f,c
 11553  0019FE  5002               	movf	button_timer_interrupt@bt+1,w,c
 11554  001A00  22DA               	addwfc	fsr2h,f,c
 11555  001A02  8CDF               	bsf	indf2,6,c
 11556  001A04                     i2l270:
 11557                           
 11558                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 250)bt->flag.long_holding_5 = 1;
 11559  001A04  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11560  001A08  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11561  001A0C  50DE               	movf	postinc2,w,c
 11562  001A0E  0AFA               	xorlw	250
 11563  001A10  10DD               	iorwf	postdec2,w,c
 11564  001A12  A4D8               	btfss	status,2,c
 11565  001A14  D007               	goto	i2l271
 11566  001A16  EE20 F003          	lfsr	2,3
 11567  001A1A  5001               	movf	button_timer_interrupt@bt,w,c
 11568  001A1C  26D9               	addwf	fsr2l,f,c
 11569  001A1E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11570  001A20  22DA               	addwfc	fsr2h,f,c
 11571  001A22  8ADF               	bsf	indf2,5,c
 11572  001A24                     i2l271:
 11573                           
 11574                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 200)bt->flag.long_holding_4 = 1;
 11575  001A24  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11576  001A28  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11577  001A2C  50DE               	movf	postinc2,w,c
 11578  001A2E  0AC8               	xorlw	200
 11579  001A30  10DD               	iorwf	postdec2,w,c
 11580  001A32  A4D8               	btfss	status,2,c
 11581  001A34  D007               	goto	i2l272
 11582  001A36  EE20 F003          	lfsr	2,3
 11583  001A3A  5001               	movf	button_timer_interrupt@bt,w,c
 11584  001A3C  26D9               	addwf	fsr2l,f,c
 11585  001A3E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11586  001A40  22DA               	addwfc	fsr2h,f,c
 11587  001A42  88DF               	bsf	indf2,4,c
 11588  001A44                     i2l272:
 11589                           
 11590                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 11591  001A44  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11592  001A48  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11593  001A4C  50DE               	movf	postinc2,w,c
 11594  001A4E  0A96               	xorlw	150
 11595  001A50  10DD               	iorwf	postdec2,w,c
 11596  001A52  A4D8               	btfss	status,2,c
 11597  001A54  D007               	goto	i2l273
 11598  001A56  EE20 F003          	lfsr	2,3
 11599  001A5A  5001               	movf	button_timer_interrupt@bt,w,c
 11600  001A5C  26D9               	addwf	fsr2l,f,c
 11601  001A5E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11602  001A60  22DA               	addwfc	fsr2h,f,c
 11603  001A62  86DF               	bsf	indf2,3,c
 11604  001A64                     i2l273:
 11605                           
 11606                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 11607  001A64  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11608  001A68  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11609  001A6C  50DE               	movf	postinc2,w,c
 11610  001A6E  0A3C               	xorlw	60
 11611  001A70  10DD               	iorwf	postdec2,w,c
 11612  001A72  A4D8               	btfss	status,2,c
 11613  001A74  D007               	goto	i2l274
 11614  001A76  EE20 F003          	lfsr	2,3
 11615  001A7A  5001               	movf	button_timer_interrupt@bt,w,c
 11616  001A7C  26D9               	addwf	fsr2l,f,c
 11617  001A7E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11618  001A80  22DA               	addwfc	fsr2h,f,c
 11619  001A82  84DF               	bsf	indf2,2,c
 11620  001A84                     i2l274:
 11621                           
 11622                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 11623  001A84  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11624  001A88  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11625  001A8C  50DE               	movf	postinc2,w,c
 11626  001A8E  0A10               	xorlw	16
 11627  001A90  10DD               	iorwf	postdec2,w,c
 11628  001A92  A4D8               	btfss	status,2,c
 11629  001A94  D007               	goto	i2l275
 11630  001A96  EE20 F003          	lfsr	2,3
 11631  001A9A  5001               	movf	button_timer_interrupt@bt,w,c
 11632  001A9C  26D9               	addwf	fsr2l,f,c
 11633  001A9E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11634  001AA0  22DA               	addwfc	fsr2h,f,c
 11635  001AA2  82DF               	bsf	indf2,1,c
 11636  001AA4                     i2l275:
 11637                           
 11638                           ;My_header\My_button.h: 61: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 11639  001AA4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11640  001AA8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11641  001AAC  50DE               	movf	postinc2,w,c
 11642  001AAE  0A02               	xorlw	2
 11643  001AB0  10DD               	iorwf	postdec2,w,c
 11644  001AB2  A4D8               	btfss	status,2,c
 11645  001AB4  0012               	return	
 11646  001AB6  EE20 F003          	lfsr	2,3
 11647  001ABA  5001               	movf	button_timer_interrupt@bt,w,c
 11648  001ABC  26D9               	addwf	fsr2l,f,c
 11649  001ABE  5002               	movf	button_timer_interrupt@bt+1,w,c
 11650  001AC0  22DA               	addwfc	fsr2h,f,c
 11651  001AC2  80DF               	bsf	indf2,0,c
 11652  001AC4  0012               	return	
 11653  001AC6                     i2l1955:
 11654                           
 11655                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 350)bt->flag.long_hold_7 = 1;
 11656  001AC6  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11657  001ACA  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11658  001ACE  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11659  001AD2  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11660  001AD6  0E5E               	movlw	94
 11661  001AD8  5C04               	subwf	??_button_timer_interrupt,w,c
 11662  001ADA  0E01               	movlw	1
 11663  001ADC  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11664  001ADE  A0D8               	btfss	status,0,c
 11665  001AE0  D008               	goto	i2l1959
 11666  001AE2  EE20 F002          	lfsr	2,2
 11667  001AE6  5001               	movf	button_timer_interrupt@bt,w,c
 11668  001AE8  26D9               	addwf	fsr2l,f,c
 11669  001AEA  5002               	movf	button_timer_interrupt@bt+1,w,c
 11670  001AEC  22DA               	addwfc	fsr2h,f,c
 11671  001AEE  8EDF               	bsf	indf2,7,c
 11672  001AF0  D099               	goto	i2l1987
 11673  001AF2                     i2l1959:
 11674                           
 11675                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 300)bt->flag.long_hold_6 = 1;
 11676  001AF2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11677  001AF6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11678  001AFA  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11679  001AFE  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11680  001B02  0E2C               	movlw	44
 11681  001B04  5C04               	subwf	??_button_timer_interrupt,w,c
 11682  001B06  0E01               	movlw	1
 11683  001B08  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11684  001B0A  A0D8               	btfss	status,0,c
 11685  001B0C  D008               	goto	i2l1963
 11686  001B0E  EE20 F002          	lfsr	2,2
 11687  001B12  5001               	movf	button_timer_interrupt@bt,w,c
 11688  001B14  26D9               	addwf	fsr2l,f,c
 11689  001B16  5002               	movf	button_timer_interrupt@bt+1,w,c
 11690  001B18  22DA               	addwfc	fsr2h,f,c
 11691  001B1A  8CDF               	bsf	indf2,6,c
 11692  001B1C  D083               	goto	i2l1987
 11693  001B1E                     i2l1963:
 11694                           
 11695                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 250)bt->flag.long_hold_5 = 1;
 11696  001B1E  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11697  001B22  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11698  001B26  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11699  001B2A  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11700  001B2E  0EFA               	movlw	250
 11701  001B30  5C04               	subwf	??_button_timer_interrupt,w,c
 11702  001B32  0E00               	movlw	0
 11703  001B34  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11704  001B36  A0D8               	btfss	status,0,c
 11705  001B38  D008               	goto	i2l1967
 11706  001B3A  EE20 F002          	lfsr	2,2
 11707  001B3E  5001               	movf	button_timer_interrupt@bt,w,c
 11708  001B40  26D9               	addwf	fsr2l,f,c
 11709  001B42  5002               	movf	button_timer_interrupt@bt+1,w,c
 11710  001B44  22DA               	addwfc	fsr2h,f,c
 11711  001B46  8ADF               	bsf	indf2,5,c
 11712  001B48  D06D               	goto	i2l1987
 11713  001B4A                     i2l1967:
 11714                           
 11715                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 200)bt->flag.long_hold_4 = 1;
 11716  001B4A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11717  001B4E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11718  001B52  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11719  001B56  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11720  001B5A  0EC8               	movlw	200
 11721  001B5C  5C04               	subwf	??_button_timer_interrupt,w,c
 11722  001B5E  0E00               	movlw	0
 11723  001B60  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11724  001B62  A0D8               	btfss	status,0,c
 11725  001B64  D008               	goto	i2l1971
 11726  001B66  EE20 F002          	lfsr	2,2
 11727  001B6A  5001               	movf	button_timer_interrupt@bt,w,c
 11728  001B6C  26D9               	addwf	fsr2l,f,c
 11729  001B6E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11730  001B70  22DA               	addwfc	fsr2h,f,c
 11731  001B72  88DF               	bsf	indf2,4,c
 11732  001B74  D057               	goto	i2l1987
 11733  001B76                     i2l1971:
 11734                           
 11735                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 11736  001B76  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11737  001B7A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11738  001B7E  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11739  001B82  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11740  001B86  0E96               	movlw	150
 11741  001B88  5C04               	subwf	??_button_timer_interrupt,w,c
 11742  001B8A  0E00               	movlw	0
 11743  001B8C  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11744  001B8E  A0D8               	btfss	status,0,c
 11745  001B90  D008               	goto	i2l1975
 11746  001B92  EE20 F002          	lfsr	2,2
 11747  001B96  5001               	movf	button_timer_interrupt@bt,w,c
 11748  001B98  26D9               	addwf	fsr2l,f,c
 11749  001B9A  5002               	movf	button_timer_interrupt@bt+1,w,c
 11750  001B9C  22DA               	addwfc	fsr2h,f,c
 11751  001B9E  86DF               	bsf	indf2,3,c
 11752  001BA0  D041               	goto	i2l1987
 11753  001BA2                     i2l1975:
 11754                           
 11755                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 11756  001BA2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11757  001BA6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11758  001BAA  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11759  001BAE  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11760  001BB2  0E3C               	movlw	60
 11761  001BB4  5C04               	subwf	??_button_timer_interrupt,w,c
 11762  001BB6  0E00               	movlw	0
 11763  001BB8  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11764  001BBA  A0D8               	btfss	status,0,c
 11765  001BBC  D008               	goto	i2l1979
 11766  001BBE  EE20 F002          	lfsr	2,2
 11767  001BC2  5001               	movf	button_timer_interrupt@bt,w,c
 11768  001BC4  26D9               	addwf	fsr2l,f,c
 11769  001BC6  5002               	movf	button_timer_interrupt@bt+1,w,c
 11770  001BC8  22DA               	addwfc	fsr2h,f,c
 11771  001BCA  84DF               	bsf	indf2,2,c
 11772  001BCC  D02B               	goto	i2l1987
 11773  001BCE                     i2l1979:
 11774                           
 11775                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 11776  001BCE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11777  001BD2  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11778  001BD6  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11779  001BDA  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11780  001BDE  0E10               	movlw	16
 11781  001BE0  5C04               	subwf	??_button_timer_interrupt,w,c
 11782  001BE2  0E00               	movlw	0
 11783  001BE4  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11784  001BE6  A0D8               	btfss	status,0,c
 11785  001BE8  D008               	goto	i2l1983
 11786  001BEA  EE20 F002          	lfsr	2,2
 11787  001BEE  5001               	movf	button_timer_interrupt@bt,w,c
 11788  001BF0  26D9               	addwf	fsr2l,f,c
 11789  001BF2  5002               	movf	button_timer_interrupt@bt+1,w,c
 11790  001BF4  22DA               	addwfc	fsr2h,f,c
 11791  001BF6  82DF               	bsf	indf2,1,c
 11792  001BF8  D015               	goto	i2l1987
 11793  001BFA                     i2l1983:
 11794                           
 11795                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 11796  001BFA  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11797  001BFE  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11798  001C02  CFDE F004          	movff	postinc2,??_button_timer_interrupt
 11799  001C06  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
 11800  001C0A  0E02               	movlw	2
 11801  001C0C  5C04               	subwf	??_button_timer_interrupt,w,c
 11802  001C0E  0E00               	movlw	0
 11803  001C10  5805               	subwfb	??_button_timer_interrupt+1,w,c
 11804  001C12  A0D8               	btfss	status,0,c
 11805  001C14  D007               	goto	i2l1987
 11806  001C16  EE20 F002          	lfsr	2,2
 11807  001C1A  5001               	movf	button_timer_interrupt@bt,w,c
 11808  001C1C  26D9               	addwf	fsr2l,f,c
 11809  001C1E  5002               	movf	button_timer_interrupt@bt+1,w,c
 11810  001C20  22DA               	addwfc	fsr2h,f,c
 11811  001C22  80DF               	bsf	indf2,0,c
 11812  001C24                     i2l1987:
 11813                           
 11814                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 11815  001C24  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 11816  001C28  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 11817  001C2C  0E00               	movlw	0
 11818  001C2E  6EDE               	movwf	postinc2,c
 11819  001C30  0E00               	movlw	0
 11820  001C32  6EDD               	movwf	postdec2,c
 11821                           
 11822                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 11823  001C34  EE20 F002          	lfsr	2,2
 11824  001C38  5001               	movf	button_timer_interrupt@bt,w,c
 11825  001C3A  26D9               	addwf	fsr2l,f,c
 11826  001C3C  5002               	movf	button_timer_interrupt@bt+1,w,c
 11827  001C3E  22DA               	addwfc	fsr2h,f,c
 11828  001C40  0EFF               	movlw	255
 11829  001C42  16DE               	andwf	postinc2,f,c
 11830  001C44  0E00               	movlw	0
 11831  001C46  16DD               	andwf	postdec2,f,c
 11832  001C48  0012               	return	
 11833  001C4A                     __end_of_button_timer_interrupt:
 11834                           	opt stack 0
 11835                           pclatu	equ	0xFFB
 11836                           pclath	equ	0xFFA
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           intcon2	equ	0xFF1
 11845                           postinc0	equ	0xFEE
 11846                           fsr0h	equ	0xFEA
 11847                           fsr0l	equ	0xFE9
 11848                           wreg	equ	0xFE8
 11849                           indf1	equ	0xFE7
 11850                           postdec1	equ	0xFE5
 11851                           fsr1h	equ	0xFE2
 11852                           fsr1l	equ	0xFE1
 11853                           indf2	equ	0xFDF
 11854                           postinc2	equ	0xFDE
 11855                           postdec2	equ	0xFDD
 11856                           fsr2h	equ	0xFDA
 11857                           fsr2l	equ	0xFD9
 11858                           status	equ	0xFD8
 11859                           pclatu	equ	0xFFB
 11860                           pclath	equ	0xFFA
 11861                           tblptru	equ	0xFF8
 11862                           tblptrh	equ	0xFF7
 11863                           tblptrl	equ	0xFF6
 11864                           tablat	equ	0xFF5
 11865                           prodh	equ	0xFF4
 11866                           prodl	equ	0xFF3
 11867                           intcon	equ	0xFF2
 11868                           intcon2	equ	0xFF1
 11869                           postinc0	equ	0xFEE
 11870                           fsr0h	equ	0xFEA
 11871                           fsr0l	equ	0xFE9
 11872                           wreg	equ	0xFE8
 11873                           indf1	equ	0xFE7
 11874                           postdec1	equ	0xFE5
 11875                           fsr1h	equ	0xFE2
 11876                           fsr1l	equ	0xFE1
 11877                           indf2	equ	0xFDF
 11878                           postinc2	equ	0xFDE
 11879                           postdec2	equ	0xFDD
 11880                           fsr2h	equ	0xFDA
 11881                           fsr2l	equ	0xFD9
 11882                           status	equ	0xFD8
 11883                           
 11884                           	psect	rparam
 11885  0000                     pclatu	equ	0xFFB
 11886                           pclath	equ	0xFFA
 11887                           tblptru	equ	0xFF8
 11888                           tblptrh	equ	0xFF7
 11889                           tblptrl	equ	0xFF6
 11890                           tablat	equ	0xFF5
 11891                           prodh	equ	0xFF4
 11892                           prodl	equ	0xFF3
 11893                           intcon	equ	0xFF2
 11894                           intcon2	equ	0xFF1
 11895                           postinc0	equ	0xFEE
 11896                           fsr0h	equ	0xFEA
 11897                           fsr0l	equ	0xFE9
 11898                           wreg	equ	0xFE8
 11899                           indf1	equ	0xFE7
 11900                           postdec1	equ	0xFE5
 11901                           fsr1h	equ	0xFE2
 11902                           fsr1l	equ	0xFE1
 11903                           indf2	equ	0xFDF
 11904                           postinc2	equ	0xFDE
 11905                           postdec2	equ	0xFDD
 11906                           fsr2h	equ	0xFDA
 11907                           fsr2l	equ	0xFD9
 11908                           status	equ	0xFD8


Data Sizes:
    Strings     140
    Constant    0
    Data        47
    BSS         537
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160     75     129
    BANK1           256    250     250
    BANK2           256    250     250
    BANK3           256    250     250
    BANK4           256    250     250
    BANK5           256      0     250
    BANK6           256      0     250
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    RTCC_time_set_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_time_set_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    display_time@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK0[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    weekday_char_full	PTR const unsigned char [7] size(2) Largest target is 10
		 -> STR_14(CODE[9]), STR_13(CODE[7]), STR_12(CODE[9]), STR_11(CODE[10]), 
		 -> STR_10(CODE[8]), STR_9(CODE[7]), STR_8(CODE[7]), 

    weekday_char	PTR const unsigned char [7] size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_35(CODE[9]), STR_34(CODE[9]), STR_15(CODE[3]), display_dec@str(BANK0[10]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 4
		 -> sw(COMRAM[4]), 

    strcmp@str2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[3]), 

    strcmp@str1	PTR const unsigned char  size(2) Largest target is 250
		 -> rx_operation@opland1(BANK3[250]), rx_operation@opcode(BANK1[250]), 

    atoi@str	PTR const unsigned char  size(2) Largest target is 250
		 -> rx_operation@opland2(BANK4[250]), 

    utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> tx_send_dec@str(BANK0[10]), display_dec@str(BANK0[10]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> d1(COMRAM[3]), 

    tx_sends@asciicode	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_36(CODE[4]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[3]), 
		 -> tx_send_dec@str(BANK0[10]), cursor_up(COMRAM[4]), STR_19(CODE[3]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[3]), cursor_right(BANK0[4]), cursor_down(COMRAM[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 250
		 -> main_init@rxbuf(BANK6[250]), main_init@txbuf(BANK5[250]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> rx_buf(COMRAM[5]), tx_buf(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _rx_operation->_atoi
    _rx_operation->_ringbuf_pop
    _ringbuf_pop->_ringbuf_num
    _RTCC_from_caltime->_caltime_to_RTCC
    _print_time->_tx_send
    _tx_send_time->_tx_send
    _ringbuf_push->_ringbuf_num
    _main_init->_timer1_init
    _I2C_LCD_init->_Delay_ms
    _utoa->___lwdiv
    _I2C_LCD_Puts->_I2C_Send
    _I2C_LCD_Puts->_I2C_Start
    _I2C_LCD_Command->_I2C_Send
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Putc->_I2C_Send
    _I2C_LCD_Putc->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _RTCC_time_set_inc->_month_length
    _RTCC_from_epoch->_caltime_to_RTCC
    _epoch_to_caltime->_month_length
    _caltime_to_RTCC->_d_to_x
    _RTCC_from_RTCC->_RTCC_to_caltime
    _caltime_to_epoch->_month_length
    _month_length->___awmod
    ___lmul->_month_length
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in COMRAM

    _ISR->_judgement
    _judgement->i2_tx_sends
    i2_tx_sends->i2_ringbuf_push
    i2_tx_send->i2_ringbuf_push
    i2_ringbuf_push->i2_ringbuf_num
    _ringbuf_backspace->i2_ringbuf_num
    _interrupt_TXIF->i2_ringbuf_pop
    i2_ringbuf_pop->i2_ringbuf_num

Critical Paths under _main in BANK0

    _main->_RTCC_time_set_inc
    _rx_operation->_RTCC_from_caltime
    _ringbuf_pop->_ringbuf_num
    _RTCC_from_caltime->_caltime_to_epoch
    _tx_send_time->_RTCC_from_RTCC
    _tx_send_dec->_tx_sends
    _tx_send_dec->_utoa
    _tx_sends->_ringbuf_push
    _tx_send->_ringbuf_push
    _ringbuf_push->_ringbuf_num
    _main_init->_ringbuf_init
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _display_time->_RTCC_from_RTCC
    _display_dec->_utoa
    _utoa->___lwdiv
    _utoa->___lwmod
    _I2C_LCD_Puts->_I2C_Start
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Putc->_I2C_Start
    _RTCC_time_set_inc->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _d_to_x->___awdiv
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rx_operation

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_rx_operation

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_rx_operation

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    _main->_rx_operation

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   86541
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                    _RTCC_from_epoch
                          _RTCC_loop
               _RTCC_time_set_cursor
                  _RTCC_time_set_inc
               _RTCC_time_set_toggle
                       _display_time
                          _main_init
                         _print_time
                       _rx_operation
                           _tx_sends
 ---------------------------------------------------------------------------------
 (1) _rx_operation                                      1003  1003      0   11360
                                             48 BANK0      3     3      0
                                              0 BANK1    250   250      0
                                              0 BANK2    250   250      0
                                              0 BANK3    250   250      0
                                              0 BANK4    250   250      0
                  _RTCC_from_caltime
                               _atoi
                        _ringbuf_pop
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4    1710
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          6     4      2    1540
                                             33 COMRAM     1     1      0
                                              2 BANK0      5     3      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 4     2      2     791
                                             31 COMRAM     3     1      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_caltime                                    4     0      4    5833
                                             44 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (1) _print_time                                           2     2      0   25459
                                             48 BANK0      2     2      0
                            _tx_send
                       _tx_send_time
                           _tx_sends
 ---------------------------------------------------------------------------------
 (2) _tx_send_time                                         0     0      0   19082
                     _RTCC_from_RTCC
                            _tx_send
                        _tx_send_dec
                           _tx_sends
 ---------------------------------------------------------------------------------
 (3) _tx_send_dec                                         12    11      1    7224
                                             12 BANK0     12    11      1
                           _tx_sends
                               _utoa
 ---------------------------------------------------------------------------------
 (1) _tx_sends                                             2     0      2    4125
                                             10 BANK0      2     0      2
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (3) _tx_send                                              1     1      0    2048
                                             33 COMRAM     1     1      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (2) _ringbuf_push                                         8     5      3    2017
                                              2 BANK0      8     5      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (3) _ringbuf_num                                          4     2      2     908
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    2521
                       _I2C_LCD_init
                           _I2C_init
                           _OSC_init
                          _RTCC_init
                          _UART_init
                       _ringbuf_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      22
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     155
                                             31 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         5     0      5     810
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1534
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     667
                                              3 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     200
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _display_time                                         5     1      4   13452
                                             48 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (2) _display_dec                                         12    11      1    4210
                                             12 BANK0     12    11      1
                       _I2C_LCD_Puts
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 8     3      5    2223
                                              4 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     648
                                             31 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     657
                                             31 COMRAM     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Puts                                         5     3      2    1221
                                              1 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    1182
                                              3 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              1 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Putc                                         2     2      0     667
                                              1 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                             33 COMRAM     1     0      1
                                              0 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                             33 COMRAM     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_time_set_toggle                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTCC_time_set_inc                                   12     8      4   18395
                                             63 BANK0     12     8      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      4     0      4    8159
                                             59 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _epoch_to_caltime                                    18    14      4    6302
                                             41 BANK0     18    14      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _get_quot_rem                                        16    12      4    3044
                                             25 BANK0     16    12      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     657
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _caltime_to_RTCC                                      2     0      2    1140
                                             32 COMRAM     2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (4) _d_to_x                                               1     1      0     715
                                             31 COMRAM     1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _RTCC_from_RTCC                                       4     0      4    5685
                                             44 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (3) _caltime_to_epoch                                    19    15      4    4392
                                             25 BANK0     19    15      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _month_length                                         6     5      1    2075
                                             33 COMRAM     1     0      1
                                              4 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     849
                                             31 COMRAM     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1366
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (4) _RTCC_to_caltime                                      3     1      2     368
                                             33 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (5) _x_to_d                                               2     2      0      44
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RTCC_time_set_cursor                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 15    15      0    7847
                                             16 COMRAM    15    15      0
             _button_timer_interrupt
              _delay_timer_interrupt
                     _interrupt_TXIF
                          _judgement
 ---------------------------------------------------------------------------------
 (8) _judgement                                            2     2      0    5620
                                             14 COMRAM     2     2      0
                  _ringbuf_backspace
                     _ringbuf_delete
                      i2_ringbuf_num
                     i2_ringbuf_push
                          i2_tx_send
                         i2_tx_sends
 ---------------------------------------------------------------------------------
 (9) i2_tx_sends                                           2     0      2    1471
                                             12 COMRAM     2     0      2
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (9) i2_tx_send                                            1     1      0    1192
                                             12 COMRAM     1     1      0
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (10) i2_ringbuf_push                                      8     5      3    1161
                                              4 COMRAM     8     5      3
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (9) _ringbuf_delete                                       2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _ringbuf_backspace                                    3     1      2     791
                                              4 COMRAM     3     1      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (8) _interrupt_TXIF                                       0     0      0    1350
                      i2_ringbuf_num
                      i2_ringbuf_pop
 ---------------------------------------------------------------------------------
 (9) i2_ringbuf_pop                                        6     4      2     818
                                              4 COMRAM     6     4      2
                      i2_ringbuf_num
 ---------------------------------------------------------------------------------
 (11) i2_ringbuf_num                                       4     2      2     532
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _delay_timer_interrupt                                2     0      2     136
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _button_timer_interrupt                               5     2      3     707
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
   _RTCC_time_set_cursor
   _RTCC_time_set_inc
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
     ___lmul
       ___lldiv (ARG)
       _month_length (ARG)
         ___awmod
     _month_length
       ___awmod
   _RTCC_time_set_toggle
   _display_time
     _I2C_LCD_Putc
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _display_dec
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _utoa
         ___lwdiv
         ___lwmod
   _main_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _OSC_init
     _RTCC_init
     _UART_init
     _ringbuf_init
     _timer1_init
     _timer3_init
   _print_time
     _tx_send
       _ringbuf_push
         _ringbuf_num
     _tx_send_time
       _RTCC_from_RTCC
         _RTCC_to_caltime
           _x_to_d
         _caltime_to_epoch
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
           _month_length
             ___awmod
       _tx_send
         _ringbuf_push
           _ringbuf_num
       _tx_send_dec
         _tx_sends
           _ringbuf_push
             _ringbuf_num
         _utoa
           ___lwdiv
           ___lwmod
       _tx_sends
         _ringbuf_push
           _ringbuf_num
     _tx_sends
       _ringbuf_push
         _ringbuf_num
   _rx_operation
     _RTCC_from_caltime
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _atoi
     _ringbuf_pop
       _ringbuf_num
     _strcmp
   _tx_sends
     _ringbuf_push
       _ringbuf_num

 _ISR (ROOT)
   _button_timer_interrupt
   _delay_timer_interrupt
   _interrupt_TXIF
     i2_ringbuf_num
     i2_ringbuf_pop
       i2_ringbuf_num
   _judgement
     _ringbuf_backspace
       i2_ringbuf_num
     _ringbuf_delete
     i2_ringbuf_num
     i2_ringbuf_push
       i2_ringbuf_num
     i2_tx_send
       i2_ringbuf_push
         i2_ringbuf_num
     i2_tx_sends
       i2_ringbuf_push
         i2_ringbuf_num

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      FA      18       97.7%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      FA      16       97.7%
BITBANK4           100      0       0      13        0.0%
BANK4              100     FA      FA      14       97.7%
BITBANK3           100      0       0      11        0.0%
BANK3              100     FA      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100     FA      FA      10       97.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     FA      FA       8       97.7%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4B      81       5       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     69D       6        0.0%
DATA                 0      0     69D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat May 30 09:18:02 2015

          __size_of_rx_operation 03BE               __size_of_I2C_Start 0030  
                   ?_display_dec 006C                               _d1 0034  
                   ___awdiv@sign 0065                               _sw 0030  
         __end_of_interrupt_TXIF 37E2                ??_RTCC_from_epoch 0023  
        RTCC_time_set_inc@i_2072 00A9                     __CFG_CP0$OFF 000000  
                            l134 36CC                              l320 39CA  
                            l305 37A2                              l243 2D12  
                            l341 3746                              l406 1D94  
                            l600 1320                              l329 3714  
                            l451 3628                              l444 39F8  
                            l453 3636                              l455 3644  
                            l457 3652                              l449 361A  
                            _GIE 007F97                              _ISR 0008  
                  ?_display_time 0090                    ?_get_quot_rem 0079  
             caltime_to_epoch@ep 007B               caltime_to_epoch@ct 0079  
              _RTCC_from_caltime 37E2                              fsr2 000FD9  
                   ___awmod@sign 0021                              prod 000FF3  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
             ?_RTCC_from_caltime 008C                     _I2C_LCD_Putc 3720  
                   _I2C_LCD_Puts 2DA4                ??_I2C_LCD_Command 0023  
                           ?_ISR 0001                     _I2C_LCD_init 35B8  
                           l1134 3328                             l1071 28A2  
                           l1144 3558                             l3103 36CE  
                           l4001 2B94                             l4005 2BA6  
                           l4103 26E6                             l4121 282C  
                           l4017 250C                             l4107 26FA  
                           l3251 3826                             l4053 2792  
                           l4221 136C                             l4117 280E  
                           l4141 32EA                             l4063 3024  
                           l4119 2826                             l4151 331C  
                           l4143 32F0                             l4081 2678  
                           l4129 2888                             l4161 3522  
                           l5113 238A                             l4059 2FFE  
                           l4243 149C                             l4227 1374  
                           l4235 13F4                             l4091 26A8  
                           l4075 2650                             l4139 32E0  
                           l4163 3528                             l5131 23DA  
                           l3517 30E2                             l4181 2D20  
                           l4173 3258                             l5125 23CA  
                           l4239 1418                             l4087 2696  
                           l4351 1E0E                             l4167 354C  
                           l4159 3518                             l4183 2D44  
                           l4191 2D8A                             l4415 2A36  
                           l4089 26A2                             l4177 3298  
                           l4521 22AC                             l4409 2A32  
                           l4099 26D8                             l4355 1E16  
                           l4283 2E06                             l4523 22B2  
                           l5139 23F2                             l4349 1E0A  
                           l4621 1722                             l4613 16DE  
                           l4277 2DD0                             l4285 2E32  
                           l4437 33DA                             l4429 339C  
                           l4453 2CB6                             l4439 33DE  
                           l4447 2C6A                             l4455 2CC2  
                           l4641 186A                             l4633 17D8  
                           l4625 17B8                             l4617 1700  
                           l4609 16C0                             l4651 195C  
                           l2971 3910                             l4379 343A  
                           l4811 31D0                             l4459 2CEA  
                           l4645 18F4                             l4493 3498  
                           l2973 3920                             l4647 1910  
                           l4807 31BC                             l4831 1052  
                           l4823 0FDE                             l4817 0FA6  
                           l3971 39D4                             l4851 1136  
                           l3981 2B22                             l4597 2164  
                           l3965 2FA8                             l4861 11FE  
                           l4845 10FE                             l4837 108A  
                           l3991 2B5E                             l4599 216A  
             __CFG_WPFP$PAGE_127 000000                             l3993 2B64  
                           l3985 2B44                             l4785 3176  
                           l4873 12AC                             l4865 1238  
                           l3997 2B88                             l3989 2B54  
                           l4789 318A                             l4877 12E6  
                           l4869 1272                             l4799 31A2  
                           STR_1 0F66                             STR_2 0F62  
                           STR_3 0F5A                             STR_4 0F56  
                           STR_5 0F6E                             STR_6 0F5E  
                           STR_7 0F6A                             STR_8 0F3E  
                           STR_9 0F37                             u4010 2DF6  
                           u4020 2E2C                             u4017 2DEC  
                           u4027 2E22                             u3700 2784  
                           u3710 27D8                             u5057 3998  
                           u3706 2786                             u3650 37AE  
                           u5067 3916                             u3716 27DA  
                           u3900 32BE                             u5077 2E02  
                           u5087 371A                             u3680 273A  
                           u5097 374C                             u3690 276C  
                           u3907 32B4                             u2990 3076  
                           u3686 273C                             u3696 276E  
                           u3890 328A                             u2996 3078  
                           u3897 3280              ??_RTCC_from_caltime 0023  
                           _atoi 3394                             _main 22FC  
       button_timer_interrupt@bt 0001                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                 __end_of_I2C_Send 39D2  
                           _utoa 2D10           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 3A48                     _rx_operation 0F8E  
                           pclat 000FFA                      _tx_send_dec 33F2  
               __end_of_I2C_init 3A26                             prodh 000FF4  
                           prodl 000FF3                             start 00C6  
                  __CFG_IESO$OFF 000000    __size_of_RTCC_time_set_cursor 0054  
          __size_of_tx_send_time 014C                    _I2C_LCD_Clear 398A  
  __size_of_RTCC_time_set_toggle 0016            __end_ofi2_ringbuf_pop 2F58  
          __end_ofi2_ringbuf_num 3168                            ??_ISR 0011  
         __size_of_I2C_IdleCheck 0016                _weekday_char_full 00B9  
              ??_RTCC_to_caltime 0022                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E                  ?_interrupt_TXIF 0001  
                     i2_tx_sends 3332                   i2_ringbuf_push 2BB0  
      __end_of_RTCC_from_caltime 3810                            ?_atoi 0020  
                          ?_main 0001                   ??_display_time 0094  
                 ??_get_quot_rem 007D                  __end_of___awdiv 2704  
                          _ADRES 000FC3                            STR_10 0F2F  
                          STR_11 0F01                            STR_20 0F75  
                          STR_12 0F26                            STR_21 0F83  
                          STR_13 0F45                            STR_22 0F83  
                          STR_30 0F87                            STR_14 0F1D  
                          STR_31 0F89                            STR_23 0F7B  
                          STR_15 0F75                            STR_32 0F8B  
                          STR_24 0F78                            STR_16 0F72  
                          STR_33 0F7F                            STR_25 0F81  
                          STR_17 0F4C                            STR_18 0F4C  
                          STR_26 0F76                            STR_34 0F14  
                          STR_19 0F72                            STR_27 0F7E  
                          STR_35 0F0B                            STR_28 0F3C  
                          STR_36 0F52                  __end_of___awmod 2BB0  
                          STR_29 0F85                  __end_of___lldiv 28B4  
                          ?_utoa 0064                  ___awdiv@divisor 0062  
                          _LATB2 007C52                  __end_of___lwdiv 3332  
                __end_of___lwmod 3562                            i2l234 3686  
                          i2l270 1A04                            i2l271 1A24  
                          i2l272 1A44                            i2l192 37DE  
                          i2l273 1A64                            i2l274 1A84  
                          i2l275 1AA4                            i2l268 19B8  
                          i2l269 19DE                            i2l548 008C  
                ___awdiv@counter 0064                            _TMR1H 000FCF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94              ___lmul@multiplicand 0071  
                 __CFG_FCMEN$OFF 000000             caltime_to_epoch@year 0085  
             __size_of_UART_init 0020            ringbuf_push@asciicode 0064  
                          _colon 00D2                 __end_of_OSC_init 3A34  
             __size_of_RTCC_init 002E               __size_of_RTCC_loop 007E  
               ringbuf_delete@rb 0001                __end_of_I2C_Start 37B2  
                          tablat 000FF5           ?_delay_timer_interrupt 0001  
     __size_of_ringbuf_backspace 0056                     _tx_send_time 21B0  
                          utoa@d 0069                            utoa@v 006A  
                          status 000FD8                  __end_of_tx_send 398A  
               __end_of_Delay_ms 3932                month_length@month 0022  
                 ?_I2C_LCD_Clear 0001                  __initialization 31E0  
                   __end_of_atoi 33F2                     __end_of_main 2424  
                   __end_of_utoa 2DA4              ringbuf_init@bufsize 0064  
               RTCC_from_RTCC@ep 008E                 RTCC_from_RTCC@ct 008C  
         __end_ofi2_ringbuf_push 2C68                    print_time@row 0090  
                         ??_atoi 0022                           ??_main 0023  
                         ??_utoa 0023                    __activetblptr 000003  
             __size_ofi2_tx_send 0016                           _BCL1IF 007D0B  
                  _I2C_IdleCheck 39D2                           _ADCON0 000FC2  
                         _ADCON1 000FC1                _I2C_LCD_SetCursor 3752  
                         _EECON2 000FA7                           _ANCON0 000F48  
                         _ANCON1 000F49                 ___awdiv@dividend 0060  
             I2C_LCD_Command@ans 0062                   __CFG_WDTEN$OFF 000000  
                         i2l5063 0062                           i2l5055 0054  
                         i2l4425 3596                           i2l1971 1B76  
                         i2l1963 1B1E                           i2l1955 1AC6  
                         i2l4259 3132                           i2l4541 2F50  
                         i2l1983 1BFA                           i2l1975 1BA2  
                         i2l1967 1B4A                           i2l1959 1AF2  
                         i2l4711 1ECA                           i2l4561 3368  
                         i2l1979 1BCE                           i2l1987 1C24  
                         i2l4547 2F54                           i2l4731 1F4A  
                         i2l4723 1F0C                           i2l4715 1EDC  
                         i2l4389 2C56                           i2l4557 3334  
                         i2l4741 1F7E                           i2l4733 1F50  
                         i2l4717 1EF0                           i2l4727 1F30  
                         i2l4751 1FB0                           i2l4761 1FE0  
                         i2l4737 1F5E                           i2l4753 1FCC  
                         i2l4771 2012                           i2l4773 2018  
                         i2l4765 1FF8                           i2l4757 1FD8  
                         i2l4777 2020                           i2l4769 2000  
             ?_I2C_LCD_SetCursor 0063                           _RCREG1 000FAF  
                         _RTCCAL 000F3E                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                  i2ringbuf_pop@rb 0005  
                i2ringbuf_num@rb 0001                   __CFG_WPDIS$OFF 000000  
             epoch_to_caltime@ep 008B               epoch_to_caltime@ct 0089  
            ??_I2C_LCD_SetCursor 0023                   __CFG_XINST$OFF 000000  
              ?_epoch_to_caltime 0089            caltime_to_epoch@epoch 0087  
                   ?_ringbuf_pop 0062                     ?_ringbuf_num 0020  
          caltime_to_epoch@month 008B                           ___lmul 2FE6  
                _caltime_to_RTCC 2A3A               ??_epoch_to_caltime 008D  
              __end_of_UART_init 3952                        ??___awdiv 0020  
                      ??___awmod 0020                           _d_to_x 389A  
                      ??___lldiv 0020                __end_of_RTCC_init 383E  
                   ?_timer1_init 0020                        ??___lwdiv 0020  
              __end_of_RTCC_loop 30EA                        ??___lwmod 0020  
                   ?_timer3_init 0001                  ?i2_ringbuf_push 0005  
                         clear_0 31E6                           clear_1 31F2  
                         clear_2 31FE                           clear_3 320A  
                __CFG_CLKOEC$OFF 000000                 ___awdiv@quotient 0066  
                ___awmod@divisor 0062                      ?i2_tx_sends 000D  
                ___awmod@counter 0020                           _x_to_d 39A4  
                         _rx_buf 0026       __size_of_RTCC_from_caltime 002E  
                         _tx_buf 002B             __size_of_display_dec 005E  
                         _strcmp 2C68        __size_of_caltime_to_epoch 0340  
                   __pdataCOMRAM 0037                        ?_I2C_Send 0001  
                      ?_I2C_Stop 0001                     __mediumconst 0000  
                      ?_I2C_init 0001        __end_of_I2C_LCD_SetCursor 3782  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                   ?_I2C_IdleCheck 0001  
         delay_timer_interrupt@d 0001                        ??_tx_send 0022  
               __end_of_tx_sends 32C8             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 3250  
           __end_of_display_time 21B0             __end_of_get_quot_rem 2622  
                ??_I2C_LCD_Clear 0063                  _RTCC_from_epoch 383E  
           rx_operation@cnt_char 0091                __end_ofi2_tx_send 3A14  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                   __pidataBANK0 38E8                        ?_OSC_init 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 36EE  
               I2C_LCD_Command@c 0061                       ??_I2C_Send 0022  
                     ??_I2C_Stop 0022          __size_of_ringbuf_delete 001E  
                     ??_I2C_init 0020                        ?_Delay_ms 0020  
        i2ringbuf_push@asciicode 0007       caltime_to_epoch@month_2018 0086  
             __size_of_main_init 0090                       __pbssBANK0 00D0  
                     __pbssBANK5 0500                       __pbssBANK6 0600  
                 judgement@ascii 000F                _RTCC_time_set_inc 168C  
            __size_ofi2_tx_sends 0062          __end_of_caltime_to_RTCC 2AF8  
                _RTCC_to_caltime 28B4                     ?_tx_send_dec 006C  
             ?_RTCC_time_set_inc 009F                 ??_interrupt_TXIF 000B  
             __size_of_judgement 018A                          ?___lmul 006D  
            ??_RTCC_time_set_inc 00A3                          ?_d_to_x 0001  
                     ??_OSC_init 0020             I2C_LCD_SetCursor@col 0066  
                 ___lmul@product 0075             I2C_LCD_SetCursor@row 0063  
                        ?_x_to_d 0001                     I2C_Send@data 0022  
                        ?_strcmp 0060               __CFG_OSC$INTOSCPLL 000000  
                ??_I2C_IdleCheck 0020     __end_of_RTCC_time_set_cursor 3660  
                     ??_Delay_ms 0022       __size_of_I2C_LCD_SetCursor 0030  
   __end_of_RTCC_time_set_toggle 39FE           I2C_LCD_SetCursor@F9850 0037  
                __CFG_WDTPS$1024 000000                          _SPBRGH1 000F7F  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                        _RTCVALH 000F3B                          _RTCVALL 000F3A  
        ??_delay_timer_interrupt 0003        __end_of_RTCC_time_set_inc 1988  
        __end_of_RTCC_from_epoch 386C             timer1_init@prescaler 0022  
               i2ringbuf_pop@ret 000A                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                 i2ringbuf_push@rb 0005  
                  ?_month_length 0022              epoch_to_caltime@day 0093  
              RTCC_from_epoch@ep 009D                RTCC_from_epoch@ct 009B  
            epoch_to_caltime@num 0097                        _I2C_Start 3782  
                        __Hparam 0000                          __Lparam 0000  
        __end_of_I2C_LCD_Command 3720                    ?_ringbuf_init 0060  
                        ___awdiv 2622                  __size_of___lmul 0086  
                        ___awmod 2AF8                    ?_ringbuf_push 0062  
                        ___lldiv 27E0                          ___lwdiv 32C8  
                        ___lwmod 3508                  __size_of_d_to_x 0028  
                   __psmallconst 0F00             __size_of_ringbuf_pop 00BE  
           __size_of_ringbuf_num 008E                  __CFG_STVREN$OFF 000000  
              __end_of_main_init 2EC8      epoch_to_caltime@month_cache 00CB  
                        __pcinit 31E0                        ?_tx_sends 006A  
                        __ramtop 0F00             __size_of_timer1_init 0044  
                        __ptext0 22FC                          __ptext1 0F8E  
                        __ptext2 2C68                          __ptext3 297C  
                        __ptext4 3394                          __ptext5 37E2  
                        __ptext6 3168                          __ptext7 21B0  
                        __ptext8 33F2                          __ptext9 3256  
                  I2C_LCD_Putc@c 0061             __size_of_timer3_init 0026  
                __size_of_x_to_d 0018                    I2C_LCD_Puts@s 0061  
                      _T0CONbits 000FD5                 _time_change_flag 00D4  
               _caltime_to_epoch 134C                  __size_of_strcmp 00A8  
                   __size_of_ISR 00BE                        _T1CONbits 000FCD  
        __size_of_RTCC_from_RTCC 002E                        _T3CONbits 000F79  
               ___awmod@dividend 0060                        _T5CONbits 000F22  
              __end_of_judgement 2040                          atoi@ret 0060  
                        _rx_flag 0025                          atoi@str 0020  
        __end_of_RTCC_to_caltime 297C                          _tx_send 3970  
          __size_of_display_time 0170            __size_of_get_quot_rem 00FE  
           end_of_initialization 3250           __size_ofi2_ringbuf_pop 0090  
         __size_ofi2_ringbuf_num 007E                     _CTMUCONHbits 000FB3  
                   _CTMUCONLbits 000FB2                   ??_month_length 0064  
                 display_dec@dec 0077                   display_dec@str 006D  
               ?_caltime_to_RTCC 0021                       ?_I2C_Start 0022  
                ___lldiv@divisor 0064             timer3_init@prescaler 0021  
                ___lldiv@counter 006C                 ??i2_ringbuf_push 0008  
                 tx_send_dec@dec 0077                   tx_send_dec@str 006D  
                 ??_ringbuf_init 0020                   ??_ringbuf_push 0065  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
                 display_time@ep 0092                   display_time@ct 0090  
                        utoa@str 0064                     ??i2_tx_sends 000F  
                     ??_tx_sends 0022                        _PORTAbits 000F80  
                      _UART_init 3932                 __CFG_DSBOREN$OFF 000000  
                      _RTCC_init 3810                        _RTCC_loop 306C  
                   _display_flag 0024        epoch_to_caltime@day_cache 00D0  
                   _display_time 2040                     _get_quot_rem 2524  
                     _print_time 3168                   _ringbuf_delete 3952  
                  rx_operation@i 0092        __size_of_epoch_to_caltime 026C  
               __CFG_CPUDIV$OSC1 000000              RTCC_from_caltime@ep 008E  
            RTCC_from_caltime@ct 008C                __size_of_I2C_Send 0016  
              __size_of_I2C_Stop 000A                __size_of_I2C_init 0012  
     __size_of_RTCC_time_set_inc 02FC                 ?_RTCC_from_epoch 009B  
__size_of_button_timer_interrupt 02C2          timer1_init@clock_select 0020  
            i2tx_sends@asciicode 000D                 __CFG_IOL1WAY$OFF 000000  
             __end_ofi2_tx_sends 3394             __size_of_tx_send_dec 005E  
           _RTCC_time_set_cursor 360C              __CFG_MSSP7B_EN$MSK7 000000  
               ?_I2C_LCD_Command 0001                   ringbuf_init@rb 0060  
                    print_time@i 0091             _RTCC_time_set_toggle 39E8  
                      i2_tx_send 39FE                   ringbuf_pop@ret 0022  
                  ??_display_dec 0023                    i2_ringbuf_pop 2EC8  
                  i2_ringbuf_num 30EA                   __end_of___lmul 306C  
                 ringbuf_push@rb 0062                   __end_of_d_to_x 38C2  
                  __pidataCOMRAM 3A34           __end_of_ringbuf_delete 3970  
                     ?_UART_init 0001                       ?_RTCC_init 0001  
              __size_of_OSC_init 000E                       ?_RTCC_loop 0001  
               __CFG_DSWDTEN$OFF 000000                   __end_of_x_to_d 39BC  
          epoch_to_caltime@month 0096                   __end_of_strcmp 2D10  
            start_initialization 31E0                 month_length@year 0068  
                    __end_of_ISR 00C6                    ?_I2C_LCD_Putc 0001  
                  ?_I2C_LCD_Puts 0061                    ?_I2C_LCD_init 0001  
              __size_of_Delay_ms 0024                 ?_RTCC_to_caltime 0060  
                  ?_rx_operation 0001                      ??_I2C_Start 0023  
          ?_RTCC_time_set_cursor 0001            __end_of_I2C_LCD_Clear 39A4  
          ?_RTCC_time_set_toggle 0001                         ??___lmul 0023  
                 ?i2_ringbuf_pop 0005                   ?i2_ringbuf_num 0001  
                       ??_d_to_x 0020                       ?i2_tx_send 0001  
              __CFG_ADCSEL$BIT12 000000                      __pdataBANK0 00AB  
         _button_timer_interrupt 1988                         ??_x_to_d 0020  
                ?_ringbuf_delete 0001                         ??_strcmp 0020  
           __end_of_month_length 27E0                   _RTCC_from_RTCC 386C  
                    ?_print_time 0001              __end_of_display_dec 34AE  
                    __pbssCOMRAM 0023              RTCC_to_caltime@dumy 0022  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
                  __pcstackBANK2 0200                    __pcstackBANK3 0300  
                  __pcstackBANK4 0400                   ??_I2C_LCD_Putc 0023  
                 ??_I2C_LCD_Puts 0063                   ??_I2C_LCD_init 0023  
            __end_of__stringdata 0F8D                      _caltime_now 00D6  
           __end_of_ringbuf_init 3508             __end_of_ringbuf_push 2524  
               tx_send@asciicode 0022              rx_operation@opland1 0300  
            rx_operation@opland2 0400                       judgement@i 0010  
 __size_of_delay_timer_interrupt 004A    __end_of_delay_timer_interrupt 36AA  
                  ?_tx_send_time 0001                   ??_rx_operation 0090  
       __end_of_caltime_to_epoch 168C                         ISR@ascii 001F  
               ___lwdiv@dividend 0060                        _edit_flag 00D3  
                      __pintcode 0008                         ?___awdiv 0060  
                       ?___awmod 0060                         ?___lldiv 0060  
                       ?___lwdiv 0060                         ?___lwmod 0060  
                I2C_LCD_Putc@ans 0062                     _cursor_right 00CC  
         __end_of_RTCC_from_RTCC 389A                  I2C_LCD_Puts@ans 0064  
                    ??_UART_init 0020                      ??_RTCC_init 0020  
                    ??_RTCC_loop 0020                      __smallconst 0F00  
              __size_of_tx_sends 0072                        _epoch_now 00DD  
                      _main_init 2E38                      I2C_Start@rw 0022  
               _epoch_to_caltime 1C4A                         _I2C_Send 39BC  
                       _I2C_Stop 3A3E             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_init 3A14            __end_of_I2C_IdleCheck 39E8  
                    _PADCFG1bits 000F3C              ringbuf_backspace@rb 0005  
               ___lwdiv@quotient 0021                         ?_tx_send 0001  
                      _cursor_up 003D                   ??_tx_send_time 0023  
                      d_to_x@dec 0020                         _CTMUCONH 000FB3  
                       _CTMUCONL 000FB2                        _judgement 1EB6  
                       _CTMUICON 000FB1         ringbuf_init@internal_buf 0062  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D           ??_RTCC_time_set_cursor 0020  
                       _PIE2bits 000FA0                         _IPR5bits 000F99  
                       _PIE5bits 000F91           ??_RTCC_time_set_toggle 0020  
            __size_of_print_time 0078                  ??i2_ringbuf_pop 0007  
                ??i2_ringbuf_num 0003                         _PIR1bits 000F9E  
                       i2u427_40 335E                         _PIR2bits 000FA1  
                       i2u427_47 3354                         i2u428_40 338A  
                       i2u428_47 3380                         _PIR5bits 000F98  
     epoch_to_caltime@year_cache 00D5                         i2u496_40 0078  
                       i2u496_46 007A                    ??_ringbuf_pop 0064  
                  ??_ringbuf_num 0060                         _UCFGbits 000F39  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer1_init 0021                      ??i2_tx_send 000D  
                  ??_timer3_init 0020                         _SSP1STAT 000FC7  
                    _display_dec 3450                         _OSC_init 3A26  
                ?_RTCC_from_RTCC 008C                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                      __stringdata 0F01  
               __CFG_SOSCSEL$LOW 000000   button_timer_interrupt@sw_value 0003  
        __size_of_interrupt_TXIF 0030                       ?_main_init 0001  
                       _Delay_ms 390E                    ringbuf_pop@rb 0062  
                  ringbuf_num@rb 0020                    I2C_Start@adrs 0060  
              ___lmul@multiplier 006D                      _INTCON2bits 000FF1  
                      copy_data0 3224                        copy_data1 3244  
           epoch_to_caltime@year 0095                       ?_judgement 0001  
                       __Hrparam 0000                         __Lrparam 0000  
           __end_of_I2C_LCD_Putc 3752             __end_of_I2C_LCD_Puts 2E38  
           __end_of_I2C_LCD_init 360C            __size_of_month_length 00DC  
       __size_of_caltime_to_RTCC 00BE                 __size_of___awdiv 00E2  
               __size_of___awmod 00B8                I2C_IdleCheck@mask 0021  
               __size_of___lldiv 00D4                       utoa@digits 0068  
               __size_of___lwdiv 006A              RTCC_time_set_inc@ep 00A1  
            RTCC_time_set_inc@ct 009F                 __size_of___lwmod 005A  
              tx_sends@asciicode 006A              __end_of_ringbuf_pop 2A3A  
            __end_of_ringbuf_num 2FE6             __end_of_rx_operation 134C  
             rx_operation@opcode 0100            __size_of_ringbuf_init 005A  
            __end_of_timer1_init 36EE              __end_of_timer3_init 38E8  
          __size_of_ringbuf_push 0100                  ___lwdiv@divisor 0062  
                ___lwdiv@counter 0020                         __ptext10 3970  
                       __ptext11 2424                         __ptext20 3A14  
                       __ptext12 2F58                         __ptext21 35B8  
                       __ptext13 2E38                         __ptext30 3752  
                       __ptext22 398A                         __ptext14 38C2  
                       __ptext31 36EE                         __ptext23 390E  
                       __ptext15 36AA                         __ptext40 1C4A  
                       __ptext32 3720                         __ptext24 2040  
                       __ptext16 34AE                         __ptext41 2524  
                       __ptext33 3A3E                         __ptext25 3450  
                       __ptext17 3932                         __ptext50 2FE6  
                       __ptext42 27E0                         __ptext34 3782  
                       __ptext26 2D10                         __ptext18 3810  
                       __ptext51 28B4                         __ptext43 2A3A  
                       __ptext35 39BC                         __ptext27 3508  
                       __ptext19 3A26                         __ptext60 3952  
                       __ptext52 39A4                         __ptext44 389A  
                       __ptext36 39D2                         __ptext28 32C8  
                       __ptext61 3562                         __ptext53 360C  
                       __ptext45 2622                         __ptext37 39E8  
                       __ptext29 2DA4                         __ptext62 37B2  
                       __ptext54 306C                         __ptext46 386C  
                       __ptext38 168C                         __ptext63 2EC8  
                       __ptext47 134C                         __ptext39 383E  
                       __ptext64 30EA                         __ptext56 1EB6  
                       __ptext48 2704                         __ptext65 3660  
                       __ptext57 3332                         __ptext49 2AF8  
                       __ptext66 1988                         __ptext58 39FE  
                       __ptext59 2BB0                      _cursor_left 00C7  
                    _cursor_down 0039                     _SSP1CON2bits 000FC5  
                     strcmp@str1 0060                       strcmp@str2 0062  
          RTCC_loop@prev_halfsec 0023                 __size_of_tx_send 001A  
                  __size_of_atoi 005E                    __size_of_main 0128  
                  ??_tx_send_dec 0023                    __size_of_utoa 0094  
                   _month_length 2704         __size_of_RTCC_from_epoch 002E  
               ??_ringbuf_delete 0003          ?_button_timer_interrupt 0001  
                   _ringbuf_init 34AE                     _ringbuf_push 2424  
                      x_to_d@hex 0021                         _tx_sends 3256  
           __end_of_tx_send_time 22FC          __size_ofi2_ringbuf_push 00B8  
       __size_of_I2C_LCD_Command 0032                     ??_print_time 0023  
                 main_init@rxbuf 0600                   main_init@txbuf 0500  
                    ??_main_init 0023                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2     I2C_LCD_SetCursor@row_offsets 0064  
                     Delay_ms@ms 0020                  display_dec@edit 006C  
               get_quot_rem@quot 0079               RTCC_time_set_inc@i 00AA  
              RTCC_to_caltime@ct 0060                     _weekday_char 00AB  
                      utoa@value 0066                         intlevel2 0000  
                    ??_judgement 000F                 ___lwmod@dividend 0060  
               ___lldiv@dividend 0060                       _RCSTA1bits 000FAC  
              ?_caltime_to_epoch 0079                _ringbuf_backspace 3562  
       __end_of_epoch_to_caltime 1EB6         __size_of_RTCC_to_caltime 00C8  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 1C4A  
                tx_send_dec@edit 006C               __end_of_print_time 31E0  
             ??_caltime_to_epoch 007D               ?_ringbuf_backspace 0005  
                    _ringbuf_pop 297C                      _ringbuf_num 2F58  
            __end_of_tx_send_dec 3450                      _timer1_init 36AA  
                    _timer3_init 38C2              ??_ringbuf_backspace 0007  
                get_quot_rem@div 007B                  get_quot_rem@num 0085  
                     _RTCCFGbits 000F3F                   _interrupt_TXIF 37B2  
               ___lldiv@quotient 0068                caltime_to_RTCC@ct 0021  
                ___lwmod@divisor 0062                ??_caltime_to_RTCC 0023  
                ___lwmod@counter 0020           __size_of_I2C_LCD_Clear 001A  
epoch_to_caltime@day_since_epoch 0091                  rx_operation@cmd 0200  
      __end_of_ringbuf_backspace 35B8            __size_of_I2C_LCD_Putc 0032  
          __size_of_I2C_LCD_Puts 0094            _delay_timer_interrupt 3660  
          __size_of_I2C_LCD_init 0054               i2tx_send@asciicode 000D  
               ??_RTCC_from_RTCC 0023  
