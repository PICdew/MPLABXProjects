

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Oct 09 12:59:20 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   116                           	dabs	1,0xD00,48,_BDT
   117                           	dabs	1,0xD38,8,_CtrlTrfData
   118                           	dabs	1,0xD30,8,_SetupPkt
   119  0000                     
   120                           	psect	idataBANK0
   121  001014                     __pidataBANK0:
   122                           	opt stack 0
   123                           
   124                           ;initializer for epoch_to_caltime@month_cache
   125  001014  01                 	db	1
   126                           
   127                           	psect	idataBANK1
   128  001012                     __pidataBANK1:
   129                           	opt stack 0
   130                           
   131                           ;initializer for I2C_LCD_SetCursor@F9811
   132  001012  00                 	db	0
   133  001013  40                 	db	64
   134                           
   135                           	psect	mediumconst
   136  00FDA0                     __pmediumconst:
   137                           	opt stack 0
   138  00FDA0  00                 	db	0
   139  00FDA1                     _dpowers:
   140                           	opt stack 0
   141  00FDA1  0001               	dw	1
   142  00FDA3  000A               	dw	10
   143  00FDA5  0064               	dw	100
   144  00FDA7  03E8               	dw	1000
   145  00FDA9  2710               	dw	10000
   146  00FDAB                     __end_of_dpowers:
   147                           	opt stack 0
   148  00FDAB                     _USB_SD_Ptr:
   149                           	opt stack 0
   150  00FDAB  8C                 	db	low _sd000
   151  00FDAC  FE                 	db	high _sd000
   152  00FDAD  F6                 	db	low _sd001
   153  00FDAE  FD                 	db	high _sd001
   154  00FDAF  2A                 	db	low _sd002
   155  00FDB0  FE                 	db	high _sd002
   156  00FDB1                     __end_of_USB_SD_Ptr:
   157                           	opt stack 0
   158  00FDB1                     _USB_CD_Ptr:
   159                           	opt stack 0
   160  00FDB1  B3                 	db	low _configDescriptor1
   161  00FDB2  FD                 	db	high _configDescriptor1
   162  00FDB3                     __end_of_USB_CD_Ptr:
   163                           	opt stack 0
   164  00FDB3                     _configDescriptor1:
   165                           	opt stack 0
   166  00FDB3  09                 	db	9
   167  00FDB4  02                 	db	2
   168  00FDB5  43                 	db	67
   169  00FDB6  00                 	db	0
   170  00FDB7  02                 	db	2
   171  00FDB8  01                 	db	1
   172  00FDB9  00                 	db	0
   173  00FDBA  C0                 	db	192
   174  00FDBB  32                 	db	50
   175  00FDBC  09                 	db	9
   176  00FDBD  04                 	db	4
   177  00FDBE  00                 	db	0
   178  00FDBF  00                 	db	0
   179  00FDC0  01                 	db	1
   180  00FDC1  02                 	db	2
   181  00FDC2  02                 	db	2
   182  00FDC3  01                 	db	1
   183  00FDC4  00                 	db	0
   184  00FDC5  05                 	db	5
   185  00FDC6  24                 	db	36
   186  00FDC7  00                 	db	0
   187  00FDC8  10                 	db	16
   188  00FDC9  01                 	db	1
   189  00FDCA  04                 	db	4
   190  00FDCB  24                 	db	36
   191  00FDCC  02                 	db	2
   192  00FDCD  02                 	db	2
   193  00FDCE  05                 	db	5
   194  00FDCF  24                 	db	36
   195  00FDD0  06                 	db	6
   196  00FDD1  00                 	db	0
   197  00FDD2  01                 	db	1
   198  00FDD3  05                 	db	5
   199  00FDD4  24                 	db	36
   200  00FDD5  01                 	db	1
   201  00FDD6  00                 	db	0
   202  00FDD7  01                 	db	1
   203  00FDD8  07                 	db	7
   204  00FDD9  05                 	db	5
   205  00FDDA  81                 	db	129
   206  00FDDB  03                 	db	3
   207  00FDDC  08                 	db	8
   208  00FDDD  00                 	db	0
   209  00FDDE  02                 	db	2
   210  00FDDF  09                 	db	9
   211  00FDE0  04                 	db	4
   212  00FDE1  01                 	db	1
   213  00FDE2  00                 	db	0
   214  00FDE3  02                 	db	2
   215  00FDE4  0A                 	db	10
   216  00FDE5  00                 	db	0
   217  00FDE6  00                 	db	0
   218  00FDE7  00                 	db	0
   219  00FDE8  07                 	db	7
   220  00FDE9  05                 	db	5
   221  00FDEA  02                 	db	2
   222  00FDEB  02                 	db	2
   223  00FDEC  40                 	db	64
   224  00FDED  00                 	db	0
   225  00FDEE  00                 	db	0
   226  00FDEF  07                 	db	7
   227  00FDF0  05                 	db	5
   228  00FDF1  82                 	db	130
   229  00FDF2  02                 	db	2
   230  00FDF3  40                 	db	64
   231  00FDF4  00                 	db	0
   232  00FDF5  00                 	db	0
   233  00FDF6                     __end_of_configDescriptor1:
   234                           	opt stack 0
   235  00FDF6                     _sd001:
   236                           	opt stack 0
   237  00FDF6  34                 	db	52
   238  00FDF7  03                 	db	3
   239  00FDF8  004D               	dw	77
   240  00FDFA  0069               	dw	105
   241  00FDFC  0063               	dw	99
   242  00FDFE  0072               	dw	114
   243  00FE00  006F               	dw	111
   244  00FE02  0063               	dw	99
   245  00FE04  0068               	dw	104
   246  00FE06  0069               	dw	105
   247  00FE08  0070               	dw	112
   248  00FE0A  0020               	dw	32
   249  00FE0C  0054               	dw	84
   250  00FE0E  0065               	dw	101
   251  00FE10  0063               	dw	99
   252  00FE12  0068               	dw	104
   253  00FE14  006E               	dw	110
   254  00FE16  006F               	dw	111
   255  00FE18  006C               	dw	108
   256  00FE1A  006F               	dw	111
   257  00FE1C  0067               	dw	103
   258  00FE1E  0079               	dw	121
   259  00FE20  0020               	dw	32
   260  00FE22  0049               	dw	73
   261  00FE24  006E               	dw	110
   262  00FE26  0063               	dw	99
   263  00FE28  002E               	dw	46
   264  00FE2A                     __end_of_sd001:
   265                           	opt stack 0
   266  00FE2A                     _sd002:
   267                           	opt stack 0
   268  00FE2A  34                 	db	52
   269  00FE2B  03                 	db	3
   270  00FE2C  0043               	dw	67
   271  00FE2E  0044               	dw	68
   272  00FE30  0043               	dw	67
   273  00FE32  0020               	dw	32
   274  00FE34  0052               	dw	82
   275  00FE36  0053               	dw	83
   276  00FE38  002D               	dw	45
   277  00FE3A  0032               	dw	50
   278  00FE3C  0033               	dw	51
   279  00FE3E  0032               	dw	50
   280  00FE40  0020               	dw	32
   281  00FE42  0045               	dw	69
   282  00FE44  006D               	dw	109
   283  00FE46  0075               	dw	117
   284  00FE48  006C               	dw	108
   285  00FE4A  0061               	dw	97
   286  00FE4C  0074               	dw	116
   287  00FE4E  0069               	dw	105
   288  00FE50  006F               	dw	111
   289  00FE52  006E               	dw	110
   290  00FE54  0020               	dw	32
   291  00FE56  0044               	dw	68
   292  00FE58  0065               	dw	101
   293  00FE5A  006D               	dw	109
   294  00FE5C  006F               	dw	111
   295  00FE5E                     __end_of_sd002:
   296                           	opt stack 0
   297  00FE5E                     _weekday_3char:
   298                           	opt stack 0
   299  00FE5E  53                 	db	83
   300  00FE5F  55                 	db	85
   301  00FE60  4E                 	db	78
   302  00FE61  00                 	db	0
   303  00FE62  4D                 	db	77
   304  00FE63  4F                 	db	79
   305  00FE64  4E                 	db	78
   306  00FE65  00                 	db	0
   307  00FE66  54                 	db	84
   308  00FE67  55                 	db	85
   309  00FE68  45                 	db	69
   310  00FE69  00                 	db	0
   311  00FE6A  57                 	db	87
   312  00FE6B  45                 	db	69
   313  00FE6C  44                 	db	68
   314  00FE6D  00                 	db	0
   315  00FE6E  54                 	db	84
   316  00FE6F  48                 	db	72
   317  00FE70  55                 	db	85
   318  00FE71  00                 	db	0
   319  00FE72  46                 	db	70
   320  00FE73  52                 	db	82
   321  00FE74  49                 	db	73
   322  00FE75  00                 	db	0
   323  00FE76  53                 	db	83
   324  00FE77  41                 	db	65
   325  00FE78  54                 	db	84
   326  00FE79  00                 	db	0
   327  00FE7A                     __end_of_weekday_3char:
   328                           	opt stack 0
   329  00FE7A                     _device_dsc:
   330                           	opt stack 0
   331  00FE7A  12                 	db	18
   332  00FE7B  01                 	db	1
   333  00FE7C  0200               	dw	512
   334  00FE7E  02                 	db	2
   335  00FE7F  00                 	db	0
   336  00FE80  00                 	db	0
   337  00FE81  08                 	db	8
   338  00FE82  04D8               	dw	1240
   339  00FE84  000A               	dw	10
   340  00FE86  0100               	dw	256
   341  00FE88  01                 	db	1
   342  00FE89  02                 	db	2
   343  00FE8A  00                 	db	0
   344  00FE8B  01                 	db	1
   345  00FE8C                     __end_of_device_dsc:
   346                           	opt stack 0
   347  00FE8C                     _sd000:
   348                           	opt stack 0
   349  00FE8C  04                 	db	4
   350  00FE8D  03                 	db	3
   351  00FE8E  0409               	dw	1033
   352  00FE90                     __end_of_sd000:
   353                           	opt stack 0
   354  0000                     _ANCON0	set	3912
   355  0000                     _ANCON1	set	3913
   356  0000                     _PADCFG1bits	set	3900
   357  0000                     _RTCCAL	set	3902
   358  0000                     _RTCCFGbits	set	3903
   359  0000                     _RTCVALH	set	3899
   360  0000                     _RTCVALL	set	3898
   361  0000                     _T5CONbits	set	3874
   362  0000                     _UADDR	set	3896
   363  0000                     _UCFG	set	3897
   364  0000                     _UEIE	set	3895
   365  0000                     _UEP0bits	set	3878
   366  0000                     _UIE	set	3894
   367  0000                     _UIEbits	set	3894
   368  0000                     _UEP0	set	3878
   369  0000                     _UEP1	set	3879
   370  0000                     _ADRES	set	4035
   371  0000                     _ADCON0bits	set	4034
   372  0000                     _ADCON1bits	set	4033
   373  0000                     _BAUDCON1bits	set	3966
   374  0000                     _CTMUCONH	set	4019
   375  0000                     _CTMUCONHbits	set	4019
   376  0000                     _CTMUCONL	set	4018
   377  0000                     _CTMUCONLbits	set	4018
   378  0000                     _CTMUICON	set	4017
   379  0000                     _EECON2	set	4007
   380  0000                     _INTCON2bits	set	4081
   381  0000                     _INTCONbits	set	4082
   382  0000                     _IPR1bits	set	3999
   383  0000                     _IPR2bits	set	4002
   384  0000                     _IPR5bits	set	3993
   385  0000                     _LATAbits	set	3977
   386  0000                     _OSCCONbits	set	4051
   387  0000                     _OSCTUNEbits	set	3995
   388  0000                     _PIE1bits	set	3997
   389  0000                     _PIE2bits	set	4000
   390  0000                     _PIE5bits	set	3985
   391  0000                     _PIR1bits	set	3998
   392  0000                     _PIR2bits	set	4001
   393  0000                     _PIR5bits	set	3992
   394  0000                     _RCONbits	set	4048
   395  0000                     _RCREG1	set	4015
   396  0000                     _RCSTA1bits	set	4012
   397  0000                     _SPBRG1	set	4016
   398  0000                     _SPBRGH1	set	3967
   399  0000                     _SSP1ADD	set	4040
   400  0000                     _SSP1BUF	set	4041
   401  0000                     _SSP1CON1	set	4038
   402  0000                     _SSP1CON1bits	set	4038
   403  0000                     _SSP1CON2	set	4037
   404  0000                     _SSP1CON2bits	set	4037
   405  0000                     _SSP1STAT	set	4039
   406  0000                     _SSP1STATbits	set	4039
   407  0000                     _T0CONbits	set	4053
   408  0000                     _T1CONbits	set	4045
   409  0000                     _T3CONbits	set	3961
   410  0000                     _TMR1H	set	4047
   411  0000                     _TRISA	set	3986
   412  0000                     _TRISB	set	3987
   413  0000                     _TRISC	set	3988
   414  0000                     _TXREG1	set	4014
   415  0000                     _TXSTA1bits	set	4013
   416  0000                     _UCON	set	3941
   417  0000                     _UCONbits	set	3941
   418  0000                     _UEIR	set	3939
   419  0000                     _UIR	set	3938
   420  0000                     _UIRbits	set	3938
   421  0000                     _USTAT	set	3940
   422  0000                     _BCL1IF	set	32011
   423  0000                     _LATB2	set	31826
   424  0000                     _SSP1IF	set	31987
   425  00FE90                     STR_43:
   426                           
   427                           ; BSR set to: 0
   428  00FE90  09                 	db	9
   429  00FE91  2A                 	db	42
   430  00FE92  2A                 	db	42
   431  00FE93  2A                 	db	42
   432  00FE94  2A                 	db	42
   433  00FE95  2A                 	db	42
   434  00FE96  2A                 	db	42
   435  00FE97  2A                 	db	42
   436  00FE98  2A                 	db	42
   437  00FE99  20                 	db	32
   438  00FE9A  50                 	db	80	;'P'
   439  00FE9B  49                 	db	73	;'I'
   440  00FE9C  43                 	db	67	;'C'
   441  00FE9D  31                 	db	49	;'1'
   442  00FE9E  38                 	db	56	;'8'
   443  00FE9F  46                 	db	70	;'F'
   444  00FEA0  32                 	db	50	;'2'
   445  00FEA1  37                 	db	55	;'7'
   446  00FEA2  4A                 	db	74	;'J'
   447  00FEA3  35                 	db	53	;'5'
   448  00FEA4  33                 	db	51	;'3'
   449  00FEA5  20                 	db	32
   450  00FEA6  2A                 	db	42
   451  00FEA7  2A                 	db	42
   452  00FEA8  2A                 	db	42
   453  00FEA9  2A                 	db	42
   454  00FEAA  2A                 	db	42
   455  00FEAB  2A                 	db	42
   456  00FEAC  2A                 	db	42
   457  00FEAD  2A                 	db	42
   458  00FEAE  0A                 	db	10
   459  00FEAF  09                 	db	9
   460  00FEB0  70                 	db	112	;'p'
   461  00FEB1  72                 	db	114	;'r'
   462  00FEB2  69                 	db	105	;'i'
   463  00FEB3  6E                 	db	110	;'n'
   464  00FEB4  74                 	db	116	;'t'
   465  00FEB5  5F                 	db	95	;'_'
   466  00FEB6  74                 	db	116	;'t'
   467  00FEB7  69                 	db	105	;'i'
   468  00FEB8  6D                 	db	109	;'m'
   469  00FEB9  65                 	db	101	;'e'
   470  00FEBA  28                 	db	40
   471  00FEBB  74                 	db	116	;'t'
   472  00FEBC  29                 	db	41
   473  00FEBD  0A                 	db	10
   474  00FEBE  09                 	db	9
   475  00FEBF  61                 	db	97	;'a'
   476  00FEC0  64                 	db	100	;'d'
   477  00FEC1  6A                 	db	106	;'j'
   478  00FEC2  75                 	db	117	;'u'
   479  00FEC3  73                 	db	115	;'s'
   480  00FEC4  74                 	db	116	;'t'
   481  00FEC5  5F                 	db	95	;'_'
   482  00FEC6  74                 	db	116	;'t'
   483  00FEC7  69                 	db	105	;'i'
   484  00FEC8  6D                 	db	109	;'m'
   485  00FEC9  65                 	db	101	;'e'
   486  00FECA  28                 	db	40
   487  00FECB  61                 	db	97	;'a'
   488  00FECC  74                 	db	116	;'t'
   489  00FECD  29                 	db	41
   490  00FECE  20                 	db	32
   491  00FECF  5B                 	db	91	;'['
   492  00FED0  68                 	db	104	;'h'
   493  00FED1  61                 	db	97	;'a'
   494  00FED2  6E                 	db	110	;'n'
   495  00FED3  64                 	db	100	;'d'
   496  00FED4  3A                 	db	58	;':'
   497  00FED5  79                 	db	121	;'y'
   498  00FED6  2C                 	db	44
   499  00FED7  4D                 	db	77	;'M'
   500  00FED8  2C                 	db	44
   501  00FED9  64                 	db	100	;'d'
   502  00FEDA  2C                 	db	44
   503  00FEDB  68                 	db	104	;'h'
   504  00FEDC  2C                 	db	44
   505  00FEDD  6D                 	db	109	;'m'
   506  00FEDE  2C                 	db	44
   507  00FEDF  73                 	db	115	;'s'
   508  00FEE0  5D                 	db	93	;']'
   509  00FEE1  20                 	db	32
   510  00FEE2  5B                 	db	91	;'['
   511  00FEE3  76                 	db	118	;'v'
   512  00FEE4  61                 	db	97	;'a'
   513  00FEE5  6C                 	db	108	;'l'
   514  00FEE6  75                 	db	117	;'u'
   515  00FEE7  65                 	db	101	;'e'
   516  00FEE8  28                 	db	40
   517  00FEE9  64                 	db	100	;'d'
   518  00FEEA  65                 	db	101	;'e'
   519  00FEEB  63                 	db	99	;'c'
   520  00FEEC  69                 	db	105	;'i'
   521  00FEED  6D                 	db	109	;'m'
   522  00FEEE  61                 	db	97	;'a'
   523  00FEEF  6C                 	db	108	;'l'
   524  00FEF0  29                 	db	41
   525  00FEF1  5D                 	db	93	;']'
   526  00FEF2  0A                 	db	10
   527  00FEF3  09                 	db	9
   528  00FEF4  52                 	db	82	;'R'
   529  00FEF5  45                 	db	69	;'E'
   530  00FEF6  53                 	db	83	;'S'
   531  00FEF7  45                 	db	69	;'E'
   532  00FEF8  54                 	db	84	;'T'
   533  00FEF9  28                 	db	40
   534  00FEFA  29                 	db	41
   535  00FEFB  3B                 	db	59	;';'
   536  00FEFC  0A                 	db	10
   537  00FEFD  09                 	db	9
   538  00FEFE  62                 	db	98	;'b'
   539  00FEFF  6F                 	db	111	;'o'
   540  00FF00  6F                 	db	111	;'o'
   541  00FF01  74                 	db	116	;'t'
   542  00FF02  6C                 	db	108	;'l'
   543  00FF03  6F                 	db	111	;'o'
   544  00FF04  61                 	db	97	;'a'
   545  00FF05  64                 	db	100	;'d'
   546  00FF06  0A                 	db	10
   547  00FF07  00                 	db	0
   548  00FF08                     STR_23:
   549                           
   550                           ; BSR set to: 0
   551  00FF08  09                 	db	9
   552  00FF09  32                 	db	50	;'2'
   553  00FF0A  30                 	db	48	;'0'
   554  00FF0B  25                 	db	37
   555  00FF0C  30                 	db	48	;'0'
   556  00FF0D  32                 	db	50	;'2'
   557  00FF0E  64                 	db	100	;'d'
   558  00FF0F  2F                 	db	47
   559  00FF10  25                 	db	37
   560  00FF11  30                 	db	48	;'0'
   561  00FF12  32                 	db	50	;'2'
   562  00FF13  64                 	db	100	;'d'
   563  00FF14  2F                 	db	47
   564  00FF15  25                 	db	37
   565  00FF16  30                 	db	48	;'0'
   566  00FF17  32                 	db	50	;'2'
   567  00FF18  64                 	db	100	;'d'
   568  00FF19  28                 	db	40
   569  00FF1A  25                 	db	37
   570  00FF1B  73                 	db	115	;'s'
   571  00FF1C  29                 	db	41
   572  00FF1D  25                 	db	37
   573  00FF1E  30                 	db	48	;'0'
   574  00FF1F  32                 	db	50	;'2'
   575  00FF20  64                 	db	100	;'d'
   576  00FF21  3A                 	db	58	;':'
   577  00FF22  25                 	db	37
   578  00FF23  30                 	db	48	;'0'
   579  00FF24  32                 	db	50	;'2'
   580  00FF25  64                 	db	100	;'d'
   581  00FF26  2D                 	db	45
   582  00FF27  25                 	db	37
   583  00FF28  30                 	db	48	;'0'
   584  00FF29  32                 	db	50	;'2'
   585  00FF2A  64                 	db	100	;'d'
   586  00FF2B  0A                 	db	10
   587  00FF2C  00                 	db	0
   588  00FF2D                     STR_46:
   589                           
   590                           ; BSR set to: 0
   591  00FF2D  42                 	db	66	;'B'
   592  00FF2E  6F                 	db	111	;'o'
   593  00FF2F  6F                 	db	111	;'o'
   594  00FF30  74                 	db	116	;'t'
   595  00FF31  6C                 	db	108	;'l'
   596  00FF32  6F                 	db	111	;'o'
   597  00FF33  61                 	db	97	;'a'
   598  00FF34  64                 	db	100	;'d'
   599  00FF35  65                 	db	101	;'e'
   600  00FF36  72                 	db	114	;'r'
   601  00FF37  20                 	db	32
   602  00FF38  6D                 	db	109	;'m'
   603  00FF39  6F                 	db	111	;'o'
   604  00FF3A  64                 	db	100	;'d'
   605  00FF3B  65                 	db	101	;'e'
   606  00FF3C  00                 	db	0
   607  00FF3D                     STR_52:
   608                           
   609                           ; BSR set to: 0
   610  00FF3D  25                 	db	37
   611  00FF3E  30                 	db	48	;'0'
   612  00FF3F  32                 	db	50	;'2'
   613  00FF40  64                 	db	100	;'d'
   614  00FF41  20                 	db	32
   615  00FF42  25                 	db	37
   616  00FF43  30                 	db	48	;'0'
   617  00FF44  32                 	db	50	;'2'
   618  00FF45  64                 	db	100	;'d'
   619  00FF46  2D                 	db	45
   620  00FF47  25                 	db	37
   621  00FF48  30                 	db	48	;'0'
   622  00FF49  32                 	db	50	;'2'
   623  00FF4A  64                 	db	100	;'d'
   624  00FF4B  00                 	db	0
   625  00FF4C                     STR_51:
   626                           
   627                           ; BSR set to: 0
   628  00FF4C  25                 	db	37
   629  00FF4D  30                 	db	48	;'0'
   630  00FF4E  32                 	db	50	;'2'
   631  00FF4F  64                 	db	100	;'d'
   632  00FF50  3A                 	db	58	;':'
   633  00FF51  25                 	db	37
   634  00FF52  30                 	db	48	;'0'
   635  00FF53  32                 	db	50	;'2'
   636  00FF54  64                 	db	100	;'d'
   637  00FF55  2D                 	db	45
   638  00FF56  25                 	db	37
   639  00FF57  30                 	db	48	;'0'
   640  00FF58  32                 	db	50	;'2'
   641  00FF59  64                 	db	100	;'d'
   642  00FF5A  00                 	db	0
   643  00FF5B                     STR_50:
   644                           
   645                           ; BSR set to: 0
   646  00FF5B  25                 	db	37
   647  00FF5C  30                 	db	48	;'0'
   648  00FF5D  32                 	db	50	;'2'
   649  00FF5E  64                 	db	100	;'d'
   650  00FF5F  2F                 	db	47
   651  00FF60  25                 	db	37
   652  00FF61  30                 	db	48	;'0'
   653  00FF62  32                 	db	50	;'2'
   654  00FF63  64                 	db	100	;'d'
   655  00FF64  2F                 	db	47
   656  00FF65  25                 	db	37
   657  00FF66  30                 	db	48	;'0'
   658  00FF67  32                 	db	50	;'2'
   659  00FF68  64                 	db	100	;'d'
   660  00FF69  00                 	db	0
   661  00FF6A                     STR_45:
   662                           
   663                           ; BSR set to: 0
   664  00FF6A  50                 	db	80	;'P'
   665  00FF6B  49                 	db	73	;'I'
   666  00FF6C  43                 	db	67	;'C'
   667  00FF6D  31                 	db	49	;'1'
   668  00FF6E  38                 	db	56	;'8'
   669  00FF6F  46                 	db	70	;'F'
   670  00FF70  32                 	db	50	;'2'
   671  00FF71  37                 	db	55	;'7'
   672  00FF72  4A                 	db	74	;'J'
   673  00FF73  35                 	db	53	;'5'
   674  00FF74  33                 	db	51	;'3'
   675  00FF75  00                 	db	0
   676  00FF76                     STR_28:
   677                           
   678                           ; BSR set to: 0
   679  00FF76  61                 	db	97	;'a'
   680  00FF77  64                 	db	100	;'d'
   681  00FF78  6A                 	db	106	;'j'
   682  00FF79  75                 	db	117	;'u'
   683  00FF7A  73                 	db	115	;'s'
   684  00FF7B  74                 	db	116	;'t'
   685  00FF7C  5F                 	db	95	;'_'
   686  00FF7D  74                 	db	116	;'t'
   687  00FF7E  69                 	db	105	;'i'
   688  00FF7F  6D                 	db	109	;'m'
   689  00FF80  65                 	db	101	;'e'
   690  00FF81  00                 	db	0
   691  00FF82                     STR_25:
   692                           
   693                           ; BSR set to: 0
   694  00FF82  70                 	db	112	;'p'
   695  00FF83  72                 	db	114	;'r'
   696  00FF84  69                 	db	105	;'i'
   697  00FF85  6E                 	db	110	;'n'
   698  00FF86  74                 	db	116	;'t'
   699  00FF87  5F                 	db	95	;'_'
   700  00FF88  74                 	db	116	;'t'
   701  00FF89  69                 	db	105	;'i'
   702  00FF8A  6D                 	db	109	;'m'
   703  00FF8B  65                 	db	101	;'e'
   704  00FF8C  00                 	db	0
   705  00FF8D                     STR_47:
   706                           
   707                           ; BSR set to: 0
   708  00FF8D  52                 	db	82	;'R'
   709  00FF8E  45                 	db	69	;'E'
   710  00FF8F  53                 	db	83	;'S'
   711  00FF90  45                 	db	69	;'E'
   712  00FF91  54                 	db	84	;'T'
   713  00FF92  28                 	db	40
   714  00FF93  29                 	db	41
   715  00FF94  3B                 	db	59	;';'
   716  00FF95  00                 	db	0
   717  00FF96                     STR_49:
   718                           
   719                           ; BSR set to: 0
   720  00FF96  55                 	db	85	;'U'
   721  00FF97  53                 	db	83	;'S'
   722  00FF98  42                 	db	66	;'B'
   723  00FF99  20                 	db	32
   724  00FF9A  55                 	db	85	;'U'
   725  00FF9B  41                 	db	65	;'A'
   726  00FF9C  52                 	db	82	;'R'
   727  00FF9D  54                 	db	84	;'T'
   728  00FF9E  00                 	db	0
   729  00FF9F                     STR_44:
   730                           
   731                           ; BSR set to: 0
   732  00FF9F  62                 	db	98	;'b'
   733  00FFA0  6F                 	db	111	;'o'
   734  00FFA1  6F                 	db	111	;'o'
   735  00FFA2  74                 	db	116	;'t'
   736  00FFA3  6C                 	db	108	;'l'
   737  00FFA4  6F                 	db	111	;'o'
   738  00FFA5  61                 	db	97	;'a'
   739  00FFA6  64                 	db	100	;'d'
   740  00FFA7  00                 	db	0
   741  00FFA8                     STR_15:
   742                           
   743                           ; BSR set to: 0
   744  00FFA8  20                 	db	32
   745  00FFA9  20                 	db	32
   746  00FFAA  20                 	db	32
   747  00FFAB  20                 	db	32
   748  00FFAC  20                 	db	32
   749  00FFAD  20                 	db	32
   750  00FFAE  20                 	db	32
   751  00FFAF  20                 	db	32
   752  00FFB0  00                 	db	0
   753  00FFB1                     STR_24:
   754                           
   755                           ; BSR set to: 0
   756  00FFB1  09                 	db	9
   757  00FFB2  65                 	db	101	;'e'
   758  00FFB3  72                 	db	114	;'r'
   759  00FFB4  72                 	db	114	;'r'
   760  00FFB5  6F                 	db	111	;'o'
   761  00FFB6  72                 	db	114	;'r'
   762  00FFB7  0A                 	db	10
   763  00FFB8  00                 	db	0
   764  00FFB9                     STR_53:
   765                           
   766                           ; BSR set to: 0
   767  00FFB9  28                 	db	40
   768  00FFBA  6E                 	db	110	;'n'
   769  00FFBB  75                 	db	117	;'u'
   770  00FFBC  6C                 	db	108	;'l'
   771  00FFBD  6C                 	db	108	;'l'
   772  00FFBE  29                 	db	41
   773  00FFBF  00                 	db	0
   774  00FFC0                     STR_40:
   775                           
   776                           ; BSR set to: 0
   777  00FFC0  73                 	db	115	;'s'
   778  00FFC1  65                 	db	101	;'e'
   779  00FFC2  63                 	db	99	;'c'
   780  00FFC3  6F                 	db	111	;'o'
   781  00FFC4  6E                 	db	110	;'n'
   782  00FFC5  64                 	db	100	;'d'
   783  00FFC6  00                 	db	0
   784  00FFC7                     STR_38:
   785                           
   786                           ; BSR set to: 0
   787  00FFC7  6D                 	db	109	;'m'
   788  00FFC8  69                 	db	105	;'i'
   789  00FFC9  6E                 	db	110	;'n'
   790  00FFCA  75                 	db	117	;'u'
   791  00FFCB  74                 	db	116	;'t'
   792  00FFCC  65                 	db	101	;'e'
   793  00FFCD  00                 	db	0
   794  00FFCE                     STR_32:
   795                           
   796                           ; BSR set to: 0
   797  00FFCE  6D                 	db	109	;'m'
   798  00FFCF  6F                 	db	111	;'o'
   799  00FFD0  6E                 	db	110	;'n'
   800  00FFD1  74                 	db	116	;'t'
   801  00FFD2  68                 	db	104	;'h'
   802  00FFD3  00                 	db	0
   803  00FFD4                     STR_41:
   804                           
   805                           ; BSR set to: 0
   806  00FFD4  68                 	db	104	;'h'
   807  00FFD5  65                 	db	101	;'e'
   808  00FFD6  6C                 	db	108	;'l'
   809  00FFD7  70                 	db	112	;'p'
   810  00FFD8  00                 	db	0
   811  00FFD9                     STR_30:
   812                           
   813                           ; BSR set to: 0
   814  00FFD9  79                 	db	121	;'y'
   815  00FFDA  65                 	db	101	;'e'
   816  00FFDB  61                 	db	97	;'a'
   817  00FFDC  72                 	db	114	;'r'
   818  00FFDD  00                 	db	0
   819  00FFDE                     STR_36:
   820                           
   821                           ; BSR set to: 0
   822  00FFDE  68                 	db	104	;'h'
   823  00FFDF  6F                 	db	111	;'o'
   824  00FFE0  75                 	db	117	;'u'
   825  00FFE1  72                 	db	114	;'r'
   826  00FFE2  00                 	db	0
   827  00FFE3                     STR_19:
   828                           
   829                           ; BSR set to: 0
   830  00FFE3  08                 	db	8
   831  00FFE4  20                 	db	32
   832  00FFE5  08                 	db	8
   833  00FFE6  00                 	db	0
   834  00FFE7                     STR_34:
   835                           
   836                           ; BSR set to: 0
   837  00FFE7  64                 	db	100	;'d'
   838  00FFE8  61                 	db	97	;'a'
   839  00FFE9  79                 	db	121	;'y'
   840  00FFEA  00                 	db	0
   841  00FFEB                     STR_27:
   842                           
   843                           ; BSR set to: 0
   844  00FFEB  61                 	db	97	;'a'
   845  00FFEC  74                 	db	116	;'t'
   846  00FFED  00                 	db	0
   847  00FFEE                     STR_42:
   848                           
   849                           ; BSR set to: 0
   850  00FFEE  3F                 	db	63	;'?'
   851  00FFEF  00                 	db	0
   852  00FFF0                     STR_31:
   853                           
   854                           ; BSR set to: 0
   855  00FFF0  4D                 	db	77	;'M'
   856  00FFF1  00                 	db	0
   857  00FFF2                     STR_37:
   858                           
   859                           ; BSR set to: 0
   860  00FFF2  6D                 	db	109	;'m'
   861  00FFF3  00                 	db	0
   862  00FFF4                     STR_39:
   863                           
   864                           ; BSR set to: 0
   865  00FFF4  73                 	db	115	;'s'
   866  00FFF5  00                 	db	0
   867  00FFF6                     
   868                           ; BSR set to: 0
   869  00FFF6  28                 	db	40
   870  00FFF7  00                 	db	0
   871  00FFF8                     STR_9:
   872                           
   873                           ; BSR set to: 0
   874  00FFF8  2D                 	db	45
   875  00FFF9  00                 	db	0
   876  00FFFA                     STR_4:
   877                           
   878                           ; BSR set to: 0
   879  00FFFA  2F                 	db	47
   880  00FFFB  00                 	db	0
   881  00FFFC                     STR_7:
   882                           
   883                           ; BSR set to: 0
   884  00FFFC  3A                 	db	58	;':'
   885  00FFFD  00                 	db	0
   886  0000                     
   887                           ; #config settings
   888  00FFFE  00                 	db	0	; dummy byte at the end
   889  0000                     
   890                           	psect	cinit
   891  013660                     __pcinit:
   892                           	opt stack 0
   893  013660                     start_initialization:
   894                           	opt stack 0
   895  013660                     __initialization:
   896                           	opt stack 0
   897                           
   898                           ; Clear objects allocated to BIGRAMl (2000 bytes)
   899  013660  EE03  F064         	lfsr	0,__pbssBIGRAMl
   900  013664  EE17 F0D0          	lfsr	1,2000
   901  013668                     clear_0:
   902  013668  6AEE               	clrf	postinc0,c
   903  01366A  50E5               	movf	postdec1,w,c
   904  01366C  50E1               	movf	fsr1l,w,c
   905  01366E  E1FC               	bnz	clear_0
   906  013670  50E2               	movf	fsr1h,w,c
   907  013672  E1FA               	bnz	clear_0
   908                           
   909                           ; Clear objects allocated to BANK3 (100 bytes)
   910  013674  EE03  F000         	lfsr	0,__pbssBANK3
   911  013678  0E64               	movlw	100
   912  01367A                     clear_1:
   913  01367A  6AEE               	clrf	postinc0,c
   914  01367C  06E8               	decf	wreg,f,c
   915  01367E  E1FD               	bnz	clear_1
   916                           
   917                           ; Clear objects allocated to BANK2 (178 bytes)
   918  013680  EE02  F000         	lfsr	0,__pbssBANK2
   919  013684  0EB2               	movlw	178
   920  013686                     clear_2:
   921  013686  6AEE               	clrf	postinc0,c
   922  013688  06E8               	decf	wreg,f,c
   923  01368A  E1FD               	bnz	clear_2
   924                           
   925                           ; Clear objects allocated to BANK1 (139 bytes)
   926  01368C  EE01  F000         	lfsr	0,__pbssBANK1
   927  013690  0E8B               	movlw	139
   928  013692                     clear_3:
   929  013692  6AEE               	clrf	postinc0,c
   930  013694  06E8               	decf	wreg,f,c
   931  013696  E1FD               	bnz	clear_3
   932                           
   933                           ; Clear objects allocated to BANK0 (35 bytes)
   934  013698  EE00  F0CF         	lfsr	0,__pbssBANK0
   935  01369C  0E23               	movlw	35
   936  01369E                     clear_4:
   937  01369E  6AEE               	clrf	postinc0,c
   938  0136A0  06E8               	decf	wreg,f,c
   939  0136A2  E1FD               	bnz	clear_4
   940                           
   941                           ; Clear objects allocated to COMRAM (44 bytes)
   942  0136A4  EE00  F001         	lfsr	0,__pbssCOMRAM
   943  0136A8  0E2C               	movlw	44
   944  0136AA                     clear_5:
   945  0136AA  6AEE               	clrf	postinc0,c
   946  0136AC  06E8               	decf	wreg,f,c
   947  0136AE  E1FD               	bnz	clear_5
   948                           
   949                           ; Initialize objects allocated to BANK1 (2 bytes)
   950                           ; load TBLPTR registers with __pidataBANK1
   951  0136B0  0E12               	movlw	low __pidataBANK1
   952  0136B2  6EF6               	movwf	tblptrl,c
   953  0136B4  0E10               	movlw	high __pidataBANK1
   954  0136B6  6EF7               	movwf	tblptrh,c
   955  0136B8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   956  0136BA  6EF8               	movwf	tblptru,c
   957  0136BC  0009               	tblrd		*+	;fetch initializer
   958  0136BE  CFF5 F1F4          	movff	tablat,__pdataBANK1
   959  0136C2  0009               	tblrd		*+	;fetch initializer
   960  0136C4  CFF5 F1F5          	movff	tablat,__pdataBANK1+1
   961                           
   962                           ; Initialize objects allocated to BANK0 (1 bytes)
   963                           ; load TBLPTR registers with __pidataBANK0
   964  0136C8  0E14               	movlw	low __pidataBANK0
   965  0136CA  6EF6               	movwf	tblptrl,c
   966  0136CC  0E10               	movlw	high __pidataBANK0
   967  0136CE  6EF7               	movwf	tblptrh,c
   968  0136D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   969  0136D2  6EF8               	movwf	tblptru,c
   970  0136D4  0009               	tblrd		*+	;fetch initializer
   971  0136D6  CFF5 F0F2          	movff	tablat,__pdataBANK0
   972  0136DA                     end_of_initialization:
   973                           	opt stack 0
   974  0136DA                     __end_of__initialization:
   975                           	opt stack 0
   976  0136DA  0100               	movlb	0
   977  0136DC  EF44  F08C         	goto	_main	;jump to C main() function
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1h	equ	0xFE2
   986                           fsr1l	equ	0xFE1
   987                           
   988                           	psect	bssCOMRAM
   989  000001                     __pbssCOMRAM:
   990                           	opt stack 0
   991  000001                     _outPipes:
   992                           	opt stack 0
   993  000001                     	ds	9
   994  00000A                     _pBDTEntryIn:
   995                           	opt stack 0
   996  00000A                     	ds	6
   997  000010                     _ep_data_in:
   998                           	opt stack 0
   999  000010                     	ds	3
  1000  000013                     _pBDTEntryEP0OutCurrent:
  1001                           	opt stack 0
  1002  000013                     	ds	2
  1003  000015                     _pBDTEntryEP0OutNext:
  1004                           	opt stack 0
  1005  000015                     	ds	2
  1006  000017                     _BothEP0OutUOWNsSet:
  1007                           	opt stack 0
  1008  000017                     	ds	1
  1009  000018                     _RemoteWakeup:
  1010                           	opt stack 0
  1011  000018                     	ds	1
  1012  000019                     _USBBusIsSuspended:
  1013                           	opt stack 0
  1014  000019                     	ds	1
  1015  00001A                     _USBDeferINDataStagePackets:
  1016                           	opt stack 0
  1017  00001A                     	ds	1
  1018  00001B                     _USBDeferOUTDataStagePackets:
  1019                           	opt stack 0
  1020  00001B                     	ds	1
  1021  00001C                     _USBDeferStatusStagePacket:
  1022                           	opt stack 0
  1023  00001C                     	ds	1
  1024  00001D                     _USBDeviceState:
  1025                           	opt stack 0
  1026  00001D                     	ds	1
  1027  00001E                     _USBStatusStageEnabledFlag1:
  1028                           	opt stack 0
  1029  00001E                     	ds	1
  1030  00001F                     _USBStatusStageEnabledFlag2:
  1031                           	opt stack 0
  1032  00001F                     	ds	1
  1033  000020                     _USBStatusStageTimeoutCounter:
  1034                           	opt stack 0
  1035  000020                     	ds	1
  1036  000021                     _cdc_trf_state:
  1037                           	opt stack 0
  1038  000021                     	ds	1
  1039  000022                     _controlTransferState:
  1040                           	opt stack 0
  1041  000022                     	ds	1
  1042  000023                     _endpoint_number:
  1043                           	opt stack 0
  1044  000023                     	ds	1
  1045  000024                     _shortPacketStatus:
  1046                           	opt stack 0
  1047  000024                     	ds	1
  1048  000025                     _inPipes:
  1049                           	opt stack 0
  1050  000025                     	ds	6
  1051  00002B                     _USBActiveConfiguration:
  1052                           	opt stack 0
  1053  00002B                     	ds	1
  1054  00002C                     _USTATcopy:
  1055                           	opt stack 0
  1056  00002C                     	ds	1
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           postdec1	equ	0xFE5
  1064                           fsr1h	equ	0xFE2
  1065                           fsr1l	equ	0xFE1
  1066                           
  1067                           	psect	bssBANK0
  1068  0000CF                     __pbssBANK0:
  1069                           	opt stack 0
  1070  0000CF                     _pBDTEntryOut:
  1071                           	opt stack 0
  1072  0000CF                     	ds	6
  1073  0000D5                     _ep_data_out:
  1074                           	opt stack 0
  1075  0000D5                     	ds	3
  1076  0000D8                     _pCDCDst:
  1077                           	opt stack 0
  1078  0000D8                     	ds	3
  1079  0000DB                     _pCDCSrc:
  1080                           	opt stack 0
  1081  0000DB                     	ds	3
  1082  0000DE                     USBCBSendResume@delay_count:
  1083                           	opt stack 0
  1084  0000DE                     	ds	2
  1085  0000E0                     _CDCDataInHandle:
  1086                           	opt stack 0
  1087  0000E0                     	ds	2
  1088  0000E2                     _CDCDataOutHandle:
  1089                           	opt stack 0
  1090  0000E2                     	ds	2
  1091  0000E4                     _pDst:
  1092                           	opt stack 0
  1093  0000E4                     	ds	2
  1094  0000E6                     millis_timer@cnt:
  1095                           	opt stack 0
  1096  0000E6                     	ds	2
  1097  0000E8                     RTCC_loop@prev_halfsec:
  1098                           	opt stack 0
  1099  0000E8                     	ds	1
  1100  0000E9                     _cdc_mem_type:
  1101                           	opt stack 0
  1102  0000E9                     	ds	1
  1103  0000EA                     _cdc_rx_len:
  1104                           	opt stack 0
  1105  0000EA                     	ds	1
  1106  0000EB                     _cdc_tx_len:
  1107                           	opt stack 0
  1108  0000EB                     	ds	1
  1109  0000EC                     _control_signal_bitmap:
  1110                           	opt stack 0
  1111  0000EC                     	ds	1
  1112  0000ED                     _time_change_flag:
  1113                           	opt stack 0
  1114  0000ED                     	ds	1
  1115  0000EE                     epoch_to_caltime@year_cache:
  1116                           	opt stack 0
  1117  0000EE                     	ds	1
  1118  0000EF                     terminal_loop@command_init:
  1119                           	opt stack 0
  1120  0000EF                     	ds	1
  1121  0000F0                     _USBAlternateInterface:
  1122                           	opt stack 0
  1123  0000F0                     	ds	2
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           postdec1	equ	0xFE5
  1131                           fsr1h	equ	0xFE2
  1132                           fsr1l	equ	0xFE1
  1133                           
  1134                           	psect	dataBANK0
  1135  0000F2                     __pdataBANK0:
  1136                           	opt stack 0
  1137  0000F2                     epoch_to_caltime@month_cache:
  1138                           	opt stack 0
  1139  0000F2                     	ds	1
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           postdec1	equ	0xFE5
  1147                           fsr1h	equ	0xFE2
  1148                           fsr1l	equ	0xFE1
  1149                           
  1150                           	psect	bssBANK1
  1151  000100                     __pbssBANK1:
  1152                           	opt stack 0
  1153  000100                     _cdc_notice:
  1154                           	opt stack 0
  1155  000100                     	ds	10
  1156  00010A                     _BaudRateGen:
  1157                           	opt stack 0
  1158  00010A                     	ds	4
  1159  00010E                     _ms:
  1160                           	opt stack 0
  1161  00010E                     	ds	4
  1162  000112                     epoch_to_caltime@day_cache:
  1163                           	opt stack 0
  1164  000112                     	ds	2
  1165  000114                     terminal_loop@op0:
  1166                           	opt stack 0
  1167  000114                     	ds	25
  1168  00012D                     terminal_loop@op1:
  1169                           	opt stack 0
  1170  00012D                     	ds	25
  1171  000146                     _now:
  1172                           	opt stack 0
  1173  000146                     	ds	14
  1174  000154                     _dummy_encapsulated_cmd_response:
  1175                           	opt stack 0
  1176  000154                     	ds	8
  1177  00015C                     _rx_buf:
  1178                           	opt stack 0
  1179  00015C                     	ds	8
  1180  000164                     _tx_buf:
  1181                           	opt stack 0
  1182  000164                     	ds	8
  1183  00016C                     _usb_rx:
  1184                           	opt stack 0
  1185  00016C                     	ds	8
  1186  000174                     _usb_tx:
  1187                           	opt stack 0
  1188  000174                     	ds	8
  1189  00017C                     terminal_loop@command:
  1190                           	opt stack 0
  1191  00017C                     	ds	8
  1192  000184                     _line_coding:
  1193                           	opt stack 0
  1194  000184                     	ds	7
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1h	equ	0xFE2
  1203                           fsr1l	equ	0xFE1
  1204                           
  1205                           	psect	dataBANK1
  1206  0001F4                     __pdataBANK1:
  1207                           	opt stack 0
  1208  0001F4                     I2C_LCD_SetCursor@F9811:
  1209                           	opt stack 0
  1210  0001F4                     	ds	2
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1h	equ	0xFE2
  1219                           fsr1l	equ	0xFE1
  1220                           
  1221                           	psect	bssBANK2
  1222  000200                     __pbssBANK2:
  1223                           	opt stack 0
  1224  000200                     _cdc_data_rx:
  1225                           	opt stack 0
  1226  000200                     	ds	64
  1227  000240                     _cdc_data_tx:
  1228                           	opt stack 0
  1229  000240                     	ds	64
  1230  000280                     terminal_loop@op2:
  1231                           	opt stack 0
  1232  000280                     	ds	25
  1233  000299                     terminal_loop@op3:
  1234                           	opt stack 0
  1235  000299                     	ds	25
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           postdec1	equ	0xFE5
  1243                           fsr1h	equ	0xFE2
  1244                           fsr1l	equ	0xFE1
  1245                           
  1246                           	psect	bssBANK3
  1247  000300                     __pbssBANK3:
  1248                           	opt stack 0
  1249  000300                     hardware_init@usbrx:
  1250                           	opt stack 0
  1251  000300                     	ds	100
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1h	equ	0xFE2
  1260                           fsr1l	equ	0xFE1
  1261                           
  1262                           	psect	bssBIGRAMl
  1263  000364                     __pbssBIGRAMl:
  1264                           	opt stack 0
  1265  000364                     hardware_init@usbtx:
  1266                           	opt stack 0
  1267  000364                     	ds	2000
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           postdec1	equ	0xFE5
  1275                           fsr1h	equ	0xFE2
  1276                           fsr1l	equ	0xFE1
  1277                           
  1278                           	psect	cstackBANK2
  1279  0002B2                     __pcstackBANK2:
  1280                           	opt stack 0
  1281  0002B2                     main@str:
  1282                           	opt stack 0
  1283                           
  1284                           ; 20 bytes @ 0x0
  1285  0002B2                     	ds	20
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1h	equ	0xFE2
  1294                           fsr1l	equ	0xFE1
  1295                           
  1296                           	psect	cstackBANK1
  1297  00018B                     __pcstackBANK1:
  1298                           	opt stack 0
  1299  00018B                     terminal_loop@buf:
  1300                           	opt stack 0
  1301                           
  1302                           ; 100 bytes @ 0x0
  1303  00018B                     	ds	100
  1304  0001EF                     _terminal_loop$5947:
  1305                           	opt stack 0
  1306                           
  1307                           ; 2 bytes @ 0x64
  1308  0001EF                     	ds	2
  1309  0001F1                     terminal_loop@i_4771:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x66
  1313  0001F1                     	ds	1
  1314  0001F2                     terminal_loop@ascii:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x67
  1318  0001F2                     	ds	1
  1319  0001F3                     terminal_loop@i:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x68
  1323  0001F3                     	ds	1
  1324                           tblptru	equ	0xFF8
  1325                           tblptrh	equ	0xFF7
  1326                           tblptrl	equ	0xFF6
  1327                           tablat	equ	0xFF5
  1328                           postinc0	equ	0xFEE
  1329                           wreg	equ	0xFE8
  1330                           postdec1	equ	0xFE5
  1331                           fsr1h	equ	0xFE2
  1332                           fsr1l	equ	0xFE1
  1333                           
  1334                           	psect	cstackBANK0
  1335  000060                     __pcstackBANK0:
  1336                           	opt stack 0
  1337  000060                     ??_isdigit:
  1338  000060                     ??_I2C_IdleCheck:
  1339  000060                     ??_timer0_init:
  1340  000060                     ??_timer3_init:
  1341  000060                     ??_x_to_d:
  1342  000060                     ?_ringbuf_num:
  1343                           	opt stack 0
  1344  000060                     ?_strcmp:
  1345                           	opt stack 0
  1346  000060                     ?_USBTransferOnePacket:
  1347                           	opt stack 0
  1348  000060                     ?___wmul:
  1349                           	opt stack 0
  1350  000060                     ?___awdiv:
  1351                           	opt stack 0
  1352  000060                     ?___awmod:
  1353                           	opt stack 0
  1354  000060                     ?___lwdiv:
  1355                           	opt stack 0
  1356  000060                     ?___lldiv:
  1357                           	opt stack 0
  1358  000060                     USBTransferOnePacket@dir:
  1359                           	opt stack 0
  1360  000060                     _is_usb_available$2041:
  1361                           	opt stack 0
  1362  000060                     timer1_init@clock_select:
  1363                           	opt stack 0
  1364  000060                     putUSBUSART@data:
  1365                           	opt stack 0
  1366  000060                     ringbuf_init@rb:
  1367                           	opt stack 0
  1368  000060                     ringbuf_num@rb:
  1369                           	opt stack 0
  1370  000060                     ringbuf_delete@rb:
  1371                           	opt stack 0
  1372  000060                     ___wmul@multiplier:
  1373                           	opt stack 0
  1374  000060                     ___awdiv@dividend:
  1375                           	opt stack 0
  1376  000060                     ___awmod@dividend:
  1377                           	opt stack 0
  1378  000060                     ___lwdiv@dividend:
  1379                           	opt stack 0
  1380  000060                     memset@p1:
  1381                           	opt stack 0
  1382  000060                     strcmp@s1:
  1383                           	opt stack 0
  1384  000060                     ___lldiv@dividend:
  1385                           	opt stack 0
  1386                           
  1387                           ; 4 bytes @ 0x0
  1388  000060                     	ds	1
  1389  000061                     ??_timer1_init:
  1390  000061                     I2C_IdleCheck@mask:
  1391                           	opt stack 0
  1392  000061                     timer0_init@prescaler:
  1393                           	opt stack 0
  1394  000061                     timer3_init@prescaler:
  1395                           	opt stack 0
  1396  000061                     x_to_d@hex:
  1397                           	opt stack 0
  1398  000061                     _isdigit$5486:
  1399                           	opt stack 0
  1400  000061                     USBTransferOnePacket@data:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x1
  1404  000061                     	ds	1
  1405  000062                     ??_ringbuf_num:
  1406  000062                     putUSBUSART@length:
  1407                           	opt stack 0
  1408  000062                     I2C_Start@rw:
  1409                           	opt stack 0
  1410  000062                     I2C_Send@data:
  1411                           	opt stack 0
  1412  000062                     timer1_init@prescaler:
  1413                           	opt stack 0
  1414  000062                     isdigit@c:
  1415                           	opt stack 0
  1416  000062                     ringbuf_init@internal_buf:
  1417                           	opt stack 0
  1418  000062                     RTCC_to_caltime@tm:
  1419                           	opt stack 0
  1420  000062                     ___wmul@multiplicand:
  1421                           	opt stack 0
  1422  000062                     ___awdiv@divisor:
  1423                           	opt stack 0
  1424  000062                     ___awmod@divisor:
  1425                           	opt stack 0
  1426  000062                     ___lwdiv@divisor:
  1427                           	opt stack 0
  1428  000062                     memset@c:
  1429                           	opt stack 0
  1430  000062                     strcmp@s2:
  1431                           	opt stack 0
  1432                           
  1433                           ; 2 bytes @ 0x2
  1434  000062                     	ds	1
  1435  000063                     USBTransferOnePacket@len:
  1436                           	opt stack 0
  1437  000063                     I2C_Start@adrs:
  1438                           	opt stack 0
  1439                           
  1440                           ; 1 bytes @ 0x3
  1441  000063                     	ds	1
  1442  000064                     ??_strcmp:
  1443  000064                     USBTransferOnePacket@ep:
  1444                           	opt stack 0
  1445  000064                     RTCC_to_caltime@dumy:
  1446                           	opt stack 0
  1447  000064                     I2C_LCD_Command@c:
  1448                           	opt stack 0
  1449  000064                     ___awdiv@counter:
  1450                           	opt stack 0
  1451  000064                     ___awmod@counter:
  1452                           	opt stack 0
  1453  000064                     ___lwdiv@counter:
  1454                           	opt stack 0
  1455  000064                     ringbuf_init@bufsize:
  1456                           	opt stack 0
  1457  000064                     I2C_LCD_Puts@s:
  1458                           	opt stack 0
  1459  000064                     ___wmul@product:
  1460                           	opt stack 0
  1461  000064                     memset@n:
  1462                           	opt stack 0
  1463  000064                     ___lldiv@divisor:
  1464                           	opt stack 0
  1465                           
  1466                           ; 4 bytes @ 0x4
  1467  000064                     	ds	1
  1468  000065                     I2C_LCD_Command@ans:
  1469                           	opt stack 0
  1470  000065                     ___awdiv@sign:
  1471                           	opt stack 0
  1472  000065                     ___awmod@sign:
  1473                           	opt stack 0
  1474  000065                     strcmp@r:
  1475                           	opt stack 0
  1476  000065                     USBTransferOnePacket@handle:
  1477                           	opt stack 0
  1478  000065                     ___lwdiv@quotient:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x5
  1482  000065                     	ds	1
  1483  000066                     ??_I2C_LCD_Clear:
  1484  000066                     ??_I2C_LCD_Puts:
  1485  000066                     ?_atoi:
  1486                           	opt stack 0
  1487  000066                     month_length@month:
  1488                           	opt stack 0
  1489  000066                     I2C_LCD_SetCursor@row:
  1490                           	opt stack 0
  1491  000066                     atoi@s:
  1492                           	opt stack 0
  1493  000066                     ___awdiv@quotient:
  1494                           	opt stack 0
  1495  000066                     memset@p:
  1496                           	opt stack 0
  1497                           
  1498                           ; 2 bytes @ 0x6
  1499  000066                     	ds	1
  1500  000067                     ??_CDCTxService:
  1501  000067                     ??_month_length:
  1502  000067                     ??_I2C_LCD_init:
  1503  000067                     ?___lwmod:
  1504                           	opt stack 0
  1505  000067                     getsUSBUSART@buffer:
  1506                           	opt stack 0
  1507  000067                     I2C_LCD_SetCursor@row_offsets:
  1508                           	opt stack 0
  1509  000067                     I2C_LCD_Puts@ans:
  1510                           	opt stack 0
  1511  000067                     ___lwmod@dividend:
  1512                           	opt stack 0
  1513                           
  1514                           ; 2 bytes @ 0x7
  1515  000067                     	ds	1
  1516  000068                     ??_atoi:
  1517  000068                     USBDeviceInit@i:
  1518                           	opt stack 0
  1519  000068                     d_to_x@dec:
  1520                           	opt stack 0
  1521  000068                     I2C_LCD_init@i:
  1522                           	opt stack 0
  1523  000068                     _CDCTxService$1934:
  1524                           	opt stack 0
  1525  000068                     ringbuf_put@rb:
  1526                           	opt stack 0
  1527  000068                     ringbuf_pop@rb:
  1528                           	opt stack 0
  1529  000068                     ringbuf_backspace@rb:
  1530                           	opt stack 0
  1531  000068                     ___lldiv@quotient:
  1532                           	opt stack 0
  1533                           
  1534                           ; 4 bytes @ 0x8
  1535  000068                     	ds	1
  1536  000069                     getsUSBUSART@len:
  1537                           	opt stack 0
  1538  000069                     I2C_LCD_SetCursor@col:
  1539                           	opt stack 0
  1540  000069                     I2C_LCD_init@i_4683:
  1541                           	opt stack 0
  1542  000069                     caltime_to_RTCC@tm:
  1543                           	opt stack 0
  1544  000069                     ___lwmod@divisor:
  1545                           	opt stack 0
  1546                           
  1547                           ; 2 bytes @ 0x9
  1548  000069                     	ds	1
  1549  00006A                     ??_ringbuf_pop:
  1550  00006A                     ??_getsUSBUSART:
  1551  00006A                     ??_ringbuf_backspace:
  1552  00006A                     CDCTxService@i:
  1553                           	opt stack 0
  1554  00006A                     ringbuf_put@asciicode:
  1555                           	opt stack 0
  1556  00006A                     atoi@sign:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0xA
  1560  00006A                     	ds	1
  1561  00006B                     ??_ringbuf_put:
  1562  00006B                     CDCTxService@byte_to_send:
  1563                           	opt stack 0
  1564  00006B                     month_length@year:
  1565                           	opt stack 0
  1566  00006B                     ___lwmod@counter:
  1567                           	opt stack 0
  1568  00006B                     _getsUSBUSART$1886:
  1569                           	opt stack 0
  1570  00006B                     atoi@a:
  1571                           	opt stack 0
  1572                           
  1573                           ; 2 bytes @ 0xB
  1574  00006B                     	ds	1
  1575  00006C                     ?_sprintf:
  1576                           	opt stack 0
  1577  00006C                     ___lldiv@counter:
  1578                           	opt stack 0
  1579  00006C                     put_string_usb@s:
  1580                           	opt stack 0
  1581  00006C                     sprintf@sp:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0xC
  1585  00006C                     	ds	1
  1586  00006D                     ?_get_string_usb:
  1587                           	opt stack 0
  1588  00006D                     ?___lmul:
  1589                           	opt stack 0
  1590  00006D                     get_string_usb@s:
  1591                           	opt stack 0
  1592  00006D                     ___lmul@multiplier:
  1593                           	opt stack 0
  1594                           
  1595                           ; 4 bytes @ 0xD
  1596  00006D                     	ds	1
  1597  00006E                     ringbuf_pop@ret:
  1598                           	opt stack 0
  1599  00006E                     put_string_usb@len:
  1600                           	opt stack 0
  1601  00006E                     sprintf@f:
  1602                           	opt stack 0
  1603                           
  1604                           ; 2 bytes @ 0xE
  1605  00006E                     	ds	1
  1606  00006F                     get_string_usb@len:
  1607                           	opt stack 0
  1608  00006F                     ringbuf_put_num@rb:
  1609                           	opt stack 0
  1610  00006F                     ringbuf_put_str@rb:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0xF
  1614  00006F                     	ds	1
  1615  000070                     
  1616                           ; 0 bytes @ 0x10
  1617  000070                     	ds	1
  1618  000071                     ??_get_string_usb:
  1619  000071                     ringbuf_put_num@value:
  1620                           	opt stack 0
  1621  000071                     ringbuf_put_str@str:
  1622                           	opt stack 0
  1623  000071                     ___lmul@multiplicand:
  1624                           	opt stack 0
  1625                           
  1626                           ; 4 bytes @ 0x11
  1627  000071                     	ds	1
  1628  000072                     get_string_usb@rx_len:
  1629                           	opt stack 0
  1630                           
  1631                           ; 2 bytes @ 0x12
  1632  000072                     	ds	1
  1633  000073                     ringbuf_put_num@digits:
  1634                           	opt stack 0
  1635                           
  1636                           ; 1 bytes @ 0x13
  1637  000073                     	ds	1
  1638  000074                     ringbuf_put_num@i:
  1639                           	opt stack 0
  1640  000074                     USB_loop@rx_len:
  1641                           	opt stack 0
  1642                           
  1643                           ; 2 bytes @ 0x14
  1644  000074                     	ds	1
  1645  000075                     ringbuf_put_num@temp:
  1646                           	opt stack 0
  1647  000075                     ___lmul@product:
  1648                           	opt stack 0
  1649                           
  1650                           ; 4 bytes @ 0x15
  1651  000075                     	ds	1
  1652  000076                     USB_loop@data:
  1653                           	opt stack 0
  1654                           
  1655                           ; 1 bytes @ 0x16
  1656  000076                     	ds	3
  1657  000079                     ?_get_quot_rem:
  1658                           	opt stack 0
  1659  000079                     get_quot_rem@quot:
  1660                           	opt stack 0
  1661  000079                     caltime_to_epoch@tm:
  1662                           	opt stack 0
  1663                           
  1664                           ; 2 bytes @ 0x19
  1665  000079                     	ds	2
  1666  00007B                     ??_caltime_to_epoch:
  1667  00007B                     get_quot_rem@div:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x1B
  1671  00007B                     	ds	2
  1672  00007D                     get_quot_rem@num:
  1673                           	opt stack 0
  1674                           
  1675                           ; 4 bytes @ 0x1D
  1676  00007D                     	ds	1
  1677  00007E                     ??_sprintf:
  1678                           
  1679                           ; 0 bytes @ 0x1E
  1680  00007E                     	ds	1
  1681  00007F                     caltime_to_epoch@year:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x1F
  1685  00007F                     	ds	1
  1686  000080                     caltime_to_epoch@month_3928:
  1687                           	opt stack 0
  1688                           
  1689                           ; 1 bytes @ 0x20
  1690  000080                     	ds	1
  1691  000081                     epoch_to_caltime@tm:
  1692                           	opt stack 0
  1693  000081                     caltime_to_epoch@epoch:
  1694                           	opt stack 0
  1695                           
  1696                           ; 4 bytes @ 0x21
  1697  000081                     	ds	1
  1698  000082                     sprintf@prec:
  1699                           	opt stack 0
  1700                           
  1701                           ; 1 bytes @ 0x22
  1702  000082                     	ds	1
  1703  000083                     ??_epoch_to_caltime:
  1704  000083                     sprintf@ap:
  1705                           	opt stack 0
  1706                           
  1707                           ; 2 bytes @ 0x23
  1708  000083                     	ds	2
  1709  000085                     caltime_to_epoch@month:
  1710                           	opt stack 0
  1711  000085                     epoch_to_caltime@day_since_epoch:
  1712                           	opt stack 0
  1713  000085                     sprintf@cp:
  1714                           	opt stack 0
  1715                           
  1716                           ; 2 bytes @ 0x25
  1717  000085                     	ds	1
  1718  000086                     RTCC_from_RTCC@tm:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x26
  1722  000086                     	ds	1
  1723  000087                     epoch_to_caltime@day:
  1724                           	opt stack 0
  1725  000087                     sprintf@val:
  1726                           	opt stack 0
  1727                           
  1728                           ; 2 bytes @ 0x27
  1729  000087                     	ds	1
  1730  000088                     
  1731                           ; 0 bytes @ 0x28
  1732  000088                     	ds	1
  1733  000089                     epoch_to_caltime@year:
  1734                           	opt stack 0
  1735  000089                     sprintf@len:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0x29
  1739  000089                     	ds	1
  1740  00008A                     epoch_to_caltime@month:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0x2A
  1744  00008A                     	ds	1
  1745  00008B                     sprintf@flag:
  1746                           	opt stack 0
  1747  00008B                     epoch_to_caltime@num:
  1748                           	opt stack 0
  1749                           
  1750                           ; 4 bytes @ 0x2B
  1751  00008B                     	ds	1
  1752  00008C                     sprintf@c:
  1753                           	opt stack 0
  1754                           
  1755                           ; 1 bytes @ 0x2C
  1756  00008C                     	ds	1
  1757  00008D                     sprintf@width:
  1758                           	opt stack 0
  1759                           
  1760                           ; 2 bytes @ 0x2D
  1761  00008D                     	ds	2
  1762  00008F                     RTCC_from_caltime@tm:
  1763                           	opt stack 0
  1764  00008F                     RTCC_from_epoch@tm:
  1765                           	opt stack 0
  1766  00008F                     print_time@tx:
  1767                           	opt stack 0
  1768                           
  1769                           ; 2 bytes @ 0x2F
  1770  00008F                     	ds	2
  1771  000091                     print_time@str:
  1772                           	opt stack 0
  1773                           
  1774                           ; 30 bytes @ 0x31
  1775  000091                     	ds	30
  1776  0000AF                     terminal_at_hand@tx:
  1777                           	opt stack 0
  1778                           
  1779                           ; 2 bytes @ 0x4F
  1780  0000AF                     	ds	2
  1781  0000B1                     terminal_at_hand@hand:
  1782                           	opt stack 0
  1783                           
  1784                           ; 2 bytes @ 0x51
  1785  0000B1                     	ds	2
  1786  0000B3                     terminal_at_hand@min:
  1787                           	opt stack 0
  1788                           
  1789                           ; 1 bytes @ 0x53
  1790  0000B3                     	ds	1
  1791  0000B4                     terminal_at_hand@max:
  1792                           	opt stack 0
  1793                           
  1794                           ; 1 bytes @ 0x54
  1795  0000B4                     	ds	1
  1796  0000B5                     terminal_at_hand@value:
  1797                           	opt stack 0
  1798                           
  1799                           ; 1 bytes @ 0x55
  1800  0000B5                     	ds	1
  1801  0000B6                     terminal_time@tx:
  1802                           	opt stack 0
  1803                           
  1804                           ; 2 bytes @ 0x56
  1805  0000B6                     	ds	2
  1806  0000B8                     terminal_time@op0:
  1807                           	opt stack 0
  1808                           
  1809                           ; 2 bytes @ 0x58
  1810  0000B8                     	ds	2
  1811  0000BA                     terminal_time@op1:
  1812                           	opt stack 0
  1813                           
  1814                           ; 2 bytes @ 0x5A
  1815  0000BA                     	ds	2
  1816  0000BC                     terminal_time@op2:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x5C
  1820  0000BC                     	ds	2
  1821  0000BE                     _terminal_time$5948:
  1822                           	opt stack 0
  1823                           
  1824                           ; 1 bytes @ 0x5E
  1825  0000BE                     	ds	1
  1826  0000BF                     terminal_operation@tx:
  1827                           	opt stack 0
  1828                           
  1829                           ; 2 bytes @ 0x5F
  1830  0000BF                     	ds	2
  1831  0000C1                     terminal_operation@op0:
  1832                           	opt stack 0
  1833                           
  1834                           ; 2 bytes @ 0x61
  1835  0000C1                     	ds	2
  1836  0000C3                     terminal_operation@op1:
  1837                           	opt stack 0
  1838                           
  1839                           ; 2 bytes @ 0x63
  1840  0000C3                     	ds	2
  1841  0000C5                     terminal_operation@op2:
  1842                           	opt stack 0
  1843                           
  1844                           ; 2 bytes @ 0x65
  1845  0000C5                     	ds	2
  1846  0000C7                     terminal_operation@op3:
  1847                           	opt stack 0
  1848                           
  1849                           ; 2 bytes @ 0x67
  1850  0000C7                     	ds	2
  1851  0000C9                     terminal_loop@tx:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x69
  1855  0000C9                     	ds	2
  1856  0000CB                     terminal_loop@rx:
  1857                           	opt stack 0
  1858                           
  1859                           ; 2 bytes @ 0x6B
  1860  0000CB                     	ds	2
  1861  0000CD                     ??_terminal_loop:
  1862                           
  1863                           ; 0 bytes @ 0x6D
  1864  0000CD                     	ds	2
  1865  0000CF                     tblptru	equ	0xFF8
  1866                           tblptrh	equ	0xFF7
  1867                           tblptrl	equ	0xFF6
  1868                           tablat	equ	0xFF5
  1869                           postinc0	equ	0xFEE
  1870                           wreg	equ	0xFE8
  1871                           postdec1	equ	0xFE5
  1872                           fsr1h	equ	0xFE2
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           ; 0 bytes @ 0x6F
  1876                           
  1877                           	psect	cstackCOMRAM
  1878  00002D                     __pcstackCOMRAM:
  1879                           	opt stack 0
  1880  00002D                     ??_USBStdGetDscHandler:
  1881  00002D                     ??_USBStdGetStatusHandler:
  1882  00002D                     ?i2_USBTransferOnePacket:
  1883                           	opt stack 0
  1884  00002D                     USBConfigureEndpoint@direction:
  1885                           	opt stack 0
  1886  00002D                     USBCtrlTrfTxService@byteToSend:
  1887                           	opt stack 0
  1888  00002D                     USBCtrlTrfRxService@i:
  1889                           	opt stack 0
  1890  00002D                     i2USBTransferOnePacket@dir:
  1891                           	opt stack 0
  1892  00002D                     i2memset@p1:
  1893                           	opt stack 0
  1894                           
  1895                           ; 2 bytes @ 0x0
  1896  00002D                     	ds	1
  1897  00002E                     ??_USBConfigureEndpoint:
  1898  00002E                     USBCtrlTrfRxService@byteToRead:
  1899                           	opt stack 0
  1900  00002E                     USBCtrlTrfInHandler@lastDTS:
  1901                           	opt stack 0
  1902  00002E                     USBStdGetStatusHandler@p:
  1903                           	opt stack 0
  1904  00002E                     i2USBTransferOnePacket@data:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x1
  1908  00002E                     	ds	1
  1909  00002F                     i2memset@c:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x2
  1913  00002F                     	ds	1
  1914  000030                     i2USBTransferOnePacket@len:
  1915                           	opt stack 0
  1916                           
  1917                           ; 1 bytes @ 0x3
  1918  000030                     	ds	1
  1919  000031                     i2USBTransferOnePacket@ep:
  1920                           	opt stack 0
  1921  000031                     i2memset@n:
  1922                           	opt stack 0
  1923                           
  1924                           ; 2 bytes @ 0x4
  1925  000031                     	ds	1
  1926  000032                     USBConfigureEndpoint@EPNum:
  1927                           	opt stack 0
  1928  000032                     i2USBTransferOnePacket@handle:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x5
  1932  000032                     	ds	1
  1933  000033                     USBConfigureEndpoint@handle:
  1934                           	opt stack 0
  1935  000033                     i2memset@p:
  1936                           	opt stack 0
  1937                           
  1938                           ; 2 bytes @ 0x6
  1939  000033                     	ds	2
  1940  000035                     USBEnableEndpoint@options:
  1941                           	opt stack 0
  1942  000035                     i2USBDeviceInit@i:
  1943                           	opt stack 0
  1944                           
  1945                           ; 1 bytes @ 0x8
  1946  000035                     	ds	1
  1947  000036                     USBEnableEndpoint@p:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x9
  1951  000036                     	ds	2
  1952  000038                     USBEnableEndpoint@ep:
  1953                           	opt stack 0
  1954                           
  1955                           ; 1 bytes @ 0xB
  1956  000038                     	ds	1
  1957  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0xC
  1961  000039                     	ds	2
  1962  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0xE
  1966  00003B                     	ds	2
  1967  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0x10
  1971  00003D                     	ds	2
  1972  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1973                           
  1974                           ; 0 bytes @ 0x12
  1975  00003F                     	ds	2
  1976  000041                     ??_USBStdFeatureReqHandler:
  1977  000041                     USBStdSetCfgHandler@i:
  1978                           	opt stack 0
  1979                           
  1980                           ; 1 bytes @ 0x14
  1981  000041                     	ds	1
  1982  000042                     USBStdFeatureReqHandler@pUEP:
  1983                           	opt stack 0
  1984                           
  1985                           ; 2 bytes @ 0x15
  1986  000042                     	ds	2
  1987  000044                     USBStdFeatureReqHandler@current_ep_data:
  1988                           	opt stack 0
  1989                           
  1990                           ; 1 bytes @ 0x17
  1991  000044                     	ds	1
  1992  000045                     USBStdFeatureReqHandler@p:
  1993                           	opt stack 0
  1994                           
  1995                           ; 2 bytes @ 0x18
  1996  000045                     	ds	2
  1997  000047                     ??_USBCtrlEPService:
  1998  000047                     
  1999                           ; 0 bytes @ 0x1A
  2000  000047                     	ds	2
  2001  000049                     USBCtrlEPService@setup_cnt:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0x1C
  2005  000049                     	ds	1
  2006  00004A                     USBDeviceTasks@i:
  2007                           	opt stack 0
  2008                           
  2009                           ; 1 bytes @ 0x1D
  2010  00004A                     	ds	1
  2011  00004B                     ??_ISR:
  2012                           
  2013                           ; 0 bytes @ 0x1E
  2014  00004B                     	ds	14
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           postinc0	equ	0xFEE
  2020                           wreg	equ	0xFE8
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           
  2025 ;;
  2026 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2027 ;;
  2028 ;; *************** function _main *****************
  2029 ;; Defined at:
  2030 ;;		line 111 in file "PIC18F27J53-test01.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  str            20    0[BANK2 ] unsigned char [20]
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2  1348[None  ] int 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Locals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;      Totals:         0       0       0      20       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;Total ram usage:       20 bytes
  2049 ;; Hardware stack levels required when called:   20
  2050 ;; This function calls:
  2051 ;;		_I2C_LCD_Clear
  2052 ;;		_I2C_LCD_Puts
  2053 ;;		_I2C_LCD_SetCursor
  2054 ;;		_RTCC_loop
  2055 ;;		_USB_loop
  2056 ;;		_hardware_init
  2057 ;;		_software_init
  2058 ;;		_sprintf
  2059 ;;		_terminal_loop
  2060 ;; This function is called by:
  2061 ;;		Startup code after reset
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text0
  2066  011888                     __ptext0:
  2067                           	opt stack 0
  2068  011888                     _main:
  2069                           	opt stack 11
  2070                           
  2071                           ;PIC18F27J53-test01.c: 113: hardware_init();
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;incstack = 0
  2075  011888  EC1E  F098         	call	_hardware_init	;wreg free
  2076                           
  2077                           ;PIC18F27J53-test01.c: 115: software_init();
  2078  01188C  EC70  F09B         	call	_software_init	;wreg free
  2079  011890  D093               	goto	l9260
  2080  011892                     l9218:
  2081                           
  2082                           ;PIC18F27J53-test01.c: 120: INTCONbits.GIE = 0;
  2083  011892  9EF2               	bcf	intcon,7,c	;volatile
  2084                           
  2085                           ;PIC18F27J53-test01.c: 121: RTCC_loop();
  2086  011894  ECBD  F09D         	call	_RTCC_loop	;wreg free
  2087                           
  2088                           ;PIC18F27J53-test01.c: 122: INTCONbits.GIE = 1;
  2089  011898  8EF2               	bsf	intcon,7,c	;volatile
  2090                           
  2091                           ;PIC18F27J53-test01.c: 123: INTCONbits.GIE = 0;
  2092  01189A  9EF2               	bcf	intcon,7,c	;volatile
  2093                           
  2094                           ;PIC18F27J53-test01.c: 124: if (time_change_flag) {
  2095  01189C  0100               	movlb	0	; () banked
  2096  01189E  51ED               	movf	_time_change_flag& (0+255),w,b
  2097  0118A0  B4D8               	btfsc	status,2,c
  2098  0118A2  D076               	goto	l9248
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;PIC18F27J53-test01.c: 125: time_change_flag = 0;
  2102  0118A4  0E00               	movlw	0
  2103  0118A6  0100               	movlb	0	; () banked
  2104  0118A8  6FED               	movwf	_time_change_flag& (0+255),b
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;PIC18F27J53-test01.c: 126: char str[20];
  2108                           ;PIC18F27J53-test01.c: 127: I2C_LCD_Clear();
  2109  0118AA  EC10  F0A0         	call	_I2C_LCD_Clear	;wreg free
  2110                           
  2111                           ;PIC18F27J53-test01.c: 128: I2C_LCD_SetCursor(0, 0);
  2112  0118AE  0E00               	movlw	0
  2113  0118B0  0100               	movlb	0	; () banked
  2114  0118B2  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2115  0118B4  0E00               	movlw	0
  2116  0118B6  EC37  F09F         	call	_I2C_LCD_SetCursor
  2117                           
  2118                           ;PIC18F27J53-test01.c: 129: sprintf(str, "%02d/%02d/%02d", now.YY, now.MM, now.DD);
  2119  0118BA  0EB2               	movlw	low main@str
  2120  0118BC  0100               	movlb	0	; () banked
  2121  0118BE  6F6C               	movwf	sprintf@sp& (0+255),b
  2122  0118C0  0E02               	movlw	high main@str
  2123  0118C2  0100               	movlb	0	; () banked
  2124  0118C4  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  2125  0118C6  0E5B               	movlw	low STR_50
  2126  0118C8  0100               	movlb	0	; () banked
  2127  0118CA  6F6E               	movwf	sprintf@f& (0+255),b
  2128  0118CC  0EFF               	movlw	high STR_50
  2129  0118CE  0100               	movlb	0	; () banked
  2130  0118D0  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  2131  0118D2  C150  F070         	movff	_now+10,?_sprintf+4
  2132  0118D6  0100               	movlb	0	; () banked
  2133  0118D8  6B71               	clrf	(?_sprintf+5)& (0+255),b
  2134  0118DA  C14F  F072         	movff	_now+9,?_sprintf+6
  2135  0118DE  0100               	movlb	0	; () banked
  2136  0118E0  6B73               	clrf	(?_sprintf+7)& (0+255),b
  2137  0118E2  C14E  F074         	movff	_now+8,?_sprintf+8
  2138  0118E6  0100               	movlb	0	; () banked
  2139  0118E8  6B75               	clrf	(?_sprintf+9)& (0+255),b
  2140  0118EA  EC00  F080         	call	_sprintf	;wreg free
  2141                           
  2142                           ;PIC18F27J53-test01.c: 130: I2C_LCD_Puts(str);
  2143  0118EE  0EB2               	movlw	low main@str
  2144  0118F0  0100               	movlb	0	; () banked
  2145  0118F2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2146  0118F4  0E02               	movlw	high main@str
  2147  0118F6  0100               	movlb	0	; () banked
  2148  0118F8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2149  0118FA  EC05  F099         	call	_I2C_LCD_Puts	;wreg free
  2150                           
  2151                           ;PIC18F27J53-test01.c: 131: I2C_LCD_SetCursor(0, 1);
  2152  0118FE  0E01               	movlw	1
  2153  011900  0100               	movlb	0	; () banked
  2154  011902  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  2155  011904  0E00               	movlw	0
  2156  011906  EC37  F09F         	call	_I2C_LCD_SetCursor
  2157                           
  2158                           ;PIC18F27J53-test01.c: 132: if (now.colon)sprintf(str, "%02d:%02d-%02d", now.hh, now.mm,
      +                           now.ss);
  2159  01190A  0101               	movlb	1	; () banked
  2160  01190C  5151               	movf	(_now+11)& (0+255),w,b
  2161  01190E  B4D8               	btfsc	status,2,c
  2162  011910  D01B               	goto	l9244
  2163                           
  2164                           ; BSR set to: 1
  2165  011912  0EB2               	movlw	low main@str
  2166  011914  0100               	movlb	0	; () banked
  2167  011916  6F6C               	movwf	sprintf@sp& (0+255),b
  2168  011918  0E02               	movlw	high main@str
  2169  01191A  0100               	movlb	0	; () banked
  2170  01191C  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  2171  01191E  0E4C               	movlw	low STR_51
  2172  011920  0100               	movlb	0	; () banked
  2173  011922  6F6E               	movwf	sprintf@f& (0+255),b
  2174  011924  0EFF               	movlw	high STR_51
  2175  011926  0100               	movlb	0	; () banked
  2176  011928  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  2177  01192A  C14C  F070         	movff	_now+6,?_sprintf+4
  2178  01192E  0100               	movlb	0	; () banked
  2179  011930  6B71               	clrf	(?_sprintf+5)& (0+255),b
  2180  011932  C14B  F072         	movff	_now+5,?_sprintf+6
  2181  011936  0100               	movlb	0	; () banked
  2182  011938  6B73               	clrf	(?_sprintf+7)& (0+255),b
  2183  01193A  C14A  F074         	movff	_now+4,?_sprintf+8
  2184  01193E  0100               	movlb	0	; () banked
  2185  011940  6B75               	clrf	(?_sprintf+9)& (0+255),b
  2186  011942  EC00  F080         	call	_sprintf	;wreg free
  2187  011946  D01B               	goto	l9246
  2188  011948                     l9244:
  2189                           
  2190                           ;PIC18F27J53-test01.c: 133: else sprintf(str, "%02d %02d-%02d", now.hh, now.mm, now.ss);
  2191  011948  0EB2               	movlw	low main@str
  2192  01194A  0100               	movlb	0	; () banked
  2193  01194C  6F6C               	movwf	sprintf@sp& (0+255),b
  2194  01194E  0E02               	movlw	high main@str
  2195  011950  0100               	movlb	0	; () banked
  2196  011952  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  2197  011954  0E3D               	movlw	low STR_52
  2198  011956  0100               	movlb	0	; () banked
  2199  011958  6F6E               	movwf	sprintf@f& (0+255),b
  2200  01195A  0EFF               	movlw	high STR_52
  2201  01195C  0100               	movlb	0	; () banked
  2202  01195E  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  2203  011960  C14C  F070         	movff	_now+6,?_sprintf+4
  2204  011964  0100               	movlb	0	; () banked
  2205  011966  6B71               	clrf	(?_sprintf+5)& (0+255),b
  2206  011968  C14B  F072         	movff	_now+5,?_sprintf+6
  2207  01196C  0100               	movlb	0	; () banked
  2208  01196E  6B73               	clrf	(?_sprintf+7)& (0+255),b
  2209  011970  C14A  F074         	movff	_now+4,?_sprintf+8
  2210  011974  0100               	movlb	0	; () banked
  2211  011976  6B75               	clrf	(?_sprintf+9)& (0+255),b
  2212  011978  EC00  F080         	call	_sprintf	;wreg free
  2213  01197C  D000               	goto	l9246
  2214  01197E                     l9246:
  2215                           
  2216                           ;PIC18F27J53-test01.c: 134: I2C_LCD_Puts(str);
  2217  01197E  0EB2               	movlw	low main@str
  2218  011980  0100               	movlb	0	; () banked
  2219  011982  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  2220  011984  0E02               	movlw	high main@str
  2221  011986  0100               	movlb	0	; () banked
  2222  011988  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  2223  01198A  EC05  F099         	call	_I2C_LCD_Puts	;wreg free
  2224  01198E  D000               	goto	l9248
  2225  011990                     l9248:
  2226                           
  2227                           ;PIC18F27J53-test01.c: 135: }
  2228                           ;PIC18F27J53-test01.c: 136: INTCONbits.GIE = 1;
  2229  011990  8EF2               	bsf	intcon,7,c	;volatile
  2230                           
  2231                           ;PIC18F27J53-test01.c: 137: INTCONbits.GIE = 0;
  2232  011992  9EF2               	bcf	intcon,7,c	;volatile
  2233                           
  2234                           ;PIC18F27J53-test01.c: 138: USB_loop();
  2235  011994  EC97  F099         	call	_USB_loop	;wreg free
  2236                           
  2237                           ;PIC18F27J53-test01.c: 139: INTCONbits.GIE = 1;
  2238  011998  8EF2               	bsf	intcon,7,c	;volatile
  2239                           
  2240                           ;PIC18F27J53-test01.c: 140: INTCONbits.GIE = 0;
  2241  01199A  9EF2               	bcf	intcon,7,c	;volatile
  2242                           
  2243                           ;PIC18F27J53-test01.c: 141: terminal_loop(&usb_tx, &usb_rx);
  2244  01199C  0E74               	movlw	low _usb_tx
  2245  01199E  0100               	movlb	0	; () banked
  2246  0119A0  6FC9               	movwf	terminal_loop@tx& (0+255),b
  2247  0119A2  0E01               	movlw	high _usb_tx
  2248  0119A4  0100               	movlb	0	; () banked
  2249  0119A6  6FCA               	movwf	(terminal_loop@tx+1)& (0+255),b
  2250  0119A8  0E6C               	movlw	low _usb_rx
  2251  0119AA  0100               	movlb	0	; () banked
  2252  0119AC  6FCB               	movwf	terminal_loop@rx& (0+255),b
  2253  0119AE  0E01               	movlw	high _usb_rx
  2254  0119B0  0100               	movlb	0	; () banked
  2255  0119B2  6FCC               	movwf	(terminal_loop@rx+1)& (0+255),b
  2256  0119B4  EC31  F084         	call	_terminal_loop	;wreg free
  2257  0119B8                     l9260:
  2258                           
  2259                           ;PIC18F27J53-test01.c: 142: INTCONbits.GIE = 1;
  2260  0119B8  8EF2               	bsf	intcon,7,c	;volatile
  2261  0119BA  D76B               	goto	l9218
  2262                           
  2263                           ;PIC18F27J53-test01.c: 143: }
  2264                           ;PIC18F27J53-test01.c: 144: return 0;
  2265                           ;	Return value of _main is never used
  2266  0119BC  EF51  F000         	goto	start
  2267  0119C0                     __end_of_main:
  2268                           	opt stack 0
  2269                           tblptru	equ	0xFF8
  2270                           tblptrh	equ	0xFF7
  2271                           tblptrl	equ	0xFF6
  2272                           tablat	equ	0xFF5
  2273                           intcon	equ	0xFF2
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1h	equ	0xFE2
  2278                           fsr1l	equ	0xFE1
  2279                           status	equ	0xFD8
  2280                           
  2281 ;; *************** function _terminal_loop *****************
  2282 ;; Defined at:
  2283 ;;		line 8 in file "../My_library/My_terminal.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  tx              2  105[BANK0 ] PTR struct ringbuf
  2286 ;;		 -> usb_tx(8), 
  2287 ;;  rx              2  107[BANK0 ] PTR struct ringbuf
  2288 ;;		 -> usb_rx(8), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  i               1  102[BANK1 ] unsigned char 
  2291 ;;  i               1  104[BANK1 ] unsigned char 
  2292 ;;  ascii           1  103[BANK1 ] unsigned char 
  2293 ;;  buf           100    0[BANK1 ] unsigned char [100]
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         0       0     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         0       6     105       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:      111 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:   19
  2310 ;; This function calls:
  2311 ;;		_ringbuf_backspace
  2312 ;;		_ringbuf_delete
  2313 ;;		_ringbuf_init
  2314 ;;		_ringbuf_num
  2315 ;;		_ringbuf_pop
  2316 ;;		_ringbuf_put
  2317 ;;		_ringbuf_put_num
  2318 ;;		_ringbuf_put_str
  2319 ;;		_terminal_operation
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text1
  2326  010862                     __ptext1:
  2327                           	opt stack 0
  2328  010862                     _terminal_loop:
  2329                           	opt stack 11
  2330                           
  2331                           ;My_terminal.c: 9: static ringbuf_t command;
  2332                           ;My_terminal.c: 10: static uint8_t command_init = 0;
  2333                           ;My_terminal.c: 11: if (command_init == 0) {
  2334                           
  2335                           ;incstack = 0
  2336  010862  0100               	movlb	0	; () banked
  2337  010864  51EF               	movf	terminal_loop@command_init& (0+255),w,b
  2338  010866  0100               	movlb	0	; () banked
  2339  010868  A4D8               	btfss	status,2,c
  2340  01086A  D017               	goto	l8850
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;My_terminal.c: 12: command_init = 1;
  2344  01086C  0E01               	movlw	1
  2345  01086E  0100               	movlb	0	; () banked
  2346  010870  6FEF               	movwf	terminal_loop@command_init& (0+255),b
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;My_terminal.c: 13: char buf[100];
  2350                           ;My_terminal.c: 14: ringbuf_init(&command, buf, sizeof (buf));
  2351  010872  0E7C               	movlw	low terminal_loop@command
  2352  010874  0100               	movlb	0	; () banked
  2353  010876  6F60               	movwf	ringbuf_init@rb& (0+255),b
  2354  010878  0E01               	movlw	high terminal_loop@command
  2355  01087A  0100               	movlb	0	; () banked
  2356  01087C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  2357  01087E  0E8B               	movlw	low terminal_loop@buf
  2358  010880  0100               	movlb	0	; () banked
  2359  010882  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  2360  010884  0E01               	movlw	high terminal_loop@buf
  2361  010886  0100               	movlb	0	; () banked
  2362  010888  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  2363  01088A  0E00               	movlw	0
  2364  01088C  0100               	movlb	0	; () banked
  2365  01088E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  2366  010890  0E64               	movlw	100
  2367  010892  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  2368  010894  EC1D  F09D         	call	_ringbuf_init	;wreg free
  2369  010898  D000               	goto	l8850
  2370  01089A                     l8850:
  2371                           
  2372                           ;My_terminal.c: 15: }
  2373                           ;My_terminal.c: 16: if (ringbuf_num(rx)) {
  2374  01089A  C0CB  F060         	movff	terminal_loop@rx,ringbuf_num@rb
  2375  01089E  C0CC  F061         	movff	terminal_loop@rx+1,ringbuf_num@rb+1
  2376  0108A2  EC03  F090         	call	_ringbuf_num	;wreg free
  2377  0108A6  0100               	movlb	0	; () banked
  2378  0108A8  5160               	movf	?_ringbuf_num& (0+255),w,b
  2379  0108AA  0100               	movlb	0	; () banked
  2380  0108AC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  2381  0108AE  B4D8               	btfsc	status,2,c
  2382  0108B0  0012               	return	
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;My_terminal.c: 17: char ascii = ringbuf_pop(rx);
  2386  0108B2  C0CB  F068         	movff	terminal_loop@rx,ringbuf_pop@rb
  2387  0108B6  C0CC  F069         	movff	terminal_loop@rx+1,ringbuf_pop@rb+1
  2388  0108BA  EC55  F094         	call	_ringbuf_pop	;wreg free
  2389  0108BE  0101               	movlb	1	; () banked
  2390  0108C0  6FF2               	movwf	terminal_loop@ascii& (0+255),b
  2391                           
  2392                           ;My_terminal.c: 18: switch (ascii) {
  2393  0108C2  D17B               	goto	l8914
  2394  0108C4                     l8854:
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;My_terminal.c: 20: ringbuf_put(&command, '\0');
  2398  0108C4  0E7C               	movlw	low terminal_loop@command
  2399  0108C6  0100               	movlb	0	; () banked
  2400  0108C8  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2401  0108CA  0E01               	movlw	high terminal_loop@command
  2402  0108CC  0100               	movlb	0	; () banked
  2403  0108CE  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2404  0108D0  0E00               	movlw	0
  2405  0108D2  0100               	movlb	0	; () banked
  2406  0108D4  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2407  0108D6  EC82  F093         	call	_ringbuf_put	;wreg free
  2408                           
  2409                           ;My_terminal.c: 21: ringbuf_put(tx, '\t');
  2410  0108DA  C0C9  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2411  0108DE  C0CA  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2412  0108E2  0E09               	movlw	9
  2413  0108E4  0100               	movlb	0	; () banked
  2414  0108E6  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2415  0108E8  EC82  F093         	call	_ringbuf_put	;wreg free
  2416                           
  2417                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2418  0108EC  0E7C               	movlw	low terminal_loop@command
  2419  0108EE  0100               	movlb	0	; () banked
  2420  0108F0  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2421  0108F2  0E01               	movlw	high terminal_loop@command
  2422  0108F4  0100               	movlb	0	; () banked
  2423  0108F6  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2424  0108F8  EC03  F090         	call	_ringbuf_num	;wreg free
  2425  0108FC  0EFF               	movlw	255
  2426  0108FE  0100               	movlb	0	; () banked
  2427  010900  2560               	addwf	?_ringbuf_num& (0+255),w,b
  2428  010902  0101               	movlb	1	; () banked
  2429  010904  6FEF               	movwf	_terminal_loop$5947& (0+255),b
  2430  010906  0EFF               	movlw	255
  2431  010908  0100               	movlb	0	; () banked
  2432  01090A  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  2433  01090C  0101               	movlb	1	; () banked
  2434  01090E  6FF0               	movwf	(_terminal_loop$5947+1)& (0+255),b
  2435                           
  2436                           ;My_terminal.c: 22: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  2437  010910  C0C9  F06F         	movff	terminal_loop@tx,ringbuf_put_num@rb
  2438  010914  C0CA  F070         	movff	terminal_loop@tx+1,ringbuf_put_num@rb+1
  2439  010918  C1EF  F071         	movff	_terminal_loop$5947,ringbuf_put_num@value
  2440  01091C  C1F0  F072         	movff	_terminal_loop$5947+1,ringbuf_put_num@value+1
  2441  010920  0E02               	movlw	2
  2442  010922  0100               	movlb	0	; () banked
  2443  010924  6F73               	movwf	ringbuf_put_num@digits& (0+255),b
  2444  010926  EC6B  F09A         	call	_ringbuf_put_num	;wreg free
  2445                           
  2446                           ;My_terminal.c: 23: ringbuf_put(tx, '\n');
  2447  01092A  C0C9  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2448  01092E  C0CA  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2449  010932  0E0A               	movlw	10
  2450  010934  0100               	movlb	0	; () banked
  2451  010936  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2452  010938  EC82  F093         	call	_ringbuf_put	;wreg free
  2453                           
  2454                           ;My_terminal.c: 24: static char op0[25];
  2455                           ;My_terminal.c: 25: static char op1[25];
  2456                           ;My_terminal.c: 26: static char op2[25];
  2457                           ;My_terminal.c: 27: static char op3[25];
  2458                           ;My_terminal.c: 28: uint8_t i;
  2459                           ;My_terminal.c: 29: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  2460  01093C  0E00               	movlw	0
  2461  01093E  0101               	movlb	1	; () banked
  2462  010940  6FF3               	movwf	terminal_loop@i& (0+255),b
  2463  010942  D003               	goto	l8860
  2464  010944                     l8858:
  2465                           
  2466                           ; BSR set to: 1
  2467  010944  0101               	movlb	1	; () banked
  2468  010946  2BF3               	incf	terminal_loop@i& (0+255),f,b
  2469  010948  D000               	goto	l8860
  2470  01094A                     l8860:
  2471                           
  2472                           ; BSR set to: 1
  2473  01094A  0E7C               	movlw	low terminal_loop@command
  2474  01094C  0100               	movlb	0	; () banked
  2475  01094E  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2476  010950  0E01               	movlw	high terminal_loop@command
  2477  010952  0100               	movlb	0	; () banked
  2478  010954  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2479  010956  EC55  F094         	call	_ringbuf_pop	;wreg free
  2480  01095A  0100               	movlb	0	; () banked
  2481  01095C  6FCD               	movwf	??_terminal_loop& (0+255),b
  2482  01095E  0101               	movlb	1	; () banked
  2483  010960  51F3               	movf	terminal_loop@i& (0+255),w,b
  2484  010962  0D01               	mullw	1
  2485  010964  0E14               	movlw	low terminal_loop@op0
  2486  010966  24F3               	addwf	prodl,w,c
  2487  010968  6ED9               	movwf	fsr2l,c
  2488  01096A  0E01               	movlw	high terminal_loop@op0
  2489  01096C  20F4               	addwfc	prodh,w,c
  2490  01096E  6EDA               	movwf	fsr2h,c
  2491  010970  C0CD  FFDF         	movff	??_terminal_loop,indf2
  2492  010974  50DF               	movf	indf2,w,c
  2493  010976  A4D8               	btfss	status,2,c
  2494  010978  D7E5               	goto	l8858
  2495                           
  2496                           ; BSR set to: 1
  2497                           ;My_terminal.c: 30: op0[i] = '\0';
  2498                           
  2499                           ; BSR set to: 1
  2500  01097A  0101               	movlb	1	; () banked
  2501  01097C  51F3               	movf	terminal_loop@i& (0+255),w,b
  2502  01097E  0D01               	mullw	1
  2503  010980  0E14               	movlw	low terminal_loop@op0
  2504  010982  24F3               	addwf	prodl,w,c
  2505  010984  6ED9               	movwf	fsr2l,c
  2506  010986  0E01               	movlw	high terminal_loop@op0
  2507  010988  20F4               	addwfc	prodh,w,c
  2508  01098A  6EDA               	movwf	fsr2h,c
  2509  01098C  0E00               	movlw	0
  2510  01098E  6EDF               	movwf	indf2,c
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;My_terminal.c: 31: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  2514  010990  0E00               	movlw	0
  2515  010992  0101               	movlb	1	; () banked
  2516  010994  6FF3               	movwf	terminal_loop@i& (0+255),b
  2517  010996  D003               	goto	l8868
  2518  010998                     l8866:
  2519                           
  2520                           ; BSR set to: 1
  2521  010998  0101               	movlb	1	; () banked
  2522  01099A  2BF3               	incf	terminal_loop@i& (0+255),f,b
  2523  01099C  D000               	goto	l8868
  2524  01099E                     l8868:
  2525                           
  2526                           ; BSR set to: 1
  2527  01099E  0E7C               	movlw	low terminal_loop@command
  2528  0109A0  0100               	movlb	0	; () banked
  2529  0109A2  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2530  0109A4  0E01               	movlw	high terminal_loop@command
  2531  0109A6  0100               	movlb	0	; () banked
  2532  0109A8  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2533  0109AA  EC55  F094         	call	_ringbuf_pop	;wreg free
  2534  0109AE  0100               	movlb	0	; () banked
  2535  0109B0  6FCD               	movwf	??_terminal_loop& (0+255),b
  2536  0109B2  0101               	movlb	1	; () banked
  2537  0109B4  51F3               	movf	terminal_loop@i& (0+255),w,b
  2538  0109B6  0D01               	mullw	1
  2539  0109B8  0E2D               	movlw	low terminal_loop@op1
  2540  0109BA  24F3               	addwf	prodl,w,c
  2541  0109BC  6ED9               	movwf	fsr2l,c
  2542  0109BE  0E01               	movlw	high terminal_loop@op1
  2543  0109C0  20F4               	addwfc	prodh,w,c
  2544  0109C2  6EDA               	movwf	fsr2h,c
  2545  0109C4  C0CD  FFDF         	movff	??_terminal_loop,indf2
  2546  0109C8  50DF               	movf	indf2,w,c
  2547  0109CA  A4D8               	btfss	status,2,c
  2548  0109CC  D7E5               	goto	l8866
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;My_terminal.c: 32: op1[i] = '\0';
  2552                           
  2553                           ; BSR set to: 1
  2554  0109CE  0101               	movlb	1	; () banked
  2555  0109D0  51F3               	movf	terminal_loop@i& (0+255),w,b
  2556  0109D2  0D01               	mullw	1
  2557  0109D4  0E2D               	movlw	low terminal_loop@op1
  2558  0109D6  24F3               	addwf	prodl,w,c
  2559  0109D8  6ED9               	movwf	fsr2l,c
  2560  0109DA  0E01               	movlw	high terminal_loop@op1
  2561  0109DC  20F4               	addwfc	prodh,w,c
  2562  0109DE  6EDA               	movwf	fsr2h,c
  2563  0109E0  0E00               	movlw	0
  2564  0109E2  6EDF               	movwf	indf2,c
  2565                           
  2566                           ; BSR set to: 1
  2567                           ;My_terminal.c: 33: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  2568  0109E4  0E00               	movlw	0
  2569  0109E6  0101               	movlb	1	; () banked
  2570  0109E8  6FF3               	movwf	terminal_loop@i& (0+255),b
  2571  0109EA  D003               	goto	l8876
  2572  0109EC                     l8874:
  2573                           
  2574                           ; BSR set to: 1
  2575  0109EC  0101               	movlb	1	; () banked
  2576  0109EE  2BF3               	incf	terminal_loop@i& (0+255),f,b
  2577  0109F0  D000               	goto	l8876
  2578  0109F2                     l8876:
  2579                           
  2580                           ; BSR set to: 1
  2581  0109F2  0E7C               	movlw	low terminal_loop@command
  2582  0109F4  0100               	movlb	0	; () banked
  2583  0109F6  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2584  0109F8  0E01               	movlw	high terminal_loop@command
  2585  0109FA  0100               	movlb	0	; () banked
  2586  0109FC  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2587  0109FE  EC55  F094         	call	_ringbuf_pop	;wreg free
  2588  010A02  0100               	movlb	0	; () banked
  2589  010A04  6FCD               	movwf	??_terminal_loop& (0+255),b
  2590  010A06  0101               	movlb	1	; () banked
  2591  010A08  51F3               	movf	terminal_loop@i& (0+255),w,b
  2592  010A0A  0D01               	mullw	1
  2593  010A0C  0E80               	movlw	low terminal_loop@op2
  2594  010A0E  24F3               	addwf	prodl,w,c
  2595  010A10  6ED9               	movwf	fsr2l,c
  2596  010A12  0E02               	movlw	high terminal_loop@op2
  2597  010A14  20F4               	addwfc	prodh,w,c
  2598  010A16  6EDA               	movwf	fsr2h,c
  2599  010A18  C0CD  FFDF         	movff	??_terminal_loop,indf2
  2600  010A1C  50DF               	movf	indf2,w,c
  2601  010A1E  A4D8               	btfss	status,2,c
  2602  010A20  D7E5               	goto	l8874
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;My_terminal.c: 34: op2[i] = '\0';
  2606                           
  2607                           ; BSR set to: 1
  2608  010A22  0101               	movlb	1	; () banked
  2609  010A24  51F3               	movf	terminal_loop@i& (0+255),w,b
  2610  010A26  0D01               	mullw	1
  2611  010A28  0E80               	movlw	low terminal_loop@op2
  2612  010A2A  24F3               	addwf	prodl,w,c
  2613  010A2C  6ED9               	movwf	fsr2l,c
  2614  010A2E  0E02               	movlw	high terminal_loop@op2
  2615  010A30  20F4               	addwfc	prodh,w,c
  2616  010A32  6EDA               	movwf	fsr2h,c
  2617  010A34  0E00               	movlw	0
  2618  010A36  6EDF               	movwf	indf2,c
  2619                           
  2620                           ; BSR set to: 1
  2621                           ;My_terminal.c: 35: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  2622  010A38  0E00               	movlw	0
  2623  010A3A  0101               	movlb	1	; () banked
  2624  010A3C  6FF3               	movwf	terminal_loop@i& (0+255),b
  2625  010A3E  D003               	goto	l8884
  2626  010A40                     l8882:
  2627                           
  2628                           ; BSR set to: 1
  2629  010A40  0101               	movlb	1	; () banked
  2630  010A42  2BF3               	incf	terminal_loop@i& (0+255),f,b
  2631  010A44  D000               	goto	l8884
  2632  010A46                     l8884:
  2633                           
  2634                           ; BSR set to: 1
  2635  010A46  0E7C               	movlw	low terminal_loop@command
  2636  010A48  0100               	movlb	0	; () banked
  2637  010A4A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  2638  010A4C  0E01               	movlw	high terminal_loop@command
  2639  010A4E  0100               	movlb	0	; () banked
  2640  010A50  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  2641  010A52  EC55  F094         	call	_ringbuf_pop	;wreg free
  2642  010A56  0100               	movlb	0	; () banked
  2643  010A58  6FCD               	movwf	??_terminal_loop& (0+255),b
  2644  010A5A  0101               	movlb	1	; () banked
  2645  010A5C  51F3               	movf	terminal_loop@i& (0+255),w,b
  2646  010A5E  0D01               	mullw	1
  2647  010A60  0E99               	movlw	low terminal_loop@op3
  2648  010A62  24F3               	addwf	prodl,w,c
  2649  010A64  6ED9               	movwf	fsr2l,c
  2650  010A66  0E02               	movlw	high terminal_loop@op3
  2651  010A68  20F4               	addwfc	prodh,w,c
  2652  010A6A  6EDA               	movwf	fsr2h,c
  2653  010A6C  C0CD  FFDF         	movff	??_terminal_loop,indf2
  2654  010A70  50DF               	movf	indf2,w,c
  2655  010A72  A4D8               	btfss	status,2,c
  2656  010A74  D7E5               	goto	l8882
  2657                           
  2658                           ; BSR set to: 1
  2659                           ;My_terminal.c: 36: op3[i] = '\0';
  2660                           
  2661                           ; BSR set to: 1
  2662  010A76  0101               	movlb	1	; () banked
  2663  010A78  51F3               	movf	terminal_loop@i& (0+255),w,b
  2664  010A7A  0D01               	mullw	1
  2665  010A7C  0E99               	movlw	low terminal_loop@op3
  2666  010A7E  24F3               	addwf	prodl,w,c
  2667  010A80  6ED9               	movwf	fsr2l,c
  2668  010A82  0E02               	movlw	high terminal_loop@op3
  2669  010A84  20F4               	addwfc	prodh,w,c
  2670  010A86  6EDA               	movwf	fsr2h,c
  2671  010A88  0E00               	movlw	0
  2672  010A8A  6EDF               	movwf	indf2,c
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;My_terminal.c: 37: terminal_operation(tx, op0, op1, op2, op3);
  2676  010A8C  C0C9  F0BF         	movff	terminal_loop@tx,terminal_operation@tx
  2677  010A90  C0CA  F0C0         	movff	terminal_loop@tx+1,terminal_operation@tx+1
  2678  010A94  0E14               	movlw	low terminal_loop@op0
  2679  010A96  0100               	movlb	0	; () banked
  2680  010A98  6FC1               	movwf	terminal_operation@op0& (0+255),b
  2681  010A9A  0E01               	movlw	high terminal_loop@op0
  2682  010A9C  0100               	movlb	0	; () banked
  2683  010A9E  6FC2               	movwf	(terminal_operation@op0+1)& (0+255),b
  2684  010AA0  0E2D               	movlw	low terminal_loop@op1
  2685  010AA2  0100               	movlb	0	; () banked
  2686  010AA4  6FC3               	movwf	terminal_operation@op1& (0+255),b
  2687  010AA6  0E01               	movlw	high terminal_loop@op1
  2688  010AA8  0100               	movlb	0	; () banked
  2689  010AAA  6FC4               	movwf	(terminal_operation@op1+1)& (0+255),b
  2690  010AAC  0E80               	movlw	low terminal_loop@op2
  2691  010AAE  0100               	movlb	0	; () banked
  2692  010AB0  6FC5               	movwf	terminal_operation@op2& (0+255),b
  2693  010AB2  0E02               	movlw	high terminal_loop@op2
  2694  010AB4  0100               	movlb	0	; () banked
  2695  010AB6  6FC6               	movwf	(terminal_operation@op2+1)& (0+255),b
  2696  010AB8  0E99               	movlw	low terminal_loop@op3
  2697  010ABA  0100               	movlb	0	; () banked
  2698  010ABC  6FC7               	movwf	terminal_operation@op3& (0+255),b
  2699  010ABE  0E02               	movlw	high terminal_loop@op3
  2700  010AC0  0100               	movlb	0	; () banked
  2701  010AC2  6FC8               	movwf	(terminal_operation@op3+1)& (0+255),b
  2702  010AC4  EC7B  F08D         	call	_terminal_operation	;wreg free
  2703                           
  2704                           ;My_terminal.c: 38: break;
  2705  010AC8  0012               	return	
  2706  010ACA                     l8890:
  2707                           
  2708                           ;My_terminal.c: 40: ringbuf_put(&command, '\0');
  2709  010ACA  0E7C               	movlw	low terminal_loop@command
  2710  010ACC  0100               	movlb	0	; () banked
  2711  010ACE  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2712  010AD0  0E01               	movlw	high terminal_loop@command
  2713  010AD2  0100               	movlb	0	; () banked
  2714  010AD4  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2715  010AD6  0E00               	movlw	0
  2716  010AD8  0100               	movlb	0	; () banked
  2717  010ADA  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2718  010ADC  EC82  F093         	call	_ringbuf_put	;wreg free
  2719                           
  2720                           ;My_terminal.c: 41: ringbuf_put(tx, ' ');
  2721  010AE0  C0C9  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2722  010AE4  C0CA  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2723  010AE8  0E20               	movlw	32
  2724  010AEA  0100               	movlb	0	; () banked
  2725  010AEC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  2726  010AEE  EC82  F093         	call	_ringbuf_put	;wreg free
  2727                           
  2728                           ;My_terminal.c: 42: break;
  2729  010AF2  0012               	return	
  2730  010AF4                     l8892:
  2731                           
  2732                           ;My_terminal.c: 44: ringbuf_backspace(&command);
  2733  010AF4  0E7C               	movlw	low terminal_loop@command
  2734  010AF6  0100               	movlb	0	; () banked
  2735  010AF8  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  2736  010AFA  0E01               	movlw	high terminal_loop@command
  2737  010AFC  0100               	movlb	0	; () banked
  2738  010AFE  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  2739  010B00  EC4F  F099         	call	_ringbuf_backspace	;wreg free
  2740                           
  2741                           ;My_terminal.c: 45: ringbuf_put_str(tx, "\b \b");
  2742  010B04  C0C9  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  2743  010B08  C0CA  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  2744  010B0C  0EE3               	movlw	low STR_19
  2745  010B0E  0100               	movlb	0	; () banked
  2746  010B10  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2747  010B12  0EFF               	movlw	high STR_19
  2748  010B14  0100               	movlb	0	; () banked
  2749  010B16  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2750  010B18  EC57  F09C         	call	_ringbuf_put_str	;wreg free
  2751                           
  2752                           ;My_terminal.c: 46: break;
  2753  010B1C  0012               	return	
  2754  010B1E                     l8896:
  2755                           
  2756                           ;My_terminal.c: 48: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbuf_put_str(
      +                          tx, "\b \b");
  2757  010B1E  0E00               	movlw	0
  2758  010B20  0101               	movlb	1	; () banked
  2759  010B22  6FF1               	movwf	terminal_loop@i_4771& (0+255),b
  2760  010B24  D00F               	goto	l8902
  2761  010B26                     l8898:
  2762  010B26  C0C9  F06F         	movff	terminal_loop@tx,ringbuf_put_str@rb
  2763  010B2A  C0CA  F070         	movff	terminal_loop@tx+1,ringbuf_put_str@rb+1
  2764  010B2E  0EE3               	movlw	low STR_19
  2765  010B30  0100               	movlb	0	; () banked
  2766  010B32  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2767  010B34  0EFF               	movlw	high STR_19
  2768  010B36  0100               	movlb	0	; () banked
  2769  010B38  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  2770  010B3A  EC57  F09C         	call	_ringbuf_put_str	;wreg free
  2771  010B3E  0101               	movlb	1	; () banked
  2772  010B40  2BF1               	incf	terminal_loop@i_4771& (0+255),f,b
  2773  010B42  D000               	goto	l8902
  2774  010B44                     l8902:
  2775                           
  2776                           ; BSR set to: 1
  2777  010B44  0E7C               	movlw	low terminal_loop@command
  2778  010B46  0100               	movlb	0	; () banked
  2779  010B48  6F60               	movwf	ringbuf_num@rb& (0+255),b
  2780  010B4A  0E01               	movlw	high terminal_loop@command
  2781  010B4C  0100               	movlb	0	; () banked
  2782  010B4E  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  2783  010B50  EC03  F090         	call	_ringbuf_num	;wreg free
  2784  010B54  0101               	movlb	1	; () banked
  2785  010B56  51F1               	movf	terminal_loop@i_4771& (0+255),w,b
  2786  010B58  0100               	movlb	0	; () banked
  2787  010B5A  6FCD               	movwf	??_terminal_loop& (0+255),b
  2788  010B5C  6BCE               	clrf	(??_terminal_loop+1)& (0+255),b
  2789  010B5E  0100               	movlb	0	; () banked
  2790  010B60  5160               	movf	?_ringbuf_num& (0+255),w,b
  2791  010B62  0100               	movlb	0	; () banked
  2792  010B64  5DCD               	subwf	??_terminal_loop& (0+255),w,b
  2793  010B66  0100               	movlb	0	; () banked
  2794  010B68  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  2795  010B6A  0100               	movlb	0	; () banked
  2796  010B6C  59CE               	subwfb	(??_terminal_loop+1)& (0+255),w,b
  2797  010B6E  A0D8               	btfss	status,0,c
  2798  010B70  D7DA               	goto	l8898
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;My_terminal.c: 49: ringbuf_delete(&command);
  2802                           
  2803                           ; BSR set to: 0
  2804  010B72  0E7C               	movlw	low terminal_loop@command
  2805  010B74  0100               	movlb	0	; () banked
  2806  010B76  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  2807  010B78  0E01               	movlw	high terminal_loop@command
  2808  010B7A  0100               	movlb	0	; () banked
  2809  010B7C  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  2810  010B7E  ECA0  F09F         	call	_ringbuf_delete	;wreg free
  2811                           
  2812                           ;My_terminal.c: 50: break;
  2813  010B82  0012               	return	
  2814  010B84                     l8906:
  2815                           
  2816                           ;My_terminal.c: 52: if (ascii >= ' ' && ascii <= '~') {
  2817  010B84  0E1F               	movlw	31
  2818  010B86  0101               	movlb	1	; () banked
  2819  010B88  65F2               	cpfsgt	terminal_loop@ascii& (0+255),b
  2820  010B8A  0012               	return	
  2821                           
  2822                           ; BSR set to: 1
  2823  010B8C  0E7F               	movlw	127
  2824  010B8E  0101               	movlb	1	; () banked
  2825  010B90  61F2               	cpfslt	terminal_loop@ascii& (0+255),b
  2826  010B92  0012               	return	
  2827                           
  2828                           ; BSR set to: 1
  2829                           ;My_terminal.c: 53: ringbuf_put(&command, ascii);
  2830  010B94  0E7C               	movlw	low terminal_loop@command
  2831  010B96  0100               	movlb	0	; () banked
  2832  010B98  6F68               	movwf	ringbuf_put@rb& (0+255),b
  2833  010B9A  0E01               	movlw	high terminal_loop@command
  2834  010B9C  0100               	movlb	0	; () banked
  2835  010B9E  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
  2836  010BA0  C1F2  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  2837  010BA4  EC82  F093         	call	_ringbuf_put	;wreg free
  2838                           
  2839                           ;My_terminal.c: 54: ringbuf_put(tx, ascii);
  2840  010BA8  C0C9  F068         	movff	terminal_loop@tx,ringbuf_put@rb
  2841  010BAC  C0CA  F069         	movff	terminal_loop@tx+1,ringbuf_put@rb+1
  2842  010BB0  C1F2  F06A         	movff	terminal_loop@ascii,ringbuf_put@asciicode
  2843  010BB4  EC82  F093         	call	_ringbuf_put	;wreg free
  2844                           
  2845                           ;My_terminal.c: 57: }
  2846                           
  2847                           ;My_terminal.c: 55: }
  2848                           ;My_terminal.c: 56: break;
  2849  010BB8  0012               	return	
  2850  010BBA                     l8914:
  2851  010BBA  0101               	movlb	1	; () banked
  2852  010BBC  51F2               	movf	terminal_loop@ascii& (0+255),w,b
  2853                           
  2854                           ; Switch size 1, requested type "space"
  2855                           ; Number of cases is 4, Range of values is 8 to 127
  2856                           ; switch strategies available:
  2857                           ; Name         Instructions Cycles
  2858                           ; simple_byte           13     7 (average)
  2859                           ;	Chosen strategy is simple_byte
  2860  010BBE  0A08               	xorlw	8	; case 8
  2861  010BC0  B4D8               	btfsc	status,2,c
  2862  010BC2  D798               	goto	l8892
  2863  010BC4  0A05               	xorlw	5	; case 13
  2864  010BC6  B4D8               	btfsc	status,2,c
  2865  010BC8  D67D               	goto	l8854
  2866  010BCA  0A2D               	xorlw	45	; case 32
  2867  010BCC  B4D8               	btfsc	status,2,c
  2868  010BCE  D77D               	goto	l8890
  2869  010BD0  0A5F               	xorlw	95	; case 127
  2870  010BD2  B4D8               	btfsc	status,2,c
  2871  010BD4  D7A4               	goto	l8896
  2872  010BD6  D7D6               	goto	l8906
  2873                           
  2874                           ; BSR set to: 1
  2875  010BD8  0012               	return	
  2876                           
  2877                           ; BSR set to: 1
  2878  010BDA  0012               	return		;funcret
  2879  010BDC                     __end_of_terminal_loop:
  2880                           	opt stack 0
  2881                           tblptru	equ	0xFF8
  2882                           tblptrh	equ	0xFF7
  2883                           tblptrl	equ	0xFF6
  2884                           tablat	equ	0xFF5
  2885                           prodh	equ	0xFF4
  2886                           prodl	equ	0xFF3
  2887                           intcon	equ	0xFF2
  2888                           postinc0	equ	0xFEE
  2889                           wreg	equ	0xFE8
  2890                           postdec1	equ	0xFE5
  2891                           fsr1h	equ	0xFE2
  2892                           fsr1l	equ	0xFE1
  2893                           indf2	equ	0xFDF
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8
  2897                           
  2898 ;; *************** function _terminal_operation *****************
  2899 ;; Defined at:
  2900 ;;		line 47 in file "PIC18F27J53-test01.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  tx              2   95[BANK0 ] PTR struct ringbuf
  2903 ;;		 -> usb_tx(8), 
  2904 ;;  op0             2   97[BANK0 ] PTR unsigned char 
  2905 ;;		 -> terminal_loop@op0(25), 
  2906 ;;  op1             2   99[BANK0 ] PTR unsigned char 
  2907 ;;		 -> terminal_loop@op1(25), 
  2908 ;;  op2             2  101[BANK0 ] PTR unsigned char 
  2909 ;;		 -> terminal_loop@op2(25), 
  2910 ;;  op3             2  103[BANK0 ] PTR unsigned char 
  2911 ;;		 -> terminal_loop@op3(25), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;		None               void
  2916 ;; Registers used:
  2917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2923 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;Total ram usage:       10 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:   18
  2930 ;; This function calls:
  2931 ;;		_I2C_LCD_Clear
  2932 ;;		_I2C_LCD_Puts
  2933 ;;		_I2C_LCD_SetCursor
  2934 ;;		_ringbuf_put_str
  2935 ;;		_strcmp
  2936 ;;		_terminal_time
  2937 ;; This function is called by:
  2938 ;;		_terminal_loop
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text2
  2943  011AF6                     __ptext2:
  2944                           	opt stack 0
  2945  011AF6                     _terminal_operation:
  2946                           	opt stack 11
  2947                           
  2948                           ;PIC18F27J53-test01.c: 48: if (!strcmp(op0, "help") || !strcmp(op0, "?")) {
  2949                           
  2950                           ;incstack = 0
  2951  011AF6  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2952  011AFA  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2953  011AFE  0ED4               	movlw	low STR_41
  2954  011B00  0100               	movlb	0	; () banked
  2955  011B02  6F62               	movwf	strcmp@s2& (0+255),b
  2956  011B04  0EFF               	movlw	high STR_41
  2957  011B06  0100               	movlb	0	; () banked
  2958  011B08  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2959  011B0A  ECBC  F09C         	call	_strcmp	;wreg free
  2960  011B0E  0100               	movlb	0	; () banked
  2961  011B10  5160               	movf	?_strcmp& (0+255),w,b
  2962  011B12  0100               	movlb	0	; () banked
  2963  011B14  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2964  011B16  B4D8               	btfsc	status,2,c
  2965  011B18  D012               	goto	l8704
  2966                           
  2967                           ; BSR set to: 0
  2968  011B1A  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  2969  011B1E  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  2970  011B22  0EEE               	movlw	low STR_42
  2971  011B24  0100               	movlb	0	; () banked
  2972  011B26  6F62               	movwf	strcmp@s2& (0+255),b
  2973  011B28  0EFF               	movlw	high STR_42
  2974  011B2A  0100               	movlb	0	; () banked
  2975  011B2C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  2976  011B2E  ECBC  F09C         	call	_strcmp	;wreg free
  2977  011B32  0100               	movlb	0	; () banked
  2978  011B34  5160               	movf	?_strcmp& (0+255),w,b
  2979  011B36  0100               	movlb	0	; () banked
  2980  011B38  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  2981  011B3A  A4D8               	btfss	status,2,c
  2982  011B3C  D00D               	goto	l8706
  2983  011B3E                     l8704:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;PIC18F27J53-test01.c: 49: ringbuf_put_str(tx,
  2987                           ;PIC18F27J53-test01.c: 50: "\t******** PIC18F27J53 ********\n"
  2988                           ;PIC18F27J53-test01.c: 51: "\tprint_time(t)\n"
  2989                           ;PIC18F27J53-test01.c: 52: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  2990                           ;PIC18F27J53-test01.c: 53: "\tRESET();\n"
  2991                           ;PIC18F27J53-test01.c: 54: "\tbootload\n"
  2992                           ;PIC18F27J53-test01.c: 55: );
  2993  011B3E  C0BF  F06F         	movff	terminal_operation@tx,ringbuf_put_str@rb
  2994  011B42  C0C0  F070         	movff	terminal_operation@tx+1,ringbuf_put_str@rb+1
  2995  011B46  0E90               	movlw	low STR_43
  2996  011B48  0100               	movlb	0	; () banked
  2997  011B4A  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  2998  011B4C  0EFE               	movlw	high STR_43
  2999  011B4E  0100               	movlb	0	; () banked
  3000  011B50  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3001  011B52  EC57  F09C         	call	_ringbuf_put_str	;wreg free
  3002  011B56  D000               	goto	l8706
  3003  011B58                     l8706:
  3004                           
  3005                           ;PIC18F27J53-test01.c: 56: }
  3006                           ;PIC18F27J53-test01.c: 57: if (!strcmp(op0, "bootload")) {
  3007  011B58  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3008  011B5C  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3009  011B60  0E9F               	movlw	low STR_44
  3010  011B62  0100               	movlb	0	; () banked
  3011  011B64  6F62               	movwf	strcmp@s2& (0+255),b
  3012  011B66  0EFF               	movlw	high STR_44
  3013  011B68  0100               	movlb	0	; () banked
  3014  011B6A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3015  011B6C  ECBC  F09C         	call	_strcmp	;wreg free
  3016  011B70  0100               	movlb	0	; () banked
  3017  011B72  5160               	movf	?_strcmp& (0+255),w,b
  3018  011B74  0100               	movlb	0	; () banked
  3019  011B76  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3020  011B78  A4D8               	btfss	status,2,c
  3021  011B7A  D021               	goto	l8718
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;PIC18F27J53-test01.c: 58: I2C_LCD_Clear();
  3025  011B7C  EC10  F0A0         	call	_I2C_LCD_Clear	;wreg free
  3026                           
  3027                           ;PIC18F27J53-test01.c: 59: I2C_LCD_SetCursor(0, 0);
  3028  011B80  0E00               	movlw	0
  3029  011B82  0100               	movlb	0	; () banked
  3030  011B84  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3031  011B86  0E00               	movlw	0
  3032  011B88  EC37  F09F         	call	_I2C_LCD_SetCursor
  3033                           
  3034                           ;PIC18F27J53-test01.c: 60: I2C_LCD_Puts("PIC18F27J53");
  3035  011B8C  0E6A               	movlw	low STR_45
  3036  011B8E  0100               	movlb	0	; () banked
  3037  011B90  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  3038  011B92  0EFF               	movlw	high STR_45
  3039  011B94  0100               	movlb	0	; () banked
  3040  011B96  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3041  011B98  EC05  F099         	call	_I2C_LCD_Puts	;wreg free
  3042                           
  3043                           ;PIC18F27J53-test01.c: 61: I2C_LCD_SetCursor(0, 1);
  3044  011B9C  0E01               	movlw	1
  3045  011B9E  0100               	movlb	0	; () banked
  3046  011BA0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3047  011BA2  0E00               	movlw	0
  3048  011BA4  EC37  F09F         	call	_I2C_LCD_SetCursor
  3049                           
  3050                           ;PIC18F27J53-test01.c: 62: I2C_LCD_Puts("Bootloader mode");
  3051  011BA8  0E2D               	movlw	low STR_46
  3052  011BAA  0100               	movlb	0	; () banked
  3053  011BAC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  3054  011BAE  0EFF               	movlw	high STR_46
  3055  011BB0  0100               	movlb	0	; () banked
  3056  011BB2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3057  011BB4  EC05  F099         	call	_I2C_LCD_Puts	;wreg free
  3058  011BB8  EF0E F000          	goto	28	;# 
  3059  011BBC  D000               	goto	l8718
  3060  011BBE                     l8718:
  3061                           
  3062                           ;PIC18F27J53-test01.c: 64: }
  3063                           ;PIC18F27J53-test01.c: 65: terminal_time(tx, op0, op1, op2);
  3064  011BBE  C0BF  F0B6         	movff	terminal_operation@tx,terminal_time@tx
  3065  011BC2  C0C0  F0B7         	movff	terminal_operation@tx+1,terminal_time@tx+1
  3066  011BC6  C0C1  F0B8         	movff	terminal_operation@op0,terminal_time@op0
  3067  011BCA  C0C2  F0B9         	movff	terminal_operation@op0+1,terminal_time@op0+1
  3068  011BCE  C0C3  F0BA         	movff	terminal_operation@op1,terminal_time@op1
  3069  011BD2  C0C4  F0BB         	movff	terminal_operation@op1+1,terminal_time@op1+1
  3070  011BD6  C0C5  F0BC         	movff	terminal_operation@op2,terminal_time@op2
  3071  011BDA  C0C6  F0BD         	movff	terminal_operation@op2+1,terminal_time@op2+1
  3072  011BDE  EC54  F082         	call	_terminal_time	;wreg free
  3073                           
  3074                           ;PIC18F27J53-test01.c: 66: if (!strcmp(op0, "RESET();")) {
  3075  011BE2  C0C1  F060         	movff	terminal_operation@op0,strcmp@s1
  3076  011BE6  C0C2  F061         	movff	terminal_operation@op0+1,strcmp@s1+1
  3077  011BEA  0E8D               	movlw	low STR_47
  3078  011BEC  0100               	movlb	0	; () banked
  3079  011BEE  6F62               	movwf	strcmp@s2& (0+255),b
  3080  011BF0  0EFF               	movlw	high STR_47
  3081  011BF2  0100               	movlb	0	; () banked
  3082  011BF4  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3083  011BF6  ECBC  F09C         	call	_strcmp	;wreg free
  3084  011BFA  0100               	movlb	0	; () banked
  3085  011BFC  5160               	movf	?_strcmp& (0+255),w,b
  3086  011BFE  0100               	movlb	0	; () banked
  3087  011C00  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3088  011C02  A4D8               	btfss	status,2,c
  3089  011C04  0012               	return	
  3090                           
  3091                           ; BSR set to: 0
  3092  011C06  00FF               	reset		;# 
  3093  011C08  0012               	return	
  3094  011C0A  0012               	return		;funcret
  3095  011C0C                     __end_of_terminal_operation:
  3096                           	opt stack 0
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           prodh	equ	0xFF4
  3102                           prodl	equ	0xFF3
  3103                           intcon	equ	0xFF2
  3104                           postinc0	equ	0xFEE
  3105                           wreg	equ	0xFE8
  3106                           postdec1	equ	0xFE5
  3107                           fsr1h	equ	0xFE2
  3108                           fsr1l	equ	0xFE1
  3109                           indf2	equ	0xFDF
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _terminal_time *****************
  3115 ;; Defined at:
  3116 ;;		line 93 in file "../My_library/My_terminal.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  tx              2   86[BANK0 ] PTR struct ringbuf
  3119 ;;		 -> usb_tx(8), 
  3120 ;;  op0             2   88[BANK0 ] PTR unsigned char 
  3121 ;;		 -> terminal_loop@op0(25), 
  3122 ;;  op1             2   90[BANK0 ] PTR unsigned char 
  3123 ;;		 -> terminal_loop@op1(25), 
  3124 ;;  op2             2   92[BANK0 ] PTR unsigned char 
  3125 ;;		 -> terminal_loop@op2(25), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;		None               void
  3130 ;; Registers used:
  3131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;Total ram usage:        9 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:   17
  3144 ;; This function calls:
  3145 ;;		_atoi
  3146 ;;		_month_length
  3147 ;;		_print_time
  3148 ;;		_strcmp
  3149 ;;		_terminal_at_hand
  3150 ;; This function is called by:
  3151 ;;		_terminal_operation
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text3
  3156  0104A8                     __ptext3:
  3157                           	opt stack 0
  3158  0104A8                     _terminal_time:
  3159                           	opt stack 11
  3160                           
  3161                           ;My_terminal.c: 94: if (!strcmp(op0, "print_time") || !strcmp(op0, "t")) {
  3162                           
  3163                           ;incstack = 0
  3164  0104A8  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3165  0104AC  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3166  0104B0  0E82               	movlw	low STR_25
  3167  0104B2  0100               	movlb	0	; () banked
  3168  0104B4  6F62               	movwf	strcmp@s2& (0+255),b
  3169  0104B6  0EFF               	movlw	high STR_25
  3170  0104B8  0100               	movlb	0	; () banked
  3171  0104BA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3172  0104BC  ECBC  F09C         	call	_strcmp	;wreg free
  3173  0104C0  0100               	movlb	0	; () banked
  3174  0104C2  5160               	movf	?_strcmp& (0+255),w,b
  3175  0104C4  0100               	movlb	0	; () banked
  3176  0104C6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3177  0104C8  B4D8               	btfsc	status,2,c
  3178  0104CA  D012               	goto	l8464
  3179                           
  3180                           ; BSR set to: 0
  3181  0104CC  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3182  0104D0  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3183  0104D4  0EEC               	movlw	low (STR_27+1)
  3184  0104D6  0100               	movlb	0	; () banked
  3185  0104D8  6F62               	movwf	strcmp@s2& (0+255),b
  3186  0104DA  0EFF               	movlw	high (STR_27+1)
  3187  0104DC  0100               	movlb	0	; () banked
  3188  0104DE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3189  0104E0  ECBC  F09C         	call	_strcmp	;wreg free
  3190  0104E4  0100               	movlb	0	; () banked
  3191  0104E6  5160               	movf	?_strcmp& (0+255),w,b
  3192  0104E8  0100               	movlb	0	; () banked
  3193  0104EA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3194  0104EC  A4D8               	btfss	status,2,c
  3195  0104EE  D007               	goto	l8466
  3196  0104F0                     l8464:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;My_terminal.c: 95: print_time(tx);
  3200  0104F0  C0B6  F08F         	movff	terminal_time@tx,print_time@tx
  3201  0104F4  C0B7  F090         	movff	terminal_time@tx+1,print_time@tx+1
  3202  0104F8  ECDF  F099         	call	_print_time	;wreg free
  3203  0104FC  D000               	goto	l8466
  3204  0104FE                     l8466:
  3205                           
  3206                           ;My_terminal.c: 96: }
  3207                           ;My_terminal.c: 97: if (!strcmp(op0, "at") || !strcmp(op0, "adjust_time")) {
  3208  0104FE  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3209  010502  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3210  010506  0EEB               	movlw	low STR_27
  3211  010508  0100               	movlb	0	; () banked
  3212  01050A  6F62               	movwf	strcmp@s2& (0+255),b
  3213  01050C  0EFF               	movlw	high STR_27
  3214  01050E  0100               	movlb	0	; () banked
  3215  010510  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3216  010512  ECBC  F09C         	call	_strcmp	;wreg free
  3217  010516  0100               	movlb	0	; () banked
  3218  010518  5160               	movf	?_strcmp& (0+255),w,b
  3219  01051A  0100               	movlb	0	; () banked
  3220  01051C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3221  01051E  B4D8               	btfsc	status,2,c
  3222  010520  D012               	goto	l8470
  3223                           
  3224                           ; BSR set to: 0
  3225  010522  C0B8  F060         	movff	terminal_time@op0,strcmp@s1
  3226  010526  C0B9  F061         	movff	terminal_time@op0+1,strcmp@s1+1
  3227  01052A  0E76               	movlw	low STR_28
  3228  01052C  0100               	movlb	0	; () banked
  3229  01052E  6F62               	movwf	strcmp@s2& (0+255),b
  3230  010530  0EFF               	movlw	high STR_28
  3231  010532  0100               	movlb	0	; () banked
  3232  010534  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3233  010536  ECBC  F09C         	call	_strcmp	;wreg free
  3234  01053A  0100               	movlb	0	; () banked
  3235  01053C  5160               	movf	?_strcmp& (0+255),w,b
  3236  01053E  0100               	movlb	0	; () banked
  3237  010540  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3238  010542  A4D8               	btfss	status,2,c
  3239  010544  0012               	return	
  3240  010546                     l8470:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;My_terminal.c: 98: if (!strcmp(op1, "y") || !strcmp(op1, "year")) {
  3244  010546  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3245  01054A  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3246  01054E  0EE9               	movlw	low (STR_34+2)
  3247  010550  0100               	movlb	0	; () banked
  3248  010552  6F62               	movwf	strcmp@s2& (0+255),b
  3249  010554  0EFF               	movlw	high (STR_34+2)
  3250  010556  0100               	movlb	0	; () banked
  3251  010558  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3252  01055A  ECBC  F09C         	call	_strcmp	;wreg free
  3253  01055E  0100               	movlb	0	; () banked
  3254  010560  5160               	movf	?_strcmp& (0+255),w,b
  3255  010562  0100               	movlb	0	; () banked
  3256  010564  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3257  010566  B4D8               	btfsc	status,2,c
  3258  010568  D012               	goto	l8474
  3259                           
  3260                           ; BSR set to: 0
  3261  01056A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3262  01056E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3263  010572  0ED9               	movlw	low STR_30
  3264  010574  0100               	movlb	0	; () banked
  3265  010576  6F62               	movwf	strcmp@s2& (0+255),b
  3266  010578  0EFF               	movlw	high STR_30
  3267  01057A  0100               	movlb	0	; () banked
  3268  01057C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3269  01057E  ECBC  F09C         	call	_strcmp	;wreg free
  3270  010582  0100               	movlb	0	; () banked
  3271  010584  5160               	movf	?_strcmp& (0+255),w,b
  3272  010586  0100               	movlb	0	; () banked
  3273  010588  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3274  01058A  A4D8               	btfss	status,2,c
  3275  01058C  D01D               	goto	l8476
  3276  01058E                     l8474:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;My_terminal.c: 99: terminal_at_hand(tx, &now.YY, 0, 99, atoi(op2));
  3280  01058E  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3281  010592  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3282  010596  0E50               	movlw	low (_now+10)
  3283  010598  0100               	movlb	0	; () banked
  3284  01059A  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3285  01059C  0E01               	movlw	high (_now+10)
  3286  01059E  0100               	movlb	0	; () banked
  3287  0105A0  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3288  0105A2  0E00               	movlw	0
  3289  0105A4  0100               	movlb	0	; () banked
  3290  0105A6  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3291  0105A8  0E63               	movlw	99
  3292  0105AA  0100               	movlb	0	; () banked
  3293  0105AC  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3294  0105AE  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3295  0105B2  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3296  0105B6  EC0D  F08F         	call	_atoi	;wreg free
  3297  0105BA  0100               	movlb	0	; () banked
  3298  0105BC  5166               	movf	?_atoi& (0+255),w,b
  3299  0105BE  0100               	movlb	0	; () banked
  3300  0105C0  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3301  0105C2  EC8A  F09C         	call	_terminal_at_hand	;wreg free
  3302  0105C6  D000               	goto	l8476
  3303  0105C8                     l8476:
  3304                           
  3305                           ;My_terminal.c: 100: }
  3306                           ;My_terminal.c: 101: if (!strcmp(op1, "M") || !strcmp(op1, "month")) {
  3307  0105C8  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3308  0105CC  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3309  0105D0  0EF0               	movlw	low STR_31
  3310  0105D2  0100               	movlb	0	; () banked
  3311  0105D4  6F62               	movwf	strcmp@s2& (0+255),b
  3312  0105D6  0EFF               	movlw	high STR_31
  3313  0105D8  0100               	movlb	0	; () banked
  3314  0105DA  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3315  0105DC  ECBC  F09C         	call	_strcmp	;wreg free
  3316  0105E0  0100               	movlb	0	; () banked
  3317  0105E2  5160               	movf	?_strcmp& (0+255),w,b
  3318  0105E4  0100               	movlb	0	; () banked
  3319  0105E6  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3320  0105E8  B4D8               	btfsc	status,2,c
  3321  0105EA  D012               	goto	l8480
  3322                           
  3323                           ; BSR set to: 0
  3324  0105EC  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3325  0105F0  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3326  0105F4  0ECE               	movlw	low STR_32
  3327  0105F6  0100               	movlb	0	; () banked
  3328  0105F8  6F62               	movwf	strcmp@s2& (0+255),b
  3329  0105FA  0EFF               	movlw	high STR_32
  3330  0105FC  0100               	movlb	0	; () banked
  3331  0105FE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3332  010600  ECBC  F09C         	call	_strcmp	;wreg free
  3333  010604  0100               	movlb	0	; () banked
  3334  010606  5160               	movf	?_strcmp& (0+255),w,b
  3335  010608  0100               	movlb	0	; () banked
  3336  01060A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3337  01060C  A4D8               	btfss	status,2,c
  3338  01060E  D01D               	goto	l8482
  3339  010610                     l8480:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;My_terminal.c: 102: terminal_at_hand(tx, &now.MM, 1, 12, atoi(op2));
  3343  010610  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3344  010614  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3345  010618  0E4F               	movlw	low (_now+9)
  3346  01061A  0100               	movlb	0	; () banked
  3347  01061C  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3348  01061E  0E01               	movlw	high (_now+9)
  3349  010620  0100               	movlb	0	; () banked
  3350  010622  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3351  010624  0E01               	movlw	1
  3352  010626  0100               	movlb	0	; () banked
  3353  010628  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3354  01062A  0E0C               	movlw	12
  3355  01062C  0100               	movlb	0	; () banked
  3356  01062E  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3357  010630  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3358  010634  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3359  010638  EC0D  F08F         	call	_atoi	;wreg free
  3360  01063C  0100               	movlb	0	; () banked
  3361  01063E  5166               	movf	?_atoi& (0+255),w,b
  3362  010640  0100               	movlb	0	; () banked
  3363  010642  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3364  010644  EC8A  F09C         	call	_terminal_at_hand	;wreg free
  3365  010648  D000               	goto	l8482
  3366  01064A                     l8482:
  3367                           
  3368                           ;My_terminal.c: 103: }
  3369                           ;My_terminal.c: 104: if (!strcmp(op1, "d") || !strcmp(op1, "day")) {
  3370  01064A  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3371  01064E  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3372  010652  0E4A               	movlw	low (STR_52+13)
  3373  010654  0100               	movlb	0	; () banked
  3374  010656  6F62               	movwf	strcmp@s2& (0+255),b
  3375  010658  0EFF               	movlw	high (STR_52+13)
  3376  01065A  0100               	movlb	0	; () banked
  3377  01065C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3378  01065E  ECBC  F09C         	call	_strcmp	;wreg free
  3379  010662  0100               	movlb	0	; () banked
  3380  010664  5160               	movf	?_strcmp& (0+255),w,b
  3381  010666  0100               	movlb	0	; () banked
  3382  010668  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3383  01066A  B4D8               	btfsc	status,2,c
  3384  01066C  D012               	goto	l8486
  3385                           
  3386                           ; BSR set to: 0
  3387  01066E  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3388  010672  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3389  010676  0EE7               	movlw	low STR_34
  3390  010678  0100               	movlb	0	; () banked
  3391  01067A  6F62               	movwf	strcmp@s2& (0+255),b
  3392  01067C  0EFF               	movlw	high STR_34
  3393  01067E  0100               	movlb	0	; () banked
  3394  010680  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3395  010682  ECBC  F09C         	call	_strcmp	;wreg free
  3396  010686  0100               	movlb	0	; () banked
  3397  010688  5160               	movf	?_strcmp& (0+255),w,b
  3398  01068A  0100               	movlb	0	; () banked
  3399  01068C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3400  01068E  A4D8               	btfss	status,2,c
  3401  010690  D024               	goto	l8490
  3402  010692                     l8486:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3406  010692  C14F  F066         	movff	_now+9,month_length@month
  3407  010696  0101               	movlb	1	; () banked
  3408  010698  5150               	movf	(_now+10)& (0+255),w,b
  3409  01069A  EC5D  F091         	call	_month_length
  3410  01069E  0100               	movlb	0	; () banked
  3411  0106A0  6FBE               	movwf	_terminal_time$5948& (0+255),b
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;My_terminal.c: 105: terminal_at_hand(tx, &now.DD, 1, month_length(now.YY, now.MM), atoi
      +                          (op2));
  3415  0106A2  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3416  0106A6  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3417  0106AA  0E4E               	movlw	low (_now+8)
  3418  0106AC  0100               	movlb	0	; () banked
  3419  0106AE  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3420  0106B0  0E01               	movlw	high (_now+8)
  3421  0106B2  0100               	movlb	0	; () banked
  3422  0106B4  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3423  0106B6  0E01               	movlw	1
  3424  0106B8  0100               	movlb	0	; () banked
  3425  0106BA  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3426  0106BC  C0BE  F0B4         	movff	_terminal_time$5948,terminal_at_hand@max
  3427  0106C0  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3428  0106C4  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3429  0106C8  EC0D  F08F         	call	_atoi	;wreg free
  3430  0106CC  0100               	movlb	0	; () banked
  3431  0106CE  5166               	movf	?_atoi& (0+255),w,b
  3432  0106D0  0100               	movlb	0	; () banked
  3433  0106D2  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3434  0106D4  EC8A  F09C         	call	_terminal_at_hand	;wreg free
  3435  0106D8  D000               	goto	l8490
  3436  0106DA                     l8490:
  3437                           
  3438                           ;My_terminal.c: 106: }
  3439                           ;My_terminal.c: 107: if (!strcmp(op1, "h") || !strcmp(op1, "hour")) {
  3440  0106DA  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3441  0106DE  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3442  0106E2  0ED2               	movlw	low (STR_32+4)
  3443  0106E4  0100               	movlb	0	; () banked
  3444  0106E6  6F62               	movwf	strcmp@s2& (0+255),b
  3445  0106E8  0EFF               	movlw	high (STR_32+4)
  3446  0106EA  0100               	movlb	0	; () banked
  3447  0106EC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3448  0106EE  ECBC  F09C         	call	_strcmp	;wreg free
  3449  0106F2  0100               	movlb	0	; () banked
  3450  0106F4  5160               	movf	?_strcmp& (0+255),w,b
  3451  0106F6  0100               	movlb	0	; () banked
  3452  0106F8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3453  0106FA  B4D8               	btfsc	status,2,c
  3454  0106FC  D012               	goto	l8494
  3455                           
  3456                           ; BSR set to: 0
  3457  0106FE  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3458  010702  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3459  010706  0EDE               	movlw	low STR_36
  3460  010708  0100               	movlb	0	; () banked
  3461  01070A  6F62               	movwf	strcmp@s2& (0+255),b
  3462  01070C  0EFF               	movlw	high STR_36
  3463  01070E  0100               	movlb	0	; () banked
  3464  010710  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3465  010712  ECBC  F09C         	call	_strcmp	;wreg free
  3466  010716  0100               	movlb	0	; () banked
  3467  010718  5160               	movf	?_strcmp& (0+255),w,b
  3468  01071A  0100               	movlb	0	; () banked
  3469  01071C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3470  01071E  A4D8               	btfss	status,2,c
  3471  010720  D01D               	goto	l8496
  3472  010722                     l8494:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;My_terminal.c: 108: terminal_at_hand(tx, &now.hh, 0, 23, atoi(op2));
  3476  010722  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3477  010726  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3478  01072A  0E4C               	movlw	low (_now+6)
  3479  01072C  0100               	movlb	0	; () banked
  3480  01072E  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3481  010730  0E01               	movlw	high (_now+6)
  3482  010732  0100               	movlb	0	; () banked
  3483  010734  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3484  010736  0E00               	movlw	0
  3485  010738  0100               	movlb	0	; () banked
  3486  01073A  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3487  01073C  0E17               	movlw	23
  3488  01073E  0100               	movlb	0	; () banked
  3489  010740  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3490  010742  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3491  010746  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3492  01074A  EC0D  F08F         	call	_atoi	;wreg free
  3493  01074E  0100               	movlb	0	; () banked
  3494  010750  5166               	movf	?_atoi& (0+255),w,b
  3495  010752  0100               	movlb	0	; () banked
  3496  010754  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3497  010756  EC8A  F09C         	call	_terminal_at_hand	;wreg free
  3498  01075A  D000               	goto	l8496
  3499  01075C                     l8496:
  3500                           
  3501                           ;My_terminal.c: 109: }
  3502                           ;My_terminal.c: 110: if (!strcmp(op1, "m") || !strcmp(op1, "minute")) {
  3503  01075C  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3504  010760  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3505  010764  0EF2               	movlw	low STR_37
  3506  010766  0100               	movlb	0	; () banked
  3507  010768  6F62               	movwf	strcmp@s2& (0+255),b
  3508  01076A  0EFF               	movlw	high STR_37
  3509  01076C  0100               	movlb	0	; () banked
  3510  01076E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3511  010770  ECBC  F09C         	call	_strcmp	;wreg free
  3512  010774  0100               	movlb	0	; () banked
  3513  010776  5160               	movf	?_strcmp& (0+255),w,b
  3514  010778  0100               	movlb	0	; () banked
  3515  01077A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3516  01077C  B4D8               	btfsc	status,2,c
  3517  01077E  D012               	goto	l8500
  3518                           
  3519                           ; BSR set to: 0
  3520  010780  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3521  010784  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3522  010788  0EC7               	movlw	low STR_38
  3523  01078A  0100               	movlb	0	; () banked
  3524  01078C  6F62               	movwf	strcmp@s2& (0+255),b
  3525  01078E  0EFF               	movlw	high STR_38
  3526  010790  0100               	movlb	0	; () banked
  3527  010792  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3528  010794  ECBC  F09C         	call	_strcmp	;wreg free
  3529  010798  0100               	movlb	0	; () banked
  3530  01079A  5160               	movf	?_strcmp& (0+255),w,b
  3531  01079C  0100               	movlb	0	; () banked
  3532  01079E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3533  0107A0  A4D8               	btfss	status,2,c
  3534  0107A2  D01D               	goto	l8502
  3535  0107A4                     l8500:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;My_terminal.c: 111: terminal_at_hand(tx, &now.mm, 0, 59, atoi(op2));
  3539  0107A4  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3540  0107A8  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3541  0107AC  0E4B               	movlw	low (_now+5)
  3542  0107AE  0100               	movlb	0	; () banked
  3543  0107B0  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3544  0107B2  0E01               	movlw	high (_now+5)
  3545  0107B4  0100               	movlb	0	; () banked
  3546  0107B6  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3547  0107B8  0E00               	movlw	0
  3548  0107BA  0100               	movlb	0	; () banked
  3549  0107BC  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3550  0107BE  0E3B               	movlw	59
  3551  0107C0  0100               	movlb	0	; () banked
  3552  0107C2  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3553  0107C4  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3554  0107C8  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3555  0107CC  EC0D  F08F         	call	_atoi	;wreg free
  3556  0107D0  0100               	movlb	0	; () banked
  3557  0107D2  5166               	movf	?_atoi& (0+255),w,b
  3558  0107D4  0100               	movlb	0	; () banked
  3559  0107D6  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3560  0107D8  EC8A  F09C         	call	_terminal_at_hand	;wreg free
  3561  0107DC  D000               	goto	l8502
  3562  0107DE                     l8502:
  3563                           
  3564                           ;My_terminal.c: 112: }
  3565                           ;My_terminal.c: 113: if (!strcmp(op1, "s") || !strcmp(op1, "second")) {
  3566  0107DE  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3567  0107E2  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3568  0107E6  0EF4               	movlw	low STR_39
  3569  0107E8  0100               	movlb	0	; () banked
  3570  0107EA  6F62               	movwf	strcmp@s2& (0+255),b
  3571  0107EC  0EFF               	movlw	high STR_39
  3572  0107EE  0100               	movlb	0	; () banked
  3573  0107F0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3574  0107F2  ECBC  F09C         	call	_strcmp	;wreg free
  3575  0107F6  0100               	movlb	0	; () banked
  3576  0107F8  5160               	movf	?_strcmp& (0+255),w,b
  3577  0107FA  0100               	movlb	0	; () banked
  3578  0107FC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3579  0107FE  B4D8               	btfsc	status,2,c
  3580  010800  D012               	goto	l8506
  3581                           
  3582                           ; BSR set to: 0
  3583  010802  C0BA  F060         	movff	terminal_time@op1,strcmp@s1
  3584  010806  C0BB  F061         	movff	terminal_time@op1+1,strcmp@s1+1
  3585  01080A  0EC0               	movlw	low STR_40
  3586  01080C  0100               	movlb	0	; () banked
  3587  01080E  6F62               	movwf	strcmp@s2& (0+255),b
  3588  010810  0EFF               	movlw	high STR_40
  3589  010812  0100               	movlb	0	; () banked
  3590  010814  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  3591  010816  ECBC  F09C         	call	_strcmp	;wreg free
  3592  01081A  0100               	movlb	0	; () banked
  3593  01081C  5160               	movf	?_strcmp& (0+255),w,b
  3594  01081E  0100               	movlb	0	; () banked
  3595  010820  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  3596  010822  A4D8               	btfss	status,2,c
  3597  010824  0012               	return	
  3598  010826                     l8506:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;My_terminal.c: 114: terminal_at_hand(tx, &now.ss, 0, 59, atoi(op2));
  3602  010826  C0B6  F0AF         	movff	terminal_time@tx,terminal_at_hand@tx
  3603  01082A  C0B7  F0B0         	movff	terminal_time@tx+1,terminal_at_hand@tx+1
  3604  01082E  0E4A               	movlw	low (_now+4)
  3605  010830  0100               	movlb	0	; () banked
  3606  010832  6FB1               	movwf	terminal_at_hand@hand& (0+255),b
  3607  010834  0E01               	movlw	high (_now+4)
  3608  010836  0100               	movlb	0	; () banked
  3609  010838  6FB2               	movwf	(terminal_at_hand@hand+1)& (0+255),b
  3610  01083A  0E00               	movlw	0
  3611  01083C  0100               	movlb	0	; () banked
  3612  01083E  6FB3               	movwf	terminal_at_hand@min& (0+255),b
  3613  010840  0E3B               	movlw	59
  3614  010842  0100               	movlb	0	; () banked
  3615  010844  6FB4               	movwf	terminal_at_hand@max& (0+255),b
  3616  010846  C0BC  F066         	movff	terminal_time@op2,atoi@s
  3617  01084A  C0BD  F067         	movff	terminal_time@op2+1,atoi@s+1
  3618  01084E  EC0D  F08F         	call	_atoi	;wreg free
  3619  010852  0100               	movlb	0	; () banked
  3620  010854  5166               	movf	?_atoi& (0+255),w,b
  3621  010856  0100               	movlb	0	; () banked
  3622  010858  6FB5               	movwf	terminal_at_hand@value& (0+255),b
  3623  01085A  EC8A  F09C         	call	_terminal_at_hand	;wreg free
  3624  01085E  0012               	return	
  3625  010860  0012               	return		;funcret
  3626  010862                     __end_of_terminal_time:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function _terminal_at_hand *****************
  3646 ;; Defined at:
  3647 ;;		line 82 in file "../My_library/My_terminal.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  tx              2   79[BANK0 ] PTR struct ringbuf
  3650 ;;		 -> usb_tx(8), 
  3651 ;;  hand            2   81[BANK0 ] PTR unsigned char 
  3652 ;;		 -> now(14), 
  3653 ;;  min             1   83[BANK0 ] unsigned char 
  3654 ;;  max             1   84[BANK0 ] unsigned char 
  3655 ;;  value           1   85[BANK0 ] unsigned char 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;		None               void
  3660 ;; Registers used:
  3661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3667 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3670 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3671 ;;Total ram usage:        7 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:   16
  3674 ;; This function calls:
  3675 ;;		_RTCC_from_caltime
  3676 ;;		_print_time
  3677 ;;		_ringbuf_put_str
  3678 ;; This function is called by:
  3679 ;;		_terminal_time
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text4
  3684  013914                     __ptext4:
  3685                           	opt stack 0
  3686  013914                     _terminal_at_hand:
  3687                           	opt stack 11
  3688                           
  3689                           ;My_terminal.c: 83: if (value >= min && value <= max) {
  3690                           
  3691                           ;incstack = 0
  3692  013914  0100               	movlb	0	; () banked
  3693  013916  51B3               	movf	terminal_at_hand@min& (0+255),w,b
  3694  013918  0100               	movlb	0	; () banked
  3695  01391A  5DB5               	subwf	terminal_at_hand@value& (0+255),w,b
  3696  01391C  A0D8               	btfss	status,0,c
  3697  01391E  D01E               	goto	l8190
  3698                           
  3699                           ; BSR set to: 0
  3700  013920  0100               	movlb	0	; () banked
  3701  013922  51B5               	movf	terminal_at_hand@value& (0+255),w,b
  3702  013924  0100               	movlb	0	; () banked
  3703  013926  5DB4               	subwf	terminal_at_hand@max& (0+255),w,b
  3704  013928  A0D8               	btfss	status,0,c
  3705  01392A  D018               	goto	l8190
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;My_terminal.c: 84: *hand = value;
  3709  01392C  C0B1  FFD9         	movff	terminal_at_hand@hand,fsr2l
  3710  013930  C0B2  FFDA         	movff	terminal_at_hand@hand+1,fsr2h
  3711  013934  C0B5  FFDF         	movff	terminal_at_hand@value,indf2
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;My_terminal.c: 85: RTCC_from_caltime(&now);
  3715  013938  0E46               	movlw	low _now
  3716  01393A  0100               	movlb	0	; () banked
  3717  01393C  6F8F               	movwf	RTCC_from_caltime@tm& (0+255),b
  3718  01393E  0E01               	movlw	high _now
  3719  013940  0100               	movlb	0	; () banked
  3720  013942  6F90               	movwf	(RTCC_from_caltime@tm+1)& (0+255),b
  3721  013944  EC8D  F09F         	call	_RTCC_from_caltime	;wreg free
  3722                           
  3723                           ;My_terminal.c: 86: time_change_flag = 1;
  3724  013948  0E01               	movlw	1
  3725  01394A  0100               	movlb	0	; () banked
  3726  01394C  6FED               	movwf	_time_change_flag& (0+255),b
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;My_terminal.c: 87: print_time(tx);
  3730  01394E  C0AF  F08F         	movff	terminal_at_hand@tx,print_time@tx
  3731  013952  C0B0  F090         	movff	terminal_at_hand@tx+1,print_time@tx+1
  3732  013956  ECDF  F099         	call	_print_time	;wreg free
  3733                           
  3734                           ;My_terminal.c: 88: } else {
  3735  01395A  0012               	return	
  3736  01395C                     l8190:
  3737                           
  3738                           ;My_terminal.c: 89: ringbuf_put_str(tx, "\terror\n");
  3739  01395C  C0AF  F06F         	movff	terminal_at_hand@tx,ringbuf_put_str@rb
  3740  013960  C0B0  F070         	movff	terminal_at_hand@tx+1,ringbuf_put_str@rb+1
  3741  013964  0EB1               	movlw	low STR_24
  3742  013966  0100               	movlb	0	; () banked
  3743  013968  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3744  01396A  0EFF               	movlw	high STR_24
  3745  01396C  0100               	movlb	0	; () banked
  3746  01396E  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3747  013970  EC57  F09C         	call	_ringbuf_put_str	;wreg free
  3748  013974  0012               	return	
  3749  013976  0012               	return		;funcret
  3750  013978                     __end_of_terminal_at_hand:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           intcon	equ	0xFF2
  3759                           postinc0	equ	0xFEE
  3760                           wreg	equ	0xFE8
  3761                           postdec1	equ	0xFE5
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           indf2	equ	0xFDF
  3765                           fsr2h	equ	0xFDA
  3766                           fsr2l	equ	0xFD9
  3767                           status	equ	0xFD8
  3768                           
  3769 ;; *************** function _print_time *****************
  3770 ;; Defined at:
  3771 ;;		line 68 in file "../My_library/My_terminal.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  tx              2   47[BANK0 ] PTR struct ringbuf
  3774 ;;		 -> usb_tx(8), 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  str            30   49[BANK0 ] unsigned char [30]
  3777 ;; Return value:  Size  Location     Type
  3778 ;;		None               void
  3779 ;; Registers used:
  3780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3786 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;Total ram usage:       32 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:   15
  3793 ;; This function calls:
  3794 ;;		_RTCC_from_RTCC
  3795 ;;		_ringbuf_put_str
  3796 ;;		_sprintf
  3797 ;; This function is called by:
  3798 ;;		_terminal_at_hand
  3799 ;;		_terminal_time
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text5
  3804  0133BE                     __ptext5:
  3805                           	opt stack 0
  3806  0133BE                     _print_time:
  3807                           	opt stack 11
  3808                           
  3809                           ;My_terminal.c: 69: RTCC_from_RTCC(&now);
  3810                           
  3811                           ;incstack = 0
  3812  0133BE  0E46               	movlw	low _now
  3813  0133C0  0100               	movlb	0	; () banked
  3814  0133C2  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  3815  0133C4  0E01               	movlw	high _now
  3816  0133C6  0100               	movlb	0	; () banked
  3817  0133C8  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  3818  0133CA  EC1D  F0A0         	call	_RTCC_from_RTCC	;wreg free
  3819                           
  3820                           ;My_terminal.c: 70: char str[30];
  3821                           ;My_terminal.c: 71: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
  3822                           ;My_terminal.c: 72: now.YY,
  3823                           ;My_terminal.c: 73: now.MM,
  3824                           ;My_terminal.c: 74: now.DD,
  3825                           ;My_terminal.c: 75: weekday_3char[now.EE],
  3826                           ;My_terminal.c: 76: now.hh,
  3827                           ;My_terminal.c: 77: now.mm,
  3828                           ;My_terminal.c: 78: now.ss);
  3829  0133CE  0E91               	movlw	low print_time@str
  3830  0133D0  0100               	movlb	0	; () banked
  3831  0133D2  6F6C               	movwf	sprintf@sp& (0+255),b
  3832  0133D4  0E00               	movlw	high print_time@str
  3833  0133D6  0100               	movlb	0	; () banked
  3834  0133D8  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  3835  0133DA  0E08               	movlw	low STR_23
  3836  0133DC  0100               	movlb	0	; () banked
  3837  0133DE  6F6E               	movwf	sprintf@f& (0+255),b
  3838  0133E0  0EFF               	movlw	high STR_23
  3839  0133E2  0100               	movlb	0	; () banked
  3840  0133E4  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  3841  0133E6  C150  F070         	movff	_now+10,?_sprintf+4
  3842  0133EA  0100               	movlb	0	; () banked
  3843  0133EC  6B71               	clrf	(?_sprintf+5)& (0+255),b
  3844  0133EE  C14F  F072         	movff	_now+9,?_sprintf+6
  3845  0133F2  0100               	movlb	0	; () banked
  3846  0133F4  6B73               	clrf	(?_sprintf+7)& (0+255),b
  3847  0133F6  C14E  F074         	movff	_now+8,?_sprintf+8
  3848  0133FA  0100               	movlb	0	; () banked
  3849  0133FC  6B75               	clrf	(?_sprintf+9)& (0+255),b
  3850  0133FE  0101               	movlb	1	; () banked
  3851  013400  514D               	movf	(_now+7)& (0+255),w,b
  3852  013402  0D04               	mullw	4
  3853  013404  0E5E               	movlw	low _weekday_3char
  3854  013406  24F3               	addwf	prodl,w,c
  3855  013408  0100               	movlb	0	; () banked
  3856  01340A  6F76               	movwf	(?_sprintf+10)& (0+255),b
  3857  01340C  0EFE               	movlw	high _weekday_3char
  3858  01340E  20F4               	addwfc	prodh,w,c
  3859  013410  0100               	movlb	0	; () banked
  3860  013412  6F77               	movwf	(?_sprintf+11)& (0+255),b
  3861  013414  C14C  F078         	movff	_now+6,?_sprintf+12
  3862  013418  0100               	movlb	0	; () banked
  3863  01341A  6B79               	clrf	(?_sprintf+13)& (0+255),b
  3864  01341C  C14B  F07A         	movff	_now+5,?_sprintf+14
  3865  013420  0100               	movlb	0	; () banked
  3866  013422  6B7B               	clrf	(?_sprintf+15)& (0+255),b
  3867  013424  C14A  F07C         	movff	_now+4,?_sprintf+16
  3868  013428  0100               	movlb	0	; () banked
  3869  01342A  6B7D               	clrf	(?_sprintf+17)& (0+255),b
  3870  01342C  EC00  F080         	call	_sprintf	;wreg free
  3871                           
  3872                           ;My_terminal.c: 79: ringbuf_put_str(tx, str);
  3873  013430  C08F  F06F         	movff	print_time@tx,ringbuf_put_str@rb
  3874  013434  C090  F070         	movff	print_time@tx+1,ringbuf_put_str@rb+1
  3875  013438  0E91               	movlw	low print_time@str
  3876  01343A  0100               	movlb	0	; () banked
  3877  01343C  6F71               	movwf	ringbuf_put_str@str& (0+255),b
  3878  01343E  0E00               	movlw	high print_time@str
  3879  013440  0100               	movlb	0	; () banked
  3880  013442  6F72               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  3881  013444  EC57  F09C         	call	_ringbuf_put_str	;wreg free
  3882  013448  0012               	return		;funcret
  3883  01344A                     __end_of_print_time:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           postinc0	equ	0xFEE
  3893                           wreg	equ	0xFE8
  3894                           postdec1	equ	0xFE5
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function _sprintf *****************
  3903 ;; Defined at:
  3904 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  3907 ;;		 -> main@str(20), print_time@str(30), print_time_dec@str(10), display_dec@s(4), 
  3908 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3909 ;;		 -> STR_52(15), STR_51(15), STR_50(15), STR_23(37), 
  3910 ;;		 -> STR_21(5), STR_1(5), 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  tmpval          4    0        struct .
  3913 ;;  width           2   45[BANK0 ] int 
  3914 ;;  len             2   41[BANK0 ] unsigned int 
  3915 ;;  val             2   39[BANK0 ] unsigned int 
  3916 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
  3917 ;;		 -> STR_53(7), weekday_3char(28), 
  3918 ;;  ap              2   35[BANK0 ] PTR void [1]
  3919 ;;		 -> ?_sprintf(2), 
  3920 ;;  c               1   44[BANK0 ] char 
  3921 ;;  flag            1   43[BANK0 ] unsigned char 
  3922 ;;  prec            1   34[BANK0 ] char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2   12[BANK0 ] int 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3932 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3936 ;;Total ram usage:       35 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:   12
  3939 ;; This function calls:
  3940 ;;		___lwdiv
  3941 ;;		___lwmod
  3942 ;;		___wmul
  3943 ;;		_isdigit
  3944 ;; This function is called by:
  3945 ;;		_print_time
  3946 ;;		_main
  3947 ;;		_display_dec
  3948 ;;		_print_time_dec
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text6
  3953  010000                     __ptext6:
  3954                           	opt stack 0
  3955  010000                     _sprintf:
  3956                           	opt stack 13
  3957                           
  3958                           ;doprnt.c: 494: va_list ap;
  3959                           ;doprnt.c: 499: signed char c;
  3960                           ;doprnt.c: 501: int width;
  3961                           ;doprnt.c: 506: signed char prec;
  3962                           ;doprnt.c: 508: unsigned char flag;
  3963                           ;doprnt.c: 523: union {
  3964                           ;doprnt.c: 524: unsigned long vd;
  3965                           ;doprnt.c: 525: double integ;
  3966                           ;doprnt.c: 526: } tmpval;
  3967                           ;doprnt.c: 528: unsigned int val;
  3968                           ;doprnt.c: 529: unsigned len;
  3969                           ;doprnt.c: 530: const char * cp;
  3970                           ;doprnt.c: 533: *ap = __va_start();
  3971                           
  3972                           ;incstack = 0
  3973  010000  0E70               	movlw	low (?_sprintf+4)
  3974  010002  0100               	movlb	0	; () banked
  3975  010004  6F83               	movwf	sprintf@ap& (0+255),b
  3976  010006  0E00               	movlw	high (?_sprintf+4)
  3977  010008  0100               	movlb	0	; () banked
  3978  01000A  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  3979                           
  3980                           ;doprnt.c: 536: while(c = *f++) {
  3981  01000C  D233               	goto	l8090
  3982  01000E                     l7950:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;doprnt.c: 538: if(c != '%')
  3986  01000E  0E25               	movlw	37
  3987  010010  0100               	movlb	0	; () banked
  3988  010012  198C               	xorwf	sprintf@c& (0+255),w,b
  3989  010014  B4D8               	btfsc	status,2,c
  3990  010016  D00A               	goto	l7956
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;doprnt.c: 540: {
  3994                           ;doprnt.c: 541: ((*sp++ = (c)));
  3995  010018  C06C  FFD9         	movff	sprintf@sp,fsr2l
  3996  01001C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  3997  010020  C08C  FFDF         	movff	sprintf@c,indf2
  3998                           
  3999                           ; BSR set to: 0
  4000  010024  0100               	movlb	0	; () banked
  4001  010026  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4002  010028  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4003                           
  4004                           ;doprnt.c: 542: continue;
  4005  01002A  D224               	goto	l8090
  4006  01002C                     l7956:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;doprnt.c: 543: }
  4010                           ;doprnt.c: 546: width = 0;
  4011  01002C  0E00               	movlw	0
  4012  01002E  0100               	movlb	0	; () banked
  4013  010030  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4014  010032  0E00               	movlw	0
  4015  010034  6F8D               	movwf	sprintf@width& (0+255),b
  4016                           
  4017                           ;doprnt.c: 548: flag = 0;
  4018  010036  0E00               	movlw	0
  4019  010038  0100               	movlb	0	; () banked
  4020  01003A  6F8B               	movwf	sprintf@flag& (0+255),b
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;doprnt.c: 551: switch(*f) {
  4024                           
  4025                           ;doprnt.c: 550: for(;;) {
  4026  01003C  D007               	goto	l7962
  4027  01003E                     l7958:
  4028                           
  4029                           ;doprnt.c: 580: flag |= 0x04;
  4030  01003E  0100               	movlb	0	; () banked
  4031  010040  858B               	bsf	sprintf@flag& (0+255),2,b
  4032                           
  4033                           ;doprnt.c: 581: f++;
  4034  010042  0100               	movlb	0	; () banked
  4035  010044  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4036  010046  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4037                           
  4038                           ;doprnt.c: 582: continue;
  4039  010048  D001               	goto	l7962
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;doprnt.c: 584: }
  4043  01004A  D00D               	goto	l7964
  4044  01004C                     l7962:
  4045  01004C  C06E  FFF6         	movff	sprintf@f,tblptrl
  4046  010050  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4047  010054                     	if	0	;tblptru may be non-zero
  4048  010054                     	endif
  4049  010054                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4050  010054  0E00               	movlw	low (__mediumconst shr (0+16))
  4051  010056  6EF8               	movwf	tblptru,c
  4052  010058                     	endif
  4053  010058  0008               	tblrd		*
  4054  01005A  50F5               	movf	tablat,w,c
  4055                           
  4056                           ; Switch size 1, requested type "space"
  4057                           ; Number of cases is 1, Range of values is 48 to 48
  4058                           ; switch strategies available:
  4059                           ; Name         Instructions Cycles
  4060                           ; simple_byte            4     3 (average)
  4061                           ;	Chosen strategy is simple_byte
  4062  01005C  0A30               	xorlw	48	; case 48
  4063  01005E  B4D8               	btfsc	status,2,c
  4064  010060  D7EE               	goto	l7958
  4065                           
  4066                           ;doprnt.c: 585: break;
  4067  010062  D001               	goto	l7964
  4068                           
  4069                           ;doprnt.c: 586: }
  4070  010064  D7F3               	goto	l7962
  4071  010066                     l7964:
  4072                           
  4073                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4074  010066  C06E  FFF6         	movff	sprintf@f,tblptrl
  4075  01006A  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4076  01006E                     	if	0	;tblptru may be non-zero
  4077  01006E                     	endif
  4078  01006E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4079  01006E  0E00               	movlw	low (__mediumconst shr (0+16))
  4080  010070  6EF8               	movwf	tblptru,c
  4081  010072                     	endif
  4082  010072  0008               	tblrd		*
  4083  010074  50F5               	movf	tablat,w,c
  4084  010076  EC09  F09F         	call	_isdigit
  4085  01007A  A0D8               	btfss	status,0,c
  4086  01007C  D0D6               	goto	l8012
  4087                           
  4088                           ;doprnt.c: 598: width = 0;
  4089  01007E  0E00               	movlw	0
  4090  010080  0100               	movlb	0	; () banked
  4091  010082  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4092  010084  0E00               	movlw	0
  4093  010086  6F8D               	movwf	sprintf@width& (0+255),b
  4094  010088  D000               	goto	l7968
  4095  01008A                     l7968:
  4096                           
  4097                           ;doprnt.c: 600: width *= 10;
  4098  01008A  C08D  F060         	movff	sprintf@width,___wmul@multiplier
  4099  01008E  C08E  F061         	movff	sprintf@width+1,___wmul@multiplier+1
  4100  010092  0E00               	movlw	0
  4101  010094  0100               	movlb	0	; () banked
  4102  010096  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4103  010098  0E0A               	movlw	10
  4104  01009A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4105  01009C  EC38  F09E         	call	___wmul	;wreg free
  4106  0100A0  C060  F08D         	movff	?___wmul,sprintf@width
  4107  0100A4  C061  F08E         	movff	?___wmul+1,sprintf@width+1
  4108                           
  4109                           ;doprnt.c: 601: width += *f++ - '0';
  4110  0100A8  0ED0               	movlw	208
  4111  0100AA  0100               	movlb	0	; () banked
  4112  0100AC  6F7E               	movwf	??_sprintf& (0+255),b
  4113  0100AE  0EFF               	movlw	255
  4114  0100B0  0100               	movlb	0	; () banked
  4115  0100B2  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  4116  0100B4  C06E  FFF6         	movff	sprintf@f,tblptrl
  4117  0100B8  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4118  0100BC                     	if	0	;tblptru may be non-zero
  4119  0100BC                     	endif
  4120  0100BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4121  0100BC  0E00               	movlw	low (__mediumconst shr (0+16))
  4122  0100BE  6EF8               	movwf	tblptru,c
  4123  0100C0                     	endif
  4124  0100C0  0008               	tblrd		*
  4125  0100C2  50F5               	movf	tablat,w,c
  4126  0100C4  0100               	movlb	0	; () banked
  4127  0100C6  6F80               	movwf	(??_sprintf+2)& (0+255),b
  4128  0100C8  6B81               	clrf	(??_sprintf+3)& (0+255),b
  4129  0100CA  0100               	movlb	0	; () banked
  4130  0100CC  517E               	movf	??_sprintf& (0+255),w,b
  4131  0100CE  0100               	movlb	0	; () banked
  4132  0100D0  2780               	addwf	(??_sprintf+2)& (0+255),f,b
  4133  0100D2  0100               	movlb	0	; () banked
  4134  0100D4  517F               	movf	(??_sprintf+1)& (0+255),w,b
  4135  0100D6  0100               	movlb	0	; () banked
  4136  0100D8  2381               	addwfc	(??_sprintf+3)& (0+255),f,b
  4137  0100DA  0100               	movlb	0	; () banked
  4138  0100DC  5180               	movf	(??_sprintf+2)& (0+255),w,b
  4139  0100DE  0100               	movlb	0	; () banked
  4140  0100E0  278D               	addwf	sprintf@width& (0+255),f,b
  4141  0100E2  0100               	movlb	0	; () banked
  4142  0100E4  5181               	movf	(??_sprintf+3)& (0+255),w,b
  4143  0100E6  0100               	movlb	0	; () banked
  4144  0100E8  238E               	addwfc	(sprintf@width+1)& (0+255),f,b
  4145                           
  4146                           ; BSR set to: 0
  4147  0100EA  0100               	movlb	0	; () banked
  4148  0100EC  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4149  0100EE  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4153  0100F0  C06E  FFF6         	movff	sprintf@f,tblptrl
  4154  0100F4  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4155  0100F8                     	if	0	;tblptru may be non-zero
  4156  0100F8                     	endif
  4157  0100F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4158  0100F8  0E00               	movlw	low (__mediumconst shr (0+16))
  4159  0100FA  6EF8               	movwf	tblptru,c
  4160  0100FC                     	endif
  4161  0100FC  0008               	tblrd		*
  4162  0100FE  50F5               	movf	tablat,w,c
  4163  010100  EC09  F09F         	call	_isdigit
  4164  010104  A0D8               	btfss	status,0,c
  4165  010106  D091               	goto	l8012
  4166  010108  D7C0               	goto	l7968
  4167                           
  4168                           ;doprnt.c: 608: }
  4169                           ;doprnt.c: 635: switch(c = *f++) {
  4170  01010A  D08F               	goto	l8012
  4171                           
  4172                           ;doprnt.c: 638: goto alldone;
  4173                           
  4174                           ;doprnt.c: 637: case 0:
  4175  01010C  D1C5               	goto	l8092
  4176                           
  4177                           ;doprnt.c: 698: case 'i':
  4178                           ;doprnt.c: 699: break;
  4179                           
  4180                           ;doprnt.c: 697: case 'd':
  4181  01010E  D0A8               	goto	l8014
  4182  010110                     l7976:
  4183                           
  4184                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  4185  010110  C083  FFD9         	movff	sprintf@ap,fsr2l
  4186  010114  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4187  010118  CFDE F085          	movff	postinc2,sprintf@cp
  4188  01011C  CFDD F086          	movff	postdec2,sprintf@cp+1
  4189  010120  0E02               	movlw	2
  4190  010122  0100               	movlb	0	; () banked
  4191  010124  2783               	addwf	sprintf@ap& (0+255),f,b
  4192  010126  0E00               	movlw	0
  4193  010128  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;doprnt.c: 740: if(!cp)
  4197  01012A  0100               	movlb	0	; () banked
  4198  01012C  5185               	movf	sprintf@cp& (0+255),w,b
  4199  01012E  0100               	movlb	0	; () banked
  4200  010130  1186               	iorwf	(sprintf@cp+1)& (0+255),w,b
  4201  010132  A4D8               	btfss	status,2,c
  4202  010134  D007               	goto	l7984
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;doprnt.c: 741: cp = "(null)";
  4206  010136  0EB9               	movlw	low STR_53
  4207  010138  0100               	movlb	0	; () banked
  4208  01013A  6F85               	movwf	sprintf@cp& (0+255),b
  4209  01013C  0EFF               	movlw	high STR_53
  4210  01013E  0100               	movlb	0	; () banked
  4211  010140  6F86               	movwf	(sprintf@cp+1)& (0+255),b
  4212  010142  D000               	goto	l7984
  4213  010144                     l7984:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;doprnt.c: 745: len = 0;
  4217  010144  0E00               	movlw	0
  4218  010146  0100               	movlb	0	; () banked
  4219  010148  6F8A               	movwf	(sprintf@len+1)& (0+255),b
  4220  01014A  0E00               	movlw	0
  4221  01014C  6F89               	movwf	sprintf@len& (0+255),b
  4222                           
  4223                           ;doprnt.c: 746: while(cp[len])
  4224  01014E  D004               	goto	l7988
  4225  010150                     l7986:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;doprnt.c: 747: len++;
  4229  010150  0100               	movlb	0	; () banked
  4230  010152  4B89               	infsnz	sprintf@len& (0+255),f,b
  4231  010154  2B8A               	incf	(sprintf@len+1)& (0+255),f,b
  4232  010156  D000               	goto	l7988
  4233  010158                     l7988:
  4234                           
  4235                           ; BSR set to: 0
  4236  010158  0100               	movlb	0	; () banked
  4237  01015A  5189               	movf	sprintf@len& (0+255),w,b
  4238  01015C  0100               	movlb	0	; () banked
  4239  01015E  2585               	addwf	sprintf@cp& (0+255),w,b
  4240  010160  0100               	movlb	0	; () banked
  4241  010162  6F7E               	movwf	??_sprintf& (0+255),b
  4242  010164  0100               	movlb	0	; () banked
  4243  010166  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4244  010168  0100               	movlb	0	; () banked
  4245  01016A  2186               	addwfc	(sprintf@cp+1)& (0+255),w,b
  4246  01016C  0100               	movlb	0	; () banked
  4247  01016E  6F7F               	movwf	(??_sprintf+1)& (0+255),b
  4248  010170  C07E  FFF6         	movff	??_sprintf,tblptrl
  4249  010174  C07F  FFF7         	movff	??_sprintf+1,tblptrh
  4250  010178                     	if	0	;tblptru may be non-zero
  4251  010178                     	endif
  4252  010178                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4253  010178  0E00               	movlw	low (__mediumconst shr (0+16))
  4254  01017A  6EF8               	movwf	tblptru,c
  4255  01017C                     	endif
  4256  01017C  0008               	tblrd		*
  4257  01017E  50F5               	movf	tablat,w,c
  4258  010180  0900               	iorlw	0
  4259  010182  A4D8               	btfss	status,2,c
  4260  010184  D7E5               	goto	l7986
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;doprnt.c: 757: if(width > len)
  4264                           
  4265                           ; BSR set to: 0
  4266  010186  0100               	movlb	0	; () banked
  4267  010188  518D               	movf	sprintf@width& (0+255),w,b
  4268  01018A  0100               	movlb	0	; () banked
  4269  01018C  5D89               	subwf	sprintf@len& (0+255),w,b
  4270  01018E  0100               	movlb	0	; () banked
  4271  010190  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4272  010192  0100               	movlb	0	; () banked
  4273  010194  598A               	subwfb	(sprintf@len+1)& (0+255),w,b
  4274  010196  B0D8               	btfsc	status,0,c
  4275  010198  D009               	goto	l7994
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;doprnt.c: 758: width -= len;
  4279  01019A  0100               	movlb	0	; () banked
  4280  01019C  5189               	movf	sprintf@len& (0+255),w,b
  4281  01019E  0100               	movlb	0	; () banked
  4282  0101A0  5F8D               	subwf	sprintf@width& (0+255),f,b
  4283  0101A2  0100               	movlb	0	; () banked
  4284  0101A4  518A               	movf	(sprintf@len+1)& (0+255),w,b
  4285  0101A6  0100               	movlb	0	; () banked
  4286  0101A8  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4287  0101AA  D010               	goto	l8000
  4288  0101AC                     l7994:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;doprnt.c: 759: else
  4292                           ;doprnt.c: 760: width = 0;
  4293  0101AC  0E00               	movlw	0
  4294  0101AE  0100               	movlb	0	; () banked
  4295  0101B0  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4296  0101B2  0E00               	movlw	0
  4297  0101B4  6F8D               	movwf	sprintf@width& (0+255),b
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;doprnt.c: 764: while(width--)
  4301  0101B6  D00A               	goto	l8000
  4302  0101B8                     l7996:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;doprnt.c: 765: ((*sp++ = (' ')));
  4306  0101B8  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4307  0101BC  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4308  0101C0  0E20               	movlw	32
  4309  0101C2  6EDF               	movwf	indf2,c
  4310                           
  4311                           ; BSR set to: 0
  4312  0101C4  0100               	movlb	0	; () banked
  4313  0101C6  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4314  0101C8  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4315  0101CA  D000               	goto	l8000
  4316  0101CC                     l8000:
  4317                           
  4318                           ; BSR set to: 0
  4319  0101CC  0100               	movlb	0	; () banked
  4320  0101CE  078D               	decf	sprintf@width& (0+255),f,b
  4321  0101D0  A0D8               	btfss	status,0,c
  4322  0101D2  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4323  0101D4  0100               	movlb	0	; () banked
  4324  0101D6  298D               	incf	sprintf@width& (0+255),w,b
  4325  0101D8  E1EF               	bnz	l7996
  4326  0101DA  0100               	movlb	0	; () banked
  4327  0101DC  298E               	incf	(sprintf@width+1)& (0+255),w,b
  4328  0101DE  B4D8               	btfsc	status,2,c
  4329  0101E0  D016               	goto	l8008
  4330  0101E2  D7EA               	goto	l7996
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;doprnt.c: 767: while(len--)
  4334  0101E4  D014               	goto	l8008
  4335  0101E6                     l8002:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  4339  0101E6  C085  FFF6         	movff	sprintf@cp,tblptrl
  4340  0101EA  C086  FFF7         	movff	sprintf@cp+1,tblptrh
  4341  0101EE                     	if	0	;tblptru may be non-zero
  4342  0101EE                     	endif
  4343  0101EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4344  0101EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4345  0101F0  6EF8               	movwf	tblptru,c
  4346  0101F2                     	endif
  4347  0101F2  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4348  0101F6  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4349  0101FA  0008               	tblrd		*
  4350  0101FC  CFF5 FFDF          	movff	tablat,indf2
  4351                           
  4352                           ; BSR set to: 0
  4353  010200  0100               	movlb	0	; () banked
  4354  010202  4B85               	infsnz	sprintf@cp& (0+255),f,b
  4355  010204  2B86               	incf	(sprintf@cp+1)& (0+255),f,b
  4356                           
  4357                           ; BSR set to: 0
  4358  010206  0100               	movlb	0	; () banked
  4359  010208  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4360  01020A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4361  01020C  D000               	goto	l8008
  4362  01020E                     l8008:
  4363                           
  4364                           ; BSR set to: 0
  4365  01020E  0100               	movlb	0	; () banked
  4366  010210  0789               	decf	sprintf@len& (0+255),f,b
  4367  010212  A0D8               	btfss	status,0,c
  4368  010214  078A               	decf	(sprintf@len+1)& (0+255),f,b
  4369  010216  0100               	movlb	0	; () banked
  4370  010218  2989               	incf	sprintf@len& (0+255),w,b
  4371  01021A  E1E5               	bnz	l8002
  4372  01021C  0100               	movlb	0	; () banked
  4373  01021E  298A               	incf	(sprintf@len+1)& (0+255),w,b
  4374  010220  B4D8               	btfsc	status,2,c
  4375  010222  D128               	goto	l8090
  4376  010224  D7E0               	goto	l8002
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;doprnt.c: 813: continue;
  4380                           
  4381                           ;doprnt.c: 802: default:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;doprnt.c: 774: continue;
  4385  010226  D126               	goto	l8090
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;doprnt.c: 822: }
  4389  010228  D01B               	goto	l8014
  4390  01022A                     l8012:
  4391  01022A  C06E  FFF6         	movff	sprintf@f,tblptrl
  4392  01022E  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4393  010232  0100               	movlb	0	; () banked
  4394  010234  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4395  010236  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4396  010238                     	if	0	;tblptru may be non-zero
  4397  010238                     	endif
  4398  010238                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4399  010238  0E00               	movlw	low (__mediumconst shr (0+16))
  4400  01023A  6EF8               	movwf	tblptru,c
  4401  01023C                     	endif
  4402  01023C  0008               	tblrd		*
  4403  01023E  CFF5 F08C          	movff	tablat,sprintf@c
  4404  010242  0100               	movlb	0	; () banked
  4405  010244  518C               	movf	sprintf@c& (0+255),w,b
  4406                           
  4407                           ; Switch size 1, requested type "space"
  4408                           ; Number of cases is 4, Range of values is 0 to 115
  4409                           ; switch strategies available:
  4410                           ; Name         Instructions Cycles
  4411                           ; simple_byte           13     7 (average)
  4412                           ;	Chosen strategy is simple_byte
  4413  010246  0A00               	xorlw	0	; case 0
  4414  010248  B4D8               	btfsc	status,2,c
  4415  01024A  D126               	goto	l8092
  4416  01024C  0A64               	xorlw	100	; case 100
  4417  01024E  B4D8               	btfsc	status,2,c
  4418  010250  D007               	goto	l8014
  4419  010252  0A0D               	xorlw	13	; case 105
  4420  010254  B4D8               	btfsc	status,2,c
  4421  010256  D004               	goto	l8014
  4422  010258  0A1A               	xorlw	26	; case 115
  4423  01025A  B4D8               	btfsc	status,2,c
  4424  01025C  D759               	goto	l7976
  4425  01025E  D10A               	goto	l8090
  4426  010260                     l8014:
  4427                           
  4428                           ;doprnt.c: 1253: {
  4429                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4430  010260  C083  FFD9         	movff	sprintf@ap,fsr2l
  4431  010264  C084  FFDA         	movff	sprintf@ap+1,fsr2h
  4432  010268  CFDE F087          	movff	postinc2,sprintf@val
  4433  01026C  CFDD F088          	movff	postdec2,sprintf@val+1
  4434  010270  0E02               	movlw	2
  4435  010272  0100               	movlb	0	; () banked
  4436  010274  2783               	addwf	sprintf@ap& (0+255),f,b
  4437  010276  0E00               	movlw	0
  4438  010278  2384               	addwfc	(sprintf@ap+1)& (0+255),f,b
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;doprnt.c: 1261: if((int)val < 0) {
  4442  01027A  0100               	movlb	0	; () banked
  4443  01027C  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
  4444  01027E  D009               	goto	l8024
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;doprnt.c: 1262: flag |= 0x03;
  4448  010280  0E03               	movlw	3
  4449  010282  0100               	movlb	0	; () banked
  4450  010284  138B               	iorwf	sprintf@flag& (0+255),f,b
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;doprnt.c: 1263: val = -val;
  4454  010286  0100               	movlb	0	; () banked
  4455  010288  6D87               	negf	sprintf@val& (0+255),b
  4456  01028A  1F88               	comf	(sprintf@val+1)& (0+255),f,b
  4457  01028C  B0D8               	btfsc	status,0,c
  4458  01028E  2B88               	incf	(sprintf@val+1)& (0+255),f,b
  4459  010290  D000               	goto	l8024
  4460  010292                     l8024:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;doprnt.c: 1264: }
  4464                           ;doprnt.c: 1266: }
  4465                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4466  010292  0E01               	movlw	1
  4467  010294  0100               	movlb	0	; () banked
  4468  010296  6F8C               	movwf	sprintf@c& (0+255),b
  4469  010298                     l8026:
  4470                           
  4471                           ; BSR set to: 0
  4472  010298  0E05               	movlw	5
  4473  01029A  0100               	movlb	0	; () banked
  4474  01029C  198C               	xorwf	sprintf@c& (0+255),w,b
  4475  01029E  B4D8               	btfsc	status,2,c
  4476  0102A0  D01D               	goto	l8038
  4477  0102A2  D001               	goto	l8030
  4478                           
  4479                           ; BSR set to: 0
  4480  0102A4  D01B               	goto	l8038
  4481  0102A6                     l8030:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;doprnt.c: 1306: if(val < dpowers[c])
  4485  0102A6  0100               	movlb	0	; () banked
  4486  0102A8  518C               	movf	sprintf@c& (0+255),w,b
  4487  0102AA  0D02               	mullw	2
  4488  0102AC  0EA1               	movlw	low _dpowers
  4489  0102AE  24F3               	addwf	prodl,w,c
  4490  0102B0  6EF6               	movwf	tblptrl,c
  4491  0102B2  0EFD               	movlw	high _dpowers
  4492  0102B4  20F4               	addwfc	prodh,w,c
  4493  0102B6  6EF7               	movwf	tblptrh,c
  4494  0102B8                     	if	1	;There are 3 active tblptr bytes
  4495  0102B8  6AF8               	clrf	tblptru,c
  4496  0102BA  0E00               	movlw	low (__mediumconst shr (0+16))
  4497  0102BC  22F8               	addwfc	tblptru,f,c
  4498  0102BE                     	endif
  4499  0102BE  0009               	tblrd		*+
  4500  0102C0  50F5               	movf	tablat,w,c
  4501  0102C2  0100               	movlb	0	; () banked
  4502  0102C4  5D87               	subwf	sprintf@val& (0+255),w,b
  4503  0102C6  0009               	tblrd		*+
  4504  0102C8  50F5               	movf	tablat,w,c
  4505  0102CA  0100               	movlb	0	; () banked
  4506  0102CC  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
  4507  0102CE  A0D8               	btfss	status,0,c
  4508  0102D0  D005               	goto	l8038
  4509  0102D2  D001               	goto	l8034
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;doprnt.c: 1307: break;
  4513  0102D4  D003               	goto	l8038
  4514  0102D6                     l8034:
  4515                           
  4516                           ; BSR set to: 0
  4517  0102D6  0100               	movlb	0	; () banked
  4518  0102D8  2B8C               	incf	sprintf@c& (0+255),f,b
  4519  0102DA  D7DE               	goto	l8026
  4520  0102DC                     l8038:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4524  0102DC  0100               	movlb	0	; () banked
  4525  0102DE  518D               	movf	sprintf@width& (0+255),w,b
  4526  0102E0  0100               	movlb	0	; () banked
  4527  0102E2  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4528  0102E4  B4D8               	btfsc	status,2,c
  4529  0102E6  D00C               	goto	l8044
  4530                           
  4531                           ; BSR set to: 0
  4532  0102E8  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4533  0102EC  0E03               	movlw	3
  4534  0102EE  0100               	movlb	0	; () banked
  4535  0102F0  177E               	andwf	??_sprintf& (0+255),f,b
  4536  0102F2  B4D8               	btfsc	status,2,c
  4537  0102F4  D005               	goto	l8044
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;doprnt.c: 1346: width--;
  4541  0102F6  0100               	movlb	0	; () banked
  4542  0102F8  078D               	decf	sprintf@width& (0+255),f,b
  4543  0102FA  A0D8               	btfss	status,0,c
  4544  0102FC  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4545  0102FE  D000               	goto	l8044
  4546  010300                     l8044:
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;doprnt.c: 1381: if(width > c)
  4550  010300  0E80               	movlw	128
  4551  010302  0100               	movlb	0	; () banked
  4552  010304  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4553  010306  0E7F               	movlw	127
  4554  010308  0100               	movlb	0	; () banked
  4555  01030A  6F7E               	movwf	??_sprintf& (0+255),b
  4556  01030C  0100               	movlb	0	; () banked
  4557  01030E  518D               	movf	sprintf@width& (0+255),w,b
  4558  010310  0100               	movlb	0	; () banked
  4559  010312  5D8C               	subwf	sprintf@c& (0+255),w,b
  4560  010314  0100               	movlb	0	; () banked
  4561  010316  518E               	movf	(sprintf@width+1)& (0+255),w,b
  4562  010318  0A80               	xorlw	128
  4563  01031A  0100               	movlb	0	; () banked
  4564  01031C  597E               	subwfb	??_sprintf& (0+255),w,b
  4565  01031E  B0D8               	btfsc	status,0,c
  4566  010320  D00B               	goto	l8048
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;doprnt.c: 1382: width -= c;
  4570  010322  0100               	movlb	0	; () banked
  4571  010324  518C               	movf	sprintf@c& (0+255),w,b
  4572  010326  0100               	movlb	0	; () banked
  4573  010328  5F8D               	subwf	sprintf@width& (0+255),f,b
  4574  01032A  0E00               	movlw	0
  4575  01032C  0100               	movlb	0	; () banked
  4576  01032E  BF8C               	btfsc	sprintf@c& (0+255),7,b
  4577  010330  0EFF               	movlw	255
  4578  010332  0100               	movlb	0	; () banked
  4579  010334  5B8E               	subwfb	(sprintf@width+1)& (0+255),f,b
  4580  010336  D006               	goto	l8050
  4581  010338                     l8048:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;doprnt.c: 1383: else
  4585                           ;doprnt.c: 1384: width = 0;
  4586  010338  0E00               	movlw	0
  4587  01033A  0100               	movlb	0	; () banked
  4588  01033C  6F8E               	movwf	(sprintf@width+1)& (0+255),b
  4589  01033E  0E00               	movlw	0
  4590  010340  6F8D               	movwf	sprintf@width& (0+255),b
  4591  010342  D000               	goto	l8050
  4592  010344                     l8050:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;doprnt.c: 1387: if(flag & 0x04) {
  4596  010344  0100               	movlb	0	; () banked
  4597  010346  A58B               	btfss	sprintf@flag& (0+255),2,b
  4598  010348  D02C               	goto	l8066
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;doprnt.c: 1392: if(flag & 0x03)
  4602  01034A  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4603  01034E  0E03               	movlw	3
  4604  010350  0100               	movlb	0	; () banked
  4605  010352  177E               	andwf	??_sprintf& (0+255),f,b
  4606  010354  B4D8               	btfsc	status,2,c
  4607  010356  D00A               	goto	l8058
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  4611  010358  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4612  01035C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4613  010360  0E2D               	movlw	45
  4614  010362  6EDF               	movwf	indf2,c
  4615                           
  4616                           ; BSR set to: 0
  4617  010364  0100               	movlb	0	; () banked
  4618  010366  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4619  010368  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4620  01036A  D000               	goto	l8058
  4621  01036C                     l8058:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;doprnt.c: 1415: if(width)
  4625  01036C  0100               	movlb	0	; () banked
  4626  01036E  518D               	movf	sprintf@width& (0+255),w,b
  4627  010370  0100               	movlb	0	; () banked
  4628  010372  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4629  010374  B4D8               	btfsc	status,2,c
  4630  010376  D041               	goto	l8080
  4631  010378                     l8060:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  4635  010378  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4636  01037C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4637  010380  0E30               	movlw	48
  4638  010382  6EDF               	movwf	indf2,c
  4639                           
  4640                           ; BSR set to: 0
  4641  010384  0100               	movlb	0	; () banked
  4642  010386  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4643  010388  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;doprnt.c: 1418: while(--width);
  4647  01038A  0100               	movlb	0	; () banked
  4648  01038C  078D               	decf	sprintf@width& (0+255),f,b
  4649  01038E  A0D8               	btfss	status,0,c
  4650  010390  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4651  010392  0100               	movlb	0	; () banked
  4652  010394  518D               	movf	sprintf@width& (0+255),w,b
  4653  010396  0100               	movlb	0	; () banked
  4654  010398  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4655  01039A  B4D8               	btfsc	status,2,c
  4656  01039C  D02E               	goto	l8080
  4657  01039E  D7EC               	goto	l8060
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;doprnt.c: 1420: } else
  4661                           
  4662                           ; BSR set to: 0
  4663  0103A0  D02C               	goto	l8080
  4664  0103A2                     l8066:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;doprnt.c: 1422: {
  4668                           ;doprnt.c: 1424: if(width
  4669                           ;doprnt.c: 1428: )
  4670  0103A2  0100               	movlb	0	; () banked
  4671  0103A4  518D               	movf	sprintf@width& (0+255),w,b
  4672  0103A6  0100               	movlb	0	; () banked
  4673  0103A8  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4674  0103AA  B4D8               	btfsc	status,2,c
  4675  0103AC  D015               	goto	l8074
  4676  0103AE                     l8068:
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  4680  0103AE  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4681  0103B2  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4682  0103B6  0E20               	movlw	32
  4683  0103B8  6EDF               	movwf	indf2,c
  4684                           
  4685                           ; BSR set to: 0
  4686  0103BA  0100               	movlb	0	; () banked
  4687  0103BC  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4688  0103BE  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;doprnt.c: 1431: while(--width);
  4692  0103C0  0100               	movlb	0	; () banked
  4693  0103C2  078D               	decf	sprintf@width& (0+255),f,b
  4694  0103C4  A0D8               	btfss	status,0,c
  4695  0103C6  078E               	decf	(sprintf@width+1)& (0+255),f,b
  4696  0103C8  0100               	movlb	0	; () banked
  4697  0103CA  518D               	movf	sprintf@width& (0+255),w,b
  4698  0103CC  0100               	movlb	0	; () banked
  4699  0103CE  118E               	iorwf	(sprintf@width+1)& (0+255),w,b
  4700  0103D0  B4D8               	btfsc	status,2,c
  4701  0103D2  D002               	goto	l8074
  4702  0103D4  D7EC               	goto	l8068
  4703                           
  4704                           ; BSR set to: 0
  4705  0103D6  D000               	goto	l8074
  4706  0103D8                     l8074:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;doprnt.c: 1438: if(flag & 0x03)
  4710  0103D8  C08B  F07E         	movff	sprintf@flag,??_sprintf
  4711  0103DC  0E03               	movlw	3
  4712  0103DE  0100               	movlb	0	; () banked
  4713  0103E0  177E               	andwf	??_sprintf& (0+255),f,b
  4714  0103E2  B4D8               	btfsc	status,2,c
  4715  0103E4  D00A               	goto	l8080
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4719  0103E6  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4720  0103EA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4721  0103EE  0E2D               	movlw	45
  4722  0103F0  6EDF               	movwf	indf2,c
  4723                           
  4724                           ; BSR set to: 0
  4725  0103F2  0100               	movlb	0	; () banked
  4726  0103F4  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4727  0103F6  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4728                           
  4729                           ; BSR set to: 0
  4730  0103F8  D000               	goto	l8080
  4731  0103FA                     l8080:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;doprnt.c: 1469: }
  4735                           ;doprnt.c: 1472: prec = c;
  4736  0103FA  C08C  F082         	movff	sprintf@c,sprintf@prec
  4737                           
  4738                           ;doprnt.c: 1474: while(prec--) {
  4739  0103FE  D032               	goto	l8088
  4740  010400                     l8082:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;doprnt.c: 1478: {
  4744                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4745  010400  0100               	movlb	0	; () banked
  4746  010402  5182               	movf	sprintf@prec& (0+255),w,b
  4747  010404  0D02               	mullw	2
  4748  010406  0EA1               	movlw	low _dpowers
  4749  010408  24F3               	addwf	prodl,w,c
  4750  01040A  6EF6               	movwf	tblptrl,c
  4751  01040C  0EFD               	movlw	high _dpowers
  4752  01040E  20F4               	addwfc	prodh,w,c
  4753  010410  6EF7               	movwf	tblptrh,c
  4754  010412                     	if	1	;There are 3 active tblptr bytes
  4755  010412  6AF8               	clrf	tblptru,c
  4756  010414  0E00               	movlw	low (__mediumconst shr (0+16))
  4757  010416  22F8               	addwfc	tblptru,f,c
  4758  010418                     	endif
  4759  010418  0009               	tblrd		*+
  4760  01041A  CFF5 F062          	movff	tablat,___lwdiv@divisor
  4761  01041E  000A               	tblrd		*-
  4762  010420  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
  4763  010424  C087  F060         	movff	sprintf@val,___lwdiv@dividend
  4764  010428  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
  4765  01042C  ECAE  F09A         	call	___lwdiv	;wreg free
  4766  010430  C060  F067         	movff	?___lwdiv,___lwmod@dividend
  4767  010434  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
  4768  010438  0E00               	movlw	0
  4769  01043A  0100               	movlb	0	; () banked
  4770  01043C  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  4771  01043E  0E0A               	movlw	10
  4772  010440  6F69               	movwf	___lwmod@divisor& (0+255),b
  4773  010442  EC21  F09C         	call	___lwmod	;wreg free
  4774  010446  0100               	movlb	0	; () banked
  4775  010448  5167               	movf	?___lwmod& (0+255),w,b
  4776  01044A  0F30               	addlw	48
  4777  01044C  0100               	movlb	0	; () banked
  4778  01044E  6F8C               	movwf	sprintf@c& (0+255),b
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;doprnt.c: 1523: }
  4782                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4783  010450  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4784  010454  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4785  010458  C08C  FFDF         	movff	sprintf@c,indf2
  4786                           
  4787                           ; BSR set to: 0
  4788  01045C  0100               	movlb	0	; () banked
  4789  01045E  4B6C               	infsnz	sprintf@sp& (0+255),f,b
  4790  010460  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
  4791  010462  D000               	goto	l8088
  4792  010464                     l8088:
  4793                           
  4794                           ; BSR set to: 0
  4795  010464  0100               	movlb	0	; () banked
  4796  010466  0782               	decf	sprintf@prec& (0+255),f,b
  4797  010468  0100               	movlb	0	; () banked
  4798  01046A  2982               	incf	sprintf@prec& (0+255),w,b
  4799  01046C  B4D8               	btfsc	status,2,c
  4800  01046E  D002               	goto	l8090
  4801  010470  D7C7               	goto	l8082
  4802                           
  4803                           ; BSR set to: 0
  4804  010472  D000               	goto	l8090
  4805  010474                     l8090:
  4806                           
  4807                           ; BSR set to: 0
  4808  010474  C06E  FFF6         	movff	sprintf@f,tblptrl
  4809  010478  C06F  FFF7         	movff	sprintf@f+1,tblptrh
  4810  01047C  0100               	movlb	0	; () banked
  4811  01047E  4B6E               	infsnz	sprintf@f& (0+255),f,b
  4812  010480  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
  4813  010482                     	if	0	;tblptru may be non-zero
  4814  010482                     	endif
  4815  010482                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4816  010482  0E00               	movlw	low (__mediumconst shr (0+16))
  4817  010484  6EF8               	movwf	tblptru,c
  4818  010486                     	endif
  4819  010486  0008               	tblrd		*
  4820  010488  CFF5 F08C          	movff	tablat,sprintf@c
  4821  01048C  0100               	movlb	0	; () banked
  4822  01048E  518C               	movf	sprintf@c& (0+255),w,b
  4823  010490  B4D8               	btfsc	status,2,c
  4824  010492  D002               	goto	l8092
  4825  010494  D5BC               	goto	l7950
  4826                           
  4827                           ; BSR set to: 0
  4828  010496  D000               	goto	l8092
  4829  010498                     l8092:
  4830                           
  4831                           ;doprnt.c: 1538: *sp = 0;
  4832  010498  C06C  FFD9         	movff	sprintf@sp,fsr2l
  4833  01049C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
  4834  0104A0  0E00               	movlw	0
  4835  0104A2  6EDF               	movwf	indf2,c
  4836  0104A4  0012               	return	
  4837                           
  4838                           ;doprnt.c: 1540: return 0;
  4839                           ;	Return value of _sprintf is never used
  4840  0104A6  0012               	return		;funcret
  4841  0104A8                     __end_of_sprintf:
  4842                           	opt stack 0
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           postinc0	equ	0xFEE
  4851                           wreg	equ	0xFE8
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _ringbuf_put_str *****************
  4863 ;; Defined at:
  4864 ;;		line 39 in file "../My_library/My_ringbuf.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  4867 ;;		 -> usb_tx(8), 
  4868 ;;  str             2   17[BANK0 ] PTR const unsigned char 
  4869 ;;		 -> STR_43(120), STR_24(8), print_time@str(30), STR_22(3), 
  4870 ;;		 -> print_time_dec@str(10), STR_20(4), STR_19(4), 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        4 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:   13
  4889 ;; This function calls:
  4890 ;;		_ringbuf_put
  4891 ;; This function is called by:
  4892 ;;		_terminal_loop
  4893 ;;		_print_time
  4894 ;;		_terminal_at_hand
  4895 ;;		_terminal_operation
  4896 ;;		_print_time_dec
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text7
  4901  0138AE                     __ptext7:
  4902                           	opt stack 0
  4903  0138AE                     _ringbuf_put_str:
  4904                           	opt stack 13
  4905                           
  4906                           ;My_ringbuf.c: 40: while (*str) {
  4907                           
  4908                           ;incstack = 0
  4909  0138AE  D01D               	goto	l7862
  4910  0138B0                     l7858:
  4911                           
  4912                           ;My_ringbuf.c: 41: ringbuf_put(rb, *str++);
  4913  0138B0  C06F  F068         	movff	ringbuf_put_str@rb,ringbuf_put@rb
  4914  0138B4  C070  F069         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
  4915  0138B8  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4916  0138BC  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4917  0138C0  0E00               	movlw	low (__mediumconst shr (0+16))
  4918  0138C2  6EF8               	movwf	tblptru,c
  4919  0138C4  0E0E               	movlw	(high __ramtop+-1)
  4920  0138C6  64F7               	cpfsgt	tblptrh,c
  4921  0138C8  D003               	bra	u7697
  4922  0138CA  0008               	tblrd		*
  4923  0138CC  50F5               	movf	tablat,w,c
  4924  0138CE  D005               	bra	u7690
  4925  0138D0                     u7697:
  4926  0138D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4927  0138D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4928  0138D8  50EF               	movf	indf0,w,c
  4929  0138DA                     u7690:
  4930  0138DA  0100               	movlb	0	; () banked
  4931  0138DC  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  4932  0138DE  EC82  F093         	call	_ringbuf_put	;wreg free
  4933  0138E2  0100               	movlb	0	; () banked
  4934  0138E4  4B71               	infsnz	ringbuf_put_str@str& (0+255),f,b
  4935  0138E6  2B72               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
  4936  0138E8  D000               	goto	l7862
  4937  0138EA                     l7862:
  4938  0138EA  C071  FFF6         	movff	ringbuf_put_str@str,tblptrl
  4939  0138EE  C072  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
  4940  0138F2  0E00               	movlw	low (__mediumconst shr (0+16))
  4941  0138F4  6EF8               	movwf	tblptru,c
  4942  0138F6  0E0E               	movlw	(high __ramtop+-1)
  4943  0138F8  64F7               	cpfsgt	tblptrh,c
  4944  0138FA  D003               	bra	u7707
  4945  0138FC  0008               	tblrd		*
  4946  0138FE  50F5               	movf	tablat,w,c
  4947  013900  D005               	bra	u7700
  4948  013902                     u7707:
  4949  013902  CFF6 FFE9          	movff	tblptrl,fsr0l
  4950  013906  CFF7 FFEA          	movff	tblptrh,fsr0h
  4951  01390A  50EF               	movf	indf0,w,c
  4952  01390C                     u7700:
  4953  01390C  0900               	iorlw	0
  4954  01390E  A4D8               	btfss	status,2,c
  4955  013910  D7CF               	goto	l7858
  4956  013912  0012               	return		;funcret
  4957  013914                     __end_of_ringbuf_put_str:
  4958                           	opt stack 0
  4959                           tblptru	equ	0xFF8
  4960                           tblptrh	equ	0xFF7
  4961                           tblptrl	equ	0xFF6
  4962                           tablat	equ	0xFF5
  4963                           prodh	equ	0xFF4
  4964                           prodl	equ	0xFF3
  4965                           intcon	equ	0xFF2
  4966                           indf0	equ	0xFEF
  4967                           postinc0	equ	0xFEE
  4968                           fsr0h	equ	0xFEA
  4969                           fsr0l	equ	0xFE9
  4970                           wreg	equ	0xFE8
  4971                           postdec1	equ	0xFE5
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           indf2	equ	0xFDF
  4975                           postinc2	equ	0xFDE
  4976                           postdec2	equ	0xFDD
  4977                           fsr2h	equ	0xFDA
  4978                           fsr2l	equ	0xFD9
  4979                           status	equ	0xFD8
  4980                           
  4981 ;; *************** function _RTCC_from_caltime *****************
  4982 ;; Defined at:
  4983 ;;		line 198 in file "../My_library/My_RTCC.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  tm              2   47[BANK0 ] PTR struct .
  4986 ;;		 -> now(14), 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;		None               void
  4991 ;; Registers used:
  4992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;Total ram usage:        2 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:   14
  5005 ;; This function calls:
  5006 ;;		_caltime_to_RTCC
  5007 ;;		_caltime_to_epoch
  5008 ;;		_epoch_to_caltime
  5009 ;; This function is called by:
  5010 ;;		_terminal_at_hand
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text8
  5015  013F1A                     __ptext8:
  5016                           	opt stack 0
  5017  013F1A                     _RTCC_from_caltime:
  5018                           	opt stack 12
  5019                           
  5020                           ;My_RTCC.c: 199: caltime_to_epoch(tm);
  5021                           
  5022                           ;incstack = 0
  5023  013F1A  C08F  F079         	movff	RTCC_from_caltime@tm,caltime_to_epoch@tm
  5024  013F1E  C090  F07A         	movff	RTCC_from_caltime@tm+1,caltime_to_epoch@tm+1
  5025  013F22  EC3B  F087         	call	_caltime_to_epoch	;wreg free
  5026                           
  5027                           ;My_RTCC.c: 200: epoch_to_caltime(tm);
  5028  013F26  C08F  F081         	movff	RTCC_from_caltime@tm,epoch_to_caltime@tm
  5029  013F2A  C090  F082         	movff	RTCC_from_caltime@tm+1,epoch_to_caltime@tm+1
  5030  013F2E  EC84  F088         	call	_epoch_to_caltime	;wreg free
  5031                           
  5032                           ;My_RTCC.c: 201: caltime_to_RTCC(tm);
  5033  013F32  C08F  F069         	movff	RTCC_from_caltime@tm,caltime_to_RTCC@tm
  5034  013F36  C090  F06A         	movff	RTCC_from_caltime@tm+1,caltime_to_RTCC@tm+1
  5035  013F3A  ECAB  F092         	call	_caltime_to_RTCC	;wreg free
  5036  013F3E  0012               	return		;funcret
  5037  013F40                     __end_of_RTCC_from_caltime:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           indf0	equ	0xFEF
  5047                           postinc0	equ	0xFEE
  5048                           fsr0h	equ	0xFEA
  5049                           fsr0l	equ	0xFE9
  5050                           wreg	equ	0xFE8
  5051                           postdec1	equ	0xFE5
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           indf2	equ	0xFDF
  5055                           postinc2	equ	0xFDE
  5056                           postdec2	equ	0xFDD
  5057                           fsr2h	equ	0xFDA
  5058                           fsr2l	equ	0xFD9
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _strcmp *****************
  5062 ;; Defined at:
  5063 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  5066 ;;		 -> terminal_loop@op1(25), terminal_loop@op0(25), 
  5067 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  5068 ;;		 -> STR_47(9), STR_44(9), STR_42(2), STR_41(5), 
  5069 ;;		 -> STR_40(7), STR_39(2), STR_38(7), STR_37(2), 
  5070 ;;		 -> STR_36(5), STR_35(2), STR_34(4), STR_33(2), 
  5071 ;;		 -> STR_32(6), STR_31(2), STR_30(5), STR_29(2), 
  5072 ;;		 -> STR_28(12), STR_27(3), STR_26(2), STR_25(11), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  r               1    5[BANK0 ] char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  2    0[BANK0 ] int 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;Total ram usage:        6 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:   11
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_terminal_time
  5095 ;;		_terminal_operation
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text9
  5100  013978                     __ptext9:
  5101                           	opt stack 0
  5102  013978                     _strcmp:
  5103                           	opt stack 16
  5104                           
  5105                           ;incstack = 0
  5106  013978  D007               	goto	l8196
  5107  01397A                     l8194:
  5108  01397A  0100               	movlb	0	; () banked
  5109  01397C  4B60               	infsnz	strcmp@s1& (0+255),f,b
  5110  01397E  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
  5111  013980  0100               	movlb	0	; () banked
  5112  013982  4B62               	infsnz	strcmp@s2& (0+255),f,b
  5113  013984  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
  5114  013986  D000               	goto	l8196
  5115  013988                     l8196:
  5116  013988  C060  FFD9         	movff	strcmp@s1,fsr2l
  5117  01398C  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5118  013990  50DF               	movf	indf2,w,c
  5119  013992  0100               	movlb	0	; () banked
  5120  013994  6F64               	movwf	??_strcmp& (0+255),b
  5121  013996  C062  FFF6         	movff	strcmp@s2,tblptrl
  5122  01399A  C063  FFF7         	movff	strcmp@s2+1,tblptrh
  5123  01399E                     	if	0	;tblptru may be non-zero
  5124  01399E                     	endif
  5125  01399E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5126  01399E  0E00               	movlw	low (__mediumconst shr (0+16))
  5127  0139A0  6EF8               	movwf	tblptru,c
  5128  0139A2                     	endif
  5129  0139A2  0008               	tblrd		*
  5130  0139A4  50F5               	movf	tablat,w,c
  5131  0139A6  0800               	sublw	0
  5132  0139A8  0100               	movlb	0	; () banked
  5133  0139AA  2564               	addwf	??_strcmp& (0+255),w,b
  5134  0139AC  0100               	movlb	0	; () banked
  5135  0139AE  6F65               	movwf	strcmp@r& (0+255),b
  5136  0139B0  0100               	movlb	0	; () banked
  5137  0139B2  5165               	movf	strcmp@r& (0+255),w,b
  5138  0139B4  A4D8               	btfss	status,2,c
  5139  0139B6  D009               	goto	l8200
  5140                           
  5141                           ; BSR set to: 0
  5142  0139B8  C060  FFD9         	movff	strcmp@s1,fsr2l
  5143  0139BC  C061  FFDA         	movff	strcmp@s1+1,fsr2h
  5144  0139C0  50DF               	movf	indf2,w,c
  5145  0139C2  B4D8               	btfsc	status,2,c
  5146  0139C4  D002               	goto	l8200
  5147  0139C6  D7D9               	goto	l8194
  5148                           
  5149                           ; BSR set to: 0
  5150  0139C8  D000               	goto	l8200
  5151  0139CA                     l8200:
  5152                           
  5153                           ; BSR set to: 0
  5154  0139CA  0100               	movlb	0	; () banked
  5155  0139CC  5165               	movf	strcmp@r& (0+255),w,b
  5156  0139CE  0100               	movlb	0	; () banked
  5157  0139D0  6F60               	movwf	?_strcmp& (0+255),b
  5158  0139D2  6B61               	clrf	(?_strcmp+1)& (0+255),b
  5159  0139D4  BF60               	btfsc	?_strcmp& (0+255),7,b
  5160  0139D6  0761               	decf	(?_strcmp+1)& (0+255),f,b
  5161  0139D8  0012               	return	
  5162                           
  5163                           ; BSR set to: 0
  5164                           
  5165                           ; BSR set to: 0
  5166  0139DA  0012               	return		;funcret
  5167  0139DC                     __end_of_strcmp:
  5168                           	opt stack 0
  5169                           tblptru	equ	0xFF8
  5170                           tblptrh	equ	0xFF7
  5171                           tblptrl	equ	0xFF6
  5172                           tablat	equ	0xFF5
  5173                           prodh	equ	0xFF4
  5174                           prodl	equ	0xFF3
  5175                           intcon	equ	0xFF2
  5176                           indf0	equ	0xFEF
  5177                           postinc0	equ	0xFEE
  5178                           fsr0h	equ	0xFEA
  5179                           fsr0l	equ	0xFE9
  5180                           wreg	equ	0xFE8
  5181                           postdec1	equ	0xFE5
  5182                           fsr1h	equ	0xFE2
  5183                           fsr1l	equ	0xFE1
  5184                           indf2	equ	0xFDF
  5185                           postinc2	equ	0xFDE
  5186                           postdec2	equ	0xFDD
  5187                           fsr2h	equ	0xFDA
  5188                           fsr2l	equ	0xFD9
  5189                           status	equ	0xFD8
  5190                           
  5191 ;; *************** function _atoi *****************
  5192 ;; Defined at:
  5193 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\atoi.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  5196 ;;		 -> terminal_loop@op2(25), 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  a               2   11[BANK0 ] int 
  5199 ;;  sign            1   10[BANK0 ] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  2    6[BANK0 ] int 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5213 ;;Total ram usage:        7 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:   12
  5216 ;; This function calls:
  5217 ;;		___wmul
  5218 ;;		_isdigit
  5219 ;; This function is called by:
  5220 ;;		_terminal_time
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text10
  5225  011E1A                     __ptext10:
  5226                           	opt stack 0
  5227  011E1A                     _atoi:
  5228                           	opt stack 15
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;incstack = 0
  5232  011E1A  D004               	goto	l8208
  5233  011E1C                     l8206:
  5234  011E1C  0100               	movlb	0	; () banked
  5235  011E1E  4B66               	infsnz	atoi@s& (0+255),f,b
  5236  011E20  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5237  011E22  D000               	goto	l8208
  5238  011E24                     l8208:
  5239  011E24  C066  FFD9         	movff	atoi@s,fsr2l
  5240  011E28  C067  FFDA         	movff	atoi@s+1,fsr2h
  5241  011E2C  0E20               	movlw	32
  5242  011E2E  18DE               	xorwf	postinc2,w,c
  5243  011E30  B4D8               	btfsc	status,2,c
  5244  011E32  D7F4               	goto	l8206
  5245  011E34  C066  FFD9         	movff	atoi@s,fsr2l
  5246  011E38  C067  FFDA         	movff	atoi@s+1,fsr2h
  5247  011E3C  0E09               	movlw	9
  5248  011E3E  18DE               	xorwf	postinc2,w,c
  5249  011E40  B4D8               	btfsc	status,2,c
  5250  011E42  D7EC               	goto	l8206
  5251  011E44  0E00               	movlw	0
  5252  011E46  0100               	movlb	0	; () banked
  5253  011E48  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5254  011E4A  0E00               	movlw	0
  5255  011E4C  6F6B               	movwf	atoi@a& (0+255),b
  5256  011E4E  0E00               	movlw	0
  5257  011E50  0100               	movlb	0	; () banked
  5258  011E52  6F6A               	movwf	atoi@sign& (0+255),b
  5259                           
  5260                           ; BSR set to: 0
  5261  011E54  C066  FFD9         	movff	atoi@s,fsr2l
  5262  011E58  C067  FFDA         	movff	atoi@s+1,fsr2h
  5263  011E5C  0E2D               	movlw	45
  5264  011E5E  18DE               	xorwf	postinc2,w,c
  5265  011E60  A4D8               	btfss	status,2,c
  5266  011E62  D003               	goto	l8218
  5267                           
  5268                           ; BSR set to: 0
  5269  011E64  0100               	movlb	0	; () banked
  5270  011E66  2B6A               	incf	atoi@sign& (0+255),f,b
  5271  011E68  D02F               	goto	l8224
  5272  011E6A                     l8218:
  5273                           
  5274                           ; BSR set to: 0
  5275  011E6A  C066  FFD9         	movff	atoi@s,fsr2l
  5276  011E6E  C067  FFDA         	movff	atoi@s+1,fsr2h
  5277  011E72  0E2B               	movlw	43
  5278  011E74  18DE               	xorwf	postinc2,w,c
  5279  011E76  A4D8               	btfss	status,2,c
  5280  011E78  D02B               	goto	l8226
  5281  011E7A  D026               	goto	l8224
  5282                           
  5283                           ; BSR set to: 0
  5284                           
  5285                           ; BSR set to: 0
  5286                           
  5287                           ; BSR set to: 0
  5288  011E7C  D029               	goto	l8226
  5289  011E7E                     l8222:
  5290  011E7E  C06B  F060         	movff	atoi@a,___wmul@multiplier
  5291  011E82  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
  5292  011E86  0E00               	movlw	0
  5293  011E88  0100               	movlb	0	; () banked
  5294  011E8A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5295  011E8C  0E0A               	movlw	10
  5296  011E8E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5297  011E90  EC38  F09E         	call	___wmul	;wreg free
  5298  011E94  C066  FFD9         	movff	atoi@s,fsr2l
  5299  011E98  C067  FFDA         	movff	atoi@s+1,fsr2h
  5300  011E9C  50DF               	movf	indf2,w,c
  5301  011E9E  0100               	movlb	0	; () banked
  5302  011EA0  6F68               	movwf	??_atoi& (0+255),b
  5303  011EA2  6B69               	clrf	(??_atoi+1)& (0+255),b
  5304  011EA4  0100               	movlb	0	; () banked
  5305  011EA6  5160               	movf	?___wmul& (0+255),w,b
  5306  011EA8  0100               	movlb	0	; () banked
  5307  011EAA  2768               	addwf	??_atoi& (0+255),f,b
  5308  011EAC  0100               	movlb	0	; () banked
  5309  011EAE  5161               	movf	(?___wmul+1)& (0+255),w,b
  5310  011EB0  0100               	movlb	0	; () banked
  5311  011EB2  2369               	addwfc	(??_atoi+1)& (0+255),f,b
  5312  011EB4  0ED0               	movlw	208
  5313  011EB6  0100               	movlb	0	; () banked
  5314  011EB8  2568               	addwf	??_atoi& (0+255),w,b
  5315  011EBA  0100               	movlb	0	; () banked
  5316  011EBC  6F6B               	movwf	atoi@a& (0+255),b
  5317  011EBE  0EFF               	movlw	255
  5318  011EC0  0100               	movlb	0	; () banked
  5319  011EC2  2169               	addwfc	(??_atoi+1)& (0+255),w,b
  5320  011EC4  0100               	movlb	0	; () banked
  5321  011EC6  6F6C               	movwf	(atoi@a+1)& (0+255),b
  5322  011EC8                     l8224:
  5323                           
  5324                           ; BSR set to: 0
  5325  011EC8  0100               	movlb	0	; () banked
  5326  011ECA  4B66               	infsnz	atoi@s& (0+255),f,b
  5327  011ECC  2B67               	incf	(atoi@s+1)& (0+255),f,b
  5328  011ECE  D000               	goto	l8226
  5329  011ED0                     l8226:
  5330                           
  5331                           ; BSR set to: 0
  5332  011ED0  C066  FFD9         	movff	atoi@s,fsr2l
  5333  011ED4  C067  FFDA         	movff	atoi@s+1,fsr2h
  5334  011ED8  50DF               	movf	indf2,w,c
  5335  011EDA  EC09  F09F         	call	_isdigit
  5336  011EDE  B0D8               	btfsc	status,0,c
  5337  011EE0  D7CE               	goto	l8222
  5338  011EE2  0100               	movlb	0	; () banked
  5339  011EE4  516A               	movf	atoi@sign& (0+255),w,b
  5340  011EE6  0100               	movlb	0	; () banked
  5341  011EE8  B4D8               	btfsc	status,2,c
  5342  011EEA  D00E               	goto	l1604
  5343                           
  5344                           ; BSR set to: 0
  5345  011EEC  C06B  F068         	movff	atoi@a,??_atoi
  5346  011EF0  C06C  F069         	movff	atoi@a+1,??_atoi+1
  5347  011EF4  0100               	movlb	0	; () banked
  5348  011EF6  1F68               	comf	??_atoi& (0+255),f,b
  5349  011EF8  1F69               	comf	(??_atoi+1)& (0+255),f,b
  5350  011EFA  4B68               	infsnz	??_atoi& (0+255),f,b
  5351  011EFC  2B69               	incf	(??_atoi+1)& (0+255),f,b
  5352  011EFE  C068  F066         	movff	??_atoi,?_atoi
  5353  011F02  C069  F067         	movff	??_atoi+1,?_atoi+1
  5354  011F06  0012               	return	
  5355  011F08                     l1604:
  5356                           
  5357                           ; BSR set to: 0
  5358  011F08  C06B  F066         	movff	atoi@a,?_atoi
  5359  011F0C  C06C  F067         	movff	atoi@a+1,?_atoi+1
  5360                           
  5361                           ; BSR set to: 0
  5362  011F10  0012               	return		;funcret
  5363  011F12                     __end_of_atoi:
  5364                           	opt stack 0
  5365                           tblptru	equ	0xFF8
  5366                           tblptrh	equ	0xFF7
  5367                           tblptrl	equ	0xFF6
  5368                           tablat	equ	0xFF5
  5369                           prodh	equ	0xFF4
  5370                           prodl	equ	0xFF3
  5371                           intcon	equ	0xFF2
  5372                           indf0	equ	0xFEF
  5373                           postinc0	equ	0xFEE
  5374                           fsr0h	equ	0xFEA
  5375                           fsr0l	equ	0xFE9
  5376                           wreg	equ	0xFE8
  5377                           postdec1	equ	0xFE5
  5378                           fsr1h	equ	0xFE2
  5379                           fsr1l	equ	0xFE1
  5380                           indf2	equ	0xFDF
  5381                           postinc2	equ	0xFDE
  5382                           postdec2	equ	0xFDD
  5383                           fsr2h	equ	0xFDA
  5384                           fsr2l	equ	0xFD9
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function _isdigit *****************
  5388 ;; Defined at:
  5389 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  c               1    wreg     unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  c               1    2[BANK0 ] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;		None               void
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;Total ram usage:        3 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:   11
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_sprintf
  5414 ;;		_atoi
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text11
  5419  013E12                     __ptext11:
  5420                           	opt stack 0
  5421  013E12                     _isdigit:
  5422                           	opt stack 13
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;incstack = 0
  5426                           ;isdigit@c stored from wreg
  5427  013E12  0100               	movlb	0	; () banked
  5428  013E14  6F62               	movwf	isdigit@c& (0+255),b
  5429                           
  5430                           ; BSR set to: 0
  5431  013E16  0E00               	movlw	0
  5432  013E18  0100               	movlb	0	; () banked
  5433  013E1A  6F61               	movwf	_isdigit$5486& (0+255),b
  5434                           
  5435                           ; BSR set to: 0
  5436  013E1C  0E3A               	movlw	58
  5437  013E1E  0100               	movlb	0	; () banked
  5438  013E20  6162               	cpfslt	isdigit@c& (0+255),b
  5439  013E22  D008               	goto	l7804
  5440                           
  5441                           ; BSR set to: 0
  5442  013E24  0E2F               	movlw	47
  5443  013E26  0100               	movlb	0	; () banked
  5444  013E28  6562               	cpfsgt	isdigit@c& (0+255),b
  5445  013E2A  D004               	goto	l7804
  5446                           
  5447                           ; BSR set to: 0
  5448  013E2C  0E01               	movlw	1
  5449  013E2E  0100               	movlb	0	; () banked
  5450  013E30  6F61               	movwf	_isdigit$5486& (0+255),b
  5451  013E32  D000               	goto	l7804
  5452  013E34                     l7804:
  5453                           
  5454                           ; BSR set to: 0
  5455  013E34  C061  F060         	movff	_isdigit$5486,??_isdigit
  5456  013E38  0100               	movlb	0	; () banked
  5457  013E3A  3160               	rrcf	??_isdigit& (0+255),w,b
  5458  013E3C  0012               	return	
  5459                           
  5460                           ; BSR set to: 0
  5461                           
  5462                           ; BSR set to: 0
  5463  013E3E  0012               	return		;funcret
  5464  013E40                     __end_of_isdigit:
  5465                           	opt stack 0
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           intcon	equ	0xFF2
  5473                           indf0	equ	0xFEF
  5474                           postinc0	equ	0xFEE
  5475                           fsr0h	equ	0xFEA
  5476                           fsr0l	equ	0xFE9
  5477                           wreg	equ	0xFE8
  5478                           postdec1	equ	0xFE5
  5479                           fsr1h	equ	0xFE2
  5480                           fsr1l	equ	0xFE1
  5481                           indf2	equ	0xFDF
  5482                           postinc2	equ	0xFDE
  5483                           postdec2	equ	0xFDD
  5484                           fsr2h	equ	0xFDA
  5485                           fsr2l	equ	0xFD9
  5486                           status	equ	0xFD8
  5487                           
  5488 ;; *************** function ___wmul *****************
  5489 ;; Defined at:
  5490 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5493 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  product         2    4[BANK0 ] unsigned int 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  2    0[BANK0 ] unsigned int 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0, prodl, prodh
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5508 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5509 ;;Total ram usage:        6 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:   11
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_sprintf
  5516 ;;		_atoi
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text12
  5521  013C70                     __ptext12:
  5522                           	opt stack 0
  5523  013C70                     ___wmul:
  5524                           	opt stack 13
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;incstack = 0
  5528  013C70  0100               	movlb	0	; () banked
  5529  013C72  5160               	movf	___wmul@multiplier& (0+255),w,b
  5530  013C74  0100               	movlb	0	; () banked
  5531  013C76  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5532  013C78  CFF3 F064          	movff	prodl,___wmul@product
  5533  013C7C  CFF4 F065          	movff	prodh,___wmul@product+1
  5534  013C80  0100               	movlb	0	; () banked
  5535  013C82  5160               	movf	___wmul@multiplier& (0+255),w,b
  5536  013C84  0100               	movlb	0	; () banked
  5537  013C86  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5538  013C88  50F3               	movf	prodl,w,c
  5539  013C8A  0100               	movlb	0	; () banked
  5540  013C8C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5541  013C8E  0100               	movlb	0	; () banked
  5542  013C90  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5543  013C92  0100               	movlb	0	; () banked
  5544  013C94  0362               	mulwf	___wmul@multiplicand& (0+255),b
  5545  013C96  50F3               	movf	prodl,w,c
  5546  013C98  0100               	movlb	0	; () banked
  5547  013C9A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  5548                           
  5549                           ; BSR set to: 0
  5550  013C9C  C064  F060         	movff	___wmul@product,?___wmul
  5551  013CA0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  5552  013CA4  0012               	return	
  5553                           
  5554                           ; BSR set to: 0
  5555                           
  5556                           ; BSR set to: 0
  5557  013CA6  0012               	return		;funcret
  5558  013CA8                     __end_of___wmul:
  5559                           	opt stack 0
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           indf0	equ	0xFEF
  5568                           postinc0	equ	0xFEE
  5569                           fsr0h	equ	0xFEA
  5570                           fsr0l	equ	0xFE9
  5571                           wreg	equ	0xFE8
  5572                           postdec1	equ	0xFE5
  5573                           fsr1h	equ	0xFE2
  5574                           fsr1l	equ	0xFE1
  5575                           indf2	equ	0xFDF
  5576                           postinc2	equ	0xFDE
  5577                           postdec2	equ	0xFDD
  5578                           fsr2h	equ	0xFDA
  5579                           fsr2l	equ	0xFD9
  5580                           status	equ	0xFD8
  5581                           
  5582 ;; *************** function _ringbuf_put_num *****************
  5583 ;; Defined at:
  5584 ;;		line 28 in file "../My_library/My_ringbuf.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  rb              2   15[BANK0 ] PTR struct ringbuf
  5587 ;;		 -> usb_tx(8), 
  5588 ;;  value           2   17[BANK0 ] const unsigned int 
  5589 ;;  digits          1   19[BANK0 ] unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  i               1   20[BANK0 ] unsigned char 
  5592 ;;  temp            2   21[BANK0 ] unsigned int 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;		None               void
  5595 ;; Registers used:
  5596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5602 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5605 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;Total ram usage:        8 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; Hardware stack levels required when called:   13
  5609 ;; This function calls:
  5610 ;;		___lwdiv
  5611 ;;		___lwmod
  5612 ;;		_ringbuf_put
  5613 ;; This function is called by:
  5614 ;;		_terminal_loop
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text13
  5619  0134D6                     __ptext13:
  5620                           	opt stack 0
  5621  0134D6                     _ringbuf_put_num:
  5622                           	opt stack 16
  5623                           
  5624                           ;My_ringbuf.c: 29: while (digits--) {
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;incstack = 0
  5628  0134D6  D03B               	goto	l8644
  5629  0134D8                     l854:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;My_ringbuf.c: 30: uint16_t temp = value;
  5633  0134D8  C071  F075         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
  5634  0134DC  C072  F076         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;My_ringbuf.c: 31: for (uint8_t i = 0; i < digits; i++) {
  5638  0134E0  0E00               	movlw	0
  5639  0134E2  0100               	movlb	0	; () banked
  5640  0134E4  6F74               	movwf	ringbuf_put_num@i& (0+255),b
  5641  0134E6  D012               	goto	l8638
  5642  0134E8                     l8634:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;My_ringbuf.c: 32: temp /= 10;
  5646  0134E8  C075  F060         	movff	ringbuf_put_num@temp,___lwdiv@dividend
  5647  0134EC  C076  F061         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
  5648  0134F0  0E00               	movlw	0
  5649  0134F2  0100               	movlb	0	; () banked
  5650  0134F4  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5651  0134F6  0E0A               	movlw	10
  5652  0134F8  6F62               	movwf	___lwdiv@divisor& (0+255),b
  5653  0134FA  ECAE  F09A         	call	___lwdiv	;wreg free
  5654  0134FE  C060  F075         	movff	?___lwdiv,ringbuf_put_num@temp
  5655  013502  C061  F076         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
  5656  013506  0100               	movlb	0	; () banked
  5657  013508  2B74               	incf	ringbuf_put_num@i& (0+255),f,b
  5658  01350A  D000               	goto	l8638
  5659  01350C                     l8638:
  5660                           
  5661                           ; BSR set to: 0
  5662  01350C  0100               	movlb	0	; () banked
  5663  01350E  5173               	movf	ringbuf_put_num@digits& (0+255),w,b
  5664  013510  0100               	movlb	0	; () banked
  5665  013512  5D74               	subwf	ringbuf_put_num@i& (0+255),w,b
  5666  013514  A0D8               	btfss	status,0,c
  5667  013516  D7E8               	goto	l8634
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;My_ringbuf.c: 33: }
  5671                           ;My_ringbuf.c: 34: temp %= 10;
  5672                           
  5673                           ; BSR set to: 0
  5674  013518  C075  F067         	movff	ringbuf_put_num@temp,___lwmod@dividend
  5675  01351C  C076  F068         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
  5676  013520  0E00               	movlw	0
  5677  013522  0100               	movlb	0	; () banked
  5678  013524  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
  5679  013526  0E0A               	movlw	10
  5680  013528  6F69               	movwf	___lwmod@divisor& (0+255),b
  5681  01352A  EC21  F09C         	call	___lwmod	;wreg free
  5682  01352E  C067  F075         	movff	?___lwmod,ringbuf_put_num@temp
  5683  013532  C068  F076         	movff	?___lwmod+1,ringbuf_put_num@temp+1
  5684                           
  5685                           ;My_ringbuf.c: 35: ringbuf_put(rb, temp + '0');
  5686  013536  C06F  F068         	movff	ringbuf_put_num@rb,ringbuf_put@rb
  5687  01353A  C070  F069         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
  5688  01353E  0100               	movlb	0	; () banked
  5689  013540  5175               	movf	ringbuf_put_num@temp& (0+255),w,b
  5690  013542  0F30               	addlw	48
  5691  013544  0100               	movlb	0	; () banked
  5692  013546  6F6A               	movwf	ringbuf_put@asciicode& (0+255),b
  5693  013548  EC82  F093         	call	_ringbuf_put	;wreg free
  5694  01354C  D000               	goto	l8644
  5695  01354E                     l8644:
  5696  01354E  0100               	movlb	0	; () banked
  5697  013550  0773               	decf	ringbuf_put_num@digits& (0+255),f,b
  5698  013552  0100               	movlb	0	; () banked
  5699  013554  2973               	incf	ringbuf_put_num@digits& (0+255),w,b
  5700  013556  A4D8               	btfss	status,2,c
  5701  013558  D7BF               	goto	l854
  5702                           
  5703                           ; BSR set to: 0
  5704                           
  5705                           ; BSR set to: 0
  5706  01355A  0012               	return		;funcret
  5707  01355C                     __end_of_ringbuf_put_num:
  5708                           	opt stack 0
  5709                           tblptru	equ	0xFF8
  5710                           tblptrh	equ	0xFF7
  5711                           tblptrl	equ	0xFF6
  5712                           tablat	equ	0xFF5
  5713                           prodh	equ	0xFF4
  5714                           prodl	equ	0xFF3
  5715                           intcon	equ	0xFF2
  5716                           indf0	equ	0xFEF
  5717                           postinc0	equ	0xFEE
  5718                           fsr0h	equ	0xFEA
  5719                           fsr0l	equ	0xFE9
  5720                           wreg	equ	0xFE8
  5721                           postdec1	equ	0xFE5
  5722                           fsr1h	equ	0xFE2
  5723                           fsr1l	equ	0xFE1
  5724                           indf2	equ	0xFDF
  5725                           postinc2	equ	0xFDE
  5726                           postdec2	equ	0xFDD
  5727                           fsr2h	equ	0xFDA
  5728                           fsr2l	equ	0xFD9
  5729                           status	equ	0xFD8
  5730                           
  5731 ;; *************** function ___lwmod *****************
  5732 ;; Defined at:
  5733 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  dividend        2    7[BANK0 ] unsigned int 
  5736 ;;  divisor         2    9[BANK0 ] unsigned int 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  counter         1   11[BANK0 ] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  2    7[BANK0 ] unsigned int 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5751 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;Total ram usage:        5 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:   11
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_ringbuf_put_num
  5759 ;;		_sprintf
  5760 ;;		_tx_sendn
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text14
  5765  013842                     __ptext14:
  5766                           	opt stack 0
  5767  013842                     ___lwmod:
  5768                           	opt stack 13
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;incstack = 0
  5772  013842  0100               	movlb	0	; () banked
  5773  013844  5169               	movf	___lwmod@divisor& (0+255),w,b
  5774  013846  0100               	movlb	0	; () banked
  5775  013848  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5776  01384A  B4D8               	btfsc	status,2,c
  5777  01384C  D02B               	goto	l1970
  5778                           
  5779                           ; BSR set to: 0
  5780  01384E  0E01               	movlw	1
  5781  013850  0100               	movlb	0	; () banked
  5782  013852  6F6B               	movwf	___lwmod@counter& (0+255),b
  5783  013854  D007               	goto	l7842
  5784  013856                     l7840:
  5785                           
  5786                           ; BSR set to: 0
  5787  013856  0100               	movlb	0	; () banked
  5788  013858  90D8               	bcf	status,0,c
  5789  01385A  3769               	rlcf	___lwmod@divisor& (0+255),f,b
  5790  01385C  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5791  01385E  0100               	movlb	0	; () banked
  5792  013860  2B6B               	incf	___lwmod@counter& (0+255),f,b
  5793  013862  D000               	goto	l7842
  5794  013864                     l7842:
  5795                           
  5796                           ; BSR set to: 0
  5797  013864  0100               	movlb	0	; () banked
  5798  013866  BF6A               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  5799  013868  D002               	goto	l7844
  5800  01386A  D7F5               	goto	l7840
  5801                           
  5802                           ; BSR set to: 0
  5803  01386C  D000               	goto	l7844
  5804  01386E                     l7844:
  5805                           
  5806                           ; BSR set to: 0
  5807  01386E  0100               	movlb	0	; () banked
  5808  013870  5169               	movf	___lwmod@divisor& (0+255),w,b
  5809  013872  0100               	movlb	0	; () banked
  5810  013874  5D67               	subwf	___lwmod@dividend& (0+255),w,b
  5811  013876  0100               	movlb	0	; () banked
  5812  013878  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5813  01387A  0100               	movlb	0	; () banked
  5814  01387C  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5815  01387E  A0D8               	btfss	status,0,c
  5816  013880  D009               	goto	l7848
  5817                           
  5818                           ; BSR set to: 0
  5819  013882  0100               	movlb	0	; () banked
  5820  013884  5169               	movf	___lwmod@divisor& (0+255),w,b
  5821  013886  0100               	movlb	0	; () banked
  5822  013888  5F67               	subwf	___lwmod@dividend& (0+255),f,b
  5823  01388A  0100               	movlb	0	; () banked
  5824  01388C  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5825  01388E  0100               	movlb	0	; () banked
  5826  013890  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5827  013892  D000               	goto	l7848
  5828  013894                     l7848:
  5829                           
  5830                           ; BSR set to: 0
  5831  013894  0100               	movlb	0	; () banked
  5832  013896  90D8               	bcf	status,0,c
  5833  013898  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5834  01389A  3369               	rrcf	___lwmod@divisor& (0+255),f,b
  5835                           
  5836                           ; BSR set to: 0
  5837  01389C  0100               	movlb	0	; () banked
  5838  01389E  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
  5839  0138A0  D7E6               	goto	l7844
  5840  0138A2  D000               	goto	l1970
  5841  0138A4                     l1970:
  5842                           
  5843                           ; BSR set to: 0
  5844  0138A4  C067  F067         	movff	___lwmod@dividend,?___lwmod
  5845  0138A8  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
  5846                           
  5847                           ; BSR set to: 0
  5848  0138AC  0012               	return		;funcret
  5849  0138AE                     __end_of___lwmod:
  5850                           	opt stack 0
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           intcon	equ	0xFF2
  5858                           indf0	equ	0xFEF
  5859                           postinc0	equ	0xFEE
  5860                           fsr0h	equ	0xFEA
  5861                           fsr0l	equ	0xFE9
  5862                           wreg	equ	0xFE8
  5863                           postdec1	equ	0xFE5
  5864                           fsr1h	equ	0xFE2
  5865                           fsr1l	equ	0xFE1
  5866                           indf2	equ	0xFDF
  5867                           postinc2	equ	0xFDE
  5868                           postdec2	equ	0xFDD
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873 ;; *************** function ___lwdiv *****************
  5874 ;; Defined at:
  5875 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  dividend        2    0[BANK0 ] unsigned int 
  5878 ;;  divisor         2    2[BANK0 ] unsigned int 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  quotient        2    5[BANK0 ] unsigned int 
  5881 ;;  counter         1    4[BANK0 ] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  2    0[BANK0 ] unsigned int 
  5884 ;; Registers used:
  5885 ;;		wreg, status,2, status,0
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5892 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;Total ram usage:        7 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:   11
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_ringbuf_put_num
  5902 ;;		_sprintf
  5903 ;;		_tx_sendn
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text15
  5908  01355C                     __ptext15:
  5909                           	opt stack 0
  5910  01355C                     ___lwdiv:
  5911                           	opt stack 13
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;incstack = 0
  5915  01355C  0E00               	movlw	0
  5916  01355E  0100               	movlb	0	; () banked
  5917  013560  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5918  013562  0E00               	movlw	0
  5919  013564  6F65               	movwf	___lwdiv@quotient& (0+255),b
  5920                           
  5921                           ; BSR set to: 0
  5922  013566  0100               	movlb	0	; () banked
  5923  013568  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5924  01356A  0100               	movlb	0	; () banked
  5925  01356C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5926  01356E  B4D8               	btfsc	status,2,c
  5927  013570  D031               	goto	l1960
  5928                           
  5929                           ; BSR set to: 0
  5930  013572  0E01               	movlw	1
  5931  013574  0100               	movlb	0	; () banked
  5932  013576  6F64               	movwf	___lwdiv@counter& (0+255),b
  5933  013578  D007               	goto	l7822
  5934  01357A                     l7820:
  5935                           
  5936                           ; BSR set to: 0
  5937  01357A  0100               	movlb	0	; () banked
  5938  01357C  90D8               	bcf	status,0,c
  5939  01357E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  5940  013580  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5941  013582  0100               	movlb	0	; () banked
  5942  013584  2B64               	incf	___lwdiv@counter& (0+255),f,b
  5943  013586  D000               	goto	l7822
  5944  013588                     l7822:
  5945                           
  5946                           ; BSR set to: 0
  5947  013588  0100               	movlb	0	; () banked
  5948  01358A  BF63               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  5949  01358C  D002               	goto	l7824
  5950  01358E  D7F5               	goto	l7820
  5951                           
  5952                           ; BSR set to: 0
  5953  013590  D000               	goto	l7824
  5954  013592                     l7824:
  5955                           
  5956                           ; BSR set to: 0
  5957  013592  0100               	movlb	0	; () banked
  5958  013594  90D8               	bcf	status,0,c
  5959  013596  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  5960  013598  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5961                           
  5962                           ; BSR set to: 0
  5963  01359A  0100               	movlb	0	; () banked
  5964  01359C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5965  01359E  0100               	movlb	0	; () banked
  5966  0135A0  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  5967  0135A2  0100               	movlb	0	; () banked
  5968  0135A4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5969  0135A6  0100               	movlb	0	; () banked
  5970  0135A8  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5971  0135AA  A0D8               	btfss	status,0,c
  5972  0135AC  D00B               	goto	l7832
  5973                           
  5974                           ; BSR set to: 0
  5975  0135AE  0100               	movlb	0	; () banked
  5976  0135B0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  5977  0135B2  0100               	movlb	0	; () banked
  5978  0135B4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  5979  0135B6  0100               	movlb	0	; () banked
  5980  0135B8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5981  0135BA  0100               	movlb	0	; () banked
  5982  0135BC  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5983                           
  5984                           ; BSR set to: 0
  5985  0135BE  0100               	movlb	0	; () banked
  5986  0135C0  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  5987  0135C2  D000               	goto	l7832
  5988  0135C4                     l7832:
  5989                           
  5990                           ; BSR set to: 0
  5991  0135C4  0100               	movlb	0	; () banked
  5992  0135C6  90D8               	bcf	status,0,c
  5993  0135C8  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5994  0135CA  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  5995                           
  5996                           ; BSR set to: 0
  5997  0135CC  0100               	movlb	0	; () banked
  5998  0135CE  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  5999  0135D0  D7E0               	goto	l7824
  6000  0135D2  D000               	goto	l1960
  6001  0135D4                     l1960:
  6002                           
  6003                           ; BSR set to: 0
  6004  0135D4  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  6005  0135D8  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6006                           
  6007                           ; BSR set to: 0
  6008  0135DC  0012               	return		;funcret
  6009  0135DE                     __end_of___lwdiv:
  6010                           	opt stack 0
  6011                           tblptru	equ	0xFF8
  6012                           tblptrh	equ	0xFF7
  6013                           tblptrl	equ	0xFF6
  6014                           tablat	equ	0xFF5
  6015                           prodh	equ	0xFF4
  6016                           prodl	equ	0xFF3
  6017                           intcon	equ	0xFF2
  6018                           indf0	equ	0xFEF
  6019                           postinc0	equ	0xFEE
  6020                           fsr0h	equ	0xFEA
  6021                           fsr0l	equ	0xFE9
  6022                           wreg	equ	0xFE8
  6023                           postdec1	equ	0xFE5
  6024                           fsr1h	equ	0xFE2
  6025                           fsr1l	equ	0xFE1
  6026                           indf2	equ	0xFDF
  6027                           postinc2	equ	0xFDE
  6028                           postdec2	equ	0xFDD
  6029                           fsr2h	equ	0xFDA
  6030                           fsr2l	equ	0xFD9
  6031                           status	equ	0xFD8
  6032                           
  6033 ;; *************** function _ringbuf_delete *****************
  6034 ;; Defined at:
  6035 ;;		line 66 in file "../My_library/My_ringbuf.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  6038 ;;		 -> terminal_loop@command(8), 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;		None               void
  6043 ;; Registers used:
  6044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;Total ram usage:        2 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:   11
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_terminal_loop
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text16
  6065  013F40                     __ptext16:
  6066                           	opt stack 0
  6067  013F40                     _ringbuf_delete:
  6068                           	opt stack 18
  6069                           
  6070                           ;My_ringbuf.c: 67: rb->head = rb->tail;
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;incstack = 0
  6074  013F40  0100               	movlb	0	; () banked
  6075  013F42  EE20 F006          	lfsr	2,6
  6076  013F46  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6077  013F48  26D9               	addwf	fsr2l,f,c
  6078  013F4A  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6079  013F4C  22DA               	addwfc	fsr2h,f,c
  6080  013F4E  0100               	movlb	0	; () banked
  6081  013F50  EE10 F004          	lfsr	1,4
  6082  013F54  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  6083  013F56  26E1               	addwf	fsr1l,f,c
  6084  013F58  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  6085  013F5A  22E2               	addwfc	fsr1h,f,c
  6086  013F5C  CFDE FFE6          	movff	postinc2,postinc1
  6087  013F60  CFDD FFE5          	movff	postdec2,postdec1
  6088                           
  6089                           ; BSR set to: 0
  6090  013F64  0012               	return		;funcret
  6091  013F66                     __end_of_ringbuf_delete:
  6092                           	opt stack 0
  6093                           tblptru	equ	0xFF8
  6094                           tblptrh	equ	0xFF7
  6095                           tblptrl	equ	0xFF6
  6096                           tablat	equ	0xFF5
  6097                           prodh	equ	0xFF4
  6098                           prodl	equ	0xFF3
  6099                           intcon	equ	0xFF2
  6100                           indf0	equ	0xFEF
  6101                           postinc0	equ	0xFEE
  6102                           fsr0h	equ	0xFEA
  6103                           fsr0l	equ	0xFE9
  6104                           wreg	equ	0xFE8
  6105                           postinc1	equ	0xFE6
  6106                           postdec1	equ	0xFE5
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           indf2	equ	0xFDF
  6110                           postinc2	equ	0xFDE
  6111                           postdec2	equ	0xFDD
  6112                           fsr2h	equ	0xFDA
  6113                           fsr2l	equ	0xFD9
  6114                           status	equ	0xFD8
  6115                           
  6116 ;; *************** function _ringbuf_backspace *****************
  6117 ;; Defined at:
  6118 ;;		line 59 in file "../My_library/My_ringbuf.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  6121 ;;		 -> terminal_loop@command(8), 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;		None               void
  6126 ;; Registers used:
  6127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;Total ram usage:        6 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:   12
  6140 ;; This function calls:
  6141 ;;		_ringbuf_num
  6142 ;; This function is called by:
  6143 ;;		_terminal_loop
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text17
  6148  01329E                     __ptext17:
  6149                           	opt stack 0
  6150  01329E                     _ringbuf_backspace:
  6151                           	opt stack 17
  6152                           
  6153                           ;My_ringbuf.c: 60: if (ringbuf_num(rb)) {
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;incstack = 0
  6157  01329E  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  6158  0132A2  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  6159  0132A6  EC03  F090         	call	_ringbuf_num	;wreg free
  6160  0132AA  0100               	movlb	0	; () banked
  6161  0132AC  5160               	movf	?_ringbuf_num& (0+255),w,b
  6162  0132AE  0100               	movlb	0	; () banked
  6163  0132B0  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  6164  0132B2  B4D8               	btfsc	status,2,c
  6165  0132B4  0012               	return	
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;My_ringbuf.c: 61: if (rb->head) rb->head--;
  6169  0132B6  0100               	movlb	0	; () banked
  6170  0132B8  EE20 F004          	lfsr	2,4
  6171  0132BC  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6172  0132BE  26D9               	addwf	fsr2l,f,c
  6173  0132C0  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6174  0132C2  22DA               	addwfc	fsr2h,f,c
  6175  0132C4  50DE               	movf	postinc2,w,c
  6176  0132C6  10DE               	iorwf	postinc2,w,c
  6177  0132C8  B4D8               	btfsc	status,2,c
  6178  0132CA  D00B               	goto	l8652
  6179                           
  6180                           ; BSR set to: 0
  6181  0132CC  0100               	movlb	0	; () banked
  6182  0132CE  EE20 F004          	lfsr	2,4
  6183  0132D2  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6184  0132D4  26D9               	addwf	fsr2l,f,c
  6185  0132D6  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6186  0132D8  22DA               	addwfc	fsr2h,f,c
  6187  0132DA  06DE               	decf	postinc2,f,c
  6188  0132DC  0E00               	movlw	0
  6189  0132DE  5ADD               	subwfb	postdec2,f,c
  6190  0132E0  0012               	return	
  6191  0132E2                     l8652:
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;My_ringbuf.c: 62: else rb->head = rb->size - 1;
  6195  0132E2  0EFF               	movlw	255
  6196  0132E4  0100               	movlb	0	; () banked
  6197  0132E6  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  6198  0132E8  0EFF               	movlw	255
  6199  0132EA  0100               	movlb	0	; () banked
  6200  0132EC  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  6201  0132EE  0100               	movlb	0	; () banked
  6202  0132F0  EE20 F002          	lfsr	2,2
  6203  0132F4  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6204  0132F6  26D9               	addwf	fsr2l,f,c
  6205  0132F8  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6206  0132FA  22DA               	addwfc	fsr2h,f,c
  6207  0132FC  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  6208  013300  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  6209  013304  0100               	movlb	0	; () banked
  6210  013306  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  6211  013308  0100               	movlb	0	; () banked
  6212  01330A  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  6213  01330C  0100               	movlb	0	; () banked
  6214  01330E  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  6215  013310  0100               	movlb	0	; () banked
  6216  013312  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  6217  013314  0100               	movlb	0	; () banked
  6218  013316  EE20 F004          	lfsr	2,4
  6219  01331A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  6220  01331C  26D9               	addwf	fsr2l,f,c
  6221  01331E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  6222  013320  22DA               	addwfc	fsr2h,f,c
  6223  013322  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  6224  013326  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  6225                           
  6226                           ; BSR set to: 0
  6227  01332A  0012               	return	
  6228                           
  6229                           ; BSR set to: 0
  6230                           
  6231                           ; BSR set to: 0
  6232  01332C  0012               	return		;funcret
  6233  01332E                     __end_of_ringbuf_backspace:
  6234                           	opt stack 0
  6235                           tblptru	equ	0xFF8
  6236                           tblptrh	equ	0xFF7
  6237                           tblptrl	equ	0xFF6
  6238                           tablat	equ	0xFF5
  6239                           prodh	equ	0xFF4
  6240                           prodl	equ	0xFF3
  6241                           intcon	equ	0xFF2
  6242                           indf0	equ	0xFEF
  6243                           postinc0	equ	0xFEE
  6244                           fsr0h	equ	0xFEA
  6245                           fsr0l	equ	0xFE9
  6246                           wreg	equ	0xFE8
  6247                           postinc1	equ	0xFE6
  6248                           postdec1	equ	0xFE5
  6249                           fsr1h	equ	0xFE2
  6250                           fsr1l	equ	0xFE1
  6251                           indf2	equ	0xFDF
  6252                           postinc2	equ	0xFDE
  6253                           postdec2	equ	0xFDD
  6254                           fsr2h	equ	0xFDA
  6255                           fsr2l	equ	0xFD9
  6256                           status	equ	0xFD8
  6257                           
  6258 ;; *************** function _software_init *****************
  6259 ;; Defined at:
  6260 ;;		line 96 in file "PIC18F27J53-test01.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;		None               void
  6267 ;; Registers used:
  6268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:   15
  6281 ;; This function calls:
  6282 ;;		_I2C_LCD_Clear
  6283 ;;		_I2C_LCD_Puts
  6284 ;;		_I2C_LCD_SetCursor
  6285 ;;		_RTCC_from_RTCC
  6286 ;;		_RTCC_from_epoch
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text18
  6293  0136E0                     __ptext18:
  6294                           	opt stack 0
  6295  0136E0                     _software_init:
  6296                           	opt stack 15
  6297                           
  6298                           ;PIC18F27J53-test01.c: 98: RTCC_from_RTCC(&now);
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;incstack = 0
  6302  0136E0  0E46               	movlw	low _now
  6303  0136E2  0100               	movlb	0	; () banked
  6304  0136E4  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
  6305  0136E6  0E01               	movlw	high _now
  6306  0136E8  0100               	movlb	0	; () banked
  6307  0136EA  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
  6308  0136EC  EC1D  F0A0         	call	_RTCC_from_RTCC	;wreg free
  6309                           
  6310                           ;PIC18F27J53-test01.c: 99: if (now.DD == 0) {
  6311  0136F0  0101               	movlb	1	; () banked
  6312  0136F2  514E               	movf	(_now+8)& (0+255),w,b
  6313  0136F4  A4D8               	btfss	status,2,c
  6314  0136F6  D012               	goto	l8948
  6315                           
  6316                           ; BSR set to: 1
  6317                           ;PIC18F27J53-test01.c: 100: now.epoch = 0;
  6318  0136F8  0E00               	movlw	0
  6319  0136FA  0101               	movlb	1	; () banked
  6320  0136FC  6F46               	movwf	_now& (0+255),b
  6321  0136FE  0E00               	movlw	0
  6322  013700  6F47               	movwf	(_now+1)& (0+255),b
  6323  013702  0E00               	movlw	0
  6324  013704  6F48               	movwf	(_now+2)& (0+255),b
  6325  013706  0E00               	movlw	0
  6326  013708  6F49               	movwf	(_now+3)& (0+255),b
  6327                           
  6328                           ; BSR set to: 1
  6329                           ;PIC18F27J53-test01.c: 101: RTCC_from_epoch(&now);
  6330  01370A  0E46               	movlw	low _now
  6331  01370C  0100               	movlb	0	; () banked
  6332  01370E  6F8F               	movwf	RTCC_from_epoch@tm& (0+255),b
  6333  013710  0E01               	movlw	high _now
  6334  013712  0100               	movlb	0	; () banked
  6335  013714  6F90               	movwf	(RTCC_from_epoch@tm+1)& (0+255),b
  6336  013716  EC03  F0A0         	call	_RTCC_from_epoch	;wreg free
  6337  01371A  D000               	goto	l8948
  6338  01371C                     l8948:
  6339                           
  6340                           ;PIC18F27J53-test01.c: 102: }
  6341                           ;PIC18F27J53-test01.c: 104: I2C_LCD_Clear();
  6342  01371C  EC10  F0A0         	call	_I2C_LCD_Clear	;wreg free
  6343                           
  6344                           ;PIC18F27J53-test01.c: 105: I2C_LCD_SetCursor(0, 0);
  6345  013720  0E00               	movlw	0
  6346  013722  0100               	movlb	0	; () banked
  6347  013724  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6348  013726  0E00               	movlw	0
  6349  013728  EC37  F09F         	call	_I2C_LCD_SetCursor
  6350                           
  6351                           ;PIC18F27J53-test01.c: 106: I2C_LCD_Puts("18F27J53");
  6352  01372C  0E6D               	movlw	low (STR_45+3)
  6353  01372E  0100               	movlb	0	; () banked
  6354  013730  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6355  013732  0EFF               	movlw	high (STR_45+3)
  6356  013734  0100               	movlb	0	; () banked
  6357  013736  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6358  013738  EC05  F099         	call	_I2C_LCD_Puts	;wreg free
  6359                           
  6360                           ;PIC18F27J53-test01.c: 107: I2C_LCD_SetCursor(0, 1);
  6361  01373C  0E01               	movlw	1
  6362  01373E  0100               	movlb	0	; () banked
  6363  013740  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6364  013742  0E00               	movlw	0
  6365  013744  EC37  F09F         	call	_I2C_LCD_SetCursor
  6366                           
  6367                           ;PIC18F27J53-test01.c: 108: I2C_LCD_Puts("USB UART");
  6368  013748  0E96               	movlw	low STR_49
  6369  01374A  0100               	movlb	0	; () banked
  6370  01374C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6371  01374E  0EFF               	movlw	high STR_49
  6372  013750  0100               	movlb	0	; () banked
  6373  013752  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6374  013754  EC05  F099         	call	_I2C_LCD_Puts	;wreg free
  6375  013758  0012               	return		;funcret
  6376  01375A                     __end_of_software_init:
  6377                           	opt stack 0
  6378                           tblptru	equ	0xFF8
  6379                           tblptrh	equ	0xFF7
  6380                           tblptrl	equ	0xFF6
  6381                           tablat	equ	0xFF5
  6382                           prodh	equ	0xFF4
  6383                           prodl	equ	0xFF3
  6384                           intcon	equ	0xFF2
  6385                           indf0	equ	0xFEF
  6386                           postinc0	equ	0xFEE
  6387                           fsr0h	equ	0xFEA
  6388                           fsr0l	equ	0xFE9
  6389                           wreg	equ	0xFE8
  6390                           postinc1	equ	0xFE6
  6391                           postdec1	equ	0xFE5
  6392                           fsr1h	equ	0xFE2
  6393                           fsr1l	equ	0xFE1
  6394                           indf2	equ	0xFDF
  6395                           postinc2	equ	0xFDE
  6396                           postdec2	equ	0xFDD
  6397                           fsr2h	equ	0xFDA
  6398                           fsr2l	equ	0xFD9
  6399                           status	equ	0xFD8
  6400                           
  6401 ;; *************** function _RTCC_from_epoch *****************
  6402 ;; Defined at:
  6403 ;;		line 204 in file "../My_library/My_RTCC.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  tm              2   47[BANK0 ] PTR struct .
  6406 ;;		 -> now(14), 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;		None               void
  6411 ;; Registers used:
  6412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;Total ram usage:        2 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:   14
  6425 ;; This function calls:
  6426 ;;		_caltime_to_RTCC
  6427 ;;		_epoch_to_caltime
  6428 ;; This function is called by:
  6429 ;;		_software_init
  6430 ;;		_RTCC_adjust_time_inc
  6431 ;;		_RTCC_adjust_time_dec
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text19
  6436  014006                     __ptext19:
  6437                           	opt stack 0
  6438  014006                     _RTCC_from_epoch:
  6439                           	opt stack 15
  6440                           
  6441                           ;My_RTCC.c: 205: epoch_to_caltime(tm);
  6442                           
  6443                           ;incstack = 0
  6444  014006  C08F  F081         	movff	RTCC_from_epoch@tm,epoch_to_caltime@tm
  6445  01400A  C090  F082         	movff	RTCC_from_epoch@tm+1,epoch_to_caltime@tm+1
  6446  01400E  EC84  F088         	call	_epoch_to_caltime	;wreg free
  6447                           
  6448                           ;My_RTCC.c: 206: caltime_to_RTCC(tm);
  6449  014012  C08F  F069         	movff	RTCC_from_epoch@tm,caltime_to_RTCC@tm
  6450  014016  C090  F06A         	movff	RTCC_from_epoch@tm+1,caltime_to_RTCC@tm+1
  6451  01401A  ECAB  F092         	call	_caltime_to_RTCC	;wreg free
  6452  01401E  0012               	return		;funcret
  6453  014020                     __end_of_RTCC_from_epoch:
  6454                           	opt stack 0
  6455                           tblptru	equ	0xFF8
  6456                           tblptrh	equ	0xFF7
  6457                           tblptrl	equ	0xFF6
  6458                           tablat	equ	0xFF5
  6459                           prodh	equ	0xFF4
  6460                           prodl	equ	0xFF3
  6461                           intcon	equ	0xFF2
  6462                           indf0	equ	0xFEF
  6463                           postinc0	equ	0xFEE
  6464                           fsr0h	equ	0xFEA
  6465                           fsr0l	equ	0xFE9
  6466                           wreg	equ	0xFE8
  6467                           postinc1	equ	0xFE6
  6468                           postdec1	equ	0xFE5
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _epoch_to_caltime *****************
  6479 ;; Defined at:
  6480 ;;		line 119 in file "../My_library/My_RTCC.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  tm              2   33[BANK0 ] PTR struct .
  6483 ;;		 -> now(14), 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  num             4   43[BANK0 ] unsigned long 
  6486 ;;  day             2   39[BANK0 ] unsigned int 
  6487 ;;  day_since_ep    2   37[BANK0 ] unsigned int 
  6488 ;;  month           1   42[BANK0 ] unsigned char 
  6489 ;;  year            1   41[BANK0 ] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;		None               void
  6492 ;; Registers used:
  6493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6499 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6501 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6502 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;Total ram usage:       14 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:   13
  6506 ;; This function calls:
  6507 ;;		_get_quot_rem
  6508 ;;		_month_length
  6509 ;; This function is called by:
  6510 ;;		_RTCC_from_caltime
  6511 ;;		_RTCC_from_epoch
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text20
  6516  011108                     __ptext20:
  6517                           	opt stack 0
  6518  011108                     _epoch_to_caltime:
  6519                           	opt stack 12
  6520                           
  6521                           ;My_RTCC.c: 122: static uint16_t day_cache = 0;
  6522                           ;My_RTCC.c: 123: static uint8_t month_cache = 1;
  6523                           ;My_RTCC.c: 124: static uint8_t year_cache = 0;
  6524                           ;My_RTCC.c: 125: uint16_t day_since_epoch;
  6525                           ;My_RTCC.c: 126: uint16_t day;
  6526                           ;My_RTCC.c: 127: uint8_t year = 0;
  6527                           
  6528                           ;incstack = 0
  6529  011108  0E00               	movlw	0
  6530  01110A  0100               	movlb	0	; () banked
  6531  01110C  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  6532                           
  6533                           ;My_RTCC.c: 128: uint8_t month = 1;
  6534  01110E  0E01               	movlw	1
  6535  011110  0100               	movlb	0	; () banked
  6536  011112  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;My_RTCC.c: 129: epoch_t num;
  6540                           ;My_RTCC.c: 131: num = tm->epoch;
  6541  011114  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  6542  011118  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  6543  01111C  CFDE F08B          	movff	postinc2,epoch_to_caltime@num
  6544  011120  CFDE F08C          	movff	postinc2,epoch_to_caltime@num+1
  6545  011124  CFDE F08D          	movff	postinc2,epoch_to_caltime@num+2
  6546  011128  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+3
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;My_RTCC.c: 132: tm->ss = get_quot_rem(&num, 60);
  6550  01112C  0E8B               	movlw	low epoch_to_caltime@num
  6551  01112E  0100               	movlb	0	; () banked
  6552  011130  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6553  011132  0E00               	movlw	high epoch_to_caltime@num
  6554  011134  0100               	movlb	0	; () banked
  6555  011136  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6556  011138  0E3C               	movlw	60
  6557  01113A  0100               	movlb	0	; () banked
  6558  01113C  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6559  01113E  EC17  F093         	call	_get_quot_rem	;wreg free
  6560  011142  0100               	movlb	0	; () banked
  6561  011144  EE20 F004          	lfsr	2,4
  6562  011148  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6563  01114A  26D9               	addwf	fsr2l,f,c
  6564  01114C  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6565  01114E  22DA               	addwfc	fsr2h,f,c
  6566  011150  0100               	movlb	0	; () banked
  6567  011152  C079  FFDF         	movff	?_get_quot_rem,indf2
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;My_RTCC.c: 133: tm->mm = get_quot_rem(&num, 60);
  6571  011156  0E8B               	movlw	low epoch_to_caltime@num
  6572  011158  0100               	movlb	0	; () banked
  6573  01115A  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6574  01115C  0E00               	movlw	high epoch_to_caltime@num
  6575  01115E  0100               	movlb	0	; () banked
  6576  011160  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6577  011162  0E3C               	movlw	60
  6578  011164  0100               	movlb	0	; () banked
  6579  011166  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6580  011168  EC17  F093         	call	_get_quot_rem	;wreg free
  6581  01116C  0100               	movlb	0	; () banked
  6582  01116E  EE20 F005          	lfsr	2,5
  6583  011172  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6584  011174  26D9               	addwf	fsr2l,f,c
  6585  011176  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6586  011178  22DA               	addwfc	fsr2h,f,c
  6587  01117A  0100               	movlb	0	; () banked
  6588  01117C  C079  FFDF         	movff	?_get_quot_rem,indf2
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;My_RTCC.c: 134: tm->hh = get_quot_rem(&num, 24);
  6592  011180  0E8B               	movlw	low epoch_to_caltime@num
  6593  011182  0100               	movlb	0	; () banked
  6594  011184  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6595  011186  0E00               	movlw	high epoch_to_caltime@num
  6596  011188  0100               	movlb	0	; () banked
  6597  01118A  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6598  01118C  0E18               	movlw	24
  6599  01118E  0100               	movlb	0	; () banked
  6600  011190  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6601  011192  EC17  F093         	call	_get_quot_rem	;wreg free
  6602  011196  0100               	movlb	0	; () banked
  6603  011198  EE20 F006          	lfsr	2,6
  6604  01119C  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6605  01119E  26D9               	addwf	fsr2l,f,c
  6606  0111A0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6607  0111A2  22DA               	addwfc	fsr2h,f,c
  6608  0111A4  0100               	movlb	0	; () banked
  6609  0111A6  C079  FFDF         	movff	?_get_quot_rem,indf2
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;My_RTCC.c: 135: day = num;
  6613  0111AA  C08B  F087         	movff	epoch_to_caltime@num,epoch_to_caltime@day
  6614  0111AE  C08C  F088         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;My_RTCC.c: 136: day_since_epoch = day;
  6618  0111B2  C087  F085         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
  6619  0111B6  C088  F086         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;My_RTCC.c: 138: num += 6;
  6623  0111BA  0E06               	movlw	6
  6624  0111BC  0100               	movlb	0	; () banked
  6625  0111BE  278B               	addwf	epoch_to_caltime@num& (0+255),f,b
  6626  0111C0  0E00               	movlw	0
  6627  0111C2  238C               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
  6628  0111C4  238D               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
  6629  0111C6  238E               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;My_RTCC.c: 139: tm->EE = get_quot_rem(&num, 7);
  6633  0111C8  0E8B               	movlw	low epoch_to_caltime@num
  6634  0111CA  0100               	movlb	0	; () banked
  6635  0111CC  6F79               	movwf	get_quot_rem@quot& (0+255),b
  6636  0111CE  0E00               	movlw	high epoch_to_caltime@num
  6637  0111D0  0100               	movlb	0	; () banked
  6638  0111D2  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
  6639  0111D4  0E07               	movlw	7
  6640  0111D6  0100               	movlb	0	; () banked
  6641  0111D8  6F7B               	movwf	get_quot_rem@div& (0+255),b
  6642  0111DA  EC17  F093         	call	_get_quot_rem	;wreg free
  6643  0111DE  0100               	movlb	0	; () banked
  6644  0111E0  EE20 F007          	lfsr	2,7
  6645  0111E4  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6646  0111E6  26D9               	addwf	fsr2l,f,c
  6647  0111E8  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6648  0111EA  22DA               	addwfc	fsr2h,f,c
  6649  0111EC  0100               	movlb	0	; () banked
  6650  0111EE  C079  FFDF         	movff	?_get_quot_rem,indf2
  6651                           
  6652                           ;My_RTCC.c: 148: while (day >= month_length(year, month)) {
  6653  0111F2  D041               	goto	l7932
  6654  0111F4                     l949:
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;My_RTCC.c: 149: LATB2 = 1;
  6658  0111F4  848A               	bsf	3978,2,c	;volatile
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;My_RTCC.c: 150: day = day - month_length(year, month);
  6662  0111F6  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  6663  0111FA  0100               	movlb	0	; () banked
  6664  0111FC  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  6665  0111FE  EC5D  F091         	call	_month_length
  6666  011202  0100               	movlb	0	; () banked
  6667  011204  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  6668  011206  6B84               	clrf	(??_epoch_to_caltime+1)& (0+255),b
  6669  011208  0100               	movlb	0	; () banked
  6670  01120A  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  6671  01120C  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  6672  01120E  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  6673  011210  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  6674  011212  0100               	movlb	0	; () banked
  6675  011214  5187               	movf	epoch_to_caltime@day& (0+255),w,b
  6676  011216  0100               	movlb	0	; () banked
  6677  011218  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  6678  01121A  0100               	movlb	0	; () banked
  6679  01121C  6F87               	movwf	epoch_to_caltime@day& (0+255),b
  6680  01121E  0100               	movlb	0	; () banked
  6681  011220  5188               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
  6682  011222  0100               	movlb	0	; () banked
  6683  011224  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  6684  011226  0100               	movlb	0	; () banked
  6685  011228  6F88               	movwf	(epoch_to_caltime@day+1)& (0+255),b
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;My_RTCC.c: 151: if (month == 12) {
  6689  01122A  0E0C               	movlw	12
  6690  01122C  0100               	movlb	0	; () banked
  6691  01122E  198A               	xorwf	epoch_to_caltime@month& (0+255),w,b
  6692  011230  A4D8               	btfss	status,2,c
  6693  011232  D019               	goto	l7926
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;My_RTCC.c: 152: month = 1;
  6697  011234  0E01               	movlw	1
  6698  011236  0100               	movlb	0	; () banked
  6699  011238  6F8A               	movwf	epoch_to_caltime@month& (0+255),b
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;My_RTCC.c: 153: year++;
  6703  01123A  0100               	movlb	0	; () banked
  6704  01123C  2B89               	incf	epoch_to_caltime@year& (0+255),f,b
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;My_RTCC.c: 155: if (year >= 100) {
  6708  01123E  0E63               	movlw	99
  6709  011240  0100               	movlb	0	; () banked
  6710  011242  6589               	cpfsgt	epoch_to_caltime@year& (0+255),b
  6711  011244  D013               	goto	l7928
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;My_RTCC.c: 156: tm->epoch -= 3155760000;
  6715  011246  C081  FFD9         	movff	epoch_to_caltime@tm,fsr2l
  6716  01124A  C082  FFDA         	movff	epoch_to_caltime@tm+1,fsr2h
  6717  01124E  0E80               	movlw	128
  6718  011250  5EDE               	subwf	postinc2,f,c
  6719  011252  0E13               	movlw	19
  6720  011254  5ADE               	subwfb	postinc2,f,c
  6721  011256  0E19               	movlw	25
  6722  011258  5ADE               	subwfb	postinc2,f,c
  6723  01125A  0EBC               	movlw	188
  6724  01125C  5ADE               	subwfb	postinc2,f,c
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;My_RTCC.c: 157: year = 0;
  6728  01125E  0E00               	movlw	0
  6729  011260  0100               	movlb	0	; () banked
  6730  011262  6F89               	movwf	epoch_to_caltime@year& (0+255),b
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;My_RTCC.c: 158: }
  6734                           ;My_RTCC.c: 159: } else {
  6735  011264  D003               	goto	l7928
  6736  011266                     l7926:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;My_RTCC.c: 160: month++;
  6740  011266  0100               	movlb	0	; () banked
  6741  011268  2B8A               	incf	epoch_to_caltime@month& (0+255),f,b
  6742  01126A  D000               	goto	l7928
  6743  01126C                     l7928:
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;My_RTCC.c: 161: }
  6747                           ;My_RTCC.c: 162: month_cache = month;
  6748  01126C  C08A  F0F2         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;My_RTCC.c: 163: year_cache = year;
  6752  011270  C089  F0EE         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
  6753  011274  D000               	goto	l7932
  6754  011276                     l7932:
  6755                           
  6756                           ; BSR set to: 0
  6757  011276  C08A  F066         	movff	epoch_to_caltime@month,month_length@month
  6758  01127A  0100               	movlb	0	; () banked
  6759  01127C  5189               	movf	epoch_to_caltime@year& (0+255),w,b
  6760  01127E  EC5D  F091         	call	_month_length
  6761  011282  0100               	movlb	0	; () banked
  6762  011284  6F83               	movwf	??_epoch_to_caltime& (0+255),b
  6763  011286  0100               	movlb	0	; () banked
  6764  011288  5183               	movf	??_epoch_to_caltime& (0+255),w,b
  6765  01128A  0100               	movlb	0	; () banked
  6766  01128C  5D87               	subwf	epoch_to_caltime@day& (0+255),w,b
  6767  01128E  0E00               	movlw	0
  6768  011290  5988               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
  6769  011292  B0D8               	btfsc	status,0,c
  6770  011294  D7AF               	goto	l949
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;My_RTCC.c: 164: }
  6774                           ;My_RTCC.c: 165: day_cache = day_since_epoch - day;
  6775                           
  6776                           ; BSR set to: 0
  6777  011296  C087  F083         	movff	epoch_to_caltime@day,??_epoch_to_caltime
  6778  01129A  C088  F084         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
  6779  01129E  0100               	movlb	0	; () banked
  6780  0112A0  1F83               	comf	??_epoch_to_caltime& (0+255),f,b
  6781  0112A2  1F84               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
  6782  0112A4  4B83               	infsnz	??_epoch_to_caltime& (0+255),f,b
  6783  0112A6  2B84               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
  6784  0112A8  0100               	movlb	0	; () banked
  6785  0112AA  5185               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
  6786  0112AC  0100               	movlb	0	; () banked
  6787  0112AE  2583               	addwf	??_epoch_to_caltime& (0+255),w,b
  6788  0112B0  0101               	movlb	1	; () banked
  6789  0112B2  6F12               	movwf	epoch_to_caltime@day_cache& (0+255),b
  6790  0112B4  0100               	movlb	0	; () banked
  6791  0112B6  5186               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
  6792  0112B8  0100               	movlb	0	; () banked
  6793  0112BA  2184               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
  6794  0112BC  0101               	movlb	1	; () banked
  6795  0112BE  6F13               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
  6796                           
  6797                           ; BSR set to: 1
  6798                           ;My_RTCC.c: 166: day++;
  6799  0112C0  0100               	movlb	0	; () banked
  6800  0112C2  4B87               	infsnz	epoch_to_caltime@day& (0+255),f,b
  6801  0112C4  2B88               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;My_RTCC.c: 168: tm->YY = year;
  6805  0112C6  0100               	movlb	0	; () banked
  6806  0112C8  EE20 F00A          	lfsr	2,10
  6807  0112CC  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6808  0112CE  26D9               	addwf	fsr2l,f,c
  6809  0112D0  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6810  0112D2  22DA               	addwfc	fsr2h,f,c
  6811  0112D4  C089  FFDF         	movff	epoch_to_caltime@year,indf2
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;My_RTCC.c: 169: tm->MM = month;
  6815  0112D8  0100               	movlb	0	; () banked
  6816  0112DA  EE20 F009          	lfsr	2,9
  6817  0112DE  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6818  0112E0  26D9               	addwf	fsr2l,f,c
  6819  0112E2  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6820  0112E4  22DA               	addwfc	fsr2h,f,c
  6821  0112E6  C08A  FFDF         	movff	epoch_to_caltime@month,indf2
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;My_RTCC.c: 170: tm->DD = day;
  6825  0112EA  0100               	movlb	0	; () banked
  6826  0112EC  EE20 F008          	lfsr	2,8
  6827  0112F0  5181               	movf	epoch_to_caltime@tm& (0+255),w,b
  6828  0112F2  26D9               	addwf	fsr2l,f,c
  6829  0112F4  5182               	movf	(epoch_to_caltime@tm+1)& (0+255),w,b
  6830  0112F6  22DA               	addwfc	fsr2h,f,c
  6831  0112F8  C087  FFDF         	movff	epoch_to_caltime@day,indf2
  6832                           
  6833                           ; BSR set to: 0
  6834  0112FC  0012               	return		;funcret
  6835  0112FE                     __end_of_epoch_to_caltime:
  6836                           	opt stack 0
  6837                           tblptru	equ	0xFF8
  6838                           tblptrh	equ	0xFF7
  6839                           tblptrl	equ	0xFF6
  6840                           tablat	equ	0xFF5
  6841                           prodh	equ	0xFF4
  6842                           prodl	equ	0xFF3
  6843                           intcon	equ	0xFF2
  6844                           indf0	equ	0xFEF
  6845                           postinc0	equ	0xFEE
  6846                           fsr0h	equ	0xFEA
  6847                           fsr0l	equ	0xFE9
  6848                           wreg	equ	0xFE8
  6849                           postinc1	equ	0xFE6
  6850                           postdec1	equ	0xFE5
  6851                           fsr1h	equ	0xFE2
  6852                           fsr1l	equ	0xFE1
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860 ;; *************** function _get_quot_rem *****************
  6861 ;; Defined at:
  6862 ;;		line 74 in file "../My_library/My_RTCC.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  quot            2   25[BANK0 ] PTR unsigned long 
  6865 ;;		 -> epoch_to_caltime@num(4), 
  6866 ;;  div             1   27[BANK0 ] unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  num             4   29[BANK0 ] unsigned long 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  4   25[BANK0 ] unsigned long 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;Total ram usage:        8 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:   12
  6885 ;; This function calls:
  6886 ;;		___lldiv
  6887 ;;		___lmul
  6888 ;; This function is called by:
  6889 ;;		_epoch_to_caltime
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text21
  6894  01262E                     __ptext21:
  6895                           	opt stack 0
  6896  01262E                     _get_quot_rem:
  6897                           	opt stack 12
  6898                           
  6899                           ;My_RTCC.c: 77: epoch_t num = *quot;
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;incstack = 0
  6903  01262E  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  6904  012632  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  6905  012636  CFDE F07D          	movff	postinc2,get_quot_rem@num
  6906  01263A  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
  6907  01263E  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
  6908  012642  CFDE F080          	movff	postinc2,get_quot_rem@num+3
  6909                           
  6910                           ;My_RTCC.c: 78: return num - (*quot = num / div) * div;
  6911  012646  0100               	movlb	0	; () banked
  6912  012648  517B               	movf	get_quot_rem@div& (0+255),w,b
  6913  01264A  0100               	movlb	0	; () banked
  6914  01264C  6F64               	movwf	___lldiv@divisor& (0+255),b
  6915  01264E  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
  6916  012650  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
  6917  012652  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
  6918  012654  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
  6919  012658  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
  6920  01265C  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
  6921  012660  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
  6922  012664  EC25  F095         	call	___lldiv	;wreg free
  6923  012668  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
  6924  01266C  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
  6925  012670  0100               	movlb	0	; () banked
  6926  012672  C060  FFDE         	movff	?___lldiv,postinc2
  6927  012676  0100               	movlb	0	; () banked
  6928  012678  C061  FFDE         	movff	?___lldiv+1,postinc2
  6929  01267C  0100               	movlb	0	; () banked
  6930  01267E  C062  FFDE         	movff	?___lldiv+2,postinc2
  6931  012682  0100               	movlb	0	; () banked
  6932  012684  C063  FFDD         	movff	?___lldiv+3,postdec2
  6933  012688  52DD               	movf	postdec2,f,c
  6934  01268A  52DD               	movf	postdec2,f,c
  6935  01268C  CFDE F06D          	movff	postinc2,___lmul@multiplier
  6936  012690  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
  6937  012694  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
  6938  012698  CFDE F070          	movff	postinc2,___lmul@multiplier+3
  6939  01269C  0100               	movlb	0	; () banked
  6940  01269E  517B               	movf	get_quot_rem@div& (0+255),w,b
  6941  0126A0  0100               	movlb	0	; () banked
  6942  0126A2  6F71               	movwf	___lmul@multiplicand& (0+255),b
  6943  0126A4  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
  6944  0126A6  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
  6945  0126A8  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
  6946  0126AA  ECAD  F09B         	call	___lmul	;wreg free
  6947  0126AE  0100               	movlb	0	; () banked
  6948  0126B0  1F6D               	comf	?___lmul& (0+255),f,b
  6949  0126B2  0100               	movlb	0	; () banked
  6950  0126B4  1F6E               	comf	(?___lmul+1)& (0+255),f,b
  6951  0126B6  0100               	movlb	0	; () banked
  6952  0126B8  1F6F               	comf	(?___lmul+2)& (0+255),f,b
  6953  0126BA  0100               	movlb	0	; () banked
  6954  0126BC  1F70               	comf	(?___lmul+3)& (0+255),f,b
  6955  0126BE  0100               	movlb	0	; () banked
  6956  0126C0  2B6D               	incf	?___lmul& (0+255),f,b
  6957  0126C2  0E00               	movlw	0
  6958  0126C4  0100               	movlb	0	; () banked
  6959  0126C6  236E               	addwfc	(?___lmul+1)& (0+255),f,b
  6960  0126C8  0100               	movlb	0	; () banked
  6961  0126CA  236F               	addwfc	(?___lmul+2)& (0+255),f,b
  6962  0126CC  0100               	movlb	0	; () banked
  6963  0126CE  2370               	addwfc	(?___lmul+3)& (0+255),f,b
  6964  0126D0  0100               	movlb	0	; () banked
  6965  0126D2  517D               	movf	get_quot_rem@num& (0+255),w,b
  6966  0126D4  0100               	movlb	0	; () banked
  6967  0126D6  256D               	addwf	?___lmul& (0+255),w,b
  6968  0126D8  0100               	movlb	0	; () banked
  6969  0126DA  6F79               	movwf	?_get_quot_rem& (0+255),b
  6970  0126DC  0100               	movlb	0	; () banked
  6971  0126DE  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
  6972  0126E0  0100               	movlb	0	; () banked
  6973  0126E2  216E               	addwfc	(?___lmul+1)& (0+255),w,b
  6974  0126E4  0100               	movlb	0	; () banked
  6975  0126E6  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
  6976  0126E8  0100               	movlb	0	; () banked
  6977  0126EA  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
  6978  0126EC  0100               	movlb	0	; () banked
  6979  0126EE  216F               	addwfc	(?___lmul+2)& (0+255),w,b
  6980  0126F0  0100               	movlb	0	; () banked
  6981  0126F2  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
  6982  0126F4  0100               	movlb	0	; () banked
  6983  0126F6  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
  6984  0126F8  0100               	movlb	0	; () banked
  6985  0126FA  2170               	addwfc	(?___lmul+3)& (0+255),w,b
  6986  0126FC  0100               	movlb	0	; () banked
  6987  0126FE  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
  6988  012700  0012               	return	
  6989                           
  6990                           ; BSR set to: 0
  6991                           
  6992                           ; BSR set to: 0
  6993  012702  0012               	return		;funcret
  6994  012704                     __end_of_get_quot_rem:
  6995                           	opt stack 0
  6996                           tblptru	equ	0xFF8
  6997                           tblptrh	equ	0xFF7
  6998                           tblptrl	equ	0xFF6
  6999                           tablat	equ	0xFF5
  7000                           prodh	equ	0xFF4
  7001                           prodl	equ	0xFF3
  7002                           intcon	equ	0xFF2
  7003                           indf0	equ	0xFEF
  7004                           postinc0	equ	0xFEE
  7005                           fsr0h	equ	0xFEA
  7006                           fsr0l	equ	0xFE9
  7007                           wreg	equ	0xFE8
  7008                           postinc1	equ	0xFE6
  7009                           postdec1	equ	0xFE5
  7010                           fsr1h	equ	0xFE2
  7011                           fsr1l	equ	0xFE1
  7012                           indf2	equ	0xFDF
  7013                           postinc2	equ	0xFDE
  7014                           postdec2	equ	0xFDD
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function ___lldiv *****************
  7020 ;; Defined at:
  7021 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  dividend        4    0[BANK0 ] unsigned long 
  7024 ;;  divisor         4    4[BANK0 ] unsigned long 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  quotient        4    8[BANK0 ] unsigned long 
  7027 ;;  counter         1   12[BANK0 ] unsigned char 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  4    0[BANK0 ] unsigned long 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2, status,0
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7037 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;Total ram usage:       13 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:   11
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_get_quot_rem
  7048 ;;		_CTMU_read
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text22
  7053  012A4A                     __ptext22:
  7054                           	opt stack 0
  7055  012A4A                     ___lldiv:
  7056                           	opt stack 12
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;incstack = 0
  7060  012A4A  0E00               	movlw	0
  7061  012A4C  0100               	movlb	0	; () banked
  7062  012A4E  6F68               	movwf	___lldiv@quotient& (0+255),b
  7063  012A50  0E00               	movlw	0
  7064  012A52  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  7065  012A54  0E00               	movlw	0
  7066  012A56  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  7067  012A58  0E00               	movlw	0
  7068  012A5A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  7069                           
  7070                           ; BSR set to: 0
  7071  012A5C  0100               	movlb	0	; () banked
  7072  012A5E  5164               	movf	___lldiv@divisor& (0+255),w,b
  7073  012A60  0100               	movlb	0	; () banked
  7074  012A62  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7075  012A64  0100               	movlb	0	; () banked
  7076  012A66  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7077  012A68  0100               	movlb	0	; () banked
  7078  012A6A  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7079  012A6C  B4D8               	btfsc	status,2,c
  7080  012A6E  D047               	goto	l1897
  7081                           
  7082                           ; BSR set to: 0
  7083  012A70  0E01               	movlw	1
  7084  012A72  0100               	movlb	0	; () banked
  7085  012A74  6F6C               	movwf	___lldiv@counter& (0+255),b
  7086  012A76  D009               	goto	l7724
  7087  012A78                     l7722:
  7088                           
  7089                           ; BSR set to: 0
  7090  012A78  0100               	movlb	0	; () banked
  7091  012A7A  90D8               	bcf	status,0,c
  7092  012A7C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  7093  012A7E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7094  012A80  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7095  012A82  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7096  012A84  0100               	movlb	0	; () banked
  7097  012A86  2B6C               	incf	___lldiv@counter& (0+255),f,b
  7098  012A88  D000               	goto	l7724
  7099  012A8A                     l7724:
  7100                           
  7101                           ; BSR set to: 0
  7102  012A8A  0100               	movlb	0	; () banked
  7103  012A8C  BF67               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  7104  012A8E  D002               	goto	l7726
  7105  012A90  D7F3               	goto	l7722
  7106                           
  7107                           ; BSR set to: 0
  7108  012A92  D000               	goto	l7726
  7109  012A94                     l7726:
  7110                           
  7111                           ; BSR set to: 0
  7112  012A94  0100               	movlb	0	; () banked
  7113  012A96  90D8               	bcf	status,0,c
  7114  012A98  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  7115  012A9A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7116  012A9C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7117  012A9E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7118                           
  7119                           ; BSR set to: 0
  7120  012AA0  0100               	movlb	0	; () banked
  7121  012AA2  5164               	movf	___lldiv@divisor& (0+255),w,b
  7122  012AA4  0100               	movlb	0	; () banked
  7123  012AA6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  7124  012AA8  0100               	movlb	0	; () banked
  7125  012AAA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7126  012AAC  0100               	movlb	0	; () banked
  7127  012AAE  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7128  012AB0  0100               	movlb	0	; () banked
  7129  012AB2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7130  012AB4  0100               	movlb	0	; () banked
  7131  012AB6  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7132  012AB8  0100               	movlb	0	; () banked
  7133  012ABA  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7134  012ABC  0100               	movlb	0	; () banked
  7135  012ABE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7136  012AC0  A0D8               	btfss	status,0,c
  7137  012AC2  D013               	goto	l7734
  7138                           
  7139                           ; BSR set to: 0
  7140  012AC4  0100               	movlb	0	; () banked
  7141  012AC6  5164               	movf	___lldiv@divisor& (0+255),w,b
  7142  012AC8  0100               	movlb	0	; () banked
  7143  012ACA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  7144  012ACC  0100               	movlb	0	; () banked
  7145  012ACE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7146  012AD0  0100               	movlb	0	; () banked
  7147  012AD2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7148  012AD4  0100               	movlb	0	; () banked
  7149  012AD6  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7150  012AD8  0100               	movlb	0	; () banked
  7151  012ADA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7152  012ADC  0100               	movlb	0	; () banked
  7153  012ADE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7154  012AE0  0100               	movlb	0	; () banked
  7155  012AE2  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7156                           
  7157                           ; BSR set to: 0
  7158  012AE4  0100               	movlb	0	; () banked
  7159  012AE6  8168               	bsf	___lldiv@quotient& (0+255),0,b
  7160  012AE8  D000               	goto	l7734
  7161  012AEA                     l7734:
  7162                           
  7163                           ; BSR set to: 0
  7164  012AEA  0100               	movlb	0	; () banked
  7165  012AEC  90D8               	bcf	status,0,c
  7166  012AEE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7167  012AF0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7168  012AF2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7169  012AF4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 0
  7172  012AF6  0100               	movlb	0	; () banked
  7173  012AF8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  7174  012AFA  D7CC               	goto	l7726
  7175  012AFC  D000               	goto	l1897
  7176  012AFE                     l1897:
  7177                           
  7178                           ; BSR set to: 0
  7179  012AFE  C068  F060         	movff	___lldiv@quotient,?___lldiv
  7180  012B02  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  7181  012B06  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  7182  012B0A  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  7183                           
  7184                           ; BSR set to: 0
  7185  012B0E  0012               	return		;funcret
  7186  012B10                     __end_of___lldiv:
  7187                           	opt stack 0
  7188                           tblptru	equ	0xFF8
  7189                           tblptrh	equ	0xFF7
  7190                           tblptrl	equ	0xFF6
  7191                           tablat	equ	0xFF5
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           intcon	equ	0xFF2
  7195                           indf0	equ	0xFEF
  7196                           postinc0	equ	0xFEE
  7197                           fsr0h	equ	0xFEA
  7198                           fsr0l	equ	0xFE9
  7199                           wreg	equ	0xFE8
  7200                           postinc1	equ	0xFE6
  7201                           postdec1	equ	0xFE5
  7202                           fsr1h	equ	0xFE2
  7203                           fsr1l	equ	0xFE1
  7204                           indf2	equ	0xFDF
  7205                           postinc2	equ	0xFDE
  7206                           postdec2	equ	0xFDD
  7207                           fsr2h	equ	0xFDA
  7208                           fsr2l	equ	0xFD9
  7209                           status	equ	0xFD8
  7210                           
  7211 ;; *************** function _caltime_to_RTCC *****************
  7212 ;; Defined at:
  7213 ;;		line 99 in file "../My_library/My_RTCC.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  tm              2    9[BANK0 ] PTR struct .
  7216 ;;		 -> now(14), 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;Total ram usage:        2 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:   13
  7235 ;; This function calls:
  7236 ;;		_d_to_x
  7237 ;; This function is called by:
  7238 ;;		_RTCC_from_caltime
  7239 ;;		_RTCC_from_epoch
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text23
  7244  012556                     __ptext23:
  7245                           	opt stack 0
  7246  012556                     _caltime_to_RTCC:
  7247                           	opt stack 12
  7248                           
  7249                           ;My_RTCC.c: 100: while (RTCCFGbits.RTCSYNC);
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;incstack = 0
  7253  012556  D000               	goto	l936
  7254  012558                     l936:
  7255  012558  010F               	movlb	15	; () banked
  7256  01255A  B93F               	btfsc	63,4,b	;volatile
  7257  01255C  D7FD               	goto	l936
  7258                           
  7259                           ; BSR set to: 15
  7260                           ;My_RTCC.c: 101: RTCCFGbits.RTCPTR0 = 1;
  7261  01255E  010F               	movlb	15	; () banked
  7262  012560  813F               	bsf	63,0,b	;volatile
  7263                           
  7264                           ;My_RTCC.c: 102: RTCCFGbits.RTCPTR1 = 1;
  7265  012562  010F               	movlb	15	; () banked
  7266  012564  833F               	bsf	63,1,b	;volatile
  7267                           
  7268                           ; BSR set to: 15
  7269                           ;My_RTCC.c: 103: RTCVALL = d_to_x(tm->YY);
  7270  012566  0100               	movlb	0	; () banked
  7271  012568  EE20 F00A          	lfsr	2,10
  7272  01256C  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7273  01256E  26D9               	addwf	fsr2l,f,c
  7274  012570  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7275  012572  22DA               	addwfc	fsr2h,f,c
  7276  012574  50DF               	movf	indf2,w,c
  7277  012576  EC63  F09F         	call	_d_to_x
  7278  01257A  010F               	movlb	15	; () banked
  7279  01257C  6F3A               	movwf	58,b	;volatile
  7280                           
  7281                           ; BSR set to: 15
  7282                           ;My_RTCC.c: 104: RTCVALH = 0x00;
  7283  01257E  0E00               	movlw	0
  7284  012580  010F               	movlb	15	; () banked
  7285  012582  6F3B               	movwf	59,b	;volatile
  7286                           
  7287                           ; BSR set to: 15
  7288                           ;My_RTCC.c: 105: RTCCFGbits.RTCPTR0 = 0;
  7289  012584  010F               	movlb	15	; () banked
  7290  012586  913F               	bcf	63,0,b	;volatile
  7291                           
  7292                           ; BSR set to: 15
  7293                           ;My_RTCC.c: 106: RTCCFGbits.RTCPTR1 = 1;
  7294  012588  010F               	movlb	15	; () banked
  7295  01258A  833F               	bsf	63,1,b	;volatile
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;My_RTCC.c: 107: RTCVALL = d_to_x(tm->DD);
  7299  01258C  0100               	movlb	0	; () banked
  7300  01258E  EE20 F008          	lfsr	2,8
  7301  012592  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7302  012594  26D9               	addwf	fsr2l,f,c
  7303  012596  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7304  012598  22DA               	addwfc	fsr2h,f,c
  7305  01259A  50DF               	movf	indf2,w,c
  7306  01259C  EC63  F09F         	call	_d_to_x
  7307  0125A0  010F               	movlb	15	; () banked
  7308  0125A2  6F3A               	movwf	58,b	;volatile
  7309                           
  7310                           ; BSR set to: 15
  7311                           ;My_RTCC.c: 108: RTCVALH = d_to_x(tm->MM);
  7312  0125A4  0100               	movlb	0	; () banked
  7313  0125A6  EE20 F009          	lfsr	2,9
  7314  0125AA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7315  0125AC  26D9               	addwf	fsr2l,f,c
  7316  0125AE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7317  0125B0  22DA               	addwfc	fsr2h,f,c
  7318  0125B2  50DF               	movf	indf2,w,c
  7319  0125B4  EC63  F09F         	call	_d_to_x
  7320  0125B8  010F               	movlb	15	; () banked
  7321  0125BA  6F3B               	movwf	59,b	;volatile
  7322                           
  7323                           ; BSR set to: 15
  7324                           ;My_RTCC.c: 109: RTCCFGbits.RTCPTR0 = 1;
  7325  0125BC  010F               	movlb	15	; () banked
  7326  0125BE  813F               	bsf	63,0,b	;volatile
  7327                           
  7328                           ; BSR set to: 15
  7329                           ;My_RTCC.c: 110: RTCCFGbits.RTCPTR1 = 0;
  7330  0125C0  010F               	movlb	15	; () banked
  7331  0125C2  933F               	bcf	63,1,b	;volatile
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;My_RTCC.c: 111: RTCVALL = d_to_x(tm->hh);
  7335  0125C4  0100               	movlb	0	; () banked
  7336  0125C6  EE20 F006          	lfsr	2,6
  7337  0125CA  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7338  0125CC  26D9               	addwf	fsr2l,f,c
  7339  0125CE  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7340  0125D0  22DA               	addwfc	fsr2h,f,c
  7341  0125D2  50DF               	movf	indf2,w,c
  7342  0125D4  EC63  F09F         	call	_d_to_x
  7343  0125D8  010F               	movlb	15	; () banked
  7344  0125DA  6F3A               	movwf	58,b	;volatile
  7345                           
  7346                           ; BSR set to: 15
  7347                           ;My_RTCC.c: 112: RTCVALH = d_to_x(tm->EE);
  7348  0125DC  0100               	movlb	0	; () banked
  7349  0125DE  EE20 F007          	lfsr	2,7
  7350  0125E2  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7351  0125E4  26D9               	addwf	fsr2l,f,c
  7352  0125E6  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7353  0125E8  22DA               	addwfc	fsr2h,f,c
  7354  0125EA  50DF               	movf	indf2,w,c
  7355  0125EC  EC63  F09F         	call	_d_to_x
  7356  0125F0  010F               	movlb	15	; () banked
  7357  0125F2  6F3B               	movwf	59,b	;volatile
  7358                           
  7359                           ; BSR set to: 15
  7360                           ;My_RTCC.c: 113: RTCCFGbits.RTCPTR0 = 0;
  7361  0125F4  010F               	movlb	15	; () banked
  7362  0125F6  913F               	bcf	63,0,b	;volatile
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;My_RTCC.c: 114: RTCCFGbits.RTCPTR1 = 0;
  7366  0125F8  010F               	movlb	15	; () banked
  7367  0125FA  933F               	bcf	63,1,b	;volatile
  7368                           
  7369                           ; BSR set to: 15
  7370                           ;My_RTCC.c: 115: RTCVALL = d_to_x(tm->ss);
  7371  0125FC  0100               	movlb	0	; () banked
  7372  0125FE  EE20 F004          	lfsr	2,4
  7373  012602  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7374  012604  26D9               	addwf	fsr2l,f,c
  7375  012606  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7376  012608  22DA               	addwfc	fsr2h,f,c
  7377  01260A  50DF               	movf	indf2,w,c
  7378  01260C  EC63  F09F         	call	_d_to_x
  7379  012610  010F               	movlb	15	; () banked
  7380  012612  6F3A               	movwf	58,b	;volatile
  7381                           
  7382                           ; BSR set to: 15
  7383                           ;My_RTCC.c: 116: RTCVALH = d_to_x(tm->mm);
  7384  012614  0100               	movlb	0	; () banked
  7385  012616  EE20 F005          	lfsr	2,5
  7386  01261A  5169               	movf	caltime_to_RTCC@tm& (0+255),w,b
  7387  01261C  26D9               	addwf	fsr2l,f,c
  7388  01261E  516A               	movf	(caltime_to_RTCC@tm+1)& (0+255),w,b
  7389  012620  22DA               	addwfc	fsr2h,f,c
  7390  012622  50DF               	movf	indf2,w,c
  7391  012624  EC63  F09F         	call	_d_to_x
  7392  012628  010F               	movlb	15	; () banked
  7393  01262A  6F3B               	movwf	59,b	;volatile
  7394                           
  7395                           ; BSR set to: 15
  7396  01262C  0012               	return		;funcret
  7397  01262E                     __end_of_caltime_to_RTCC:
  7398                           	opt stack 0
  7399                           tblptru	equ	0xFF8
  7400                           tblptrh	equ	0xFF7
  7401                           tblptrl	equ	0xFF6
  7402                           tablat	equ	0xFF5
  7403                           prodh	equ	0xFF4
  7404                           prodl	equ	0xFF3
  7405                           intcon	equ	0xFF2
  7406                           indf0	equ	0xFEF
  7407                           postinc0	equ	0xFEE
  7408                           fsr0h	equ	0xFEA
  7409                           fsr0l	equ	0xFE9
  7410                           wreg	equ	0xFE8
  7411                           postinc1	equ	0xFE6
  7412                           postdec1	equ	0xFE5
  7413                           fsr1h	equ	0xFE2
  7414                           fsr1l	equ	0xFE1
  7415                           indf2	equ	0xFDF
  7416                           postinc2	equ	0xFDE
  7417                           postdec2	equ	0xFDD
  7418                           fsr2h	equ	0xFDA
  7419                           fsr2l	equ	0xFD9
  7420                           status	equ	0xFD8
  7421                           
  7422 ;; *************** function _d_to_x *****************
  7423 ;; Defined at:
  7424 ;;		line 39 in file "../My_library/My_RTCC.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  dec             1    wreg     unsigned char 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  dec             1    8[BANK0 ] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  1    wreg      unsigned char 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;Total ram usage:        1 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:   12
  7445 ;; This function calls:
  7446 ;;		___awdiv
  7447 ;; This function is called by:
  7448 ;;		_caltime_to_RTCC
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text24
  7453  013EC6                     __ptext24:
  7454                           	opt stack 0
  7455  013EC6                     _d_to_x:
  7456                           	opt stack 12
  7457                           
  7458                           ; BSR set to: 15
  7459                           ;incstack = 0
  7460                           ;d_to_x@dec stored from wreg
  7461  013EC6  0100               	movlb	0	; () banked
  7462  013EC8  6F68               	movwf	d_to_x@dec& (0+255),b
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;My_RTCC.c: 42: return dec / 10 * 6 + dec;
  7466  013ECA  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
  7467  013ECE  0100               	movlb	0	; () banked
  7468  013ED0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  7469  013ED2  0E00               	movlw	0
  7470  013ED4  0100               	movlb	0	; () banked
  7471  013ED6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  7472  013ED8  0E0A               	movlw	10
  7473  013EDA  6F62               	movwf	___awdiv@divisor& (0+255),b
  7474  013EDC  ECED  F093         	call	___awdiv	;wreg free
  7475  013EE0  0100               	movlb	0	; () banked
  7476  013EE2  5160               	movf	?___awdiv& (0+255),w,b
  7477  013EE4  0D06               	mullw	6
  7478  013EE6  50F3               	movf	prodl,w,c
  7479  013EE8  0100               	movlb	0	; () banked
  7480  013EEA  2568               	addwf	d_to_x@dec& (0+255),w,b
  7481  013EEC  0012               	return	
  7482                           
  7483                           ; BSR set to: 0
  7484                           
  7485                           ; BSR set to: 0
  7486  013EEE  0012               	return		;funcret
  7487  013EF0                     __end_of_d_to_x:
  7488                           	opt stack 0
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           prodh	equ	0xFF4
  7494                           prodl	equ	0xFF3
  7495                           intcon	equ	0xFF2
  7496                           indf0	equ	0xFEF
  7497                           postinc0	equ	0xFEE
  7498                           fsr0h	equ	0xFEA
  7499                           fsr0l	equ	0xFE9
  7500                           wreg	equ	0xFE8
  7501                           postinc1	equ	0xFE6
  7502                           postdec1	equ	0xFE5
  7503                           fsr1h	equ	0xFE2
  7504                           fsr1l	equ	0xFE1
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function ___awdiv *****************
  7513 ;; Defined at:
  7514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  dividend        2    0[BANK0 ] int 
  7517 ;;  divisor         2    2[BANK0 ] int 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  quotient        2    6[BANK0 ] int 
  7520 ;;  sign            1    5[BANK0 ] unsigned char 
  7521 ;;  counter         1    4[BANK0 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  2    0[BANK0 ] int 
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;Total ram usage:        8 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:   11
  7538 ;; This function calls:
  7539 ;;		Nothing
  7540 ;; This function is called by:
  7541 ;;		_d_to_x
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text25
  7546  0127DA                     __ptext25:
  7547                           	opt stack 0
  7548  0127DA                     ___awdiv:
  7549                           	opt stack 12
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;incstack = 0
  7553  0127DA  0E00               	movlw	0
  7554  0127DC  0100               	movlb	0	; () banked
  7555  0127DE  6F65               	movwf	___awdiv@sign& (0+255),b
  7556                           
  7557                           ; BSR set to: 0
  7558  0127E0  0100               	movlb	0	; () banked
  7559  0127E2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7560  0127E4  D009               	goto	l7680
  7561                           
  7562                           ; BSR set to: 0
  7563  0127E6  0100               	movlb	0	; () banked
  7564  0127E8  6D62               	negf	___awdiv@divisor& (0+255),b
  7565  0127EA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7566  0127EC  B0D8               	btfsc	status,0,c
  7567  0127EE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7568                           
  7569                           ; BSR set to: 0
  7570  0127F0  0E01               	movlw	1
  7571  0127F2  0100               	movlb	0	; () banked
  7572  0127F4  6F65               	movwf	___awdiv@sign& (0+255),b
  7573  0127F6  D000               	goto	l7680
  7574  0127F8                     l7680:
  7575                           
  7576                           ; BSR set to: 0
  7577  0127F8  0100               	movlb	0	; () banked
  7578  0127FA  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7579  0127FC  D009               	goto	l7686
  7580                           
  7581                           ; BSR set to: 0
  7582  0127FE  0100               	movlb	0	; () banked
  7583  012800  6D60               	negf	___awdiv@dividend& (0+255),b
  7584  012802  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7585  012804  B0D8               	btfsc	status,0,c
  7586  012806  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7587                           
  7588                           ; BSR set to: 0
  7589  012808  0E01               	movlw	1
  7590  01280A  0100               	movlb	0	; () banked
  7591  01280C  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7592  01280E  D000               	goto	l7686
  7593  012810                     l7686:
  7594                           
  7595                           ; BSR set to: 0
  7596  012810  0E00               	movlw	0
  7597  012812  0100               	movlb	0	; () banked
  7598  012814  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7599  012816  0E00               	movlw	0
  7600  012818  6F66               	movwf	___awdiv@quotient& (0+255),b
  7601                           
  7602                           ; BSR set to: 0
  7603  01281A  0100               	movlb	0	; () banked
  7604  01281C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7605  01281E  0100               	movlb	0	; () banked
  7606  012820  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7607  012822  B4D8               	btfsc	status,2,c
  7608  012824  D031               	goto	l7708
  7609                           
  7610                           ; BSR set to: 0
  7611  012826  0E01               	movlw	1
  7612  012828  0100               	movlb	0	; () banked
  7613  01282A  6F64               	movwf	___awdiv@counter& (0+255),b
  7614  01282C  D007               	goto	l7694
  7615  01282E                     l7692:
  7616                           
  7617                           ; BSR set to: 0
  7618  01282E  0100               	movlb	0	; () banked
  7619  012830  90D8               	bcf	status,0,c
  7620  012832  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7621  012834  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7622  012836  0100               	movlb	0	; () banked
  7623  012838  2B64               	incf	___awdiv@counter& (0+255),f,b
  7624  01283A  D000               	goto	l7694
  7625  01283C                     l7694:
  7626                           
  7627                           ; BSR set to: 0
  7628  01283C  0100               	movlb	0	; () banked
  7629  01283E  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7630  012840  D002               	goto	l7696
  7631  012842  D7F5               	goto	l7692
  7632                           
  7633                           ; BSR set to: 0
  7634  012844  D000               	goto	l7696
  7635  012846                     l7696:
  7636                           
  7637                           ; BSR set to: 0
  7638  012846  0100               	movlb	0	; () banked
  7639  012848  90D8               	bcf	status,0,c
  7640  01284A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7641  01284C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 0
  7644  01284E  0100               	movlb	0	; () banked
  7645  012850  5162               	movf	___awdiv@divisor& (0+255),w,b
  7646  012852  0100               	movlb	0	; () banked
  7647  012854  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7648  012856  0100               	movlb	0	; () banked
  7649  012858  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7650  01285A  0100               	movlb	0	; () banked
  7651  01285C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7652  01285E  A0D8               	btfss	status,0,c
  7653  012860  D00B               	goto	l7704
  7654                           
  7655                           ; BSR set to: 0
  7656  012862  0100               	movlb	0	; () banked
  7657  012864  5162               	movf	___awdiv@divisor& (0+255),w,b
  7658  012866  0100               	movlb	0	; () banked
  7659  012868  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7660  01286A  0100               	movlb	0	; () banked
  7661  01286C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7662  01286E  0100               	movlb	0	; () banked
  7663  012870  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7664                           
  7665                           ; BSR set to: 0
  7666  012872  0100               	movlb	0	; () banked
  7667  012874  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7668  012876  D000               	goto	l7704
  7669  012878                     l7704:
  7670                           
  7671                           ; BSR set to: 0
  7672  012878  0100               	movlb	0	; () banked
  7673  01287A  90D8               	bcf	status,0,c
  7674  01287C  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7675  01287E  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7676                           
  7677                           ; BSR set to: 0
  7678  012880  0100               	movlb	0	; () banked
  7679  012882  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7680  012884  D7E0               	goto	l7696
  7681                           
  7682                           ; BSR set to: 0
  7683  012886  D000               	goto	l7708
  7684  012888                     l7708:
  7685                           
  7686                           ; BSR set to: 0
  7687  012888  0100               	movlb	0	; () banked
  7688  01288A  5165               	movf	___awdiv@sign& (0+255),w,b
  7689  01288C  0100               	movlb	0	; () banked
  7690  01288E  B4D8               	btfsc	status,2,c
  7691  012890  D006               	goto	l7712
  7692                           
  7693                           ; BSR set to: 0
  7694  012892  0100               	movlb	0	; () banked
  7695  012894  6D66               	negf	___awdiv@quotient& (0+255),b
  7696  012896  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7697  012898  B0D8               	btfsc	status,0,c
  7698  01289A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7699  01289C  D000               	goto	l7712
  7700  01289E                     l7712:
  7701                           
  7702                           ; BSR set to: 0
  7703  01289E  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7704  0128A2  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7705  0128A6  0012               	return	
  7706                           
  7707                           ; BSR set to: 0
  7708                           
  7709                           ; BSR set to: 0
  7710  0128A8  0012               	return		;funcret
  7711  0128AA                     __end_of___awdiv:
  7712                           	opt stack 0
  7713                           tblptru	equ	0xFF8
  7714                           tblptrh	equ	0xFF7
  7715                           tblptrl	equ	0xFF6
  7716                           tablat	equ	0xFF5
  7717                           prodh	equ	0xFF4
  7718                           prodl	equ	0xFF3
  7719                           intcon	equ	0xFF2
  7720                           indf0	equ	0xFEF
  7721                           postinc0	equ	0xFEE
  7722                           fsr0h	equ	0xFEA
  7723                           fsr0l	equ	0xFE9
  7724                           wreg	equ	0xFE8
  7725                           postinc1	equ	0xFE6
  7726                           postdec1	equ	0xFE5
  7727                           fsr1h	equ	0xFE2
  7728                           fsr1l	equ	0xFE1
  7729                           indf2	equ	0xFDF
  7730                           postinc2	equ	0xFDE
  7731                           postdec2	equ	0xFDD
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8
  7735                           
  7736 ;; *************** function _I2C_LCD_SetCursor *****************
  7737 ;; Defined at:
  7738 ;;		line 26 in file "../My_library/My_ST7032.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  col             1    wreg     unsigned char 
  7741 ;;  row             1    6[BANK0 ] unsigned char 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  col             1    9[BANK0 ] unsigned char 
  7744 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  7745 ;; Return value:  Size  Location     Type
  7746 ;;		None               void
  7747 ;; Registers used:
  7748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7754 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;Total ram usage:        4 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:   14
  7761 ;; This function calls:
  7762 ;;		_I2C_LCD_Command
  7763 ;; This function is called by:
  7764 ;;		_terminal_operation
  7765 ;;		_software_init
  7766 ;;		_main
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text26
  7771  013E6E                     __ptext26:
  7772                           	opt stack 0
  7773  013E6E                     _I2C_LCD_SetCursor:
  7774                           	opt stack 14
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;incstack = 0
  7778                           ;I2C_LCD_SetCursor@col stored from wreg
  7779  013E6E  0100               	movlb	0	; () banked
  7780  013E70  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;My_ST7032.c: 27: uint8_t row_offsets[] = {0x00, 0x40};
  7784  013E72  C1F4  F067         	movff	I2C_LCD_SetCursor@F9811,I2C_LCD_SetCursor@row_offsets
  7785  013E76  C1F5  F068         	movff	I2C_LCD_SetCursor@F9811+1,I2C_LCD_SetCursor@row_offsets+1
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;My_ST7032.c: 29: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  7789  013E7A  0100               	movlb	0	; () banked
  7790  013E7C  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  7791  013E7E  0D01               	mullw	1
  7792  013E80  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  7793  013E82  24F3               	addwf	prodl,w,c
  7794  013E84  6ED9               	movwf	fsr2l,c
  7795  013E86  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  7796  013E88  20F4               	addwfc	prodh,w,c
  7797  013E8A  6EDA               	movwf	fsr2h,c
  7798  013E8C  50DF               	movf	indf2,w,c
  7799  013E8E  0100               	movlb	0	; () banked
  7800  013E90  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  7801  013E92  0980               	iorlw	128
  7802  013E94  EC54  F09E         	call	_I2C_LCD_Command
  7803  013E98  0012               	return		;funcret
  7804  013E9A                     __end_of_I2C_LCD_SetCursor:
  7805                           	opt stack 0
  7806                           tblptru	equ	0xFF8
  7807                           tblptrh	equ	0xFF7
  7808                           tblptrl	equ	0xFF6
  7809                           tablat	equ	0xFF5
  7810                           prodh	equ	0xFF4
  7811                           prodl	equ	0xFF3
  7812                           intcon	equ	0xFF2
  7813                           indf0	equ	0xFEF
  7814                           postinc0	equ	0xFEE
  7815                           fsr0h	equ	0xFEA
  7816                           fsr0l	equ	0xFE9
  7817                           wreg	equ	0xFE8
  7818                           postinc1	equ	0xFE6
  7819                           postdec1	equ	0xFE5
  7820                           fsr1h	equ	0xFE2
  7821                           fsr1l	equ	0xFE1
  7822                           indf2	equ	0xFDF
  7823                           postinc2	equ	0xFDE
  7824                           postdec2	equ	0xFDD
  7825                           fsr2h	equ	0xFDA
  7826                           fsr2l	equ	0xFD9
  7827                           status	equ	0xFD8
  7828                           
  7829 ;; *************** function _I2C_LCD_Puts *****************
  7830 ;; Defined at:
  7831 ;;		line 45 in file "../My_library/My_ST7032.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  7834 ;;		 -> main@str(20), STR_49(9), STR_48(9), STR_46(16), 
  7835 ;;		 -> STR_45(12), 
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  ans             2    7[BANK0 ] int 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;		None               void
  7840 ;; Registers used:
  7841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7847 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7848 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7850 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7851 ;;Total ram usage:        5 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:   13
  7854 ;; This function calls:
  7855 ;;		_I2C_Send
  7856 ;;		_I2C_Start
  7857 ;;		_I2C_Stop
  7858 ;; This function is called by:
  7859 ;;		_terminal_operation
  7860 ;;		_software_init
  7861 ;;		_main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text27
  7866  01320A                     __ptext27:
  7867                           	opt stack 0
  7868  01320A                     _I2C_LCD_Puts:
  7869                           	opt stack 15
  7870                           
  7871                           ;My_ST7032.c: 46: int ans;
  7872                           ;My_ST7032.c: 48: ans = I2C_Start(0x3E, 0);
  7873                           
  7874                           ;incstack = 0
  7875  01320A  0E00               	movlw	0
  7876  01320C  0100               	movlb	0	; () banked
  7877  01320E  6F62               	movwf	I2C_Start@rw& (0+255),b
  7878  013210  0E3E               	movlw	62
  7879  013212  EC8B  F09E         	call	_I2C_Start
  7880  013216  0100               	movlb	0	; () banked
  7881  013218  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  7882  01321A  0100               	movlb	0	; () banked
  7883  01321C  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  7884  01321E  0100               	movlb	0	; () banked
  7885  013220  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  7886  013222  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;My_ST7032.c: 49: if (ans == 0) {
  7890  013224  0100               	movlb	0	; () banked
  7891  013226  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  7892  013228  0100               	movlb	0	; () banked
  7893  01322A  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  7894  01322C  A4D8               	btfss	status,2,c
  7895  01322E  D034               	goto	l8458
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;My_ST7032.c: 50: I2C_Send(0b01000000);
  7899  013230  0E40               	movlw	64
  7900  013232  ECF5  F09F         	call	_I2C_Send
  7901                           
  7902                           ;My_ST7032.c: 51: while (*s) {
  7903  013236  D01A               	goto	l8456
  7904  013238                     l8450:
  7905                           
  7906                           ;My_ST7032.c: 52: I2C_Send(*s++);
  7907  013238  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  7908  01323C  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  7909  013240  0E00               	movlw	low (__mediumconst shr (0+16))
  7910  013242  6EF8               	movwf	tblptru,c
  7911  013244  0E0E               	movlw	(high __ramtop+-1)
  7912  013246  64F7               	cpfsgt	tblptrh,c
  7913  013248  D003               	bra	u8477
  7914  01324A  0008               	tblrd		*
  7915  01324C  50F5               	movf	tablat,w,c
  7916  01324E  D005               	bra	u8470
  7917  013250                     u8477:
  7918  013250  CFF6 FFE9          	movff	tblptrl,fsr0l
  7919  013254  CFF7 FFEA          	movff	tblptrh,fsr0h
  7920  013258  50EF               	movf	indf0,w,c
  7921  01325A                     u8470:
  7922  01325A  ECF5  F09F         	call	_I2C_Send
  7923  01325E  0100               	movlb	0	; () banked
  7924  013260  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  7925  013262  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;My_ST7032.c: 53: _delay((unsigned long)((26)*(48000000/4000000.0)));
  7929  013264  0E68               	movlw	104
  7930  013266                     u9437:
  7931  013266  2EE8               	decfsz	wreg,f,c
  7932  013268  D7FE               	goto	u9437
  7933  01326A  D000               	goto	l8456
  7934  01326C                     l8456:
  7935  01326C  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  7936  013270  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  7937  013274  0E00               	movlw	low (__mediumconst shr (0+16))
  7938  013276  6EF8               	movwf	tblptru,c
  7939  013278  0E0E               	movlw	(high __ramtop+-1)
  7940  01327A  64F7               	cpfsgt	tblptrh,c
  7941  01327C  D003               	bra	u8487
  7942  01327E  0008               	tblrd		*
  7943  013280  50F5               	movf	tablat,w,c
  7944  013282  D005               	bra	u8480
  7945  013284                     u8487:
  7946  013284  CFF6 FFE9          	movff	tblptrl,fsr0l
  7947  013288  CFF7 FFEA          	movff	tblptrh,fsr0h
  7948  01328C  50EF               	movf	indf0,w,c
  7949  01328E                     u8480:
  7950  01328E  0900               	iorlw	0
  7951  013290  B4D8               	btfsc	status,2,c
  7952  013292  D002               	goto	l8458
  7953  013294  D7D1               	goto	l8450
  7954  013296  D000               	goto	l8458
  7955  013298                     l8458:
  7956                           
  7957                           ;My_ST7032.c: 54: }
  7958                           ;My_ST7032.c: 55: }
  7959                           ;My_ST7032.c: 56: I2C_Stop();
  7960  013298  EC33  F0A0         	call	_I2C_Stop	;wreg free
  7961  01329C  0012               	return		;funcret
  7962  01329E                     __end_of_I2C_LCD_Puts:
  7963                           	opt stack 0
  7964                           tblptru	equ	0xFF8
  7965                           tblptrh	equ	0xFF7
  7966                           tblptrl	equ	0xFF6
  7967                           tablat	equ	0xFF5
  7968                           prodh	equ	0xFF4
  7969                           prodl	equ	0xFF3
  7970                           intcon	equ	0xFF2
  7971                           indf0	equ	0xFEF
  7972                           postinc0	equ	0xFEE
  7973                           fsr0h	equ	0xFEA
  7974                           fsr0l	equ	0xFE9
  7975                           wreg	equ	0xFE8
  7976                           postinc1	equ	0xFE6
  7977                           postdec1	equ	0xFE5
  7978                           fsr1h	equ	0xFE2
  7979                           fsr1l	equ	0xFE1
  7980                           indf2	equ	0xFDF
  7981                           postinc2	equ	0xFDE
  7982                           postdec2	equ	0xFDD
  7983                           fsr2h	equ	0xFDA
  7984                           fsr2l	equ	0xFD9
  7985                           status	equ	0xFD8
  7986                           
  7987 ;; *************** function _hardware_init *****************
  7988 ;; Defined at:
  7989 ;;		line 71 in file "PIC18F27J53-test01.c"
  7990 ;; Parameters:    Size  Location     Type
  7991 ;;		None
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;		None               void
  7996 ;; Registers used:
  7997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8007 ;;Total ram usage:        0 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:   16
  8010 ;; This function calls:
  8011 ;;		_I2C_LCD_init
  8012 ;;		_I2C_init
  8013 ;;		_RTCC_init
  8014 ;;		_USB_init
  8015 ;;		_ringbuf_init
  8016 ;;		_timer0_init
  8017 ;;		_timer1_init
  8018 ;;		_timer3_init
  8019 ;; This function is called by:
  8020 ;;		_main
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text28
  8025  01303C                     __ptext28:
  8026                           	opt stack 0
  8027  01303C                     _hardware_init:
  8028                           	opt stack 14
  8029                           
  8030                           ;PIC18F27J53-test01.c: 72: OSCCONbits.IRCF = 7;
  8031                           
  8032                           ;incstack = 0
  8033  01303C  88D3               	bsf	4051,4,c	;volatile
  8034  01303E  8AD3               	bsf	4051,5,c	;volatile
  8035  013040  8CD3               	bsf	4051,6,c	;volatile
  8036                           
  8037                           ;PIC18F27J53-test01.c: 73: OSCTUNEbits.PLLEN = 1;
  8038  013042  8C9B               	bsf	3995,6,c	;volatile
  8039                           
  8040                           ;PIC18F27J53-test01.c: 74: OSCCONbits.SCS = 0;
  8041  013044  0EFC               	movlw	-4
  8042  013046  16D3               	andwf	4051,f,c	;volatile
  8043                           
  8044                           ;PIC18F27J53-test01.c: 75: TRISA = 0b00010000;
  8045  013048  0E10               	movlw	16
  8046  01304A  6E92               	movwf	3986,c	;volatile
  8047                           
  8048                           ;PIC18F27J53-test01.c: 76: TRISB = 0b00110000;
  8049  01304C  0E30               	movlw	48
  8050  01304E  6E93               	movwf	3987,c	;volatile
  8051                           
  8052                           ;PIC18F27J53-test01.c: 77: TRISC = 0b10110010;
  8053  013050  0EB2               	movlw	178
  8054  013052  6E94               	movwf	3988,c	;volatile
  8055                           
  8056                           ;PIC18F27J53-test01.c: 78: ANCON0 = 0b1111111;
  8057  013054  0E7F               	movlw	127
  8058  013056  010F               	movlb	15	; () banked
  8059  013058  6F48               	movwf	72,b	;volatile
  8060                           
  8061                           ;PIC18F27J53-test01.c: 79: ANCON1 = 0b1111111;
  8062  01305A  0E7F               	movlw	127
  8063  01305C  010F               	movlb	15	; () banked
  8064  01305E  6F49               	movwf	73,b	;volatile
  8065                           
  8066                           ; BSR set to: 15
  8067                           ;PIC18F27J53-test01.c: 80: INTCON2bits.RBPU = 0;
  8068  013060  9EF1               	bcf	intcon2,7,c	;volatile
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;PIC18F27J53-test01.c: 82: timer0_init(0);
  8072  013062  0E00               	movlw	0
  8073  013064  ECFD  F09D         	call	_timer0_init
  8074                           
  8075                           ;PIC18F27J53-test01.c: 83: timer1_init(0, 2);
  8076  013068  0E02               	movlw	2
  8077  01306A  0100               	movlb	0	; () banked
  8078  01306C  6F60               	movwf	timer1_init@clock_select& (0+255),b
  8079  01306E  0E00               	movlw	0
  8080  013070  EC47  F09D         	call	_timer1_init
  8081                           
  8082                           ;PIC18F27J53-test01.c: 84: timer3_init(2);
  8083  013074  0E02               	movlw	2
  8084  013076  EC4D  F09F         	call	_timer3_init
  8085                           
  8086                           ;PIC18F27J53-test01.c: 85: I2C_init();
  8087  01307A  EC2A  F0A0         	call	_I2C_init	;wreg free
  8088                           
  8089                           ;PIC18F27J53-test01.c: 86: I2C_LCD_init();
  8090  01307E  EC25  F09A         	call	_I2C_LCD_init	;wreg free
  8091                           
  8092                           ;PIC18F27J53-test01.c: 87: RTCC_init();
  8093  013082  ECBF  F09E         	call	_RTCC_init	;wreg free
  8094                           
  8095                           ;PIC18F27J53-test01.c: 89: USB_init();
  8096  013086  EC04  F008         	call	_USB_init	;wreg free
  8097                           
  8098                           ;PIC18F27J53-test01.c: 90: static uint8_t usbtx[2000];
  8099                           ;PIC18F27J53-test01.c: 91: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
  8100  01308A  0E74               	movlw	low _usb_tx
  8101  01308C  0100               	movlb	0	; () banked
  8102  01308E  6F60               	movwf	ringbuf_init@rb& (0+255),b
  8103  013090  0E01               	movlw	high _usb_tx
  8104  013092  0100               	movlb	0	; () banked
  8105  013094  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  8106  013096  0E64               	movlw	low hardware_init@usbtx
  8107  013098  0100               	movlb	0	; () banked
  8108  01309A  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  8109  01309C  0E03               	movlw	high hardware_init@usbtx
  8110  01309E  0100               	movlb	0	; () banked
  8111  0130A0  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  8112  0130A2  0E07               	movlw	7
  8113  0130A4  0100               	movlb	0	; () banked
  8114  0130A6  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  8115  0130A8  0ED0               	movlw	208
  8116  0130AA  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  8117  0130AC  EC1D  F09D         	call	_ringbuf_init	;wreg free
  8118                           
  8119                           ;PIC18F27J53-test01.c: 92: static uint8_t usbrx[100];
  8120                           ;PIC18F27J53-test01.c: 93: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
  8121  0130B0  0E6C               	movlw	low _usb_rx
  8122  0130B2  0100               	movlb	0	; () banked
  8123  0130B4  6F60               	movwf	ringbuf_init@rb& (0+255),b
  8124  0130B6  0E01               	movlw	high _usb_rx
  8125  0130B8  0100               	movlb	0	; () banked
  8126  0130BA  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  8127  0130BC  0E00               	movlw	low hardware_init@usbrx
  8128  0130BE  0100               	movlb	0	; () banked
  8129  0130C0  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  8130  0130C2  0E03               	movlw	high hardware_init@usbrx
  8131  0130C4  0100               	movlb	0	; () banked
  8132  0130C6  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  8133  0130C8  0E00               	movlw	0
  8134  0130CA  0100               	movlb	0	; () banked
  8135  0130CC  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  8136  0130CE  0E64               	movlw	100
  8137  0130D0  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  8138  0130D2  EC1D  F09D         	call	_ringbuf_init	;wreg free
  8139  0130D6  0012               	return		;funcret
  8140  0130D8                     __end_of_hardware_init:
  8141                           	opt stack 0
  8142                           tblptru	equ	0xFF8
  8143                           tblptrh	equ	0xFF7
  8144                           tblptrl	equ	0xFF6
  8145                           tablat	equ	0xFF5
  8146                           prodh	equ	0xFF4
  8147                           prodl	equ	0xFF3
  8148                           intcon	equ	0xFF2
  8149                           intcon2	equ	0xFF1
  8150                           indf0	equ	0xFEF
  8151                           postinc0	equ	0xFEE
  8152                           fsr0h	equ	0xFEA
  8153                           fsr0l	equ	0xFE9
  8154                           wreg	equ	0xFE8
  8155                           postinc1	equ	0xFE6
  8156                           postdec1	equ	0xFE5
  8157                           fsr1h	equ	0xFE2
  8158                           fsr1l	equ	0xFE1
  8159                           indf2	equ	0xFDF
  8160                           postinc2	equ	0xFDE
  8161                           postdec2	equ	0xFDD
  8162                           fsr2h	equ	0xFDA
  8163                           fsr2l	equ	0xFD9
  8164                           status	equ	0xFD8
  8165                           
  8166 ;; *************** function _timer3_init *****************
  8167 ;; Defined at:
  8168 ;;		line 72 in file "../My_library/My_PIC.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  prescaler       1    wreg     unsigned char 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;  prescaler       1    1[BANK0 ] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;		None               void
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8186 ;;Total ram usage:        2 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:   11
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_hardware_init
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text29
  8197  013E9A                     __ptext29:
  8198                           	opt stack 0
  8199  013E9A                     _timer3_init:
  8200                           	opt stack 18
  8201                           
  8202                           ;incstack = 0
  8203                           ;timer3_init@prescaler stored from wreg
  8204  013E9A  0100               	movlb	0	; () banked
  8205  013E9C  6F61               	movwf	timer3_init@prescaler& (0+255),b
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;My_PIC.c: 73: T3CONbits.TMR3CS = 0;
  8209  013E9E  0E3F               	movlw	-193
  8210  013EA0  1679               	andwf	3961,f,c	;volatile
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;My_PIC.c: 74: T3CONbits.T3OSCEN = 0;
  8214  013EA2  9679               	bcf	3961,3,c	;volatile
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;My_PIC.c: 75: T3CONbits.T3CKPS = prescaler;
  8218  013EA4  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
  8219  013EA8  0100               	movlb	0	; () banked
  8220  013EAA  3B60               	swapf	??_timer3_init& (0+255),f,b
  8221  013EAC  5079               	movf	3961,w,c	;volatile
  8222  013EAE  0100               	movlb	0	; () banked
  8223  013EB0  1960               	xorwf	??_timer3_init& (0+255),w,b
  8224  013EB2  0BCF               	andlw	-49
  8225  013EB4  1960               	xorwf	??_timer3_init& (0+255),w,b
  8226  013EB6  6E79               	movwf	3961,c	;volatile
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;My_PIC.c: 76: T3CONbits.RD163 = 0;
  8230  013EB8  9E79               	bcf	3961,7,c	;volatile
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;My_PIC.c: 77: T3CONbits.TMR3ON = 1;
  8234  013EBA  8079               	bsf	3961,0,c	;volatile
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;My_PIC.c: 78: IPR2bits.TMR3IP = 0;
  8238  013EBC  92A2               	bcf	4002,1,c	;volatile
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;My_PIC.c: 79: PIR2bits.TMR3IF = 0;
  8242  013EBE  92A1               	bcf	4001,1,c	;volatile
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;My_PIC.c: 80: PIE2bits.TMR3IE = 1;
  8246  013EC0  82A0               	bsf	4000,1,c	;volatile
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;My_PIC.c: 81: INTCONbits.PEIE = 1;
  8250  013EC2  8CF2               	bsf	intcon,6,c	;volatile
  8251                           
  8252                           ; BSR set to: 0
  8253  013EC4  0012               	return		;funcret
  8254  013EC6                     __end_of_timer3_init:
  8255                           	opt stack 0
  8256                           tblptru	equ	0xFF8
  8257                           tblptrh	equ	0xFF7
  8258                           tblptrl	equ	0xFF6
  8259                           tablat	equ	0xFF5
  8260                           prodh	equ	0xFF4
  8261                           prodl	equ	0xFF3
  8262                           intcon	equ	0xFF2
  8263                           intcon2	equ	0xFF1
  8264                           indf0	equ	0xFEF
  8265                           postinc0	equ	0xFEE
  8266                           fsr0h	equ	0xFEA
  8267                           fsr0l	equ	0xFE9
  8268                           wreg	equ	0xFE8
  8269                           postinc1	equ	0xFE6
  8270                           postdec1	equ	0xFE5
  8271                           fsr1h	equ	0xFE2
  8272                           fsr1l	equ	0xFE1
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function _timer1_init *****************
  8281 ;; Defined at:
  8282 ;;		line 41 in file "../My_library/My_PIC.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  prescaler       1    wreg     unsigned char 
  8285 ;;  clock_select    1    0[BANK0 ] unsigned char 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  prescaler       1    2[BANK0 ] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;		None               void
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8297 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;Total ram usage:        3 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:   11
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_hardware_init
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text30
  8312  013A8E                     __ptext30:
  8313                           	opt stack 0
  8314  013A8E                     _timer1_init:
  8315                           	opt stack 18
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;incstack = 0
  8319                           ;timer1_init@prescaler stored from wreg
  8320  013A8E  0100               	movlb	0	; () banked
  8321  013A90  6F62               	movwf	timer1_init@prescaler& (0+255),b
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;My_PIC.c: 42: T1CONbits.TMR1CS = clock_select;
  8325  013A92  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
  8326  013A96  0100               	movlb	0	; () banked
  8327  013A98  3B61               	swapf	??_timer1_init& (0+255),f,b
  8328  013A9A  4761               	rlncf	??_timer1_init& (0+255),f,b
  8329  013A9C  4761               	rlncf	??_timer1_init& (0+255),f,b
  8330  013A9E  50CD               	movf	4045,w,c	;volatile
  8331  013AA0  0100               	movlb	0	; () banked
  8332  013AA2  1961               	xorwf	??_timer1_init& (0+255),w,b
  8333  013AA4  0B3F               	andlw	-193
  8334  013AA6  1961               	xorwf	??_timer1_init& (0+255),w,b
  8335  013AA8  6ECD               	movwf	4045,c	;volatile
  8336                           
  8337                           ;My_PIC.c: 43: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  8338  013AAA  0E02               	movlw	2
  8339  013AAC  0100               	movlb	0	; () banked
  8340  013AAE  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
  8341  013AB0  A4D8               	btfss	status,2,c
  8342  013AB2  D002               	goto	l755
  8343                           
  8344                           ; BSR set to: 0
  8345  013AB4  86CD               	bsf	4045,3,c	;volatile
  8346  013AB6  D002               	goto	l8588
  8347  013AB8                     l755:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;My_PIC.c: 44: else T1CONbits.T1OSCEN = 0;
  8351  013AB8  96CD               	bcf	4045,3,c	;volatile
  8352  013ABA  D000               	goto	l8588
  8353  013ABC                     l8588:
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;My_PIC.c: 45: T1CONbits.T1CKPS = prescaler;
  8357  013ABC  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
  8358  013AC0  0100               	movlb	0	; () banked
  8359  013AC2  3B61               	swapf	??_timer1_init& (0+255),f,b
  8360  013AC4  50CD               	movf	4045,w,c	;volatile
  8361  013AC6  0100               	movlb	0	; () banked
  8362  013AC8  1961               	xorwf	??_timer1_init& (0+255),w,b
  8363  013ACA  0BCF               	andlw	-49
  8364  013ACC  1961               	xorwf	??_timer1_init& (0+255),w,b
  8365  013ACE  6ECD               	movwf	4045,c	;volatile
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;My_PIC.c: 46: T1CONbits.nT1SYNC = 1;
  8369  013AD0  84CD               	bsf	4045,2,c	;volatile
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;My_PIC.c: 47: T1CONbits.RD16 = 0;
  8373  013AD2  92CD               	bcf	4045,1,c	;volatile
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;My_PIC.c: 48: T1CONbits.TMR1ON = 1;
  8377  013AD4  80CD               	bsf	4045,0,c	;volatile
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;My_PIC.c: 49: IPR1bits.TMR1IP = 0;
  8381  013AD6  909F               	bcf	3999,0,c	;volatile
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;My_PIC.c: 50: PIR1bits.TMR1IF = 0;
  8385  013AD8  909E               	bcf	3998,0,c	;volatile
  8386                           
  8387                           ; BSR set to: 0
  8388                           ;My_PIC.c: 51: PIE1bits.TMR1IE = 1;
  8389  013ADA  809D               	bsf	3997,0,c	;volatile
  8390                           
  8391                           ; BSR set to: 0
  8392                           ;My_PIC.c: 52: INTCONbits.PEIE = 1;
  8393  013ADC  8CF2               	bsf	intcon,6,c	;volatile
  8394                           
  8395                           ; BSR set to: 0
  8396  013ADE  0012               	return		;funcret
  8397  013AE0                     __end_of_timer1_init:
  8398                           	opt stack 0
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           intcon	equ	0xFF2
  8406                           intcon2	equ	0xFF1
  8407                           indf0	equ	0xFEF
  8408                           postinc0	equ	0xFEE
  8409                           fsr0h	equ	0xFEA
  8410                           fsr0l	equ	0xFE9
  8411                           wreg	equ	0xFE8
  8412                           postinc1	equ	0xFE6
  8413                           postdec1	equ	0xFE5
  8414                           fsr1h	equ	0xFE2
  8415                           fsr1l	equ	0xFE1
  8416                           indf2	equ	0xFDF
  8417                           postinc2	equ	0xFDE
  8418                           postdec2	equ	0xFDD
  8419                           fsr2h	equ	0xFDA
  8420                           fsr2l	equ	0xFD9
  8421                           status	equ	0xFD8
  8422                           
  8423 ;; *************** function _timer0_init *****************
  8424 ;; Defined at:
  8425 ;;		line 6 in file "../My_library/My_PIC.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  prescaler       1    wreg     unsigned char 
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  prescaler       1    1[BANK0 ] unsigned char 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;		None               void
  8432 ;; Registers used:
  8433 ;;		wreg, status,2, status,0
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8443 ;;Total ram usage:        2 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:   11
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_hardware_init
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453                           	psect	text31
  8454  013BFA                     __ptext31:
  8455                           	opt stack 0
  8456  013BFA                     _timer0_init:
  8457                           	opt stack 18
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;incstack = 0
  8461                           ;timer0_init@prescaler stored from wreg
  8462  013BFA  0100               	movlb	0	; () banked
  8463  013BFC  6F61               	movwf	timer0_init@prescaler& (0+255),b
  8464                           
  8465                           ; BSR set to: 0
  8466                           ;My_PIC.c: 7: T0CONbits.TMR0ON = 1;
  8467  013BFE  8ED5               	bsf	4053,7,c	;volatile
  8468                           
  8469                           ;My_PIC.c: 8: T0CONbits.T08BIT = 1;
  8470  013C00  8CD5               	bsf	4053,6,c	;volatile
  8471                           
  8472                           ;My_PIC.c: 9: T0CONbits.T0CS = 0;
  8473  013C02  9AD5               	bcf	4053,5,c	;volatile
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;My_PIC.c: 10: if (prescaler == 0) {
  8477  013C04  0100               	movlb	0	; () banked
  8478  013C06  5161               	movf	timer0_init@prescaler& (0+255),w,b
  8479  013C08  0100               	movlb	0	; () banked
  8480  013C0A  A4D8               	btfss	status,2,c
  8481  013C0C  D002               	goto	l750
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;My_PIC.c: 11: T0CONbits.PSA = 1;
  8485  013C0E  86D5               	bsf	4053,3,c	;volatile
  8486                           
  8487                           ;My_PIC.c: 12: } else {
  8488  013C10  D00D               	goto	l8576
  8489  013C12                     l750:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;My_PIC.c: 13: T0CONbits.PSA = 0;
  8493  013C12  96D5               	bcf	4053,3,c	;volatile
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;My_PIC.c: 14: T0CONbits.T0PS = prescaler - 1;
  8497  013C14  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
  8498  013C18  0EFF               	movlw	255
  8499  013C1A  0100               	movlb	0	; () banked
  8500  013C1C  2760               	addwf	??_timer0_init& (0+255),f,b
  8501  013C1E  50D5               	movf	4053,w,c	;volatile
  8502  013C20  0100               	movlb	0	; () banked
  8503  013C22  1960               	xorwf	??_timer0_init& (0+255),w,b
  8504  013C24  0BF8               	andlw	-8
  8505  013C26  1960               	xorwf	??_timer0_init& (0+255),w,b
  8506  013C28  6ED5               	movwf	4053,c	;volatile
  8507  013C2A  D000               	goto	l8576
  8508  013C2C                     l8576:
  8509                           
  8510                           ; BSR set to: 0
  8511                           ;My_PIC.c: 15: }
  8512                           ;My_PIC.c: 16: INTCONbits.T0IE = 1;
  8513  013C2C  8AF2               	bsf	intcon,5,c	;volatile
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;My_PIC.c: 17: INTCONbits.TMR0IF = 0;
  8517  013C2E  94F2               	bcf	intcon,2,c	;volatile
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;My_PIC.c: 18: INTCON2bits.TMR0IP = 0;
  8521  013C30  94F1               	bcf	intcon2,2,c	;volatile
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;My_PIC.c: 19: INTCONbits.PEIE = 1;
  8525  013C32  8CF2               	bsf	intcon,6,c	;volatile
  8526                           
  8527                           ; BSR set to: 0
  8528  013C34  0012               	return		;funcret
  8529  013C36                     __end_of_timer0_init:
  8530                           	opt stack 0
  8531                           tblptru	equ	0xFF8
  8532                           tblptrh	equ	0xFF7
  8533                           tblptrl	equ	0xFF6
  8534                           tablat	equ	0xFF5
  8535                           prodh	equ	0xFF4
  8536                           prodl	equ	0xFF3
  8537                           intcon	equ	0xFF2
  8538                           intcon2	equ	0xFF1
  8539                           indf0	equ	0xFEF
  8540                           postinc0	equ	0xFEE
  8541                           fsr0h	equ	0xFEA
  8542                           fsr0l	equ	0xFE9
  8543                           wreg	equ	0xFE8
  8544                           postinc1	equ	0xFE6
  8545                           postdec1	equ	0xFE5
  8546                           fsr1h	equ	0xFE2
  8547                           fsr1l	equ	0xFE1
  8548                           indf2	equ	0xFDF
  8549                           postinc2	equ	0xFDE
  8550                           postdec2	equ	0xFDD
  8551                           fsr2h	equ	0xFDA
  8552                           fsr2l	equ	0xFD9
  8553                           status	equ	0xFD8
  8554                           
  8555 ;; *************** function _ringbuf_init *****************
  8556 ;; Defined at:
  8557 ;;		line 5 in file "../My_library/My_ringbuf.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  8560 ;;		 -> terminal_loop@command(8), usb_tx(8), usb_rx(8), 
  8561 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
  8562 ;;		 -> hardware_init@usbrx(100), hardware_init@usbtx(2000), terminal_loop@buf(100), 
  8563 ;;  bufsize         2    4[BANK0 ] unsigned int 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;		None               void
  8568 ;; Registers used:
  8569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8575 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8578 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;Total ram usage:        6 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:   11
  8582 ;; This function calls:
  8583 ;;		Nothing
  8584 ;; This function is called by:
  8585 ;;		_terminal_loop
  8586 ;;		_hardware_init
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text32
  8591  013A3A                     __ptext32:
  8592                           	opt stack 0
  8593  013A3A                     _ringbuf_init:
  8594                           	opt stack 18
  8595                           
  8596                           ;My_ringbuf.c: 6: rb->buf = internal_buf;
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;incstack = 0
  8600  013A3A  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
  8601  013A3E  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  8602  013A42  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  8603  013A46  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  8604                           
  8605                           ;My_ringbuf.c: 7: rb->size = bufsize;
  8606  013A4A  0100               	movlb	0	; () banked
  8607  013A4C  EE20 F002          	lfsr	2,2
  8608  013A50  5160               	movf	ringbuf_init@rb& (0+255),w,b
  8609  013A52  26D9               	addwf	fsr2l,f,c
  8610  013A54  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  8611  013A56  22DA               	addwfc	fsr2h,f,c
  8612  013A58  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
  8613  013A5C  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
  8614                           
  8615                           ; BSR set to: 0
  8616                           ;My_ringbuf.c: 8: rb->head = 0;
  8617  013A60  0100               	movlb	0	; () banked
  8618  013A62  EE20 F004          	lfsr	2,4
  8619  013A66  5160               	movf	ringbuf_init@rb& (0+255),w,b
  8620  013A68  26D9               	addwf	fsr2l,f,c
  8621  013A6A  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  8622  013A6C  22DA               	addwfc	fsr2h,f,c
  8623  013A6E  0E00               	movlw	0
  8624  013A70  6EDE               	movwf	postinc2,c
  8625  013A72  0E00               	movlw	0
  8626  013A74  6EDD               	movwf	postdec2,c
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;My_ringbuf.c: 9: rb->tail = 0;
  8630  013A76  0100               	movlb	0	; () banked
  8631  013A78  EE20 F006          	lfsr	2,6
  8632  013A7C  5160               	movf	ringbuf_init@rb& (0+255),w,b
  8633  013A7E  26D9               	addwf	fsr2l,f,c
  8634  013A80  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
  8635  013A82  22DA               	addwfc	fsr2h,f,c
  8636  013A84  0E00               	movlw	0
  8637  013A86  6EDE               	movwf	postinc2,c
  8638  013A88  0E00               	movlw	0
  8639  013A8A  6EDD               	movwf	postdec2,c
  8640                           
  8641                           ; BSR set to: 0
  8642  013A8C  0012               	return		;funcret
  8643  013A8E                     __end_of_ringbuf_init:
  8644                           	opt stack 0
  8645                           tblptru	equ	0xFF8
  8646                           tblptrh	equ	0xFF7
  8647                           tblptrl	equ	0xFF6
  8648                           tablat	equ	0xFF5
  8649                           prodh	equ	0xFF4
  8650                           prodl	equ	0xFF3
  8651                           intcon	equ	0xFF2
  8652                           intcon2	equ	0xFF1
  8653                           indf0	equ	0xFEF
  8654                           postinc0	equ	0xFEE
  8655                           fsr0h	equ	0xFEA
  8656                           fsr0l	equ	0xFE9
  8657                           wreg	equ	0xFE8
  8658                           postinc1	equ	0xFE6
  8659                           postdec1	equ	0xFE5
  8660                           fsr1h	equ	0xFE2
  8661                           fsr1l	equ	0xFE1
  8662                           indf2	equ	0xFDF
  8663                           postinc2	equ	0xFDE
  8664                           postdec2	equ	0xFDD
  8665                           fsr2h	equ	0xFDA
  8666                           fsr2l	equ	0xFD9
  8667                           status	equ	0xFD8
  8668                           
  8669 ;; *************** function _USB_init *****************
  8670 ;; Defined at:
  8671 ;;		line 11 in file "../My_library/usb_cdc/My_usb_cdc.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;		None               void
  8678 ;; Registers used:
  8679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:   13
  8692 ;; This function calls:
  8693 ;;		_USBDeviceAttach
  8694 ;;		_USBDeviceInit
  8695 ;; This function is called by:
  8696 ;;		_hardware_init
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text33
  8701  001008                     __ptext33:
  8702                           	opt stack 0
  8703  001008                     _USB_init:
  8704                           	opt stack 16
  8705                           
  8706                           ;My_usb_cdc.c: 12: USBDeviceInit();
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;incstack = 0
  8710  001008  ECFB  F08A         	call	_USBDeviceInit	;wreg free
  8711                           
  8712                           ;My_usb_cdc.c: 13: USBDeviceAttach();
  8713  00100C  EC1B  F09E         	call	_USBDeviceAttach	;wreg free
  8714  001010  0012               	return		;funcret
  8715  001012                     __end_of_USB_init:
  8716                           	opt stack 0
  8717                           tblptru	equ	0xFF8
  8718                           tblptrh	equ	0xFF7
  8719                           tblptrl	equ	0xFF6
  8720                           tablat	equ	0xFF5
  8721                           prodh	equ	0xFF4
  8722                           prodl	equ	0xFF3
  8723                           intcon	equ	0xFF2
  8724                           intcon2	equ	0xFF1
  8725                           indf0	equ	0xFEF
  8726                           postinc0	equ	0xFEE
  8727                           fsr0h	equ	0xFEA
  8728                           fsr0l	equ	0xFE9
  8729                           wreg	equ	0xFE8
  8730                           postinc1	equ	0xFE6
  8731                           postdec1	equ	0xFE5
  8732                           fsr1h	equ	0xFE2
  8733                           fsr1l	equ	0xFE1
  8734                           indf2	equ	0xFDF
  8735                           postinc2	equ	0xFDE
  8736                           postdec2	equ	0xFDD
  8737                           fsr2h	equ	0xFDA
  8738                           fsr2l	equ	0xFD9
  8739                           status	equ	0xFD8
  8740                           
  8741 ;; *************** function _USBDeviceInit *****************
  8742 ;; Defined at:
  8743 ;;		line 298 in file "../My_library/usb_cdc/usb/usb_device.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;  i               1    8[BANK0 ] unsigned char 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;		None               void
  8750 ;; Registers used:
  8751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;Total ram usage:        1 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:   12
  8764 ;; This function calls:
  8765 ;;		_memset
  8766 ;; This function is called by:
  8767 ;;		_USB_init
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text34
  8772  0115F6                     __ptext34:
  8773                           	opt stack 0
  8774  0115F6                     _USBDeviceInit:
  8775                           	opt stack 16
  8776                           
  8777                           ;usb_device.c: 300: uint8_t i;
  8778                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  8779                           
  8780                           ;incstack = 0
  8781  0115F6  98A0               	bcf	4000,4,c	;volatile
  8782                           
  8783                           ;usb_device.c: 305: {UEIR = 0;};
  8784  0115F8  0E00               	movlw	0
  8785  0115FA  6E63               	movwf	3939,c	;volatile
  8786                           
  8787                           ;usb_device.c: 308: {UIR = 0;};
  8788  0115FC  0E00               	movlw	0
  8789  0115FE  6E62               	movwf	3938,c	;volatile
  8790                           
  8791                           ;usb_device.c: 311: UEP0 = 0;
  8792  011600  0E00               	movlw	0
  8793  011602  010F               	movlb	15	; () banked
  8794  011604  6F26               	movwf	38,b	;volatile
  8795                           
  8796                           ; BSR set to: 15
  8797                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  8798  011606  0E27               	movlw	39
  8799  011608  0100               	movlb	0	; () banked
  8800  01160A  6F60               	movwf	memset@p1& (0+255),b
  8801  01160C  0E0F               	movlw	15
  8802  01160E  0100               	movlb	0	; () banked
  8803  011610  6F61               	movwf	(memset@p1+1)& (0+255),b
  8804  011612  0E00               	movlw	0
  8805  011614  0100               	movlb	0	; () banked
  8806  011616  6F63               	movwf	(memset@c+1)& (0+255),b
  8807  011618  0E00               	movlw	0
  8808  01161A  6F62               	movwf	memset@c& (0+255),b
  8809  01161C  0E00               	movlw	0
  8810  01161E  0100               	movlb	0	; () banked
  8811  011620  6F65               	movwf	(memset@n+1)& (0+255),b
  8812  011622  0E02               	movlw	2
  8813  011624  6F64               	movwf	memset@n& (0+255),b
  8814  011626  EC70  F09E         	call	_memset	;wreg free
  8815                           
  8816                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  8817  01162A  0E16               	movlw	22
  8818  01162C  010F               	movlb	15	; () banked
  8819  01162E  6F39               	movwf	57,b	;volatile
  8820                           
  8821                           ; BSR set to: 15
  8822  011630  0E9F               	movlw	159
  8823  011632  010F               	movlb	15	; () banked
  8824  011634  6F37               	movwf	55,b	;volatile
  8825                           
  8826                           ; BSR set to: 15
  8827  011636  0E7B               	movlw	123
  8828  011638  010F               	movlb	15	; () banked
  8829  01163A  6F36               	movwf	54,b	;volatile
  8830                           
  8831                           ; BSR set to: 15
  8832                           ;usb_device.c: 318: ;
  8833                           ;usb_device.c: 321: ;
  8834                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  8835  01163C  0E00               	movlw	0
  8836  01163E  0100               	movlb	0	; () banked
  8837  011640  6F68               	movwf	USBDeviceInit@i& (0+255),b
  8838  011642  D010               	goto	l8254
  8839                           
  8840                           ; BSR set to: 0
  8841                           
  8842                           ; BSR set to: 0
  8843  011644  D013               	goto	l132
  8844  011646                     l8250:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;usb_device.c: 325: {
  8848                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  8849  011646  0100               	movlb	0	; () banked
  8850  011648  5168               	movf	USBDeviceInit@i& (0+255),w,b
  8851  01164A  0D04               	mullw	4
  8852  01164C  0E00               	movlw	0
  8853  01164E  24F3               	addwf	prodl,w,c
  8854  011650  6ED9               	movwf	fsr2l,c
  8855  011652  0E0D               	movlw	13
  8856  011654  20F4               	addwfc	prodh,w,c
  8857  011656  6EDA               	movwf	fsr2h,c
  8858  011658  6ADE               	clrf	postinc2,c
  8859  01165A  6ADE               	clrf	postinc2,c
  8860  01165C  6ADE               	clrf	postinc2,c
  8861  01165E  6ADD               	clrf	postdec2,c
  8862                           
  8863                           ; BSR set to: 0
  8864  011660  0100               	movlb	0	; () banked
  8865  011662  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  8866  011664                     l8254:
  8867                           
  8868                           ; BSR set to: 0
  8869  011664  0E0B               	movlw	11
  8870  011666  0100               	movlb	0	; () banked
  8871  011668  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  8872  01166A  D7ED               	goto	l8250
  8873  01166C                     l132:
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;usb_device.c: 327: }
  8877                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
  8878  01166C  8C65               	bsf	3941,6,c	;volatile
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;usb_device.c: 333: UADDR = 0x00;
  8882  01166E  0E00               	movlw	0
  8883  011670  010F               	movlb	15	; () banked
  8884  011672  6F38               	movwf	56,b	;volatile
  8885                           
  8886                           ; BSR set to: 15
  8887                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
  8888  011674  9865               	bcf	3941,4,c	;volatile
  8889                           
  8890                           ; BSR set to: 15
  8891                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
  8892  011676  9C65               	bcf	3941,6,c	;volatile
  8893                           
  8894                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
  8895  011678  D00A               	goto	l8270
  8896  01167A                     l8262:
  8897                           
  8898                           ;usb_device.c: 343: {
  8899                           ;usb_device.c: 344: (UIR &= 0xF7);
  8900  01167A  9662               	bcf	3938,3,c	;volatile
  8901                           
  8902                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
  8903  01167C  0E00               	movlw	0
  8904  01167E  6E28               	movwf	_inPipes+3,c	;volatile
  8905                           
  8906                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
  8907  011680  0E00               	movlw	0
  8908  011682  6E04               	movwf	_outPipes+3,c	;volatile
  8909                           
  8910                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
  8911  011684  0E00               	movlw	0
  8912  011686  6E06               	movwf	_outPipes+5,c	;volatile
  8913  011688  0E00               	movlw	0
  8914  01168A  6E05               	movwf	_outPipes+4,c	;volatile
  8915  01168C  D000               	goto	l8270
  8916  01168E                     l8270:
  8917  01168E  B662               	btfsc	3938,3,c	;volatile
  8918  011690  D7F4               	goto	l8262
  8919                           
  8920                           ;usb_device.c: 349: }
  8921                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
  8922  011692  0E01               	movlw	1
  8923  011694  6E1E               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  8924                           
  8925                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
  8926  011696  0E01               	movlw	1
  8927  011698  6E1F               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  8928                           
  8929                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
  8930  01169A  0E00               	movlw	0
  8931  01169C  6E1A               	movwf	_USBDeferINDataStagePackets,c	;volatile
  8932                           
  8933                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
  8934  01169E  0E00               	movlw	0
  8935  0116A0  6E1B               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  8936                           
  8937                           ;usb_device.c: 358: USBBusIsSuspended = 0;
  8938  0116A2  0E00               	movlw	0
  8939  0116A4  6E19               	movwf	_USBBusIsSuspended,c	;volatile
  8940                           
  8941                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
  8942  0116A6  0E00               	movlw	0
  8943  0116A8  0100               	movlb	0	; () banked
  8944  0116AA  6F68               	movwf	USBDeviceInit@i& (0+255),b
  8945  0116AC                     l8274:
  8946                           
  8947                           ; BSR set to: 0
  8948  0116AC  0E02               	movlw	2
  8949  0116AE  0100               	movlb	0	; () banked
  8950  0116B0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  8951  0116B2  D001               	goto	l8278
  8952                           
  8953                           ; BSR set to: 0
  8954  0116B4  D033               	goto	l8284
  8955  0116B6                     l8278:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 363: {
  8959                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
  8960  0116B6  0100               	movlb	0	; () banked
  8961  0116B8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  8962  0116BA  0D02               	mullw	2
  8963  0116BC  0E0A               	movlw	low _pBDTEntryIn
  8964  0116BE  24F3               	addwf	prodl,w,c
  8965  0116C0  6ED9               	movwf	fsr2l,c
  8966  0116C2  0E00               	movlw	high _pBDTEntryIn
  8967  0116C4  20F4               	addwfc	prodh,w,c
  8968  0116C6  6EDA               	movwf	fsr2h,c
  8969  0116C8  0E00               	movlw	0
  8970  0116CA  6EDE               	movwf	postinc2,c
  8971  0116CC  0E00               	movlw	0
  8972  0116CE  6EDD               	movwf	postdec2,c
  8973                           
  8974                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
  8975  0116D0  0100               	movlb	0	; () banked
  8976  0116D2  5168               	movf	USBDeviceInit@i& (0+255),w,b
  8977  0116D4  0D02               	mullw	2
  8978  0116D6  0ECF               	movlw	low _pBDTEntryOut
  8979  0116D8  24F3               	addwf	prodl,w,c
  8980  0116DA  6ED9               	movwf	fsr2l,c
  8981  0116DC  0E00               	movlw	high _pBDTEntryOut
  8982  0116DE  20F4               	addwfc	prodh,w,c
  8983  0116E0  6EDA               	movwf	fsr2h,c
  8984  0116E2  0E00               	movlw	0
  8985  0116E4  6EDE               	movwf	postinc2,c
  8986  0116E6  0E00               	movlw	0
  8987  0116E8  6EDD               	movwf	postdec2,c
  8988                           
  8989                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
  8990  0116EA  0100               	movlb	0	; () banked
  8991  0116EC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  8992  0116EE  0D01               	mullw	1
  8993  0116F0  0E10               	movlw	low _ep_data_in
  8994  0116F2  24F3               	addwf	prodl,w,c
  8995  0116F4  6ED9               	movwf	fsr2l,c
  8996  0116F6  0E00               	movlw	high _ep_data_in
  8997  0116F8  20F4               	addwfc	prodh,w,c
  8998  0116FA  6EDA               	movwf	fsr2h,c
  8999  0116FC  0E00               	movlw	0
  9000  0116FE  6EDF               	movwf	indf2,c
  9001                           
  9002                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
  9003  011700  0100               	movlb	0	; () banked
  9004  011702  5168               	movf	USBDeviceInit@i& (0+255),w,b
  9005  011704  0D01               	mullw	1
  9006  011706  0ED5               	movlw	low _ep_data_out
  9007  011708  24F3               	addwf	prodl,w,c
  9008  01170A  6ED9               	movwf	fsr2l,c
  9009  01170C  0E00               	movlw	high _ep_data_out
  9010  01170E  20F4               	addwfc	prodh,w,c
  9011  011710  6EDA               	movwf	fsr2h,c
  9012  011712  0E00               	movlw	0
  9013  011714  6EDF               	movwf	indf2,c
  9014                           
  9015                           ; BSR set to: 0
  9016  011716  0100               	movlb	0	; () banked
  9017  011718  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  9018  01171A  D7C8               	goto	l8274
  9019  01171C                     l8284:
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;usb_device.c: 368: }
  9023                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  9024  01171C  0E08               	movlw	8
  9025  01171E  6E0A               	movwf	_pBDTEntryIn,c
  9026  011720  0E0D               	movlw	13
  9027  011722  6E0B               	movwf	_pBDTEntryIn+1,c
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
  9031  011724  0E16               	movlw	22
  9032  011726  010F               	movlb	15	; () banked
  9033  011728  6F26               	movwf	38,b	;volatile
  9034                           
  9035                           ; BSR set to: 15
  9036                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  9037  01172A  0E0D               	movlw	13
  9038  01172C  010D               	movlb	13	; () banked
  9039  01172E  6F03               	movwf	3,b	;volatile
  9040  011730  0E30               	movlw	48
  9041  011732  6F02               	movwf	2,b	;volatile
  9042                           
  9043                           ; BSR set to: 13
  9044                           ;usb_device.c: 376: BDT[0].CNT = 8;
  9045  011734  0E08               	movlw	8
  9046  011736  010D               	movlb	13	; () banked
  9047  011738  6F01               	movwf	1,b	;volatile
  9048                           
  9049                           ; BSR set to: 13
  9050                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
  9051  01173A  0E04               	movlw	4
  9052  01173C  010D               	movlb	13	; () banked
  9053  01173E  6F00               	movwf	0,b	;volatile
  9054                           
  9055                           ; BSR set to: 13
  9056                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
  9057  011740  010D               	movlb	13	; () banked
  9058  011742  8F00               	bsf	0,7,b	;volatile
  9059                           
  9060                           ; BSR set to: 13
  9061                           ;usb_device.c: 381: USBActiveConfiguration = 0;
  9062  011744  0E00               	movlw	0
  9063  011746  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
  9064                           
  9065                           ; BSR set to: 13
  9066                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
  9067  011748  0E00               	movlw	0
  9068  01174A  6E1D               	movwf	_USBDeviceState,c	;volatile
  9069                           
  9070                           ; BSR set to: 13
  9071  01174C  0012               	return		;funcret
  9072  01174E                     __end_of_USBDeviceInit:
  9073                           	opt stack 0
  9074                           tblptru	equ	0xFF8
  9075                           tblptrh	equ	0xFF7
  9076                           tblptrl	equ	0xFF6
  9077                           tablat	equ	0xFF5
  9078                           prodh	equ	0xFF4
  9079                           prodl	equ	0xFF3
  9080                           intcon	equ	0xFF2
  9081                           intcon2	equ	0xFF1
  9082                           indf0	equ	0xFEF
  9083                           postinc0	equ	0xFEE
  9084                           fsr0h	equ	0xFEA
  9085                           fsr0l	equ	0xFE9
  9086                           wreg	equ	0xFE8
  9087                           postinc1	equ	0xFE6
  9088                           postdec1	equ	0xFE5
  9089                           fsr1h	equ	0xFE2
  9090                           fsr1l	equ	0xFE1
  9091                           indf2	equ	0xFDF
  9092                           postinc2	equ	0xFDE
  9093                           postdec2	equ	0xFDD
  9094                           fsr2h	equ	0xFDA
  9095                           fsr2l	equ	0xFD9
  9096                           status	equ	0xFD8
  9097                           
  9098 ;; *************** function _memset *****************
  9099 ;; Defined at:
  9100 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  p1              2    0[BANK0 ] PTR void 
  9103 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  9104 ;;  c               2    2[BANK0 ] int 
  9105 ;;  n               2    4[BANK0 ] unsigned int 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  p               2    6[BANK0 ] PTR unsigned char 
  9108 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  2    0[BANK0 ] PTR void 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9118 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;Total ram usage:        8 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:   11
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_USBDeviceInit
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text35
  9133  013CE0                     __ptext35:
  9134                           	opt stack 0
  9135  013CE0                     _memset:
  9136                           	opt stack 16
  9137                           
  9138                           ; BSR set to: 13
  9139                           ;incstack = 0
  9140  013CE0  C060  F066         	movff	memset@p1,memset@p
  9141  013CE4  C061  F067         	movff	memset@p1+1,memset@p+1
  9142  013CE8  D00A               	goto	l8138
  9143  013CEA                     l8134:
  9144  013CEA  C066  FFD9         	movff	memset@p,fsr2l
  9145  013CEE  C067  FFDA         	movff	memset@p+1,fsr2h
  9146  013CF2  C062  FFDF         	movff	memset@c,indf2
  9147  013CF6  0100               	movlb	0	; () banked
  9148  013CF8  4B66               	infsnz	memset@p& (0+255),f,b
  9149  013CFA  2B67               	incf	(memset@p+1)& (0+255),f,b
  9150  013CFC  D000               	goto	l8138
  9151  013CFE                     l8138:
  9152  013CFE  0100               	movlb	0	; () banked
  9153  013D00  0764               	decf	memset@n& (0+255),f,b
  9154  013D02  A0D8               	btfss	status,0,c
  9155  013D04  0765               	decf	(memset@n+1)& (0+255),f,b
  9156  013D06  0100               	movlb	0	; () banked
  9157  013D08  2964               	incf	memset@n& (0+255),w,b
  9158  013D0A  E1EF               	bnz	l8134
  9159  013D0C  0100               	movlb	0	; () banked
  9160  013D0E  2965               	incf	(memset@n+1)& (0+255),w,b
  9161  013D10  A4D8               	btfss	status,2,c
  9162  013D12  D7EB               	goto	l8134
  9163                           
  9164                           ; BSR set to: 0
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;	Return value of _memset is never used
  9168  013D14  0012               	return		;funcret
  9169  013D16                     __end_of_memset:
  9170                           	opt stack 0
  9171                           tblptru	equ	0xFF8
  9172                           tblptrh	equ	0xFF7
  9173                           tblptrl	equ	0xFF6
  9174                           tablat	equ	0xFF5
  9175                           prodh	equ	0xFF4
  9176                           prodl	equ	0xFF3
  9177                           intcon	equ	0xFF2
  9178                           intcon2	equ	0xFF1
  9179                           indf0	equ	0xFEF
  9180                           postinc0	equ	0xFEE
  9181                           fsr0h	equ	0xFEA
  9182                           fsr0l	equ	0xFE9
  9183                           wreg	equ	0xFE8
  9184                           postinc1	equ	0xFE6
  9185                           postdec1	equ	0xFE5
  9186                           fsr1h	equ	0xFE2
  9187                           fsr1l	equ	0xFE1
  9188                           indf2	equ	0xFDF
  9189                           postinc2	equ	0xFDE
  9190                           postdec2	equ	0xFDD
  9191                           fsr2h	equ	0xFDA
  9192                           fsr2l	equ	0xFD9
  9193                           status	equ	0xFD8
  9194                           
  9195 ;; *************** function _USBDeviceAttach *****************
  9196 ;; Defined at:
  9197 ;;		line 1352 in file "../My_library/usb_cdc/usb/usb_device.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;		None
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;		None               void
  9204 ;; Registers used:
  9205 ;;		wreg, status,2
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:   11
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_USB_init
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text36
  9226  013C36                     __ptext36:
  9227                           	opt stack 0
  9228  013C36                     _USBDeviceAttach:
  9229                           	opt stack 17
  9230                           
  9231                           ;usb_device.c: 1356: {
  9232                           ;usb_device.c: 1357: if(1 == 1)
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;incstack = 0
  9236  013C36  501D               	movf	_USBDeviceState,w,c	;volatile
  9237  013C38  A4D8               	btfss	status,2,c
  9238  013C3A  0012               	return	
  9239                           
  9240                           ;usb_device.c: 1358: {
  9241                           ;usb_device.c: 1360: UCON = 0;
  9242  013C3C  0E00               	movlw	0
  9243  013C3E  6E65               	movwf	3941,c	;volatile
  9244                           
  9245                           ;usb_device.c: 1363: UIE = 0;
  9246  013C40  0E00               	movlw	0
  9247  013C42  010F               	movlb	15	; () banked
  9248  013C44  6F36               	movwf	54,b	;volatile
  9249                           
  9250                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  9251  013C46  0E16               	movlw	22
  9252  013C48  010F               	movlb	15	; () banked
  9253  013C4A  6F39               	movwf	57,b	;volatile
  9254  013C4C  0E9F               	movlw	159
  9255  013C4E  010F               	movlb	15	; () banked
  9256  013C50  6F37               	movwf	55,b	;volatile
  9257  013C52  0E7B               	movlw	123
  9258  013C54  010F               	movlb	15	; () banked
  9259  013C56  6F36               	movwf	54,b	;volatile
  9260                           
  9261                           ; BSR set to: 15
  9262                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  9263  013C58  8ED0               	bsf	4048,7,c	;volatile
  9264                           
  9265                           ; BSR set to: 15
  9266  013C5A  88A2               	bsf	4002,4,c	;volatile
  9267                           
  9268                           ; BSR set to: 15
  9269  013C5C  88A0               	bsf	4000,4,c	;volatile
  9270                           
  9271                           ; BSR set to: 15
  9272  013C5E  8EF2               	bsf	intcon,7,c	;volatile
  9273                           
  9274                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9275  013C60  D001               	goto	l193
  9276  013C62                     l194:
  9277  013C62  8665               	bsf	3941,3,c	;volatile
  9278  013C64                     l193:
  9279  013C64  A665               	btfss	3941,3,c	;volatile
  9280  013C66  D7FD               	goto	l194
  9281                           
  9282                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  9283  013C68  0E01               	movlw	1
  9284  013C6A  6E1D               	movwf	_USBDeviceState,c	;volatile
  9285  013C6C  0012               	return	
  9286  013C6E  0012               	return		;funcret
  9287  013C70                     __end_of_USBDeviceAttach:
  9288                           	opt stack 0
  9289                           tblptru	equ	0xFF8
  9290                           tblptrh	equ	0xFF7
  9291                           tblptrl	equ	0xFF6
  9292                           tablat	equ	0xFF5
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           intcon	equ	0xFF2
  9296                           intcon2	equ	0xFF1
  9297                           indf0	equ	0xFEF
  9298                           postinc0	equ	0xFEE
  9299                           fsr0h	equ	0xFEA
  9300                           fsr0l	equ	0xFE9
  9301                           wreg	equ	0xFE8
  9302                           postinc1	equ	0xFE6
  9303                           postdec1	equ	0xFE5
  9304                           fsr1h	equ	0xFE2
  9305                           fsr1l	equ	0xFE1
  9306                           indf2	equ	0xFDF
  9307                           postinc2	equ	0xFDE
  9308                           postdec2	equ	0xFDD
  9309                           fsr2h	equ	0xFDA
  9310                           fsr2l	equ	0xFD9
  9311                           status	equ	0xFD8
  9312                           
  9313 ;; *************** function _RTCC_init *****************
  9314 ;; Defined at:
  9315 ;;		line 22 in file "../My_library/My_RTCC.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;		None
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;		None
  9320 ;; Return value:  Size  Location     Type
  9321 ;;		None               void
  9322 ;; Registers used:
  9323 ;;		wreg, status,2
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9333 ;;Total ram usage:        0 bytes
  9334 ;; Hardware stack levels used:    1
  9335 ;; Hardware stack levels required when called:   11
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_hardware_init
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text37
  9344  013D7E                     __ptext37:
  9345                           	opt stack 0
  9346  013D7E                     _RTCC_init:
  9347                           	opt stack 18
  9348                           
  9349                           ;My_RTCC.c: 23: RTCCFGbits.RTCWREN = 1;
  9350                           
  9351                           ;incstack = 0
  9352  013D7E  010F               	movlb	15	; () banked
  9353  013D80  8B3F               	bsf	63,5,b	;volatile
  9354                           
  9355                           ;My_RTCC.c: 24: if (RTCCFGbits.RTCWREN != 1) {
  9356  013D82  010F               	movlb	15	; () banked
  9357  013D84  BB3F               	btfsc	63,5,b	;volatile
  9358  013D86  D007               	goto	l8662
  9359                           
  9360                           ; BSR set to: 15
  9361                           ;My_RTCC.c: 25: EECON2 = 0x55;
  9362  013D88  0E55               	movlw	85
  9363  013D8A  6EA7               	movwf	4007,c	;volatile
  9364                           
  9365                           ;My_RTCC.c: 26: EECON2 = 0xAA;
  9366  013D8C  0EAA               	movlw	170
  9367  013D8E  6EA7               	movwf	4007,c	;volatile
  9368                           
  9369                           ; BSR set to: 15
  9370                           ;My_RTCC.c: 27: RTCCFGbits.RTCWREN = 1;
  9371  013D90  010F               	movlb	15	; () banked
  9372  013D92  8B3F               	bsf	63,5,b	;volatile
  9373  013D94  D000               	goto	l8662
  9374  013D96                     l8662:
  9375                           
  9376                           ; BSR set to: 15
  9377                           ;My_RTCC.c: 28: }
  9378                           ;My_RTCC.c: 29: RTCCFGbits.RTCEN = 1;
  9379  013D96  010F               	movlb	15	; () banked
  9380  013D98  8F3F               	bsf	63,7,b	;volatile
  9381                           
  9382                           ; BSR set to: 15
  9383                           ;My_RTCC.c: 30: RTCCFGbits.RTCOE = 0;
  9384  013D9A  010F               	movlb	15	; () banked
  9385  013D9C  953F               	bcf	63,2,b	;volatile
  9386                           
  9387                           ; BSR set to: 15
  9388                           ;My_RTCC.c: 31: PADCFG1bits.RTSECSEL0 = 1;
  9389  013D9E  010F               	movlb	15	; () banked
  9390  013DA0  833C               	bsf	60,1,b	;volatile
  9391                           
  9392                           ; BSR set to: 15
  9393                           ;My_RTCC.c: 32: PADCFG1bits.RTSECSEL1 = 1;
  9394  013DA2  010F               	movlb	15	; () banked
  9395  013DA4  853C               	bsf	60,2,b	;volatile
  9396                           
  9397                           ;My_RTCC.c: 33: RTCCAL = 0x00;
  9398  013DA6  0E00               	movlw	0
  9399  013DA8  010F               	movlb	15	; () banked
  9400  013DAA  6F3E               	movwf	62,b	;volatile
  9401                           
  9402                           ; BSR set to: 15
  9403                           ;My_RTCC.c: 34: T1CONbits.T1OSCEN = 1;
  9404  013DAC  86CD               	bsf	4045,3,c	;volatile
  9405                           
  9406                           ; BSR set to: 15
  9407  013DAE  0012               	return		;funcret
  9408  013DB0                     __end_of_RTCC_init:
  9409                           	opt stack 0
  9410                           tblptru	equ	0xFF8
  9411                           tblptrh	equ	0xFF7
  9412                           tblptrl	equ	0xFF6
  9413                           tablat	equ	0xFF5
  9414                           prodh	equ	0xFF4
  9415                           prodl	equ	0xFF3
  9416                           intcon	equ	0xFF2
  9417                           intcon2	equ	0xFF1
  9418                           indf0	equ	0xFEF
  9419                           postinc0	equ	0xFEE
  9420                           fsr0h	equ	0xFEA
  9421                           fsr0l	equ	0xFE9
  9422                           wreg	equ	0xFE8
  9423                           postinc1	equ	0xFE6
  9424                           postdec1	equ	0xFE5
  9425                           fsr1h	equ	0xFE2
  9426                           fsr1l	equ	0xFE1
  9427                           indf2	equ	0xFDF
  9428                           postinc2	equ	0xFDE
  9429                           postdec2	equ	0xFDD
  9430                           fsr2h	equ	0xFDA
  9431                           fsr2l	equ	0xFD9
  9432                           status	equ	0xFD8
  9433                           
  9434 ;; *************** function _I2C_init *****************
  9435 ;; Defined at:
  9436 ;;		line 11 in file "../My_library/My_I2C.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;		None               void
  9443 ;; Registers used:
  9444 ;;		wreg, status,2
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:   11
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_hardware_init
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text38
  9465  014054                     __ptext38:
  9466                           	opt stack 0
  9467  014054                     _I2C_init:
  9468                           	opt stack 18
  9469                           
  9470                           ;My_I2C.c: 12: SSP1STAT = 0b10000000;
  9471                           
  9472                           ; BSR set to: 15
  9473                           ;incstack = 0
  9474  014054  0E80               	movlw	128
  9475  014056  6EC7               	movwf	4039,c	;volatile
  9476                           
  9477                           ;My_I2C.c: 13: SSP1CON1 = 0b00101000;
  9478  014058  0E28               	movlw	40
  9479  01405A  6EC6               	movwf	4038,c	;volatile
  9480                           
  9481                           ;My_I2C.c: 14: SSP1ADD = 0x13;
  9482  01405C  0E13               	movlw	19
  9483  01405E  6EC8               	movwf	4040,c	;volatile
  9484                           
  9485                           ;My_I2C.c: 17: SSP1IF = 0;
  9486  014060  969E               	bcf	3998,3,c	;volatile
  9487                           
  9488                           ;My_I2C.c: 18: BCL1IF = 0;
  9489  014062  96A1               	bcf	4001,3,c	;volatile
  9490  014064  0012               	return		;funcret
  9491  014066                     __end_of_I2C_init:
  9492                           	opt stack 0
  9493                           tblptru	equ	0xFF8
  9494                           tblptrh	equ	0xFF7
  9495                           tblptrl	equ	0xFF6
  9496                           tablat	equ	0xFF5
  9497                           prodh	equ	0xFF4
  9498                           prodl	equ	0xFF3
  9499                           intcon	equ	0xFF2
  9500                           intcon2	equ	0xFF1
  9501                           indf0	equ	0xFEF
  9502                           postinc0	equ	0xFEE
  9503                           fsr0h	equ	0xFEA
  9504                           fsr0l	equ	0xFE9
  9505                           wreg	equ	0xFE8
  9506                           postinc1	equ	0xFE6
  9507                           postdec1	equ	0xFE5
  9508                           fsr1h	equ	0xFE2
  9509                           fsr1l	equ	0xFE1
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           fsr2h	equ	0xFDA
  9514                           fsr2l	equ	0xFD9
  9515                           status	equ	0xFD8
  9516                           
  9517 ;; *************** function _I2C_LCD_init *****************
  9518 ;; Defined at:
  9519 ;;		line 78 in file "../My_library/My_ST7032.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  i               1    9[BANK0 ] unsigned char 
  9524 ;;  i               1    8[BANK0 ] unsigned char 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;		None               void
  9527 ;; Registers used:
  9528 ;;		wreg, status,2, status,0, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9536 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9537 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9538 ;;Total ram usage:        3 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:   15
  9541 ;; This function calls:
  9542 ;;		_I2C_LCD_Clear
  9543 ;;		_I2C_LCD_Command
  9544 ;; This function is called by:
  9545 ;;		_hardware_init
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text39
  9550  01344A                     __ptext39:
  9551                           	opt stack 0
  9552  01344A                     _I2C_LCD_init:
  9553                           	opt stack 14
  9554                           
  9555                           ;My_ST7032.c: 79: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
  9556                           
  9557                           ;incstack = 0
  9558  01344A  0E00               	movlw	0
  9559  01344C  0100               	movlb	0	; () banked
  9560  01344E  6F68               	movwf	I2C_LCD_init@i& (0+255),b
  9561  013450                     l8678:
  9562                           
  9563                           ; BSR set to: 0
  9564  013450  0E27               	movlw	39
  9565  013452  0100               	movlb	0	; () banked
  9566  013454  6568               	cpfsgt	I2C_LCD_init@i& (0+255),b
  9567  013456  D001               	goto	l8682
  9568                           
  9569                           ; BSR set to: 0
  9570  013458  D00C               	goto	l8686
  9571  01345A                     l8682:
  9572                           
  9573                           ; BSR set to: 0
  9574  01345A  0E10               	movlw	16
  9575  01345C  0100               	movlb	0	; () banked
  9576  01345E  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9577  013460  0E94               	movlw	148
  9578  013462                     u9447:
  9579  013462  2EE8               	decfsz	wreg,f,c
  9580  013464  D7FE               	goto	u9447
  9581  013466  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9582  013468  D7FC               	goto	u9447
  9583  01346A  D000               	nop2	
  9584  01346C  0100               	movlb	0	; () banked
  9585  01346E  2B68               	incf	I2C_LCD_init@i& (0+255),f,b
  9586  013470  D7EF               	goto	l8678
  9587  013472                     l8686:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;My_ST7032.c: 80: I2C_LCD_Command(0x38);
  9591  013472  0E38               	movlw	56
  9592  013474  EC54  F09E         	call	_I2C_LCD_Command
  9593                           
  9594                           ;My_ST7032.c: 81: I2C_LCD_Command(0x39);
  9595  013478  0E39               	movlw	57
  9596  01347A  EC54  F09E         	call	_I2C_LCD_Command
  9597                           
  9598                           ;My_ST7032.c: 82: I2C_LCD_Command(0x14);
  9599  01347E  0E14               	movlw	20
  9600  013480  EC54  F09E         	call	_I2C_LCD_Command
  9601                           
  9602                           ;My_ST7032.c: 83: I2C_LCD_Command(0x70);
  9603  013484  0E70               	movlw	112
  9604  013486  EC54  F09E         	call	_I2C_LCD_Command
  9605                           
  9606                           ;My_ST7032.c: 84: I2C_LCD_Command(0x56);
  9607  01348A  0E56               	movlw	86
  9608  01348C  EC54  F09E         	call	_I2C_LCD_Command
  9609                           
  9610                           ;My_ST7032.c: 85: I2C_LCD_Command(0x6C);
  9611  013490  0E6C               	movlw	108
  9612  013492  EC54  F09E         	call	_I2C_LCD_Command
  9613                           
  9614                           ;My_ST7032.c: 86: for (uint8_t i = 0; i < 40; i++) _delay((unsigned long)((1)*(48000000/
      +                          4000.0)));
  9615  013496  0E00               	movlw	0
  9616  013498  0100               	movlb	0	; () banked
  9617  01349A  6F69               	movwf	I2C_LCD_init@i_4683& (0+255),b
  9618  01349C                     l8690:
  9619                           
  9620                           ; BSR set to: 0
  9621  01349C  0E27               	movlw	39
  9622  01349E  0100               	movlb	0	; () banked
  9623  0134A0  6569               	cpfsgt	I2C_LCD_init@i_4683& (0+255),b
  9624  0134A2  D001               	goto	l8694
  9625                           
  9626                           ; BSR set to: 0
  9627  0134A4  D00C               	goto	l8698
  9628  0134A6                     l8694:
  9629                           
  9630                           ; BSR set to: 0
  9631  0134A6  0E10               	movlw	16
  9632  0134A8  0100               	movlb	0	; () banked
  9633  0134AA  6F67               	movwf	??_I2C_LCD_init& (0+255),b
  9634  0134AC  0E94               	movlw	148
  9635  0134AE                     u9457:
  9636  0134AE  2EE8               	decfsz	wreg,f,c
  9637  0134B0  D7FE               	goto	u9457
  9638  0134B2  2F67               	decfsz	??_I2C_LCD_init& (0+255),f,b
  9639  0134B4  D7FC               	goto	u9457
  9640  0134B6  D000               	nop2	
  9641  0134B8  0100               	movlb	0	; () banked
  9642  0134BA  2B69               	incf	I2C_LCD_init@i_4683& (0+255),f,b
  9643  0134BC  D7EF               	goto	l8690
  9644  0134BE                     l8698:
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;My_ST7032.c: 87: I2C_LCD_Command(0x38);
  9648  0134BE  0E38               	movlw	56
  9649  0134C0  EC54  F09E         	call	_I2C_LCD_Command
  9650                           
  9651                           ;My_ST7032.c: 88: I2C_LCD_Command(0x0C);
  9652  0134C4  0E0C               	movlw	12
  9653  0134C6  EC54  F09E         	call	_I2C_LCD_Command
  9654                           
  9655                           ;My_ST7032.c: 89: I2C_LCD_Command(0x06);
  9656  0134CA  0E06               	movlw	6
  9657  0134CC  EC54  F09E         	call	_I2C_LCD_Command
  9658                           
  9659                           ;My_ST7032.c: 90: I2C_LCD_Clear();
  9660  0134D0  EC10  F0A0         	call	_I2C_LCD_Clear	;wreg free
  9661  0134D4  0012               	return		;funcret
  9662  0134D6                     __end_of_I2C_LCD_init:
  9663                           	opt stack 0
  9664                           tblptru	equ	0xFF8
  9665                           tblptrh	equ	0xFF7
  9666                           tblptrl	equ	0xFF6
  9667                           tablat	equ	0xFF5
  9668                           prodh	equ	0xFF4
  9669                           prodl	equ	0xFF3
  9670                           intcon	equ	0xFF2
  9671                           intcon2	equ	0xFF1
  9672                           indf0	equ	0xFEF
  9673                           postinc0	equ	0xFEE
  9674                           fsr0h	equ	0xFEA
  9675                           fsr0l	equ	0xFE9
  9676                           wreg	equ	0xFE8
  9677                           postinc1	equ	0xFE6
  9678                           postdec1	equ	0xFE5
  9679                           fsr1h	equ	0xFE2
  9680                           fsr1l	equ	0xFE1
  9681                           indf2	equ	0xFDF
  9682                           postinc2	equ	0xFDE
  9683                           postdec2	equ	0xFDD
  9684                           fsr2h	equ	0xFDA
  9685                           fsr2l	equ	0xFD9
  9686                           status	equ	0xFD8
  9687                           
  9688 ;; *************** function _I2C_LCD_Clear *****************
  9689 ;; Defined at:
  9690 ;;		line 21 in file "../My_library/My_ST7032.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;		None               void
  9697 ;; Registers used:
  9698 ;;		wreg, status,2, status,0, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9706 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9707 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;Total ram usage:        1 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:   14
  9711 ;; This function calls:
  9712 ;;		_I2C_LCD_Command
  9713 ;; This function is called by:
  9714 ;;		_I2C_LCD_init
  9715 ;;		_terminal_operation
  9716 ;;		_software_init
  9717 ;;		_main
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text40
  9722  014020                     __ptext40:
  9723                           	opt stack 0
  9724  014020                     _I2C_LCD_Clear:
  9725                           	opt stack 14
  9726                           
  9727                           ;My_ST7032.c: 22: I2C_LCD_Command(0x01);
  9728                           
  9729                           ;incstack = 0
  9730  014020  0E01               	movlw	1
  9731  014022  EC54  F09E         	call	_I2C_LCD_Command
  9732                           
  9733                           ;My_ST7032.c: 23: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  9734  014026  0E12               	movlw	18
  9735  014028  0100               	movlb	0	; () banked
  9736  01402A  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
  9737  01402C  0E23               	movlw	35
  9738  01402E                     u9467:
  9739  01402E  2EE8               	decfsz	wreg,f,c
  9740  014030  D7FE               	goto	u9467
  9741  014032  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
  9742  014034  D7FC               	goto	u9467
  9743  014036  F000               	nop	
  9744  014038  0012               	return		;funcret
  9745  01403A                     __end_of_I2C_LCD_Clear:
  9746                           	opt stack 0
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           intcon2	equ	0xFF1
  9755                           indf0	equ	0xFEF
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           postinc1	equ	0xFE6
  9761                           postdec1	equ	0xFE5
  9762                           fsr1h	equ	0xFE2
  9763                           fsr1l	equ	0xFE1
  9764                           indf2	equ	0xFDF
  9765                           postinc2	equ	0xFDE
  9766                           postdec2	equ	0xFDD
  9767                           fsr2h	equ	0xFDA
  9768                           fsr2l	equ	0xFD9
  9769                           status	equ	0xFD8
  9770                           
  9771 ;; *************** function _I2C_LCD_Command *****************
  9772 ;; Defined at:
  9773 ;;		line 8 in file "../My_library/My_ST7032.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  c               1    wreg     unsigned char 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  c               1    4[BANK0 ] unsigned char 
  9778 ;;  ans             1    5[BANK0 ] unsigned char 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;		None               void
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9792 ;;Total ram usage:        2 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:   13
  9795 ;; This function calls:
  9796 ;;		_I2C_Send
  9797 ;;		_I2C_Start
  9798 ;;		_I2C_Stop
  9799 ;; This function is called by:
  9800 ;;		_I2C_LCD_Clear
  9801 ;;		_I2C_LCD_SetCursor
  9802 ;;		_I2C_LCD_init
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text41
  9807  013CA8                     __ptext41:
  9808                           	opt stack 0
  9809  013CA8                     _I2C_LCD_Command:
  9810                           	opt stack 14
  9811                           
  9812                           ;incstack = 0
  9813                           ;I2C_LCD_Command@c stored from wreg
  9814  013CA8  0100               	movlb	0	; () banked
  9815  013CAA  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;My_ST7032.c: 9: uint8_t ans;
  9819                           ;My_ST7032.c: 11: ans = I2C_Start(0x3E, 0);
  9820  013CAC  0E00               	movlw	0
  9821  013CAE  0100               	movlb	0	; () banked
  9822  013CB0  6F62               	movwf	I2C_Start@rw& (0+255),b
  9823  013CB2  0E3E               	movlw	62
  9824  013CB4  EC8B  F09E         	call	_I2C_Start
  9825  013CB8  0100               	movlb	0	; () banked
  9826  013CBA  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;My_ST7032.c: 12: if (ans == 0) {
  9830  013CBC  0100               	movlb	0	; () banked
  9831  013CBE  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
  9832  013CC0  0100               	movlb	0	; () banked
  9833  013CC2  A4D8               	btfss	status,2,c
  9834  013CC4  D007               	goto	l1092
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;My_ST7032.c: 14: I2C_Send(0b10000000);
  9838  013CC6  0E80               	movlw	128
  9839  013CC8  ECF5  F09F         	call	_I2C_Send
  9840                           
  9841                           ;My_ST7032.c: 15: I2C_Send(c);
  9842  013CCC  0100               	movlb	0	; () banked
  9843  013CCE  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
  9844  013CD0  ECF5  F09F         	call	_I2C_Send
  9845  013CD4                     l1092:
  9846                           
  9847                           ;My_ST7032.c: 16: }
  9848                           ;My_ST7032.c: 17: I2C_Stop();
  9849  013CD4  EC33  F0A0         	call	_I2C_Stop	;wreg free
  9850                           
  9851                           ;My_ST7032.c: 18: _delay((unsigned long)((26)*(48000000/4000000.0)));
  9852  013CD8  0E68               	movlw	104
  9853  013CDA                     u9477:
  9854  013CDA  2EE8               	decfsz	wreg,f,c
  9855  013CDC  D7FE               	goto	u9477
  9856  013CDE  0012               	return		;funcret
  9857  013CE0                     __end_of_I2C_LCD_Command:
  9858                           	opt stack 0
  9859                           tblptru	equ	0xFF8
  9860                           tblptrh	equ	0xFF7
  9861                           tblptrl	equ	0xFF6
  9862                           tablat	equ	0xFF5
  9863                           prodh	equ	0xFF4
  9864                           prodl	equ	0xFF3
  9865                           intcon	equ	0xFF2
  9866                           intcon2	equ	0xFF1
  9867                           indf0	equ	0xFEF
  9868                           postinc0	equ	0xFEE
  9869                           fsr0h	equ	0xFEA
  9870                           fsr0l	equ	0xFE9
  9871                           wreg	equ	0xFE8
  9872                           postinc1	equ	0xFE6
  9873                           postdec1	equ	0xFE5
  9874                           fsr1h	equ	0xFE2
  9875                           fsr1l	equ	0xFE1
  9876                           indf2	equ	0xFDF
  9877                           postinc2	equ	0xFDE
  9878                           postdec2	equ	0xFDD
  9879                           fsr2h	equ	0xFDA
  9880                           fsr2l	equ	0xFD9
  9881                           status	equ	0xFD8
  9882                           
  9883 ;; *************** function _I2C_Stop *****************
  9884 ;; Defined at:
  9885 ;;		line 45 in file "../My_library/My_I2C.c"
  9886 ;; Parameters:    Size  Location     Type
  9887 ;;		None
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;		None
  9890 ;; Return value:  Size  Location     Type
  9891 ;;		None               void
  9892 ;; Registers used:
  9893 ;;		wreg, status,2, status,0, cstack
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9903 ;;Total ram usage:        0 bytes
  9904 ;; Hardware stack levels used:    1
  9905 ;; Hardware stack levels required when called:   12
  9906 ;; This function calls:
  9907 ;;		_I2C_IdleCheck
  9908 ;; This function is called by:
  9909 ;;		_I2C_LCD_Command
  9910 ;;		_I2C_LCD_Puts
  9911 ;;		_I2C_LCD_Putc
  9912 ;;		_I2C_LCD_CreateChar
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text42
  9917  014066                     __ptext42:
  9918                           	opt stack 0
  9919  014066                     _I2C_Stop:
  9920                           	opt stack 14
  9921                           
  9922                           ;My_I2C.c: 47: I2C_IdleCheck(0x5);
  9923                           
  9924                           ;incstack = 0
  9925  014066  0E05               	movlw	5
  9926  014068  ECD6  F09F         	call	_I2C_IdleCheck
  9927                           
  9928                           ;My_I2C.c: 48: SSP1CON2bits.PEN = 1;
  9929  01406C  84C5               	bsf	4037,2,c	;volatile
  9930  01406E  0012               	return		;funcret
  9931  014070                     __end_of_I2C_Stop:
  9932                           	opt stack 0
  9933                           tblptru	equ	0xFF8
  9934                           tblptrh	equ	0xFF7
  9935                           tblptrl	equ	0xFF6
  9936                           tablat	equ	0xFF5
  9937                           prodh	equ	0xFF4
  9938                           prodl	equ	0xFF3
  9939                           intcon	equ	0xFF2
  9940                           intcon2	equ	0xFF1
  9941                           indf0	equ	0xFEF
  9942                           postinc0	equ	0xFEE
  9943                           fsr0h	equ	0xFEA
  9944                           fsr0l	equ	0xFE9
  9945                           wreg	equ	0xFE8
  9946                           postinc1	equ	0xFE6
  9947                           postdec1	equ	0xFE5
  9948                           fsr1h	equ	0xFE2
  9949                           fsr1l	equ	0xFE1
  9950                           indf2	equ	0xFDF
  9951                           postinc2	equ	0xFDE
  9952                           postdec2	equ	0xFDD
  9953                           fsr2h	equ	0xFDA
  9954                           fsr2l	equ	0xFD9
  9955                           status	equ	0xFD8
  9956                           
  9957 ;; *************** function _I2C_Start *****************
  9958 ;; Defined at:
  9959 ;;		line 21 in file "../My_library/My_I2C.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  adrs            1    wreg     unsigned char 
  9962 ;;  rw              1    2[BANK0 ] unsigned char 
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;  adrs            1    3[BANK0 ] unsigned char 
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      unsigned char 
  9967 ;; Registers used:
  9968 ;;		wreg, status,2, status,0, cstack
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9974 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9977 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9978 ;;Total ram usage:        2 bytes
  9979 ;; Hardware stack levels used:    1
  9980 ;; Hardware stack levels required when called:   12
  9981 ;; This function calls:
  9982 ;;		_I2C_IdleCheck
  9983 ;; This function is called by:
  9984 ;;		_I2C_LCD_Command
  9985 ;;		_I2C_LCD_Puts
  9986 ;;		_I2C_LCD_Putc
  9987 ;;		_I2C_LCD_CreateChar
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text43
  9992  013D16                     __ptext43:
  9993                           	opt stack 0
  9994  013D16                     _I2C_Start:
  9995                           	opt stack 14
  9996                           
  9997                           ;incstack = 0
  9998                           ;I2C_Start@adrs stored from wreg
  9999  013D16  0100               	movlb	0	; () banked
 10000  013D18  6F63               	movwf	I2C_Start@adrs& (0+255),b
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;My_I2C.c: 23: I2C_IdleCheck(0x5);
 10004  013D1A  0E05               	movlw	5
 10005  013D1C  ECD6  F09F         	call	_I2C_IdleCheck
 10006                           
 10007                           ;My_I2C.c: 24: SSP1CON2bits.SEN = 1;
 10008  013D20  80C5               	bsf	4037,0,c	;volatile
 10009                           
 10010                           ;My_I2C.c: 26: I2C_IdleCheck(0x5);
 10011  013D22  0E05               	movlw	5
 10012  013D24  ECD6  F09F         	call	_I2C_IdleCheck
 10013                           
 10014                           ;My_I2C.c: 27: SSP1IF = 0;
 10015  013D28  969E               	bcf	3998,3,c	;volatile
 10016                           
 10017                           ;My_I2C.c: 28: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 10018  013D2A  0100               	movlb	0	; () banked
 10019  013D2C  5163               	movf	I2C_Start@adrs& (0+255),w,b
 10020  013D2E  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 10021  013D30  0100               	movlb	0	; () banked
 10022  013D32  2562               	addwf	I2C_Start@rw& (0+255),w,b
 10023  013D34  6EC9               	movwf	4041,c	;volatile
 10024                           
 10025                           ;My_I2C.c: 29: while (!SSP1IF);
 10026  013D36  D000               	goto	l654
 10027  013D38                     l654:
 10028                           
 10029                           ; BSR set to: 0
 10030  013D38  A69E               	btfss	3998,3,c	;volatile
 10031  013D3A  D7FE               	goto	l654
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;My_I2C.c: 30: return SSP1CON2bits.ACKSTAT;
 10035                           
 10036                           ; BSR set to: 0
 10037  013D3C  ACC5               	btfss	4037,6,c	;volatile
 10038  013D3E  D002               	goto	u8010
 10039  013D40  0E01               	movlw	1
 10040  013D42  0012               	return	
 10041  013D44                     u8010:
 10042  013D44  0E00               	movlw	0
 10043  013D46  0012               	return	
 10044                           
 10045                           ; BSR set to: 0
 10046                           
 10047                           ; BSR set to: 0
 10048  013D48  0012               	return		;funcret
 10049  013D4A                     __end_of_I2C_Start:
 10050                           	opt stack 0
 10051                           tblptru	equ	0xFF8
 10052                           tblptrh	equ	0xFF7
 10053                           tblptrl	equ	0xFF6
 10054                           tablat	equ	0xFF5
 10055                           prodh	equ	0xFF4
 10056                           prodl	equ	0xFF3
 10057                           intcon	equ	0xFF2
 10058                           intcon2	equ	0xFF1
 10059                           indf0	equ	0xFEF
 10060                           postinc0	equ	0xFEE
 10061                           fsr0h	equ	0xFEA
 10062                           fsr0l	equ	0xFE9
 10063                           wreg	equ	0xFE8
 10064                           postinc1	equ	0xFE6
 10065                           postdec1	equ	0xFE5
 10066                           fsr1h	equ	0xFE2
 10067                           fsr1l	equ	0xFE1
 10068                           indf2	equ	0xFDF
 10069                           postinc2	equ	0xFDE
 10070                           postdec2	equ	0xFDD
 10071                           fsr2h	equ	0xFDA
 10072                           fsr2l	equ	0xFD9
 10073                           status	equ	0xFD8
 10074                           
 10075 ;; *************** function _I2C_Send *****************
 10076 ;; Defined at:
 10077 ;;		line 51 in file "../My_library/My_I2C.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  data            1    wreg     unsigned char 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  data            1    2[BANK0 ] unsigned char 
 10082 ;; Return value:  Size  Location     Type
 10083 ;;                  1    wreg      unsigned char 
 10084 ;; Registers used:
 10085 ;;		wreg, status,2, status,0, cstack
 10086 ;; Tracked objects:
 10087 ;;		On entry : 0/0
 10088 ;;		On exit  : 0/0
 10089 ;;		Unchanged: 0/0
 10090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10095 ;;Total ram usage:        1 bytes
 10096 ;; Hardware stack levels used:    1
 10097 ;; Hardware stack levels required when called:   12
 10098 ;; This function calls:
 10099 ;;		_I2C_IdleCheck
 10100 ;; This function is called by:
 10101 ;;		_I2C_LCD_Command
 10102 ;;		_I2C_LCD_Puts
 10103 ;;		_I2C_LCD_Putc
 10104 ;;		_I2C_LCD_CreateChar
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text44
 10109  013FEA                     __ptext44:
 10110                           	opt stack 0
 10111  013FEA                     _I2C_Send:
 10112                           	opt stack 14
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;incstack = 0
 10116                           ;I2C_Send@data stored from wreg
 10117  013FEA  0100               	movlb	0	; () banked
 10118  013FEC  6F62               	movwf	I2C_Send@data& (0+255),b
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;My_I2C.c: 52: I2C_IdleCheck(0x5);
 10122  013FEE  0E05               	movlw	5
 10123  013FF0  ECD6  F09F         	call	_I2C_IdleCheck
 10124                           
 10125                           ;My_I2C.c: 53: SSP1IF = 0;
 10126  013FF4  969E               	bcf	3998,3,c	;volatile
 10127                           
 10128                           ;My_I2C.c: 54: SSP1BUF = data;
 10129  013FF6  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 10130                           
 10131                           ;My_I2C.c: 55: while (!SSP1IF);
 10132  013FFA  D000               	goto	l669
 10133  013FFC                     l669:
 10134  013FFC  A69E               	btfss	3998,3,c	;volatile
 10135  013FFE  D7FE               	goto	l669
 10136                           
 10137                           ;My_I2C.c: 56: return SSP1CON2bits.ACKSTAT;
 10138                           ;	Return value of _I2C_Send is never used
 10139  014000  50C5               	movf	4037,w,c	;volatile
 10140  014002  0012               	return	
 10141  014004  0012               	return		;funcret
 10142  014006                     __end_of_I2C_Send:
 10143                           	opt stack 0
 10144                           tblptru	equ	0xFF8
 10145                           tblptrh	equ	0xFF7
 10146                           tblptrl	equ	0xFF6
 10147                           tablat	equ	0xFF5
 10148                           prodh	equ	0xFF4
 10149                           prodl	equ	0xFF3
 10150                           intcon	equ	0xFF2
 10151                           intcon2	equ	0xFF1
 10152                           indf0	equ	0xFEF
 10153                           postinc0	equ	0xFEE
 10154                           fsr0h	equ	0xFEA
 10155                           fsr0l	equ	0xFE9
 10156                           wreg	equ	0xFE8
 10157                           postinc1	equ	0xFE6
 10158                           postdec1	equ	0xFE5
 10159                           fsr1h	equ	0xFE2
 10160                           fsr1l	equ	0xFE1
 10161                           indf2	equ	0xFDF
 10162                           postinc2	equ	0xFDE
 10163                           postdec2	equ	0xFDD
 10164                           fsr2h	equ	0xFDA
 10165                           fsr2l	equ	0xFD9
 10166                           status	equ	0xFD8
 10167                           
 10168 ;; *************** function _I2C_IdleCheck *****************
 10169 ;; Defined at:
 10170 ;;		line 7 in file "../My_library/My_I2C.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  mask            1    wreg     unsigned char 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  mask            1    1[BANK0 ] unsigned char 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;		None               void
 10177 ;; Registers used:
 10178 ;;		wreg, status,2, status,0
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10187 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10188 ;;Total ram usage:        2 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:   11
 10191 ;; This function calls:
 10192 ;;		Nothing
 10193 ;; This function is called by:
 10194 ;;		_I2C_Start
 10195 ;;		_I2C_Stop
 10196 ;;		_I2C_Send
 10197 ;;		_I2C_rStart
 10198 ;;		_I2C_Receive
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text45
 10203  013FAC                     __ptext45:
 10204                           	opt stack 0
 10205  013FAC                     _I2C_IdleCheck:
 10206                           	opt stack 14
 10207                           
 10208                           ;incstack = 0
 10209                           ;I2C_IdleCheck@mask stored from wreg
 10210  013FAC  0100               	movlb	0	; () banked
 10211  013FAE  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 10212                           
 10213                           ; BSR set to: 0
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;My_I2C.c: 8: while ((SSP1CON2 & 0x1F) | (SSP1STAT & mask));
 10217  013FB0  D000               	goto	l7854
 10218  013FB2                     l7854:
 10219                           
 10220                           ; BSR set to: 0
 10221  013FB2  50C7               	movf	4039,w,c	;volatile
 10222  013FB4  0100               	movlb	0	; () banked
 10223  013FB6  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 10224  013FB8  0100               	movlb	0	; () banked
 10225  013FBA  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 10226  013FBC  50C5               	movf	4037,w,c	;volatile
 10227  013FBE  0B1F               	andlw	31
 10228  013FC0  0100               	movlb	0	; () banked
 10229  013FC2  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 10230  013FC4  0900               	iorlw	0
 10231  013FC6  A4D8               	btfss	status,2,c
 10232  013FC8  D7F4               	goto	l7854
 10233                           
 10234                           ; BSR set to: 0
 10235                           
 10236                           ; BSR set to: 0
 10237  013FCA  0012               	return		;funcret
 10238  013FCC                     __end_of_I2C_IdleCheck:
 10239                           	opt stack 0
 10240                           tblptru	equ	0xFF8
 10241                           tblptrh	equ	0xFF7
 10242                           tblptrl	equ	0xFF6
 10243                           tablat	equ	0xFF5
 10244                           prodh	equ	0xFF4
 10245                           prodl	equ	0xFF3
 10246                           intcon	equ	0xFF2
 10247                           intcon2	equ	0xFF1
 10248                           indf0	equ	0xFEF
 10249                           postinc0	equ	0xFEE
 10250                           fsr0h	equ	0xFEA
 10251                           fsr0l	equ	0xFE9
 10252                           wreg	equ	0xFE8
 10253                           postinc1	equ	0xFE6
 10254                           postdec1	equ	0xFE5
 10255                           fsr1h	equ	0xFE2
 10256                           fsr1l	equ	0xFE1
 10257                           indf2	equ	0xFDF
 10258                           postinc2	equ	0xFDE
 10259                           postdec2	equ	0xFDD
 10260                           fsr2h	equ	0xFDA
 10261                           fsr2l	equ	0xFD9
 10262                           status	equ	0xFD8
 10263                           
 10264 ;; *************** function _USB_loop *****************
 10265 ;; Defined at:
 10266 ;;		line 65 in file "../My_library/usb_cdc/My_usb_cdc.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;		None
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  rx_len          2   20[BANK0 ] int 
 10271 ;;  data            1   22[BANK0 ] unsigned char 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;		None               void
 10274 ;; Registers used:
 10275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10282 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10284 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;Total ram usage:        3 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:   14
 10288 ;; This function calls:
 10289 ;;		_get_string_usb
 10290 ;;		_put_string_usb
 10291 ;;		_ringbuf_num
 10292 ;;		_ringbuf_pop
 10293 ;;		_ringbuf_put
 10294 ;; This function is called by:
 10295 ;;		_main
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text46
 10300  01332E                     __ptext46:
 10301                           	opt stack 0
 10302  01332E                     _USB_loop:
 10303                           	opt stack 16
 10304                           
 10305                           ;My_usb_cdc.c: 66: char data;
 10306                           ;My_usb_cdc.c: 67: int rx_len;
 10307                           ;My_usb_cdc.c: 68: rx_len = get_string_usb(&data, 1);
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;incstack = 0
 10311  01332E  0E76               	movlw	low USB_loop@data
 10312  013330  0100               	movlb	0	; () banked
 10313  013332  6F6D               	movwf	get_string_usb@s& (0+255),b
 10314  013334  0E00               	movlw	high USB_loop@data
 10315  013336  0100               	movlb	0	; () banked
 10316  013338  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 10317  01333A  0E00               	movlw	0
 10318  01333C  0100               	movlb	0	; () banked
 10319  01333E  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 10320  013340  0E01               	movlw	1
 10321  013342  6F6F               	movwf	get_string_usb@len& (0+255),b
 10322  013344  EC70  F09D         	call	_get_string_usb	;wreg free
 10323  013348  C06D  F074         	movff	?_get_string_usb,USB_loop@rx_len
 10324  01334C  C06E  F075         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 10325                           
 10326                           ;My_usb_cdc.c: 69: if (rx_len) {
 10327  013350  0100               	movlb	0	; () banked
 10328  013352  5174               	movf	USB_loop@rx_len& (0+255),w,b
 10329  013354  0100               	movlb	0	; () banked
 10330  013356  1175               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 10331  013358  B4D8               	btfsc	status,2,c
 10332  01335A  D00A               	goto	l581
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;My_usb_cdc.c: 70: ringbuf_put(&usb_rx, data);
 10336  01335C  0E6C               	movlw	low _usb_rx
 10337  01335E  0100               	movlb	0	; () banked
 10338  013360  6F68               	movwf	ringbuf_put@rb& (0+255),b
 10339  013362  0E01               	movlw	high _usb_rx
 10340  013364  0100               	movlb	0	; () banked
 10341  013366  6F69               	movwf	(ringbuf_put@rb+1)& (0+255),b
 10342  013368  C076  F06A         	movff	USB_loop@data,ringbuf_put@asciicode
 10343  01336C  EC82  F093         	call	_ringbuf_put	;wreg free
 10344  013370                     l581:
 10345                           
 10346                           ;My_usb_cdc.c: 71: }
 10347                           ;My_usb_cdc.c: 72: if (ringbuf_num(&usb_tx)) {
 10348  013370  0E74               	movlw	low _usb_tx
 10349  013372  0100               	movlb	0	; () banked
 10350  013374  6F60               	movwf	ringbuf_num@rb& (0+255),b
 10351  013376  0E01               	movlw	high _usb_tx
 10352  013378  0100               	movlb	0	; () banked
 10353  01337A  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 10354  01337C  EC03  F090         	call	_ringbuf_num	;wreg free
 10355  013380  0100               	movlb	0	; () banked
 10356  013382  5160               	movf	?_ringbuf_num& (0+255),w,b
 10357  013384  0100               	movlb	0	; () banked
 10358  013386  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10359  013388  B4D8               	btfsc	status,2,c
 10360  01338A  0012               	return	
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;My_usb_cdc.c: 73: data = ringbuf_pop(&usb_tx);
 10364  01338C  0E74               	movlw	low _usb_tx
 10365  01338E  0100               	movlb	0	; () banked
 10366  013390  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 10367  013392  0E01               	movlw	high _usb_tx
 10368  013394  0100               	movlb	0	; () banked
 10369  013396  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 10370  013398  EC55  F094         	call	_ringbuf_pop	;wreg free
 10371  01339C  0100               	movlb	0	; () banked
 10372  01339E  6F76               	movwf	USB_loop@data& (0+255),b
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;My_usb_cdc.c: 74: put_string_usb(&data, 1);
 10376  0133A0  0E76               	movlw	low USB_loop@data
 10377  0133A2  0100               	movlb	0	; () banked
 10378  0133A4  6F6C               	movwf	put_string_usb@s& (0+255),b
 10379  0133A6  0E00               	movlw	high USB_loop@data
 10380  0133A8  0100               	movlb	0	; () banked
 10381  0133AA  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 10382  0133AC  0E00               	movlw	0
 10383  0133AE  0100               	movlb	0	; () banked
 10384  0133B0  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 10385  0133B2  0E01               	movlw	1
 10386  0133B4  6F6E               	movwf	put_string_usb@len& (0+255),b
 10387  0133B6  ECA5  F09E         	call	_put_string_usb	;wreg free
 10388  0133BA  0012               	return	
 10389  0133BC  0012               	return		;funcret
 10390  0133BE                     __end_of_USB_loop:
 10391                           	opt stack 0
 10392                           tblptru	equ	0xFF8
 10393                           tblptrh	equ	0xFF7
 10394                           tblptrl	equ	0xFF6
 10395                           tablat	equ	0xFF5
 10396                           prodh	equ	0xFF4
 10397                           prodl	equ	0xFF3
 10398                           intcon	equ	0xFF2
 10399                           intcon2	equ	0xFF1
 10400                           indf0	equ	0xFEF
 10401                           postinc0	equ	0xFEE
 10402                           fsr0h	equ	0xFEA
 10403                           fsr0l	equ	0xFE9
 10404                           wreg	equ	0xFE8
 10405                           postinc1	equ	0xFE6
 10406                           postdec1	equ	0xFE5
 10407                           fsr1h	equ	0xFE2
 10408                           fsr1l	equ	0xFE1
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           postdec2	equ	0xFDD
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           
 10416 ;; *************** function _ringbuf_put *****************
 10417 ;; Defined at:
 10418 ;;		line 20 in file "../My_library/My_ringbuf.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10421 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), usb_tx(8), 
 10422 ;;		 -> usb_rx(8), 
 10423 ;;  asciicode       1   10[BANK0 ] unsigned char 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;		None
 10426 ;; Return value:  Size  Location     Type
 10427 ;;		None               void
 10428 ;; Registers used:
 10429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10430 ;; Tracked objects:
 10431 ;;		On entry : 0/0
 10432 ;;		On exit  : 0/0
 10433 ;;		Unchanged: 0/0
 10434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10435 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10438 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;Total ram usage:        7 bytes
 10440 ;; Hardware stack levels used:    1
 10441 ;; Hardware stack levels required when called:   12
 10442 ;; This function calls:
 10443 ;;		_ringbuf_num
 10444 ;; This function is called by:
 10445 ;;		_USB_loop
 10446 ;;		_ringbuf_put_num
 10447 ;;		_ringbuf_put_str
 10448 ;;		_terminal_loop
 10449 ;;		_UART_ISR
 10450 ;;		_tx_send
 10451 ;;		_tx_sends
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           	psect	text47
 10456  012704                     __ptext47:
 10457                           	opt stack 0
 10458  012704                     _ringbuf_put:
 10459                           	opt stack 13
 10460                           
 10461                           ;My_ringbuf.c: 21: if (ringbuf_num(rb) < rb->size) {
 10462                           
 10463                           ;incstack = 0
 10464  012704  C068  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 10465  012708  C069  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 10466  01270C  EC03  F090         	call	_ringbuf_num	;wreg free
 10467  012710  0100               	movlb	0	; () banked
 10468  012712  EE20 F002          	lfsr	2,2
 10469  012716  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10470  012718  26D9               	addwf	fsr2l,f,c
 10471  01271A  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10472  01271C  22DA               	addwfc	fsr2h,f,c
 10473  01271E  50DE               	movf	postinc2,w,c
 10474  012720  0100               	movlb	0	; () banked
 10475  012722  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 10476  012724  50DE               	movf	postinc2,w,c
 10477  012726  0100               	movlb	0	; () banked
 10478  012728  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 10479  01272A  B0D8               	btfsc	status,0,c
 10480  01272C  0012               	return	
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;My_ringbuf.c: 22: rb->buf[rb->head] = asciicode;
 10484  01272E  0100               	movlb	0	; () banked
 10485  012730  EE20 F004          	lfsr	2,4
 10486  012734  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10487  012736  26D9               	addwf	fsr2l,f,c
 10488  012738  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10489  01273A  22DA               	addwfc	fsr2h,f,c
 10490  01273C  CFDE F06B          	movff	postinc2,??_ringbuf_put
 10491  012740  CFDD F06C          	movff	postdec2,??_ringbuf_put+1
 10492  012744  C068  FFD9         	movff	ringbuf_put@rb,fsr2l
 10493  012748  C069  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 10494  01274C  CFDE F06D          	movff	postinc2,??_ringbuf_put+2
 10495  012750  CFDD F06E          	movff	postdec2,??_ringbuf_put+3
 10496  012754  0100               	movlb	0	; () banked
 10497  012756  516B               	movf	??_ringbuf_put& (0+255),w,b
 10498  012758  0100               	movlb	0	; () banked
 10499  01275A  256D               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 10500  01275C  6ED9               	movwf	fsr2l,c
 10501  01275E  0100               	movlb	0	; () banked
 10502  012760  516C               	movf	(??_ringbuf_put+1)& (0+255),w,b
 10503  012762  0100               	movlb	0	; () banked
 10504  012764  216E               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 10505  012766  6EDA               	movwf	fsr2h,c
 10506  012768  C06A  FFDF         	movff	ringbuf_put@asciicode,indf2
 10507                           
 10508                           ; BSR set to: 0
 10509                           ;My_ringbuf.c: 23: if (rb->head + 1 < rb->size) rb->head++;
 10510  01276C  0100               	movlb	0	; () banked
 10511  01276E  EE20 F002          	lfsr	2,2
 10512  012772  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10513  012774  26D9               	addwf	fsr2l,f,c
 10514  012776  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10515  012778  22DA               	addwfc	fsr2h,f,c
 10516  01277A  0100               	movlb	0	; () banked
 10517  01277C  EE10 F004          	lfsr	1,4
 10518  012780  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10519  012782  26E1               	addwf	fsr1l,f,c
 10520  012784  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10521  012786  22E2               	addwfc	fsr1h,f,c
 10522  012788  CFE6 F06D          	movff	postinc1,??_ringbuf_put+2
 10523  01278C  CFE5 F06E          	movff	postdec1,??_ringbuf_put+3
 10524  012790  0E01               	movlw	1
 10525  012792  0100               	movlb	0	; () banked
 10526  012794  276D               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 10527  012796  0E00               	movlw	0
 10528  012798  236E               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 10529  01279A  50DE               	movf	postinc2,w,c
 10530  01279C  0100               	movlb	0	; () banked
 10531  01279E  5D6D               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 10532  0127A0  50DE               	movf	postinc2,w,c
 10533  0127A2  0100               	movlb	0	; () banked
 10534  0127A4  596E               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 10535  0127A6  B0D8               	btfsc	status,0,c
 10536  0127A8  D00B               	goto	l7746
 10537                           
 10538                           ; BSR set to: 0
 10539  0127AA  0100               	movlb	0	; () banked
 10540  0127AC  EE20 F004          	lfsr	2,4
 10541  0127B0  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10542  0127B2  26D9               	addwf	fsr2l,f,c
 10543  0127B4  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10544  0127B6  22DA               	addwfc	fsr2h,f,c
 10545  0127B8  2ADE               	incf	postinc2,f,c
 10546  0127BA  0E00               	movlw	0
 10547  0127BC  22DD               	addwfc	postdec2,f,c
 10548  0127BE  0012               	return	
 10549  0127C0                     l7746:
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;My_ringbuf.c: 24: else rb->head = 0;
 10553  0127C0  0100               	movlb	0	; () banked
 10554  0127C2  EE20 F004          	lfsr	2,4
 10555  0127C6  5168               	movf	ringbuf_put@rb& (0+255),w,b
 10556  0127C8  26D9               	addwf	fsr2l,f,c
 10557  0127CA  5169               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 10558  0127CC  22DA               	addwfc	fsr2h,f,c
 10559  0127CE  0E00               	movlw	0
 10560  0127D0  6EDE               	movwf	postinc2,c
 10561  0127D2  0E00               	movlw	0
 10562  0127D4  6EDD               	movwf	postdec2,c
 10563                           
 10564                           ; BSR set to: 0
 10565  0127D6  0012               	return	
 10566                           
 10567                           ; BSR set to: 0
 10568                           
 10569                           ; BSR set to: 0
 10570  0127D8  0012               	return		;funcret
 10571  0127DA                     __end_of_ringbuf_put:
 10572                           	opt stack 0
 10573                           tblptru	equ	0xFF8
 10574                           tblptrh	equ	0xFF7
 10575                           tblptrl	equ	0xFF6
 10576                           tablat	equ	0xFF5
 10577                           prodh	equ	0xFF4
 10578                           prodl	equ	0xFF3
 10579                           intcon	equ	0xFF2
 10580                           intcon2	equ	0xFF1
 10581                           indf0	equ	0xFEF
 10582                           postinc0	equ	0xFEE
 10583                           fsr0h	equ	0xFEA
 10584                           fsr0l	equ	0xFE9
 10585                           wreg	equ	0xFE8
 10586                           postinc1	equ	0xFE6
 10587                           postdec1	equ	0xFE5
 10588                           fsr1h	equ	0xFE2
 10589                           fsr1l	equ	0xFE1
 10590                           indf2	equ	0xFDF
 10591                           postinc2	equ	0xFDE
 10592                           postdec2	equ	0xFDD
 10593                           fsr2h	equ	0xFDA
 10594                           fsr2l	equ	0xFD9
 10595                           status	equ	0xFD8
 10596                           
 10597 ;; *************** function _ringbuf_pop *****************
 10598 ;; Defined at:
 10599 ;;		line 45 in file "../My_library/My_ringbuf.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 10602 ;;		 -> terminal_loop@command(8), tx_buf(8), usb_tx(8), usb_rx(8), 
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;  ret             1   14[BANK0 ] unsigned char 
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  1    wreg      unsigned char 
 10607 ;; Registers used:
 10608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10617 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10618 ;;Total ram usage:        7 bytes
 10619 ;; Hardware stack levels used:    1
 10620 ;; Hardware stack levels required when called:   12
 10621 ;; This function calls:
 10622 ;;		_ringbuf_num
 10623 ;; This function is called by:
 10624 ;;		_USB_loop
 10625 ;;		_terminal_loop
 10626 ;;		_UART_ISR
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           
 10630                           	psect	text48
 10631  0128AA                     __ptext48:
 10632                           	opt stack 0
 10633  0128AA                     _ringbuf_pop:
 10634                           	opt stack 17
 10635                           
 10636                           ;My_ringbuf.c: 46: if (ringbuf_num(rb)) {
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;incstack = 0
 10640  0128AA  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 10641  0128AE  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 10642  0128B2  EC03  F090         	call	_ringbuf_num	;wreg free
 10643  0128B6  0100               	movlb	0	; () banked
 10644  0128B8  5160               	movf	?_ringbuf_num& (0+255),w,b
 10645  0128BA  0100               	movlb	0	; () banked
 10646  0128BC  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 10647  0128BE  B4D8               	btfsc	status,2,c
 10648  0128C0  D059               	goto	l8558
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;My_ringbuf.c: 47: char ret = rb->buf[rb->tail];
 10652  0128C2  0100               	movlb	0	; () banked
 10653  0128C4  EE20 F006          	lfsr	2,6
 10654  0128C8  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10655  0128CA  26D9               	addwf	fsr2l,f,c
 10656  0128CC  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10657  0128CE  22DA               	addwfc	fsr2h,f,c
 10658  0128D0  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 10659  0128D4  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 10660  0128D8  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 10661  0128DC  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 10662  0128E0  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 10663  0128E4  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 10664  0128E8  0100               	movlb	0	; () banked
 10665  0128EA  516A               	movf	??_ringbuf_pop& (0+255),w,b
 10666  0128EC  0100               	movlb	0	; () banked
 10667  0128EE  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 10668  0128F0  6ED9               	movwf	fsr2l,c
 10669  0128F2  0100               	movlb	0	; () banked
 10670  0128F4  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 10671  0128F6  0100               	movlb	0	; () banked
 10672  0128F8  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 10673  0128FA  6EDA               	movwf	fsr2h,c
 10674  0128FC  50DF               	movf	indf2,w,c
 10675  0128FE  0100               	movlb	0	; () banked
 10676  012900  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;My_ringbuf.c: 48: if (rb->tail + 1 < rb->size) {
 10680  012902  0100               	movlb	0	; () banked
 10681  012904  EE20 F002          	lfsr	2,2
 10682  012908  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10683  01290A  26D9               	addwf	fsr2l,f,c
 10684  01290C  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10685  01290E  22DA               	addwfc	fsr2h,f,c
 10686  012910  0100               	movlb	0	; () banked
 10687  012912  EE10 F006          	lfsr	1,6
 10688  012916  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10689  012918  26E1               	addwf	fsr1l,f,c
 10690  01291A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10691  01291C  22E2               	addwfc	fsr1h,f,c
 10692  01291E  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 10693  012922  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 10694  012926  0E01               	movlw	1
 10695  012928  0100               	movlb	0	; () banked
 10696  01292A  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 10697  01292C  0E00               	movlw	0
 10698  01292E  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 10699  012930  50DE               	movf	postinc2,w,c
 10700  012932  0100               	movlb	0	; () banked
 10701  012934  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 10702  012936  50DE               	movf	postinc2,w,c
 10703  012938  0100               	movlb	0	; () banked
 10704  01293A  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 10705  01293C  B0D8               	btfsc	status,0,c
 10706  01293E  D00B               	goto	l8550
 10707                           
 10708                           ; BSR set to: 0
 10709                           ;My_ringbuf.c: 49: rb->tail++;
 10710  012940  0100               	movlb	0	; () banked
 10711  012942  EE20 F006          	lfsr	2,6
 10712  012946  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10713  012948  26D9               	addwf	fsr2l,f,c
 10714  01294A  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10715  01294C  22DA               	addwfc	fsr2h,f,c
 10716  01294E  2ADE               	incf	postinc2,f,c
 10717  012950  0E00               	movlw	0
 10718  012952  22DD               	addwfc	postdec2,f,c
 10719                           
 10720                           ;My_ringbuf.c: 50: } else {
 10721  012954  D00C               	goto	l8552
 10722  012956                     l8550:
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;My_ringbuf.c: 51: rb->tail = 0;
 10726  012956  0100               	movlb	0	; () banked
 10727  012958  EE20 F006          	lfsr	2,6
 10728  01295C  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 10729  01295E  26D9               	addwf	fsr2l,f,c
 10730  012960  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 10731  012962  22DA               	addwfc	fsr2h,f,c
 10732  012964  0E00               	movlw	0
 10733  012966  6EDE               	movwf	postinc2,c
 10734  012968  0E00               	movlw	0
 10735  01296A  6EDD               	movwf	postdec2,c
 10736  01296C  D000               	goto	l8552
 10737  01296E                     l8552:
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;My_ringbuf.c: 52: }
 10741                           ;My_ringbuf.c: 53: return ret;
 10742  01296E  0100               	movlb	0	; () banked
 10743  012970  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;My_ringbuf.c: 54: } else {
 10747                           
 10748                           ; BSR set to: 0
 10749  012972  0012               	return	
 10750  012974                     l8558:
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;My_ringbuf.c: 55: return 0;
 10754  012974  0E00               	movlw	0
 10755                           
 10756                           ; BSR set to: 0
 10757  012976  0012               	return	
 10758                           
 10759                           ; BSR set to: 0
 10760                           
 10761                           ; BSR set to: 0
 10762  012978  0012               	return		;funcret
 10763  01297A                     __end_of_ringbuf_pop:
 10764                           	opt stack 0
 10765                           tblptru	equ	0xFF8
 10766                           tblptrh	equ	0xFF7
 10767                           tblptrl	equ	0xFF6
 10768                           tablat	equ	0xFF5
 10769                           prodh	equ	0xFF4
 10770                           prodl	equ	0xFF3
 10771                           intcon	equ	0xFF2
 10772                           intcon2	equ	0xFF1
 10773                           indf0	equ	0xFEF
 10774                           postinc0	equ	0xFEE
 10775                           fsr0h	equ	0xFEA
 10776                           fsr0l	equ	0xFE9
 10777                           wreg	equ	0xFE8
 10778                           postinc1	equ	0xFE6
 10779                           postdec1	equ	0xFE5
 10780                           fsr1h	equ	0xFE2
 10781                           fsr1l	equ	0xFE1
 10782                           indf2	equ	0xFDF
 10783                           postinc2	equ	0xFDE
 10784                           postdec2	equ	0xFDD
 10785                           fsr2h	equ	0xFDA
 10786                           fsr2l	equ	0xFD9
 10787                           status	equ	0xFD8
 10788                           
 10789 ;; *************** function _ringbuf_num *****************
 10790 ;; Defined at:
 10791 ;;		line 12 in file "../My_library/My_ringbuf.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 10794 ;;		 -> terminal_loop@command(8), rx_buf(8), tx_buf(8), usb_tx(8), 
 10795 ;;		 -> usb_rx(8), 
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  2    0[BANK0 ] unsigned int 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10809 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10810 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10811 ;;Total ram usage:        8 bytes
 10812 ;; Hardware stack levels used:    1
 10813 ;; Hardware stack levels required when called:   11
 10814 ;; This function calls:
 10815 ;;		Nothing
 10816 ;; This function is called by:
 10817 ;;		_USB_loop
 10818 ;;		_ringbuf_put
 10819 ;;		_ringbuf_pop
 10820 ;;		_ringbuf_backspace
 10821 ;;		_terminal_loop
 10822 ;;		_UART_ISR
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text49
 10827  012006                     __ptext49:
 10828                           	opt stack 0
 10829  012006                     _ringbuf_num:
 10830                           	opt stack 13
 10831                           
 10832                           ;My_ringbuf.c: 13: if (rb->head >= rb->tail) {
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;incstack = 0
 10836  012006  0100               	movlb	0	; () banked
 10837  012008  EE20 F006          	lfsr	2,6
 10838  01200C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10839  01200E  26D9               	addwf	fsr2l,f,c
 10840  012010  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10841  012012  22DA               	addwfc	fsr2h,f,c
 10842  012014  0100               	movlb	0	; () banked
 10843  012016  EE10 F004          	lfsr	1,4
 10844  01201A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10845  01201C  26E1               	addwf	fsr1l,f,c
 10846  01201E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10847  012020  22E2               	addwfc	fsr1h,f,c
 10848  012022  50DE               	movf	postinc2,w,c
 10849  012024  5CE6               	subwf	postinc1,w,c
 10850  012026  50DE               	movf	postinc2,w,c
 10851  012028  58E6               	subwfb	postinc1,w,c
 10852  01202A  A0D8               	btfss	status,0,c
 10853  01202C  D028               	goto	l7642
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;My_ringbuf.c: 14: return (rb->head - rb->tail);
 10857  01202E  0100               	movlb	0	; () banked
 10858  012030  EE20 F004          	lfsr	2,4
 10859  012034  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10860  012036  26D9               	addwf	fsr2l,f,c
 10861  012038  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10862  01203A  22DA               	addwfc	fsr2h,f,c
 10863  01203C  CFDE F062          	movff	postinc2,??_ringbuf_num
 10864  012040  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10865  012044  0100               	movlb	0	; () banked
 10866  012046  EE20 F006          	lfsr	2,6
 10867  01204A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10868  01204C  26D9               	addwf	fsr2l,f,c
 10869  01204E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10870  012050  22DA               	addwfc	fsr2h,f,c
 10871  012052  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10872  012056  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10873  01205A  0100               	movlb	0	; () banked
 10874  01205C  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 10875  01205E  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 10876  012060  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 10877  012062  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 10878  012064  0100               	movlb	0	; () banked
 10879  012066  5162               	movf	??_ringbuf_num& (0+255),w,b
 10880  012068  0100               	movlb	0	; () banked
 10881  01206A  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 10882  01206C  0100               	movlb	0	; () banked
 10883  01206E  6F60               	movwf	?_ringbuf_num& (0+255),b
 10884  012070  0100               	movlb	0	; () banked
 10885  012072  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10886  012074  0100               	movlb	0	; () banked
 10887  012076  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 10888  012078  0100               	movlb	0	; () banked
 10889  01207A  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;My_ringbuf.c: 15: } else {
 10893                           
 10894                           ; BSR set to: 0
 10895  01207C  0012               	return	
 10896  01207E                     l7642:
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;My_ringbuf.c: 16: return (rb->size + rb->head - rb->tail);
 10900  01207E  0100               	movlb	0	; () banked
 10901  012080  EE20 F004          	lfsr	2,4
 10902  012084  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10903  012086  26D9               	addwf	fsr2l,f,c
 10904  012088  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10905  01208A  22DA               	addwfc	fsr2h,f,c
 10906  01208C  CFDE F062          	movff	postinc2,??_ringbuf_num
 10907  012090  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 10908  012094  0100               	movlb	0	; () banked
 10909  012096  EE20 F002          	lfsr	2,2
 10910  01209A  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10911  01209C  26D9               	addwf	fsr2l,f,c
 10912  01209E  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10913  0120A0  22DA               	addwfc	fsr2h,f,c
 10914  0120A2  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 10915  0120A6  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 10916  0120AA  0100               	movlb	0	; () banked
 10917  0120AC  EE20 F006          	lfsr	2,6
 10918  0120B0  5160               	movf	ringbuf_num@rb& (0+255),w,b
 10919  0120B2  26D9               	addwf	fsr2l,f,c
 10920  0120B4  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 10921  0120B6  22DA               	addwfc	fsr2h,f,c
 10922  0120B8  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 10923  0120BC  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 10924  0120C0  0100               	movlb	0	; () banked
 10925  0120C2  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 10926  0120C4  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 10927  0120C6  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 10928  0120C8  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 10929  0120CA  0100               	movlb	0	; () banked
 10930  0120CC  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 10931  0120CE  0100               	movlb	0	; () banked
 10932  0120D0  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 10933  0120D2  0100               	movlb	0	; () banked
 10934  0120D4  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 10935  0120D6  0100               	movlb	0	; () banked
 10936  0120D8  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 10937  0120DA  0100               	movlb	0	; () banked
 10938  0120DC  5162               	movf	??_ringbuf_num& (0+255),w,b
 10939  0120DE  0100               	movlb	0	; () banked
 10940  0120E0  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 10941  0120E2  0100               	movlb	0	; () banked
 10942  0120E4  6F60               	movwf	?_ringbuf_num& (0+255),b
 10943  0120E6  0100               	movlb	0	; () banked
 10944  0120E8  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 10945  0120EA  0100               	movlb	0	; () banked
 10946  0120EC  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 10947  0120EE  0100               	movlb	0	; () banked
 10948  0120F0  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 10949                           
 10950                           ; BSR set to: 0
 10951  0120F2  0012               	return	
 10952                           
 10953                           ; BSR set to: 0
 10954                           
 10955                           ; BSR set to: 0
 10956  0120F4  0012               	return		;funcret
 10957  0120F6                     __end_of_ringbuf_num:
 10958                           	opt stack 0
 10959                           tblptru	equ	0xFF8
 10960                           tblptrh	equ	0xFF7
 10961                           tblptrl	equ	0xFF6
 10962                           tablat	equ	0xFF5
 10963                           prodh	equ	0xFF4
 10964                           prodl	equ	0xFF3
 10965                           intcon	equ	0xFF2
 10966                           intcon2	equ	0xFF1
 10967                           indf0	equ	0xFEF
 10968                           postinc0	equ	0xFEE
 10969                           fsr0h	equ	0xFEA
 10970                           fsr0l	equ	0xFE9
 10971                           wreg	equ	0xFE8
 10972                           postinc1	equ	0xFE6
 10973                           postdec1	equ	0xFE5
 10974                           fsr1h	equ	0xFE2
 10975                           fsr1l	equ	0xFE1
 10976                           indf2	equ	0xFDF
 10977                           postinc2	equ	0xFDE
 10978                           postdec2	equ	0xFDD
 10979                           fsr2h	equ	0xFDA
 10980                           fsr2l	equ	0xFD9
 10981                           status	equ	0xFD8
 10982                           
 10983 ;; *************** function _put_string_usb *****************
 10984 ;; Defined at:
 10985 ;;		line 20 in file "../My_library/usb_cdc/My_usb_cdc.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  s               2   12[BANK0 ] PTR unsigned char 
 10988 ;;		 -> USB_loop@data(1), 
 10989 ;;  len             2   14[BANK0 ] int 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  2   12[BANK0 ] int 
 10994 ;; Registers used:
 10995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11001 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11005 ;;Total ram usage:        4 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:   13
 11008 ;; This function calls:
 11009 ;;		_CDCTxService
 11010 ;;		_is_usb_available
 11011 ;;		_putUSBUSART
 11012 ;; This function is called by:
 11013 ;;		_USB_loop
 11014 ;; This function uses a non-reentrant model
 11015 ;;
 11016                           
 11017                           	psect	text50
 11018  013D4A                     __ptext50:
 11019                           	opt stack 0
 11020  013D4A                     _put_string_usb:
 11021                           	opt stack 16
 11022                           
 11023                           ;My_usb_cdc.c: 21: if (!is_usb_available()) {
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;incstack = 0
 11027  013D4A  ECE6  F09F         	call	_is_usb_available	;wreg free
 11028  013D4E  0900               	iorlw	0
 11029  013D50  B4D8               	btfsc	status,2,c
 11030  013D52  0012               	return	
 11031  013D54  D005               	goto	l8518
 11032                           
 11033                           ;My_usb_cdc.c: 23: return 1;
 11034                           ;	Return value of _put_string_usb is never used
 11035  013D56  0012               	return	
 11036                           
 11037                           ;My_usb_cdc.c: 24: }
 11038                           ;My_usb_cdc.c: 25: while (!(cdc_trf_state == 0)) CDCTxService();
 11039  013D58  D003               	goto	l8518
 11040  013D5A                     l8516:
 11041  013D5A  EC7F  F089         	call	_CDCTxService	;wreg free
 11042  013D5E  D000               	goto	l8518
 11043  013D60                     l8518:
 11044  013D60  5021               	movf	_cdc_trf_state,w,c
 11045  013D62  A4D8               	btfss	status,2,c
 11046  013D64  D7FA               	goto	l8516
 11047                           
 11048                           ;My_usb_cdc.c: 26: putUSBUSART(s, len);
 11049  013D66  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 11050  013D6A  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 11051  013D6E  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 11052  013D72  ECB3  F09F         	call	_putUSBUSART	;wreg free
 11053                           
 11054                           ;My_usb_cdc.c: 27: CDCTxService();
 11055  013D76  EC7F  F089         	call	_CDCTxService	;wreg free
 11056  013D7A  0012               	return	
 11057                           
 11058                           ;My_usb_cdc.c: 28: return 0;
 11059                           ;	Return value of _put_string_usb is never used
 11060  013D7C  0012               	return		;funcret
 11061  013D7E                     __end_of_put_string_usb:
 11062                           	opt stack 0
 11063                           tblptru	equ	0xFF8
 11064                           tblptrh	equ	0xFF7
 11065                           tblptrl	equ	0xFF6
 11066                           tablat	equ	0xFF5
 11067                           prodh	equ	0xFF4
 11068                           prodl	equ	0xFF3
 11069                           intcon	equ	0xFF2
 11070                           intcon2	equ	0xFF1
 11071                           indf0	equ	0xFEF
 11072                           postinc0	equ	0xFEE
 11073                           fsr0h	equ	0xFEA
 11074                           fsr0l	equ	0xFE9
 11075                           wreg	equ	0xFE8
 11076                           postinc1	equ	0xFE6
 11077                           postdec1	equ	0xFE5
 11078                           fsr1h	equ	0xFE2
 11079                           fsr1l	equ	0xFE1
 11080                           indf2	equ	0xFDF
 11081                           postinc2	equ	0xFDE
 11082                           postdec2	equ	0xFDD
 11083                           fsr2h	equ	0xFDA
 11084                           fsr2l	equ	0xFD9
 11085                           status	equ	0xFD8
 11086                           
 11087 ;; *************** function _putUSBUSART *****************
 11088 ;; Defined at:
 11089 ;;		line 613 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  data            2    0[BANK0 ] PTR unsigned char 
 11092 ;;		 -> USB_loop@data(1), 
 11093 ;;  length          1    2[BANK0 ] unsigned char 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;		None
 11096 ;; Return value:  Size  Location     Type
 11097 ;;		None               void
 11098 ;; Registers used:
 11099 ;;		wreg, status,2, status,0
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11105 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;Total ram usage:        3 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:   11
 11112 ;; This function calls:
 11113 ;;		Nothing
 11114 ;; This function is called by:
 11115 ;;		_put_string_usb
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text51
 11120  013F66                     __ptext51:
 11121                           	opt stack 0
 11122  013F66                     _putUSBUSART:
 11123                           	opt stack 17
 11124                           
 11125                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 11126                           
 11127                           ;incstack = 0
 11128  013F66  98A0               	bcf	4000,4,c	;volatile
 11129                           
 11130                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 11131  013F68  5021               	movf	_cdc_trf_state,w,c
 11132  013F6A  A4D8               	btfss	status,2,c
 11133  013F6C  D00C               	goto	l8354
 11134                           
 11135                           ;usb_device_cdc.c: 640: {
 11136                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 11137  013F6E  C060  F0DB         	movff	putUSBUSART@data,_pCDCSrc
 11138  013F72  C061  F0DC         	movff	putUSBUSART@data+1,_pCDCSrc+1
 11139  013F76  C062  F0EB         	movff	putUSBUSART@length,_cdc_tx_len
 11140  013F7A  0E01               	movlw	1
 11141  013F7C  0100               	movlb	0	; () banked
 11142  013F7E  6FE9               	movwf	_cdc_mem_type& (0+255),b
 11143                           
 11144                           ; BSR set to: 0
 11145  013F80  0E01               	movlw	1
 11146  013F82  6E21               	movwf	_cdc_trf_state,c
 11147  013F84  D000               	goto	l8354
 11148  013F86                     l8354:
 11149                           
 11150                           ;usb_device_cdc.c: 642: }
 11151                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 11152  013F86  88A0               	bsf	4000,4,c	;volatile
 11153  013F88  0012               	return		;funcret
 11154  013F8A                     __end_of_putUSBUSART:
 11155                           	opt stack 0
 11156                           tblptru	equ	0xFF8
 11157                           tblptrh	equ	0xFF7
 11158                           tblptrl	equ	0xFF6
 11159                           tablat	equ	0xFF5
 11160                           prodh	equ	0xFF4
 11161                           prodl	equ	0xFF3
 11162                           intcon	equ	0xFF2
 11163                           intcon2	equ	0xFF1
 11164                           indf0	equ	0xFEF
 11165                           postinc0	equ	0xFEE
 11166                           fsr0h	equ	0xFEA
 11167                           fsr0l	equ	0xFE9
 11168                           wreg	equ	0xFE8
 11169                           postinc1	equ	0xFE6
 11170                           postdec1	equ	0xFE5
 11171                           fsr1h	equ	0xFE2
 11172                           fsr1l	equ	0xFE1
 11173                           indf2	equ	0xFDF
 11174                           postinc2	equ	0xFDE
 11175                           postdec2	equ	0xFDD
 11176                           fsr2h	equ	0xFDA
 11177                           fsr2l	equ	0xFD9
 11178                           status	equ	0xFD8
 11179                           
 11180 ;; *************** function _get_string_usb *****************
 11181 ;; Defined at:
 11182 ;;		line 31 in file "../My_library/usb_cdc/My_usb_cdc.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  s               2   13[BANK0 ] PTR unsigned char 
 11185 ;;		 -> USB_loop@data(1), 
 11186 ;;  len             2   15[BANK0 ] int 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  rx_len          2   18[BANK0 ] int 
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  2   13[BANK0 ] int 
 11191 ;; Registers used:
 11192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11201 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11202 ;;Total ram usage:        7 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:   13
 11205 ;; This function calls:
 11206 ;;		_CDCTxService
 11207 ;;		_getsUSBUSART
 11208 ;;		_is_usb_available
 11209 ;; This function is called by:
 11210 ;;		_USB_loop
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text52
 11215  013AE0                     __ptext52:
 11216                           	opt stack 0
 11217  013AE0                     _get_string_usb:
 11218                           	opt stack 16
 11219                           
 11220                           ;My_usb_cdc.c: 32: int rx_len;
 11221                           ;My_usb_cdc.c: 33: if (!is_usb_available()) {
 11222                           
 11223                           ;incstack = 0
 11224  013AE0  ECE6  F09F         	call	_is_usb_available	;wreg free
 11225  013AE4  0900               	iorlw	0
 11226  013AE6  A4D8               	btfss	status,2,c
 11227  013AE8  D00A               	goto	l8534
 11228                           
 11229                           ;My_usb_cdc.c: 35: return 0;
 11230  013AEA  0E00               	movlw	0
 11231  013AEC  0100               	movlb	0	; () banked
 11232  013AEE  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 11233  013AF0  0E00               	movlw	0
 11234  013AF2  6F6D               	movwf	?_get_string_usb& (0+255),b
 11235                           
 11236                           ; BSR set to: 0
 11237  013AF4  0012               	return	
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;My_usb_cdc.c: 36: }
 11241                           ;My_usb_cdc.c: 37: while (!(cdc_trf_state == 0)) CDCTxService();
 11242  013AF6  D003               	goto	l8534
 11243  013AF8                     l8532:
 11244  013AF8  EC7F  F089         	call	_CDCTxService	;wreg free
 11245  013AFC  D000               	goto	l8534
 11246  013AFE                     l8534:
 11247  013AFE  5021               	movf	_cdc_trf_state,w,c
 11248  013B00  A4D8               	btfss	status,2,c
 11249  013B02  D7FA               	goto	l8532
 11250                           
 11251                           ;My_usb_cdc.c: 38: rx_len = getsUSBUSART(s, len);
 11252  013B04  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 11253  013B08  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 11254  013B0C  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 11255  013B10  EC89  F08F         	call	_getsUSBUSART	;wreg free
 11256  013B14  0100               	movlb	0	; () banked
 11257  013B16  6F71               	movwf	??_get_string_usb& (0+255),b
 11258  013B18  0100               	movlb	0	; () banked
 11259  013B1A  5171               	movf	??_get_string_usb& (0+255),w,b
 11260  013B1C  0100               	movlb	0	; () banked
 11261  013B1E  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 11262  013B20  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 11263                           
 11264                           ;My_usb_cdc.c: 39: CDCTxService();
 11265  013B22  EC7F  F089         	call	_CDCTxService	;wreg free
 11266                           
 11267                           ;My_usb_cdc.c: 40: return rx_len;
 11268  013B26  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 11269  013B2A  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 11270  013B2E  0012               	return	
 11271  013B30  0012               	return		;funcret
 11272  013B32                     __end_of_get_string_usb:
 11273                           	opt stack 0
 11274                           tblptru	equ	0xFF8
 11275                           tblptrh	equ	0xFF7
 11276                           tblptrl	equ	0xFF6
 11277                           tablat	equ	0xFF5
 11278                           prodh	equ	0xFF4
 11279                           prodl	equ	0xFF3
 11280                           intcon	equ	0xFF2
 11281                           intcon2	equ	0xFF1
 11282                           indf0	equ	0xFEF
 11283                           postinc0	equ	0xFEE
 11284                           fsr0h	equ	0xFEA
 11285                           fsr0l	equ	0xFE9
 11286                           wreg	equ	0xFE8
 11287                           postinc1	equ	0xFE6
 11288                           postdec1	equ	0xFE5
 11289                           fsr1h	equ	0xFE2
 11290                           fsr1l	equ	0xFE1
 11291                           indf2	equ	0xFDF
 11292                           postinc2	equ	0xFDE
 11293                           postdec2	equ	0xFDD
 11294                           fsr2h	equ	0xFDA
 11295                           fsr2l	equ	0xFD9
 11296                           status	equ	0xFD8
 11297                           
 11298 ;; *************** function _is_usb_available *****************
 11299 ;; Defined at:
 11300 ;;		line 16 in file "../My_library/usb_cdc/My_usb_cdc.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      unsigned char 
 11307 ;; Registers used:
 11308 ;;		wreg, status,2, status,0
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11318 ;;Total ram usage:        1 bytes
 11319 ;; Hardware stack levels used:    1
 11320 ;; Hardware stack levels required when called:   11
 11321 ;; This function calls:
 11322 ;;		Nothing
 11323 ;; This function is called by:
 11324 ;;		_put_string_usb
 11325 ;;		_get_string_usb
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329                           	psect	text53
 11330  013FCC                     __ptext53:
 11331                           	opt stack 0
 11332  013FCC                     _is_usb_available:
 11333                           	opt stack 17
 11334                           
 11335                           ;My_usb_cdc.c: 17: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 11336                           
 11337                           ;incstack = 0
 11338  013FCC  0E00               	movlw	0
 11339  013FCE  0100               	movlb	0	; () banked
 11340  013FD0  6F60               	movwf	_is_usb_available$2041& (0+255),b
 11341                           
 11342                           ; BSR set to: 0
 11343  013FD2  0E1F               	movlw	31
 11344  013FD4  641D               	cpfsgt	_USBDeviceState,c	;volatile
 11345  013FD6  D005               	goto	l549
 11346                           
 11347                           ; BSR set to: 0
 11348  013FD8  B265               	btfsc	3941,1,c	;volatile
 11349  013FDA  D003               	goto	l549
 11350                           
 11351                           ; BSR set to: 0
 11352  013FDC  0E01               	movlw	1
 11353  013FDE  0100               	movlb	0	; () banked
 11354  013FE0  6F60               	movwf	_is_usb_available$2041& (0+255),b
 11355  013FE2                     l549:
 11356                           
 11357                           ; BSR set to: 0
 11358  013FE2  0100               	movlb	0	; () banked
 11359  013FE4  5160               	movf	_is_usb_available$2041& (0+255),w,b
 11360  013FE6  0012               	return	
 11361                           
 11362                           ; BSR set to: 0
 11363                           
 11364                           ; BSR set to: 0
 11365  013FE8  0012               	return		;funcret
 11366  013FEA                     __end_of_is_usb_available:
 11367                           	opt stack 0
 11368                           tblptru	equ	0xFF8
 11369                           tblptrh	equ	0xFF7
 11370                           tblptrl	equ	0xFF6
 11371                           tablat	equ	0xFF5
 11372                           prodh	equ	0xFF4
 11373                           prodl	equ	0xFF3
 11374                           intcon	equ	0xFF2
 11375                           intcon2	equ	0xFF1
 11376                           indf0	equ	0xFEF
 11377                           postinc0	equ	0xFEE
 11378                           fsr0h	equ	0xFEA
 11379                           fsr0l	equ	0xFE9
 11380                           wreg	equ	0xFE8
 11381                           postinc1	equ	0xFE6
 11382                           postdec1	equ	0xFE5
 11383                           fsr1h	equ	0xFE2
 11384                           fsr1l	equ	0xFE1
 11385                           indf2	equ	0xFDF
 11386                           postinc2	equ	0xFDE
 11387                           postdec2	equ	0xFDD
 11388                           fsr2h	equ	0xFDA
 11389                           fsr2l	equ	0xFD9
 11390                           status	equ	0xFD8
 11391                           
 11392 ;; *************** function _getsUSBUSART *****************
 11393 ;; Defined at:
 11394 ;;		line 542 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 11395 ;; Parameters:    Size  Location     Type
 11396 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 11397 ;;		 -> USB_loop@data(1), 
 11398 ;;  len             1    9[BANK0 ] unsigned char 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      unsigned char 
 11403 ;; Registers used:
 11404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11410 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;Total ram usage:        6 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:   12
 11417 ;; This function calls:
 11418 ;;		_USBTransferOnePacket
 11419 ;; This function is called by:
 11420 ;;		_get_string_usb
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text54
 11425  011F12                     __ptext54:
 11426                           	opt stack 0
 11427  011F12                     _getsUSBUSART:
 11428                           	opt stack 16
 11429                           
 11430                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;incstack = 0
 11434  011F12  0E00               	movlw	0
 11435  011F14  0100               	movlb	0	; () banked
 11436  011F16  6FEA               	movwf	_cdc_rx_len& (0+255),b
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 11440  011F18  0100               	movlb	0	; () banked
 11441  011F1A  51E2               	movf	_CDCDataOutHandle& (0+255),w,b
 11442  011F1C  0100               	movlb	0	; () banked
 11443  011F1E  11E3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 11444  011F20  B4D8               	btfsc	status,2,c
 11445  011F22  D013               	goto	l8320
 11446                           
 11447                           ; BSR set to: 0
 11448  011F24  C0E2  FFD9         	movff	_CDCDataOutHandle,fsr2l
 11449  011F28  C0E3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 11450  011F2C  0100               	movlb	0	; () banked
 11451  011F2E  AEDF               	btfss	indf2,7,c
 11452  011F30  D004               	goto	u8260
 11453  011F32  0100               	movlb	0	; () banked
 11454  011F34  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11455  011F36  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 11456  011F38  D002               	goto	u8268
 11457  011F3A                     u8260:
 11458  011F3A  0100               	movlb	0	; () banked
 11459  011F3C  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 11460  011F3E                     u8268:
 11461  011F3E  0100               	movlb	0	; () banked
 11462  011F40  516A               	movf	??_getsUSBUSART& (0+255),w,b
 11463  011F42  0100               	movlb	0	; () banked
 11464  011F44  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 11465  011F46  6B6C               	clrf	(_getsUSBUSART$1886+1)& (0+255),b
 11466  011F48  D006               	goto	l8322
 11467  011F4A                     l8320:
 11468                           
 11469                           ; BSR set to: 0
 11470  011F4A  0E00               	movlw	0
 11471  011F4C  0100               	movlb	0	; () banked
 11472  011F4E  6F6C               	movwf	(_getsUSBUSART$1886+1)& (0+255),b
 11473  011F50  0E00               	movlw	0
 11474  011F52  6F6B               	movwf	_getsUSBUSART$1886& (0+255),b
 11475  011F54  D000               	goto	l8322
 11476  011F56                     l8322:
 11477                           
 11478                           ; BSR set to: 0
 11479  011F56  0100               	movlb	0	; () banked
 11480  011F58  516B               	movf	_getsUSBUSART$1886& (0+255),w,b
 11481  011F5A  0100               	movlb	0	; () banked
 11482  011F5C  116C               	iorwf	(_getsUSBUSART$1886+1)& (0+255),w,b
 11483  011F5E  A4D8               	btfss	status,2,c
 11484  011F60  D04E               	goto	l8338
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;usb_device_cdc.c: 547: {
 11488                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 11489  011F62  0100               	movlb	0	; () banked
 11490  011F64  EE20 F001          	lfsr	2,1
 11491  011F68  51E2               	movf	_CDCDataOutHandle& (0+255),w,b
 11492  011F6A  26D9               	addwf	fsr2l,f,c
 11493  011F6C  51E3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11494  011F6E  22DA               	addwfc	fsr2h,f,c
 11495  011F70  0100               	movlb	0	; () banked
 11496  011F72  5169               	movf	getsUSBUSART@len& (0+255),w,b
 11497  011F74  5CDE               	subwf	postinc2,w,c
 11498  011F76  B0D8               	btfsc	status,0,c
 11499  011F78  D00B               	goto	l8328
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 11503  011F7A  0100               	movlb	0	; () banked
 11504  011F7C  EE20 F001          	lfsr	2,1
 11505  011F80  51E2               	movf	_CDCDataOutHandle& (0+255),w,b
 11506  011F82  26D9               	addwf	fsr2l,f,c
 11507  011F84  51E3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 11508  011F86  22DA               	addwfc	fsr2h,f,c
 11509  011F88  50DF               	movf	indf2,w,c
 11510  011F8A  0100               	movlb	0	; () banked
 11511  011F8C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 11512  011F8E  D000               	goto	l8328
 11513  011F90                     l8328:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 11517  011F90  0E00               	movlw	0
 11518  011F92  0100               	movlb	0	; () banked
 11519  011F94  6FEA               	movwf	_cdc_rx_len& (0+255),b
 11520  011F96  D019               	goto	l8334
 11521  011F98                     l8330:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 11525  011F98  0100               	movlb	0	; () banked
 11526  011F9A  51EA               	movf	_cdc_rx_len& (0+255),w,b
 11527  011F9C  0D01               	mullw	1
 11528  011F9E  0E00               	movlw	low _cdc_data_rx
 11529  011FA0  24F3               	addwf	prodl,w,c
 11530  011FA2  6ED9               	movwf	fsr2l,c
 11531  011FA4  0E02               	movlw	high _cdc_data_rx
 11532  011FA6  20F4               	addwfc	prodh,w,c
 11533  011FA8  6EDA               	movwf	fsr2h,c
 11534  011FAA  0100               	movlb	0	; () banked
 11535  011FAC  51EA               	movf	_cdc_rx_len& (0+255),w,b
 11536  011FAE  0D01               	mullw	1
 11537  011FB0  50F3               	movf	prodl,w,c
 11538  011FB2  0100               	movlb	0	; () banked
 11539  011FB4  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 11540  011FB6  6EE1               	movwf	fsr1l,c
 11541  011FB8  50F4               	movf	prodh,w,c
 11542  011FBA  0100               	movlb	0	; () banked
 11543  011FBC  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 11544  011FBE  6EE2               	movwf	fsr1h,c
 11545  011FC0  CFDF FFE7          	movff	indf2,indf1
 11546                           
 11547                           ; BSR set to: 0
 11548  011FC4  0100               	movlb	0	; () banked
 11549  011FC6  2BEA               	incf	_cdc_rx_len& (0+255),f,b
 11550  011FC8  D000               	goto	l8334
 11551  011FCA                     l8334:
 11552                           
 11553                           ; BSR set to: 0
 11554  011FCA  0100               	movlb	0	; () banked
 11555  011FCC  5169               	movf	getsUSBUSART@len& (0+255),w,b
 11556  011FCE  0100               	movlb	0	; () banked
 11557  011FD0  5DEA               	subwf	_cdc_rx_len& (0+255),w,b
 11558  011FD2  A0D8               	btfss	status,0,c
 11559  011FD4  D7E1               	goto	l8330
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11563                           
 11564                           ; BSR set to: 0
 11565  011FD6  0E00               	movlw	0
 11566  011FD8  0100               	movlb	0	; () banked
 11567  011FDA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11568  011FDC  0E00               	movlw	low _cdc_data_rx
 11569  011FDE  0100               	movlb	0	; () banked
 11570  011FE0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11571  011FE2  0E02               	movlw	high _cdc_data_rx
 11572  011FE4  0100               	movlb	0	; () banked
 11573  011FE6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11574  011FE8  0E40               	movlw	64
 11575  011FEA  0100               	movlb	0	; () banked
 11576  011FEC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11577  011FEE  0E02               	movlw	2
 11578  011FF0  ECCD  F091         	call	_USBTransferOnePacket
 11579  011FF4  C060  F0E2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 11580  011FF8  C061  F0E3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 11581  011FFC  D000               	goto	l8338
 11582  011FFE                     l8338:
 11583                           
 11584                           ;usb_device_cdc.c: 567: }
 11585                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 11586  011FFE  0100               	movlb	0	; () banked
 11587  012000  51EA               	movf	_cdc_rx_len& (0+255),w,b
 11588  012002  0012               	return	
 11589                           
 11590                           ; BSR set to: 0
 11591                           
 11592                           ; BSR set to: 0
 11593  012004  0012               	return		;funcret
 11594  012006                     __end_of_getsUSBUSART:
 11595                           	opt stack 0
 11596                           tblptru	equ	0xFF8
 11597                           tblptrh	equ	0xFF7
 11598                           tblptrl	equ	0xFF6
 11599                           tablat	equ	0xFF5
 11600                           prodh	equ	0xFF4
 11601                           prodl	equ	0xFF3
 11602                           intcon	equ	0xFF2
 11603                           intcon2	equ	0xFF1
 11604                           indf0	equ	0xFEF
 11605                           postinc0	equ	0xFEE
 11606                           fsr0h	equ	0xFEA
 11607                           fsr0l	equ	0xFE9
 11608                           wreg	equ	0xFE8
 11609                           indf1	equ	0xFE7
 11610                           postinc1	equ	0xFE6
 11611                           postdec1	equ	0xFE5
 11612                           fsr1h	equ	0xFE2
 11613                           fsr1l	equ	0xFE1
 11614                           indf2	equ	0xFDF
 11615                           postinc2	equ	0xFDE
 11616                           postdec2	equ	0xFDD
 11617                           fsr2h	equ	0xFDA
 11618                           fsr2l	equ	0xFD9
 11619                           status	equ	0xFD8
 11620                           
 11621 ;; *************** function _CDCTxService *****************
 11622 ;; Defined at:
 11623 ;;		line 893 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;		None
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 11628 ;;  i               1   10[BANK0 ] unsigned char 
 11629 ;; Return value:  Size  Location     Type
 11630 ;;		None               void
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11639 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11641 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11642 ;;Total ram usage:        5 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:   12
 11645 ;; This function calls:
 11646 ;;		_USBTransferOnePacket
 11647 ;; This function is called by:
 11648 ;;		_put_string_usb
 11649 ;;		_get_string_usb
 11650 ;; This function uses a non-reentrant model
 11651 ;;
 11652                           
 11653                           	psect	text55
 11654  0112FE                     __ptext55:
 11655                           	opt stack 0
 11656  0112FE                     _CDCTxService:
 11657                           	opt stack 16
 11658                           
 11659                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 11660                           ;usb_device_cdc.c: 896: uint8_t i;
 11661                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;incstack = 0
 11665  0112FE  98A0               	bcf	4000,4,c	;volatile
 11666                           
 11667                           ;usb_device_cdc.c: 900: {};
 11668                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 11669  011300  0100               	movlb	0	; () banked
 11670  011302  51E0               	movf	_CDCDataInHandle& (0+255),w,b
 11671  011304  0100               	movlb	0	; () banked
 11672  011306  11E1               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11673  011308  B4D8               	btfsc	status,2,c
 11674  01130A  D013               	goto	l8362
 11675                           
 11676                           ; BSR set to: 0
 11677  01130C  C0E0  FFD9         	movff	_CDCDataInHandle,fsr2l
 11678  011310  C0E1  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11679  011314  0100               	movlb	0	; () banked
 11680  011316  AEDF               	btfss	indf2,7,c
 11681  011318  D004               	goto	u8320
 11682  01131A  0100               	movlb	0	; () banked
 11683  01131C  6B67               	clrf	??_CDCTxService& (0+255),b
 11684  01131E  2B67               	incf	??_CDCTxService& (0+255),f,b
 11685  011320  D002               	goto	u8328
 11686  011322                     u8320:
 11687  011322  0100               	movlb	0	; () banked
 11688  011324  6B67               	clrf	??_CDCTxService& (0+255),b
 11689  011326                     u8328:
 11690  011326  0100               	movlb	0	; () banked
 11691  011328  5167               	movf	??_CDCTxService& (0+255),w,b
 11692  01132A  0100               	movlb	0	; () banked
 11693  01132C  6F68               	movwf	_CDCTxService$1934& (0+255),b
 11694  01132E  6B69               	clrf	(_CDCTxService$1934+1)& (0+255),b
 11695  011330  D006               	goto	l8364
 11696  011332                     l8362:
 11697                           
 11698                           ; BSR set to: 0
 11699  011332  0E00               	movlw	0
 11700  011334  0100               	movlb	0	; () banked
 11701  011336  6F69               	movwf	(_CDCTxService$1934+1)& (0+255),b
 11702  011338  0E00               	movlw	0
 11703  01133A  6F68               	movwf	_CDCTxService$1934& (0+255),b
 11704  01133C  D000               	goto	l8364
 11705  01133E                     l8364:
 11706                           
 11707                           ; BSR set to: 0
 11708  01133E  0100               	movlb	0	; () banked
 11709  011340  5168               	movf	_CDCTxService$1934& (0+255),w,b
 11710  011342  0100               	movlb	0	; () banked
 11711  011344  1169               	iorwf	(_CDCTxService$1934+1)& (0+255),w,b
 11712  011346  B4D8               	btfsc	status,2,c
 11713  011348  D002               	goto	l8368
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;usb_device_cdc.c: 903: {
 11717                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 11718  01134A  88A0               	bsf	4000,4,c	;volatile
 11719                           
 11720                           ;usb_device_cdc.c: 905: return;
 11721  01134C  0012               	return	
 11722  01134E                     l8368:
 11723                           
 11724                           ; BSR set to: 0
 11725                           ;usb_device_cdc.c: 906: }
 11726                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 11727  01134E  0E03               	movlw	3
 11728  011350  1821               	xorwf	_cdc_trf_state,w,c
 11729  011352  A4D8               	btfss	status,2,c
 11730  011354  D002               	goto	l490
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 11734  011356  0E00               	movlw	0
 11735  011358  6E21               	movwf	_cdc_trf_state,c
 11736  01135A                     l490:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 11740  01135A  5021               	movf	_cdc_trf_state,w,c
 11741  01135C  A4D8               	btfss	status,2,c
 11742  01135E  D002               	goto	l8374
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;usb_device_cdc.c: 920: {
 11746                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 11747  011360  88A0               	bsf	4000,4,c	;volatile
 11748                           
 11749                           ;usb_device_cdc.c: 922: return;
 11750  011362  0012               	return	
 11751  011364                     l8374:
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;usb_device_cdc.c: 923: }
 11755                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 11756  011364  0E02               	movlw	2
 11757  011366  1821               	xorwf	_cdc_trf_state,w,c
 11758  011368  A4D8               	btfss	status,2,c
 11759  01136A  D016               	goto	l8380
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;usb_device_cdc.c: 929: {
 11763                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11764  01136C  0E01               	movlw	1
 11765  01136E  0100               	movlb	0	; () banked
 11766  011370  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11767  011372  0E00               	movlw	0
 11768  011374  0100               	movlb	0	; () banked
 11769  011376  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11770  011378  0E00               	movlw	0
 11771  01137A  0100               	movlb	0	; () banked
 11772  01137C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11773  01137E  0E00               	movlw	0
 11774  011380  0100               	movlb	0	; () banked
 11775  011382  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11776  011384  0E02               	movlw	2
 11777  011386  ECCD  F091         	call	_USBTransferOnePacket
 11778  01138A  C060  F0E0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11779  01138E  C061  F0E1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11780                           
 11781                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 11782  011392  0E03               	movlw	3
 11783  011394  6E21               	movwf	_cdc_trf_state,c
 11784                           
 11785                           ;usb_device_cdc.c: 933: }
 11786  011396  D079               	goto	l8424
 11787  011398                     l8380:
 11788                           
 11789                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 11790  011398  0421               	decf	_cdc_trf_state,w,c
 11791  01139A  A4D8               	btfss	status,2,c
 11792  01139C  D076               	goto	l8424
 11793                           
 11794                           ;usb_device_cdc.c: 935: {
 11795                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 11796  01139E  0E40               	movlw	64
 11797  0113A0  0100               	movlb	0	; () banked
 11798  0113A2  65EB               	cpfsgt	_cdc_tx_len& (0+255),b
 11799  0113A4  D004               	goto	l495
 11800                           
 11801                           ; BSR set to: 0
 11802                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 11803  0113A6  0E40               	movlw	64
 11804  0113A8  0100               	movlb	0	; () banked
 11805  0113AA  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 11806  0113AC  D003               	goto	l8386
 11807  0113AE                     l495:
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;usb_device_cdc.c: 941: else
 11811                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 11812  0113AE  C0EB  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11813  0113B2  D000               	goto	l8386
 11814  0113B4                     l8386:
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 11818  0113B4  0100               	movlb	0	; () banked
 11819  0113B6  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11820  0113B8  0800               	sublw	0
 11821  0113BA  0100               	movlb	0	; () banked
 11822  0113BC  25EB               	addwf	_cdc_tx_len& (0+255),w,b
 11823  0113BE  0100               	movlb	0	; () banked
 11824  0113C0  6FEB               	movwf	_cdc_tx_len& (0+255),b
 11825                           
 11826                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11827  0113C2  0E40               	movlw	low _cdc_data_tx
 11828  0113C4  0100               	movlb	0	; () banked
 11829  0113C6  6FD8               	movwf	_pCDCDst& (0+255),b
 11830  0113C8  0E02               	movlw	high _cdc_data_tx
 11831  0113CA  0100               	movlb	0	; () banked
 11832  0113CC  6FD9               	movwf	(_pCDCDst+1)& (0+255),b
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;usb_device_cdc.c: 951: i = byte_to_send;
 11836  0113CE  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 11840  0113D2  0100               	movlb	0	; () banked
 11841  0113D4  51E9               	movf	_cdc_mem_type& (0+255),w,b
 11842  0113D6  B4D8               	btfsc	status,2,c
 11843  0113D8  D015               	goto	l8402
 11844  0113DA  D02F               	goto	l8412
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;usb_device_cdc.c: 953: {
 11848                           ;usb_device_cdc.c: 954: while(i)
 11849  0113DC  D013               	goto	l8402
 11850  0113DE                     l8394:
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;usb_device_cdc.c: 955: {
 11854                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 11855  0113DE  C0DB  FFD9         	movff	_pCDCSrc,fsr2l
 11856  0113E2  C0DC  FFDA         	movff	_pCDCSrc+1,fsr2h
 11857  0113E6  C0D8  FFE1         	movff	_pCDCDst,fsr1l
 11858  0113EA  C0D9  FFE2         	movff	_pCDCDst+1,fsr1h
 11859  0113EE  CFDF FFE7          	movff	indf2,indf1
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 11863  0113F2  0100               	movlb	0	; () banked
 11864  0113F4  4BD8               	infsnz	_pCDCDst& (0+255),f,b
 11865  0113F6  2BD9               	incf	(_pCDCDst+1)& (0+255),f,b
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 11869  0113F8  0100               	movlb	0	; () banked
 11870  0113FA  4BDB               	infsnz	_pCDCSrc& (0+255),f,b
 11871  0113FC  2BDC               	incf	(_pCDCSrc+1)& (0+255),f,b
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;usb_device_cdc.c: 959: i--;
 11875  0113FE  0100               	movlb	0	; () banked
 11876  011400  076A               	decf	CDCTxService@i& (0+255),f,b
 11877  011402  D000               	goto	l8402
 11878  011404                     l8402:
 11879                           
 11880                           ; BSR set to: 0
 11881  011404  0100               	movlb	0	; () banked
 11882  011406  516A               	movf	CDCTxService@i& (0+255),w,b
 11883  011408  0100               	movlb	0	; () banked
 11884  01140A  B4D8               	btfsc	status,2,c
 11885  01140C  D01D               	goto	l8414
 11886  01140E  D7E7               	goto	l8394
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;usb_device_cdc.c: 960: }
 11890                           ;usb_device_cdc.c: 961: }
 11891  011410  D01B               	goto	l8414
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;usb_device_cdc.c: 962: else
 11895                           ;usb_device_cdc.c: 963: {
 11896                           ;usb_device_cdc.c: 964: while(i)
 11897  011412  D013               	goto	l8412
 11898  011414                     l8404:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;usb_device_cdc.c: 965: {
 11902                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 11903  011414  C0DB  FFD9         	movff	_pCDCSrc,fsr2l
 11904  011418  C0DC  FFDA         	movff	_pCDCSrc+1,fsr2h
 11905  01141C  C0D8  FFE1         	movff	_pCDCDst,fsr1l
 11906  011420  C0D9  FFE2         	movff	_pCDCDst+1,fsr1h
 11907  011424  CFDF FFE7          	movff	indf2,indf1
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 11911  011428  0100               	movlb	0	; () banked
 11912  01142A  4BD8               	infsnz	_pCDCDst& (0+255),f,b
 11913  01142C  2BD9               	incf	(_pCDCDst+1)& (0+255),f,b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 11917  01142E  0100               	movlb	0	; () banked
 11918  011430  4BDB               	infsnz	_pCDCSrc& (0+255),f,b
 11919  011432  2BDC               	incf	(_pCDCSrc+1)& (0+255),f,b
 11920                           
 11921                           ; BSR set to: 0
 11922                           ;usb_device_cdc.c: 969: i--;
 11923  011434  0100               	movlb	0	; () banked
 11924  011436  076A               	decf	CDCTxService@i& (0+255),f,b
 11925  011438  D000               	goto	l8412
 11926  01143A                     l8412:
 11927                           
 11928                           ; BSR set to: 0
 11929  01143A  0100               	movlb	0	; () banked
 11930  01143C  516A               	movf	CDCTxService@i& (0+255),w,b
 11931  01143E  0100               	movlb	0	; () banked
 11932  011440  B4D8               	btfsc	status,2,c
 11933  011442  D002               	goto	l8414
 11934  011444  D7E7               	goto	l8404
 11935                           
 11936                           ; BSR set to: 0
 11937  011446  D000               	goto	l8414
 11938  011448                     l8414:
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;usb_device_cdc.c: 970: }
 11942                           ;usb_device_cdc.c: 971: }
 11943                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 11944  011448  0100               	movlb	0	; () banked
 11945  01144A  51EB               	movf	_cdc_tx_len& (0+255),w,b
 11946  01144C  A4D8               	btfss	status,2,c
 11947  01144E  D00A               	goto	l8422
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;usb_device_cdc.c: 978: {
 11951                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 11952  011450  0E40               	movlw	64
 11953  011452  0100               	movlb	0	; () banked
 11954  011454  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11955  011456  A4D8               	btfss	status,2,c
 11956  011458  D002               	goto	l8420
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 11960  01145A  0E02               	movlw	2
 11961  01145C  D001               	goto	L1
 11962  01145E                     l8420:
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;usb_device_cdc.c: 981: else
 11966                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 11967  01145E  0E03               	movlw	3
 11968  011460                     L1:
 11969  011460  6E21               	movwf	_cdc_trf_state,c
 11970                           
 11971                           ; BSR set to: 0
 11972  011462  D000               	goto	l8422
 11973  011464                     l8422:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;usb_device_cdc.c: 983: }
 11977                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11978  011464  0E01               	movlw	1
 11979  011466  0100               	movlb	0	; () banked
 11980  011468  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11981  01146A  0E40               	movlw	low _cdc_data_tx
 11982  01146C  0100               	movlb	0	; () banked
 11983  01146E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11984  011470  0E02               	movlw	high _cdc_data_tx
 11985  011472  0100               	movlb	0	; () banked
 11986  011474  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11987  011476  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11988  01147A  0E02               	movlw	2
 11989  01147C  ECCD  F091         	call	_USBTransferOnePacket
 11990  011480  C060  F0E0         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11991  011484  C061  F0E1         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11992  011488  D000               	goto	l8424
 11993  01148A                     l8424:
 11994                           
 11995                           ;usb_device_cdc.c: 986: }
 11996                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 11997  01148A  88A0               	bsf	4000,4,c	;volatile
 11998  01148C  0012               	return		;funcret
 11999  01148E                     __end_of_CDCTxService:
 12000                           	opt stack 0
 12001                           tblptru	equ	0xFF8
 12002                           tblptrh	equ	0xFF7
 12003                           tblptrl	equ	0xFF6
 12004                           tablat	equ	0xFF5
 12005                           prodh	equ	0xFF4
 12006                           prodl	equ	0xFF3
 12007                           intcon	equ	0xFF2
 12008                           intcon2	equ	0xFF1
 12009                           indf0	equ	0xFEF
 12010                           postinc0	equ	0xFEE
 12011                           fsr0h	equ	0xFEA
 12012                           fsr0l	equ	0xFE9
 12013                           wreg	equ	0xFE8
 12014                           indf1	equ	0xFE7
 12015                           postinc1	equ	0xFE6
 12016                           postdec1	equ	0xFE5
 12017                           fsr1h	equ	0xFE2
 12018                           fsr1l	equ	0xFE1
 12019                           indf2	equ	0xFDF
 12020                           postinc2	equ	0xFDE
 12021                           postdec2	equ	0xFDD
 12022                           fsr2h	equ	0xFDA
 12023                           fsr2l	equ	0xFD9
 12024                           status	equ	0xFD8
 12025                           
 12026 ;; *************** function _USBTransferOnePacket *****************
 12027 ;; Defined at:
 12028 ;;		line 995 in file "../My_library/usb_cdc/usb/usb_device.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;  ep              1    wreg     unsigned char 
 12031 ;;  dir             1    0[BANK0 ] unsigned char 
 12032 ;;  data            2    1[BANK0 ] PTR unsigned char 
 12033 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 12034 ;;  len             1    3[BANK0 ] unsigned char 
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  ep              1    4[BANK0 ] unsigned char 
 12037 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 12038 ;;		 -> NULL(0), BDT(48), 
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  2    0[BANK0 ] PTR void 
 12041 ;; Registers used:
 12042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/0
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12049 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12051 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12052 ;;Total ram usage:        7 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:   11
 12055 ;; This function calls:
 12056 ;;		Nothing
 12057 ;; This function is called by:
 12058 ;;		_getsUSBUSART
 12059 ;;		_CDCTxService
 12060 ;;		_USBCDCEventHandler
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text56
 12065  01239A                     __ptext56:
 12066                           	opt stack 0
 12067  01239A                     _USBTransferOnePacket:
 12068                           	opt stack 16
 12069                           
 12070                           ;incstack = 0
 12071                           ;USBTransferOnePacket@ep stored from wreg
 12072  01239A  0100               	movlb	0	; () banked
 12073  01239C  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 12077                           ;usb_device.c: 1000: if(dir != 0)
 12078  01239E  0100               	movlb	0	; () banked
 12079  0123A0  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12080  0123A2  0100               	movlb	0	; () banked
 12081  0123A4  B4D8               	btfsc	status,2,c
 12082  0123A6  D008               	goto	l8144
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;usb_device.c: 1001: {
 12086                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 12087  0123A8  0100               	movlb	0	; () banked
 12088  0123AA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12089  0123AC  0D02               	mullw	2
 12090  0123AE  0E0A               	movlw	low _pBDTEntryIn
 12091  0123B0  24F3               	addwf	prodl,w,c
 12092  0123B2  6ED9               	movwf	fsr2l,c
 12093  0123B4  0E00               	movlw	high _pBDTEntryIn
 12094  0123B6  D007               	goto	L2
 12095  0123B8                     l8144:
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;usb_device.c: 1005: else
 12099                           ;usb_device.c: 1006: {
 12100                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 12101  0123B8  0100               	movlb	0	; () banked
 12102  0123BA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12103  0123BC  0D02               	mullw	2
 12104  0123BE  0ECF               	movlw	low _pBDTEntryOut
 12105  0123C0  24F3               	addwf	prodl,w,c
 12106  0123C2  6ED9               	movwf	fsr2l,c
 12107  0123C4  0E00               	movlw	high _pBDTEntryOut
 12108  0123C6                     L2:
 12109  0123C6  20F4               	addwfc	prodh,w,c
 12110  0123C8  6EDA               	movwf	fsr2h,c
 12111  0123CA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 12112  0123CE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 12113  0123D2  D000               	goto	l8146
 12114  0123D4                     l8146:
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;usb_device.c: 1009: }
 12118                           ;usb_device.c: 1013: if(handle == 0)
 12119  0123D4  0100               	movlb	0	; () banked
 12120  0123D6  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12121  0123D8  0100               	movlb	0	; () banked
 12122  0123DA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12123  0123DC  A4D8               	btfss	status,2,c
 12124  0123DE  D007               	goto	l8152
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;usb_device.c: 1014: {
 12128                           ;usb_device.c: 1015: return 0;
 12129  0123E0  0E00               	movlw	0
 12130  0123E2  0100               	movlb	0	; () banked
 12131  0123E4  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 12132  0123E6  0E00               	movlw	0
 12133  0123E8  0100               	movlb	0	; () banked
 12134  0123EA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 12135                           
 12136                           ; BSR set to: 0
 12137  0123EC  0012               	return	
 12138  0123EE                     l8152:
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;usb_device.c: 1016: }
 12142                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 12143  0123EE  0100               	movlb	0	; () banked
 12144  0123F0  EE20 F002          	lfsr	2,2
 12145  0123F4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12146  0123F6  26D9               	addwf	fsr2l,f,c
 12147  0123F8  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12148  0123FA  22DA               	addwfc	fsr2h,f,c
 12149  0123FC  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 12150  012400  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 12151                           
 12152                           ;usb_device.c: 1030: handle->CNT = len;
 12153  012404  0100               	movlb	0	; () banked
 12154  012406  EE20 F001          	lfsr	2,1
 12155  01240A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 12156  01240C  26D9               	addwf	fsr2l,f,c
 12157  01240E  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 12158  012410  22DA               	addwfc	fsr2h,f,c
 12159  012412  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 12163  012416  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12164  01241A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12165  01241E  0E40               	movlw	64
 12166  012420  16DF               	andwf	indf2,f,c
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 12170  012422  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12171  012426  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12172  01242A  0E00               	movlw	0
 12173  01242C  86DB               	bsf	plusw2,3,c
 12174                           
 12175                           ; BSR set to: 0
 12176                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 12177  01242E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 12178  012432  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 12179  012436  0E00               	movlw	0
 12180  012438  8EDB               	bsf	plusw2,7,c
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;usb_device.c: 1036: if(dir != 0)
 12184  01243A  0100               	movlb	0	; () banked
 12185  01243C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 12186  01243E  0100               	movlb	0	; () banked
 12187  012440  B4D8               	btfsc	status,2,c
 12188  012442  D008               	goto	l8164
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;usb_device.c: 1037: {
 12192                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 12193  012444  0100               	movlb	0	; () banked
 12194  012446  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12195  012448  0D02               	mullw	2
 12196  01244A  0E0A               	movlw	low _pBDTEntryIn
 12197  01244C  24F3               	addwf	prodl,w,c
 12198  01244E  6ED9               	movwf	fsr2l,c
 12199  012450  0E00               	movlw	high _pBDTEntryIn
 12200  012452  D007               	goto	L3
 12201  012454                     l8164:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;usb_device.c: 1041: else
 12205                           ;usb_device.c: 1042: {
 12206                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 12207  012454  0100               	movlb	0	; () banked
 12208  012456  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 12209  012458  0D02               	mullw	2
 12210  01245A  0ECF               	movlw	low _pBDTEntryOut
 12211  01245C  24F3               	addwf	prodl,w,c
 12212  01245E  6ED9               	movwf	fsr2l,c
 12213  012460  0E00               	movlw	high _pBDTEntryOut
 12214  012462                     L3:
 12215  012462  20F4               	addwfc	prodh,w,c
 12216  012464  6EDA               	movwf	fsr2h,c
 12217  012466  0E04               	movlw	4
 12218  012468  1ADF               	xorwf	indf2,f,c
 12219  01246A  D000               	goto	l8166
 12220  01246C                     l8166:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;usb_device.c: 1045: }
 12224                           ;usb_device.c: 1046: return (void*)handle;
 12225  01246C  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 12226  012470  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 12227  012474  0012               	return	
 12228                           
 12229                           ; BSR set to: 0
 12230                           
 12231                           ; BSR set to: 0
 12232  012476  0012               	return		;funcret
 12233  012478                     __end_of_USBTransferOnePacket:
 12234                           	opt stack 0
 12235                           tblptru	equ	0xFF8
 12236                           tblptrh	equ	0xFF7
 12237                           tblptrl	equ	0xFF6
 12238                           tablat	equ	0xFF5
 12239                           prodh	equ	0xFF4
 12240                           prodl	equ	0xFF3
 12241                           intcon	equ	0xFF2
 12242                           intcon2	equ	0xFF1
 12243                           indf0	equ	0xFEF
 12244                           postinc0	equ	0xFEE
 12245                           fsr0h	equ	0xFEA
 12246                           fsr0l	equ	0xFE9
 12247                           wreg	equ	0xFE8
 12248                           indf1	equ	0xFE7
 12249                           postinc1	equ	0xFE6
 12250                           postdec1	equ	0xFE5
 12251                           fsr1h	equ	0xFE2
 12252                           fsr1l	equ	0xFE1
 12253                           indf2	equ	0xFDF
 12254                           postinc2	equ	0xFDE
 12255                           postdec2	equ	0xFDD
 12256                           plusw2	equ	0xFDB
 12257                           fsr2h	equ	0xFDA
 12258                           fsr2l	equ	0xFD9
 12259                           status	equ	0xFD8
 12260                           
 12261 ;; *************** function _RTCC_loop *****************
 12262 ;; Defined at:
 12263 ;;		line 346 in file "../My_library/My_RTCC.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;		None
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;		None
 12268 ;; Return value:  Size  Location     Type
 12269 ;;		None               void
 12270 ;; Registers used:
 12271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12281 ;;Total ram usage:        0 bytes
 12282 ;; Hardware stack levels used:    1
 12283 ;; Hardware stack levels required when called:   15
 12284 ;; This function calls:
 12285 ;;		_RTCC_from_RTCC
 12286 ;; This function is called by:
 12287 ;;		_main
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text57
 12292  013B7A                     __ptext57:
 12293                           	opt stack 0
 12294  013B7A                     _RTCC_loop:
 12295                           	opt stack 15
 12296                           
 12297                           ;My_RTCC.c: 347: static uint8_t prev_halfsec;
 12298                           ;My_RTCC.c: 348: while (RTCCFGbits.RTCSYNC);
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;incstack = 0
 12302  013B7A  D000               	goto	l1052
 12303  013B7C                     l1052:
 12304  013B7C  010F               	movlb	15	; () banked
 12305  013B7E  B93F               	btfsc	63,4,b	;volatile
 12306  013B80  D7FD               	goto	l1052
 12307                           
 12308                           ; BSR set to: 15
 12309                           ;My_RTCC.c: 349: now.halfsec = RTCCFGbits.HALFSEC;
 12310                           
 12311                           ; BSR set to: 15
 12312  013B82  0E00               	movlw	0
 12313  013B84  B73F               	btfsc	63,3,b	;volatile
 12314  013B86  0E01               	movlw	1
 12315  013B88  0101               	movlb	1	; () banked
 12316  013B8A  6F52               	movwf	(_now+12)& (0+255),b
 12317                           
 12318                           ; BSR set to: 1
 12319                           ;My_RTCC.c: 350: if (prev_halfsec != now.halfsec) {
 12320  013B8C  0100               	movlb	0	; () banked
 12321  013B8E  51E8               	movf	RTCC_loop@prev_halfsec& (0+255),w,b
 12322  013B90  0101               	movlb	1	; () banked
 12323  013B92  1952               	xorwf	(_now+12)& (0+255),w,b
 12324  013B94  B4D8               	btfsc	status,2,c
 12325  013B96  0012               	return	
 12326                           
 12327                           ; BSR set to: 1
 12328                           ;My_RTCC.c: 351: prev_halfsec = now.halfsec;
 12329  013B98  C152  F0E8         	movff	_now+12,RTCC_loop@prev_halfsec
 12330                           
 12331                           ;My_RTCC.c: 352: now.colon = now.halfsec;
 12332  013B9C  C152  F151         	movff	_now+12,_now+11
 12333                           
 12334                           ; BSR set to: 1
 12335                           ;My_RTCC.c: 353: time_change_flag = 1;
 12336  013BA0  0E01               	movlw	1
 12337  013BA2  0100               	movlb	0	; () banked
 12338  013BA4  6FED               	movwf	_time_change_flag& (0+255),b
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;My_RTCC.c: 354: RTCC_from_RTCC(&now);
 12342  013BA6  0E46               	movlw	low _now
 12343  013BA8  0100               	movlb	0	; () banked
 12344  013BAA  6F86               	movwf	RTCC_from_RTCC@tm& (0+255),b
 12345  013BAC  0E01               	movlw	high _now
 12346  013BAE  0100               	movlb	0	; () banked
 12347  013BB0  6F87               	movwf	(RTCC_from_RTCC@tm+1)& (0+255),b
 12348  013BB2  EC1D  F0A0         	call	_RTCC_from_RTCC	;wreg free
 12349  013BB6  0012               	return	
 12350  013BB8  0012               	return		;funcret
 12351  013BBA                     __end_of_RTCC_loop:
 12352                           	opt stack 0
 12353                           tblptru	equ	0xFF8
 12354                           tblptrh	equ	0xFF7
 12355                           tblptrl	equ	0xFF6
 12356                           tablat	equ	0xFF5
 12357                           prodh	equ	0xFF4
 12358                           prodl	equ	0xFF3
 12359                           intcon	equ	0xFF2
 12360                           intcon2	equ	0xFF1
 12361                           indf0	equ	0xFEF
 12362                           postinc0	equ	0xFEE
 12363                           fsr0h	equ	0xFEA
 12364                           fsr0l	equ	0xFE9
 12365                           wreg	equ	0xFE8
 12366                           indf1	equ	0xFE7
 12367                           postinc1	equ	0xFE6
 12368                           postdec1	equ	0xFE5
 12369                           fsr1h	equ	0xFE2
 12370                           fsr1l	equ	0xFE1
 12371                           indf2	equ	0xFDF
 12372                           postinc2	equ	0xFDE
 12373                           postdec2	equ	0xFDD
 12374                           plusw2	equ	0xFDB
 12375                           fsr2h	equ	0xFDA
 12376                           fsr2l	equ	0xFD9
 12377                           status	equ	0xFD8
 12378                           
 12379 ;; *************** function _RTCC_from_RTCC *****************
 12380 ;; Defined at:
 12381 ;;		line 193 in file "../My_library/My_RTCC.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;  tm              2   38[BANK0 ] PTR struct .
 12384 ;;		 -> now(14), 
 12385 ;; Auto vars:     Size  Location     Type
 12386 ;;		None
 12387 ;; Return value:  Size  Location     Type
 12388 ;;		None               void
 12389 ;; Registers used:
 12390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12391 ;; Tracked objects:
 12392 ;;		On entry : 0/0
 12393 ;;		On exit  : 0/0
 12394 ;;		Unchanged: 0/0
 12395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12399 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12400 ;;Total ram usage:        2 bytes
 12401 ;; Hardware stack levels used:    1
 12402 ;; Hardware stack levels required when called:   14
 12403 ;; This function calls:
 12404 ;;		_RTCC_to_caltime
 12405 ;;		_caltime_to_epoch
 12406 ;; This function is called by:
 12407 ;;		_RTCC_loop
 12408 ;;		_print_time
 12409 ;;		_software_init
 12410 ;;		_display_time_0802
 12411 ;;		_display_time_1602
 12412 ;;		_RTCC_adjust_time_inc
 12413 ;;		_RTCC_adjust_time_dec
 12414 ;; This function uses a non-reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text58
 12418  01403A                     __ptext58:
 12419                           	opt stack 0
 12420  01403A                     _RTCC_from_RTCC:
 12421                           	opt stack 11
 12422                           
 12423                           ;My_RTCC.c: 194: RTCC_to_caltime(tm);
 12424                           
 12425                           ;incstack = 0
 12426  01403A  C086  F062         	movff	RTCC_from_RTCC@tm,RTCC_to_caltime@tm
 12427  01403E  C087  F063         	movff	RTCC_from_RTCC@tm+1,RTCC_to_caltime@tm+1
 12428  014042  ECAB  F096         	call	_RTCC_to_caltime	;wreg free
 12429                           
 12430                           ;My_RTCC.c: 195: caltime_to_epoch(tm);
 12431  014046  C086  F079         	movff	RTCC_from_RTCC@tm,caltime_to_epoch@tm
 12432  01404A  C087  F07A         	movff	RTCC_from_RTCC@tm+1,caltime_to_epoch@tm+1
 12433  01404E  EC3B  F087         	call	_caltime_to_epoch	;wreg free
 12434  014052  0012               	return		;funcret
 12435  014054                     __end_of_RTCC_from_RTCC:
 12436                           	opt stack 0
 12437                           tblptru	equ	0xFF8
 12438                           tblptrh	equ	0xFF7
 12439                           tblptrl	equ	0xFF6
 12440                           tablat	equ	0xFF5
 12441                           prodh	equ	0xFF4
 12442                           prodl	equ	0xFF3
 12443                           intcon	equ	0xFF2
 12444                           intcon2	equ	0xFF1
 12445                           indf0	equ	0xFEF
 12446                           postinc0	equ	0xFEE
 12447                           fsr0h	equ	0xFEA
 12448                           fsr0l	equ	0xFE9
 12449                           wreg	equ	0xFE8
 12450                           indf1	equ	0xFE7
 12451                           postinc1	equ	0xFE6
 12452                           postdec1	equ	0xFE5
 12453                           fsr1h	equ	0xFE2
 12454                           fsr1l	equ	0xFE1
 12455                           indf2	equ	0xFDF
 12456                           postinc2	equ	0xFDE
 12457                           postdec2	equ	0xFDD
 12458                           plusw2	equ	0xFDB
 12459                           fsr2h	equ	0xFDA
 12460                           fsr2l	equ	0xFD9
 12461                           status	equ	0xFD8
 12462                           
 12463 ;; *************** function _caltime_to_epoch *****************
 12464 ;; Defined at:
 12465 ;;		line 173 in file "../My_library/My_RTCC.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;  tm              2   25[BANK0 ] PTR struct .
 12468 ;;		 -> now(14), 
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  month           1   37[BANK0 ] unsigned char 
 12471 ;;  month           1   32[BANK0 ] unsigned char 
 12472 ;;  year            1   31[BANK0 ] unsigned char 
 12473 ;;  epoch           4   33[BANK0 ] unsigned long 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;		None               void
 12476 ;; Registers used:
 12477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12484 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12485 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12486 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12487 ;;Total ram usage:       13 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:   13
 12490 ;; This function calls:
 12491 ;;		___lmul
 12492 ;;		_month_length
 12493 ;; This function is called by:
 12494 ;;		_RTCC_from_RTCC
 12495 ;;		_RTCC_from_caltime
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text59
 12500  010E76                     __ptext59:
 12501                           	opt stack 0
 12502  010E76                     _caltime_to_epoch:
 12503                           	opt stack 11
 12504                           
 12505                           ;My_RTCC.c: 174: epoch_t epoch = 0;
 12506                           
 12507                           ;incstack = 0
 12508  010E76  0E00               	movlw	0
 12509  010E78  0100               	movlb	0	; () banked
 12510  010E7A  6F81               	movwf	caltime_to_epoch@epoch& (0+255),b
 12511  010E7C  0E00               	movlw	0
 12512  010E7E  6F82               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 12513  010E80  0E00               	movlw	0
 12514  010E82  6F83               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 12515  010E84  0E00               	movlw	0
 12516  010E86  6F84               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 12517                           
 12518                           ;My_RTCC.c: 175: for (uint8_t year = 0; year < tm->YY; year++) {
 12519  010E88  0E00               	movlw	0
 12520  010E8A  0100               	movlb	0	; () banked
 12521  010E8C  6F7F               	movwf	caltime_to_epoch@year& (0+255),b
 12522  010E8E  D038               	goto	l7780
 12523  010E90                     l7766:
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;My_RTCC.c: 176: for (uint8_t month = 1; month <= 12; month++) {
 12527  010E90  0E01               	movlw	1
 12528  010E92  0100               	movlb	0	; () banked
 12529  010E94  6F85               	movwf	caltime_to_epoch@month& (0+255),b
 12530  010E96                     l7768:
 12531                           
 12532                           ; BSR set to: 0
 12533  010E96  0E0C               	movlw	12
 12534  010E98  0100               	movlb	0	; () banked
 12535  010E9A  6585               	cpfsgt	caltime_to_epoch@month& (0+255),b
 12536  010E9C  D001               	goto	l7772
 12537                           
 12538                           ; BSR set to: 0
 12539  010E9E  D02D               	goto	l7778
 12540  010EA0                     l7772:
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;My_RTCC.c: 177: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 12544  010EA0  C085  F066         	movff	caltime_to_epoch@month,month_length@month
 12545  010EA4  0100               	movlb	0	; () banked
 12546  010EA6  517F               	movf	caltime_to_epoch@year& (0+255),w,b
 12547  010EA8  EC5D  F091         	call	_month_length
 12548  010EAC  0100               	movlb	0	; () banked
 12549  010EAE  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12550  010EB0  0100               	movlb	0	; () banked
 12551  010EB2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12552  010EB4  0100               	movlb	0	; () banked
 12553  010EB6  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12554  010EB8  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12555  010EBA  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12556  010EBC  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12557  010EBE  0E80               	movlw	128
 12558  010EC0  0100               	movlb	0	; () banked
 12559  010EC2  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12560  010EC4  0E51               	movlw	81
 12561  010EC6  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12562  010EC8  0E01               	movlw	1
 12563  010ECA  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12564  010ECC  0E00               	movlw	0
 12565  010ECE  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12566  010ED0  ECAD  F09B         	call	___lmul	;wreg free
 12567  010ED4  0100               	movlb	0	; () banked
 12568  010ED6  516D               	movf	?___lmul& (0+255),w,b
 12569  010ED8  0100               	movlb	0	; () banked
 12570  010EDA  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12571  010EDC  0100               	movlb	0	; () banked
 12572  010EDE  516E               	movf	(?___lmul+1)& (0+255),w,b
 12573  010EE0  0100               	movlb	0	; () banked
 12574  010EE2  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12575  010EE4  0100               	movlb	0	; () banked
 12576  010EE6  516F               	movf	(?___lmul+2)& (0+255),w,b
 12577  010EE8  0100               	movlb	0	; () banked
 12578  010EEA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12579  010EEC  0100               	movlb	0	; () banked
 12580  010EEE  5170               	movf	(?___lmul+3)& (0+255),w,b
 12581  010EF0  0100               	movlb	0	; () banked
 12582  010EF2  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12583                           
 12584                           ; BSR set to: 0
 12585  010EF4  0100               	movlb	0	; () banked
 12586  010EF6  2B85               	incf	caltime_to_epoch@month& (0+255),f,b
 12587  010EF8  D7CE               	goto	l7768
 12588  010EFA                     l7778:
 12589                           
 12590                           ; BSR set to: 0
 12591  010EFA  0100               	movlb	0	; () banked
 12592  010EFC  2B7F               	incf	caltime_to_epoch@year& (0+255),f,b
 12593  010EFE  D000               	goto	l7780
 12594  010F00                     l7780:
 12595                           
 12596                           ; BSR set to: 0
 12597  010F00  0100               	movlb	0	; () banked
 12598  010F02  EE20 F00A          	lfsr	2,10
 12599  010F06  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12600  010F08  26D9               	addwf	fsr2l,f,c
 12601  010F0A  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12602  010F0C  22DA               	addwfc	fsr2h,f,c
 12603  010F0E  50DE               	movf	postinc2,w,c
 12604  010F10  0100               	movlb	0	; () banked
 12605  010F12  5D7F               	subwf	caltime_to_epoch@year& (0+255),w,b
 12606  010F14  A0D8               	btfss	status,0,c
 12607  010F16  D7BC               	goto	l7766
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;My_RTCC.c: 178: }
 12611                           ;My_RTCC.c: 179: }
 12612                           ;My_RTCC.c: 180: for (uint8_t month = 1; month < tm->MM; month++) {
 12613                           
 12614                           ; BSR set to: 0
 12615  010F18  0E01               	movlw	1
 12616  010F1A  0100               	movlb	0	; () banked
 12617  010F1C  6F80               	movwf	caltime_to_epoch@month_3928& (0+255),b
 12618  010F1E  D033               	goto	l7788
 12619  010F20                     l7784:
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;My_RTCC.c: 181: epoch += ((epoch_t)60*60*24) * month_length(tm->YY, month);
 12623  010F20  C080  F066         	movff	caltime_to_epoch@month_3928,month_length@month
 12624  010F24  0100               	movlb	0	; () banked
 12625  010F26  EE20 F00A          	lfsr	2,10
 12626  010F2A  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12627  010F2C  26D9               	addwf	fsr2l,f,c
 12628  010F2E  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12629  010F30  22DA               	addwfc	fsr2h,f,c
 12630  010F32  50DF               	movf	indf2,w,c
 12631  010F34  EC5D  F091         	call	_month_length
 12632  010F38  0100               	movlb	0	; () banked
 12633  010F3A  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12634  010F3C  0100               	movlb	0	; () banked
 12635  010F3E  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12636  010F40  0100               	movlb	0	; () banked
 12637  010F42  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12638  010F44  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12639  010F46  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12640  010F48  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12641  010F4A  0E80               	movlw	128
 12642  010F4C  0100               	movlb	0	; () banked
 12643  010F4E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12644  010F50  0E51               	movlw	81
 12645  010F52  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12646  010F54  0E01               	movlw	1
 12647  010F56  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12648  010F58  0E00               	movlw	0
 12649  010F5A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12650  010F5C  ECAD  F09B         	call	___lmul	;wreg free
 12651  010F60  0100               	movlb	0	; () banked
 12652  010F62  516D               	movf	?___lmul& (0+255),w,b
 12653  010F64  0100               	movlb	0	; () banked
 12654  010F66  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12655  010F68  0100               	movlb	0	; () banked
 12656  010F6A  516E               	movf	(?___lmul+1)& (0+255),w,b
 12657  010F6C  0100               	movlb	0	; () banked
 12658  010F6E  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12659  010F70  0100               	movlb	0	; () banked
 12660  010F72  516F               	movf	(?___lmul+2)& (0+255),w,b
 12661  010F74  0100               	movlb	0	; () banked
 12662  010F76  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12663  010F78  0100               	movlb	0	; () banked
 12664  010F7A  5170               	movf	(?___lmul+3)& (0+255),w,b
 12665  010F7C  0100               	movlb	0	; () banked
 12666  010F7E  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12667                           
 12668                           ; BSR set to: 0
 12669  010F80  0100               	movlb	0	; () banked
 12670  010F82  2B80               	incf	caltime_to_epoch@month_3928& (0+255),f,b
 12671  010F84  D000               	goto	l7788
 12672  010F86                     l7788:
 12673                           
 12674                           ; BSR set to: 0
 12675  010F86  0100               	movlb	0	; () banked
 12676  010F88  EE20 F009          	lfsr	2,9
 12677  010F8C  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12678  010F8E  26D9               	addwf	fsr2l,f,c
 12679  010F90  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12680  010F92  22DA               	addwfc	fsr2h,f,c
 12681  010F94  50DE               	movf	postinc2,w,c
 12682  010F96  0100               	movlb	0	; () banked
 12683  010F98  5D80               	subwf	caltime_to_epoch@month_3928& (0+255),w,b
 12684  010F9A  A0D8               	btfss	status,0,c
 12685  010F9C  D7C1               	goto	l7784
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;My_RTCC.c: 182: }
 12689                           ;My_RTCC.c: 183: epoch += ((epoch_t)60*60*24) * (tm->DD - 1);
 12690                           
 12691                           ; BSR set to: 0
 12692  010F9E  0EFF               	movlw	255
 12693  010FA0  0100               	movlb	0	; () banked
 12694  010FA2  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12695  010FA4  0EFF               	movlw	255
 12696  010FA6  0100               	movlb	0	; () banked
 12697  010FA8  6F7C               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 12698  010FAA  0100               	movlb	0	; () banked
 12699  010FAC  EE20 F008          	lfsr	2,8
 12700  010FB0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12701  010FB2  26D9               	addwf	fsr2l,f,c
 12702  010FB4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12703  010FB6  22DA               	addwfc	fsr2h,f,c
 12704  010FB8  50DF               	movf	indf2,w,c
 12705  010FBA  0100               	movlb	0	; () banked
 12706  010FBC  6F7D               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 12707  010FBE  6B7E               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 12708  010FC0  0100               	movlb	0	; () banked
 12709  010FC2  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12710  010FC4  0100               	movlb	0	; () banked
 12711  010FC6  277D               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 12712  010FC8  0100               	movlb	0	; () banked
 12713  010FCA  517C               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 12714  010FCC  0100               	movlb	0	; () banked
 12715  010FCE  237E               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 12716  010FD0  C07D  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 12717  010FD4  C07E  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 12718  010FD8  0100               	movlb	0	; () banked
 12719  010FDA  0E00               	movlw	0
 12720  010FDC  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 12721  010FDE  0EFF               	movlw	-1
 12722  010FE0  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 12723  010FE2  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 12724  010FE4  0E80               	movlw	128
 12725  010FE6  0100               	movlb	0	; () banked
 12726  010FE8  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12727  010FEA  0E51               	movlw	81
 12728  010FEC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12729  010FEE  0E01               	movlw	1
 12730  010FF0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12731  010FF2  0E00               	movlw	0
 12732  010FF4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12733  010FF6  ECAD  F09B         	call	___lmul	;wreg free
 12734  010FFA  0100               	movlb	0	; () banked
 12735  010FFC  516D               	movf	?___lmul& (0+255),w,b
 12736  010FFE  0100               	movlb	0	; () banked
 12737  011000  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12738  011002  0100               	movlb	0	; () banked
 12739  011004  516E               	movf	(?___lmul+1)& (0+255),w,b
 12740  011006  0100               	movlb	0	; () banked
 12741  011008  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12742  01100A  0100               	movlb	0	; () banked
 12743  01100C  516F               	movf	(?___lmul+2)& (0+255),w,b
 12744  01100E  0100               	movlb	0	; () banked
 12745  011010  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12746  011012  0100               	movlb	0	; () banked
 12747  011014  5170               	movf	(?___lmul+3)& (0+255),w,b
 12748  011016  0100               	movlb	0	; () banked
 12749  011018  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12750                           
 12751                           ;My_RTCC.c: 184: epoch += ((epoch_t)60*60) * tm->hh;
 12752  01101A  0100               	movlb	0	; () banked
 12753  01101C  EE20 F006          	lfsr	2,6
 12754  011020  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12755  011022  26D9               	addwf	fsr2l,f,c
 12756  011024  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12757  011026  22DA               	addwfc	fsr2h,f,c
 12758  011028  50DF               	movf	indf2,w,c
 12759  01102A  0100               	movlb	0	; () banked
 12760  01102C  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12761  01102E  0100               	movlb	0	; () banked
 12762  011030  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12763  011032  0100               	movlb	0	; () banked
 12764  011034  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12765  011036  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12766  011038  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12767  01103A  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12768  01103C  0E10               	movlw	16
 12769  01103E  0100               	movlb	0	; () banked
 12770  011040  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12771  011042  0E0E               	movlw	14
 12772  011044  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12773  011046  0E00               	movlw	0
 12774  011048  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12775  01104A  0E00               	movlw	0
 12776  01104C  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12777  01104E  ECAD  F09B         	call	___lmul	;wreg free
 12778  011052  0100               	movlb	0	; () banked
 12779  011054  516D               	movf	?___lmul& (0+255),w,b
 12780  011056  0100               	movlb	0	; () banked
 12781  011058  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12782  01105A  0100               	movlb	0	; () banked
 12783  01105C  516E               	movf	(?___lmul+1)& (0+255),w,b
 12784  01105E  0100               	movlb	0	; () banked
 12785  011060  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12786  011062  0100               	movlb	0	; () banked
 12787  011064  516F               	movf	(?___lmul+2)& (0+255),w,b
 12788  011066  0100               	movlb	0	; () banked
 12789  011068  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12790  01106A  0100               	movlb	0	; () banked
 12791  01106C  5170               	movf	(?___lmul+3)& (0+255),w,b
 12792  01106E  0100               	movlb	0	; () banked
 12793  011070  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12794                           
 12795                           ;My_RTCC.c: 185: epoch += ((epoch_t)60) * tm->mm;
 12796  011072  0100               	movlb	0	; () banked
 12797  011074  EE20 F005          	lfsr	2,5
 12798  011078  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12799  01107A  26D9               	addwf	fsr2l,f,c
 12800  01107C  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12801  01107E  22DA               	addwfc	fsr2h,f,c
 12802  011080  50DF               	movf	indf2,w,c
 12803  011082  0100               	movlb	0	; () banked
 12804  011084  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12805  011086  0100               	movlb	0	; () banked
 12806  011088  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12807  01108A  0100               	movlb	0	; () banked
 12808  01108C  6F6D               	movwf	___lmul@multiplier& (0+255),b
 12809  01108E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 12810  011090  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 12811  011092  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 12812  011094  0E3C               	movlw	60
 12813  011096  0100               	movlb	0	; () banked
 12814  011098  6F71               	movwf	___lmul@multiplicand& (0+255),b
 12815  01109A  0E00               	movlw	0
 12816  01109C  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 12817  01109E  0E00               	movlw	0
 12818  0110A0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 12819  0110A2  0E00               	movlw	0
 12820  0110A4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 12821  0110A6  ECAD  F09B         	call	___lmul	;wreg free
 12822  0110AA  0100               	movlb	0	; () banked
 12823  0110AC  516D               	movf	?___lmul& (0+255),w,b
 12824  0110AE  0100               	movlb	0	; () banked
 12825  0110B0  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12826  0110B2  0100               	movlb	0	; () banked
 12827  0110B4  516E               	movf	(?___lmul+1)& (0+255),w,b
 12828  0110B6  0100               	movlb	0	; () banked
 12829  0110B8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12830  0110BA  0100               	movlb	0	; () banked
 12831  0110BC  516F               	movf	(?___lmul+2)& (0+255),w,b
 12832  0110BE  0100               	movlb	0	; () banked
 12833  0110C0  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12834  0110C2  0100               	movlb	0	; () banked
 12835  0110C4  5170               	movf	(?___lmul+3)& (0+255),w,b
 12836  0110C6  0100               	movlb	0	; () banked
 12837  0110C8  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;My_RTCC.c: 186: epoch += tm->ss;
 12841  0110CA  0100               	movlb	0	; () banked
 12842  0110CC  EE20 F004          	lfsr	2,4
 12843  0110D0  5179               	movf	caltime_to_epoch@tm& (0+255),w,b
 12844  0110D2  26D9               	addwf	fsr2l,f,c
 12845  0110D4  517A               	movf	(caltime_to_epoch@tm+1)& (0+255),w,b
 12846  0110D6  22DA               	addwfc	fsr2h,f,c
 12847  0110D8  50DF               	movf	indf2,w,c
 12848  0110DA  0100               	movlb	0	; () banked
 12849  0110DC  6F7B               	movwf	??_caltime_to_epoch& (0+255),b
 12850  0110DE  0100               	movlb	0	; () banked
 12851  0110E0  517B               	movf	??_caltime_to_epoch& (0+255),w,b
 12852  0110E2  0100               	movlb	0	; () banked
 12853  0110E4  2781               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 12854  0110E6  0E00               	movlw	0
 12855  0110E8  2382               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 12856  0110EA  2383               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 12857  0110EC  2384               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;My_RTCC.c: 188: tm->epoch = epoch;
 12861  0110EE  C079  FFD9         	movff	caltime_to_epoch@tm,fsr2l
 12862  0110F2  C07A  FFDA         	movff	caltime_to_epoch@tm+1,fsr2h
 12863  0110F6  C081  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 12864  0110FA  C082  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 12865  0110FE  C083  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 12866  011102  C084  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 12867                           
 12868                           ; BSR set to: 0
 12869  011106  0012               	return		;funcret
 12870  011108                     __end_of_caltime_to_epoch:
 12871                           	opt stack 0
 12872                           tblptru	equ	0xFF8
 12873                           tblptrh	equ	0xFF7
 12874                           tblptrl	equ	0xFF6
 12875                           tablat	equ	0xFF5
 12876                           prodh	equ	0xFF4
 12877                           prodl	equ	0xFF3
 12878                           intcon	equ	0xFF2
 12879                           intcon2	equ	0xFF1
 12880                           indf0	equ	0xFEF
 12881                           postinc0	equ	0xFEE
 12882                           fsr0h	equ	0xFEA
 12883                           fsr0l	equ	0xFE9
 12884                           wreg	equ	0xFE8
 12885                           indf1	equ	0xFE7
 12886                           postinc1	equ	0xFE6
 12887                           postdec1	equ	0xFE5
 12888                           fsr1h	equ	0xFE2
 12889                           fsr1l	equ	0xFE1
 12890                           indf2	equ	0xFDF
 12891                           postinc2	equ	0xFDE
 12892                           postdec2	equ	0xFDD
 12893                           plusw2	equ	0xFDB
 12894                           fsr2h	equ	0xFDA
 12895                           fsr2l	equ	0xFD9
 12896                           status	equ	0xFD8
 12897                           
 12898 ;; *************** function _month_length *****************
 12899 ;; Defined at:
 12900 ;;		line 49 in file "../My_library/My_RTCC.c"
 12901 ;; Parameters:    Size  Location     Type
 12902 ;;  year            1    wreg     unsigned char 
 12903 ;;  month           1    6[BANK0 ] unsigned char 
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;  year            1   11[BANK0 ] unsigned char 
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      unsigned char 
 12908 ;; Registers used:
 12909 ;;		wreg, status,2, status,0, cstack
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12915 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12918 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12919 ;;Total ram usage:        6 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:   12
 12922 ;; This function calls:
 12923 ;;		___awmod
 12924 ;; This function is called by:
 12925 ;;		_epoch_to_caltime
 12926 ;;		_caltime_to_epoch
 12927 ;;		_terminal_time
 12928 ;;		_RTCC_adjust_time_inc
 12929 ;;		_RTCC_adjust_time_dec
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text60
 12934  0122BA                     __ptext60:
 12935                           	opt stack 0
 12936  0122BA                     _month_length:
 12937                           	opt stack 11
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;incstack = 0
 12941                           ;month_length@year stored from wreg
 12942  0122BA  0100               	movlb	0	; () banked
 12943  0122BC  6F6B               	movwf	month_length@year& (0+255),b
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;My_RTCC.c: 50: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year % 400);
 12947  0122BE  0E02               	movlw	2
 12948  0122C0  0100               	movlb	0	; () banked
 12949  0122C2  1966               	xorwf	month_length@month& (0+255),w,b
 12950  0122C4  A4D8               	btfss	status,2,c
 12951  0122C6  D03E               	goto	l7658
 12952                           
 12953                           ; BSR set to: 0
 12954  0122C8  C06B  F060         	movff	month_length@year,___awmod@dividend
 12955  0122CC  0100               	movlb	0	; () banked
 12956  0122CE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12957  0122D0  0E00               	movlw	0
 12958  0122D2  0100               	movlb	0	; () banked
 12959  0122D4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12960  0122D6  0E64               	movlw	100
 12961  0122D8  6F62               	movwf	___awmod@divisor& (0+255),b
 12962  0122DA  ECC4  F097         	call	___awmod	;wreg free
 12963  0122DE  0100               	movlb	0	; () banked
 12964  0122E0  5160               	movf	?___awmod& (0+255),w,b
 12965  0122E2  0100               	movlb	0	; () banked
 12966  0122E4  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12967  0122E6  A4D8               	btfss	status,2,c
 12968  0122E8  D002               	goto	u7340
 12969  0122EA  0E01               	movlw	1
 12970  0122EC  D001               	goto	u7350
 12971  0122EE                     u7340:
 12972  0122EE  0E00               	movlw	0
 12973  0122F0                     u7350:
 12974  0122F0  0800               	sublw	0
 12975  0122F2  0100               	movlb	0	; () banked
 12976  0122F4  6F67               	movwf	??_month_length& (0+255),b
 12977  0122F6  C06B  F060         	movff	month_length@year,___awmod@dividend
 12978  0122FA  0100               	movlb	0	; () banked
 12979  0122FC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 12980  0122FE  0E01               	movlw	1
 12981  012300  0100               	movlb	0	; () banked
 12982  012302  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 12983  012304  0E90               	movlw	144
 12984  012306  6F62               	movwf	___awmod@divisor& (0+255),b
 12985  012308  ECC4  F097         	call	___awmod	;wreg free
 12986  01230C  0100               	movlb	0	; () banked
 12987  01230E  5160               	movf	?___awmod& (0+255),w,b
 12988  012310  0100               	movlb	0	; () banked
 12989  012312  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 12990  012314  A4D8               	btfss	status,2,c
 12991  012316  D004               	goto	u7360
 12992  012318  0100               	movlb	0	; () banked
 12993  01231A  6B68               	clrf	(??_month_length+1)& (0+255),b
 12994  01231C  2B68               	incf	(??_month_length+1)& (0+255),f,b
 12995  01231E  D002               	goto	u7378
 12996  012320                     u7360:
 12997  012320  0100               	movlb	0	; () banked
 12998  012322  6B68               	clrf	(??_month_length+1)& (0+255),b
 12999  012324                     u7378:
 13000  012324  C06B  F069         	movff	month_length@year,??_month_length+2
 13001  012328  0E03               	movlw	3
 13002  01232A  0100               	movlb	0	; () banked
 13003  01232C  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13004  01232E  A4D8               	btfss	status,2,c
 13005  012330  D002               	goto	u7380
 13006  012332  0E01               	movlw	1
 13007  012334  D001               	goto	u7390
 13008  012336                     u7380:
 13009  012336  0E00               	movlw	0
 13010  012338                     u7390:
 13011  012338  0100               	movlb	0	; () banked
 13012  01233A  2568               	addwf	(??_month_length+1)& (0+255),w,b
 13013  01233C  0100               	movlb	0	; () banked
 13014  01233E  2567               	addwf	??_month_length& (0+255),w,b
 13015  012340  0F1C               	addlw	28
 13016                           
 13017                           ; BSR set to: 0
 13018                           
 13019                           ; BSR set to: 0
 13020  012342  0012               	return	
 13021  012344                     l7658:
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;My_RTCC.c: 51: else return 31 - (((-(month & 1)^month)&13) == 4);
 13025  012344  0100               	movlb	0	; () banked
 13026  012346  5166               	movf	month_length@month& (0+255),w,b
 13027  012348  0B01               	andlw	1
 13028  01234A  0100               	movlb	0	; () banked
 13029  01234C  6F67               	movwf	??_month_length& (0+255),b
 13030  01234E  6B68               	clrf	(??_month_length+1)& (0+255),b
 13031  012350  0100               	movlb	0	; () banked
 13032  012352  1F67               	comf	??_month_length& (0+255),f,b
 13033  012354  1F68               	comf	(??_month_length+1)& (0+255),f,b
 13034  012356  4B67               	infsnz	??_month_length& (0+255),f,b
 13035  012358  2B68               	incf	(??_month_length+1)& (0+255),f,b
 13036  01235A  0100               	movlb	0	; () banked
 13037  01235C  5166               	movf	month_length@month& (0+255),w,b
 13038  01235E  0100               	movlb	0	; () banked
 13039  012360  6F69               	movwf	(??_month_length+2)& (0+255),b
 13040  012362  6B6A               	clrf	(??_month_length+3)& (0+255),b
 13041  012364  0100               	movlb	0	; () banked
 13042  012366  5167               	movf	??_month_length& (0+255),w,b
 13043  012368  0100               	movlb	0	; () banked
 13044  01236A  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 13045  01236C  0100               	movlb	0	; () banked
 13046  01236E  5168               	movf	(??_month_length+1)& (0+255),w,b
 13047  012370  0100               	movlb	0	; () banked
 13048  012372  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 13049  012374  0E0D               	movlw	13
 13050  012376  0100               	movlb	0	; () banked
 13051  012378  1769               	andwf	(??_month_length+2)& (0+255),f,b
 13052  01237A  0E00               	movlw	0
 13053  01237C  176A               	andwf	(??_month_length+3)& (0+255),f,b
 13054  01237E  0E04               	movlw	4
 13055  012380  0100               	movlb	0	; () banked
 13056  012382  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 13057  012384  0100               	movlb	0	; () banked
 13058  012386  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 13059  012388  A4D8               	btfss	status,2,c
 13060  01238A  D002               	goto	u7400
 13061  01238C  0E01               	movlw	1
 13062  01238E  D001               	goto	u7410
 13063  012390                     u7400:
 13064  012390  0E00               	movlw	0
 13065  012392                     u7410:
 13066  012392  0800               	sublw	0
 13067  012394  0F1F               	addlw	31
 13068                           
 13069                           ; BSR set to: 0
 13070  012396  0012               	return	
 13071                           
 13072                           ; BSR set to: 0
 13073                           
 13074                           ; BSR set to: 0
 13075  012398  0012               	return		;funcret
 13076  01239A                     __end_of_month_length:
 13077                           	opt stack 0
 13078                           tblptru	equ	0xFF8
 13079                           tblptrh	equ	0xFF7
 13080                           tblptrl	equ	0xFF6
 13081                           tablat	equ	0xFF5
 13082                           prodh	equ	0xFF4
 13083                           prodl	equ	0xFF3
 13084                           intcon	equ	0xFF2
 13085                           intcon2	equ	0xFF1
 13086                           indf0	equ	0xFEF
 13087                           postinc0	equ	0xFEE
 13088                           fsr0h	equ	0xFEA
 13089                           fsr0l	equ	0xFE9
 13090                           wreg	equ	0xFE8
 13091                           indf1	equ	0xFE7
 13092                           postinc1	equ	0xFE6
 13093                           postdec1	equ	0xFE5
 13094                           fsr1h	equ	0xFE2
 13095                           fsr1l	equ	0xFE1
 13096                           indf2	equ	0xFDF
 13097                           postinc2	equ	0xFDE
 13098                           postdec2	equ	0xFDD
 13099                           plusw2	equ	0xFDB
 13100                           fsr2h	equ	0xFDA
 13101                           fsr2l	equ	0xFD9
 13102                           status	equ	0xFD8
 13103                           
 13104 ;; *************** function ___awmod *****************
 13105 ;; Defined at:
 13106 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  dividend        2    0[BANK0 ] int 
 13109 ;;  divisor         2    2[BANK0 ] int 
 13110 ;; Auto vars:     Size  Location     Type
 13111 ;;  sign            1    5[BANK0 ] unsigned char 
 13112 ;;  counter         1    4[BANK0 ] unsigned char 
 13113 ;; Return value:  Size  Location     Type
 13114 ;;                  2    0[BANK0 ] int 
 13115 ;; Registers used:
 13116 ;;		wreg, status,2, status,0
 13117 ;; Tracked objects:
 13118 ;;		On entry : 0/0
 13119 ;;		On exit  : 0/0
 13120 ;;		Unchanged: 0/0
 13121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13125 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13126 ;;Total ram usage:        6 bytes
 13127 ;; Hardware stack levels used:    1
 13128 ;; Hardware stack levels required when called:   11
 13129 ;; This function calls:
 13130 ;;		Nothing
 13131 ;; This function is called by:
 13132 ;;		_month_length
 13133 ;; This function uses a non-reentrant model
 13134 ;;
 13135                           
 13136                           	psect	text61
 13137  012F88                     __ptext61:
 13138                           	opt stack 0
 13139  012F88                     ___awmod:
 13140                           	opt stack 11
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;incstack = 0
 13144  012F88  0E00               	movlw	0
 13145  012F8A  0100               	movlb	0	; () banked
 13146  012F8C  6F65               	movwf	___awmod@sign& (0+255),b
 13147                           
 13148                           ; BSR set to: 0
 13149  012F8E  0100               	movlb	0	; () banked
 13150  012F90  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 13151  012F92  D009               	goto	l7606
 13152                           
 13153                           ; BSR set to: 0
 13154  012F94  0100               	movlb	0	; () banked
 13155  012F96  6D60               	negf	___awmod@dividend& (0+255),b
 13156  012F98  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13157  012F9A  B0D8               	btfsc	status,0,c
 13158  012F9C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13159                           
 13160                           ; BSR set to: 0
 13161  012F9E  0E01               	movlw	1
 13162  012FA0  0100               	movlb	0	; () banked
 13163  012FA2  6F65               	movwf	___awmod@sign& (0+255),b
 13164  012FA4  D000               	goto	l7606
 13165  012FA6                     l7606:
 13166                           
 13167                           ; BSR set to: 0
 13168  012FA6  0100               	movlb	0	; () banked
 13169  012FA8  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13170  012FAA  D006               	goto	l7610
 13171                           
 13172                           ; BSR set to: 0
 13173  012FAC  0100               	movlb	0	; () banked
 13174  012FAE  6D62               	negf	___awmod@divisor& (0+255),b
 13175  012FB0  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13176  012FB2  B0D8               	btfsc	status,0,c
 13177  012FB4  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13178  012FB6  D000               	goto	l7610
 13179  012FB8                     l7610:
 13180                           
 13181                           ; BSR set to: 0
 13182  012FB8  0100               	movlb	0	; () banked
 13183  012FBA  5162               	movf	___awmod@divisor& (0+255),w,b
 13184  012FBC  0100               	movlb	0	; () banked
 13185  012FBE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13186  012FC0  B4D8               	btfsc	status,2,c
 13187  012FC2  D02B               	goto	l7626
 13188                           
 13189                           ; BSR set to: 0
 13190  012FC4  0E01               	movlw	1
 13191  012FC6  0100               	movlb	0	; () banked
 13192  012FC8  6F64               	movwf	___awmod@counter& (0+255),b
 13193  012FCA  D007               	goto	l7616
 13194  012FCC                     l7614:
 13195                           
 13196                           ; BSR set to: 0
 13197  012FCC  0100               	movlb	0	; () banked
 13198  012FCE  90D8               	bcf	status,0,c
 13199  012FD0  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13200  012FD2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13201  012FD4  0100               	movlb	0	; () banked
 13202  012FD6  2B64               	incf	___awmod@counter& (0+255),f,b
 13203  012FD8  D000               	goto	l7616
 13204  012FDA                     l7616:
 13205                           
 13206                           ; BSR set to: 0
 13207  012FDA  0100               	movlb	0	; () banked
 13208  012FDC  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 13209  012FDE  D002               	goto	l7618
 13210  012FE0  D7F5               	goto	l7614
 13211                           
 13212                           ; BSR set to: 0
 13213  012FE2  D000               	goto	l7618
 13214  012FE4                     l7618:
 13215                           
 13216                           ; BSR set to: 0
 13217  012FE4  0100               	movlb	0	; () banked
 13218  012FE6  5162               	movf	___awmod@divisor& (0+255),w,b
 13219  012FE8  0100               	movlb	0	; () banked
 13220  012FEA  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13221  012FEC  0100               	movlb	0	; () banked
 13222  012FEE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13223  012FF0  0100               	movlb	0	; () banked
 13224  012FF2  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13225  012FF4  A0D8               	btfss	status,0,c
 13226  012FF6  D009               	goto	l7622
 13227                           
 13228                           ; BSR set to: 0
 13229  012FF8  0100               	movlb	0	; () banked
 13230  012FFA  5162               	movf	___awmod@divisor& (0+255),w,b
 13231  012FFC  0100               	movlb	0	; () banked
 13232  012FFE  5F60               	subwf	___awmod@dividend& (0+255),f,b
 13233  013000  0100               	movlb	0	; () banked
 13234  013002  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13235  013004  0100               	movlb	0	; () banked
 13236  013006  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 13237  013008  D000               	goto	l7622
 13238  01300A                     l7622:
 13239                           
 13240                           ; BSR set to: 0
 13241  01300A  0100               	movlb	0	; () banked
 13242  01300C  90D8               	bcf	status,0,c
 13243  01300E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 13244  013010  3362               	rrcf	___awmod@divisor& (0+255),f,b
 13245                           
 13246                           ; BSR set to: 0
 13247  013012  0100               	movlb	0	; () banked
 13248  013014  2F64               	decfsz	___awmod@counter& (0+255),f,b
 13249  013016  D7E6               	goto	l7618
 13250                           
 13251                           ; BSR set to: 0
 13252  013018  D000               	goto	l7626
 13253  01301A                     l7626:
 13254                           
 13255                           ; BSR set to: 0
 13256  01301A  0100               	movlb	0	; () banked
 13257  01301C  5165               	movf	___awmod@sign& (0+255),w,b
 13258  01301E  0100               	movlb	0	; () banked
 13259  013020  B4D8               	btfsc	status,2,c
 13260  013022  D006               	goto	l7630
 13261                           
 13262                           ; BSR set to: 0
 13263  013024  0100               	movlb	0	; () banked
 13264  013026  6D60               	negf	___awmod@dividend& (0+255),b
 13265  013028  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13266  01302A  B0D8               	btfsc	status,0,c
 13267  01302C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13268  01302E  D000               	goto	l7630
 13269  013030                     l7630:
 13270                           
 13271                           ; BSR set to: 0
 13272  013030  C060  F060         	movff	___awmod@dividend,?___awmod
 13273  013034  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 13274  013038  0012               	return	
 13275                           
 13276                           ; BSR set to: 0
 13277                           
 13278                           ; BSR set to: 0
 13279  01303A  0012               	return		;funcret
 13280  01303C                     __end_of___awmod:
 13281                           	opt stack 0
 13282                           tblptru	equ	0xFF8
 13283                           tblptrh	equ	0xFF7
 13284                           tblptrl	equ	0xFF6
 13285                           tablat	equ	0xFF5
 13286                           prodh	equ	0xFF4
 13287                           prodl	equ	0xFF3
 13288                           intcon	equ	0xFF2
 13289                           intcon2	equ	0xFF1
 13290                           indf0	equ	0xFEF
 13291                           postinc0	equ	0xFEE
 13292                           fsr0h	equ	0xFEA
 13293                           fsr0l	equ	0xFE9
 13294                           wreg	equ	0xFE8
 13295                           indf1	equ	0xFE7
 13296                           postinc1	equ	0xFE6
 13297                           postdec1	equ	0xFE5
 13298                           fsr1h	equ	0xFE2
 13299                           fsr1l	equ	0xFE1
 13300                           indf2	equ	0xFDF
 13301                           postinc2	equ	0xFDE
 13302                           postdec2	equ	0xFDD
 13303                           plusw2	equ	0xFDB
 13304                           fsr2h	equ	0xFDA
 13305                           fsr2l	equ	0xFD9
 13306                           status	equ	0xFD8
 13307                           
 13308 ;; *************** function ___lmul *****************
 13309 ;; Defined at:
 13310 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 13311 ;; Parameters:    Size  Location     Type
 13312 ;;  multiplier      4   13[BANK0 ] unsigned long 
 13313 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;  product         4   21[BANK0 ] unsigned long 
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  4   13[BANK0 ] unsigned long 
 13318 ;; Registers used:
 13319 ;;		wreg, status,2, status,0
 13320 ;; Tracked objects:
 13321 ;;		On entry : 0/0
 13322 ;;		On exit  : 0/0
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13325 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13326 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13328 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13329 ;;Total ram usage:       12 bytes
 13330 ;; Hardware stack levels used:    1
 13331 ;; Hardware stack levels required when called:   11
 13332 ;; This function calls:
 13333 ;;		Nothing
 13334 ;; This function is called by:
 13335 ;;		_get_quot_rem
 13336 ;;		_caltime_to_epoch
 13337 ;;		_RTCC_adjust_time_inc
 13338 ;;		_RTCC_adjust_time_dec
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text62
 13343  01375A                     __ptext62:
 13344                           	opt stack 0
 13345  01375A                     ___lmul:
 13346                           	opt stack 12
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;incstack = 0
 13350  01375A  0E00               	movlw	0
 13351  01375C  0100               	movlb	0	; () banked
 13352  01375E  6F75               	movwf	___lmul@product& (0+255),b
 13353  013760  0E00               	movlw	0
 13354  013762  6F76               	movwf	(___lmul@product+1)& (0+255),b
 13355  013764  0E00               	movlw	0
 13356  013766  6F77               	movwf	(___lmul@product+2)& (0+255),b
 13357  013768  0E00               	movlw	0
 13358  01376A  6F78               	movwf	(___lmul@product+3)& (0+255),b
 13359  01376C  D000               	goto	l7664
 13360  01376E                     l7664:
 13361                           
 13362                           ; BSR set to: 0
 13363  01376E  0100               	movlb	0	; () banked
 13364  013770  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 13365  013772  D011               	goto	l7668
 13366                           
 13367                           ; BSR set to: 0
 13368  013774  0100               	movlb	0	; () banked
 13369  013776  5171               	movf	___lmul@multiplicand& (0+255),w,b
 13370  013778  0100               	movlb	0	; () banked
 13371  01377A  2775               	addwf	___lmul@product& (0+255),f,b
 13372  01377C  0100               	movlb	0	; () banked
 13373  01377E  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 13374  013780  0100               	movlb	0	; () banked
 13375  013782  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 13376  013784  0100               	movlb	0	; () banked
 13377  013786  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 13378  013788  0100               	movlb	0	; () banked
 13379  01378A  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 13380  01378C  0100               	movlb	0	; () banked
 13381  01378E  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 13382  013790  0100               	movlb	0	; () banked
 13383  013792  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 13384  013794  D000               	goto	l7668
 13385  013796                     l7668:
 13386                           
 13387                           ; BSR set to: 0
 13388  013796  0100               	movlb	0	; () banked
 13389  013798  90D8               	bcf	status,0,c
 13390  01379A  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 13391  01379C  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 13392  01379E  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 13393  0137A0  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 13394                           
 13395                           ; BSR set to: 0
 13396  0137A2  0100               	movlb	0	; () banked
 13397  0137A4  90D8               	bcf	status,0,c
 13398  0137A6  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 13399  0137A8  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 13400  0137AA  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 13401  0137AC  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 13402  0137AE  0100               	movlb	0	; () banked
 13403  0137B0  516D               	movf	___lmul@multiplier& (0+255),w,b
 13404  0137B2  0100               	movlb	0	; () banked
 13405  0137B4  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 13406  0137B6  0100               	movlb	0	; () banked
 13407  0137B8  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 13408  0137BA  0100               	movlb	0	; () banked
 13409  0137BC  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 13410  0137BE  A4D8               	btfss	status,2,c
 13411  0137C0  D7D6               	goto	l7664
 13412                           
 13413                           ; BSR set to: 0
 13414  0137C2  C075  F06D         	movff	___lmul@product,?___lmul
 13415  0137C6  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 13416  0137CA  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 13417  0137CE  C078  F070         	movff	___lmul@product+3,?___lmul+3
 13418                           
 13419                           ; BSR set to: 0
 13420  0137D2  0012               	return		;funcret
 13421  0137D4                     __end_of___lmul:
 13422                           	opt stack 0
 13423                           tblptru	equ	0xFF8
 13424                           tblptrh	equ	0xFF7
 13425                           tblptrl	equ	0xFF6
 13426                           tablat	equ	0xFF5
 13427                           prodh	equ	0xFF4
 13428                           prodl	equ	0xFF3
 13429                           intcon	equ	0xFF2
 13430                           intcon2	equ	0xFF1
 13431                           indf0	equ	0xFEF
 13432                           postinc0	equ	0xFEE
 13433                           fsr0h	equ	0xFEA
 13434                           fsr0l	equ	0xFE9
 13435                           wreg	equ	0xFE8
 13436                           indf1	equ	0xFE7
 13437                           postinc1	equ	0xFE6
 13438                           postdec1	equ	0xFE5
 13439                           fsr1h	equ	0xFE2
 13440                           fsr1l	equ	0xFE1
 13441                           indf2	equ	0xFDF
 13442                           postinc2	equ	0xFDE
 13443                           postdec2	equ	0xFDD
 13444                           plusw2	equ	0xFDB
 13445                           fsr2h	equ	0xFDA
 13446                           fsr2l	equ	0xFD9
 13447                           status	equ	0xFD8
 13448                           
 13449 ;; *************** function _RTCC_to_caltime *****************
 13450 ;; Defined at:
 13451 ;;		line 83 in file "../My_library/My_RTCC.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  tm              2    2[BANK0 ] PTR struct .
 13454 ;;		 -> now(14), 
 13455 ;; Auto vars:     Size  Location     Type
 13456 ;;  dumy            1    4[BANK0 ] unsigned char 
 13457 ;; Return value:  Size  Location     Type
 13458 ;;		None               void
 13459 ;; Registers used:
 13460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13461 ;; Tracked objects:
 13462 ;;		On entry : 0/0
 13463 ;;		On exit  : 0/0
 13464 ;;		Unchanged: 0/0
 13465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13469 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13470 ;;Total ram usage:        3 bytes
 13471 ;; Hardware stack levels used:    1
 13472 ;; Hardware stack levels required when called:   12
 13473 ;; This function calls:
 13474 ;;		_x_to_d
 13475 ;; This function is called by:
 13476 ;;		_RTCC_from_RTCC
 13477 ;; This function uses a non-reentrant model
 13478 ;;
 13479                           
 13480                           	psect	text63
 13481  012D56                     __ptext63:
 13482                           	opt stack 0
 13483  012D56                     _RTCC_to_caltime:
 13484                           	opt stack 12
 13485                           
 13486                           ;My_RTCC.c: 84: while (RTCCFGbits.RTCSYNC);
 13487                           
 13488                           ; BSR set to: 0
 13489                           ;incstack = 0
 13490  012D56  D000               	goto	l930
 13491  012D58                     l930:
 13492  012D58  010F               	movlb	15	; () banked
 13493  012D5A  B93F               	btfsc	63,4,b	;volatile
 13494  012D5C  D7FD               	goto	l930
 13495                           
 13496                           ; BSR set to: 15
 13497                           ;My_RTCC.c: 86: RTCCFGbits.RTCPTR0 = 1;
 13498  012D5E  010F               	movlb	15	; () banked
 13499  012D60  813F               	bsf	63,0,b	;volatile
 13500                           
 13501                           ;My_RTCC.c: 87: RTCCFGbits.RTCPTR1 = 1;
 13502  012D62  010F               	movlb	15	; () banked
 13503  012D64  833F               	bsf	63,1,b	;volatile
 13504                           
 13505                           ; BSR set to: 15
 13506                           ;My_RTCC.c: 89: tm->YY = x_to_d(RTCVALL);
 13507  012D66  0100               	movlb	0	; () banked
 13508  012D68  EE20 F00A          	lfsr	2,10
 13509  012D6C  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13510  012D6E  26D9               	addwf	fsr2l,f,c
 13511  012D70  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13512  012D72  22DA               	addwfc	fsr2h,f,c
 13513  012D74  010F               	movlb	15	; () banked
 13514  012D76  513A               	movf	58,w,b	;volatile
 13515  012D78  ECC5  F09F         	call	_x_to_d
 13516  012D7C  6EDF               	movwf	indf2,c
 13517                           
 13518                           ;My_RTCC.c: 90: uint8_t dumy = RTCVALH;
 13519  012D7E  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 13520                           
 13521                           ;My_RTCC.c: 91: tm->DD = x_to_d(RTCVALL);
 13522  012D82  0100               	movlb	0	; () banked
 13523  012D84  EE20 F008          	lfsr	2,8
 13524  012D88  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13525  012D8A  26D9               	addwf	fsr2l,f,c
 13526  012D8C  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13527  012D8E  22DA               	addwfc	fsr2h,f,c
 13528  012D90  010F               	movlb	15	; () banked
 13529  012D92  513A               	movf	58,w,b	;volatile
 13530  012D94  ECC5  F09F         	call	_x_to_d
 13531  012D98  6EDF               	movwf	indf2,c
 13532                           
 13533                           ;My_RTCC.c: 92: tm->MM = x_to_d(RTCVALH);
 13534  012D9A  0100               	movlb	0	; () banked
 13535  012D9C  EE20 F009          	lfsr	2,9
 13536  012DA0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13537  012DA2  26D9               	addwf	fsr2l,f,c
 13538  012DA4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13539  012DA6  22DA               	addwfc	fsr2h,f,c
 13540  012DA8  010F               	movlb	15	; () banked
 13541  012DAA  513B               	movf	59,w,b	;volatile
 13542  012DAC  ECC5  F09F         	call	_x_to_d
 13543  012DB0  6EDF               	movwf	indf2,c
 13544                           
 13545                           ;My_RTCC.c: 93: tm->hh = x_to_d(RTCVALL);
 13546  012DB2  0100               	movlb	0	; () banked
 13547  012DB4  EE20 F006          	lfsr	2,6
 13548  012DB8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13549  012DBA  26D9               	addwf	fsr2l,f,c
 13550  012DBC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13551  012DBE  22DA               	addwfc	fsr2h,f,c
 13552  012DC0  010F               	movlb	15	; () banked
 13553  012DC2  513A               	movf	58,w,b	;volatile
 13554  012DC4  ECC5  F09F         	call	_x_to_d
 13555  012DC8  6EDF               	movwf	indf2,c
 13556                           
 13557                           ;My_RTCC.c: 94: tm->EE = x_to_d(RTCVALH);
 13558  012DCA  0100               	movlb	0	; () banked
 13559  012DCC  EE20 F007          	lfsr	2,7
 13560  012DD0  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13561  012DD2  26D9               	addwf	fsr2l,f,c
 13562  012DD4  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13563  012DD6  22DA               	addwfc	fsr2h,f,c
 13564  012DD8  010F               	movlb	15	; () banked
 13565  012DDA  513B               	movf	59,w,b	;volatile
 13566  012DDC  ECC5  F09F         	call	_x_to_d
 13567  012DE0  6EDF               	movwf	indf2,c
 13568                           
 13569                           ;My_RTCC.c: 95: tm->ss = x_to_d(RTCVALL);
 13570  012DE2  0100               	movlb	0	; () banked
 13571  012DE4  EE20 F004          	lfsr	2,4
 13572  012DE8  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13573  012DEA  26D9               	addwf	fsr2l,f,c
 13574  012DEC  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13575  012DEE  22DA               	addwfc	fsr2h,f,c
 13576  012DF0  010F               	movlb	15	; () banked
 13577  012DF2  513A               	movf	58,w,b	;volatile
 13578  012DF4  ECC5  F09F         	call	_x_to_d
 13579  012DF8  6EDF               	movwf	indf2,c
 13580                           
 13581                           ;My_RTCC.c: 96: tm->mm = x_to_d(RTCVALH);
 13582  012DFA  0100               	movlb	0	; () banked
 13583  012DFC  EE20 F005          	lfsr	2,5
 13584  012E00  5162               	movf	RTCC_to_caltime@tm& (0+255),w,b
 13585  012E02  26D9               	addwf	fsr2l,f,c
 13586  012E04  5163               	movf	(RTCC_to_caltime@tm+1)& (0+255),w,b
 13587  012E06  22DA               	addwfc	fsr2h,f,c
 13588  012E08  010F               	movlb	15	; () banked
 13589  012E0A  513B               	movf	59,w,b	;volatile
 13590  012E0C  ECC5  F09F         	call	_x_to_d
 13591  012E10  6EDF               	movwf	indf2,c
 13592  012E12  0012               	return		;funcret
 13593  012E14                     __end_of_RTCC_to_caltime:
 13594                           	opt stack 0
 13595                           tblptru	equ	0xFF8
 13596                           tblptrh	equ	0xFF7
 13597                           tblptrl	equ	0xFF6
 13598                           tablat	equ	0xFF5
 13599                           prodh	equ	0xFF4
 13600                           prodl	equ	0xFF3
 13601                           intcon	equ	0xFF2
 13602                           intcon2	equ	0xFF1
 13603                           indf0	equ	0xFEF
 13604                           postinc0	equ	0xFEE
 13605                           fsr0h	equ	0xFEA
 13606                           fsr0l	equ	0xFE9
 13607                           wreg	equ	0xFE8
 13608                           indf1	equ	0xFE7
 13609                           postinc1	equ	0xFE6
 13610                           postdec1	equ	0xFE5
 13611                           fsr1h	equ	0xFE2
 13612                           fsr1l	equ	0xFE1
 13613                           indf2	equ	0xFDF
 13614                           postinc2	equ	0xFDE
 13615                           postdec2	equ	0xFDD
 13616                           plusw2	equ	0xFDB
 13617                           fsr2h	equ	0xFDA
 13618                           fsr2l	equ	0xFD9
 13619                           status	equ	0xFD8
 13620                           
 13621 ;; *************** function _x_to_d *****************
 13622 ;; Defined at:
 13623 ;;		line 45 in file "../My_library/My_RTCC.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;  hex             1    wreg     unsigned char 
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;  hex             1    1[BANK0 ] unsigned char 
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      unsigned char 
 13630 ;; Registers used:
 13631 ;;		wreg, status,2, status,0, prodl, prodh
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13641 ;;Total ram usage:        2 bytes
 13642 ;; Hardware stack levels used:    1
 13643 ;; Hardware stack levels required when called:   11
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_RTCC_to_caltime
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           	psect	text64
 13652  013F8A                     __ptext64:
 13653                           	opt stack 0
 13654  013F8A                     _x_to_d:
 13655                           	opt stack 12
 13656                           
 13657                           ;incstack = 0
 13658                           ;x_to_d@hex stored from wreg
 13659  013F8A  0100               	movlb	0	; () banked
 13660  013F8C  6F61               	movwf	x_to_d@hex& (0+255),b
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;My_RTCC.c: 46: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 13664  013F8E  C061  F060         	movff	x_to_d@hex,??_x_to_d
 13665  013F92  0E0F               	movlw	15
 13666  013F94  0100               	movlb	0	; () banked
 13667  013F96  1760               	andwf	??_x_to_d& (0+255),f,b
 13668  013F98  0100               	movlb	0	; () banked
 13669  013F9A  3961               	swapf	x_to_d@hex& (0+255),w,b
 13670  013F9C  0B0F               	andlw	15
 13671  013F9E  0B0F               	andlw	15
 13672  013FA0  0D0A               	mullw	10
 13673  013FA2  50F3               	movf	prodl,w,c
 13674  013FA4  0100               	movlb	0	; () banked
 13675  013FA6  2560               	addwf	??_x_to_d& (0+255),w,b
 13676  013FA8  0012               	return	
 13677                           
 13678                           ; BSR set to: 0
 13679                           
 13680                           ; BSR set to: 0
 13681  013FAA  0012               	return		;funcret
 13682  013FAC                     __end_of_x_to_d:
 13683                           	opt stack 0
 13684                           tblptru	equ	0xFF8
 13685                           tblptrh	equ	0xFF7
 13686                           tblptrl	equ	0xFF6
 13687                           tablat	equ	0xFF5
 13688                           prodh	equ	0xFF4
 13689                           prodl	equ	0xFF3
 13690                           intcon	equ	0xFF2
 13691                           intcon2	equ	0xFF1
 13692                           indf0	equ	0xFEF
 13693                           postinc0	equ	0xFEE
 13694                           fsr0h	equ	0xFEA
 13695                           fsr0l	equ	0xFE9
 13696                           wreg	equ	0xFE8
 13697                           indf1	equ	0xFE7
 13698                           postinc1	equ	0xFE6
 13699                           postdec1	equ	0xFE5
 13700                           fsr1h	equ	0xFE2
 13701                           fsr1l	equ	0xFE1
 13702                           indf2	equ	0xFDF
 13703                           postinc2	equ	0xFDE
 13704                           postdec2	equ	0xFDD
 13705                           plusw2	equ	0xFDB
 13706                           fsr2h	equ	0xFDA
 13707                           fsr2l	equ	0xFD9
 13708                           status	equ	0xFD8
 13709                           
 13710 ;; *************** function _ISR *****************
 13711 ;; Defined at:
 13712 ;;		line 31 in file "PIC18F27J53-test01.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;		None
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;		None
 13717 ;; Return value:  Size  Location     Type
 13718 ;;		None               void
 13719 ;; Registers used:
 13720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13728 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13729 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13730 ;;Total ram usage:       14 bytes
 13731 ;; Hardware stack levels used:    1
 13732 ;; Hardware stack levels required when called:   10
 13733 ;; This function calls:
 13734 ;;		_USB_ISR
 13735 ;; This function is called by:
 13736 ;;		Interrupt level 2
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           	psect	intcode
 13741  000008                     __pintcode:
 13742                           	opt stack 0
 13743  000008                     _ISR:
 13744                           	opt stack 11
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;incstack = 0
 13748  000008  CFFA F04B          	movff	pclath,??_ISR
 13749  00000C  CFFB F04C          	movff	pclatu,??_ISR+1
 13750  000010  CFE9 F04D          	movff	fsr0l,??_ISR+2
 13751  000014  CFEA F04E          	movff	fsr0h,??_ISR+3
 13752  000018  CFE1 F04F          	movff	fsr1l,??_ISR+4
 13753  00001C  CFE2 F050          	movff	fsr1h,??_ISR+5
 13754  000020  CFD9 F051          	movff	fsr2l,??_ISR+6
 13755  000024  CFDA F052          	movff	fsr2h,??_ISR+7
 13756  000028  CFF3 F053          	movff	prodl,??_ISR+8
 13757  00002C  CFF4 F054          	movff	prodh,??_ISR+9
 13758  000030  CFF6 F055          	movff	tblptrl,??_ISR+10
 13759  000034  CFF7 F056          	movff	tblptrh,??_ISR+11
 13760  000038  CFF8 F057          	movff	tblptru,??_ISR+12
 13761  00003C  CFF5 F058          	movff	tablat,??_ISR+13
 13762                           
 13763                           ;PIC18F27J53-test01.c: 32: USB_ISR();
 13764  000040  EC00  F008         	call	_USB_ISR	;wreg free
 13765                           
 13766                           ;PIC18F27J53-test01.c: 33: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 13767  000044  B4F2               	btfsc	intcon,2,c	;volatile
 13768  000046  AAF2               	btfss	intcon,5,c	;volatile
 13769  000048  D001               	goto	i2l1324
 13770                           
 13771                           ;PIC18F27J53-test01.c: 34: INTCONbits.T0IF = 0;
 13772  00004A  94F2               	bcf	intcon,2,c	;volatile
 13773  00004C                     i2l1324:
 13774                           
 13775                           ;PIC18F27J53-test01.c: 35: }
 13776                           ;PIC18F27J53-test01.c: 36: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 13777  00004C  B09E               	btfsc	3998,0,c	;volatile
 13778  00004E  A09D               	btfss	3997,0,c	;volatile
 13779  000050  D005               	goto	i2l7522
 13780                           
 13781                           ;PIC18F27J53-test01.c: 37: PIR1bits.TMR1IF = 0;
 13782  000052  909E               	bcf	3998,0,c	;volatile
 13783                           
 13784                           ;PIC18F27J53-test01.c: 38: TMR1H = 0xC0;
 13785  000054  0EC0               	movlw	192
 13786  000056  6ECF               	movwf	4047,c	;volatile
 13787                           
 13788                           ;PIC18F27J53-test01.c: 39: LATAbits.LATA0 = !LATAbits.LATA0;
 13789  000058  7089               	btg	3977,0,c	;volatile
 13790  00005A  D000               	goto	i2l7522
 13791  00005C                     i2l7522:
 13792                           
 13793                           ;PIC18F27J53-test01.c: 40: }
 13794                           ;PIC18F27J53-test01.c: 41: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 13795  00005C  B2A1               	btfsc	4001,1,c	;volatile
 13796  00005E  A2A0               	btfss	4000,1,c	;volatile
 13797  000060  D003               	goto	i2l1327
 13798                           
 13799                           ;PIC18F27J53-test01.c: 42: PIR2bits.TMR3IF = 0;
 13800  000062  92A1               	bcf	4001,1,c	;volatile
 13801                           
 13802                           ;PIC18F27J53-test01.c: 43: LATAbits.LATA1 = !LATAbits.LATA1;
 13803  000064  7289               	btg	3977,1,c	;volatile
 13804  000066  D000               	goto	i2l1327
 13805  000068                     i2l1327:
 13806  000068  C058  FFF5         	movff	??_ISR+13,tablat
 13807  00006C  C057  FFF8         	movff	??_ISR+12,tblptru
 13808  000070  C056  FFF7         	movff	??_ISR+11,tblptrh
 13809  000074  C055  FFF6         	movff	??_ISR+10,tblptrl
 13810  000078  C054  FFF4         	movff	??_ISR+9,prodh
 13811  00007C  C053  FFF3         	movff	??_ISR+8,prodl
 13812  000080  C052  FFDA         	movff	??_ISR+7,fsr2h
 13813  000084  C051  FFD9         	movff	??_ISR+6,fsr2l
 13814  000088  C050  FFE2         	movff	??_ISR+5,fsr1h
 13815  00008C  C04F  FFE1         	movff	??_ISR+4,fsr1l
 13816  000090  C04E  FFEA         	movff	??_ISR+3,fsr0h
 13817  000094  C04D  FFE9         	movff	??_ISR+2,fsr0l
 13818  000098  C04C  FFFB         	movff	??_ISR+1,pclatu
 13819  00009C  C04B  FFFA         	movff	??_ISR,pclath
 13820  0000A0  0011               	retfie		f
 13821  0000A2                     __end_of_ISR:
 13822                           	opt stack 0
 13823                           pclatu	equ	0xFFB
 13824                           pclath	equ	0xFFA
 13825                           tblptru	equ	0xFF8
 13826                           tblptrh	equ	0xFF7
 13827                           tblptrl	equ	0xFF6
 13828                           tablat	equ	0xFF5
 13829                           prodh	equ	0xFF4
 13830                           prodl	equ	0xFF3
 13831                           intcon	equ	0xFF2
 13832                           intcon2	equ	0xFF1
 13833                           indf0	equ	0xFEF
 13834                           postinc0	equ	0xFEE
 13835                           fsr0h	equ	0xFEA
 13836                           fsr0l	equ	0xFE9
 13837                           wreg	equ	0xFE8
 13838                           indf1	equ	0xFE7
 13839                           postinc1	equ	0xFE6
 13840                           postdec1	equ	0xFE5
 13841                           fsr1h	equ	0xFE2
 13842                           fsr1l	equ	0xFE1
 13843                           indf2	equ	0xFDF
 13844                           postinc2	equ	0xFDE
 13845                           postdec2	equ	0xFDD
 13846                           plusw2	equ	0xFDB
 13847                           fsr2h	equ	0xFDA
 13848                           fsr2l	equ	0xFD9
 13849                           status	equ	0xFD8
 13850                           
 13851 ;; *************** function _USB_ISR *****************
 13852 ;; Defined at:
 13853 ;;		line 7 in file "../My_library/usb_cdc/My_usb_cdc.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;		None
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;		None
 13858 ;; Return value:  Size  Location     Type
 13859 ;;		None               void
 13860 ;; Registers used:
 13861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/0
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13871 ;;Total ram usage:        0 bytes
 13872 ;; Hardware stack levels used:    1
 13873 ;; Hardware stack levels required when called:    9
 13874 ;; This function calls:
 13875 ;;		_USBDeviceTasks
 13876 ;; This function is called by:
 13877 ;;		_ISR
 13878 ;; This function uses a non-reentrant model
 13879 ;;
 13880                           
 13881                           	psect	text66
 13882  001000                     __ptext66:
 13883                           	opt stack 0
 13884  001000                     _USB_ISR:
 13885                           	opt stack 11
 13886                           
 13887                           ;My_usb_cdc.c: 8: USBDeviceTasks();
 13888                           
 13889                           ;incstack = 0
 13890  001000  EC47  F08A         	call	_USBDeviceTasks	;wreg free
 13891  001004  0012               	return		;funcret
 13892  001006                     __end_of_USB_ISR:
 13893                           	opt stack 0
 13894                           pclatu	equ	0xFFB
 13895                           pclath	equ	0xFFA
 13896                           tblptru	equ	0xFF8
 13897                           tblptrh	equ	0xFF7
 13898                           tblptrl	equ	0xFF6
 13899                           tablat	equ	0xFF5
 13900                           prodh	equ	0xFF4
 13901                           prodl	equ	0xFF3
 13902                           intcon	equ	0xFF2
 13903                           intcon2	equ	0xFF1
 13904                           indf0	equ	0xFEF
 13905                           postinc0	equ	0xFEE
 13906                           fsr0h	equ	0xFEA
 13907                           fsr0l	equ	0xFE9
 13908                           wreg	equ	0xFE8
 13909                           indf1	equ	0xFE7
 13910                           postinc1	equ	0xFE6
 13911                           postdec1	equ	0xFE5
 13912                           fsr1h	equ	0xFE2
 13913                           fsr1l	equ	0xFE1
 13914                           indf2	equ	0xFDF
 13915                           postinc2	equ	0xFDE
 13916                           postdec2	equ	0xFDD
 13917                           plusw2	equ	0xFDB
 13918                           fsr2h	equ	0xFDA
 13919                           fsr2l	equ	0xFD9
 13920                           status	equ	0xFD8
 13921                           
 13922 ;; *************** function _USBDeviceTasks *****************
 13923 ;; Defined at:
 13924 ;;		line 489 in file "../My_library/usb_cdc/usb/usb_device.c"
 13925 ;; Parameters:    Size  Location     Type
 13926 ;;		None
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;  i               1   29[COMRAM] unsigned char 
 13929 ;; Return value:  Size  Location     Type
 13930 ;;		None               void
 13931 ;; Registers used:
 13932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13933 ;; Tracked objects:
 13934 ;;		On entry : 0/0
 13935 ;;		On exit  : 0/0
 13936 ;;		Unchanged: 0/0
 13937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13942 ;;Total ram usage:        1 bytes
 13943 ;; Hardware stack levels used:    1
 13944 ;; Hardware stack levels required when called:    8
 13945 ;; This function calls:
 13946 ;;		_USBCtrlEPAllowStatusStage
 13947 ;;		_USBCtrlEPService
 13948 ;;		_USBStallHandler
 13949 ;;		_USBSuspend
 13950 ;;		_USBWakeFromSuspend
 13951 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13952 ;;		i2_USBDeviceInit
 13953 ;; This function is called by:
 13954 ;;		_USB_ISR
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           	psect	text67
 13959  01148E                     __ptext67:
 13960                           	opt stack 0
 13961  01148E                     _USBDeviceTasks:
 13962                           	opt stack 11
 13963                           
 13964                           ;usb_device.c: 491: uint8_t i;
 13965                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 13966                           
 13967                           ;incstack = 0
 13968  01148E  041D               	decf	_USBDeviceState,w,c	;volatile
 13969  011490  B4D8               	btfsc	status,2,c
 13970                           
 13971                           ;usb_device.c: 603: {
 13972                           ;usb_device.c: 613: if(!UCONbits.SE0)
 13973  011492  BA65               	btfsc	3941,5,c	;volatile
 13974  011494  D009               	goto	i2l6620
 13975                           
 13976                           ;usb_device.c: 614: {
 13977                           ;usb_device.c: 615: {UIR = 0;};
 13978  011496  0E00               	movlw	0
 13979  011498  6E62               	movwf	3938,c	;volatile
 13980                           
 13981                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 13982  01149A  010F               	movlb	15	; () banked
 13983  01149C  8136               	bsf	54,0,b	;volatile
 13984                           
 13985                           ; BSR set to: 15
 13986                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 13987  01149E  010F               	movlb	15	; () banked
 13988  0114A0  8936               	bsf	54,4,b	;volatile
 13989                           
 13990                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 13991  0114A2  0E02               	movlw	2
 13992  0114A4  6E1D               	movwf	_USBDeviceState,c	;volatile
 13993                           
 13994                           ; BSR set to: 15
 13995  0114A6  D000               	goto	i2l6620
 13996  0114A8                     i2l6620:
 13997                           
 13998                           ;usb_device.c: 622: }
 13999                           ;usb_device.c: 623: }
 14000                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 14001  0114A8  A462               	btfss	3938,2,c	;volatile
 14002  0114AA  D007               	goto	i2l6628
 14003  0114AC  010F               	movlb	15	; () banked
 14004  0114AE  A536               	btfss	54,2,b	;volatile
 14005  0114B0  D004               	goto	i2l6628
 14006                           
 14007                           ; BSR set to: 15
 14008                           ;usb_device.c: 640: {
 14009                           ;usb_device.c: 641: (UIR &= 0xFB);
 14010  0114B2  9462               	bcf	3938,2,c	;volatile
 14011                           
 14012                           ; BSR set to: 15
 14013                           ;usb_device.c: 645: USBWakeFromSuspend();
 14014  0114B4  ECD8  F09E         	call	_USBWakeFromSuspend	;wreg free
 14015  0114B8  D000               	goto	i2l6628
 14016  0114BA                     i2l6628:
 14017                           
 14018                           ;usb_device.c: 647: }
 14019                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 14020  0114BA  A265               	btfss	3941,1,c	;volatile
 14021  0114BC  D002               	goto	i2l144
 14022                           
 14023                           ;usb_device.c: 653: {
 14024                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 14025  0114BE  98A1               	bcf	4001,4,c	;volatile
 14026                           
 14027                           ;usb_device.c: 655: return;
 14028  0114C0  0012               	return	
 14029  0114C2                     i2l144:
 14030                           
 14031                           ;usb_device.c: 656: }
 14032                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 14033  0114C2  A062               	btfss	3938,0,c	;volatile
 14034  0114C4  D00A               	goto	i2l6642
 14035  0114C6  010F               	movlb	15	; () banked
 14036  0114C8  A136               	btfss	54,0,b	;volatile
 14037  0114CA  D007               	goto	i2l6642
 14038                           
 14039                           ; BSR set to: 15
 14040                           ;usb_device.c: 669: {
 14041                           ;usb_device.c: 670: USBDeviceInit();
 14042  0114CC  ECA7  F08B         	call	i2_USBDeviceInit	;wreg free
 14043                           
 14044                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 14045  0114D0  88A0               	bsf	4000,4,c	;volatile
 14046                           
 14047                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 14048  0114D2  0E04               	movlw	4
 14049  0114D4  6E1D               	movwf	_USBDeviceState,c	;volatile
 14050                           
 14051                           ;usb_device.c: 686: (UIR &= 0xFE);
 14052  0114D6  9062               	bcf	3938,0,c	;volatile
 14053  0114D8  D000               	goto	i2l6642
 14054  0114DA                     i2l6642:
 14055                           
 14056                           ;usb_device.c: 687: }
 14057                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 14058  0114DA  A862               	btfss	3938,4,c	;volatile
 14059  0114DC  D007               	goto	i2l6650
 14060  0114DE  010F               	movlb	15	; () banked
 14061  0114E0  A936               	btfss	54,4,b	;volatile
 14062  0114E2  D004               	goto	i2l6650
 14063                           
 14064                           ; BSR set to: 15
 14065                           ;usb_device.c: 693: {
 14066                           ;usb_device.c: 698: USBSuspend();
 14067  0114E4  EC78  F09F         	call	_USBSuspend	;wreg free
 14068                           
 14069                           ;usb_device.c: 701: (UIR &= 0xEF);
 14070  0114E8  9862               	bcf	3938,4,c	;volatile
 14071  0114EA  D000               	goto	i2l6650
 14072  0114EC                     i2l6650:
 14073                           
 14074                           ;usb_device.c: 702: }
 14075                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 14076  0114EC  AC62               	btfss	3938,6,c	;volatile
 14077  0114EE  D01E               	goto	i2l6666
 14078                           
 14079                           ;usb_device.c: 705: {
 14080                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 14081  0114F0  010F               	movlb	15	; () banked
 14082  0114F2  AD36               	btfss	54,6,b	;volatile
 14083  0114F4  D00F               	goto	i2l6656
 14084                           
 14085                           ; BSR set to: 15
 14086                           ;usb_device.c: 707: {
 14087                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 14088  0114F6  0E00               	movlw	0
 14089  0114F8  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14090  0114FA  0E73               	movlw	115
 14091  0114FC  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14092  0114FE  0E00               	movlw	0
 14093  011500  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14094  011502  0E00               	movlw	0
 14095  011504  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14096  011506  0E00               	movlw	0
 14097  011508  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14098  01150A  0E01               	movlw	1
 14099  01150C  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14100  01150E  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14101  011512  D000               	goto	i2l6656
 14102  011514                     i2l6656:
 14103                           
 14104                           ;usb_device.c: 709: }
 14105                           ;usb_device.c: 710: (UIR &= 0xBF);
 14106  011514  9C62               	bcf	3938,6,c	;volatile
 14107                           
 14108                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 14109  011516  5020               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14110  011518  B4D8               	btfsc	status,2,c
 14111  01151A  D002               	goto	i2l6662
 14112                           
 14113                           ;usb_device.c: 736: {
 14114                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 14115  01151C  0620               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 14116  01151E  D000               	goto	i2l6662
 14117  011520                     i2l6662:
 14118                           
 14119                           ;usb_device.c: 738: }
 14120                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 14121  011520  5020               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 14122  011522  A4D8               	btfss	status,2,c
 14123  011524  D003               	goto	i2l6666
 14124                           
 14125                           ;usb_device.c: 745: {
 14126                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 14127  011526  EC88  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14128  01152A  D000               	goto	i2l6666
 14129  01152C                     i2l6666:
 14130                           
 14131                           ;usb_device.c: 747: }
 14132                           ;usb_device.c: 749: }
 14133                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 14134  01152C  AA62               	btfss	3938,5,c	;volatile
 14135  01152E  D006               	goto	i2l6672
 14136  011530  010F               	movlb	15	; () banked
 14137  011532  AB36               	btfss	54,5,b	;volatile
 14138  011534  D003               	goto	i2l6672
 14139                           
 14140                           ; BSR set to: 15
 14141                           ;usb_device.c: 752: {
 14142                           ;usb_device.c: 753: USBStallHandler();
 14143  011536  EC99  F09D         	call	_USBStallHandler	;wreg free
 14144  01153A  D000               	goto	i2l6672
 14145  01153C                     i2l6672:
 14146                           
 14147                           ;usb_device.c: 754: }
 14148                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 14149  01153C  A262               	btfss	3938,1,c	;volatile
 14150  01153E  D013               	goto	i2l6680
 14151  011540  010F               	movlb	15	; () banked
 14152  011542  A336               	btfss	54,1,b	;volatile
 14153  011544  D010               	goto	i2l6680
 14154                           
 14155                           ; BSR set to: 15
 14156                           ;usb_device.c: 757: {
 14157                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 14158  011546  0E7F               	movlw	127
 14159  011548  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14160  01154A  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14161  01154C  0E00               	movlw	0
 14162  01154E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14163  011550  0E00               	movlw	0
 14164  011552  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14165  011554  0E00               	movlw	0
 14166  011556  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14167  011558  0E01               	movlw	1
 14168  01155A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14169  01155C  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14170                           
 14171                           ;usb_device.c: 759: {UEIR = 0;};
 14172  011560  0E00               	movlw	0
 14173  011562  6E63               	movwf	3939,c	;volatile
 14174  011564  D000               	goto	i2l6680
 14175  011566                     i2l6680:
 14176                           
 14177                           ;usb_device.c: 767: }
 14178                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 14179  011566  0E04               	movlw	4
 14180  011568  601D               	cpfslt	_USBDeviceState,c	;volatile
 14181  01156A  D002               	goto	i2l154
 14182                           
 14183                           ;usb_device.c: 775: {
 14184                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 14185  01156C  98A1               	bcf	4001,4,c	;volatile
 14186                           
 14187                           ;usb_device.c: 777: return;
 14188  01156E  0012               	return	
 14189  011570                     i2l154:
 14190                           
 14191                           ;usb_device.c: 778: }
 14192                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 14193  011570  010F               	movlb	15	; () banked
 14194  011572  A736               	btfss	54,3,b	;volatile
 14195  011574  D03E               	goto	i2l155
 14196                           
 14197                           ; BSR set to: 15
 14198                           ;usb_device.c: 784: {
 14199                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 14200  011576  0E00               	movlw	0
 14201  011578  6E4A               	movwf	USBDeviceTasks@i,c
 14202  01157A                     i2l6686:
 14203                           
 14204                           ; BSR set to: 15
 14205  01157A  0E03               	movlw	3
 14206  01157C  644A               	cpfsgt	USBDeviceTasks@i,c
 14207  01157E  D001               	goto	i2l156
 14208                           
 14209                           ; BSR set to: 15
 14210  011580  D038               	goto	i2l155
 14211  011582                     i2l156:
 14212                           
 14213                           ;usb_device.c: 786: {
 14214                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 14215  011582  A662               	btfss	3938,3,c	;volatile
 14216  011584  D036               	goto	i2l155
 14217                           
 14218                           ;usb_device.c: 788: {
 14219                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 14220  011586  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 14221                           
 14222                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 14223  01158A  302C               	rrcf	_USTATcopy,w,c	;volatile
 14224  01158C  32E8               	rrcf	wreg,f,c
 14225  01158E  32E8               	rrcf	wreg,f,c
 14226  011590  0B0F               	andlw	15
 14227  011592  6E23               	movwf	_endpoint_number,c	;volatile
 14228                           
 14229                           ;usb_device.c: 793: (UIR &= 0xF7);
 14230  011594  9662               	bcf	3938,3,c	;volatile
 14231                           
 14232                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 14233  011596  B42C               	btfsc	_USTATcopy,2,c	;volatile
 14234  011598  D00A               	goto	i2l6700
 14235                           
 14236                           ;usb_device.c: 799: {
 14237                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 14238  01159A  5023               	movf	_endpoint_number,w,c	;volatile
 14239  01159C  0D01               	mullw	1
 14240  01159E  0ED5               	movlw	low _ep_data_out
 14241  0115A0  24F3               	addwf	prodl,w,c
 14242  0115A2  6ED9               	movwf	fsr2l,c
 14243  0115A4  0E00               	movlw	high _ep_data_out
 14244  0115A6  20F4               	addwfc	prodh,w,c
 14245  0115A8  6EDA               	movwf	fsr2h,c
 14246  0115AA  0100               	movlb	0	; () banked
 14247  0115AC  D008               	goto	L4
 14248  0115AE                     i2l6700:
 14249                           
 14250                           ;usb_device.c: 802: else
 14251                           ;usb_device.c: 803: {
 14252                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 14253  0115AE  5023               	movf	_endpoint_number,w,c	;volatile
 14254  0115B0  0D01               	mullw	1
 14255  0115B2  0E10               	movlw	low _ep_data_in
 14256  0115B4  24F3               	addwf	prodl,w,c
 14257  0115B6  6ED9               	movwf	fsr2l,c
 14258  0115B8  0E00               	movlw	high _ep_data_in
 14259  0115BA  20F4               	addwfc	prodh,w,c
 14260  0115BC  6EDA               	movwf	fsr2h,c
 14261  0115BE                     L4:
 14262  0115BE  70DF               	btg	indf2,0,c
 14263  0115C0  D000               	goto	i2l6702
 14264  0115C2                     i2l6702:
 14265                           
 14266                           ;usb_device.c: 805: }
 14267                           ;usb_device.c: 810: if(endpoint_number == 0)
 14268  0115C2  5023               	movf	_endpoint_number,w,c	;volatile
 14269  0115C4  A4D8               	btfss	status,2,c
 14270  0115C6  D003               	goto	i2l6706
 14271                           
 14272                           ;usb_device.c: 811: {
 14273                           ;usb_device.c: 812: USBCtrlEPService();
 14274  0115C8  ECBD  F094         	call	_USBCtrlEPService	;wreg free
 14275                           
 14276                           ;usb_device.c: 813: }
 14277  0115CC  D010               	goto	i2l6708
 14278  0115CE                     i2l6706:
 14279                           
 14280                           ;usb_device.c: 814: else
 14281                           ;usb_device.c: 815: {
 14282                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 14283  0115CE  0E00               	movlw	0
 14284  0115D0  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14285  0115D2  0E72               	movlw	114
 14286  0115D4  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14287  0115D6  0E2C               	movlw	low _USTATcopy
 14288  0115D8  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14289  0115DA  0E00               	movlw	high _USTATcopy
 14290  0115DC  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14291  0115DE  0E00               	movlw	0
 14292  0115E0  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14293  0115E2  0E00               	movlw	0
 14294  0115E4  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14295  0115E6  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14296                           
 14297                           ;usb_device.c: 817: }
 14298                           ;usb_device.c: 818: }
 14299  0115EA  D001               	goto	i2l6708
 14300                           
 14301                           ;usb_device.c: 819: else
 14302                           ;usb_device.c: 820: {
 14303                           ;usb_device.c: 821: break;
 14304  0115EC  D002               	goto	i2l155
 14305  0115EE                     i2l6708:
 14306  0115EE  2A4A               	incf	USBDeviceTasks@i,f,c
 14307  0115F0  D7C4               	goto	i2l6686
 14308  0115F2                     i2l155:
 14309                           
 14310                           ;usb_device.c: 822: }
 14311                           ;usb_device.c: 823: }
 14312                           ;usb_device.c: 824: }
 14313                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 14314  0115F2  98A1               	bcf	4001,4,c	;volatile
 14315  0115F4  0012               	return		;funcret
 14316  0115F6                     __end_of_USBDeviceTasks:
 14317                           	opt stack 0
 14318                           pclatu	equ	0xFFB
 14319                           pclath	equ	0xFFA
 14320                           tblptru	equ	0xFF8
 14321                           tblptrh	equ	0xFF7
 14322                           tblptrl	equ	0xFF6
 14323                           tablat	equ	0xFF5
 14324                           prodh	equ	0xFF4
 14325                           prodl	equ	0xFF3
 14326                           intcon	equ	0xFF2
 14327                           intcon2	equ	0xFF1
 14328                           indf0	equ	0xFEF
 14329                           postinc0	equ	0xFEE
 14330                           fsr0h	equ	0xFEA
 14331                           fsr0l	equ	0xFE9
 14332                           wreg	equ	0xFE8
 14333                           indf1	equ	0xFE7
 14334                           postinc1	equ	0xFE6
 14335                           postdec1	equ	0xFE5
 14336                           fsr1h	equ	0xFE2
 14337                           fsr1l	equ	0xFE1
 14338                           indf2	equ	0xFDF
 14339                           postinc2	equ	0xFDE
 14340                           postdec2	equ	0xFDD
 14341                           plusw2	equ	0xFDB
 14342                           fsr2h	equ	0xFDA
 14343                           fsr2l	equ	0xFD9
 14344                           status	equ	0xFD8
 14345                           
 14346 ;; *************** function i2_USBDeviceInit *****************
 14347 ;; Defined at:
 14348 ;;		line 298 in file "../My_library/usb_cdc/usb/usb_device.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;		None
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;		None               void
 14355 ;; Registers used:
 14356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;Total ram usage:        1 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    1
 14369 ;; This function calls:
 14370 ;;		i2_memset
 14371 ;; This function is called by:
 14372 ;;		_USBDeviceTasks
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text68
 14377  01174E                     __ptext68:
 14378                           	opt stack 0
 14379  01174E                     i2_USBDeviceInit:
 14380                           	opt stack 17
 14381                           
 14382                           ;usb_device.c: 300: uint8_t i;
 14383                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 14384                           
 14385                           ;incstack = 0
 14386  01174E  98A0               	bcf	4000,4,c	;volatile
 14387                           
 14388                           ;usb_device.c: 305: {UEIR = 0;};
 14389  011750  0E00               	movlw	0
 14390  011752  6E63               	movwf	3939,c	;volatile
 14391                           
 14392                           ;usb_device.c: 308: {UIR = 0;};
 14393  011754  0E00               	movlw	0
 14394  011756  6E62               	movwf	3938,c	;volatile
 14395                           
 14396                           ;usb_device.c: 311: UEP0 = 0;
 14397  011758  0E00               	movlw	0
 14398  01175A  010F               	movlb	15	; () banked
 14399  01175C  6F26               	movwf	38,b	;volatile
 14400                           
 14401                           ; BSR set to: 15
 14402                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 14403  01175E  0E27               	movlw	39
 14404  011760  6E2D               	movwf	i2memset@p1,c
 14405  011762  0E0F               	movlw	15
 14406  011764  6E2E               	movwf	i2memset@p1+1,c
 14407  011766  0E00               	movlw	0
 14408  011768  6E30               	movwf	i2memset@c+1,c
 14409  01176A  0E00               	movlw	0
 14410  01176C  6E2F               	movwf	i2memset@c,c
 14411  01176E  0E00               	movlw	0
 14412  011770  6E32               	movwf	i2memset@n+1,c
 14413  011772  0E02               	movlw	2
 14414  011774  6E31               	movwf	i2memset@n,c
 14415  011776  EC20  F09F         	call	i2_memset	;wreg free
 14416                           
 14417                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14418  01177A  0E16               	movlw	22
 14419  01177C  010F               	movlb	15	; () banked
 14420  01177E  6F39               	movwf	57,b	;volatile
 14421                           
 14422                           ; BSR set to: 15
 14423  011780  0E9F               	movlw	159
 14424  011782  010F               	movlb	15	; () banked
 14425  011784  6F37               	movwf	55,b	;volatile
 14426                           
 14427                           ; BSR set to: 15
 14428  011786  0E7B               	movlw	123
 14429  011788  010F               	movlb	15	; () banked
 14430  01178A  6F36               	movwf	54,b	;volatile
 14431                           
 14432                           ; BSR set to: 15
 14433                           ;usb_device.c: 318: ;
 14434                           ;usb_device.c: 321: ;
 14435                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14436  01178C  0E00               	movlw	0
 14437  01178E  6E35               	movwf	i2USBDeviceInit@i,c
 14438  011790  D00E               	goto	i2l6564
 14439                           
 14440                           ; BSR set to: 15
 14441                           
 14442                           ; BSR set to: 15
 14443  011792  D010               	goto	i2l132
 14444  011794                     i2l6560:
 14445                           
 14446                           ;usb_device.c: 325: {
 14447                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 14448  011794  5035               	movf	i2USBDeviceInit@i,w,c
 14449  011796  0D04               	mullw	4
 14450  011798  0E00               	movlw	0
 14451  01179A  24F3               	addwf	prodl,w,c
 14452  01179C  6ED9               	movwf	fsr2l,c
 14453  01179E  0E0D               	movlw	13
 14454  0117A0  20F4               	addwfc	prodh,w,c
 14455  0117A2  6EDA               	movwf	fsr2h,c
 14456  0117A4  6ADE               	clrf	postinc2,c
 14457  0117A6  6ADE               	clrf	postinc2,c
 14458  0117A8  6ADE               	clrf	postinc2,c
 14459  0117AA  6ADD               	clrf	postdec2,c
 14460  0117AC  2A35               	incf	i2USBDeviceInit@i,f,c
 14461  0117AE                     i2l6564:
 14462  0117AE  0E0B               	movlw	11
 14463  0117B0  6435               	cpfsgt	i2USBDeviceInit@i,c
 14464  0117B2  D7F0               	goto	i2l6560
 14465  0117B4                     i2l132:
 14466                           
 14467                           ;usb_device.c: 327: }
 14468                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 14469  0117B4  8C65               	bsf	3941,6,c	;volatile
 14470                           
 14471                           ;usb_device.c: 333: UADDR = 0x00;
 14472  0117B6  0E00               	movlw	0
 14473  0117B8  010F               	movlb	15	; () banked
 14474  0117BA  6F38               	movwf	56,b	;volatile
 14475                           
 14476                           ; BSR set to: 15
 14477                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 14478  0117BC  9865               	bcf	3941,4,c	;volatile
 14479                           
 14480                           ; BSR set to: 15
 14481                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 14482  0117BE  9C65               	bcf	3941,6,c	;volatile
 14483                           
 14484                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 14485  0117C0  D00A               	goto	i2l6580
 14486  0117C2                     i2l6572:
 14487                           
 14488                           ;usb_device.c: 343: {
 14489                           ;usb_device.c: 344: (UIR &= 0xF7);
 14490  0117C2  9662               	bcf	3938,3,c	;volatile
 14491                           
 14492                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 14493  0117C4  0E00               	movlw	0
 14494  0117C6  6E28               	movwf	_inPipes+3,c	;volatile
 14495                           
 14496                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 14497  0117C8  0E00               	movlw	0
 14498  0117CA  6E04               	movwf	_outPipes+3,c	;volatile
 14499                           
 14500                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 14501  0117CC  0E00               	movlw	0
 14502  0117CE  6E06               	movwf	_outPipes+5,c	;volatile
 14503  0117D0  0E00               	movlw	0
 14504  0117D2  6E05               	movwf	_outPipes+4,c	;volatile
 14505  0117D4  D000               	goto	i2l6580
 14506  0117D6                     i2l6580:
 14507  0117D6  B662               	btfsc	3938,3,c	;volatile
 14508  0117D8  D7F4               	goto	i2l6572
 14509                           
 14510                           ;usb_device.c: 349: }
 14511                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 14512  0117DA  0E01               	movlw	1
 14513  0117DC  6E1E               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 14514                           
 14515                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 14516  0117DE  0E01               	movlw	1
 14517  0117E0  6E1F               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 14518                           
 14519                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 14520  0117E2  0E00               	movlw	0
 14521  0117E4  6E1A               	movwf	_USBDeferINDataStagePackets,c	;volatile
 14522                           
 14523                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 14524  0117E6  0E00               	movlw	0
 14525  0117E8  6E1B               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 14526                           
 14527                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 14528  0117EA  0E00               	movlw	0
 14529  0117EC  6E19               	movwf	_USBBusIsSuspended,c	;volatile
 14530                           
 14531                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 14532  0117EE  0E00               	movlw	0
 14533  0117F0  6E35               	movwf	i2USBDeviceInit@i,c
 14534  0117F2                     i2l6584:
 14535  0117F2  0E02               	movlw	2
 14536  0117F4  6435               	cpfsgt	i2USBDeviceInit@i,c
 14537  0117F6  D001               	goto	i2l6588
 14538  0117F8  D02E               	goto	i2l6594
 14539  0117FA                     i2l6588:
 14540                           
 14541                           ;usb_device.c: 363: {
 14542                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 14543  0117FA  5035               	movf	i2USBDeviceInit@i,w,c
 14544  0117FC  0D02               	mullw	2
 14545  0117FE  0E0A               	movlw	low _pBDTEntryIn
 14546  011800  24F3               	addwf	prodl,w,c
 14547  011802  6ED9               	movwf	fsr2l,c
 14548  011804  0E00               	movlw	high _pBDTEntryIn
 14549  011806  20F4               	addwfc	prodh,w,c
 14550  011808  6EDA               	movwf	fsr2h,c
 14551  01180A  0E00               	movlw	0
 14552  01180C  6EDE               	movwf	postinc2,c
 14553  01180E  0E00               	movlw	0
 14554  011810  6EDD               	movwf	postdec2,c
 14555                           
 14556                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 14557  011812  5035               	movf	i2USBDeviceInit@i,w,c
 14558  011814  0D02               	mullw	2
 14559  011816  0ECF               	movlw	low _pBDTEntryOut
 14560  011818  24F3               	addwf	prodl,w,c
 14561  01181A  6ED9               	movwf	fsr2l,c
 14562  01181C  0E00               	movlw	high _pBDTEntryOut
 14563  01181E  20F4               	addwfc	prodh,w,c
 14564  011820  6EDA               	movwf	fsr2h,c
 14565  011822  0E00               	movlw	0
 14566  011824  6EDE               	movwf	postinc2,c
 14567  011826  0E00               	movlw	0
 14568  011828  6EDD               	movwf	postdec2,c
 14569                           
 14570                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 14571  01182A  5035               	movf	i2USBDeviceInit@i,w,c
 14572  01182C  0D01               	mullw	1
 14573  01182E  0E10               	movlw	low _ep_data_in
 14574  011830  24F3               	addwf	prodl,w,c
 14575  011832  6ED9               	movwf	fsr2l,c
 14576  011834  0E00               	movlw	high _ep_data_in
 14577  011836  20F4               	addwfc	prodh,w,c
 14578  011838  6EDA               	movwf	fsr2h,c
 14579  01183A  0E00               	movlw	0
 14580  01183C  6EDF               	movwf	indf2,c
 14581                           
 14582                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 14583  01183E  5035               	movf	i2USBDeviceInit@i,w,c
 14584  011840  0D01               	mullw	1
 14585  011842  0ED5               	movlw	low _ep_data_out
 14586  011844  24F3               	addwf	prodl,w,c
 14587  011846  6ED9               	movwf	fsr2l,c
 14588  011848  0E00               	movlw	high _ep_data_out
 14589  01184A  20F4               	addwfc	prodh,w,c
 14590  01184C  6EDA               	movwf	fsr2h,c
 14591  01184E  0E00               	movlw	0
 14592  011850  6EDF               	movwf	indf2,c
 14593  011852  2A35               	incf	i2USBDeviceInit@i,f,c
 14594  011854  D7CE               	goto	i2l6584
 14595  011856                     i2l6594:
 14596                           
 14597                           ;usb_device.c: 368: }
 14598                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14599  011856  0E08               	movlw	8
 14600  011858  6E0A               	movwf	_pBDTEntryIn,c
 14601  01185A  0E0D               	movlw	13
 14602  01185C  6E0B               	movwf	_pBDTEntryIn+1,c
 14603                           
 14604                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 14605  01185E  0E16               	movlw	22
 14606  011860  010F               	movlb	15	; () banked
 14607  011862  6F26               	movwf	38,b	;volatile
 14608                           
 14609                           ; BSR set to: 15
 14610                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 14611  011864  0E0D               	movlw	13
 14612  011866  010D               	movlb	13	; () banked
 14613  011868  6F03               	movwf	3,b	;volatile
 14614  01186A  0E30               	movlw	48
 14615  01186C  6F02               	movwf	2,b	;volatile
 14616                           
 14617                           ; BSR set to: 13
 14618                           ;usb_device.c: 376: BDT[0].CNT = 8;
 14619  01186E  0E08               	movlw	8
 14620  011870  010D               	movlb	13	; () banked
 14621  011872  6F01               	movwf	1,b	;volatile
 14622                           
 14623                           ; BSR set to: 13
 14624                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 14625  011874  0E04               	movlw	4
 14626  011876  010D               	movlb	13	; () banked
 14627  011878  6F00               	movwf	0,b	;volatile
 14628                           
 14629                           ; BSR set to: 13
 14630                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 14631  01187A  010D               	movlb	13	; () banked
 14632  01187C  8F00               	bsf	0,7,b	;volatile
 14633                           
 14634                           ; BSR set to: 13
 14635                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 14636  01187E  0E00               	movlw	0
 14637  011880  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 14638                           
 14639                           ; BSR set to: 13
 14640                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 14641  011882  0E00               	movlw	0
 14642  011884  6E1D               	movwf	_USBDeviceState,c	;volatile
 14643                           
 14644                           ; BSR set to: 13
 14645  011886  0012               	return		;funcret
 14646  011888                     __end_ofi2_USBDeviceInit:
 14647                           	opt stack 0
 14648                           pclatu	equ	0xFFB
 14649                           pclath	equ	0xFFA
 14650                           tblptru	equ	0xFF8
 14651                           tblptrh	equ	0xFF7
 14652                           tblptrl	equ	0xFF6
 14653                           tablat	equ	0xFF5
 14654                           prodh	equ	0xFF4
 14655                           prodl	equ	0xFF3
 14656                           intcon	equ	0xFF2
 14657                           intcon2	equ	0xFF1
 14658                           indf0	equ	0xFEF
 14659                           postinc0	equ	0xFEE
 14660                           fsr0h	equ	0xFEA
 14661                           fsr0l	equ	0xFE9
 14662                           wreg	equ	0xFE8
 14663                           indf1	equ	0xFE7
 14664                           postinc1	equ	0xFE6
 14665                           postdec1	equ	0xFE5
 14666                           fsr1h	equ	0xFE2
 14667                           fsr1l	equ	0xFE1
 14668                           indf2	equ	0xFDF
 14669                           postinc2	equ	0xFDE
 14670                           postdec2	equ	0xFDD
 14671                           plusw2	equ	0xFDB
 14672                           fsr2h	equ	0xFDA
 14673                           fsr2l	equ	0xFD9
 14674                           status	equ	0xFD8
 14675                           
 14676 ;; *************** function _USBWakeFromSuspend *****************
 14677 ;; Defined at:
 14678 ;;		line 2302 in file "../My_library/usb_cdc/usb/usb_device.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;		None
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;		None
 14683 ;; Return value:  Size  Location     Type
 14684 ;;		None               void
 14685 ;; Registers used:
 14686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/0
 14689 ;;		On exit  : 0/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14696 ;;Total ram usage:        0 bytes
 14697 ;; Hardware stack levels used:    1
 14698 ;; Hardware stack levels required when called:    4
 14699 ;; This function calls:
 14700 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14701 ;; This function is called by:
 14702 ;;		_USBDeviceTasks
 14703 ;; This function uses a non-reentrant model
 14704 ;;
 14705                           
 14706                           	psect	text69
 14707  013DB0                     __ptext69:
 14708                           	opt stack 0
 14709  013DB0                     _USBWakeFromSuspend:
 14710                           	opt stack 14
 14711                           
 14712                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 14713                           
 14714                           ; BSR set to: 13
 14715                           ;incstack = 0
 14716  013DB0  0E00               	movlw	0
 14717  013DB2  6E19               	movwf	_USBBusIsSuspended,c	;volatile
 14718                           
 14719                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 14720  013DB4  0E00               	movlw	0
 14721  013DB6  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14722  013DB8  0E74               	movlw	116
 14723  013DBA  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14724  013DBC  0E00               	movlw	0
 14725  013DBE  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14726  013DC0  0E00               	movlw	0
 14727  013DC2  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14728  013DC4  0E00               	movlw	0
 14729  013DC6  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14730  013DC8  0E00               	movlw	0
 14731  013DCA  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14732  013DCC  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14733                           
 14734                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 14735  013DD0  9265               	bcf	3941,1,c	;volatile
 14736                           
 14737                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 14738  013DD2  010F               	movlb	15	; () banked
 14739  013DD4  9536               	bcf	54,2,b	;volatile
 14740                           
 14741                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 14742  013DD6  D002               	goto	i2l6274
 14743  013DD8                     i2l6272:
 14744                           
 14745                           ;usb_device.c: 2342: {
 14746                           ;usb_device.c: 2343: (UIR &= 0xFB);
 14747  013DD8  9462               	bcf	3938,2,c	;volatile
 14748  013DDA  D000               	goto	i2l6274
 14749  013DDC                     i2l6274:
 14750  013DDC  B462               	btfsc	3938,2,c	;volatile
 14751  013DDE  D7FC               	goto	i2l6272
 14752  013DE0  0012               	return		;funcret
 14753  013DE2                     __end_of_USBWakeFromSuspend:
 14754                           	opt stack 0
 14755                           pclatu	equ	0xFFB
 14756                           pclath	equ	0xFFA
 14757                           tblptru	equ	0xFF8
 14758                           tblptrh	equ	0xFF7
 14759                           tblptrl	equ	0xFF6
 14760                           tablat	equ	0xFF5
 14761                           prodh	equ	0xFF4
 14762                           prodl	equ	0xFF3
 14763                           intcon	equ	0xFF2
 14764                           intcon2	equ	0xFF1
 14765                           indf0	equ	0xFEF
 14766                           postinc0	equ	0xFEE
 14767                           fsr0h	equ	0xFEA
 14768                           fsr0l	equ	0xFE9
 14769                           wreg	equ	0xFE8
 14770                           indf1	equ	0xFE7
 14771                           postinc1	equ	0xFE6
 14772                           postdec1	equ	0xFE5
 14773                           fsr1h	equ	0xFE2
 14774                           fsr1l	equ	0xFE1
 14775                           indf2	equ	0xFDF
 14776                           postinc2	equ	0xFDE
 14777                           postdec2	equ	0xFDD
 14778                           plusw2	equ	0xFDB
 14779                           fsr2h	equ	0xFDA
 14780                           fsr2l	equ	0xFD9
 14781                           status	equ	0xFD8
 14782                           
 14783 ;; *************** function _USBSuspend *****************
 14784 ;; Defined at:
 14785 ;;		line 2245 in file "../My_library/usb_cdc/usb/usb_device.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;		None
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;		None
 14790 ;; Return value:  Size  Location     Type
 14791 ;;		None               void
 14792 ;; Registers used:
 14793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14803 ;;Total ram usage:        0 bytes
 14804 ;; Hardware stack levels used:    1
 14805 ;; Hardware stack levels required when called:    4
 14806 ;; This function calls:
 14807 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14808 ;; This function is called by:
 14809 ;;		_USBDeviceTasks
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text70
 14814  013EF0                     __ptext70:
 14815                           	opt stack 0
 14816  013EF0                     _USBSuspend:
 14817                           	opt stack 14
 14818                           
 14819                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 14820                           
 14821                           ;incstack = 0
 14822  013EF0  010F               	movlb	15	; () banked
 14823  013EF2  8536               	bsf	54,2,b	;volatile
 14824                           
 14825                           ; BSR set to: 15
 14826                           ;usb_device.c: 2271: (UIR &= 0xEF);
 14827  013EF4  9862               	bcf	3938,4,c	;volatile
 14828                           
 14829                           ; BSR set to: 15
 14830                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 14831  013EF6  8265               	bsf	3941,1,c	;volatile
 14832                           
 14833                           ; BSR set to: 15
 14834                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 14835  013EF8  0E01               	movlw	1
 14836  013EFA  6E19               	movwf	_USBBusIsSuspended,c	;volatile
 14837                           
 14838                           ; BSR set to: 15
 14839                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 14840  013EFC  0E00               	movlw	0
 14841  013EFE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14842  013F00  0E75               	movlw	117
 14843  013F02  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14844  013F04  0E00               	movlw	0
 14845  013F06  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14846  013F08  0E00               	movlw	0
 14847  013F0A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14848  013F0C  0E00               	movlw	0
 14849  013F0E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14850  013F10  0E00               	movlw	0
 14851  013F12  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14852  013F14  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14853  013F18  0012               	return		;funcret
 14854  013F1A                     __end_of_USBSuspend:
 14855                           	opt stack 0
 14856                           pclatu	equ	0xFFB
 14857                           pclath	equ	0xFFA
 14858                           tblptru	equ	0xFF8
 14859                           tblptrh	equ	0xFF7
 14860                           tblptrl	equ	0xFF6
 14861                           tablat	equ	0xFF5
 14862                           prodh	equ	0xFF4
 14863                           prodl	equ	0xFF3
 14864                           intcon	equ	0xFF2
 14865                           intcon2	equ	0xFF1
 14866                           indf0	equ	0xFEF
 14867                           postinc0	equ	0xFEE
 14868                           fsr0h	equ	0xFEA
 14869                           fsr0l	equ	0xFE9
 14870                           wreg	equ	0xFE8
 14871                           indf1	equ	0xFE7
 14872                           postinc1	equ	0xFE6
 14873                           postdec1	equ	0xFE5
 14874                           fsr1h	equ	0xFE2
 14875                           fsr1l	equ	0xFE1
 14876                           indf2	equ	0xFDF
 14877                           postinc2	equ	0xFDE
 14878                           postdec2	equ	0xFDD
 14879                           plusw2	equ	0xFDB
 14880                           fsr2h	equ	0xFDA
 14881                           fsr2l	equ	0xFD9
 14882                           status	equ	0xFD8
 14883                           
 14884 ;; *************** function _USBStallHandler *****************
 14885 ;; Defined at:
 14886 ;;		line 2202 in file "../My_library/usb_cdc/usb/usb_device.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;		None
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;		None               void
 14893 ;; Registers used:
 14894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14904 ;;Total ram usage:        1 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; This function calls:
 14907 ;;		Nothing
 14908 ;; This function is called by:
 14909 ;;		_USBDeviceTasks
 14910 ;; This function uses a non-reentrant model
 14911 ;;
 14912                           
 14913                           	psect	text71
 14914  013B32                     __ptext71:
 14915                           	opt stack 0
 14916  013B32                     _USBStallHandler:
 14917                           	opt stack 18
 14918                           
 14919                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 14920                           
 14921                           ;incstack = 0
 14922  013B32  010F               	movlb	15	; () banked
 14923  013B34  A126               	btfss	38,0,b	;volatile
 14924  013B36  D01F               	goto	i2l294
 14925                           
 14926                           ; BSR set to: 15
 14927                           ;usb_device.c: 2215: {
 14928                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 14929  013B38  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14930  013B3C  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14931  013B40  0E80               	movlw	128
 14932  013B42  18DE               	xorwf	postinc2,w,c
 14933  013B44  A4D8               	btfss	status,2,c
 14934  013B46  D015               	goto	i2l6296
 14935                           
 14936                           ; BSR set to: 15
 14937  013B48  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 14938  013B4C  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14939  013B50  0E84               	movlw	132
 14940  013B52  18DE               	xorwf	postinc2,w,c
 14941  013B54  A4D8               	btfss	status,2,c
 14942  013B56  D00D               	goto	i2l6296
 14943                           
 14944                           ; BSR set to: 15
 14945                           ;usb_device.c: 2218: {
 14946                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14947  013B58  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14948  013B5C  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14949  013B60  0E0C               	movlw	12
 14950  013B62  6EDF               	movwf	indf2,c
 14951                           
 14952                           ; BSR set to: 15
 14953                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 14954  013B64  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 14955  013B68  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14956  013B6C  0E00               	movlw	0
 14957  013B6E  8EDB               	bsf	plusw2,7,c
 14958  013B70  D000               	goto	i2l6296
 14959  013B72                     i2l6296:
 14960                           
 14961                           ; BSR set to: 15
 14962                           ;usb_device.c: 2222: }
 14963                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 14964  013B72  010F               	movlb	15	; () banked
 14965  013B74  9126               	bcf	38,0,b	;volatile
 14966  013B76                     i2l294:
 14967                           
 14968                           ; BSR set to: 15
 14969                           ;usb_device.c: 2224: }
 14970                           ;usb_device.c: 2226: (UIR &= 0xDF);
 14971  013B76  9A62               	bcf	3938,5,c	;volatile
 14972                           
 14973                           ; BSR set to: 15
 14974  013B78  0012               	return		;funcret
 14975  013B7A                     __end_of_USBStallHandler:
 14976                           	opt stack 0
 14977                           pclatu	equ	0xFFB
 14978                           pclath	equ	0xFFA
 14979                           tblptru	equ	0xFF8
 14980                           tblptrh	equ	0xFF7
 14981                           tblptrl	equ	0xFF6
 14982                           tablat	equ	0xFF5
 14983                           prodh	equ	0xFF4
 14984                           prodl	equ	0xFF3
 14985                           intcon	equ	0xFF2
 14986                           intcon2	equ	0xFF1
 14987                           indf0	equ	0xFEF
 14988                           postinc0	equ	0xFEE
 14989                           fsr0h	equ	0xFEA
 14990                           fsr0l	equ	0xFE9
 14991                           wreg	equ	0xFE8
 14992                           indf1	equ	0xFE7
 14993                           postinc1	equ	0xFE6
 14994                           postdec1	equ	0xFE5
 14995                           fsr1h	equ	0xFE2
 14996                           fsr1l	equ	0xFE1
 14997                           indf2	equ	0xFDF
 14998                           postinc2	equ	0xFDE
 14999                           postdec2	equ	0xFDD
 15000                           plusw2	equ	0xFDB
 15001                           fsr2h	equ	0xFDA
 15002                           fsr2l	equ	0xFD9
 15003                           status	equ	0xFD8
 15004                           
 15005 ;; *************** function _USBCtrlEPService *****************
 15006 ;; Defined at:
 15007 ;;		line 2369 in file "../My_library/usb_cdc/usb/usb_device.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;		None
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 15012 ;; Return value:  Size  Location     Type
 15013 ;;		None               void
 15014 ;; Registers used:
 15015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15025 ;;Total ram usage:        3 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; Hardware stack levels required when called:    7
 15028 ;; This function calls:
 15029 ;;		_USBCtrlTrfInHandler
 15030 ;;		_USBCtrlTrfOutHandler
 15031 ;;		_USBCtrlTrfSetupHandler
 15032 ;; This function is called by:
 15033 ;;		_USBDeviceTasks
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           	psect	text72
 15038  01297A                     __ptext72:
 15039                           	opt stack 0
 15040  01297A                     _USBCtrlEPService:
 15041                           	opt stack 11
 15042                           
 15043                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 15044                           
 15045                           ; BSR set to: 15
 15046                           ;incstack = 0
 15047  01297A  0E2D               	movlw	45
 15048  01297C  6E20               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 15049                           
 15050                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 15051  01297E  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15052  012982  0EFD               	movlw	253
 15053  012984  1647               	andwf	??_USBCtrlEPService,f,c
 15054  012986  A4D8               	btfss	status,2,c
 15055  012988  D057               	goto	i2l6330
 15056                           
 15057                           ;usb_device.c: 2380: {
 15058                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 15059  01298A  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 15060  01298E  90D8               	bcf	status,0,c
 15061  012990  3247               	rrcf	??_USBCtrlEPService,f,c
 15062  012992  0E3F               	movlw	63
 15063  012994  1647               	andwf	??_USBCtrlEPService,f,c
 15064  012996  5047               	movf	??_USBCtrlEPService,w,c
 15065  012998  0D04               	mullw	4
 15066  01299A  0E00               	movlw	0
 15067  01299C  24F3               	addwf	prodl,w,c
 15068  01299E  6E13               	movwf	_pBDTEntryEP0OutCurrent,c
 15069  0129A0  0E0D               	movlw	13
 15070  0129A2  20F4               	addwfc	prodh,w,c
 15071  0129A4  6E14               	movwf	_pBDTEntryEP0OutCurrent+1,c
 15072                           
 15073                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15074  0129A6  C013  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15075  0129AA  C014  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15076                           
 15077                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 15078  0129AE  0E04               	movlw	4
 15079  0129B0  1A15               	xorwf	_pBDTEntryEP0OutNext,f,c
 15080                           
 15081                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 15082  0129B2  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15083  0129B6  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15084  0129BA  30DF               	rrcf	indf2,w,c
 15085  0129BC  32E8               	rrcf	wreg,f,c
 15086  0129BE  0B0F               	andlw	15
 15087  0129C0  0A0D               	xorlw	13
 15088  0129C2  A4D8               	btfss	status,2,c
 15089  0129C4  D036               	goto	i2l6328
 15090                           
 15091                           ;usb_device.c: 2397: {
 15092                           ;usb_device.c: 2398: unsigned char setup_cnt;
 15093                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 15094  0129C6  0E00               	movlw	0
 15095  0129C8  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 15096  0129CA                     i2l6312:
 15097  0129CA  0E07               	movlw	7
 15098  0129CC  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 15099  0129CE  D001               	goto	i2l6316
 15100  0129D0  D023               	goto	i2l6324
 15101  0129D2                     i2l6316:
 15102                           
 15103                           ;usb_device.c: 2405: {
 15104                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 15105  0129D2  EE20 F002          	lfsr	2,2
 15106  0129D6  5013               	movf	_pBDTEntryEP0OutCurrent,w,c
 15107  0129D8  26D9               	addwf	fsr2l,f,c
 15108  0129DA  5014               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15109  0129DC  22DA               	addwfc	fsr2h,f,c
 15110  0129DE  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 15111  0129E2  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 15112  0129E6  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 15113  0129EA  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 15114  0129EE  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 15115  0129F0  0D01               	mullw	1
 15116  0129F2  0E30               	movlw	48
 15117  0129F4  24F3               	addwf	prodl,w,c
 15118  0129F6  6EE1               	movwf	fsr1l,c
 15119  0129F8  0E0D               	movlw	13
 15120  0129FA  20F4               	addwfc	prodh,w,c
 15121  0129FC  6EE2               	movwf	fsr1h,c
 15122  0129FE  CFDF FFE7          	movff	indf2,indf1
 15123                           
 15124                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 15125  012A02  EE20 F002          	lfsr	2,2
 15126  012A06  5013               	movf	_pBDTEntryEP0OutCurrent,w,c
 15127  012A08  26D9               	addwf	fsr2l,f,c
 15128  012A0A  5014               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15129  012A0C  22DA               	addwfc	fsr2h,f,c
 15130  012A0E  2ADE               	incf	postinc2,f,c
 15131  012A10  0E00               	movlw	0
 15132  012A12  22DD               	addwfc	postdec2,f,c
 15133  012A14  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 15134  012A16  D7D9               	goto	i2l6312
 15135  012A18                     i2l6324:
 15136                           
 15137                           ;usb_device.c: 2408: }
 15138                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15139  012A18  EE20 F002          	lfsr	2,2
 15140  012A1C  5013               	movf	_pBDTEntryEP0OutCurrent,w,c
 15141  012A1E  26D9               	addwf	fsr2l,f,c
 15142  012A20  5014               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15143  012A22  22DA               	addwfc	fsr2h,f,c
 15144  012A24  0E30               	movlw	48
 15145  012A26  6EDE               	movwf	postinc2,c
 15146  012A28  0E0D               	movlw	13
 15147  012A2A  6EDD               	movwf	postdec2,c
 15148                           
 15149                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 15150  012A2C  ECEF  F09A         	call	_USBCtrlTrfSetupHandler	;wreg free
 15151                           
 15152                           ;usb_device.c: 2413: }
 15153  012A30  0012               	return	
 15154  012A32                     i2l6328:
 15155                           
 15156                           ;usb_device.c: 2414: else
 15157                           ;usb_device.c: 2415: {
 15158                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 15159  012A32  ECEE  F09C         	call	_USBCtrlTrfOutHandler	;wreg free
 15160                           
 15161                           ;usb_device.c: 2418: }
 15162                           ;usb_device.c: 2419: }
 15163  012A36  0012               	return	
 15164  012A38                     i2l6330:
 15165                           
 15166                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 15167  012A38  502C               	movf	_USTATcopy,w,c	;volatile
 15168  012A3A  0BFD               	andlw	253
 15169  012A3C  0A04               	xorlw	4
 15170  012A3E  A4D8               	btfss	status,2,c
 15171  012A40  0012               	return	
 15172                           
 15173                           ;usb_device.c: 2421: {
 15174                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 15175  012A42  ECEA  F095         	call	_USBCtrlTrfInHandler	;wreg free
 15176  012A46  0012               	return	
 15177  012A48  0012               	return		;funcret
 15178  012A4A                     __end_of_USBCtrlEPService:
 15179                           	opt stack 0
 15180                           pclatu	equ	0xFFB
 15181                           pclath	equ	0xFFA
 15182                           tblptru	equ	0xFF8
 15183                           tblptrh	equ	0xFF7
 15184                           tblptrl	equ	0xFF6
 15185                           tablat	equ	0xFF5
 15186                           prodh	equ	0xFF4
 15187                           prodl	equ	0xFF3
 15188                           intcon	equ	0xFF2
 15189                           intcon2	equ	0xFF1
 15190                           indf0	equ	0xFEF
 15191                           postinc0	equ	0xFEE
 15192                           fsr0h	equ	0xFEA
 15193                           fsr0l	equ	0xFE9
 15194                           wreg	equ	0xFE8
 15195                           indf1	equ	0xFE7
 15196                           postinc1	equ	0xFE6
 15197                           postdec1	equ	0xFE5
 15198                           fsr1h	equ	0xFE2
 15199                           fsr1l	equ	0xFE1
 15200                           indf2	equ	0xFDF
 15201                           postinc2	equ	0xFDE
 15202                           postdec2	equ	0xFDD
 15203                           plusw2	equ	0xFDB
 15204                           fsr2h	equ	0xFDA
 15205                           fsr2l	equ	0xFD9
 15206                           status	equ	0xFD8
 15207                           
 15208 ;; *************** function _USBCtrlTrfSetupHandler *****************
 15209 ;; Defined at:
 15210 ;;		line 2469 in file "../My_library/usb_cdc/usb/usb_device.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;		None
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;		None
 15215 ;; Return value:  Size  Location     Type
 15216 ;;		None               void
 15217 ;; Registers used:
 15218 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/0
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15228 ;;Total ram usage:        0 bytes
 15229 ;; Hardware stack levels used:    1
 15230 ;; Hardware stack levels required when called:    6
 15231 ;; This function calls:
 15232 ;;		_USBCheckStdRequest
 15233 ;;		_USBCtrlEPServiceComplete
 15234 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15235 ;; This function is called by:
 15236 ;;		_USBCtrlEPService
 15237 ;; This function uses a non-reentrant model
 15238 ;;
 15239                           
 15240                           	psect	text73
 15241  0135DE                     __ptext73:
 15242                           	opt stack 0
 15243  0135DE                     _USBCtrlTrfSetupHandler:
 15244                           	opt stack 11
 15245                           
 15246                           ;usb_device.c: 2474: shortPacketStatus = 0;
 15247                           
 15248                           ;incstack = 0
 15249  0135DE  0E00               	movlw	0
 15250  0135E0  6E24               	movwf	_shortPacketStatus,c	;volatile
 15251                           
 15252                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 15253  0135E2  0E00               	movlw	0
 15254  0135E4  6E1C               	movwf	_USBDeferStatusStagePacket,c	;volatile
 15255                           
 15256                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 15257  0135E6  0E00               	movlw	0
 15258  0135E8  6E1A               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15259                           
 15260                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 15261  0135EA  0E00               	movlw	0
 15262  0135EC  6E1B               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15263                           
 15264                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 15265  0135EE  0E00               	movlw	0
 15266  0135F0  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15267                           
 15268                           ;usb_device.c: 2479: controlTransferState = 0;
 15269  0135F2  0E00               	movlw	0
 15270  0135F4  6E22               	movwf	_controlTransferState,c	;volatile
 15271                           
 15272                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15273  0135F6  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15274  0135FA  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15275  0135FE  0E7F               	movlw	127
 15276  013600  16DF               	andwf	indf2,f,c
 15277                           
 15278                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15279  013602  0E04               	movlw	4
 15280  013604  1A0A               	xorwf	_pBDTEntryIn,f,c
 15281                           
 15282                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 15283  013606  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15284  01360A  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15285  01360E  0E7F               	movlw	127
 15286  013610  16DF               	andwf	indf2,f,c
 15287                           
 15288                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 15289  013612  0E04               	movlw	4
 15290  013614  1A0A               	xorwf	_pBDTEntryIn,f,c
 15291                           
 15292                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 15293  013616  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15294  01361A  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15295  01361E  0E7F               	movlw	127
 15296  013620  16DF               	andwf	indf2,f,c
 15297                           
 15298                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 15299  013622  0E00               	movlw	0
 15300  013624  6E28               	movwf	_inPipes+3,c	;volatile
 15301                           
 15302                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 15303  013626  0E00               	movlw	0
 15304  013628  6E2A               	movwf	_inPipes+5,c	;volatile
 15305  01362A  0E00               	movlw	0
 15306  01362C  6E29               	movwf	_inPipes+4,c	;volatile
 15307                           
 15308                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 15309  01362E  0E00               	movlw	0
 15310  013630  6E04               	movwf	_outPipes+3,c	;volatile
 15311                           
 15312                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 15313  013632  0E00               	movlw	0
 15314  013634  6E06               	movwf	_outPipes+5,c	;volatile
 15315  013636  0E00               	movlw	0
 15316  013638  6E05               	movwf	_outPipes+4,c	;volatile
 15317                           
 15318                           ;usb_device.c: 2503: USBCheckStdRequest();
 15319  01363A  EC7B  F090         	call	_USBCheckStdRequest	;wreg free
 15320                           
 15321                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 15322  01363E  0E00               	movlw	0
 15323  013640  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15324  013642  0E03               	movlw	3
 15325  013644  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15326  013646  0E00               	movlw	0
 15327  013648  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15328  01364A  0E00               	movlw	0
 15329  01364C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15330  01364E  0E00               	movlw	0
 15331  013650  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15332  013652  0E00               	movlw	0
 15333  013654  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15334  013656  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15335                           
 15336                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 15337  01365A  EC90  F08E         	call	_USBCtrlEPServiceComplete	;wreg free
 15338  01365E  0012               	return		;funcret
 15339  013660                     __end_of_USBCtrlTrfSetupHandler:
 15340                           	opt stack 0
 15341                           pclatu	equ	0xFFB
 15342                           pclath	equ	0xFFA
 15343                           tblptru	equ	0xFF8
 15344                           tblptrh	equ	0xFF7
 15345                           tblptrl	equ	0xFF6
 15346                           tablat	equ	0xFF5
 15347                           prodh	equ	0xFF4
 15348                           prodl	equ	0xFF3
 15349                           intcon	equ	0xFF2
 15350                           intcon2	equ	0xFF1
 15351                           indf0	equ	0xFEF
 15352                           postinc0	equ	0xFEE
 15353                           fsr0h	equ	0xFEA
 15354                           fsr0l	equ	0xFE9
 15355                           wreg	equ	0xFE8
 15356                           indf1	equ	0xFE7
 15357                           postinc1	equ	0xFE6
 15358                           postdec1	equ	0xFE5
 15359                           fsr1h	equ	0xFE2
 15360                           fsr1l	equ	0xFE1
 15361                           indf2	equ	0xFDF
 15362                           postinc2	equ	0xFDE
 15363                           postdec2	equ	0xFDD
 15364                           plusw2	equ	0xFDB
 15365                           fsr2h	equ	0xFDA
 15366                           fsr2l	equ	0xFD9
 15367                           status	equ	0xFD8
 15368                           
 15369 ;; *************** function _USBCtrlEPServiceComplete *****************
 15370 ;; Defined at:
 15371 ;;		line 1616 in file "../My_library/usb_cdc/usb/usb_device.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;		None
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;		None
 15376 ;; Return value:  Size  Location     Type
 15377 ;;		None               void
 15378 ;; Registers used:
 15379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;Total ram usage:        0 bytes
 15390 ;; Hardware stack levels used:    1
 15391 ;; Hardware stack levels required when called:    2
 15392 ;; This function calls:
 15393 ;;		_USBCtrlEPAllowDataStage
 15394 ;;		_USBCtrlEPAllowStatusStage
 15395 ;; This function is called by:
 15396 ;;		_USBCtrlTrfSetupHandler
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           	psect	text74
 15401  011D20                     __ptext74:
 15402                           	opt stack 0
 15403  011D20                     _USBCtrlEPServiceComplete:
 15404                           	opt stack 14
 15405                           
 15406                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 15407                           
 15408                           ;incstack = 0
 15409  011D20  9865               	bcf	3941,4,c	;volatile
 15410                           
 15411                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 15412  011D22  BE28               	btfsc	_inPipes+3,7,c	;volatile
 15413  011D24  D03A               	goto	i2l218
 15414                           
 15415                           ;usb_device.c: 1629: {
 15416                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 15417  011D26  AE04               	btfss	_outPipes+3,7,c	;volatile
 15418  011D28  D00D               	goto	i2l5860
 15419                           
 15420                           ;usb_device.c: 1631: {
 15421                           ;usb_device.c: 1632: controlTransferState = 2;
 15422  011D2A  0E02               	movlw	2
 15423  011D2C  6E22               	movwf	_controlTransferState,c	;volatile
 15424                           
 15425                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 15426  011D2E  501B               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 15427  011D30  A4D8               	btfss	status,2,c
 15428  011D32  D003               	goto	i2l5856
 15429                           
 15430                           ;usb_device.c: 1644: {
 15431                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 15432  011D34  EC6C  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15433  011D38  D000               	goto	i2l5856
 15434  011D3A                     i2l5856:
 15435                           
 15436                           ;usb_device.c: 1646: }
 15437                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 15438  011D3A  0E00               	movlw	0
 15439  011D3C  6E1F               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15440                           
 15441                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 15442  011D3E  0E00               	movlw	0
 15443  011D40  6E1E               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15444                           
 15445                           ;usb_device.c: 1652: }
 15446  011D42  0012               	return	
 15447  011D44                     i2l5860:
 15448                           
 15449                           ;usb_device.c: 1653: else
 15450                           ;usb_device.c: 1654: {
 15451                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 15452  011D44  EE20 F001          	lfsr	2,1
 15453  011D48  5015               	movf	_pBDTEntryEP0OutNext,w,c
 15454  011D4A  26D9               	addwf	fsr2l,f,c
 15455  011D4C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 15456  011D4E  22DA               	addwfc	fsr2h,f,c
 15457  011D50  0E08               	movlw	8
 15458  011D52  6EDF               	movwf	indf2,c
 15459                           
 15460                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15461  011D54  EE20 F002          	lfsr	2,2
 15462  011D58  5015               	movf	_pBDTEntryEP0OutNext,w,c
 15463  011D5A  26D9               	addwf	fsr2l,f,c
 15464  011D5C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 15465  011D5E  22DA               	addwfc	fsr2h,f,c
 15466  011D60  0E30               	movlw	48
 15467  011D62  6EDE               	movwf	postinc2,c
 15468  011D64  0E0D               	movlw	13
 15469  011D66  6EDD               	movwf	postdec2,c
 15470                           
 15471                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15472  011D68  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15473  011D6C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15474  011D70  0E0C               	movlw	12
 15475  011D72  6EDF               	movwf	indf2,c
 15476                           
 15477                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15478  011D74  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15479  011D78  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15480  011D7C  0E00               	movlw	0
 15481  011D7E  8EDB               	bsf	plusw2,7,c
 15482                           
 15483                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 15484  011D80  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15485  011D84  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15486  011D88  0E04               	movlw	4
 15487  011D8A  6EDF               	movwf	indf2,c
 15488                           
 15489                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15490  011D8C  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15491  011D90  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15492  011D94  0E00               	movlw	0
 15493  011D96  8EDB               	bsf	plusw2,7,c
 15494                           
 15495                           ;usb_device.c: 1665: }
 15496                           ;usb_device.c: 1666: }
 15497  011D98  0012               	return	
 15498  011D9A                     i2l218:
 15499                           
 15500                           ;usb_device.c: 1667: else
 15501                           ;usb_device.c: 1668: {
 15502                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 15503  011D9A  010D               	movlb	13	; () banked
 15504  011D9C  AF30               	btfss	48,7,b	;volatile
 15505  011D9E  D012               	goto	i2l5880
 15506                           
 15507                           ; BSR set to: 13
 15508                           ;usb_device.c: 1670: {
 15509                           ;usb_device.c: 1671: controlTransferState = 1;
 15510  011DA0  0E01               	movlw	1
 15511  011DA2  6E22               	movwf	_controlTransferState,c	;volatile
 15512                           
 15513                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 15514  011DA4  501A               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 15515  011DA6  A4D8               	btfss	status,2,c
 15516  011DA8  D003               	goto	i2l5872
 15517                           
 15518                           ; BSR set to: 13
 15519                           ;usb_device.c: 1686: {
 15520                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 15521  011DAA  EC6C  F098         	call	_USBCtrlEPAllowDataStage	;wreg free
 15522  011DAE  D000               	goto	i2l5872
 15523  011DB0                     i2l5872:
 15524                           
 15525                           ;usb_device.c: 1688: }
 15526                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 15527  011DB0  0E00               	movlw	0
 15528  011DB2  6E1F               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15529                           
 15530                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 15531  011DB4  0E00               	movlw	0
 15532  011DB6  6E1E               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15533                           
 15534                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 15535  011DB8  501C               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15536  011DBA  A4D8               	btfss	status,2,c
 15537  011DBC  0012               	return	
 15538                           
 15539                           ;usb_device.c: 1713: {
 15540                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 15541  011DBE  EC88  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15542                           
 15543                           ;usb_device.c: 1715: }
 15544                           ;usb_device.c: 1716: }
 15545  011DC2  0012               	return	
 15546  011DC4                     i2l5880:
 15547                           
 15548                           ;usb_device.c: 1717: else
 15549                           ;usb_device.c: 1718: {
 15550                           ;usb_device.c: 1729: controlTransferState = 2;
 15551  011DC4  0E02               	movlw	2
 15552  011DC6  6E22               	movwf	_controlTransferState,c	;volatile
 15553                           
 15554                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 15555  011DC8  EE20 F001          	lfsr	2,1
 15556  011DCC  5015               	movf	_pBDTEntryEP0OutNext,w,c
 15557  011DCE  26D9               	addwf	fsr2l,f,c
 15558  011DD0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 15559  011DD2  22DA               	addwfc	fsr2h,f,c
 15560  011DD4  0E08               	movlw	8
 15561  011DD6  6EDF               	movwf	indf2,c
 15562                           
 15563                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15564  011DD8  EE20 F002          	lfsr	2,2
 15565  011DDC  5015               	movf	_pBDTEntryEP0OutNext,w,c
 15566  011DDE  26D9               	addwf	fsr2l,f,c
 15567  011DE0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 15568  011DE2  22DA               	addwfc	fsr2h,f,c
 15569  011DE4  0E30               	movlw	48
 15570  011DE6  6EDE               	movwf	postinc2,c
 15571  011DE8  0E0D               	movlw	13
 15572  011DEA  6EDD               	movwf	postdec2,c
 15573                           
 15574                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15575  011DEC  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15576  011DF0  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15577  011DF4  0E04               	movlw	4
 15578  011DF6  6EDF               	movwf	indf2,c
 15579                           
 15580                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15581  011DF8  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15582  011DFC  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15583  011E00  0E00               	movlw	0
 15584  011E02  8EDB               	bsf	plusw2,7,c
 15585                           
 15586                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 15587  011E04  0E00               	movlw	0
 15588  011E06  6E1F               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15589                           
 15590                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 15591  011E08  0E00               	movlw	0
 15592  011E0A  6E1E               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15593                           
 15594                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 15595  011E0C  501C               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15596  011E0E  A4D8               	btfss	status,2,c
 15597  011E10  0012               	return	
 15598                           
 15599                           ;usb_device.c: 1741: {
 15600                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 15601  011E12  EC88  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15602  011E16  0012               	return	
 15603  011E18  0012               	return		;funcret
 15604  011E1A                     __end_of_USBCtrlEPServiceComplete:
 15605                           	opt stack 0
 15606                           pclatu	equ	0xFFB
 15607                           pclath	equ	0xFFA
 15608                           tblptru	equ	0xFF8
 15609                           tblptrh	equ	0xFF7
 15610                           tblptrl	equ	0xFF6
 15611                           tablat	equ	0xFF5
 15612                           prodh	equ	0xFF4
 15613                           prodl	equ	0xFF3
 15614                           intcon	equ	0xFF2
 15615                           intcon2	equ	0xFF1
 15616                           indf0	equ	0xFEF
 15617                           postinc0	equ	0xFEE
 15618                           fsr0h	equ	0xFEA
 15619                           fsr0l	equ	0xFE9
 15620                           wreg	equ	0xFE8
 15621                           indf1	equ	0xFE7
 15622                           postinc1	equ	0xFE6
 15623                           postdec1	equ	0xFE5
 15624                           fsr1h	equ	0xFE2
 15625                           fsr1l	equ	0xFE1
 15626                           indf2	equ	0xFDF
 15627                           postinc2	equ	0xFDE
 15628                           postdec2	equ	0xFDD
 15629                           plusw2	equ	0xFDB
 15630                           fsr2h	equ	0xFDA
 15631                           fsr2l	equ	0xFD9
 15632                           status	equ	0xFD8
 15633                           
 15634 ;; *************** function _USBCtrlEPAllowDataStage *****************
 15635 ;; Defined at:
 15636 ;;		line 1488 in file "../My_library/usb_cdc/usb/usb_device.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;		None
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;		None
 15641 ;; Return value:  Size  Location     Type
 15642 ;;		None               void
 15643 ;; Registers used:
 15644 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15645 ;; Tracked objects:
 15646 ;;		On entry : 0/0
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15654 ;;Total ram usage:        0 bytes
 15655 ;; Hardware stack levels used:    1
 15656 ;; Hardware stack levels required when called:    1
 15657 ;; This function calls:
 15658 ;;		_USBCtrlTrfTxService
 15659 ;; This function is called by:
 15660 ;;		_USBCtrlEPServiceComplete
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664                           	psect	text75
 15665  0130D8                     __ptext75:
 15666                           	opt stack 0
 15667  0130D8                     _USBCtrlEPAllowDataStage:
 15668                           	opt stack 14
 15669                           
 15670                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 15671                           
 15672                           ;incstack = 0
 15673  0130D8  0E00               	movlw	0
 15674  0130DA  6E1A               	movwf	_USBDeferINDataStagePackets,c	;volatile
 15675                           
 15676                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 15677  0130DC  0E00               	movlw	0
 15678  0130DE  6E1B               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 15679                           
 15680                           ;usb_device.c: 1493: if(controlTransferState == 2)
 15681  0130E0  0E02               	movlw	2
 15682  0130E2  1822               	xorwf	_controlTransferState,w,c	;volatile
 15683  0130E4  A4D8               	btfss	status,2,c
 15684  0130E6  D01F               	goto	i2l5410
 15685                           
 15686                           ;usb_device.c: 1494: {
 15687                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 15688  0130E8  EE20 F001          	lfsr	2,1
 15689  0130EC  5015               	movf	_pBDTEntryEP0OutNext,w,c
 15690  0130EE  26D9               	addwf	fsr2l,f,c
 15691  0130F0  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 15692  0130F2  22DA               	addwfc	fsr2h,f,c
 15693  0130F4  0E08               	movlw	8
 15694  0130F6  6EDF               	movwf	indf2,c
 15695                           
 15696                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 15697  0130F8  EE20 F002          	lfsr	2,2
 15698  0130FC  5015               	movf	_pBDTEntryEP0OutNext,w,c
 15699  0130FE  26D9               	addwf	fsr2l,f,c
 15700  013100  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 15701  013102  22DA               	addwfc	fsr2h,f,c
 15702  013104  0E38               	movlw	56
 15703  013106  6EDE               	movwf	postinc2,c
 15704  013108  0E0D               	movlw	13
 15705  01310A  6EDD               	movwf	postdec2,c
 15706                           
 15707                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15708  01310C  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15709  013110  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15710  013114  0E48               	movlw	72
 15711  013116  6EDF               	movwf	indf2,c
 15712                           
 15713                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15714  013118  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15715  01311C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15716  013120  0E00               	movlw	0
 15717  013122  8EDB               	bsf	plusw2,7,c
 15718                           
 15719                           ;usb_device.c: 1500: }
 15720  013124  0012               	return	
 15721  013126                     i2l5410:
 15722                           
 15723                           ;usb_device.c: 1501: else
 15724                           ;usb_device.c: 1502: {
 15725                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 15726  013126  5029               	movf	_inPipes+4,w,c	;volatile
 15727  013128  010D               	movlb	13	; () banked
 15728  01312A  5D36               	subwf	54,w,b	;volatile
 15729  01312C  502A               	movf	_inPipes+5,w,c	;volatile
 15730  01312E  010D               	movlb	13	; () banked
 15731  013130  5937               	subwfb	55,w,b	;volatile
 15732  013132  B0D8               	btfsc	status,0,c
 15733  013134  D005               	goto	i2l5414
 15734                           
 15735                           ; BSR set to: 13
 15736                           ;usb_device.c: 1506: {
 15737                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 15738  013136  CD36 F029          	movff	3382,_inPipes+4	;volatile
 15739  01313A  CD37 F02A          	movff	3383,_inPipes+5	;volatile
 15740  01313E  D000               	goto	i2l5414
 15741  013140                     i2l5414:
 15742                           
 15743                           ; BSR set to: 13
 15744                           ;usb_device.c: 1508: }
 15745                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 15746  013140  ECEC  F090         	call	_USBCtrlTrfTxService	;wreg free
 15747                           
 15748                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 15749  013144  EE20 F002          	lfsr	2,2
 15750  013148  500A               	movf	_pBDTEntryIn,w,c
 15751  01314A  26D9               	addwf	fsr2l,f,c
 15752  01314C  500B               	movf	_pBDTEntryIn+1,w,c
 15753  01314E  22DA               	addwfc	fsr2h,f,c
 15754  013150  0E38               	movlw	56
 15755  013152  6EDE               	movwf	postinc2,c
 15756  013154  0E0D               	movlw	13
 15757  013156  6EDD               	movwf	postdec2,c
 15758                           
 15759                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15760  013158  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15761  01315C  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15762  013160  0E48               	movlw	72
 15763  013162  6EDF               	movwf	indf2,c
 15764                           
 15765                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15766  013164  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 15767  013168  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15768  01316C  0E00               	movlw	0
 15769  01316E  8EDB               	bsf	plusw2,7,c
 15770  013170  0012               	return	
 15771  013172  0012               	return		;funcret
 15772  013174                     __end_of_USBCtrlEPAllowDataStage:
 15773                           	opt stack 0
 15774                           pclatu	equ	0xFFB
 15775                           pclath	equ	0xFFA
 15776                           tblptru	equ	0xFF8
 15777                           tblptrh	equ	0xFF7
 15778                           tblptrl	equ	0xFF6
 15779                           tablat	equ	0xFF5
 15780                           prodh	equ	0xFF4
 15781                           prodl	equ	0xFF3
 15782                           intcon	equ	0xFF2
 15783                           intcon2	equ	0xFF1
 15784                           indf0	equ	0xFEF
 15785                           postinc0	equ	0xFEE
 15786                           fsr0h	equ	0xFEA
 15787                           fsr0l	equ	0xFE9
 15788                           wreg	equ	0xFE8
 15789                           indf1	equ	0xFE7
 15790                           postinc1	equ	0xFE6
 15791                           postdec1	equ	0xFE5
 15792                           fsr1h	equ	0xFE2
 15793                           fsr1l	equ	0xFE1
 15794                           indf2	equ	0xFDF
 15795                           postinc2	equ	0xFDE
 15796                           postdec2	equ	0xFDD
 15797                           plusw2	equ	0xFDB
 15798                           fsr2h	equ	0xFDA
 15799                           fsr2l	equ	0xFD9
 15800                           status	equ	0xFD8
 15801                           
 15802 ;; *************** function _USBCheckStdRequest *****************
 15803 ;; Defined at:
 15804 ;;		line 2689 in file "../My_library/usb_cdc/usb/usb_device.c"
 15805 ;; Parameters:    Size  Location     Type
 15806 ;;		None
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;		None
 15809 ;; Return value:  Size  Location     Type
 15810 ;;		None               void
 15811 ;; Registers used:
 15812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15813 ;; Tracked objects:
 15814 ;;		On entry : 0/0
 15815 ;;		On exit  : 0/0
 15816 ;;		Unchanged: 0/0
 15817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15822 ;;Total ram usage:        0 bytes
 15823 ;; Hardware stack levels used:    1
 15824 ;; Hardware stack levels required when called:    5
 15825 ;; This function calls:
 15826 ;;		_USBStdFeatureReqHandler
 15827 ;;		_USBStdGetDscHandler
 15828 ;;		_USBStdGetStatusHandler
 15829 ;;		_USBStdSetCfgHandler
 15830 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15831 ;; This function is called by:
 15832 ;;		_USBCtrlTrfSetupHandler
 15833 ;; This function uses a non-reentrant model
 15834 ;;
 15835                           
 15836                           	psect	text76
 15837  0120F6                     __ptext76:
 15838                           	opt stack 0
 15839  0120F6                     _USBCheckStdRequest:
 15840                           	opt stack 11
 15841                           
 15842                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 15843                           
 15844                           ;incstack = 0
 15845  0120F6  010D               	movlb	13	; () banked
 15846  0120F8  3930               	swapf	48,w,b	;volatile
 15847  0120FA  32E8               	rrcf	wreg,f,c
 15848  0120FC  0B03               	andlw	3
 15849  0120FE  0900               	iorlw	0
 15850  012100  A4D8               	btfss	status,2,c
 15851  012102  0012               	return	
 15852  012104  D046               	goto	i2l5978
 15853                           
 15854                           ; BSR set to: 13
 15855  012106  0012               	return	
 15856                           
 15857                           ; BSR set to: 13
 15858                           ;usb_device.c: 2693: switch(SetupPkt.bRequest)
 15859  012108  D044               	goto	i2l5978
 15860  01210A                     i2l345:
 15861                           
 15862                           ; BSR set to: 13
 15863                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 15864  01210A  8E28               	bsf	_inPipes+3,7,c	;volatile
 15865                           
 15866                           ; BSR set to: 13
 15867                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 15868  01210C  0E08               	movlw	8
 15869  01210E  6E1D               	movwf	_USBDeviceState,c	;volatile
 15870                           
 15871                           ;usb_device.c: 2699: break;
 15872  012110  0012               	return	
 15873  012112                     i2l5948:
 15874                           
 15875                           ; BSR set to: 13
 15876                           ;usb_device.c: 2701: USBStdGetDscHandler();
 15877  012112  ECE0  F08C         	call	_USBStdGetDscHandler	;wreg free
 15878                           
 15879                           ;usb_device.c: 2702: break;
 15880  012116  0012               	return	
 15881  012118                     i2l5950:
 15882                           
 15883                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 15884  012118  EC3C  F092         	call	_USBStdSetCfgHandler	;wreg free
 15885                           
 15886                           ;usb_device.c: 2705: break;
 15887  01211C  0012               	return	
 15888  01211E                     i2l5952:
 15889                           
 15890                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 15891  01211E  0E2B               	movlw	low _USBActiveConfiguration
 15892  012120  6E25               	movwf	_inPipes,c	;volatile
 15893  012122  0E00               	movlw	high _USBActiveConfiguration
 15894  012124  6E26               	movwf	_inPipes+1,c	;volatile
 15895                           
 15896                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15897  012126  8028               	bsf	_inPipes+3,0,c	;volatile
 15898                           
 15899                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 15900  012128  0E01               	movlw	1
 15901  01212A  6E29               	movwf	_inPipes+4,c	;volatile
 15902                           
 15903                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 15904  01212C  8E28               	bsf	_inPipes+3,7,c	;volatile
 15905                           
 15906                           ;usb_device.c: 2711: break;
 15907  01212E  0012               	return	
 15908  012130                     i2l5960:
 15909                           
 15910                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 15911  012130  EC69  F097         	call	_USBStdGetStatusHandler	;wreg free
 15912                           
 15913                           ;usb_device.c: 2714: break;
 15914  012134  0012               	return	
 15915                           
 15916                           ;usb_device.c: 2715: case 1:
 15917  012136  D000               	goto	i2l5962
 15918  012138                     i2l5962:
 15919                           
 15920                           ;usb_device.c: 2716: case 3:
 15921                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 15922  012138  ECEE  F085         	call	_USBStdFeatureReqHandler	;wreg free
 15923                           
 15924                           ;usb_device.c: 2718: break;
 15925  01213C  0012               	return	
 15926  01213E                     i2l5964:
 15927                           
 15928                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 15929  01213E  010D               	movlb	13	; () banked
 15930  012140  5134               	movf	52,w,b	;volatile
 15931  012142  0D01               	mullw	1
 15932  012144  0EF0               	movlw	low _USBAlternateInterface
 15933  012146  24F3               	addwf	prodl,w,c
 15934  012148  6E25               	movwf	_inPipes,c	;volatile
 15935  01214A  0E00               	movlw	high _USBAlternateInterface
 15936  01214C  20F4               	addwfc	prodh,w,c
 15937  01214E  6E26               	movwf	_inPipes+1,c	;volatile
 15938                           
 15939                           ; BSR set to: 13
 15940                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15941  012150  8028               	bsf	_inPipes+3,0,c	;volatile
 15942                           
 15943                           ; BSR set to: 13
 15944                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 15945  012152  0E01               	movlw	1
 15946  012154  6E29               	movwf	_inPipes+4,c	;volatile
 15947                           
 15948                           ; BSR set to: 13
 15949                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 15950  012156  8E28               	bsf	_inPipes+3,7,c	;volatile
 15951                           
 15952                           ;usb_device.c: 2724: break;
 15953  012158  0012               	return	
 15954  01215A                     i2l354:
 15955                           
 15956                           ; BSR set to: 13
 15957                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 15958  01215A  8E28               	bsf	_inPipes+3,7,c	;volatile
 15959                           
 15960                           ; BSR set to: 13
 15961                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 15962  01215C  010D               	movlb	13	; () banked
 15963  01215E  5134               	movf	52,w,b	;volatile
 15964  012160  0D01               	mullw	1
 15965  012162  0EF0               	movlw	low _USBAlternateInterface
 15966  012164  24F3               	addwf	prodl,w,c
 15967  012166  6ED9               	movwf	fsr2l,c
 15968  012168  0E00               	movlw	high _USBAlternateInterface
 15969  01216A  20F4               	addwfc	prodh,w,c
 15970  01216C  6EDA               	movwf	fsr2h,c
 15971  01216E  CD32 FFDF          	movff	3378,indf2	;volatile
 15972                           
 15973                           ;usb_device.c: 2728: break;
 15974  012172  0012               	return	
 15975  012174                     i2l5974:
 15976                           
 15977                           ; BSR set to: 13
 15978                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 15979  012174  0E00               	movlw	0
 15980  012176  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15981  012178  0E02               	movlw	2
 15982  01217A  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15983  01217C  0E00               	movlw	0
 15984  01217E  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15985  012180  0E00               	movlw	0
 15986  012182  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15987  012184  0E00               	movlw	0
 15988  012186  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15989  012188  0E00               	movlw	0
 15990  01218A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15991  01218C  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15992                           
 15993                           ;usb_device.c: 2735: }
 15994                           
 15995                           ;usb_device.c: 2734: break;
 15996                           
 15997                           ;usb_device.c: 2733: default:
 15998                           
 15999                           ;usb_device.c: 2732: case 12:
 16000                           
 16001                           ;usb_device.c: 2731: break;
 16002  012190  0012               	return	
 16003  012192                     i2l5978:
 16004  012192  010D               	movlb	13	; () banked
 16005  012194  5131               	movf	49,w,b	;volatile
 16006                           
 16007                           ; Switch size 1, requested type "space"
 16008                           ; Number of cases is 11, Range of values is 0 to 12
 16009                           ; switch strategies available:
 16010                           ; Name         Instructions Cycles
 16011                           ; simple_byte           34    18 (average)
 16012                           ;	Chosen strategy is simple_byte
 16013  012196  0A00               	xorlw	0	; case 0
 16014  012198  B4D8               	btfsc	status,2,c
 16015  01219A  D7CA               	goto	i2l5960
 16016  01219C  0A01               	xorlw	1	; case 1
 16017  01219E  B4D8               	btfsc	status,2,c
 16018  0121A0  D7CB               	goto	i2l5962
 16019  0121A2  0A02               	xorlw	2	; case 3
 16020  0121A4  B4D8               	btfsc	status,2,c
 16021  0121A6  D7C8               	goto	i2l5962
 16022  0121A8  0A06               	xorlw	6	; case 5
 16023  0121AA  B4D8               	btfsc	status,2,c
 16024  0121AC  D7AE               	goto	i2l345
 16025  0121AE  0A03               	xorlw	3	; case 6
 16026  0121B0  B4D8               	btfsc	status,2,c
 16027  0121B2  D7AF               	goto	i2l5948
 16028  0121B4  0A01               	xorlw	1	; case 7
 16029  0121B6  B4D8               	btfsc	status,2,c
 16030  0121B8  D7DD               	goto	i2l5974
 16031  0121BA  0A0F               	xorlw	15	; case 8
 16032  0121BC  B4D8               	btfsc	status,2,c
 16033  0121BE  D7AF               	goto	i2l5952
 16034  0121C0  0A01               	xorlw	1	; case 9
 16035  0121C2  B4D8               	btfsc	status,2,c
 16036  0121C4  D7A9               	goto	i2l5950
 16037  0121C6  0A03               	xorlw	3	; case 10
 16038  0121C8  B4D8               	btfsc	status,2,c
 16039  0121CA  D7B9               	goto	i2l5964
 16040  0121CC  0A01               	xorlw	1	; case 11
 16041  0121CE  B4D8               	btfsc	status,2,c
 16042  0121D0  D7C4               	goto	i2l354
 16043  0121D2  0A07               	xorlw	7	; case 12
 16044  0121D4  0012               	return	
 16045                           
 16046                           ; BSR set to: 13
 16047  0121D6  0012               	return		;funcret
 16048  0121D8                     __end_of_USBCheckStdRequest:
 16049                           	opt stack 0
 16050                           pclatu	equ	0xFFB
 16051                           pclath	equ	0xFFA
 16052                           tblptru	equ	0xFF8
 16053                           tblptrh	equ	0xFF7
 16054                           tblptrl	equ	0xFF6
 16055                           tablat	equ	0xFF5
 16056                           prodh	equ	0xFF4
 16057                           prodl	equ	0xFF3
 16058                           intcon	equ	0xFF2
 16059                           intcon2	equ	0xFF1
 16060                           indf0	equ	0xFEF
 16061                           postinc0	equ	0xFEE
 16062                           fsr0h	equ	0xFEA
 16063                           fsr0l	equ	0xFE9
 16064                           wreg	equ	0xFE8
 16065                           indf1	equ	0xFE7
 16066                           postinc1	equ	0xFE6
 16067                           postdec1	equ	0xFE5
 16068                           fsr1h	equ	0xFE2
 16069                           fsr1l	equ	0xFE1
 16070                           indf2	equ	0xFDF
 16071                           postinc2	equ	0xFDE
 16072                           postdec2	equ	0xFDD
 16073                           plusw2	equ	0xFDB
 16074                           fsr2h	equ	0xFDA
 16075                           fsr2l	equ	0xFD9
 16076                           status	equ	0xFD8
 16077                           
 16078 ;; *************** function _USBStdSetCfgHandler *****************
 16079 ;; Defined at:
 16080 ;;		line 1968 in file "../My_library/usb_cdc/usb/usb_device.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;		None
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;  i               1   20[COMRAM] unsigned char 
 16085 ;; Return value:  Size  Location     Type
 16086 ;;		None               void
 16087 ;; Registers used:
 16088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16098 ;;Total ram usage:        1 bytes
 16099 ;; Hardware stack levels used:    1
 16100 ;; Hardware stack levels required when called:    4
 16101 ;; This function calls:
 16102 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16103 ;;		i2_memset
 16104 ;; This function is called by:
 16105 ;;		_USBCheckStdRequest
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text77
 16110  012478                     __ptext77:
 16111                           	opt stack 0
 16112  012478                     _USBStdSetCfgHandler:
 16113                           	opt stack 11
 16114                           
 16115                           ;usb_device.c: 1970: uint8_t i;
 16116                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 16117                           
 16118                           ;incstack = 0
 16119  012478  8E28               	bsf	_inPipes+3,7,c	;volatile
 16120                           
 16121                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 16122  01247A  0E27               	movlw	39
 16123  01247C  6E2D               	movwf	i2memset@p1,c
 16124  01247E  0E0F               	movlw	15
 16125  012480  6E2E               	movwf	i2memset@p1+1,c
 16126  012482  0E00               	movlw	0
 16127  012484  6E30               	movwf	i2memset@c+1,c
 16128  012486  0E00               	movlw	0
 16129  012488  6E2F               	movwf	i2memset@c,c
 16130  01248A  0E00               	movlw	0
 16131  01248C  6E32               	movwf	i2memset@n+1,c
 16132  01248E  0E02               	movlw	2
 16133  012490  6E31               	movwf	i2memset@n,c
 16134  012492  EC20  F09F         	call	i2_memset	;wreg free
 16135                           
 16136                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 16137  012496  0E00               	movlw	0
 16138  012498  6E2D               	movwf	i2memset@p1,c
 16139  01249A  0E0D               	movlw	13
 16140  01249C  6E2E               	movwf	i2memset@p1+1,c
 16141  01249E  0E00               	movlw	0
 16142  0124A0  6E30               	movwf	i2memset@c+1,c
 16143  0124A2  0E00               	movlw	0
 16144  0124A4  6E2F               	movwf	i2memset@c,c
 16145  0124A6  0E00               	movlw	0
 16146  0124A8  6E32               	movwf	i2memset@n+1,c
 16147  0124AA  0E30               	movlw	48
 16148  0124AC  6E31               	movwf	i2memset@n,c
 16149  0124AE  EC20  F09F         	call	i2_memset	;wreg free
 16150                           
 16151                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 16152  0124B2  8C65               	bsf	3941,6,c	;volatile
 16153                           
 16154                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 16155  0124B4  0E00               	movlw	0
 16156  0124B6  6E41               	movwf	USBStdSetCfgHandler@i,c
 16157  0124B8                     i2l5430:
 16158  0124B8  0E02               	movlw	2
 16159  0124BA  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 16160  0124BC  D001               	goto	i2l5434
 16161  0124BE  D016               	goto	i2l5440
 16162  0124C0                     i2l5434:
 16163                           
 16164                           ;usb_device.c: 1988: {
 16165                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 16166  0124C0  5041               	movf	USBStdSetCfgHandler@i,w,c
 16167  0124C2  0D01               	mullw	1
 16168  0124C4  0E10               	movlw	low _ep_data_in
 16169  0124C6  24F3               	addwf	prodl,w,c
 16170  0124C8  6ED9               	movwf	fsr2l,c
 16171  0124CA  0E00               	movlw	high _ep_data_in
 16172  0124CC  20F4               	addwfc	prodh,w,c
 16173  0124CE  6EDA               	movwf	fsr2h,c
 16174  0124D0  0E00               	movlw	0
 16175  0124D2  6EDF               	movwf	indf2,c
 16176                           
 16177                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 16178  0124D4  5041               	movf	USBStdSetCfgHandler@i,w,c
 16179  0124D6  0D01               	mullw	1
 16180  0124D8  0ED5               	movlw	low _ep_data_out
 16181  0124DA  24F3               	addwf	prodl,w,c
 16182  0124DC  6ED9               	movwf	fsr2l,c
 16183  0124DE  0E00               	movlw	high _ep_data_out
 16184  0124E0  20F4               	addwfc	prodh,w,c
 16185  0124E2  6EDA               	movwf	fsr2h,c
 16186  0124E4  0E00               	movlw	0
 16187  0124E6  6EDF               	movwf	indf2,c
 16188  0124E8  2A41               	incf	USBStdSetCfgHandler@i,f,c
 16189  0124EA  D7E6               	goto	i2l5430
 16190  0124EC                     i2l5440:
 16191                           
 16192                           ;usb_device.c: 1991: }
 16193                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 16194  0124EC  0EF0               	movlw	low _USBAlternateInterface
 16195  0124EE  6E2D               	movwf	i2memset@p1,c
 16196  0124F0  0E00               	movlw	high _USBAlternateInterface
 16197  0124F2  6E2E               	movwf	i2memset@p1+1,c
 16198  0124F4  0E00               	movlw	0
 16199  0124F6  6E30               	movwf	i2memset@c+1,c
 16200  0124F8  0E00               	movlw	0
 16201  0124FA  6E2F               	movwf	i2memset@c,c
 16202  0124FC  0E00               	movlw	0
 16203  0124FE  6E32               	movwf	i2memset@n+1,c
 16204  012500  0E02               	movlw	2
 16205  012502  6E31               	movwf	i2memset@n,c
 16206  012504  EC20  F09F         	call	i2_memset	;wreg free
 16207                           
 16208                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 16209  012508  9C65               	bcf	3941,6,c	;volatile
 16210                           
 16211                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16212  01250A  0E08               	movlw	8
 16213  01250C  6E0A               	movwf	_pBDTEntryIn,c
 16214  01250E  0E0D               	movlw	13
 16215  012510  6E0B               	movwf	_pBDTEntryIn+1,c
 16216                           
 16217                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 16218  012512  0E00               	movlw	0
 16219  012514  6E13               	movwf	_pBDTEntryEP0OutCurrent,c
 16220  012516  0E0D               	movlw	13
 16221  012518  6E14               	movwf	_pBDTEntryEP0OutCurrent+1,c
 16222                           
 16223                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 16224  01251A  C013  F015         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 16225  01251E  C014  F016         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 16226                           
 16227                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 16228  012522  CD32 F02B          	movff	3378,_USBActiveConfiguration	;volatile
 16229                           
 16230                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 16231  012526  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 16232  012528  A4D8               	btfss	status,2,c
 16233  01252A  D003               	goto	i2l5456
 16234                           
 16235                           ;usb_device.c: 2010: {
 16236                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 16237  01252C  0E10               	movlw	16
 16238  01252E  6E1D               	movwf	_USBDeviceState,c	;volatile
 16239                           
 16240                           ;usb_device.c: 2013: }
 16241  012530  0012               	return	
 16242  012532                     i2l5456:
 16243                           
 16244                           ;usb_device.c: 2014: else
 16245                           ;usb_device.c: 2015: {
 16246                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 16247  012532  0E00               	movlw	0
 16248  012534  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16249  012536  0E01               	movlw	1
 16250  012538  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16251  01253A  0E2B               	movlw	low _USBActiveConfiguration
 16252  01253C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16253  01253E  0E00               	movlw	high _USBActiveConfiguration
 16254  012540  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16255  012542  0E00               	movlw	0
 16256  012544  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16257  012546  0E01               	movlw	1
 16258  012548  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16259  01254A  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16260                           
 16261                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 16262  01254E  0E20               	movlw	32
 16263  012550  6E1D               	movwf	_USBDeviceState,c	;volatile
 16264  012552  0012               	return	
 16265  012554  0012               	return		;funcret
 16266  012556                     __end_of_USBStdSetCfgHandler:
 16267                           	opt stack 0
 16268                           pclatu	equ	0xFFB
 16269                           pclath	equ	0xFFA
 16270                           tblptru	equ	0xFF8
 16271                           tblptrh	equ	0xFF7
 16272                           tblptrl	equ	0xFF6
 16273                           tablat	equ	0xFF5
 16274                           prodh	equ	0xFF4
 16275                           prodl	equ	0xFF3
 16276                           intcon	equ	0xFF2
 16277                           intcon2	equ	0xFF1
 16278                           indf0	equ	0xFEF
 16279                           postinc0	equ	0xFEE
 16280                           fsr0h	equ	0xFEA
 16281                           fsr0l	equ	0xFE9
 16282                           wreg	equ	0xFE8
 16283                           indf1	equ	0xFE7
 16284                           postinc1	equ	0xFE6
 16285                           postdec1	equ	0xFE5
 16286                           fsr1h	equ	0xFE2
 16287                           fsr1l	equ	0xFE1
 16288                           indf2	equ	0xFDF
 16289                           postinc2	equ	0xFDE
 16290                           postdec2	equ	0xFDD
 16291                           plusw2	equ	0xFDB
 16292                           fsr2h	equ	0xFDA
 16293                           fsr2l	equ	0xFD9
 16294                           status	equ	0xFD8
 16295                           
 16296 ;; *************** function i2_memset *****************
 16297 ;; Defined at:
 16298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
 16299 ;; Parameters:    Size  Location     Type
 16300 ;;  p1              2    0[COMRAM] PTR void 
 16301 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16302 ;;  c               2    2[COMRAM] int 
 16303 ;;  n               2    4[COMRAM] unsigned int 
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;  memset          2    6[COMRAM] PTR unsigned char 
 16306 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16307 ;; Return value:  Size  Location     Type
 16308 ;;                  2    0[COMRAM] PTR void 
 16309 ;; Registers used:
 16310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16311 ;; Tracked objects:
 16312 ;;		On entry : 0/0
 16313 ;;		On exit  : 0/0
 16314 ;;		Unchanged: 0/0
 16315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16316 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16319 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16320 ;;Total ram usage:        8 bytes
 16321 ;; Hardware stack levels used:    1
 16322 ;; This function calls:
 16323 ;;		Nothing
 16324 ;; This function is called by:
 16325 ;;		_USBStdSetCfgHandler
 16326 ;;		i2_USBDeviceInit
 16327 ;; This function uses a non-reentrant model
 16328 ;;
 16329                           
 16330                           	psect	text78
 16331  013E40                     __ptext78:
 16332                           	opt stack 0
 16333  013E40                     i2_memset:
 16334                           	opt stack 17
 16335                           
 16336                           ;incstack = 0
 16337  013E40  C02D  F033         	movff	i2memset@p1,i2memset@p
 16338  013E44  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 16339  013E48  D009               	goto	i2l5364
 16340  013E4A                     i2l5360:
 16341  013E4A  C033  FFD9         	movff	i2memset@p,fsr2l
 16342  013E4E  C034  FFDA         	movff	i2memset@p+1,fsr2h
 16343  013E52  C02F  FFDF         	movff	i2memset@c,indf2
 16344  013E56  4A33               	infsnz	i2memset@p,f,c
 16345  013E58  2A34               	incf	i2memset@p+1,f,c
 16346  013E5A  D000               	goto	i2l5364
 16347  013E5C                     i2l5364:
 16348  013E5C  0631               	decf	i2memset@n,f,c
 16349  013E5E  A0D8               	btfss	status,0,c
 16350  013E60  0632               	decf	i2memset@n+1,f,c
 16351  013E62  2831               	incf	i2memset@n,w,c
 16352  013E64  E1F2               	bnz	i2l5360
 16353  013E66  2832               	incf	i2memset@n+1,w,c
 16354  013E68  A4D8               	btfss	status,2,c
 16355  013E6A  D7EF               	goto	i2l5360
 16356                           
 16357                           ;	Return value of i2_memset is never used
 16358  013E6C  0012               	return		;funcret
 16359  013E6E                     __end_ofi2_memset:
 16360                           	opt stack 0
 16361                           pclatu	equ	0xFFB
 16362                           pclath	equ	0xFFA
 16363                           tblptru	equ	0xFF8
 16364                           tblptrh	equ	0xFF7
 16365                           tblptrl	equ	0xFF6
 16366                           tablat	equ	0xFF5
 16367                           prodh	equ	0xFF4
 16368                           prodl	equ	0xFF3
 16369                           intcon	equ	0xFF2
 16370                           intcon2	equ	0xFF1
 16371                           indf0	equ	0xFEF
 16372                           postinc0	equ	0xFEE
 16373                           fsr0h	equ	0xFEA
 16374                           fsr0l	equ	0xFE9
 16375                           wreg	equ	0xFE8
 16376                           indf1	equ	0xFE7
 16377                           postinc1	equ	0xFE6
 16378                           postdec1	equ	0xFE5
 16379                           fsr1h	equ	0xFE2
 16380                           fsr1l	equ	0xFE1
 16381                           indf2	equ	0xFDF
 16382                           postinc2	equ	0xFDE
 16383                           postdec2	equ	0xFDD
 16384                           plusw2	equ	0xFDB
 16385                           fsr2h	equ	0xFDA
 16386                           fsr2l	equ	0xFD9
 16387                           status	equ	0xFD8
 16388                           
 16389 ;; *************** function _USBStdGetStatusHandler *****************
 16390 ;; Defined at:
 16391 ;;		line 2129 in file "../My_library/usb_cdc/usb/usb_device.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;		None
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;  p               2    1[COMRAM] PTR struct __BDT
 16396 ;;		 -> NULL(0), BDT(48), 
 16397 ;; Return value:  Size  Location     Type
 16398 ;;		None               void
 16399 ;; Registers used:
 16400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16408 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16410 ;;Total ram usage:        3 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; This function calls:
 16413 ;;		Nothing
 16414 ;; This function is called by:
 16415 ;;		_USBCheckStdRequest
 16416 ;; This function uses a non-reentrant model
 16417 ;;
 16418                           
 16419                           	psect	text79
 16420  012ED2                     __ptext79:
 16421                           	opt stack 0
 16422  012ED2                     _USBStdGetStatusHandler:
 16423                           	opt stack 15
 16424                           
 16425                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 16426                           
 16427                           ;incstack = 0
 16428  012ED2  0E00               	movlw	0
 16429  012ED4  010D               	movlb	13	; () banked
 16430  012ED6  6F38               	movwf	56,b	;volatile
 16431                           
 16432                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 16433  012ED8  0E00               	movlw	0
 16434  012EDA  010D               	movlb	13	; () banked
 16435  012EDC  6F39               	movwf	57,b	;volatile
 16436                           
 16437                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 16438  012EDE  D03D               	goto	i2l5512
 16439  012EE0                     i2l281:
 16440                           
 16441                           ; BSR set to: 13
 16442                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 16443  012EE0  8E28               	bsf	_inPipes+3,7,c	;volatile
 16444                           
 16445                           ;usb_device.c: 2142: if(0 == 1)
 16446  012EE2  D003               	goto	i2l5496
 16447                           
 16448                           ; BSR set to: 13
 16449                           ;usb_device.c: 2143: {
 16450                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 16451  012EE4  010D               	movlb	13	; () banked
 16452  012EE6  8138               	bsf	56,0,b	;volatile
 16453  012EE8  D000               	goto	i2l5496
 16454  012EEA                     i2l5496:
 16455                           
 16456                           ; BSR set to: 13
 16457                           ;usb_device.c: 2145: }
 16458                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 16459  012EEA  0418               	decf	_RemoteWakeup,w,c	;volatile
 16460  012EEC  A4D8               	btfss	status,2,c
 16461  012EEE  D041               	goto	i2l284
 16462                           
 16463                           ; BSR set to: 13
 16464                           ;usb_device.c: 2148: {
 16465                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 16466  012EF0  010D               	movlb	13	; () banked
 16467  012EF2  8338               	bsf	56,1,b	;volatile
 16468                           
 16469                           ; BSR set to: 13
 16470                           ;usb_device.c: 2150: }
 16471                           ;usb_device.c: 2151: break;
 16472  012EF4  D03E               	goto	i2l284
 16473  012EF6                     i2l285:
 16474                           
 16475                           ; BSR set to: 13
 16476                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 16477  012EF6  8E28               	bsf	_inPipes+3,7,c	;volatile
 16478                           
 16479                           ;usb_device.c: 2154: break;
 16480  012EF8  D03C               	goto	i2l284
 16481  012EFA                     i2l286:
 16482                           
 16483                           ; BSR set to: 13
 16484                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 16485  012EFA  8E28               	bsf	_inPipes+3,7,c	;volatile
 16486                           
 16487                           ;usb_device.c: 2160: {
 16488                           ;usb_device.c: 2161: BDT_ENTRY *p;
 16489                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 16490  012EFC  010D               	movlb	13	; () banked
 16491  012EFE  BF34               	btfsc	52,7,b	;volatile
 16492  012F00  D00B               	goto	i2l5502
 16493                           
 16494                           ; BSR set to: 13
 16495                           ;usb_device.c: 2164: {
 16496                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 16497  012F02  010D               	movlb	13	; () banked
 16498  012F04  5134               	movf	52,w,b	;volatile
 16499  012F06  0B0F               	andlw	15
 16500  012F08  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16501  012F0A  502D               	movf	??_USBStdGetStatusHandler,w,c
 16502  012F0C  0D02               	mullw	2
 16503  012F0E  0ECF               	movlw	low _pBDTEntryOut
 16504  012F10  24F3               	addwf	prodl,w,c
 16505  012F12  6ED9               	movwf	fsr2l,c
 16506  012F14  0E00               	movlw	high _pBDTEntryOut
 16507  012F16  D00A               	goto	L5
 16508  012F18                     i2l5502:
 16509                           
 16510                           ; BSR set to: 13
 16511                           ;usb_device.c: 2167: else
 16512                           ;usb_device.c: 2168: {
 16513                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 16514  012F18  010D               	movlb	13	; () banked
 16515  012F1A  5134               	movf	52,w,b	;volatile
 16516  012F1C  0B0F               	andlw	15
 16517  012F1E  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 16518  012F20  502D               	movf	??_USBStdGetStatusHandler,w,c
 16519  012F22  0D02               	mullw	2
 16520  012F24  0E0A               	movlw	low _pBDTEntryIn
 16521  012F26  24F3               	addwf	prodl,w,c
 16522  012F28  6ED9               	movwf	fsr2l,c
 16523  012F2A  0E00               	movlw	high _pBDTEntryIn
 16524  012F2C                     L5:
 16525  012F2C  20F4               	addwfc	prodh,w,c
 16526  012F2E  6EDA               	movwf	fsr2h,c
 16527  012F30  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 16528  012F34  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 16529  012F38  D000               	goto	i2l5504
 16530  012F3A                     i2l5504:
 16531                           
 16532                           ; BSR set to: 13
 16533                           ;usb_device.c: 2170: }
 16534                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 16535  012F3A  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16536  012F3E  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16537  012F42  AEDF               	btfss	indf2,7,c
 16538  012F44  D016               	goto	i2l284
 16539                           
 16540                           ; BSR set to: 13
 16541  012F46  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 16542  012F4A  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 16543  012F4E  A4DF               	btfss	indf2,2,c
 16544  012F50  D010               	goto	i2l284
 16545                           
 16546                           ; BSR set to: 13
 16547                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 16548  012F52  0E01               	movlw	1
 16549  012F54  010D               	movlb	13	; () banked
 16550  012F56  6F38               	movwf	56,b	;volatile
 16551                           
 16552                           ; BSR set to: 13
 16553                           ;usb_device.c: 2175: }
 16554                           ;usb_device.c: 2176: }
 16555                           
 16556                           ; BSR set to: 13
 16557                           ;usb_device.c: 2174: break;
 16558  012F58  D00C               	goto	i2l284
 16559  012F5A                     i2l5512:
 16560                           
 16561                           ; BSR set to: 13
 16562  012F5A  010D               	movlb	13	; () banked
 16563  012F5C  5130               	movf	48,w,b	;volatile
 16564  012F5E  0B1F               	andlw	31
 16565                           
 16566                           ; Switch size 1, requested type "space"
 16567                           ; Number of cases is 3, Range of values is 0 to 2
 16568                           ; switch strategies available:
 16569                           ; Name         Instructions Cycles
 16570                           ; simple_byte           10     6 (average)
 16571                           ;	Chosen strategy is simple_byte
 16572  012F60  0A00               	xorlw	0	; case 0
 16573  012F62  B4D8               	btfsc	status,2,c
 16574  012F64  D7BD               	goto	i2l281
 16575  012F66  0A01               	xorlw	1	; case 1
 16576  012F68  B4D8               	btfsc	status,2,c
 16577  012F6A  D7C5               	goto	i2l285
 16578  012F6C  0A03               	xorlw	3	; case 2
 16579  012F6E  B4D8               	btfsc	status,2,c
 16580  012F70  D7C4               	goto	i2l286
 16581  012F72                     i2l284:
 16582                           
 16583                           ; BSR set to: 13
 16584                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 16585  012F72  AE28               	btfss	_inPipes+3,7,c	;volatile
 16586  012F74  0012               	return	
 16587                           
 16588                           ; BSR set to: 13
 16589                           ;usb_device.c: 2179: {
 16590                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 16591  012F76  0E38               	movlw	56
 16592  012F78  6E25               	movwf	_inPipes,c	;volatile
 16593  012F7A  0E0D               	movlw	13
 16594  012F7C  6E26               	movwf	_inPipes+1,c	;volatile
 16595                           
 16596                           ; BSR set to: 13
 16597                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 16598  012F7E  8028               	bsf	_inPipes+3,0,c	;volatile
 16599                           
 16600                           ; BSR set to: 13
 16601                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 16602  012F80  0E02               	movlw	2
 16603  012F82  6E29               	movwf	_inPipes+4,c	;volatile
 16604  012F84  0012               	return	
 16605                           
 16606                           ; BSR set to: 13
 16607                           
 16608                           ; BSR set to: 13
 16609  012F86  0012               	return		;funcret
 16610  012F88                     __end_of_USBStdGetStatusHandler:
 16611                           	opt stack 0
 16612                           pclatu	equ	0xFFB
 16613                           pclath	equ	0xFFA
 16614                           tblptru	equ	0xFF8
 16615                           tblptrh	equ	0xFF7
 16616                           tblptrl	equ	0xFF6
 16617                           tablat	equ	0xFF5
 16618                           prodh	equ	0xFF4
 16619                           prodl	equ	0xFF3
 16620                           intcon	equ	0xFF2
 16621                           intcon2	equ	0xFF1
 16622                           indf0	equ	0xFEF
 16623                           postinc0	equ	0xFEE
 16624                           fsr0h	equ	0xFEA
 16625                           fsr0l	equ	0xFE9
 16626                           wreg	equ	0xFE8
 16627                           indf1	equ	0xFE7
 16628                           postinc1	equ	0xFE6
 16629                           postdec1	equ	0xFE5
 16630                           fsr1h	equ	0xFE2
 16631                           fsr1l	equ	0xFE1
 16632                           indf2	equ	0xFDF
 16633                           postinc2	equ	0xFDE
 16634                           postdec2	equ	0xFDD
 16635                           plusw2	equ	0xFDB
 16636                           fsr2h	equ	0xFDA
 16637                           fsr2l	equ	0xFD9
 16638                           status	equ	0xFD8
 16639                           
 16640 ;; *************** function _USBStdGetDscHandler *****************
 16641 ;; Defined at:
 16642 ;;		line 2043 in file "../My_library/usb_cdc/usb/usb_device.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;		None
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;		None
 16647 ;; Return value:  Size  Location     Type
 16648 ;;		None               void
 16649 ;; Registers used:
 16650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16660 ;;Total ram usage:        2 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_USBCheckStdRequest
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text80
 16670  0119C0                     __ptext80:
 16671                           	opt stack 0
 16672  0119C0                     _USBStdGetDscHandler:
 16673                           	opt stack 15
 16674                           
 16675                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 16676                           
 16677                           ; BSR set to: 13
 16678                           ;incstack = 0
 16679  0119C0  0E80               	movlw	128
 16680  0119C2  010D               	movlb	13	; () banked
 16681  0119C4  1930               	xorwf	48,w,b	;volatile
 16682  0119C6  A4D8               	btfss	status,2,c
 16683  0119C8  0012               	return	
 16684                           
 16685                           ; BSR set to: 13
 16686                           ;usb_device.c: 2046: {
 16687                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 16688  0119CA  0EC0               	movlw	192
 16689  0119CC  6E28               	movwf	_inPipes+3,c	;volatile
 16690                           
 16691                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 16692  0119CE  D085               	goto	i2l5490
 16693  0119D0                     i2l5464:
 16694                           
 16695                           ; BSR set to: 13
 16696                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 16697  0119D0  0E7A               	movlw	low _device_dsc
 16698  0119D2  6E25               	movwf	_inPipes,c	;volatile
 16699  0119D4  0EFE               	movlw	high _device_dsc
 16700  0119D6  6E26               	movwf	_inPipes+1,c	;volatile
 16701                           
 16702                           ; BSR set to: 13
 16703                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 16704  0119D8  0E00               	movlw	0
 16705  0119DA  6E2A               	movwf	_inPipes+5,c	;volatile
 16706  0119DC  0E12               	movlw	18
 16707  0119DE  6E29               	movwf	_inPipes+4,c	;volatile
 16708                           
 16709                           ;usb_device.c: 2058: break;
 16710  0119E0  0012               	return	
 16711  0119E2                     i2l5468:
 16712                           
 16713                           ; BSR set to: 13
 16714                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 16715  0119E2  010D               	movlb	13	; () banked
 16716  0119E4  5132               	movf	50,w,b	;volatile
 16717  0119E6  A4D8               	btfss	status,2,c
 16718  0119E8  D043               	goto	i2l5476
 16719                           
 16720                           ; BSR set to: 13
 16721                           ;usb_device.c: 2064: {
 16722                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 16723  0119EA  010D               	movlb	13	; () banked
 16724  0119EC  5132               	movf	50,w,b	;volatile
 16725  0119EE  0D02               	mullw	2
 16726  0119F0  0EB1               	movlw	low _USB_CD_Ptr
 16727  0119F2  24F3               	addwf	prodl,w,c
 16728  0119F4  6EF6               	movwf	tblptrl,c
 16729  0119F6  0EFD               	movlw	high _USB_CD_Ptr
 16730  0119F8  20F4               	addwfc	prodh,w,c
 16731  0119FA  6EF7               	movwf	tblptrh,c
 16732  0119FC                     	if	1	;There are 3 active tblptr bytes
 16733  0119FC  6AF8               	clrf	tblptru,c
 16734  0119FE  0E00               	movlw	low (__mediumconst shr (0+16))
 16735  011A00  22F8               	addwfc	tblptru,f,c
 16736  011A02                     	endif
 16737  011A02  0009               	tblrd		*+
 16738  011A04  CFF5 F025          	movff	tablat,_inPipes	;volatile
 16739  011A08  000A               	tblrd		*-
 16740  011A0A  CFF5 F026          	movff	tablat,_inPipes+1	;volatile
 16741                           
 16742                           ; BSR set to: 13
 16743                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 16744  011A0E  0E02               	movlw	2
 16745  011A10  2425               	addwf	_inPipes,w,c	;volatile
 16746  011A12  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 16747  011A14  0E00               	movlw	0
 16748  011A16  2026               	addwfc	_inPipes+1,w,c	;volatile
 16749  011A18  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16750  011A1A  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16751  011A1E  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16752  011A22  0E00               	movlw	low (__mediumconst shr (0+16))
 16753  011A24  6EF8               	movwf	tblptru,c
 16754  011A26  0E0E               	movlw	(high __ramtop+-1)
 16755  011A28  64F7               	cpfsgt	tblptrh,c
 16756  011A2A  D003               	bra	i2u447_47
 16757  011A2C  0008               	tblrd		*
 16758  011A2E  50F5               	movf	tablat,w,c
 16759  011A30  D005               	bra	i2u447_40
 16760  011A32                     i2u447_47:
 16761  011A32  CFF6 FFE9          	movff	tblptrl,fsr0l
 16762  011A36  CFF7 FFEA          	movff	tblptrh,fsr0h
 16763  011A3A  50EF               	movf	indf0,w,c
 16764  011A3C                     i2u447_40:
 16765  011A3C  6E29               	movwf	_inPipes+4,c	;volatile
 16766                           
 16767                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 16768  011A3E  0E03               	movlw	3
 16769  011A40  2425               	addwf	_inPipes,w,c	;volatile
 16770  011A42  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 16771  011A44  0E00               	movlw	0
 16772  011A46  2026               	addwfc	_inPipes+1,w,c	;volatile
 16773  011A48  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 16774  011A4A  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 16775  011A4E  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 16776  011A52  0E00               	movlw	low (__mediumconst shr (0+16))
 16777  011A54  6EF8               	movwf	tblptru,c
 16778  011A56  0E0E               	movlw	(high __ramtop+-1)
 16779  011A58  64F7               	cpfsgt	tblptrh,c
 16780  011A5A  D003               	bra	i2u448_47
 16781  011A5C  0008               	tblrd		*
 16782  011A5E  50F5               	movf	tablat,w,c
 16783  011A60  D005               	bra	i2u448_40
 16784  011A62                     i2u448_47:
 16785  011A62  CFF6 FFE9          	movff	tblptrl,fsr0l
 16786  011A66  CFF7 FFEA          	movff	tblptrh,fsr0h
 16787  011A6A  50EF               	movf	indf0,w,c
 16788  011A6C                     i2u448_40:
 16789  011A6C  6E2A               	movwf	_inPipes+5,c	;volatile
 16790                           
 16791                           ;usb_device.c: 2076: }
 16792  011A6E  0012               	return	
 16793  011A70                     i2l5476:
 16794                           
 16795                           ;usb_device.c: 2077: else
 16796                           ;usb_device.c: 2078: {
 16797                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 16798  011A70  0E00               	movlw	0
 16799  011A72  6E28               	movwf	_inPipes+3,c	;volatile
 16800                           
 16801                           ;usb_device.c: 2080: }
 16802                           ;usb_device.c: 2081: break;
 16803  011A74  0012               	return	
 16804  011A76                     i2l5478:
 16805                           
 16806                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 16807  011A76  0E03               	movlw	3
 16808  011A78  010D               	movlb	13	; () banked
 16809  011A7A  6132               	cpfslt	50,b	;volatile
 16810  011A7C  D028               	goto	i2l5484
 16811                           
 16812                           ; BSR set to: 13
 16813                           ;usb_device.c: 2087: {
 16814                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 16815  011A7E  010D               	movlb	13	; () banked
 16816  011A80  5132               	movf	50,w,b	;volatile
 16817  011A82  0D02               	mullw	2
 16818  011A84  0EAB               	movlw	low _USB_SD_Ptr
 16819  011A86  24F3               	addwf	prodl,w,c
 16820  011A88  6EF6               	movwf	tblptrl,c
 16821  011A8A  0EFD               	movlw	high _USB_SD_Ptr
 16822  011A8C  20F4               	addwfc	prodh,w,c
 16823  011A8E  6EF7               	movwf	tblptrh,c
 16824  011A90                     	if	1	;There are 3 active tblptr bytes
 16825  011A90  6AF8               	clrf	tblptru,c
 16826  011A92  0E00               	movlw	low (__mediumconst shr (0+16))
 16827  011A94  22F8               	addwfc	tblptru,f,c
 16828  011A96                     	endif
 16829  011A96  0009               	tblrd		*+
 16830  011A98  CFF5 F025          	movff	tablat,_inPipes	;volatile
 16831  011A9C  000A               	tblrd		*-
 16832  011A9E  CFF5 F026          	movff	tablat,_inPipes+1	;volatile
 16833                           
 16834                           ; BSR set to: 13
 16835                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 16836  011AA2  C025  FFF6         	movff	_inPipes,tblptrl	;volatile
 16837  011AA6  C026  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16838  011AAA  0E00               	movlw	low (__mediumconst shr (0+16))
 16839  011AAC  6EF8               	movwf	tblptru,c
 16840  011AAE  0E0E               	movlw	(high __ramtop+-1)
 16841  011AB0  64F7               	cpfsgt	tblptrh,c
 16842  011AB2  D003               	bra	i2u450_47
 16843  011AB4  0008               	tblrd		*
 16844  011AB6  50F5               	movf	tablat,w,c
 16845  011AB8  D005               	bra	i2u450_40
 16846  011ABA                     i2u450_47:
 16847  011ABA  CFF6 FFE9          	movff	tblptrl,fsr0l
 16848  011ABE  CFF7 FFEA          	movff	tblptrh,fsr0h
 16849  011AC2  50EF               	movf	indf0,w,c
 16850  011AC4                     i2u450_40:
 16851  011AC4  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 16852  011AC6  502D               	movf	??_USBStdGetDscHandler,w,c
 16853  011AC8  6E29               	movwf	_inPipes+4,c	;volatile
 16854  011ACA  6A2A               	clrf	_inPipes+5,c	;volatile
 16855                           
 16856                           ;usb_device.c: 2092: }
 16857  011ACC  0012               	return	
 16858  011ACE                     i2l5484:
 16859                           
 16860                           ;usb_device.c: 2102: else
 16861                           ;usb_device.c: 2103: {
 16862                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 16863  011ACE  0E00               	movlw	0
 16864  011AD0  6E28               	movwf	_inPipes+3,c	;volatile
 16865                           
 16866                           ;usb_device.c: 2105: }
 16867                           ;usb_device.c: 2106: break;
 16868  011AD2  0012               	return	
 16869  011AD4                     i2l5486:
 16870                           
 16871                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 16872  011AD4  0E00               	movlw	0
 16873  011AD6  6E28               	movwf	_inPipes+3,c	;volatile
 16874                           
 16875                           ;usb_device.c: 2110: }
 16876                           
 16877                           ;usb_device.c: 2109: break;
 16878  011AD8  0012               	return	
 16879  011ADA                     i2l5490:
 16880  011ADA  010D               	movlb	13	; () banked
 16881  011ADC  5133               	movf	51,w,b	;volatile
 16882                           
 16883                           ; Switch size 1, requested type "space"
 16884                           ; Number of cases is 3, Range of values is 1 to 3
 16885                           ; switch strategies available:
 16886                           ; Name         Instructions Cycles
 16887                           ; simple_byte           10     6 (average)
 16888                           ;	Chosen strategy is simple_byte
 16889  011ADE  0A01               	xorlw	1	; case 1
 16890  011AE0  B4D8               	btfsc	status,2,c
 16891  011AE2  D776               	goto	i2l5464
 16892  011AE4  0A03               	xorlw	3	; case 2
 16893  011AE6  B4D8               	btfsc	status,2,c
 16894  011AE8  D77C               	goto	i2l5468
 16895  011AEA  0A01               	xorlw	1	; case 3
 16896  011AEC  B4D8               	btfsc	status,2,c
 16897  011AEE  D7C3               	goto	i2l5478
 16898  011AF0  D7F1               	goto	i2l5486
 16899                           
 16900                           ; BSR set to: 13
 16901  011AF2  0012               	return	
 16902                           
 16903                           ; BSR set to: 13
 16904  011AF4  0012               	return		;funcret
 16905  011AF6                     __end_of_USBStdGetDscHandler:
 16906                           	opt stack 0
 16907                           pclatu	equ	0xFFB
 16908                           pclath	equ	0xFFA
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           intcon	equ	0xFF2
 16916                           intcon2	equ	0xFF1
 16917                           indf0	equ	0xFEF
 16918                           postinc0	equ	0xFEE
 16919                           fsr0h	equ	0xFEA
 16920                           fsr0l	equ	0xFE9
 16921                           wreg	equ	0xFE8
 16922                           indf1	equ	0xFE7
 16923                           postinc1	equ	0xFE6
 16924                           postdec1	equ	0xFE5
 16925                           fsr1h	equ	0xFE2
 16926                           fsr1l	equ	0xFE1
 16927                           indf2	equ	0xFDF
 16928                           postinc2	equ	0xFDE
 16929                           postdec2	equ	0xFDD
 16930                           plusw2	equ	0xFDB
 16931                           fsr2h	equ	0xFDA
 16932                           fsr2l	equ	0xFD9
 16933                           status	equ	0xFD8
 16934                           
 16935 ;; *************** function _USBStdFeatureReqHandler *****************
 16936 ;; Defined at:
 16937 ;;		line 2757 in file "../My_library/usb_cdc/usb/usb_device.c"
 16938 ;; Parameters:    Size  Location     Type
 16939 ;;		None
 16940 ;; Auto vars:     Size  Location     Type
 16941 ;;  p               2   24[COMRAM] PTR struct __BDT
 16942 ;;		 -> NULL(0), BDT(48), 
 16943 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 16944 ;;		 -> UEP0(1), 
 16945 ;;  current_ep_d    1   23[COMRAM] struct .
 16946 ;; Return value:  Size  Location     Type
 16947 ;;		None               void
 16948 ;; Registers used:
 16949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 0/0
 16952 ;;		On exit  : 0/0
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16956 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16959 ;;Total ram usage:        6 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    4
 16962 ;; This function calls:
 16963 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16964 ;; This function is called by:
 16965 ;;		_USBCheckStdRequest
 16966 ;; This function uses a non-reentrant model
 16967 ;;
 16968                           
 16969                           	psect	text81
 16970  010BDC                     __ptext81:
 16971                           	opt stack 0
 16972  010BDC                     _USBStdFeatureReqHandler:
 16973                           	opt stack 11
 16974                           
 16975                           ;usb_device.c: 2759: BDT_ENTRY *p;
 16976                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 16977                           ;usb_device.c: 2764: unsigned char* pUEP;
 16978                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 16979                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 16980                           
 16981                           ;incstack = 0
 16982  010BDC  010D               	movlb	13	; () banked
 16983  010BDE  0532               	decf	50,w,b	;volatile
 16984  010BE0  A4D8               	btfss	status,2,c
 16985  010BE2  D011               	goto	i2l360
 16986                           
 16987                           ; BSR set to: 13
 16988  010BE4  010D               	movlb	13	; () banked
 16989  010BE6  5130               	movf	48,w,b	;volatile
 16990  010BE8  0B1F               	andlw	31
 16991  010BEA  0900               	iorlw	0
 16992  010BEC  A4D8               	btfss	status,2,c
 16993  010BEE  D00B               	goto	i2l360
 16994                           
 16995                           ; BSR set to: 13
 16996                           ;usb_device.c: 2804: {
 16997                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 16998  010BF0  8E28               	bsf	_inPipes+3,7,c	;volatile
 16999                           
 17000                           ; BSR set to: 13
 17001                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 17002  010BF2  0E03               	movlw	3
 17003  010BF4  010D               	movlb	13	; () banked
 17004  010BF6  1931               	xorwf	49,w,b	;volatile
 17005  010BF8  A4D8               	btfss	status,2,c
 17006  010BFA  D002               	goto	i2l5530
 17007                           
 17008                           ; BSR set to: 13
 17009                           ;usb_device.c: 2807: RemoteWakeup = 1;
 17010  010BFC  0E01               	movlw	1
 17011  010BFE  D001               	goto	L6
 17012  010C00                     i2l5530:
 17013                           
 17014                           ; BSR set to: 13
 17015                           ;usb_device.c: 2808: else
 17016                           ;usb_device.c: 2809: RemoteWakeup = 0;
 17017  010C00  0E00               	movlw	0
 17018  010C02                     L6:
 17019  010C02  6E18               	movwf	_RemoteWakeup,c	;volatile
 17020  010C04  D000               	goto	i2l360
 17021  010C06                     i2l360:
 17022                           
 17023                           ; BSR set to: 13
 17024                           ;usb_device.c: 2810: }
 17025                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 17026                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 17027                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 17028                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 17029  010C06  010D               	movlb	13	; () banked
 17030  010C08  5132               	movf	50,w,b	;volatile
 17031  010C0A  A4D8               	btfss	status,2,c
 17032  010C0C  0012               	return	
 17033                           
 17034                           ; BSR set to: 13
 17035  010C0E  010D               	movlb	13	; () banked
 17036  010C10  5130               	movf	48,w,b	;volatile
 17037  010C12  0B1F               	andlw	31
 17038  010C14  0A02               	xorlw	2
 17039  010C16  A4D8               	btfss	status,2,c
 17040  010C18  0012               	return	
 17041                           
 17042                           ; BSR set to: 13
 17043  010C1A  010D               	movlb	13	; () banked
 17044  010C1C  5134               	movf	52,w,b	;volatile
 17045  010C1E  0B0F               	andlw	15
 17046  010C20  0900               	iorlw	0
 17047  010C22  B4D8               	btfsc	status,2,c
 17048  010C24  0012               	return	
 17049                           
 17050                           ; BSR set to: 13
 17051  010C26  010D               	movlb	13	; () banked
 17052  010C28  5134               	movf	52,w,b	;volatile
 17053  010C2A  0B0F               	andlw	15
 17054  010C2C  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17055  010C2E  0E03               	movlw	3
 17056  010C30  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 17057  010C32  0012               	return	
 17058                           
 17059                           ; BSR set to: 13
 17060  010C34  0E20               	movlw	32
 17061  010C36  181D               	xorwf	_USBDeviceState,w,c	;volatile
 17062  010C38  A4D8               	btfss	status,2,c
 17063  010C3A  0012               	return	
 17064                           
 17065                           ; BSR set to: 13
 17066                           ;usb_device.c: 2817: {
 17067                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 17068  010C3C  8E28               	bsf	_inPipes+3,7,c	;volatile
 17069                           
 17070                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 17071  010C3E  010D               	movlb	13	; () banked
 17072  010C40  BF34               	btfsc	52,7,b	;volatile
 17073  010C42  D01B               	goto	i2l5544
 17074                           
 17075                           ; BSR set to: 13
 17076                           ;usb_device.c: 2824: {
 17077                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 17078  010C44  010D               	movlb	13	; () banked
 17079  010C46  5134               	movf	52,w,b	;volatile
 17080  010C48  0B0F               	andlw	15
 17081  010C4A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17082  010C4C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17083  010C4E  0D02               	mullw	2
 17084  010C50  0ECF               	movlw	low _pBDTEntryOut
 17085  010C52  24F3               	addwf	prodl,w,c
 17086  010C54  6ED9               	movwf	fsr2l,c
 17087  010C56  0E00               	movlw	high _pBDTEntryOut
 17088  010C58  20F4               	addwfc	prodh,w,c
 17089  010C5A  6EDA               	movwf	fsr2h,c
 17090  010C5C  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 17091  010C60  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17092                           
 17093                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 17094  010C64  010D               	movlb	13	; () banked
 17095  010C66  5134               	movf	52,w,b	;volatile
 17096  010C68  0B0F               	andlw	15
 17097  010C6A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17098  010C6C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17099  010C6E  0D01               	mullw	1
 17100  010C70  0ED5               	movlw	low _ep_data_out
 17101  010C72  24F3               	addwf	prodl,w,c
 17102  010C74  6ED9               	movwf	fsr2l,c
 17103  010C76  0E00               	movlw	high _ep_data_out
 17104  010C78  D01A               	goto	L7
 17105  010C7A                     i2l5544:
 17106                           
 17107                           ; BSR set to: 13
 17108                           ;usb_device.c: 2828: else
 17109                           ;usb_device.c: 2829: {
 17110                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 17111  010C7A  010D               	movlb	13	; () banked
 17112  010C7C  5134               	movf	52,w,b	;volatile
 17113  010C7E  0B0F               	andlw	15
 17114  010C80  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17115  010C82  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17116  010C84  0D02               	mullw	2
 17117  010C86  0E0A               	movlw	low _pBDTEntryIn
 17118  010C88  24F3               	addwf	prodl,w,c
 17119  010C8A  6ED9               	movwf	fsr2l,c
 17120  010C8C  0E00               	movlw	high _pBDTEntryIn
 17121  010C8E  20F4               	addwfc	prodh,w,c
 17122  010C90  6EDA               	movwf	fsr2h,c
 17123  010C92  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 17124  010C96  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 17125                           
 17126                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 17127  010C9A  010D               	movlb	13	; () banked
 17128  010C9C  5134               	movf	52,w,b	;volatile
 17129  010C9E  0B0F               	andlw	15
 17130  010CA0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17131  010CA2  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17132  010CA4  0D01               	mullw	1
 17133  010CA6  0E10               	movlw	low _ep_data_in
 17134  010CA8  24F3               	addwf	prodl,w,c
 17135  010CAA  6ED9               	movwf	fsr2l,c
 17136  010CAC  0E00               	movlw	high _ep_data_in
 17137  010CAE                     L7:
 17138  010CAE  20F4               	addwfc	prodh,w,c
 17139  010CB0  6EDA               	movwf	fsr2h,c
 17140  010CB2  50DF               	movf	indf2,w,c
 17141  010CB4  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 17142  010CB6  D000               	goto	i2l5546
 17143  010CB8                     i2l5546:
 17144                           
 17145                           ; BSR set to: 13
 17146                           ;usb_device.c: 2832: }
 17147                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 17148  010CB8  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 17149  010CBA  D002               	goto	i2l5550
 17150                           
 17151                           ; BSR set to: 13
 17152                           ;usb_device.c: 2839: {
 17153                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 17154  010CBC  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 17155                           
 17156                           ;usb_device.c: 2841: }
 17157  010CBE  D002               	goto	i2l5552
 17158  010CC0                     i2l5550:
 17159                           
 17160                           ; BSR set to: 13
 17161                           ;usb_device.c: 2842: else
 17162                           ;usb_device.c: 2843: {
 17163                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 17164  010CC0  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 17165  010CC2  D000               	goto	i2l5552
 17166  010CC4                     i2l5552:
 17167                           
 17168                           ; BSR set to: 13
 17169                           ;usb_device.c: 2845: }
 17170                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 17171  010CC4  010D               	movlb	13	; () banked
 17172  010CC6  BF34               	btfsc	52,7,b	;volatile
 17173  010CC8  D00B               	goto	i2l5556
 17174                           
 17175                           ; BSR set to: 13
 17176                           ;usb_device.c: 2851: {
 17177                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17178  010CCA  010D               	movlb	13	; () banked
 17179  010CCC  5134               	movf	52,w,b	;volatile
 17180  010CCE  0B0F               	andlw	15
 17181  010CD0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17182  010CD2  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17183  010CD4  0D02               	mullw	2
 17184  010CD6  0ECF               	movlw	low _pBDTEntryOut
 17185  010CD8  24F3               	addwf	prodl,w,c
 17186  010CDA  6ED9               	movwf	fsr2l,c
 17187  010CDC  0E00               	movlw	high _pBDTEntryOut
 17188  010CDE  D00A               	goto	L8
 17189  010CE0                     i2l5556:
 17190                           
 17191                           ; BSR set to: 13
 17192                           ;usb_device.c: 2854: else
 17193                           ;usb_device.c: 2855: {
 17194                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 17195  010CE0  010D               	movlb	13	; () banked
 17196  010CE2  5134               	movf	52,w,b	;volatile
 17197  010CE4  0B0F               	andlw	15
 17198  010CE6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17199  010CE8  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17200  010CEA  0D02               	mullw	2
 17201  010CEC  0E0A               	movlw	low _pBDTEntryIn
 17202  010CEE  24F3               	addwf	prodl,w,c
 17203  010CF0  6ED9               	movwf	fsr2l,c
 17204  010CF2  0E00               	movlw	high _pBDTEntryIn
 17205  010CF4                     L8:
 17206  010CF4  20F4               	addwfc	prodh,w,c
 17207  010CF6  6EDA               	movwf	fsr2h,c
 17208  010CF8  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 17209  010CFC  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 17210  010D00  D000               	goto	i2l5558
 17211  010D02                     i2l5558:
 17212                           
 17213                           ; BSR set to: 13
 17214                           ;usb_device.c: 2857: }
 17215                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 17216  010D02  0E03               	movlw	3
 17217  010D04  010D               	movlb	13	; () banked
 17218  010D06  1931               	xorwf	49,w,b	;volatile
 17219  010D08  A4D8               	btfss	status,2,c
 17220  010D0A  D032               	goto	i2l5572
 17221                           
 17222                           ; BSR set to: 13
 17223                           ;usb_device.c: 2861: {
 17224                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 17225  010D0C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17226  010D10  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17227  010D14  AEDF               	btfss	indf2,7,c
 17228  010D16  D01F               	goto	i2l5568
 17229                           
 17230                           ; BSR set to: 13
 17231                           ;usb_device.c: 2863: {
 17232                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 17233  010D18  010D               	movlb	13	; () banked
 17234  010D1A  BF34               	btfsc	52,7,b	;volatile
 17235  010D1C  D00E               	goto	i2l5566
 17236                           
 17237                           ; BSR set to: 13
 17238                           ;usb_device.c: 2867: {
 17239                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17240  010D1E  010D               	movlb	13	; () banked
 17241  010D20  5134               	movf	52,w,b	;volatile
 17242  010D22  0B0F               	andlw	15
 17243  010D24  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17244  010D26  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17245  010D28  0D01               	mullw	1
 17246  010D2A  0ED5               	movlw	low _ep_data_out
 17247  010D2C  24F3               	addwf	prodl,w,c
 17248  010D2E  6ED9               	movwf	fsr2l,c
 17249  010D30  0E00               	movlw	high _ep_data_out
 17250  010D32  20F4               	addwfc	prodh,w,c
 17251  010D34  6EDA               	movwf	fsr2h,c
 17252  010D36  0100               	movlb	0	; () banked
 17253  010D38  D00C               	goto	L9
 17254  010D3A                     i2l5566:
 17255                           
 17256                           ;usb_device.c: 2870: else
 17257                           ;usb_device.c: 2871: {
 17258                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 17259  010D3A  010D               	movlb	13	; () banked
 17260  010D3C  5134               	movf	52,w,b	;volatile
 17261  010D3E  0B0F               	andlw	15
 17262  010D40  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17263  010D42  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17264  010D44  0D01               	mullw	1
 17265  010D46  0E10               	movlw	low _ep_data_in
 17266  010D48  24F3               	addwf	prodl,w,c
 17267  010D4A  6ED9               	movwf	fsr2l,c
 17268  010D4C  0E00               	movlw	high _ep_data_in
 17269  010D4E  20F4               	addwfc	prodh,w,c
 17270  010D50  6EDA               	movwf	fsr2h,c
 17271  010D52                     L9:
 17272  010D52  82DF               	bsf	indf2,1,c
 17273                           
 17274                           ; BSR set to: 13
 17275  010D54  D000               	goto	i2l5568
 17276  010D56                     i2l5568:
 17277                           
 17278                           ;usb_device.c: 2873: }
 17279                           ;usb_device.c: 2874: }
 17280                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 17281  010D56  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17282  010D5A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17283  010D5E  0E00               	movlw	0
 17284  010D60  84DB               	bsf	plusw2,2,c
 17285                           
 17286                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 17287  010D62  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17288  010D66  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17289  010D6A  0E00               	movlw	0
 17290  010D6C  8EDB               	bsf	plusw2,7,c
 17291                           
 17292                           ;usb_device.c: 2879: }
 17293  010D6E  0012               	return	
 17294  010D70                     i2l5572:
 17295                           
 17296                           ;usb_device.c: 2880: else
 17297                           ;usb_device.c: 2881: {
 17298                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17299  010D70  0E04               	movlw	4
 17300  010D72  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 17301                           
 17302                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 17303  010D74  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17304  010D78  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17305  010D7C  AEDF               	btfss	indf2,7,c
 17306  010D7E  D01B               	goto	i2l5582
 17307                           
 17308                           ;usb_device.c: 2888: {
 17309                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 17310  010D80  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17311  010D84  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17312  010D88  0E7F               	movlw	127
 17313  010D8A  16DF               	andwf	indf2,f,c
 17314                           
 17315                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 17316  010D8C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17317  010D90  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17318  010D94  0E00               	movlw	0
 17319  010D96  8CDB               	bsf	plusw2,6,c
 17320                           
 17321                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17322  010D98  0E00               	movlw	0
 17323  010D9A  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17324  010D9C  0E05               	movlw	5
 17325  010D9E  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17326  010DA0  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17327  010DA4  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17328  010DA8  0E00               	movlw	0
 17329  010DAA  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17330  010DAC  0E02               	movlw	2
 17331  010DAE  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17332  010DB0  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17333                           
 17334                           ;usb_device.c: 2894: }
 17335  010DB4  D007               	goto	i2l5584
 17336  010DB6                     i2l5582:
 17337                           
 17338                           ;usb_device.c: 2895: else
 17339                           ;usb_device.c: 2896: {
 17340                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 17341  010DB6  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17342  010DBA  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17343  010DBE  0E00               	movlw	0
 17344  010DC0  8CDB               	bsf	plusw2,6,c
 17345  010DC2  D000               	goto	i2l5584
 17346  010DC4                     i2l5584:
 17347                           
 17348                           ;usb_device.c: 2899: }
 17349                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 17350  010DC4  0E04               	movlw	4
 17351  010DC6  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 17352                           
 17353                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 17354  010DC8  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 17355  010DCA  D006               	goto	i2l379
 17356  010DCC  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17357  010DD0  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17358  010DD4  AEDF               	btfss	indf2,7,c
 17359  010DD6  D034               	goto	i2l5598
 17360  010DD8                     i2l379:
 17361                           
 17362                           ;usb_device.c: 2910: {
 17363                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 17364  010DD8  010D               	movlb	13	; () banked
 17365  010DDA  BF34               	btfsc	52,7,b	;volatile
 17366  010DDC  D00E               	goto	i2l5592
 17367                           
 17368                           ; BSR set to: 13
 17369                           ;usb_device.c: 2912: {
 17370                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17371  010DDE  010D               	movlb	13	; () banked
 17372  010DE0  5134               	movf	52,w,b	;volatile
 17373  010DE2  0B0F               	andlw	15
 17374  010DE4  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17375  010DE6  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17376  010DE8  0D01               	mullw	1
 17377  010DEA  0ED5               	movlw	low _ep_data_out
 17378  010DEC  24F3               	addwf	prodl,w,c
 17379  010DEE  6ED9               	movwf	fsr2l,c
 17380  010DF0  0E00               	movlw	high _ep_data_out
 17381  010DF2  20F4               	addwfc	prodh,w,c
 17382  010DF4  6EDA               	movwf	fsr2h,c
 17383  010DF6  0100               	movlb	0	; () banked
 17384  010DF8  D00C               	goto	L10
 17385  010DFA                     i2l5592:
 17386                           
 17387                           ;usb_device.c: 2915: else
 17388                           ;usb_device.c: 2916: {
 17389                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 17390  010DFA  010D               	movlb	13	; () banked
 17391  010DFC  5134               	movf	52,w,b	;volatile
 17392  010DFE  0B0F               	andlw	15
 17393  010E00  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17394  010E02  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17395  010E04  0D01               	mullw	1
 17396  010E06  0E10               	movlw	low _ep_data_in
 17397  010E08  24F3               	addwf	prodl,w,c
 17398  010E0A  6ED9               	movwf	fsr2l,c
 17399  010E0C  0E00               	movlw	high _ep_data_in
 17400  010E0E  20F4               	addwfc	prodh,w,c
 17401  010E10  6EDA               	movwf	fsr2h,c
 17402  010E12                     L10:
 17403  010E12  92DF               	bcf	indf2,1,c
 17404  010E14  D000               	goto	i2l5594
 17405  010E16                     i2l5594:
 17406                           
 17407                           ;usb_device.c: 2918: }
 17408                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17409  010E16  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17410  010E1A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17411  010E1E  0E3B               	movlw	59
 17412  010E20  16DF               	andwf	indf2,f,c
 17413                           
 17414                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 17415  010E22  0E00               	movlw	0
 17416  010E24  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17417  010E26  0E05               	movlw	5
 17418  010E28  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17419  010E2A  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 17420  010E2E  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 17421  010E32  0E00               	movlw	0
 17422  010E34  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17423  010E36  0E02               	movlw	2
 17424  010E38  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17425  010E3A  ECF1  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17426                           
 17427                           ;usb_device.c: 2924: }
 17428  010E3E  D007               	goto	i2l5600
 17429  010E40                     i2l5598:
 17430                           
 17431                           ;usb_device.c: 2925: else
 17432                           ;usb_device.c: 2926: {
 17433                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 17434  010E40  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 17435  010E44  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 17436  010E48  0E3B               	movlw	59
 17437  010E4A  16DF               	andwf	indf2,f,c
 17438  010E4C  D000               	goto	i2l5600
 17439  010E4E                     i2l5600:
 17440                           
 17441                           ;usb_device.c: 2929: }
 17442                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 17443  010E4E  010D               	movlb	13	; () banked
 17444  010E50  5134               	movf	52,w,b	;volatile
 17445  010E52  0B0F               	andlw	15
 17446  010E54  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 17447  010E56  5041               	movf	??_USBStdFeatureReqHandler,w,c
 17448  010E58  0D01               	mullw	1
 17449  010E5A  0E26               	movlw	38
 17450  010E5C  24F3               	addwf	prodl,w,c
 17451  010E5E  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 17452  010E60  0E0F               	movlw	15
 17453  010E62  20F4               	addwfc	prodh,w,c
 17454  010E64  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 17455                           
 17456                           ; BSR set to: 13
 17457                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 17458  010E66  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 17459  010E6A  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 17460  010E6E  0EFE               	movlw	254
 17461  010E70  16DF               	andwf	indf2,f,c
 17462                           
 17463                           ; BSR set to: 13
 17464  010E72  0012               	return	
 17465                           
 17466                           ; BSR set to: 13
 17467  010E74  0012               	return		;funcret
 17468  010E76                     __end_of_USBStdFeatureReqHandler:
 17469                           	opt stack 0
 17470                           pclatu	equ	0xFFB
 17471                           pclath	equ	0xFFA
 17472                           tblptru	equ	0xFF8
 17473                           tblptrh	equ	0xFF7
 17474                           tblptrl	equ	0xFF6
 17475                           tablat	equ	0xFF5
 17476                           prodh	equ	0xFF4
 17477                           prodl	equ	0xFF3
 17478                           intcon	equ	0xFF2
 17479                           intcon2	equ	0xFF1
 17480                           indf0	equ	0xFEF
 17481                           postinc0	equ	0xFEE
 17482                           fsr0h	equ	0xFEA
 17483                           fsr0l	equ	0xFE9
 17484                           wreg	equ	0xFE8
 17485                           indf1	equ	0xFE7
 17486                           postinc1	equ	0xFE6
 17487                           postdec1	equ	0xFE5
 17488                           fsr1h	equ	0xFE2
 17489                           fsr1l	equ	0xFE1
 17490                           indf2	equ	0xFDF
 17491                           postinc2	equ	0xFDE
 17492                           postdec2	equ	0xFDD
 17493                           plusw2	equ	0xFDB
 17494                           fsr2h	equ	0xFDA
 17495                           fsr2l	equ	0xFD9
 17496                           status	equ	0xFD8
 17497                           
 17498 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 17499 ;; Defined at:
 17500 ;;		line 43 in file "../My_library/usb_cdc/My_usb_cdc.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;  event           2   12[COMRAM] enum E9723
 17503 ;;  pdata           2   14[COMRAM] PTR void 
 17504 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 17505 ;;  size            2   16[COMRAM] unsigned int 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;		None
 17508 ;; Return value:  Size  Location     Type
 17509 ;;                  1    wreg      unsigned char 
 17510 ;; Registers used:
 17511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;Total ram usage:        8 bytes
 17522 ;; Hardware stack levels used:    1
 17523 ;; Hardware stack levels required when called:    3
 17524 ;; This function calls:
 17525 ;;		_CDCInitEP
 17526 ;;		_USBCheckCDCRequest
 17527 ;; This function is called by:
 17528 ;;		_USBDeviceTasks
 17529 ;;		_USBStdSetCfgHandler
 17530 ;;		_USBSuspend
 17531 ;;		_USBWakeFromSuspend
 17532 ;;		_USBCtrlTrfSetupHandler
 17533 ;;		_USBCheckStdRequest
 17534 ;;		_USBStdFeatureReqHandler
 17535 ;; This function uses a non-reentrant model
 17536 ;;
 17537                           
 17538                           	psect	text82
 17539  013DE2                     __ptext82:
 17540                           	opt stack 0
 17541  013DE2                     _USER_USB_CALLBACK_EVENT_HANDLER:
 17542                           	opt stack 15
 17543                           
 17544                           ;My_usb_cdc.c: 44: switch ((int) event) {
 17545                           
 17546                           ;incstack = 0
 17547  013DE2  D006               	goto	i2l5194
 17548  013DE4                     i2l5188:
 17549                           
 17550                           ;My_usb_cdc.c: 46: CDCInitEP();
 17551  013DE4  ECEA  F09B         	call	_CDCInitEP	;wreg free
 17552                           
 17553                           ;My_usb_cdc.c: 47: break;
 17554  013DE8  0012               	return	
 17555  013DEA                     i2l5190:
 17556                           
 17557                           ;My_usb_cdc.c: 49: USBCheckCDCRequest();
 17558  013DEA  EC0A  F097         	call	_USBCheckCDCRequest	;wreg free
 17559                           
 17560                           ;My_usb_cdc.c: 51: }
 17561                           
 17562                           ;My_usb_cdc.c: 50: break;
 17563  013DEE  0012               	return	
 17564  013DF0                     i2l5194:
 17565  013DF0  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 17566  013DF4  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 17567                           
 17568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17569                           ; Switch size 1, requested type "space"
 17570                           ; Number of cases is 1, Range of values is 0 to 0
 17571                           ; switch strategies available:
 17572                           ; Name         Instructions Cycles
 17573                           ; simple_byte            4     3 (average)
 17574                           ;	Chosen strategy is simple_byte
 17575  013DF8  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 17576  013DFA  0A00               	xorlw	0	; case 0
 17577  013DFC  A4D8               	btfss	status,2,c
 17578  013DFE  0012               	return	
 17579                           
 17580                           ; Switch size 1, requested type "space"
 17581                           ; Number of cases is 2, Range of values is 1 to 3
 17582                           ; switch strategies available:
 17583                           ; Name         Instructions Cycles
 17584                           ; simple_byte            7     4 (average)
 17585                           ;	Chosen strategy is simple_byte
 17586  013E00  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 17587  013E02  0A01               	xorlw	1	; case 1
 17588  013E04  B4D8               	btfsc	status,2,c
 17589  013E06  D7EE               	goto	i2l5188
 17590  013E08  0A02               	xorlw	2	; case 3
 17591  013E0A  A4D8               	btfss	status,2,c
 17592  013E0C  0012               	return	
 17593  013E0E  D7ED               	goto	i2l5190
 17594                           
 17595                           ;My_usb_cdc.c: 52: return 1;
 17596                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 17597  013E10  0012               	return		;funcret
 17598  013E12                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 17599                           	opt stack 0
 17600                           pclatu	equ	0xFFB
 17601                           pclath	equ	0xFFA
 17602                           tblptru	equ	0xFF8
 17603                           tblptrh	equ	0xFF7
 17604                           tblptrl	equ	0xFF6
 17605                           tablat	equ	0xFF5
 17606                           prodh	equ	0xFF4
 17607                           prodl	equ	0xFF3
 17608                           intcon	equ	0xFF2
 17609                           intcon2	equ	0xFF1
 17610                           indf0	equ	0xFEF
 17611                           postinc0	equ	0xFEE
 17612                           fsr0h	equ	0xFEA
 17613                           fsr0l	equ	0xFE9
 17614                           wreg	equ	0xFE8
 17615                           indf1	equ	0xFE7
 17616                           postinc1	equ	0xFE6
 17617                           postdec1	equ	0xFE5
 17618                           fsr1h	equ	0xFE2
 17619                           fsr1l	equ	0xFE1
 17620                           indf2	equ	0xFDF
 17621                           postinc2	equ	0xFDE
 17622                           postdec2	equ	0xFDD
 17623                           plusw2	equ	0xFDB
 17624                           fsr2h	equ	0xFDA
 17625                           fsr2l	equ	0xFD9
 17626                           status	equ	0xFD8
 17627                           
 17628 ;; *************** function _USBCheckCDCRequest *****************
 17629 ;; Defined at:
 17630 ;;		line 204 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 17631 ;; Parameters:    Size  Location     Type
 17632 ;;		None
 17633 ;; Auto vars:     Size  Location     Type
 17634 ;;		None
 17635 ;; Return value:  Size  Location     Type
 17636 ;;		None               void
 17637 ;; Registers used:
 17638 ;;		wreg, status,2, status,0
 17639 ;; Tracked objects:
 17640 ;;		On entry : 0/0
 17641 ;;		On exit  : 0/0
 17642 ;;		Unchanged: 0/0
 17643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17648 ;;Total ram usage:        0 bytes
 17649 ;; Hardware stack levels used:    1
 17650 ;; This function calls:
 17651 ;;		Nothing
 17652 ;; This function is called by:
 17653 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17654 ;; This function uses a non-reentrant model
 17655 ;;
 17656                           
 17657                           	psect	text83
 17658  012E14                     __ptext83:
 17659                           	opt stack 0
 17660  012E14                     _USBCheckCDCRequest:
 17661                           	opt stack 17
 17662                           
 17663                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 17664                           
 17665                           ;incstack = 0
 17666  012E14  010D               	movlb	13	; () banked
 17667  012E16  5130               	movf	48,w,b	;volatile
 17668  012E18  0B1F               	andlw	31
 17669  012E1A  06E8               	decf	wreg,f,c
 17670  012E1C  A4D8               	btfss	status,2,c
 17671  012E1E  0012               	return	
 17672  012E20  D001               	goto	i2l5034
 17673                           
 17674                           ; BSR set to: 13
 17675  012E22  0012               	return	
 17676  012E24                     i2l5034:
 17677                           
 17678                           ; BSR set to: 13
 17679                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 17680  012E24  010D               	movlb	13	; () banked
 17681  012E26  3930               	swapf	48,w,b	;volatile
 17682  012E28  32E8               	rrcf	wreg,f,c
 17683  012E2A  0B03               	andlw	3
 17684  012E2C  06E8               	decf	wreg,f,c
 17685  012E2E  A4D8               	btfss	status,2,c
 17686  012E30  0012               	return	
 17687  012E32  D001               	goto	i2l5038
 17688                           
 17689                           ; BSR set to: 13
 17690  012E34  0012               	return	
 17691  012E36                     i2l5038:
 17692                           
 17693                           ; BSR set to: 13
 17694                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 17695                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 17696  012E36  010D               	movlb	13	; () banked
 17697  012E38  5134               	movf	52,w,b	;volatile
 17698  012E3A  B4D8               	btfsc	status,2,c
 17699  012E3C  D037               	goto	i2l5068
 17700                           
 17701                           ; BSR set to: 13
 17702  012E3E  010D               	movlb	13	; () banked
 17703  012E40  0534               	decf	52,w,b	;volatile
 17704  012E42  A4D8               	btfss	status,2,c
 17705  012E44  0012               	return	
 17706  012E46  D032               	goto	i2l5068
 17707                           
 17708                           ; BSR set to: 13
 17709  012E48  0012               	return	
 17710                           
 17711                           ; BSR set to: 13
 17712                           ;usb_device_cdc.c: 223: switch(SetupPkt.bRequest)
 17713  012E4A  D030               	goto	i2l5068
 17714  012E4C                     i2l5044:
 17715                           
 17716                           ; BSR set to: 13
 17717                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17718  012E4C  0E54               	movlw	low _dummy_encapsulated_cmd_response
 17719  012E4E  6E25               	movwf	_inPipes,c	;volatile
 17720  012E50  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17721  012E52  6E26               	movwf	_inPipes+1,c	;volatile
 17722                           
 17723                           ; BSR set to: 13
 17724                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 17725  012E54  0E00               	movlw	0
 17726  012E56  6E2A               	movwf	_inPipes+5,c	;volatile
 17727  012E58  0E08               	movlw	8
 17728  012E5A  6E29               	movwf	_inPipes+4,c	;volatile
 17729                           
 17730                           ; BSR set to: 13
 17731                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17732  012E5C  8028               	bsf	_inPipes+3,0,c	;volatile
 17733                           
 17734                           ; BSR set to: 13
 17735                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 17736  012E5E  8E28               	bsf	_inPipes+3,7,c	;volatile
 17737                           
 17738                           ;usb_device_cdc.c: 232: break;
 17739  012E60  0012               	return	
 17740  012E62                     i2l5052:
 17741                           
 17742                           ; BSR set to: 13
 17743                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 17744  012E62  0E54               	movlw	low _dummy_encapsulated_cmd_response
 17745  012E64  6E25               	movwf	_inPipes,c	;volatile
 17746  012E66  0E01               	movlw	high _dummy_encapsulated_cmd_response
 17747  012E68  6E26               	movwf	_inPipes+1,c	;volatile
 17748                           
 17749                           ; BSR set to: 13
 17750                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 17751  012E6A  8E28               	bsf	_inPipes+3,7,c	;volatile
 17752                           
 17753                           ;usb_device_cdc.c: 237: break;
 17754  012E6C  0012               	return	
 17755  012E6E                     i2l436:
 17756                           
 17757                           ; BSR set to: 13
 17758                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 17759  012E6E  CD36 F005          	movff	3382,_outPipes+4	;volatile
 17760  012E72  CD37 F006          	movff	3383,_outPipes+5	;volatile
 17761                           
 17762                           ; BSR set to: 13
 17763                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 17764  012E76  0E84               	movlw	low _line_coding
 17765  012E78  6E01               	movwf	_outPipes,c	;volatile
 17766  012E7A  0E01               	movlw	high _line_coding
 17767  012E7C  6E02               	movwf	_outPipes+1,c	;volatile
 17768                           
 17769                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 17770  012E7E  0E00               	movlw	0
 17771  012E80  6E07               	movwf	_outPipes+6,c	;volatile
 17772  012E82  0E00               	movlw	0
 17773  012E84  6E08               	movwf	_outPipes+7,c	;volatile
 17774  012E86  0E00               	movlw	0
 17775  012E88  6E09               	movwf	_outPipes+8,c	;volatile
 17776                           
 17777                           ; BSR set to: 13
 17778                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 17779  012E8A  8E04               	bsf	_outPipes+3,7,c	;volatile
 17780                           
 17781                           ;usb_device_cdc.c: 246: break;
 17782  012E8C  0012               	return	
 17783  012E8E                     i2l5060:
 17784                           
 17785                           ; BSR set to: 13
 17786                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 17787  012E8E  0E84               	movlw	low _line_coding
 17788  012E90  6E25               	movwf	_inPipes,c	;volatile
 17789  012E92  0E01               	movlw	high _line_coding
 17790  012E94  6E26               	movwf	_inPipes+1,c	;volatile
 17791                           
 17792                           ; BSR set to: 13
 17793  012E96  0E00               	movlw	0
 17794  012E98  6E2A               	movwf	_inPipes+5,c	;volatile
 17795  012E9A  0E07               	movlw	7
 17796  012E9C  6E29               	movwf	_inPipes+4,c	;volatile
 17797                           
 17798                           ; BSR set to: 13
 17799  012E9E  0EC1               	movlw	193
 17800  012EA0  6E28               	movwf	_inPipes+3,c	;volatile
 17801                           
 17802                           ;usb_device_cdc.c: 253: break;
 17803  012EA2  0012               	return	
 17804  012EA4                     i2l438:
 17805                           
 17806                           ; BSR set to: 13
 17807                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 17808  012EA4  CD32 F0EC          	movff	3378,_control_signal_bitmap	;volatile
 17809                           
 17810                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 17811  012EA8  8E28               	bsf	_inPipes+3,7,c	;volatile
 17812                           
 17813                           ; BSR set to: 13
 17814                           ;usb_device_cdc.c: 315: }
 17815                           
 17816                           ; BSR set to: 13
 17817                           ;usb_device_cdc.c: 314: break;
 17818                           
 17819                           ;usb_device_cdc.c: 313: default:
 17820                           
 17821                           ;usb_device_cdc.c: 289: break;
 17822  012EAA  0012               	return	
 17823  012EAC                     i2l5068:
 17824                           
 17825                           ; BSR set to: 13
 17826  012EAC  010D               	movlb	13	; () banked
 17827  012EAE  5131               	movf	49,w,b	;volatile
 17828                           
 17829                           ; Switch size 1, requested type "space"
 17830                           ; Number of cases is 5, Range of values is 0 to 34
 17831                           ; switch strategies available:
 17832                           ; Name         Instructions Cycles
 17833                           ; simple_byte           16     9 (average)
 17834                           ;	Chosen strategy is simple_byte
 17835  012EB0  0A00               	xorlw	0	; case 0
 17836  012EB2  B4D8               	btfsc	status,2,c
 17837  012EB4  D7CB               	goto	i2l5044
 17838  012EB6  0A01               	xorlw	1	; case 1
 17839  012EB8  B4D8               	btfsc	status,2,c
 17840  012EBA  D7D3               	goto	i2l5052
 17841  012EBC  0A21               	xorlw	33	; case 32
 17842  012EBE  B4D8               	btfsc	status,2,c
 17843  012EC0  D7D6               	goto	i2l436
 17844  012EC2  0A01               	xorlw	1	; case 33
 17845  012EC4  B4D8               	btfsc	status,2,c
 17846  012EC6  D7E3               	goto	i2l5060
 17847  012EC8  0A03               	xorlw	3	; case 34
 17848  012ECA  A4D8               	btfss	status,2,c
 17849  012ECC  0012               	return	
 17850  012ECE  D7EA               	goto	i2l438
 17851                           
 17852                           ; BSR set to: 13
 17853                           
 17854                           ; BSR set to: 13
 17855  012ED0  0012               	return		;funcret
 17856  012ED2                     __end_of_USBCheckCDCRequest:
 17857                           	opt stack 0
 17858                           pclatu	equ	0xFFB
 17859                           pclath	equ	0xFFA
 17860                           tblptru	equ	0xFF8
 17861                           tblptrh	equ	0xFF7
 17862                           tblptrl	equ	0xFF6
 17863                           tablat	equ	0xFF5
 17864                           prodh	equ	0xFF4
 17865                           prodl	equ	0xFF3
 17866                           intcon	equ	0xFF2
 17867                           intcon2	equ	0xFF1
 17868                           indf0	equ	0xFEF
 17869                           postinc0	equ	0xFEE
 17870                           fsr0h	equ	0xFEA
 17871                           fsr0l	equ	0xFE9
 17872                           wreg	equ	0xFE8
 17873                           indf1	equ	0xFE7
 17874                           postinc1	equ	0xFE6
 17875                           postdec1	equ	0xFE5
 17876                           fsr1h	equ	0xFE2
 17877                           fsr1l	equ	0xFE1
 17878                           indf2	equ	0xFDF
 17879                           postinc2	equ	0xFDE
 17880                           postdec2	equ	0xFDD
 17881                           plusw2	equ	0xFDB
 17882                           fsr2h	equ	0xFDA
 17883                           fsr2l	equ	0xFD9
 17884                           status	equ	0xFD8
 17885                           
 17886 ;; *************** function _CDCInitEP *****************
 17887 ;; Defined at:
 17888 ;;		line 351 in file "../My_library/usb_cdc/usb/usb_device_cdc.c"
 17889 ;; Parameters:    Size  Location     Type
 17890 ;;		None
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;		None
 17893 ;; Return value:  Size  Location     Type
 17894 ;;		None               void
 17895 ;; Registers used:
 17896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17897 ;; Tracked objects:
 17898 ;;		On entry : 0/0
 17899 ;;		On exit  : 0/0
 17900 ;;		Unchanged: 0/0
 17901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17906 ;;Total ram usage:        0 bytes
 17907 ;; Hardware stack levels used:    1
 17908 ;; Hardware stack levels required when called:    2
 17909 ;; This function calls:
 17910 ;;		_USBEnableEndpoint
 17911 ;;		i2_USBTransferOnePacket
 17912 ;; This function is called by:
 17913 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17914 ;; This function uses a non-reentrant model
 17915 ;;
 17916                           
 17917                           	psect	text84
 17918  0137D4                     __ptext84:
 17919                           	opt stack 0
 17920  0137D4                     _CDCInitEP:
 17921                           	opt stack 15
 17922                           
 17923                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 17924                           
 17925                           ; BSR set to: 13
 17926                           ;incstack = 0
 17927  0137D4  0E00               	movlw	0
 17928  0137D6  0101               	movlb	1	; () banked
 17929  0137D8  6F84               	movwf	_line_coding& (0+255),b
 17930  0137DA  0E4B               	movlw	75
 17931  0137DC  6F85               	movwf	(_line_coding+1)& (0+255),b
 17932  0137DE  0E00               	movlw	0
 17933  0137E0  6F86               	movwf	(_line_coding+2)& (0+255),b
 17934  0137E2  0E00               	movlw	0
 17935  0137E4  6F87               	movwf	(_line_coding+3)& (0+255),b
 17936                           
 17937                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 17938  0137E6  0E00               	movlw	0
 17939  0137E8  0101               	movlb	1	; () banked
 17940  0137EA  6F88               	movwf	(_line_coding+4)& (0+255),b
 17941                           
 17942                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 17943  0137EC  0E00               	movlw	0
 17944  0137EE  0101               	movlb	1	; () banked
 17945  0137F0  6F89               	movwf	(_line_coding+5)& (0+255),b
 17946                           
 17947                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 17948  0137F2  0E08               	movlw	8
 17949  0137F4  0101               	movlb	1	; () banked
 17950  0137F6  6F8A               	movwf	(_line_coding+6)& (0+255),b
 17951                           
 17952                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 17953  0137F8  0E00               	movlw	0
 17954  0137FA  0100               	movlb	0	; () banked
 17955  0137FC  6FEA               	movwf	_cdc_rx_len& (0+255),b
 17956                           
 17957                           ; BSR set to: 0
 17958                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 17959  0137FE  0E1A               	movlw	26
 17960  013800  6E35               	movwf	USBEnableEndpoint@options,c
 17961  013802  0E01               	movlw	1
 17962  013804  ECDD  F09D         	call	_USBEnableEndpoint
 17963                           
 17964                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 17965  013808  0E1E               	movlw	30
 17966  01380A  6E35               	movwf	USBEnableEndpoint@options,c
 17967  01380C  0E02               	movlw	2
 17968  01380E  ECDD  F09D         	call	_USBEnableEndpoint
 17969                           
 17970                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 17971  013812  0E00               	movlw	0
 17972  013814  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 17973  013816  0E00               	movlw	low _cdc_data_rx
 17974  013818  6E2E               	movwf	i2USBTransferOnePacket@data,c
 17975  01381A  0E02               	movlw	high _cdc_data_rx
 17976  01381C  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 17977  01381E  0E40               	movlw	64
 17978  013820  6E30               	movwf	i2USBTransferOnePacket@len,c
 17979  013822  0E02               	movlw	2
 17980  013824  EC4B  F096         	call	i2_USBTransferOnePacket
 17981  013828  C02D  F0E2         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 17982  01382C  C02E  F0E3         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 17983                           
 17984                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 17985  013830  0E00               	movlw	0
 17986  013832  0100               	movlb	0	; () banked
 17987  013834  6FE0               	movwf	_CDCDataInHandle& (0+255),b
 17988  013836  0E00               	movlw	0
 17989  013838  0100               	movlb	0	; () banked
 17990  01383A  6FE1               	movwf	(_CDCDataInHandle+1)& (0+255),b
 17991                           
 17992                           ; BSR set to: 0
 17993                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 17994  01383C  0E00               	movlw	0
 17995  01383E  6E21               	movwf	_cdc_trf_state,c
 17996                           
 17997                           ; BSR set to: 0
 17998  013840  0012               	return		;funcret
 17999  013842                     __end_of_CDCInitEP:
 18000                           	opt stack 0
 18001                           pclatu	equ	0xFFB
 18002                           pclath	equ	0xFFA
 18003                           tblptru	equ	0xFF8
 18004                           tblptrh	equ	0xFF7
 18005                           tblptrl	equ	0xFF6
 18006                           tablat	equ	0xFF5
 18007                           prodh	equ	0xFF4
 18008                           prodl	equ	0xFF3
 18009                           intcon	equ	0xFF2
 18010                           intcon2	equ	0xFF1
 18011                           indf0	equ	0xFEF
 18012                           postinc0	equ	0xFEE
 18013                           fsr0h	equ	0xFEA
 18014                           fsr0l	equ	0xFE9
 18015                           wreg	equ	0xFE8
 18016                           indf1	equ	0xFE7
 18017                           postinc1	equ	0xFE6
 18018                           postdec1	equ	0xFE5
 18019                           fsr1h	equ	0xFE2
 18020                           fsr1l	equ	0xFE1
 18021                           indf2	equ	0xFDF
 18022                           postinc2	equ	0xFDE
 18023                           postdec2	equ	0xFDD
 18024                           plusw2	equ	0xFDB
 18025                           fsr2h	equ	0xFDA
 18026                           fsr2l	equ	0xFD9
 18027                           status	equ	0xFD8
 18028                           
 18029 ;; *************** function i2_USBTransferOnePacket *****************
 18030 ;; Defined at:
 18031 ;;		line 995 in file "../My_library/usb_cdc/usb/usb_device.c"
 18032 ;; Parameters:    Size  Location     Type
 18033 ;;  ep              1    wreg     unsigned char 
 18034 ;;  dir             1    0[COMRAM] unsigned char 
 18035 ;;  data            2    1[COMRAM] PTR unsigned char 
 18036 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 18037 ;;  len             1    3[COMRAM] unsigned char 
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;  ep              1    4[COMRAM] unsigned char 
 18040 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 18041 ;;		 -> NULL(0), BDT(48), 
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  2    0[COMRAM] PTR void 
 18044 ;; Registers used:
 18045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18052 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18055 ;;Total ram usage:        7 bytes
 18056 ;; Hardware stack levels used:    1
 18057 ;; This function calls:
 18058 ;;		Nothing
 18059 ;; This function is called by:
 18060 ;;		_CDCInitEP
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           	psect	text85
 18065  012C96                     __ptext85:
 18066                           	opt stack 0
 18067  012C96                     i2_USBTransferOnePacket:
 18068                           	opt stack 16
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;incstack = 0
 18072                           ;i2USBTransferOnePacket@ep stored from wreg
 18073  012C96  6E31               	movwf	i2USBTransferOnePacket@ep,c
 18074                           
 18075                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 18076                           ;usb_device.c: 1000: if(dir != 0)
 18077  012C98  502D               	movf	i2USBTransferOnePacket@dir,w,c
 18078  012C9A  B4D8               	btfsc	status,2,c
 18079  012C9C  D007               	goto	i2l5004
 18080                           
 18081                           ;usb_device.c: 1001: {
 18082                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 18083  012C9E  5031               	movf	i2USBTransferOnePacket@ep,w,c
 18084  012CA0  0D02               	mullw	2
 18085  012CA2  0E0A               	movlw	low _pBDTEntryIn
 18086  012CA4  24F3               	addwf	prodl,w,c
 18087  012CA6  6ED9               	movwf	fsr2l,c
 18088  012CA8  0E00               	movlw	high _pBDTEntryIn
 18089  012CAA  D006               	goto	L11
 18090  012CAC                     i2l5004:
 18091                           
 18092                           ;usb_device.c: 1005: else
 18093                           ;usb_device.c: 1006: {
 18094                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 18095  012CAC  5031               	movf	i2USBTransferOnePacket@ep,w,c
 18096  012CAE  0D02               	mullw	2
 18097  012CB0  0ECF               	movlw	low _pBDTEntryOut
 18098  012CB2  24F3               	addwf	prodl,w,c
 18099  012CB4  6ED9               	movwf	fsr2l,c
 18100  012CB6  0E00               	movlw	high _pBDTEntryOut
 18101  012CB8                     L11:
 18102  012CB8  20F4               	addwfc	prodh,w,c
 18103  012CBA  6EDA               	movwf	fsr2h,c
 18104  012CBC  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 18105  012CC0  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 18106  012CC4  D000               	goto	i2l5006
 18107  012CC6                     i2l5006:
 18108                           
 18109                           ;usb_device.c: 1009: }
 18110                           ;usb_device.c: 1013: if(handle == 0)
 18111  012CC6  5032               	movf	i2USBTransferOnePacket@handle,w,c
 18112  012CC8  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 18113  012CCA  A4D8               	btfss	status,2,c
 18114  012CCC  D005               	goto	i2l5012
 18115                           
 18116                           ;usb_device.c: 1014: {
 18117                           ;usb_device.c: 1015: return 0;
 18118  012CCE  0E00               	movlw	0
 18119  012CD0  6E2D               	movwf	?i2_USBTransferOnePacket,c
 18120  012CD2  0E00               	movlw	0
 18121  012CD4  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 18122  012CD6  0012               	return	
 18123  012CD8                     i2l5012:
 18124                           
 18125                           ;usb_device.c: 1016: }
 18126                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 18127  012CD8  EE20 F002          	lfsr	2,2
 18128  012CDC  5032               	movf	i2USBTransferOnePacket@handle,w,c
 18129  012CDE  26D9               	addwf	fsr2l,f,c
 18130  012CE0  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 18131  012CE2  22DA               	addwfc	fsr2h,f,c
 18132  012CE4  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 18133  012CE8  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 18134                           
 18135                           ;usb_device.c: 1030: handle->CNT = len;
 18136  012CEC  EE20 F001          	lfsr	2,1
 18137  012CF0  5032               	movf	i2USBTransferOnePacket@handle,w,c
 18138  012CF2  26D9               	addwf	fsr2l,f,c
 18139  012CF4  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 18140  012CF6  22DA               	addwfc	fsr2h,f,c
 18141  012CF8  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 18142                           
 18143                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 18144  012CFC  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18145  012D00  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18146  012D04  0E40               	movlw	64
 18147  012D06  16DF               	andwf	indf2,f,c
 18148                           
 18149                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 18150  012D08  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18151  012D0C  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18152  012D10  0E00               	movlw	0
 18153  012D12  86DB               	bsf	plusw2,3,c
 18154                           
 18155                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 18156  012D14  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 18157  012D18  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 18158  012D1C  0E00               	movlw	0
 18159  012D1E  8EDB               	bsf	plusw2,7,c
 18160                           
 18161                           ;usb_device.c: 1036: if(dir != 0)
 18162  012D20  502D               	movf	i2USBTransferOnePacket@dir,w,c
 18163  012D22  B4D8               	btfsc	status,2,c
 18164  012D24  D007               	goto	i2l5024
 18165                           
 18166                           ;usb_device.c: 1037: {
 18167                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 18168  012D26  5031               	movf	i2USBTransferOnePacket@ep,w,c
 18169  012D28  0D02               	mullw	2
 18170  012D2A  0E0A               	movlw	low _pBDTEntryIn
 18171  012D2C  24F3               	addwf	prodl,w,c
 18172  012D2E  6ED9               	movwf	fsr2l,c
 18173  012D30  0E00               	movlw	high _pBDTEntryIn
 18174  012D32  D006               	goto	L12
 18175  012D34                     i2l5024:
 18176                           
 18177                           ;usb_device.c: 1041: else
 18178                           ;usb_device.c: 1042: {
 18179                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 18180  012D34  5031               	movf	i2USBTransferOnePacket@ep,w,c
 18181  012D36  0D02               	mullw	2
 18182  012D38  0ECF               	movlw	low _pBDTEntryOut
 18183  012D3A  24F3               	addwf	prodl,w,c
 18184  012D3C  6ED9               	movwf	fsr2l,c
 18185  012D3E  0E00               	movlw	high _pBDTEntryOut
 18186  012D40                     L12:
 18187  012D40  20F4               	addwfc	prodh,w,c
 18188  012D42  6EDA               	movwf	fsr2h,c
 18189  012D44  0E04               	movlw	4
 18190  012D46  1ADF               	xorwf	indf2,f,c
 18191  012D48  D000               	goto	i2l5026
 18192  012D4A                     i2l5026:
 18193                           
 18194                           ;usb_device.c: 1045: }
 18195                           ;usb_device.c: 1046: return (void*)handle;
 18196  012D4A  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 18197  012D4E  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 18198  012D52  0012               	return	
 18199  012D54  0012               	return		;funcret
 18200  012D56                     __end_ofi2_USBTransferOnePacket:
 18201                           	opt stack 0
 18202                           pclatu	equ	0xFFB
 18203                           pclath	equ	0xFFA
 18204                           tblptru	equ	0xFF8
 18205                           tblptrh	equ	0xFF7
 18206                           tblptrl	equ	0xFF6
 18207                           tablat	equ	0xFF5
 18208                           prodh	equ	0xFF4
 18209                           prodl	equ	0xFF3
 18210                           intcon	equ	0xFF2
 18211                           intcon2	equ	0xFF1
 18212                           indf0	equ	0xFEF
 18213                           postinc0	equ	0xFEE
 18214                           fsr0h	equ	0xFEA
 18215                           fsr0l	equ	0xFE9
 18216                           wreg	equ	0xFE8
 18217                           indf1	equ	0xFE7
 18218                           postinc1	equ	0xFE6
 18219                           postdec1	equ	0xFE5
 18220                           fsr1h	equ	0xFE2
 18221                           fsr1l	equ	0xFE1
 18222                           indf2	equ	0xFDF
 18223                           postinc2	equ	0xFDE
 18224                           postdec2	equ	0xFDD
 18225                           plusw2	equ	0xFDB
 18226                           fsr2h	equ	0xFDA
 18227                           fsr2l	equ	0xFD9
 18228                           status	equ	0xFD8
 18229                           
 18230 ;; *************** function _USBEnableEndpoint *****************
 18231 ;; Defined at:
 18232 ;;		line 878 in file "../My_library/usb_cdc/usb/usb_device.c"
 18233 ;; Parameters:    Size  Location     Type
 18234 ;;  ep              1    wreg     unsigned char 
 18235 ;;  options         1    8[COMRAM] unsigned char 
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;  ep              1   11[COMRAM] unsigned char 
 18238 ;;  p               2    9[COMRAM] PTR unsigned char 
 18239 ;;		 -> UEP0(1), 
 18240 ;; Return value:  Size  Location     Type
 18241 ;;		None               void
 18242 ;; Registers used:
 18243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18244 ;; Tracked objects:
 18245 ;;		On entry : 0/0
 18246 ;;		On exit  : 0/0
 18247 ;;		Unchanged: 0/0
 18248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18249 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18253 ;;Total ram usage:        4 bytes
 18254 ;; Hardware stack levels used:    1
 18255 ;; Hardware stack levels required when called:    1
 18256 ;; This function calls:
 18257 ;;		_USBConfigureEndpoint
 18258 ;; This function is called by:
 18259 ;;		_CDCInitEP
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263                           	psect	text86
 18264  013BBA                     __ptext86:
 18265                           	opt stack 0
 18266  013BBA                     _USBEnableEndpoint:
 18267                           	opt stack 15
 18268                           
 18269                           ;incstack = 0
 18270                           ;USBEnableEndpoint@ep stored from wreg
 18271  013BBA  6E38               	movwf	USBEnableEndpoint@ep,c
 18272                           
 18273                           ;usb_device.c: 880: unsigned char* p;
 18274                           ;usb_device.c: 884: if(options & 0x04)
 18275  013BBC  A435               	btfss	USBEnableEndpoint@options,2,c
 18276  013BBE  D006               	goto	i2l4956
 18277                           
 18278                           ;usb_device.c: 885: {
 18279                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 18280  013BC0  0E00               	movlw	0
 18281  013BC2  6E2D               	movwf	USBConfigureEndpoint@direction,c
 18282  013BC4  5038               	movf	USBEnableEndpoint@ep,w,c
 18283  013BC6  ECBA  F098         	call	_USBConfigureEndpoint
 18284  013BCA  D000               	goto	i2l4956
 18285  013BCC                     i2l4956:
 18286                           
 18287                           ;usb_device.c: 887: }
 18288                           ;usb_device.c: 888: if(options & 0x02)
 18289  013BCC  A235               	btfss	USBEnableEndpoint@options,1,c
 18290  013BCE  D006               	goto	i2l4960
 18291                           
 18292                           ;usb_device.c: 889: {
 18293                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 18294  013BD0  0E01               	movlw	1
 18295  013BD2  6E2D               	movwf	USBConfigureEndpoint@direction,c
 18296  013BD4  5038               	movf	USBEnableEndpoint@ep,w,c
 18297  013BD6  ECBA  F098         	call	_USBConfigureEndpoint
 18298  013BDA  D000               	goto	i2l4960
 18299  013BDC                     i2l4960:
 18300                           
 18301                           ;usb_device.c: 891: }
 18302                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 18303  013BDC  5038               	movf	USBEnableEndpoint@ep,w,c
 18304  013BDE  0D01               	mullw	1
 18305  013BE0  0E26               	movlw	38
 18306  013BE2  24F3               	addwf	prodl,w,c
 18307  013BE4  6E36               	movwf	USBEnableEndpoint@p,c
 18308  013BE6  0E0F               	movlw	15
 18309  013BE8  20F4               	addwfc	prodh,w,c
 18310  013BEA  6E37               	movwf	USBEnableEndpoint@p+1,c
 18311                           
 18312                           ;usb_device.c: 901: *p = options;
 18313  013BEC  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 18314  013BF0  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 18315  013BF4  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 18316  013BF8  0012               	return		;funcret
 18317  013BFA                     __end_of_USBEnableEndpoint:
 18318                           	opt stack 0
 18319                           pclatu	equ	0xFFB
 18320                           pclath	equ	0xFFA
 18321                           tblptru	equ	0xFF8
 18322                           tblptrh	equ	0xFF7
 18323                           tblptrl	equ	0xFF6
 18324                           tablat	equ	0xFF5
 18325                           prodh	equ	0xFF4
 18326                           prodl	equ	0xFF3
 18327                           intcon	equ	0xFF2
 18328                           intcon2	equ	0xFF1
 18329                           indf0	equ	0xFEF
 18330                           postinc0	equ	0xFEE
 18331                           fsr0h	equ	0xFEA
 18332                           fsr0l	equ	0xFE9
 18333                           wreg	equ	0xFE8
 18334                           indf1	equ	0xFE7
 18335                           postinc1	equ	0xFE6
 18336                           postdec1	equ	0xFE5
 18337                           fsr1h	equ	0xFE2
 18338                           fsr1l	equ	0xFE1
 18339                           indf2	equ	0xFDF
 18340                           postinc2	equ	0xFDE
 18341                           postdec2	equ	0xFDD
 18342                           plusw2	equ	0xFDB
 18343                           fsr2h	equ	0xFDA
 18344                           fsr2l	equ	0xFD9
 18345                           status	equ	0xFD8
 18346                           
 18347 ;; *************** function _USBConfigureEndpoint *****************
 18348 ;; Defined at:
 18349 ;;		line 1543 in file "../My_library/usb_cdc/usb/usb_device.c"
 18350 ;; Parameters:    Size  Location     Type
 18351 ;;  EPNum           1    wreg     unsigned char 
 18352 ;;  direction       1    0[COMRAM] unsigned char 
 18353 ;; Auto vars:     Size  Location     Type
 18354 ;;  EPNum           1    5[COMRAM] unsigned char 
 18355 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 18356 ;;		 -> BDT(48), 
 18357 ;; Return value:  Size  Location     Type
 18358 ;;		None               void
 18359 ;; Registers used:
 18360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18361 ;; Tracked objects:
 18362 ;;		On entry : 0/0
 18363 ;;		On exit  : 0/0
 18364 ;;		Unchanged: 0/0
 18365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18366 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18367 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18369 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18370 ;;Total ram usage:        8 bytes
 18371 ;; Hardware stack levels used:    1
 18372 ;; This function calls:
 18373 ;;		Nothing
 18374 ;; This function is called by:
 18375 ;;		_USBEnableEndpoint
 18376 ;; This function uses a non-reentrant model
 18377 ;;
 18378                           
 18379                           	psect	text87
 18380  013174                     __ptext87:
 18381                           	opt stack 0
 18382  013174                     _USBConfigureEndpoint:
 18383                           	opt stack 15
 18384                           
 18385                           ;incstack = 0
 18386                           ;USBConfigureEndpoint@EPNum stored from wreg
 18387  013174  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 18388                           
 18389                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 18390                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 18391  013176  0E00               	movlw	0
 18392  013178  6E33               	movwf	USBConfigureEndpoint@handle,c
 18393  01317A  0E0D               	movlw	13
 18394  01317C  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 18395                           
 18396                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 18397  01317E  502D               	movf	USBConfigureEndpoint@direction,w,c
 18398  013180  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 18399  013182  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 18400  013184  90D8               	bcf	status,0,c
 18401  013186  362E               	rlcf	??_USBConfigureEndpoint,f,c
 18402  013188  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 18403  01318A  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 18404  01318C  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 18405  01318E  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 18406  013190  90D8               	bcf	status,0,c
 18407  013192  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18408  013194  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18409  013196  90D8               	bcf	status,0,c
 18410  013198  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18411  01319A  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18412  01319C  502E               	movf	??_USBConfigureEndpoint,w,c
 18413  01319E  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 18414  0131A0  502F               	movf	??_USBConfigureEndpoint+1,w,c
 18415  0131A2  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 18416  0131A4  90D8               	bcf	status,0,c
 18417  0131A6  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18418  0131A8  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18419  0131AA  90D8               	bcf	status,0,c
 18420  0131AC  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 18421  0131AE  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 18422  0131B0  5030               	movf	??_USBConfigureEndpoint+2,w,c
 18423  0131B2  2633               	addwf	USBConfigureEndpoint@handle,f,c
 18424  0131B4  5031               	movf	??_USBConfigureEndpoint+3,w,c
 18425  0131B6  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 18426                           
 18427                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 18428  0131B8  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18429  0131BC  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18430  0131C0  9EDF               	bcf	indf2,7,c
 18431                           
 18432                           ;usb_device.c: 1557: if(direction == 0)
 18433  0131C2  502D               	movf	USBConfigureEndpoint@direction,w,c
 18434  0131C4  A4D8               	btfss	status,2,c
 18435  0131C6  D007               	goto	i2l4946
 18436                           
 18437                           ;usb_device.c: 1558: {
 18438                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 18439  0131C8  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 18440  0131CA  0D02               	mullw	2
 18441  0131CC  0ECF               	movlw	low _pBDTEntryOut
 18442  0131CE  24F3               	addwf	prodl,w,c
 18443  0131D0  6ED9               	movwf	fsr2l,c
 18444  0131D2  0E00               	movlw	high _pBDTEntryOut
 18445  0131D4  D006               	goto	L13
 18446  0131D6                     i2l4946:
 18447                           
 18448                           ;usb_device.c: 1561: else
 18449                           ;usb_device.c: 1562: {
 18450                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 18451  0131D6  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 18452  0131D8  0D02               	mullw	2
 18453  0131DA  0E0A               	movlw	low _pBDTEntryIn
 18454  0131DC  24F3               	addwf	prodl,w,c
 18455  0131DE  6ED9               	movwf	fsr2l,c
 18456  0131E0  0E00               	movlw	high _pBDTEntryIn
 18457  0131E2                     L13:
 18458  0131E2  20F4               	addwfc	prodh,w,c
 18459  0131E4  6EDA               	movwf	fsr2h,c
 18460  0131E6  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 18461  0131EA  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 18462  0131EE  D000               	goto	i2l4948
 18463  0131F0                     i2l4948:
 18464                           
 18465                           ;usb_device.c: 1564: }
 18466                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 18467  0131F0  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 18468  0131F4  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 18469  0131F8  9CDF               	bcf	indf2,6,c
 18470                           
 18471                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 18472  0131FA  EE20 F004          	lfsr	2,4
 18473  0131FE  5033               	movf	USBConfigureEndpoint@handle,w,c
 18474  013200  26D9               	addwf	fsr2l,f,c
 18475  013202  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 18476  013204  22DA               	addwfc	fsr2h,f,c
 18477  013206  8CDF               	bsf	indf2,6,c
 18478  013208  0012               	return		;funcret
 18479  01320A                     __end_of_USBConfigureEndpoint:
 18480                           	opt stack 0
 18481                           pclatu	equ	0xFFB
 18482                           pclath	equ	0xFFA
 18483                           tblptru	equ	0xFF8
 18484                           tblptrh	equ	0xFF7
 18485                           tblptrl	equ	0xFF6
 18486                           tablat	equ	0xFF5
 18487                           prodh	equ	0xFF4
 18488                           prodl	equ	0xFF3
 18489                           intcon	equ	0xFF2
 18490                           intcon2	equ	0xFF1
 18491                           indf0	equ	0xFEF
 18492                           postinc0	equ	0xFEE
 18493                           fsr0h	equ	0xFEA
 18494                           fsr0l	equ	0xFE9
 18495                           wreg	equ	0xFE8
 18496                           indf1	equ	0xFE7
 18497                           postinc1	equ	0xFE6
 18498                           postdec1	equ	0xFE5
 18499                           fsr1h	equ	0xFE2
 18500                           fsr1l	equ	0xFE1
 18501                           indf2	equ	0xFDF
 18502                           postinc2	equ	0xFDE
 18503                           postdec2	equ	0xFDD
 18504                           plusw2	equ	0xFDB
 18505                           fsr2h	equ	0xFDA
 18506                           fsr2l	equ	0xFD9
 18507                           status	equ	0xFD8
 18508                           
 18509 ;; *************** function _USBCtrlTrfOutHandler *****************
 18510 ;; Defined at:
 18511 ;;		line 2541 in file "../My_library/usb_cdc/usb/usb_device.c"
 18512 ;; Parameters:    Size  Location     Type
 18513 ;;		None
 18514 ;; Auto vars:     Size  Location     Type
 18515 ;;		None
 18516 ;; Return value:  Size  Location     Type
 18517 ;;		None               void
 18518 ;; Registers used:
 18519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18520 ;; Tracked objects:
 18521 ;;		On entry : 0/0
 18522 ;;		On exit  : 0/0
 18523 ;;		Unchanged: 0/0
 18524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;Total ram usage:        0 bytes
 18530 ;; Hardware stack levels used:    1
 18531 ;; Hardware stack levels required when called:    2
 18532 ;; This function calls:
 18533 ;;		_USBCtrlTrfRxService
 18534 ;; This function is called by:
 18535 ;;		_USBCtrlEPService
 18536 ;; This function uses a non-reentrant model
 18537 ;;
 18538                           
 18539                           	psect	text88
 18540  0139DC                     __ptext88:
 18541                           	opt stack 0
 18542  0139DC                     _USBCtrlTrfOutHandler:
 18543                           	opt stack 15
 18544                           
 18545                           ;usb_device.c: 2543: if(controlTransferState == 2)
 18546                           
 18547                           ;incstack = 0
 18548  0139DC  0E02               	movlw	2
 18549  0139DE  1822               	xorwf	_controlTransferState,w,c	;volatile
 18550  0139E0  A4D8               	btfss	status,2,c
 18551  0139E2  D003               	goto	i2l6084
 18552                           
 18553                           ;usb_device.c: 2544: {
 18554                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 18555  0139E4  EC06  F08E         	call	_USBCtrlTrfRxService	;wreg free
 18556                           
 18557                           ;usb_device.c: 2546: }
 18558  0139E8  0012               	return	
 18559  0139EA                     i2l6084:
 18560                           
 18561                           ;usb_device.c: 2547: else
 18562                           ;usb_device.c: 2548: {
 18563                           ;usb_device.c: 2551: controlTransferState = 0;
 18564  0139EA  0E00               	movlw	0
 18565  0139EC  6E22               	movwf	_controlTransferState,c	;volatile
 18566                           
 18567                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 18568  0139EE  5017               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 18569  0139F0  A4D8               	btfss	status,2,c
 18570  0139F2  D01F               	goto	i2l6092
 18571                           
 18572                           ;usb_device.c: 2559: {
 18573                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 18574  0139F4  EE20 F001          	lfsr	2,1
 18575  0139F8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 18576  0139FA  26D9               	addwf	fsr2l,f,c
 18577  0139FC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 18578  0139FE  22DA               	addwfc	fsr2h,f,c
 18579  013A00  0E08               	movlw	8
 18580  013A02  6EDF               	movwf	indf2,c
 18581                           
 18582                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18583  013A04  EE20 F002          	lfsr	2,2
 18584  013A08  5015               	movf	_pBDTEntryEP0OutNext,w,c
 18585  013A0A  26D9               	addwf	fsr2l,f,c
 18586  013A0C  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 18587  013A0E  22DA               	addwfc	fsr2h,f,c
 18588  013A10  0E30               	movlw	48
 18589  013A12  6EDE               	movwf	postinc2,c
 18590  013A14  0E0D               	movlw	13
 18591  013A16  6EDD               	movwf	postdec2,c
 18592                           
 18593                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18594  013A18  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18595  013A1C  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18596  013A20  0E0C               	movlw	12
 18597  013A22  6EDF               	movwf	indf2,c
 18598                           
 18599                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18600  013A24  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18601  013A28  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18602  013A2C  0E00               	movlw	0
 18603  013A2E  8EDB               	bsf	plusw2,7,c
 18604                           
 18605                           ;usb_device.c: 2564: }
 18606  013A30  0012               	return	
 18607  013A32                     i2l6092:
 18608                           
 18609                           ;usb_device.c: 2565: else
 18610                           ;usb_device.c: 2566: {
 18611                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 18612  013A32  0E00               	movlw	0
 18613  013A34  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18614  013A36  0012               	return	
 18615  013A38  0012               	return		;funcret
 18616  013A3A                     __end_of_USBCtrlTrfOutHandler:
 18617                           	opt stack 0
 18618                           pclatu	equ	0xFFB
 18619                           pclath	equ	0xFFA
 18620                           tblptru	equ	0xFF8
 18621                           tblptrh	equ	0xFF7
 18622                           tblptrl	equ	0xFF6
 18623                           tablat	equ	0xFF5
 18624                           prodh	equ	0xFF4
 18625                           prodl	equ	0xFF3
 18626                           intcon	equ	0xFF2
 18627                           intcon2	equ	0xFF1
 18628                           indf0	equ	0xFEF
 18629                           postinc0	equ	0xFEE
 18630                           fsr0h	equ	0xFEA
 18631                           fsr0l	equ	0xFE9
 18632                           wreg	equ	0xFE8
 18633                           indf1	equ	0xFE7
 18634                           postinc1	equ	0xFE6
 18635                           postdec1	equ	0xFE5
 18636                           fsr1h	equ	0xFE2
 18637                           fsr1l	equ	0xFE1
 18638                           indf2	equ	0xFDF
 18639                           postinc2	equ	0xFDE
 18640                           postdec2	equ	0xFDD
 18641                           plusw2	equ	0xFDB
 18642                           fsr2h	equ	0xFDA
 18643                           fsr2l	equ	0xFD9
 18644                           status	equ	0xFD8
 18645                           
 18646 ;; *************** function _USBCtrlTrfRxService *****************
 18647 ;; Defined at:
 18648 ;;		line 1852 in file "../My_library/usb_cdc/usb/usb_device.c"
 18649 ;; Parameters:    Size  Location     Type
 18650 ;;		None
 18651 ;; Auto vars:     Size  Location     Type
 18652 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18653 ;;  i               1    0[COMRAM] unsigned char 
 18654 ;; Return value:  Size  Location     Type
 18655 ;;		None               void
 18656 ;; Registers used:
 18657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18658 ;; Tracked objects:
 18659 ;;		On entry : 0/0
 18660 ;;		On exit  : 0/0
 18661 ;;		Unchanged: 0/0
 18662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18667 ;;Total ram usage:        2 bytes
 18668 ;; Hardware stack levels used:    1
 18669 ;; Hardware stack levels required when called:    1
 18670 ;; This function calls:
 18671 ;;		_USBCtrlEPAllowStatusStage
 18672 ;; This function is called by:
 18673 ;;		_USBCtrlTrfOutHandler
 18674 ;; This function uses a non-reentrant model
 18675 ;;
 18676                           
 18677                           	psect	text89
 18678  011C0C                     __ptext89:
 18679                           	opt stack 0
 18680  011C0C                     _USBCtrlTrfRxService:
 18681                           	opt stack 15
 18682                           
 18683                           ;usb_device.c: 1854: uint8_t byteToRead;
 18684                           ;usb_device.c: 1855: uint8_t i;
 18685                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18686                           
 18687                           ;incstack = 0
 18688  011C0C  EE20 F001          	lfsr	2,1
 18689  011C10  5013               	movf	_pBDTEntryEP0OutCurrent,w,c
 18690  011C12  26D9               	addwf	fsr2l,f,c
 18691  011C14  5014               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 18692  011C16  22DA               	addwfc	fsr2h,f,c
 18693  011C18  50DF               	movf	indf2,w,c
 18694  011C1A  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 18695                           
 18696                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 18697  011C1C  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18698  011C1E  5C05               	subwf	_outPipes+4,w,c	;volatile
 18699  011C20  0E00               	movlw	0
 18700  011C22  5806               	subwfb	_outPipes+5,w,c	;volatile
 18701  011C24  B0D8               	btfsc	status,0,c
 18702  011C26  D003               	goto	i2l5904
 18703                           
 18704                           ;usb_device.c: 1866: {
 18705                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 18706  011C28  C005  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 18707  011C2C  D000               	goto	i2l5904
 18708  011C2E                     i2l5904:
 18709                           
 18710                           ;usb_device.c: 1868: }
 18711                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 18712  011C2E  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18713  011C30  5E05               	subwf	_outPipes+4,f,c	;volatile
 18714  011C32  0E00               	movlw	0
 18715  011C34  5A06               	subwfb	_outPipes+5,f,c	;volatile
 18716                           
 18717                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 18718  011C36  0E00               	movlw	0
 18719  011C38  6E2D               	movwf	USBCtrlTrfRxService@i,c
 18720  011C3A  D012               	goto	i2l5914
 18721  011C3C                     i2l5908:
 18722                           
 18723                           ;usb_device.c: 1875: {
 18724                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18725  011C3C  502D               	movf	USBCtrlTrfRxService@i,w,c
 18726  011C3E  0D01               	mullw	1
 18727  011C40  0E38               	movlw	56
 18728  011C42  24F3               	addwf	prodl,w,c
 18729  011C44  6ED9               	movwf	fsr2l,c
 18730  011C46  0E0D               	movlw	13
 18731  011C48  20F4               	addwfc	prodh,w,c
 18732  011C4A  6EDA               	movwf	fsr2h,c
 18733  011C4C  C001  FFE1         	movff	_outPipes,fsr1l	;volatile
 18734  011C50  C002  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 18735  011C54  CFDF FFE7          	movff	indf2,indf1
 18736  011C58  4A01               	infsnz	_outPipes,f,c	;volatile
 18737  011C5A  2A02               	incf	_outPipes+1,f,c	;volatile
 18738  011C5C  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 18739  011C5E  D000               	goto	i2l5914
 18740  011C60                     i2l5914:
 18741  011C60  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18742  011C62  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 18743  011C64  A0D8               	btfss	status,0,c
 18744  011C66  D7EA               	goto	i2l5908
 18745                           
 18746                           ;usb_device.c: 1877: }
 18747                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 18748  011C68  5005               	movf	_outPipes+4,w,c	;volatile
 18749  011C6A  1006               	iorwf	_outPipes+5,w,c	;volatile
 18750  011C6C  B4D8               	btfsc	status,2,c
 18751  011C6E  D032               	goto	i2l5930
 18752                           
 18753                           ;usb_device.c: 1882: {
 18754                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 18755  011C70  EE20 F001          	lfsr	2,1
 18756  011C74  5015               	movf	_pBDTEntryEP0OutNext,w,c
 18757  011C76  26D9               	addwf	fsr2l,f,c
 18758  011C78  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 18759  011C7A  22DA               	addwfc	fsr2h,f,c
 18760  011C7C  0E08               	movlw	8
 18761  011C7E  6EDF               	movwf	indf2,c
 18762                           
 18763                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18764  011C80  EE20 F002          	lfsr	2,2
 18765  011C84  5015               	movf	_pBDTEntryEP0OutNext,w,c
 18766  011C86  26D9               	addwf	fsr2l,f,c
 18767  011C88  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 18768  011C8A  22DA               	addwfc	fsr2h,f,c
 18769  011C8C  0E38               	movlw	56
 18770  011C8E  6EDE               	movwf	postinc2,c
 18771  011C90  0E0D               	movlw	13
 18772  011C92  6EDD               	movwf	postdec2,c
 18773                           
 18774                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18775  011C94  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18776  011C98  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18777  011C9C  BCDF               	btfsc	indf2,6,c
 18778  011C9E  D00D               	goto	i2l5926
 18779                           
 18780                           ;usb_device.c: 1886: {
 18781                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18782  011CA0  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18783  011CA4  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18784  011CA8  0E48               	movlw	72
 18785  011CAA  6EDF               	movwf	indf2,c
 18786                           
 18787                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18788  011CAC  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18789  011CB0  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18790  011CB4  0E00               	movlw	0
 18791  011CB6  8EDB               	bsf	plusw2,7,c
 18792                           
 18793                           ;usb_device.c: 1889: }
 18794  011CB8  0012               	return	
 18795  011CBA                     i2l5926:
 18796                           
 18797                           ;usb_device.c: 1890: else
 18798                           ;usb_device.c: 1891: {
 18799                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 18800  011CBA  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18801  011CBE  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18802  011CC2  0E08               	movlw	8
 18803  011CC4  6EDF               	movwf	indf2,c
 18804                           
 18805                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18806  011CC6  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18807  011CCA  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18808  011CCE  0E00               	movlw	0
 18809  011CD0  8EDB               	bsf	plusw2,7,c
 18810                           
 18811                           ;usb_device.c: 1894: }
 18812                           ;usb_device.c: 1895: }
 18813  011CD2  0012               	return	
 18814  011CD4                     i2l5930:
 18815                           
 18816                           ;usb_device.c: 1896: else
 18817                           ;usb_device.c: 1897: {
 18818                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 18819  011CD4  EE20 F001          	lfsr	2,1
 18820  011CD8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 18821  011CDA  26D9               	addwf	fsr2l,f,c
 18822  011CDC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 18823  011CDE  22DA               	addwfc	fsr2h,f,c
 18824  011CE0  0E08               	movlw	8
 18825  011CE2  6EDF               	movwf	indf2,c
 18826                           
 18827                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18828  011CE4  EE20 F002          	lfsr	2,2
 18829  011CE8  5015               	movf	_pBDTEntryEP0OutNext,w,c
 18830  011CEA  26D9               	addwf	fsr2l,f,c
 18831  011CEC  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 18832  011CEE  22DA               	addwfc	fsr2h,f,c
 18833  011CF0  0E30               	movlw	48
 18834  011CF2  6EDE               	movwf	postinc2,c
 18835  011CF4  0E0D               	movlw	13
 18836  011CF6  6EDD               	movwf	postdec2,c
 18837                           
 18838                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18839  011CF8  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18840  011CFC  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18841  011D00  0E04               	movlw	4
 18842  011D02  6EDF               	movwf	indf2,c
 18843                           
 18844                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18845  011D04  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18846  011D08  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18847  011D0C  0E00               	movlw	0
 18848  011D0E  8EDB               	bsf	plusw2,7,c
 18849                           
 18850                           ;usb_device.c: 1926: }
 18851                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 18852                           
 18853                           ;usb_device.c: 1915: {
 18854                           ;usb_device.c: 1921: outPipes[0].pFunc();
 18855  011D10  9E04               	bcf	_outPipes+3,7,c	;volatile
 18856                           
 18857                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 18858  011D12  501C               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 18859  011D14  A4D8               	btfss	status,2,c
 18860  011D16  0012               	return	
 18861                           
 18862                           ;usb_device.c: 1942: {
 18863                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 18864  011D18  EC88  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18865  011D1C  0012               	return	
 18866  011D1E  0012               	return		;funcret
 18867  011D20                     __end_of_USBCtrlTrfRxService:
 18868                           	opt stack 0
 18869                           pclatu	equ	0xFFB
 18870                           pclath	equ	0xFFA
 18871                           tblptru	equ	0xFF8
 18872                           tblptrh	equ	0xFF7
 18873                           tblptrl	equ	0xFF6
 18874                           tablat	equ	0xFF5
 18875                           prodh	equ	0xFF4
 18876                           prodl	equ	0xFF3
 18877                           intcon	equ	0xFF2
 18878                           intcon2	equ	0xFF1
 18879                           indf0	equ	0xFEF
 18880                           postinc0	equ	0xFEE
 18881                           fsr0h	equ	0xFEA
 18882                           fsr0l	equ	0xFE9
 18883                           wreg	equ	0xFE8
 18884                           indf1	equ	0xFE7
 18885                           postinc1	equ	0xFE6
 18886                           postdec1	equ	0xFE5
 18887                           fsr1h	equ	0xFE2
 18888                           fsr1l	equ	0xFE1
 18889                           indf2	equ	0xFDF
 18890                           postinc2	equ	0xFDE
 18891                           postdec2	equ	0xFDD
 18892                           plusw2	equ	0xFDB
 18893                           fsr2h	equ	0xFDA
 18894                           fsr2l	equ	0xFD9
 18895                           status	equ	0xFD8
 18896                           
 18897 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18898 ;; Defined at:
 18899 ;;		line 1416 in file "../My_library/usb_cdc/usb/usb_device.c"
 18900 ;; Parameters:    Size  Location     Type
 18901 ;;		None
 18902 ;; Auto vars:     Size  Location     Type
 18903 ;;		None
 18904 ;; Return value:  Size  Location     Type
 18905 ;;		None               void
 18906 ;; Registers used:
 18907 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18908 ;; Tracked objects:
 18909 ;;		On entry : 0/0
 18910 ;;		On exit  : 0/0
 18911 ;;		Unchanged: 0/0
 18912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18917 ;;Total ram usage:        0 bytes
 18918 ;; Hardware stack levels used:    1
 18919 ;; This function calls:
 18920 ;;		Nothing
 18921 ;; This function is called by:
 18922 ;;		_USBDeviceTasks
 18923 ;;		_USBCtrlEPServiceComplete
 18924 ;;		_USBCtrlTrfRxService
 18925 ;; This function uses a non-reentrant model
 18926 ;;
 18927                           
 18928                           	psect	text90
 18929  012B10                     __ptext90:
 18930                           	opt stack 0
 18931  012B10                     _USBCtrlEPAllowStatusStage:
 18932                           	opt stack 15
 18933                           
 18934                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 18935                           
 18936                           ;incstack = 0
 18937  012B10  501E               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 18938  012B12  A4D8               	btfss	status,2,c
 18939  012B14  0012               	return	
 18940                           
 18941                           ;usb_device.c: 1424: {
 18942                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 18943  012B16  0E01               	movlw	1
 18944  012B18  6E1E               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 18945                           
 18946                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 18947  012B1A  501F               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 18948  012B1C  A4D8               	btfss	status,2,c
 18949  012B1E  0012               	return	
 18950                           
 18951                           ;usb_device.c: 1427: {
 18952                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 18953  012B20  0E01               	movlw	1
 18954  012B22  6E1F               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 18955                           
 18956                           ;usb_device.c: 1432: if(controlTransferState == 2)
 18957  012B24  0E02               	movlw	2
 18958  012B26  1822               	xorwf	_controlTransferState,w,c	;volatile
 18959  012B28  A4D8               	btfss	status,2,c
 18960  012B2A  D015               	goto	i2l5380
 18961                           
 18962                           ;usb_device.c: 1433: {
 18963                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 18964  012B2C  EE20 F001          	lfsr	2,1
 18965  012B30  500A               	movf	_pBDTEntryIn,w,c
 18966  012B32  26D9               	addwf	fsr2l,f,c
 18967  012B34  500B               	movf	_pBDTEntryIn+1,w,c
 18968  012B36  22DA               	addwfc	fsr2h,f,c
 18969  012B38  0E00               	movlw	0
 18970  012B3A  6EDF               	movwf	indf2,c
 18971                           
 18972                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18973  012B3C  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 18974  012B40  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18975  012B44  0E48               	movlw	72
 18976  012B46  6EDF               	movwf	indf2,c
 18977                           
 18978                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18979  012B48  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 18980  012B4C  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18981  012B50  0E00               	movlw	0
 18982  012B52  8EDB               	bsf	plusw2,7,c
 18983                           
 18984                           ;usb_device.c: 1437: }
 18985  012B54  0012               	return	
 18986  012B56                     i2l5380:
 18987                           
 18988                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 18989  012B56  0422               	decf	_controlTransferState,w,c	;volatile
 18990  012B58  A4D8               	btfss	status,2,c
 18991  012B5A  0012               	return	
 18992                           
 18993                           ;usb_device.c: 1439: {
 18994                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 18995  012B5C  0E00               	movlw	0
 18996  012B5E  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 18997                           
 18998                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 18999  012B60  EE20 F001          	lfsr	2,1
 19000  012B64  5013               	movf	_pBDTEntryEP0OutCurrent,w,c
 19001  012B66  26D9               	addwf	fsr2l,f,c
 19002  012B68  5014               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19003  012B6A  22DA               	addwfc	fsr2h,f,c
 19004  012B6C  0E08               	movlw	8
 19005  012B6E  6EDF               	movwf	indf2,c
 19006                           
 19007                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 19008  012B70  EE20 F002          	lfsr	2,2
 19009  012B74  5013               	movf	_pBDTEntryEP0OutCurrent,w,c
 19010  012B76  26D9               	addwf	fsr2l,f,c
 19011  012B78  5014               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 19012  012B7A  22DA               	addwfc	fsr2h,f,c
 19013  012B7C  0E30               	movlw	48
 19014  012B7E  6EDE               	movwf	postinc2,c
 19015  012B80  0E0D               	movlw	13
 19016  012B82  6EDD               	movwf	postdec2,c
 19017                           
 19018                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 19019  012B84  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19020  012B88  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19021  012B8C  0E04               	movlw	4
 19022  012B8E  6EDF               	movwf	indf2,c
 19023                           
 19024                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19025  012B90  C013  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19026  012B94  C014  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19027  012B98  0E00               	movlw	0
 19028  012B9A  8EDB               	bsf	plusw2,7,c
 19029                           
 19030                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 19031  012B9C  0E01               	movlw	1
 19032  012B9E  6E17               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 19033                           
 19034                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 19035  012BA0  EE20 F001          	lfsr	2,1
 19036  012BA4  5015               	movf	_pBDTEntryEP0OutNext,w,c
 19037  012BA6  26D9               	addwf	fsr2l,f,c
 19038  012BA8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 19039  012BAA  22DA               	addwfc	fsr2h,f,c
 19040  012BAC  0E08               	movlw	8
 19041  012BAE  6EDF               	movwf	indf2,c
 19042                           
 19043                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 19044  012BB0  EE20 F002          	lfsr	2,2
 19045  012BB4  5015               	movf	_pBDTEntryEP0OutNext,w,c
 19046  012BB6  26D9               	addwf	fsr2l,f,c
 19047  012BB8  5016               	movf	_pBDTEntryEP0OutNext+1,w,c
 19048  012BBA  22DA               	addwfc	fsr2h,f,c
 19049  012BBC  0E30               	movlw	48
 19050  012BBE  6EDE               	movwf	postinc2,c
 19051  012BC0  0E0D               	movlw	13
 19052  012BC2  6EDD               	movwf	postdec2,c
 19053                           
 19054                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 19055  012BC4  C015  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 19056  012BC8  C016  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 19057  012BCC  0E80               	movlw	128
 19058  012BCE  6EDF               	movwf	indf2,c
 19059  012BD0  0012               	return	
 19060  012BD2  0012               	return		;funcret
 19061  012BD4                     __end_of_USBCtrlEPAllowStatusStage:
 19062                           	opt stack 0
 19063                           pclatu	equ	0xFFB
 19064                           pclath	equ	0xFFA
 19065                           tblptru	equ	0xFF8
 19066                           tblptrh	equ	0xFF7
 19067                           tblptrl	equ	0xFF6
 19068                           tablat	equ	0xFF5
 19069                           prodh	equ	0xFF4
 19070                           prodl	equ	0xFF3
 19071                           intcon	equ	0xFF2
 19072                           intcon2	equ	0xFF1
 19073                           indf0	equ	0xFEF
 19074                           postinc0	equ	0xFEE
 19075                           fsr0h	equ	0xFEA
 19076                           fsr0l	equ	0xFE9
 19077                           wreg	equ	0xFE8
 19078                           indf1	equ	0xFE7
 19079                           postinc1	equ	0xFE6
 19080                           postdec1	equ	0xFE5
 19081                           fsr1h	equ	0xFE2
 19082                           fsr1l	equ	0xFE1
 19083                           indf2	equ	0xFDF
 19084                           postinc2	equ	0xFDE
 19085                           postdec2	equ	0xFDD
 19086                           plusw2	equ	0xFDB
 19087                           fsr2h	equ	0xFDA
 19088                           fsr2l	equ	0xFD9
 19089                           status	equ	0xFD8
 19090                           
 19091 ;; *************** function _USBCtrlTrfInHandler *****************
 19092 ;; Defined at:
 19093 ;;		line 2595 in file "../My_library/usb_cdc/usb/usb_device.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;		None
 19096 ;; Auto vars:     Size  Location     Type
 19097 ;;  lastDTS         1    1[COMRAM] unsigned char 
 19098 ;; Return value:  Size  Location     Type
 19099 ;;		None               void
 19100 ;; Registers used:
 19101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19102 ;; Tracked objects:
 19103 ;;		On entry : 0/0
 19104 ;;		On exit  : 0/0
 19105 ;;		Unchanged: 0/0
 19106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19111 ;;Total ram usage:        1 bytes
 19112 ;; Hardware stack levels used:    1
 19113 ;; Hardware stack levels required when called:    1
 19114 ;; This function calls:
 19115 ;;		_USBCtrlTrfTxService
 19116 ;; This function is called by:
 19117 ;;		_USBCtrlEPService
 19118 ;; This function uses a non-reentrant model
 19119 ;;
 19120                           
 19121                           	psect	text91
 19122  012BD4                     __ptext91:
 19123                           	opt stack 0
 19124  012BD4                     _USBCtrlTrfInHandler:
 19125                           	opt stack 16
 19126                           
 19127                           ;usb_device.c: 2597: uint8_t lastDTS;
 19128                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 19129                           
 19130                           ;incstack = 0
 19131  012BD4  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19132  012BD8  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19133  012BDC  0E00               	movlw	0
 19134  012BDE  BCDF               	btfsc	indf2,6,c
 19135  012BE0  0E01               	movlw	1
 19136  012BE2  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 19137                           
 19138                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 19139  012BE4  0E04               	movlw	4
 19140  012BE6  1A0A               	xorwf	_pBDTEntryIn,f,c
 19141                           
 19142                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 19143  012BE8  0E08               	movlw	8
 19144  012BEA  181D               	xorwf	_USBDeviceState,w,c	;volatile
 19145  012BEC  A4D8               	btfss	status,2,c
 19146  012BEE  D00E               	goto	i2l6108
 19147                           
 19148                           ;usb_device.c: 2608: {
 19149                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 19150  012BF0  010D               	movlb	13	; () banked
 19151  012BF2  5132               	movf	50,w,b	;volatile
 19152  012BF4  0B7F               	andlw	127
 19153  012BF6  010F               	movlb	15	; () banked
 19154  012BF8  6F38               	movwf	56,b	;volatile
 19155                           
 19156                           ; BSR set to: 15
 19157                           ;usb_device.c: 2610: if(UADDR != 0u)
 19158  012BFA  010F               	movlb	15	; () banked
 19159  012BFC  5138               	movf	56,w,b	;volatile
 19160  012BFE  B4D8               	btfsc	status,2,c
 19161  012C00  D002               	goto	i2l6106
 19162                           
 19163                           ; BSR set to: 15
 19164                           ;usb_device.c: 2611: {
 19165                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 19166  012C02  0E10               	movlw	16
 19167  012C04  D001               	goto	L14
 19168  012C06                     i2l6106:
 19169                           
 19170                           ; BSR set to: 15
 19171                           ;usb_device.c: 2614: else
 19172                           ;usb_device.c: 2615: {
 19173                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 19174  012C06  0E04               	movlw	4
 19175  012C08                     L14:
 19176  012C08  6E1D               	movwf	_USBDeviceState,c	;volatile
 19177                           
 19178                           ; BSR set to: 15
 19179  012C0A  D000               	goto	i2l6108
 19180  012C0C                     i2l6108:
 19181                           
 19182                           ;usb_device.c: 2617: }
 19183                           ;usb_device.c: 2618: }
 19184                           ;usb_device.c: 2621: if(controlTransferState == 1)
 19185  012C0C  0422               	decf	_controlTransferState,w,c	;volatile
 19186  012C0E  A4D8               	btfss	status,2,c
 19187  012C10  D03A               	goto	i2l331
 19188                           
 19189                           ;usb_device.c: 2622: {
 19190                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 19191  012C12  EE20 F002          	lfsr	2,2
 19192  012C16  500A               	movf	_pBDTEntryIn,w,c
 19193  012C18  26D9               	addwf	fsr2l,f,c
 19194  012C1A  500B               	movf	_pBDTEntryIn+1,w,c
 19195  012C1C  22DA               	addwfc	fsr2h,f,c
 19196  012C1E  0E38               	movlw	56
 19197  012C20  6EDE               	movwf	postinc2,c
 19198  012C22  0E0D               	movlw	13
 19199  012C24  6EDD               	movwf	postdec2,c
 19200                           
 19201                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 19202  012C26  ECEC  F090         	call	_USBCtrlTrfTxService	;wreg free
 19203                           
 19204                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 19205  012C2A  0E02               	movlw	2
 19206  012C2C  1824               	xorwf	_shortPacketStatus,w,c	;volatile
 19207  012C2E  A4D8               	btfss	status,2,c
 19208  012C30  D00D               	goto	i2l6120
 19209                           
 19210                           ;usb_device.c: 2631: {
 19211                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 19212  012C32  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19213  012C36  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19214  012C3A  0E04               	movlw	4
 19215  012C3C  6EDF               	movwf	indf2,c
 19216                           
 19217                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19218  012C3E  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19219  012C42  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19220  012C46  0E00               	movlw	0
 19221  012C48  8EDB               	bsf	plusw2,7,c
 19222                           
 19223                           ;usb_device.c: 2636: }
 19224  012C4A  0012               	return	
 19225  012C4C                     i2l6120:
 19226                           
 19227                           ;usb_device.c: 2637: else
 19228                           ;usb_device.c: 2638: {
 19229                           ;usb_device.c: 2639: if(lastDTS == 0)
 19230  012C4C  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 19231  012C4E  A4D8               	btfss	status,2,c
 19232  012C50  D00D               	goto	i2l6126
 19233                           
 19234                           ;usb_device.c: 2640: {
 19235                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 19236  012C52  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19237  012C56  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19238  012C5A  0E48               	movlw	72
 19239  012C5C  6EDF               	movwf	indf2,c
 19240                           
 19241                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19242  012C5E  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19243  012C62  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19244  012C66  0E00               	movlw	0
 19245  012C68  8EDB               	bsf	plusw2,7,c
 19246                           
 19247                           ;usb_device.c: 2643: }
 19248  012C6A  0012               	return	
 19249  012C6C                     i2l6126:
 19250                           
 19251                           ;usb_device.c: 2644: else
 19252                           ;usb_device.c: 2645: {
 19253                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 19254  012C6C  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19255  012C70  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19256  012C74  0E08               	movlw	8
 19257  012C76  6EDF               	movwf	indf2,c
 19258                           
 19259                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 19260  012C78  C00A  FFD9         	movff	_pBDTEntryIn,fsr2l
 19261  012C7C  C00B  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19262  012C80  0E00               	movlw	0
 19263  012C82  8EDB               	bsf	plusw2,7,c
 19264                           
 19265                           ;usb_device.c: 2648: }
 19266                           ;usb_device.c: 2649: }
 19267                           ;usb_device.c: 2650: }
 19268  012C84  0012               	return	
 19269  012C86                     i2l331:
 19270                           
 19271                           ;usb_device.c: 2651: else
 19272                           ;usb_device.c: 2652: {
 19273                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 19274  012C86  AE04               	btfss	_outPipes+3,7,c	;volatile
 19275  012C88  D002               	goto	i2l6132
 19276                           
 19277                           ;usb_device.c: 2661: }
 19278                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 19279                           
 19280                           ;usb_device.c: 2659: {
 19281                           ;usb_device.c: 2660: outPipes[0].pFunc();
 19282  012C8A  9E04               	bcf	_outPipes+3,7,c	;volatile
 19283  012C8C  D000               	goto	i2l6132
 19284  012C8E                     i2l6132:
 19285                           
 19286                           ;usb_device.c: 2663: }
 19287                           ;usb_device.c: 2665: controlTransferState = 0;
 19288  012C8E  0E00               	movlw	0
 19289  012C90  6E22               	movwf	_controlTransferState,c	;volatile
 19290  012C92  0012               	return	
 19291  012C94  0012               	return		;funcret
 19292  012C96                     __end_of_USBCtrlTrfInHandler:
 19293                           	opt stack 0
 19294                           pclatu	equ	0xFFB
 19295                           pclath	equ	0xFFA
 19296                           tblptru	equ	0xFF8
 19297                           tblptrh	equ	0xFF7
 19298                           tblptrl	equ	0xFF6
 19299                           tablat	equ	0xFF5
 19300                           prodh	equ	0xFF4
 19301                           prodl	equ	0xFF3
 19302                           intcon	equ	0xFF2
 19303                           intcon2	equ	0xFF1
 19304                           indf0	equ	0xFEF
 19305                           postinc0	equ	0xFEE
 19306                           fsr0h	equ	0xFEA
 19307                           fsr0l	equ	0xFE9
 19308                           wreg	equ	0xFE8
 19309                           indf1	equ	0xFE7
 19310                           postinc1	equ	0xFE6
 19311                           postdec1	equ	0xFE5
 19312                           fsr1h	equ	0xFE2
 19313                           fsr1l	equ	0xFE1
 19314                           indf2	equ	0xFDF
 19315                           postinc2	equ	0xFDE
 19316                           postdec2	equ	0xFDD
 19317                           plusw2	equ	0xFDB
 19318                           fsr2h	equ	0xFDA
 19319                           fsr2l	equ	0xFD9
 19320                           status	equ	0xFD8
 19321                           
 19322 ;; *************** function _USBCtrlTrfTxService *****************
 19323 ;; Defined at:
 19324 ;;		line 1771 in file "../My_library/usb_cdc/usb/usb_device.c"
 19325 ;; Parameters:    Size  Location     Type
 19326 ;;		None
 19327 ;; Auto vars:     Size  Location     Type
 19328 ;;  byteToSend      1    0[COMRAM] unsigned char 
 19329 ;; Return value:  Size  Location     Type
 19330 ;;		None               void
 19331 ;; Registers used:
 19332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19333 ;; Tracked objects:
 19334 ;;		On entry : 0/0
 19335 ;;		On exit  : 0/0
 19336 ;;		Unchanged: 0/0
 19337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19342 ;;Total ram usage:        1 bytes
 19343 ;; Hardware stack levels used:    1
 19344 ;; This function calls:
 19345 ;;		Nothing
 19346 ;; This function is called by:
 19347 ;;		_USBCtrlEPAllowDataStage
 19348 ;;		_USBCtrlTrfInHandler
 19349 ;; This function uses a non-reentrant model
 19350 ;;
 19351                           
 19352                           	psect	text92
 19353  0121D8                     __ptext92:
 19354                           	opt stack 0
 19355  0121D8                     _USBCtrlTrfTxService:
 19356                           	opt stack 14
 19357                           
 19358                           ;usb_device.c: 1773: uint8_t byteToSend;
 19359                           ;usb_device.c: 1777: byteToSend = 8;
 19360                           
 19361                           ;incstack = 0
 19362  0121D8  0E08               	movlw	8
 19363  0121DA  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 19364                           
 19365                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 19366  0121DC  502A               	movf	_inPipes+5,w,c	;volatile
 19367  0121DE  E111               	bnz	i2l5214
 19368  0121E0  0E08               	movlw	8
 19369  0121E2  5C29               	subwf	_inPipes+4,w,c	;volatile
 19370  0121E4  B0D8               	btfsc	status,0,c
 19371  0121E6  D00D               	goto	i2l5214
 19372                           
 19373                           ;usb_device.c: 1779: {
 19374                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 19375  0121E8  C029  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 19376                           
 19377                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 19378  0121EC  5024               	movf	_shortPacketStatus,w,c	;volatile
 19379  0121EE  A4D8               	btfss	status,2,c
 19380  0121F0  D002               	goto	i2l5210
 19381                           
 19382                           ;usb_device.c: 1788: {
 19383                           ;usb_device.c: 1789: shortPacketStatus = 1;
 19384  0121F2  0E01               	movlw	1
 19385  0121F4  D004               	goto	L15
 19386  0121F6                     i2l5210:
 19387                           
 19388                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 19389  0121F6  0424               	decf	_shortPacketStatus,w,c	;volatile
 19390  0121F8  A4D8               	btfss	status,2,c
 19391  0121FA  D003               	goto	i2l5214
 19392                           
 19393                           ;usb_device.c: 1792: {
 19394                           ;usb_device.c: 1793: shortPacketStatus = 2;
 19395  0121FC  0E02               	movlw	2
 19396  0121FE                     L15:
 19397  0121FE  6E24               	movwf	_shortPacketStatus,c	;volatile
 19398  012200  D000               	goto	i2l5214
 19399  012202                     i2l5214:
 19400                           
 19401                           ;usb_device.c: 1794: }
 19402                           ;usb_device.c: 1795: }
 19403                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 19404  012202  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19405  012204  5E29               	subwf	_inPipes+4,f,c	;volatile
 19406  012206  0E00               	movlw	0
 19407  012208  5A2A               	subwfb	_inPipes+5,f,c	;volatile
 19408                           
 19409                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 19410  01220A  EE20 F001          	lfsr	2,1
 19411  01220E  500A               	movf	_pBDTEntryIn,w,c
 19412  012210  26D9               	addwf	fsr2l,f,c
 19413  012212  500B               	movf	_pBDTEntryIn+1,w,c
 19414  012214  22DA               	addwfc	fsr2h,f,c
 19415  012216  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 19416                           
 19417                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 19418  01221A  0E38               	movlw	56
 19419  01221C  0100               	movlb	0	; () banked
 19420  01221E  6FE4               	movwf	_pDst& (0+255),b
 19421  012220  0E0D               	movlw	13
 19422  012222  0100               	movlb	0	; () banked
 19423  012224  6FE5               	movwf	(_pDst+1)& (0+255),b
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 19427  012226  A028               	btfss	_inPipes+3,0,c	;volatile
 19428  012228  D01F               	goto	i2l5232
 19429  01222A  D041               	goto	i2l5242
 19430                           
 19431                           ; BSR set to: 0
 19432                           ;usb_device.c: 1810: {
 19433                           ;usb_device.c: 1811: while(byteToSend)
 19434  01222C  D01D               	goto	i2l5232
 19435  01222E                     i2l5224:
 19436                           
 19437                           ; BSR set to: 0
 19438                           ;usb_device.c: 1812: {
 19439                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 19440  01222E  C025  FFF6         	movff	_inPipes,tblptrl	;volatile
 19441  012232  C026  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19442  012236  0E00               	movlw	low (__mediumconst shr (0+16))
 19443  012238  6EF8               	movwf	tblptru,c
 19444  01223A  C0E4  FFD9         	movff	_pDst,fsr2l
 19445  01223E  C0E5  FFDA         	movff	_pDst+1,fsr2h
 19446  012242  0E0E               	movlw	(high __ramtop+-1)
 19447  012244  64F7               	cpfsgt	tblptrh,c
 19448  012246  D003               	bra	i2u416_47
 19449  012248  0008               	tblrd		*
 19450  01224A  50F5               	movf	tablat,w,c
 19451  01224C  D005               	bra	i2u416_40
 19452  01224E                     i2u416_47:
 19453  01224E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19454  012252  CFF7 FFEA          	movff	tblptrh,fsr0h
 19455  012256  50EF               	movf	indf0,w,c
 19456  012258                     i2u416_40:
 19457  012258  6EDF               	movwf	indf2,c
 19458  01225A  4A25               	infsnz	_inPipes,f,c	;volatile
 19459  01225C  2A26               	incf	_inPipes+1,f,c	;volatile
 19460  01225E  0100               	movlb	0	; () banked
 19461  012260  4BE4               	infsnz	_pDst& (0+255),f,b
 19462  012262  2BE5               	incf	(_pDst+1)& (0+255),f,b
 19463                           
 19464                           ; BSR set to: 0
 19465                           ;usb_device.c: 1814: byteToSend--;
 19466  012264  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19467  012266  D000               	goto	i2l5232
 19468  012268                     i2l5232:
 19469                           
 19470                           ; BSR set to: 0
 19471  012268  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19472  01226A  B4D8               	btfsc	status,2,c
 19473  01226C  0012               	return	
 19474  01226E  D7DF               	goto	i2l5224
 19475                           
 19476                           ; BSR set to: 0
 19477                           ;usb_device.c: 1815: }
 19478                           ;usb_device.c: 1816: }
 19479  012270  0012               	return	
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;usb_device.c: 1817: else
 19483                           ;usb_device.c: 1818: {
 19484                           ;usb_device.c: 1819: while(byteToSend)
 19485  012272  D01D               	goto	i2l5242
 19486  012274                     i2l5234:
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;usb_device.c: 1820: {
 19490                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 19491  012274  C025  FFF6         	movff	_inPipes,tblptrl	;volatile
 19492  012278  C026  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 19493  01227C  0E00               	movlw	low (__mediumconst shr (0+16))
 19494  01227E  6EF8               	movwf	tblptru,c
 19495  012280  C0E4  FFD9         	movff	_pDst,fsr2l
 19496  012284  C0E5  FFDA         	movff	_pDst+1,fsr2h
 19497  012288  0E0E               	movlw	(high __ramtop+-1)
 19498  01228A  64F7               	cpfsgt	tblptrh,c
 19499  01228C  D003               	bra	i2u418_47
 19500  01228E  0008               	tblrd		*
 19501  012290  50F5               	movf	tablat,w,c
 19502  012292  D005               	bra	i2u418_40
 19503  012294                     i2u418_47:
 19504  012294  CFF6 FFE9          	movff	tblptrl,fsr0l
 19505  012298  CFF7 FFEA          	movff	tblptrh,fsr0h
 19506  01229C  50EF               	movf	indf0,w,c
 19507  01229E                     i2u418_40:
 19508  01229E  6EDF               	movwf	indf2,c
 19509  0122A0  4A25               	infsnz	_inPipes,f,c	;volatile
 19510  0122A2  2A26               	incf	_inPipes+1,f,c	;volatile
 19511  0122A4  0100               	movlb	0	; () banked
 19512  0122A6  4BE4               	infsnz	_pDst& (0+255),f,b
 19513  0122A8  2BE5               	incf	(_pDst+1)& (0+255),f,b
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;usb_device.c: 1822: byteToSend--;
 19517  0122AA  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19518  0122AC  D000               	goto	i2l5242
 19519  0122AE                     i2l5242:
 19520                           
 19521                           ; BSR set to: 0
 19522  0122AE  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19523  0122B0  B4D8               	btfsc	status,2,c
 19524  0122B2  0012               	return	
 19525  0122B4  D7DF               	goto	i2l5234
 19526                           
 19527                           ; BSR set to: 0
 19528  0122B6  0012               	return	
 19529                           
 19530                           ; BSR set to: 0
 19531                           
 19532                           ; BSR set to: 0
 19533  0122B8  0012               	return		;funcret
 19534  0122BA                     __end_of_USBCtrlTrfTxService:
 19535                           	opt stack 0
 19536                           pclatu	equ	0xFFB
 19537                           pclath	equ	0xFFA
 19538                           tblptru	equ	0xFF8
 19539                           tblptrh	equ	0xFF7
 19540                           tblptrl	equ	0xFF6
 19541                           tablat	equ	0xFF5
 19542                           prodh	equ	0xFF4
 19543                           prodl	equ	0xFF3
 19544                           intcon	equ	0xFF2
 19545                           intcon2	equ	0xFF1
 19546                           indf0	equ	0xFEF
 19547                           postinc0	equ	0xFEE
 19548                           fsr0h	equ	0xFEA
 19549                           fsr0l	equ	0xFE9
 19550                           wreg	equ	0xFE8
 19551                           indf1	equ	0xFE7
 19552                           postinc1	equ	0xFE6
 19553                           postdec1	equ	0xFE5
 19554                           fsr1h	equ	0xFE2
 19555                           fsr1l	equ	0xFE1
 19556                           indf2	equ	0xFDF
 19557                           postinc2	equ	0xFDE
 19558                           postdec2	equ	0xFDD
 19559                           plusw2	equ	0xFDB
 19560                           fsr2h	equ	0xFDA
 19561                           fsr2l	equ	0xFD9
 19562                           status	equ	0xFD8
 19563                           pclatu	equ	0xFFB
 19564                           pclath	equ	0xFFA
 19565                           tblptru	equ	0xFF8
 19566                           tblptrh	equ	0xFF7
 19567                           tblptrl	equ	0xFF6
 19568                           tablat	equ	0xFF5
 19569                           prodh	equ	0xFF4
 19570                           prodl	equ	0xFF3
 19571                           intcon	equ	0xFF2
 19572                           intcon2	equ	0xFF1
 19573                           indf0	equ	0xFEF
 19574                           postinc0	equ	0xFEE
 19575                           fsr0h	equ	0xFEA
 19576                           fsr0l	equ	0xFE9
 19577                           wreg	equ	0xFE8
 19578                           indf1	equ	0xFE7
 19579                           postinc1	equ	0xFE6
 19580                           postdec1	equ	0xFE5
 19581                           fsr1h	equ	0xFE2
 19582                           fsr1l	equ	0xFE1
 19583                           indf2	equ	0xFDF
 19584                           postinc2	equ	0xFDE
 19585                           postdec2	equ	0xFDD
 19586                           plusw2	equ	0xFDB
 19587                           fsr2h	equ	0xFDA
 19588                           fsr2l	equ	0xFD9
 19589                           status	equ	0xFD8
 19590                           
 19591                           	psect	rparam
 19592  0000                     pclatu	equ	0xFFB
 19593                           pclath	equ	0xFFA
 19594                           tblptru	equ	0xFF8
 19595                           tblptrh	equ	0xFF7
 19596                           tblptrl	equ	0xFF6
 19597                           tablat	equ	0xFF5
 19598                           prodh	equ	0xFF4
 19599                           prodl	equ	0xFF3
 19600                           intcon	equ	0xFF2
 19601                           intcon2	equ	0xFF1
 19602                           indf0	equ	0xFEF
 19603                           postinc0	equ	0xFEE
 19604                           fsr0h	equ	0xFEA
 19605                           fsr0l	equ	0xFE9
 19606                           wreg	equ	0xFE8
 19607                           indf1	equ	0xFE7
 19608                           postinc1	equ	0xFE6
 19609                           postdec1	equ	0xFE5
 19610                           fsr1h	equ	0xFE2
 19611                           fsr1l	equ	0xFE1
 19612                           indf2	equ	0xFDF
 19613                           postinc2	equ	0xFDE
 19614                           postdec2	equ	0xFDD
 19615                           plusw2	equ	0xFDB
 19616                           fsr2h	equ	0xFDA
 19617                           fsr2l	equ	0xFD9
 19618                           status	equ	0xFD8


Data Sizes:
    Strings     366
    Constant    239
    Data        3
    BSS         2496
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      88
    BANK0           160    111     147
    BANK1           256    105     246
    BANK2           256     20     198
    BANK3           256      0     100
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    terminal_operation@op3	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op3(BANK2[25]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_47(CODE[9]), STR_44(CODE[9]), STR_42(CODE[2]), STR_41(CODE[5]), 
		 -> STR_40(CODE[7]), STR_39(CODE[2]), STR_38(CODE[7]), STR_37(CODE[2]), 
		 -> STR_36(CODE[5]), STR_35(CODE[2]), STR_34(CODE[4]), STR_33(CODE[2]), 
		 -> STR_32(CODE[6]), STR_31(CODE[2]), STR_30(CODE[5]), STR_29(CODE[2]), 
		 -> STR_28(CODE[12]), STR_27(CODE[3]), STR_26(CODE[2]), STR_25(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), terminal_loop@op0(BANK1[25]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_53(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[15]), STR_23(CODE[37]), 
		 -> STR_21(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> main@str(BANK2[20]), print_time@str(BANK0[30]), print_time_dec@str(COMRAM[10]), display_dec@s(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    terminal_operation@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_operation@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), 

    terminal_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_operation@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK1[25]), 

    terminal_time@op2	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op2(BANK2[25]), 

    terminal_time@op1	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op1(BANK1[25]), 

    terminal_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_time@op0	PTR unsigned char  size(2) Largest target is 25
		 -> terminal_loop@op0(BANK1[25]), 

    terminal_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_at_hand@hand	PTR unsigned char  size(2) Largest target is 14
		 -> now(BANK1[14]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK1[8]), 

    F10134.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 20
		 -> main@str(BANK2[20]), STR_49(CODE[9]), STR_48(CODE[9]), STR_46(CODE[16]), 
		 -> STR_45(CODE[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 0

    RTCC_from_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_from_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_epoch@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    epoch_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    caltime_to_RTCC@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    RTCC_to_caltime@tm	PTR struct . size(2) Largest target is 14
		 -> now(BANK1[14]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), tx_buf(BANK1[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 120
		 -> STR_43(CODE[120]), STR_24(CODE[8]), print_time@str(BANK0[30]), STR_22(CODE[3]), 
		 -> print_time_dec@str(COMRAM[10]), STR_20(CODE[4]), STR_19(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK1[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), usb_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), rx_buf(BANK1[8]), tx_buf(BANK1[8]), usb_tx(BANK1[8]), 
		 -> usb_rx(BANK1[8]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> terminal_loop@command(BANK1[8]), usb_tx(BANK1[8]), usb_rx(BANK1[8]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    S1935ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> hardware_init@usbrx(BANK3[100]), hardware_init@usbtx(BIGRAMl[2000]), terminal_loop@buf(BANK1[100]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1497_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1497_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_terminal_loop
    _terminal_loop->_terminal_operation
    _terminal_operation->_terminal_time
    _terminal_time->_terminal_at_hand
    _terminal_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwmod
    _ringbuf_put_str->_ringbuf_put
    _RTCC_from_caltime->_epoch_to_caltime
    _atoi->___wmul
    _ringbuf_put_num->_ringbuf_put
    ___lwmod->___lwdiv
    _ringbuf_backspace->_ringbuf_num
    _software_init->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _hardware_init->_I2C_LCD_init
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _USB_loop->_get_string_usb
    _ringbuf_put->_ringbuf_num
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0  208151
                                              0 BANK2     20    20      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                          _RTCC_loop
                           _USB_loop
                      _hardware_init
                      _software_init
                            _sprintf
                      _terminal_loop
 ---------------------------------------------------------------------------------
 (1) _terminal_loop                                      111   107      4  141125
                                            105 BANK0      6     2      4
                                              0 BANK1    105   105      0
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
                 _terminal_operation
 ---------------------------------------------------------------------------------
 (2) _terminal_operation                                  10     0     10  115824
                                             95 BANK0     10     0     10
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                    _ringbuf_put_str
                             _strcmp
                      _terminal_time
 ---------------------------------------------------------------------------------
 (3) _terminal_time                                        9     1      8  100011
                                             86 BANK0      9     1      8
                               _atoi
                       _month_length
                         _print_time
                             _strcmp
                   _terminal_at_hand
 ---------------------------------------------------------------------------------
 (4) _terminal_at_hand                                     7     0      7   53534
                                             79 BANK0      7     0      7
                  _RTCC_from_caltime
                               _atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (5) _print_time                                          32    30      2   27848
                                             47 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             39    21     18   13930
                                             12 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _ringbuf_put_str                                      4     0      4    6304
                                             15 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    2     0      2   15564
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (4) _strcmp                                               6     2      4    4893
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    9923
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8776
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5    7063
                                             15 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     946
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     955
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1443
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (1) _software_init                                        0     0      0   20809
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
 ---------------------------------------------------------------------------------
 (2) _RTCC_from_epoch                                      2     0      2    9844
                                             47 BANK0      2     0      2
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (6) _epoch_to_caltime                                    14    12      2    8225
                                             33 BANK0     14    12      2
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (7) _get_quot_rem                                         8     4      4    4608
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     717
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _caltime_to_RTCC                                      2     0      2    1200
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (7) _d_to_x                                               1     1      0     745
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     683
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_SetCursor                                    4     3      1    1540
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Puts                                         5     3      2    1475
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _hardware_init                                        0     0      0    4693
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     212
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1257
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1541
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1541
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1250
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         3     3      0    1590
                                              7 BANK0      3     3      0
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Clear                                        1     1      0     727
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Command                                      2     2      0     727
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            2     1      1     569
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (6) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   16414
                                             20 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (6) _ringbuf_put                                          7     4      3    4542
                                              8 BANK0      7     4      3
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2253
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (7) _ringbuf_num                                          8     6      2    1169
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    3026
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     300
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    5282
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2522
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2389
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    2151
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7223
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (6) _RTCC_from_RTCC                                       2     0      2    7223
                                             38 BANK0      2     0      2
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (7) _caltime_to_epoch                                    13    11      2    5927
                                             25 BANK0     13    11      2
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (8) _month_length                                         6     5      1    2404
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     909
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    2750
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (7) _RTCC_to_caltime                                      3     1      2     401
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (8) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   32149
                                             30 COMRAM    14    14      0
                            _USB_ISR
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   32149
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   32149
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    4311
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   18560
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   18263
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   13860
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4809
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4694
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    4311
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1199
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     789
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     428
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
   _hardware_init
     _I2C_LCD_init
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _software_init
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
     _RTCC_from_epoch
       _caltime_to_RTCC
         _d_to_x
           ___awdiv
       _epoch_to_caltime
         _get_quot_rem
           ___lldiv
           ___lmul
             ___lldiv (ARG)
             _month_length (ARG)
               ___awmod
         _month_length
           ___awmod
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _terminal_loop
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       _ringbuf_num
     _ringbuf_put_num
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ringbuf_put
         _ringbuf_num
     _ringbuf_put_str
       _ringbuf_put
         _ringbuf_num
     _terminal_operation
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _ringbuf_put_str
         _ringbuf_put
           _ringbuf_num
       _strcmp
       _terminal_time
         _atoi
           ___wmul
           _isdigit
         _month_length
           ___awmod
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               _ringbuf_num
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _strcmp
         _terminal_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _atoi (ARG)
             ___wmul
             _isdigit
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 _ringbuf_num
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               _ringbuf_num

 _ISR (ROOT)
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      64      12       39.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     14      C6      10       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      F6       7       96.1%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6F      93       5       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      58       1       92.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     30B       8        0.0%
DATA                 0      0     ADB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Oct 09 12:59:20 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FDAB  
                      __size_of_I2C_Start 0034                           _ringbuf_put_num 34D6  
                         _ringbuf_put_str 38AE                              ___awdiv@sign 0065  
                                      _ms 010E                             _USBDeviceInit 15F6  
                     ___wmul@multiplicand 0062                         ??_RTCC_from_epoch 0091  
                      __size_of_CDCInitEP 006E                              __CFG_CP0$OFF 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0039      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                                     l132 166C               __end_of_USBStdGetDscHandler 1AF6  
                                     l193 3C64                                       l194 3C62  
                                     l490 135A                                       l549 3FE2  
                                     l581 3370                                       l654 3D38  
                                     l750 3C12                                       l495 13AE  
                                     l930 2D58                                       l755 3AB8  
                                     _BDT 000D00                                       l669 3FFC  
                                     l854 34D8                                       l936 2558  
                                     l949 11F4                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                       get_string_usb@len 006F                             ?_get_quot_rem 0079  
                      caltime_to_epoch@tm 0079                                _USBSuspend 3EF0  
                                     _now 0146                         _RTCC_from_caltime 3F1A  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 148E                                _TXSTA1bits 000FAD  
                          _USBDeviceState 001D                        ?_RTCC_from_caltime 008F  
                   ??_USBCtrlTrfRxService 002D                              _I2C_LCD_Puts 320A  
                __size_ofi2_USBDeviceInit 013A                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0035                         ??_I2C_LCD_Command 0064  
                                    ?_ISR 002D                    __end_of_get_string_usb 3B32  
                        _terminal_at_hand 3914                              _I2C_LCD_init 344A  
                                    l1052 3B7C                                      l1092 3CD4  
                                    l1604 1F08                USBConfigureEndpoint@handle 0033  
                                    l1960 35D4                                      l1970 38A4  
                                    l8000 01CC                                      l1897 2AFE  
                                    l8002 01E6                                      l8012 022A  
                                    l8030 02A6                                      l8014 0260  
                                    l8200 39CA                                      l8024 0292  
                                    l8008 020E                                      l8050 0344  
                                    l8034 02D6                                      l8026 0298  
                                    l8060 0378                                      l8044 0300  
                                    l8134 3CEA                                      l8222 1E7E  
                                    l8206 1E1C                                      l8038 02DC  
                                    l8152 23EE                                      l8144 23B8  
                                    l8320 1F4A                                      l8224 1EC8  
                                    l8208 1E24                                      l8080 03FA  
                                    l8048 0338                        __CFG_WPFP$PAGE_127 000000  
                                    l7610 2FB8                                      l8146 23D4  
                                    l8402 1404                                      l8330 1F98  
                                    l8322 1F56                                      l8138 3CFE  
                                    l8250 1646                                      l8226 1ED0  
                                    l8218 1E6A                                      l8082 0400  
                                    l8074 03D8                                      l8058 036C  
                                    l8066 03A2                                      l8090 0474  
                                    l8164 2454                                      l8420 145E  
                                    l8404 1414                                      l8412 143A  
                                    l8068 03AE                                      l8092 0498  
                                    l8500 07A4                                      l7630 3030  
                                    l7622 300A                                      l7614 2FCC  
                                    l7606 2FA6                                      l8166 246C  
                                    l8422 1464                                      l8414 1448  
                                    l8334 1FCA                                      l8262 167A  
                                    l8270 168E                                      l8254 1664  
                                    l8190 395C                                      l8502 07DE  
                                    l7616 2FDA                                      l8424 148A  
                                    l8328 1F90                                      l7712 289E  
                                    l7704 2878                                      l8088 0464  
                                    l7618 2FE4                                      l7626 301A  
                                    l8362 1332                                      l8338 1FFE  
                                    l8354 3F86                                      l7642 207E  
                                    l8274 16AC                                      l8450 3238  
                                    l7722 2A78                                      l8194 397A  
                                    l8506 0826                                      l9218 1892  
                                    l8380 1398                                      l8364 133E  
                                    l8532 3AF8                                      l8516 3D5A  
                                    l8284 171C                                      l7708 2888  
                                    l7724 2A8A                                      l7820 357A  
                                    l7804 3E34                                      l8196 3988  
                                    l9260 19B8                                      l9244 1948  
                                    l8374 1364                                      l8534 3AFE  
                                    l8518 3D60                                      l8550 2956  
                                    l8278 16B6                                      l7734 2AEA  
                                    l7726 2A94                                      l7822 3588  
                                    l8470 0546                                      l9246 197E  
                                    l7664 376E                                      l8368 134E  
                                    l8552 296E                                      l8456 326C  
                                    l7680 27F8                                      l7832 35C4  
                                    l7824 3592                                      l7840 3856  
                                    l8480 0610                                      l8464 04F0  
                                    l8704 1B3E                                      l9248 1990  
                                    l7658 2344                                      l8394 13DE  
                                    l8386 13B4                                      l7746 27C0  
                                    l8458 3298                                      l7842 3864  
                                    l8634 34E8                                      l8490 06DA  
                                    l8482 064A                                      l8474 058E  
                                    l8466 04FE                                      l8706 1B58  
                                    l7668 3796                                      l7772 0EA0  
                                    l7780 0F00                                      l7692 282E  
                                    l7932 1276                                      l8652 32E2  
                                    l7844 386E                                      l8644 354E  
                                    l8476 05C8                                      l7766 0E90  
                                    l8558 2974                                      l7854 3FB2  
                                    l8662 3D96                                      l7694 283C  
                                    l7686 2810                                      l7926 1266  
                                    l8638 350C                                      l7862 38EA  
                                    l7950 000E                                      l8494 0722  
                                    l8486 0692                                      l8718 1BBE  
                                    l8902 0B44                                      l7784 0F20  
                                    l7768 0E96                                      l8576 3C2C  
                                    l7696 2846                                      l7928 126C  
                                    l7848 3894                                      l8496 075C  
                                    l7778 0EFA                                      l8690 349C  
                                    l8682 345A                                      l7858 38B0  
                                    l7962 004C                                      l8906 0B84  
                                    l8914 0BBA                                      l8850 089A  
                                    l7788 0F86                                      l8588 3ABC  
                                    l7964 0066                                      l7956 002C  
                                    l8860 094A                                      l8694 34A6  
                                    l8686 3472                                      l8678 3450  
                                    l7958 003E                                      l8854 08C4  
                                    l7984 0144                                      l7976 0110  
                                    l7968 008A                                      l8698 34BE  
                                    l7994 01AC                                      l7986 0150  
                                    l8890 0ACA                                      l8882 0A40  
                                    l8874 09EC                                      l8866 0998  
                                    l8858 0944                                      l8948 371C  
                                    l7996 01B8                                      l7988 0158  
                                    l8892 0AF4                                      l8884 0A46  
                                    l8876 09F2                                      l8868 099E  
                                    l8896 0B1E                                      l8898 0B26  
                                    STR_4 FFFA                                      STR_7 FFFC  
                                    STR_9 FFF8                                      u8010 3D44  
                                    u7400 2390                                      u7410 2392  
                                    u7340 22EE                                      u7350 22F0  
                   ??_USBCtrlTrfTxService 002D                                      u7360 2320  
                                    u8320 1322                                      u7380 2336  
                                    u8260 1F3A                                      u7700 390C  
                                    u7390 2338                                      _UCFG 000F39  
                                    u8328 1326                                      u7378 2324  
                                    u7707 3902                                      u8268 1F3E  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u8470 325A                                      u8480 328E  
                                    u7690 38DA                                      _UEIE 000F37  
                                    u9437 3266                                      u8477 3250  
                                    u9447 3462                                      u8487 3284  
                                    u9457 34AE                                      u7697 38D0  
                                    u9467 402E                                      u9477 3CDA  
                                    _UEIR 000F63                                      _UCON 000F65  
                         _CDCDataInHandle 00E0                       ??_RTCC_from_caltime 0091  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 00E4  
                                    _atoi 1E1A                                      _main 1888  
                ??i2_USBTransferOnePacket 0031                             _software_init 36E0  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr0l 000FE9  
                                    fsr2h 000FDA                                      indf1 000FE7  
                             _BaudRateGen 010A                                      fsr1l 000FE1  
                                    indf2 000FDF                                      fsr2l 000FD9  
                        __end_of_I2C_Send 4006                           _USBDeviceAttach 3C36  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 1006  
                        __end_of_I2C_Stop 4070                                      pclat 000FFA  
                        __end_of_I2C_init 4066                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00A2  
                      terminal_loop@ascii 01F2                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 21D8                    ??_USBCtrlTrfOutHandler 002F  
                          terminal_loop@i 01F3                              ___param_bank 000010  
               ??_USBStdFeatureReqHandler 0041                             _I2C_LCD_Clear 4020  
                         ??_terminal_loop 00CD                           ??_terminal_time 00BE  
                                   ??_ISR 004B                    __size_of_I2C_IdleCheck 0020  
                ??_USBStdGetStatusHandler 002D                              print_time@tx 008F  
                          ?_USBDeviceInit 002D                         ??_RTCC_to_caltime 0064  
                           __CFG_PLLDIV$2 000000                              _BAUDCON1bits 000F7E  
               __end_of_RTCC_from_caltime 3F40                                     ?_atoi 0066  
                                   ?_main 002D                   __size_of_put_string_usb 0034  
                          ??_get_quot_rem 007D                           __end_of___awdiv 28AA  
                                   _ADRES 000FC3                                     STR_20 FFE3  
                                   STR_13 FFF6                                     STR_30 FFD9  
                                   STR_31 FFF0                                     STR_15 FFA8  
                                   STR_23 FF08                                     STR_32 FFCE  
                                   STR_40 FFC0                                     STR_24 FFB1  
                                   STR_33 FF4A                                     STR_41 FFD4  
                                   STR_25 FF82                                     STR_26 FFEC  
                                   STR_42 FFEE                                     STR_34 FFE7  
                                   STR_50 FF5B                                     STR_35 FFD2  
                                   STR_27 FFEB                                     STR_19 FFE3  
                                   STR_51 FF4C                                     STR_43 FE90  
                                   STR_36 FFDE                                     STR_44 FF9F  
                                   STR_28 FF76                                     STR_52 FF3D  
                         __end_of___awmod 303C                                     STR_29 FFE9  
                                   STR_37 FFF2                                     STR_53 FFB9  
                                   STR_45 FF6A                                     STR_38 FFC7  
                                   STR_46 FF2D                                     STR_39 FFF4  
                                   STR_47 FF8D                                     STR_48 FF6D  
                                   STR_49 FF96         __size_of_USBCtrlEPServiceComplete 00FA  
                         __end_of___lldiv 2B10                           ___awdiv@divisor 0062  
                  __end_of_USBDeviceTasks 15F6                                     _LATB2 007C52  
               ?_USBCtrlEPServiceComplete 002D                           __end_of___lwdiv 35DE  
                         __end_of___lwmod 38AE                                     i2l132 17B4  
                                   i2l144 14C2                                     i2l218 1D9A  
                                   i2l154 1570                                     i2l331 2C86  
                                   i2l155 15F2                                     i2l156 1582  
                                   i2l360 0C06                                     i2l281 2EE0  
                                   i2l345 210A                                     i2l354 215A  
                                   i2l436 2E6E                                     i2l284 2F72  
                                   i2l285 2EF6                                     i2l438 2EA4  
                                   i2l286 2EFA                                     i2l294 3B76  
                                   i2l379 0DD8                                     _UADDR 000F38  
                         ___awdiv@counter 0064                           ??_hardware_init 006A  
                                   _TMR1H 000FCF                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _USTAT 000F64        __size_of_USBCtrlEPAllowStatusStage 00C4  
                     ___lmul@multiplicand 0071                            __CFG_FCMEN$OFF 000000  
         __end_of_USBCtrlEPAllowDataStage 3174                                     _sd000 FE8C  
                                   _sd001 FDF6                                     _sd002 FE2A  
                    caltime_to_epoch@year 007F                                i2memset@p1 002D  
                         __end_of_dpowers FDAB                           __end_of_isdigit 3E40  
                      __size_of_RTCC_init 0032                           ?_get_string_usb 006D  
                     terminal_loop@i_4771 01F1                        __size_of_RTCC_loop 0040  
                        ringbuf_delete@rb 0060                                     atoi@a 006B  
                                   atoi@s 0066                         __end_of_I2C_Start 3D4A  
                                   tablat 000FF5                            ?_software_init 002D  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3842  
                        __end_of_USB_init 1012                          __end_of_USB_loop 33BE  
              __size_of_ringbuf_backspace 0090                                     status 000FD8  
                         __end_of_sprintf 04A8                          __end_ofi2_memset 3E6E  
                       month_length@month 0066                   __end_of_ringbuf_put_num 355C  
                 __end_of_ringbuf_put_str 3914                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00DE                            ?_I2C_LCD_Clear 002D  
                         terminal_loop@rx 00CB                           terminal_loop@tx 00C9  
                         __initialization 3660                           terminal_time@tx 00B6  
                            __end_of_atoi 1F12                              __end_of_main 19C0  
                   _control_signal_bitmap 00EC                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@tm 0086                 __size_of_USBCtrlEPService 00D0  
                           print_time@str 0091                                    ??_atoi 0068  
                                  ??_main 00CF                             __activetblptr 000003  
                         ?_USBDeviceTasks 002D                               ?_USBSuspend 002D  
                            _cdc_mem_type 00E9                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 3FAC                   __end_of_USBDeviceAttach 3C70  
                        _CDCDataOutHandle 00E2                         _getsUSBUSART$1886 006B  
                       _I2C_LCD_SetCursor 3E6E                                    _EECON2 000FA7  
                                  _ANCON0 000F48                                    _ANCON1 000F49  
                        ___awdiv@dividend 0060                                 ??_USB_ISR 004B  
                      I2C_LCD_Command@ans 0065                           getsUSBUSART@len 0069  
                   __size_of_CDCTxService 0190                                    i2l1324 004C  
                                  i2l1327 0068                                    i2l5012 2CD8  
                                  i2l5004 2CAC                                    i2l5006 2CC6  
                          __CFG_WDTEN$OFF 000000                                    i2l5024 2D34  
                                  i2l5210 21F6                                    i2l5026 2D4A  
                                  i2l5034 2E24                                    i2l5060 2E8E  
                                  i2l5052 2E62                                    i2l5044 2E4C  
                                  i2l5214 2202                                    i2l5038 2E36  
                                  i2l5224 222E                                    i2l5232 2268  
                                  i2l6120 2C4C                                    i2l5234 2274  
                                  i2l5242 22AE                                    i2l6106 2C06  
                                  i2l5410 3126                                    i2l6132 2C8E  
                                  i2l6108 2C0C                                    i2l5068 2EAC  
                                  i2l6126 2C6C                                    i2l5190 3DEA  
                                  i2l5502 2F18                                    i2l5430 24B8  
                                  i2l5414 3140                                    i2l5600 0E4E  
                                  i2l5504 2F3A                                    i2l5512 2F5A  
                                  i2l5360 3E4A                                    i2l5440 24EC  
                                  i2l6312 29CA                                    i2l5194 3DF0  
                                  i2l5530 0C00                                    i2l5434 24C0  
                                  i2l6330 2A38                                    i2l5380 2B56  
                                  i2l6092 3A32                                    i2l6084 39EA  
                                  i2l5188 3DE4                                    i2l5364 3E5C  
                                  i2l6324 2A18                                    i2l6316 29D2  
                                  i2l5550 0CC0                                    i2l5552 0CC4  
                                  i2l5544 0C7A                                    i2l5464 19D0  
                                  i2l5456 2532                                    i2l6328 2A32  
                                  i2l6272 3DD8                                    i2l5546 0CB8  
                                  i2l5490 1ADA                                    i2l6274 3DDC  
                                  i2l5572 0D70                                    i2l5556 0CE0  
                                  i2l5484 1ACE                                    i2l5476 1A70  
                                  i2l5468 19E2                                    i2l6700 15AE  
                                  i2l6620 14A8                                    i2l5582 0DB6  
                                  i2l5566 0D3A                                    i2l5558 0D02  
                                  i2l5486 1AD4                                    i2l5478 1A76  
                                  i2l6702 15C2                                    i2l5904 1C2E  
                                  i2l4960 3BDC                                    i2l5592 0DFA  
                                  i2l5584 0DC4                                    i2l5568 0D56  
                                  i2l5496 2EEA                                    i2l6296 3B72  
                                  i2l6560 1794                                    i2l5930 1CD4  
                                  i2l5914 1C60                                    i2l4946 31D6  
                                  i2l5594 0E16                                    i2l6706 15CE  
                                  i2l6650 14EC                                    i2l6642 14DA  
                                  i2l7522 005C                                    i2l5908 1C3C  
                                  i2l4948 31F0                                    i2l4956 3BCC  
                                  i2l5860 1D44                                    i2l6572 17C2  
                                  i2l6580 17D6                                    i2l6564 17AE  
                                  i2l6708 15EE                                    i2l6628 14BA  
                                  i2l5926 1CBA                                    i2l5598 0E40  
                                  i2l5950 2118                                    i2l6662 1520  
                                  i2l5960 2130                                    i2l5952 211E  
                                  i2l5872 1DB0                                    i2l5880 1DC4  
                                  i2l5856 1D3A                                    i2l6584 17F2  
                                  i2l6680 1566                                    i2l6672 153C  
                                  i2l6656 1514                                    i2l5962 2138  
                                  i2l6594 1856                                    i2l6666 152C  
                                  i2l5964 213E                                    i2l5948 2112  
                                  i2l6588 17FA                                    i2l5974 2174  
                                  i2l6686 157A                                    i2l5978 2192  
                      ?_I2C_LCD_SetCursor 0066                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0031                         ??i2_USBDeviceInit 0035  
                      _terminal_loop$5947 01EF           __size_ofi2_USBTransferOnePacket 00C0  
                          __CFG_WPDIS$OFF 000000                  __end_of_is_usb_available 3FEA  
                      epoch_to_caltime@tm 0081                      get_string_usb@rx_len 0072  
                       _shortPacketStatus 0024                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                        ringbuf_put_num@i 0074                           USBDeviceTasks@i 004A  
                   caltime_to_epoch@epoch 0081               USBStdFeatureReqHandler@pUEP 0042  
                USBTransferOnePacket@data 0061                        _terminal_time$5948 00BE  
              USBCtrlTrfInHandler@lastDTS 002E                           ??_USBDeviceInit 0068  
                            ?_ringbuf_pop 0068                              ?_ringbuf_num 0060  
                            ?_ringbuf_put 0068                     caltime_to_epoch@month 0085  
                                  ___lmul 375A                              ?_putUSBUSART 0060  
                         _caltime_to_RTCC 2556                                    ___wmul 3C70  
                      ??_epoch_to_caltime 0083                                 ??___awdiv 0064  
                               ??___awmod 0064                                    _d_to_x 3EC6  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 2006  
                    ringbuf_put_num@value 0071                              ?_timer0_init 002D  
                       __end_of_RTCC_init 3DB0                              ?_timer1_init 0060  
                               ??___lwdiv 0064                         __end_of_RTCC_loop 3BBA  
                               ??___lwmod 006B                              ?_timer3_init 002D  
                       _USBEnableEndpoint 3BBA           __size_of_USBStdGetStatusHandler 00B6  
                                  _memset 3CE0                                    clear_0 3668  
                                  clear_1 367A                                    clear_2 3686  
                         put_string_usb@s 006C                                    clear_3 3692  
                                  clear_4 369E                                    clear_5 36AA  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                           ___awmod@counter 0064  
                                  _x_to_d 3F8A                        ?_USBEnableEndpoint 0035  
                                  _rx_buf 015C                __size_of_RTCC_from_caltime 0026  
                                  _usb_rx 016C                                    _usb_tx 0174  
                                  _tx_buf 0164                                    _strcmp 3978  
           __size_of_USBTransferOnePacket 00DE                 __size_of_caltime_to_epoch 0292  
                      _terminal_operation 1AF6                                 ??_isdigit 0060  
                               ?_I2C_Send 002D                              _CDCTxService 12FE  
                               ?_I2C_Stop 002D                              __mediumconst FDA0  
                               ?_I2C_init 002D                 __end_of_I2C_LCD_SetCursor 3E9A  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0036  
                          ?_I2C_IdleCheck 002D                                 ??_sprintf 007E  
                     ?_terminal_operation 00BF                               _CtrlTrfData 000D38  
                         ??_software_init 0091                      terminal_loop@command 017C  
                    _controlTransferState 0022                      __CFG_LS48MHZ$SYS48X8 000000  
                              __accesstop 0060                   __end_of__initialization 36DA  
                            __pbssBIGRAMl 0364                      __end_of_get_quot_rem 2704  
                           ___rparam_used 000001                           ??_I2C_LCD_Clear 0066  
                         _RTCC_from_epoch 4006                  __size_of_USBStallHandler 0048  
                        ?_ringbuf_put_num 006F                          ?_ringbuf_put_str 006F  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 002A  
                        terminal_loop@op0 0114                          terminal_loop@op1 012D  
                        terminal_loop@op2 0280                          terminal_loop@op3 0299  
                        terminal_loop@buf 018B                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 3BFA                             __end_of_sd000 FE90  
                           __end_of_sd001 FE2A                             __end_of_sd002 FE5E  
                        terminal_time@op0 00B8                          terminal_time@op1 00BA  
                        terminal_time@op2 00BC                              __pidataBANK0 1014  
                            __pidataBANK1 1012                      ??_terminal_operation 00C9  
                __end_of_terminal_at_hand 3978          __size_of_USBCtrlEPAllowDataStage 009C  
           __size_of_USBConfigureEndpoint 0096               __end_of_USBCtrlTrfInHandler 2C96  
                         __CFG_DSWDTPS$G2 000000                           _I2C_LCD_Command 3CA8  
                          _put_string_usb 3D4A                    i2_USBTransferOnePacket 2C96  
                               ?_USB_init 002D                                 ?_USB_loop 002D  
                        I2C_LCD_Command@c 0064                                ??_I2C_Send 0062  
                       _CDCTxService$1934 0068                                ??_I2C_Stop 0062  
                              _cdc_notice 0100                   __size_of_ringbuf_delete 0026  
                               ?i2_memset 002D                                _cdc_rx_len 00EA  
                              ??_I2C_init 0060                                _cdc_tx_len 00EB  
              caltime_to_epoch@month_3928 0080                  ??_USBCtrlTrfSetupHandler 0047  
                        ?_USBDeviceAttach 002D                    _USBStdGetStatusHandler 2ED2  
                            sprintf@width 008D                                __pbssBANK0 00CF  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                   __end_of_caltime_to_RTCC 262E  
                         _RTCC_to_caltime 2D56               __size_of_USBWakeFromSuspend 0032  
                             _pBDTEntryIn 000A          __end_of_USBCtrlEPServiceComplete 1E1A  
             __size_of_USBCheckCDCRequest 00BE                     __end_of_weekday_3char FE7A  
                    USBCtrlTrfRxService@i 002D                                   ?___lmul 006D  
                                 ?___wmul 0060                                   ?_d_to_x 002D  
                  __end_of_put_string_usb 3D7E                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FE7A                      I2C_LCD_SetCursor@row 0066  
                        _USBCtrlEPService 297A                                   ?_x_to_d 002D  
                            I2C_Send@data 0062                                _ep_data_in 0010  
                                 ?_strcmp 0060               __end_of_USBCtrlTrfRxService 1D20  
                      _USBCheckStdRequest 20F6                                ??_USB_init 0069  
                       _configDescriptor1 FDB3                                ??_USB_loop 0074  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                                ??i2_memset 0033  
             __end_of_USBCtrlTrfTxService 22BA                       _USBStdSetCfgHandler 2478  
              __size_of_I2C_LCD_SetCursor 002C                    I2C_LCD_SetCursor@F9811 01F4  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                    terminal_operation@tx 00BF                                   _RTCVALH 000F3B  
                                 _RTCVALL 000F3A                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 0136                                   _UIEbits 000F36  
                                 _USB_ISR 1000                   __end_of_RTCC_from_epoch 4020  
                    timer1_init@prescaler 0062                                   _UIRbits 000F62  
                        __CFG_CFGPLLEN$ON 000000                             _cdc_trf_state 0021  
                           ?_month_length 0066                       epoch_to_caltime@day 0087  
                     epoch_to_caltime@num 008B                         RTCC_from_epoch@tm 008F  
                               _I2C_Start 3D16                                   _pCDCDst 00D8  
                                 _pCDCSrc 00DB                     __size_of_getsUSBUSART 00F4  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 37D4                                   __Lparam 0000  
                            USB_loop@data 0076                   __end_of_I2C_LCD_Command 3CE0  
                       ringbuf_put_num@rb 006F                __size_of_USBEnableEndpoint 0040  
                       ringbuf_put_str@rb 006F                      ??_USBCheckStdRequest 0047  
           __size_of_USBCtrlTrfOutHandler 005E                             ?_ringbuf_init 0060  
                                 ___awdiv 27DA                           __size_of___lmul 007A  
                                 ___awmod 2F88                                   ___lldiv 2A4A  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0038  
                   ringbuf_put_num@digits 0073                                   ___lwdiv 355C  
                         ?_put_string_usb 006C                         ??_USBStallHandler 002D  
                                 ___lwmod 3842                           __size_of_d_to_x 002A  
                   __end_of_terminal_loop 0BDC                     __end_of_terminal_time 0862  
                    __size_of_ringbuf_pop 00D0                      __size_of_ringbuf_num 00F0  
                    __size_of_ringbuf_put 00D6                           __CFG_STVREN$OFF 000000  
                    __size_of_putUSBUSART 0024               epoch_to_caltime@month_cache 00F2  
                                 __pcinit 3660                        getsUSBUSART@buffer 0067  
                         __size_of_memset 0036                 __end_of_configDescriptor1 FDF6  
                                 __ramtop 0F00                 terminal_loop@command_init 00EF  
                    __size_of_timer0_init 003C                      __size_of_timer1_init 0052  
                                 __ptext0 1888                                   __ptext1 0862  
                                 __ptext2 1AF6                                   __ptext3 04A8  
                                 __ptext4 3914                                   __ptext5 33BE  
                                 __ptext6 0000                                   __ptext7 38AE  
                                 __ptext8 3F1A                                   __ptext9 3978  
                                 _inPipes 0025                      __size_of_timer3_init 002C  
                         __size_of_x_to_d 0022                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 001B                                 _T0CONbits 000FD5  
                        _time_change_flag 00ED                          _caltime_to_epoch 0E76  
                         __size_of_strcmp 0064                              __size_of_ISR 009A  
                               _T1CONbits 000FCD                                   _dpowers FDA1  
                            ??_USBSuspend 0041                   __size_of_RTCC_from_RTCC 001A  
                                 _isdigit 3E12                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                        hardware_init@usbrx 0300  
                      hardware_init@usbtx 0364                             I2C_LCD_init@i 0068  
                               _T5CONbits 000F22                     __end_of_hardware_init 30D8  
                         i2_USBDeviceInit 174E                          i2USBDeviceInit@i 0035  
                      __end_of_USB_CD_Ptr FDB3                                   _sprintf 0000  
         __size_of_USBCtrlTrfSetupHandler 0082                   __end_of_RTCC_to_caltime 2E14  
                                 main@str 02B2                     __size_of_get_quot_rem 00D6  
                    end_of_initialization 36DA                              _getsUSBUSART 1F12  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FDB1  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0015  
                          ??_month_length 0067                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
         _dummy_encapsulated_cmd_response 0154                  ?_USBStdFeatureReqHandler 002D  
                        ?_caltime_to_RTCC 0069                                ?_I2C_Start 0062  
                   ??_USBStdSetCfgHandler 0041                           ___lldiv@divisor 0064  
                    timer3_init@prescaler 0061                                ?_CDCInitEP 002D  
                         ___lldiv@counter 006C                         ?_is_usb_available 002D  
                      __end_of_USBSuspend 3F1A                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 30D8                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                  _USBCtrlEPServiceComplete 1D20  
                                 strcmp@r 0065                _USBStatusStageEnabledFlag1 001E  
              _USBStatusStageEnabledFlag2 001F                        USBEnableEndpoint@p 0036  
                        __CFG_DSBOREN$OFF 000000                                 _RTCC_init 3D7E  
                               _RTCC_loop 3B7A                 epoch_to_caltime@day_cache 0112  
                            _get_quot_rem 262E                                _print_time 33BE  
                          _ringbuf_delete 3F40                 __size_of_epoch_to_caltime 01F6  
                        __CFG_CPUDIV$OSC1 000000                        _BothEP0OutUOWNsSet 0017  
                     RTCC_from_caltime@tm 008F                         __size_of_I2C_Send 001C  
                       __size_of_I2C_Stop 000A                         __size_of_I2C_init 0012  
               USBConfigureEndpoint@EPNum 0032                ?_USBCtrlEPAllowStatusStage 002D  
                        ?_RTCC_from_epoch 008F       USER_USB_CALLBACK_EVENT_HANDLER@size 003D  
                               _USTATcopy 002C                   timer1_init@clock_select 0060  
            __end_of_USBTransferOnePacket 2478                          __CFG_IOL1WAY$OFF 000000  
                       putUSBUSART@length 0062                       __CFG_MSSP7B_EN$MSK7 000000  
                        ?_I2C_LCD_Command 002D                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 35DE                            ringbuf_pop@ret 006E  
                 ?i2_USBTransferOnePacket 002D                     __end_of_USBDeviceInit 174E  
                       ?_terminal_at_hand 00AF                            __end_of___lmul 37D4  
                          __end_of___wmul 3CA8                            __end_of_d_to_x 3EF0  
                 __end_ofi2_USBDeviceInit 1888                    __end_of_ringbuf_delete 3F66  
                      ??_terminal_at_hand 00B6                                 i2memset@c 002F  
                               i2memset@n 0031                                 i2memset@p 0033  
                          __end_of_memset 3D16                                ?_RTCC_init 002D  
                              ?_RTCC_loop 002D                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0019                            __end_of_x_to_d 3FAC  
                   epoch_to_caltime@month 008A                            __end_of_strcmp 39DC  
                     start_initialization 3660                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 002D                               __end_of_ISR 00A2  
           USBCtrlTrfRxService@byteToRead 002E                         __size_of_USB_init 000A  
                       __size_of_USB_loop 0090                             ?_I2C_LCD_Puts 0064  
                           ?_I2C_LCD_init 002D                               _cdc_data_rx 0200  
                             _cdc_data_tx 0240                         __size_ofi2_memset 002E  
            __end_of_USBConfigureEndpoint 320A                          ?_RTCC_to_caltime 0062  
         __end_of_USBStdFeatureReqHandler 0E76         __end_of_USBCtrlEPAllowStatusStage 2BD4  
                   __end_of_software_init 375A                  __end_of_USBCtrlEPService 2A4A  
                             ??_I2C_Start 0063                 ??_USBCtrlEPAllowDataStage 002E  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 0068  
                   __end_of_I2C_LCD_Clear 403A                    _pBDTEntryEP0OutCurrent 0013  
                 USBTransferOnePacket@dir 0060                   USBTransferOnePacket@len 0063  
          __end_ofi2_USBTransferOnePacket 2D56                       ringbuf_put_num@temp 0075  
                                ??___lmul 0075                                  ??___wmul 0064  
                          USB_loop@rx_len 0074                       _USBStdGetDscHandler 19C0  
                                ??_d_to_x 0068               __size_of_terminal_operation 0116  
                       __CFG_ADCSEL$BIT12 000000                               __pdataBANK0 00F2  
                             __pdataBANK1 01F4                                  ??_memset 0066  
                __size_of_ringbuf_put_num 0086                  __size_of_ringbuf_put_str 0066  
                                ??_x_to_d 0060                           ?_ringbuf_delete 0060  
                                ??_strcmp 0064                      __end_of_month_length 239A  
                          _RTCC_from_RTCC 403A                    _USBActiveConfiguration 002B  
          __end_of_USBStdGetStatusHandler 2F88                               ?_print_time 008F  
                             __pbssCOMRAM 0001                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 018B  
                           __pcstackBANK2 02B2              __size_of_USBCtrlTrfInHandler 00C2  
                          ??_I2C_LCD_Puts 0066                            ??_I2C_LCD_init 0067  
                    __end_of_ringbuf_init 3A8E                      ?_USBStdGetDscHandler 002D  
                            _isdigit$5486 0061                                  ?_USB_ISR 002D  
              __end_of_USBWakeFromSuspend 3DE2                               sprintf@flag 008B  
                             sprintf@prec 0082                           _USBStallHandler 3B32  
                            _pBDTEntryOut 00CF                __end_of_USBCheckCDCRequest 2ED2  
                __end_of_caltime_to_epoch 1108                           millis_timer@cnt 00E6  
                __size_of_USBDeviceAttach 003A                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 0060                                 __pintcode 0008  
                           __pmediumconst FDA0                                  ?___awdiv 0060  
                                ?___awmod 0060                                  ?___lldiv 0060  
                                ?___lwdiv 0060                     _is_usb_available$2041 0060  
                                ?___lwmod 0067                    __end_of_RTCC_from_RTCC 4054  
                         I2C_LCD_Puts@ans 0067                          ?i2_USBDeviceInit 002D  
              USBCBSendResume@delay_count 00DE                               ??_RTCC_init 0060  
                             ??_RTCC_loop 0088                      _USBTransferOnePacket 239A  
                             I2C_Start@rw 0062                                  ?_isdigit 002D  
                        _epoch_to_caltime 1108                                  _I2C_Send 3FEA  
                                _I2C_Stop 4066                      __CFG_RTCOSC$T1OSCREF 000000  
                                _I2C_init 4054                     __end_of_I2C_IdleCheck 3FCC  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 3A3A  
                     ringbuf_backspace@rb 0068                     ??_USBStdGetDscHandler 002D  
                             _ep_data_out 00D5                          ___lwdiv@quotient 0065  
                   terminal_at_hand@value 00B5                                  ?_sprintf 006C  
            __size_of_USBCtrlTrfRxService 0114             USBConfigureEndpoint@direction 002D  
                               d_to_x@dec 0068                                  _CTMUCONH 000FB3  
                                _CTMUCONL 000FB2                                  _CTMUICON 000FB1  
            __size_of_USBCtrlTrfTxService 00E2                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 0064                                  _LATAbits 000F89  
              ??_USBCtrlEPServiceComplete 002E                                  _IPR1bits 000F9F  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _IPR5bits 000F99  
                                _PIE5bits 000F91                       __size_of_print_time 008C  
                                i2u416_40 2258                                  i2u416_47 224E  
                                _PIR1bits 000F9E                                  i2u418_40 229E  
                                i2u450_40 1AC4                                  i2u418_47 2294  
                                i2u450_47 1ABA                                  _PIR2bits 000FA1  
                                i2u447_40 1A3C                                  i2u447_47 1A32  
                                i2u448_40 1A6C                                  i2u448_47 1A62  
                                _PIR5bits 000F98                epoch_to_caltime@year_cache 00EE  
               USBCtrlEPService@setup_cnt 0049                             ??_ringbuf_pop 006A  
                           ??_ringbuf_num 0062                             ??_ringbuf_put 006B  
                                _RCONbits 000FD0                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 001A  
                   terminal_operation@op0 00C1                     terminal_operation@op1 00C3  
                   terminal_operation@op2 00C5                     terminal_operation@op3 00C7  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00E2                             ??_timer3_init 0060  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                    _USBConfigureEndpoint 3174                           ?_RTCC_from_RTCC 0086  
        __size_of_USBStdFeatureReqHandler 029A                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
                                _USB_init 1008                                  _USB_loop 332E  
               __size_of_is_usb_available 001E                             ?_CDCTxService 002D  
                            _RemoteWakeup 0018                        I2C_LCD_init@i_4683 0069  
                                i2_memset 3E40                         ??_ringbuf_put_num 0074  
                       ??_ringbuf_put_str 0073                             ringbuf_pop@rb 0068  
                           ringbuf_num@rb 0060                   __end_of_USBStallHandler 3B7A  
                           I2C_Start@adrs 0063                             ringbuf_put@rb 0068  
                       ___lmul@multiplier 006D                               _INTCON2bits 000FF1  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 2556  
                        __size_of_USB_ISR 0006                      epoch_to_caltime@year 0089  
                  __size_of_terminal_loop 037A                    __size_of_terminal_time 03BA  
                 __size_of_get_string_usb 0052                        __end_of_device_dsc FE8C  
                 ?_USBCtrlTrfSetupHandler 002D                   USBStdGetStatusHandler@p 002E  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                      __end_of_I2C_LCD_Puts 329E  
                                _SetupPkt 000D30                             _weekday_3char FE5E  
                  __size_of_hardware_init 009C                      __end_of_I2C_LCD_init 34D6  
                   __size_of_month_length 00E0                        ringbuf_put_str@str 0071  
                   ?_USBConfigureEndpoint 002D                  __size_of_caltime_to_RTCC 00D8  
                       ??_USBDeviceAttach 0060                          __size_of___awdiv 00D0  
                        __size_of___awmod 00B4                         I2C_IdleCheck@mask 0061  
                        __size_of___lldiv 00C6                          __size_of___lwdiv 0082  
                        __size_of___lwmod 006C                       __end_of_ringbuf_pop 297A  
                     __end_of_ringbuf_num 20F6                       __end_of_ringbuf_put 27DA  
                     __end_of_putUSBUSART 3F8A                               _line_coding 0184  
                          ??_CDCTxService 0067                       __end_of_timer0_init 3C36  
                   __size_of_ringbuf_init 0054                       __end_of_timer1_init 3AE0  
                              sprintf@len 0089                       __end_of_timer3_init 3EC6  
                              sprintf@val 0087                          __size_of_isdigit 002E  
                 __size_of_USBDeviceTasks 0168                           ___lwdiv@divisor 0062  
                         ___lwdiv@counter 0064                      timer0_init@prescaler 0061  
                                __ptext10 1E1A                                  __ptext11 3E12  
                                __ptext20 1108                                  __ptext12 3C70  
                                __ptext21 262E                                  __ptext13 34D6  
                                __ptext30 3A8E                                  __ptext22 2A4A  
                                __ptext14 3842                                  __ptext31 3BFA  
                                __ptext23 2556                                  __ptext15 355C  
                                __ptext40 4020                                  __ptext32 3A3A  
                                __ptext24 3EC6                                  __ptext16 3F40  
                                __ptext41 3CA8                                  __ptext33 1008  
                                __ptext25 27DA                                  __ptext17 329E  
                                __ptext50 3D4A                                  __ptext42 4066  
                                __ptext34 15F6                                  __ptext26 3E6E  
                                __ptext18 36E0                                  __ptext51 3F66  
                                __ptext43 3D16                                  __ptext35 3CE0  
                                __ptext27 320A                                  __ptext19 4006  
                                __ptext60 22BA                                  __ptext52 3AE0  
                                __ptext44 3FEA                                  __ptext36 3C36  
                                __ptext28 303C                                  __ptext61 2F88  
                                __ptext53 3FCC                                  __ptext45 3FAC  
                                __ptext37 3D7E                                  __ptext29 3E9A  
                                __ptext70 3EF0                                  __ptext62 375A  
                                __ptext54 1F12                                  __ptext46 332E  
                                __ptext38 4054                                  __ptext71 3B32  
                                __ptext63 2D56                                  __ptext55 12FE  
                                __ptext47 2704                                  __ptext39 344A  
                                __ptext80 19C0                                  __ptext72 297A  
                                __ptext64 3F8A                                  __ptext56 239A  
                                __ptext48 28AA                                  __ptext81 0BDC  
                                __ptext73 35DE                                  __ptext57 3B7A  
                                __ptext49 2006                                  __ptext90 2B10  
                                __ptext82 3DE2                                  __ptext74 1D20  
                                __ptext66 1000                                  __ptext58 403A  
                                __ptext91 2BD4                                  __ptext83 2E14  
                                __ptext75 30D8                                  __ptext67 148E  
                                __ptext59 0E76                                  __ptext92 21D8  
                                __ptext84 37D4                                  __ptext76 20F6  
                                __ptext68 174E                                  __ptext85 2C96  
                                __ptext77 2478                                  __ptext69 3DB0  
                                __ptext86 3BBA                                  __ptext78 3E40  
                                __ptext87 3174                                  __ptext79 2ED2  
                                __ptext88 39DC                                  __ptext89 1C0C  
                            _SSP1CON1bits 000FC6                              _SSP1CON2bits 000FC5  
               __size_of_terminal_at_hand 0064                          __size_of_sprintf 04A8  
                   RTCC_loop@prev_halfsec 00E8                      terminal_at_hand@hand 00B1  
                           __size_of_atoi 00F8            __end_of_USBCtrlTrfSetupHandler 3660  
                           __size_of_main 0138                         ?_USBCtrlEPService 002D  
                            _month_length 22BA                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 0047                  __size_of_RTCC_from_epoch 001A  
                     _USBCtrlTrfInHandler 2BD4                                  _outPipes 0001  
                        ??_ringbuf_delete 0062                      _USBCtrlTrfOutHandler 39DC  
                            _ringbuf_init 3A3A                                  atoi@sign 006A  
               _USBCtrlEPAllowStatusStage 2B10                                 x_to_d@hex 0061  
                            _SSP1STATbits 000FC7                             _terminal_loop 0862  
                  ??_USBTransferOnePacket 0064                             _terminal_time 04A8  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 001C  
                            ??_print_time 0091                  CDCTxService@byte_to_send 006B  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                    ringbuf_put@asciicode 006A                      ?_USBCtrlTrfInHandler 002D  
           USBCtrlTrfTxService@byteToSend 002D              I2C_LCD_SetCursor@row_offsets 0067  
                           _hardware_init 303C                                  isdigit@c 0062  
                                memset@p1 0060                          ?_USBStallHandler 002D  
                USBStdFeatureReqHandler@p 0045                          get_quot_rem@quot 0079  
                       RTCC_to_caltime@tm 0062                                  intlevel2 0000  
                               sprintf@ap 0083                                 sprintf@cp 0085  
                               sprintf@sp 006C                    __size_of_USBDeviceInit 0158  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3E12  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0030  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 003F          ?_USER_USB_CALLBACK_EVENT_HANDLER 0039  
         _USER_USB_CALLBACK_EVENT_HANDLER 3DE2                          ___lwmod@dividend 0067  
            i2USBTransferOnePacket@handle 0032                          ___lldiv@dividend 0060  
                              _RCSTA1bits 000FAC                       terminal_at_hand@max 00B4  
                     terminal_at_hand@min 00B3                         ?_caltime_to_epoch 0079  
                       _ringbuf_backspace 329E                  __end_of_epoch_to_caltime 12FE  
                __size_of_RTCC_to_caltime 00BE                                _OSCCONbits 000FD3  
              __end_of_terminal_operation 1C0C                        __end_of_print_time 344A  
              i2USBTransferOnePacket@data 002E                        ??_caltime_to_epoch 007B  
                      ?_ringbuf_backspace 0068                    ??_USBConfigureEndpoint 002E  
                   ?_USBCtrlTrfOutHandler 002D                               _ringbuf_pop 28AA  
                             _ringbuf_num 2006                               _ringbuf_put 2704  
                             _putUSBUSART 3F66                       _USBCtrlTrfRxService 1C0C  
                             _timer0_init 3BFA                        _USBWakeFromSuspend 3DB0  
                             _timer1_init 3A8E                               _timer3_init 3E9A  
                          ?_terminal_loop 00C9                            ?_terminal_time 00B6  
                 _USBStdFeatureReqHandler 0BDC                        _USBCheckCDCRequest 2E14  
                     _USBCtrlTrfTxService 21D8                       ??_ringbuf_backspace 006A  
                         get_quot_rem@div 007B                           get_quot_rem@num 007D  
                              _RTCCFGbits 000F3F                    __size_of_software_init 007A  
                                sprintf@c 008C                                  sprintf@f 006E  
                     ?_USBWakeFromSuspend 002D                                  strcmp@s1 0060  
                                strcmp@s2 0062                          _is_usb_available 3FCC  
                        ___lldiv@quotient 0068                           ___lwmod@divisor 0069  
                       caltime_to_RTCC@tm 0069                         ??_caltime_to_RTCC 006B  
                   ??_USBCtrlTrfInHandler 002E                     _USBAlternateInterface 00F0  
                         ___lwmod@counter 006B                        terminal_at_hand@tx 00AF  
                     ?_USBCheckCDCRequest 002D                            ?_hardware_init 002D  
               i2USBTransferOnePacket@dir 002D                 i2USBTransferOnePacket@len 0030  
                     USBEnableEndpoint@ep 0038                           _endpoint_number 0023  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 002D  
         epoch_to_caltime@day_since_epoch 0085                             ?_getsUSBUSART 0067  
                ?_USBCtrlEPAllowDataStage 002D                            _get_string_usb 3AE0  
                    ?_USBCtrlTrfTxService 002D                 __end_of_ringbuf_backspace 332E  
            _USBStatusStageTimeoutCounter 0020                     __size_of_I2C_LCD_Puts 0094  
                   __size_of_I2C_LCD_init 008C                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 0065                      __end_of_CDCTxService 148E  
                    ??_USBCheckCDCRequest 002D                                _USB_CD_Ptr FDB1  
                        ??_RTCC_from_RTCC 0088  
