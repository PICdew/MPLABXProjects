

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 12 11:02:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataCOMRAM
    47  0017CA                     __pidataCOMRAM:
    48                           	opt stack 0
    49                           
    50                           ;initializer for I2C_LCD_SetCursor@F9802
    51  0017CA  00                 	db	0
    52  0017CB  40                 	db	64
    53  0000                     _ADCON0bits	set	4034
    54  0000                     _ADCON1bits	set	4033
    55  0000                     _ADRESH	set	4036
    56  0000                     _ADRESL	set	4035
    57  0000                     _ANCON0	set	3912
    58  0000                     _ANCON1	set	3913
    59  0000                     _BAUDCON1bits	set	3966
    60  0000                     _INTCON2bits	set	4081
    61  0000                     _INTCONbits	set	4082
    62  0000                     _IPR1bits	set	3999
    63  0000                     _IPR2bits	set	4002
    64  0000                     _OSCCONbits	set	4051
    65  0000                     _OSCTUNEbits	set	3995
    66  0000                     _PIE1bits	set	3997
    67  0000                     _PIE2bits	set	4000
    68  0000                     _PIR1bits	set	3998
    69  0000                     _PIR2bits	set	4001
    70  0000                     _PORTAbits	set	3968
    71  0000                     _RCREG1	set	4015
    72  0000                     _RCSTA1bits	set	4012
    73  0000                     _SPBRG1	set	4016
    74  0000                     _SPBRGH1	set	3967
    75  0000                     _SSP1ADD	set	4040
    76  0000                     _SSP1BUF	set	4041
    77  0000                     _SSP1CON1	set	4038
    78  0000                     _SSP1CON2	set	4037
    79  0000                     _SSP1CON2bits	set	4037
    80  0000                     _SSP1STAT	set	4039
    81  0000                     _T0CONbits	set	4053
    82  0000                     _T1CONbits	set	4045
    83  0000                     _T3CONbits	set	3961
    84  0000                     _TMR1H	set	4047
    85  0000                     _TRISA	set	3986
    86  0000                     _TRISB	set	3987
    87  0000                     _TRISC	set	3988
    88  0000                     _TXREG1	set	4014
    89  0000                     _TXSTA1bits	set	4013
    90  0000                     _BCL1IF	set	32011
    91  0000                     _SSP1IF	set	31987
    92                           
    93                           	psect	smallconst
    94  000F00                     __psmallconst:
    95                           	opt stack 0
    96  000F00  00                 	db	0
    97  000F01                     __stringdata:
    98                           	opt stack 0
    99  000F01                     STR_2:
   100  000F01  53                 	db	83	;'S'
   101  000F02  74                 	db	116	;'t'
   102  000F03  61                 	db	97	;'a'
   103  000F04  74                 	db	116	;'t'
   104  000F05  69                 	db	105	;'i'
   105  000F06  6F                 	db	111	;'o'
   106  000F07  6E                 	db	110	;'n'
   107  000F08  00                 	db	0
   108  000F09                     STR_1:
   109  000F09  43                 	db	67	;'C'
   110  000F0A  68                 	db	104	;'h'
   111  000F0B  61                 	db	97	;'a'
   112  000F0C  72                 	db	114	;'r'
   113  000F0D  67                 	db	103	;'g'
   114  000F0E  65                 	db	101	;'e'
   115  000F0F  00                 	db	0
   116  000F10                     __end_of__stringdata:
   117                           	opt stack 0
   118                           
   119                           ; #config settings
   120  000F10  00                 	db	0	; dummy byte at the end
   121  0000                     
   122                           	psect	cinit
   123  0015A6                     __pcinit:
   124                           	opt stack 0
   125  0015A6                     start_initialization:
   126                           	opt stack 0
   127  0015A6                     __initialization:
   128                           	opt stack 0
   129                           
   130                           ; Clear objects allocated to COMRAM (8 bytes)
   131  0015A6  EE00  F024         	lfsr	0,__pbssCOMRAM
   132  0015AA  0E08               	movlw	8
   133  0015AC                     clear_0:
   134  0015AC  6AEE               	clrf	postinc0,c
   135  0015AE  06E8               	decf	wreg,f,c
   136  0015B0  E1FD               	bnz	clear_0
   137                           
   138                           ; Initialize objects allocated to COMRAM (2 bytes)
   139                           ; load TBLPTR registers with __pidataCOMRAM
   140  0015B2  0ECA               	movlw	low __pidataCOMRAM
   141  0015B4  6EF6               	movwf	tblptrl,c
   142  0015B6  0E17               	movlw	high __pidataCOMRAM
   143  0015B8  6EF7               	movwf	tblptrh,c
   144  0015BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   145  0015BC  6EF8               	movwf	tblptru,c
   146  0015BE  0009               	tblrd		*+	;fetch initializer
   147  0015C0  CFF5 F02C          	movff	tablat,__pdataCOMRAM
   148  0015C4  0009               	tblrd		*+	;fetch initializer
   149  0015C6  CFF5 F02D          	movff	tablat,__pdataCOMRAM+1
   150  0015CA                     end_of_initialization:
   151                           	opt stack 0
   152  0015CA                     __end_of__initialization:
   153                           	opt stack 0
   154  0015CA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   155  0015CC  6EF8               	movwf	tblptru,c
   156  0015CE  0E0F               	movlw	high __Lsmallconst
   157  0015D0  6EF7               	movwf	tblptrh,c
   158  0015D2  0100               	movlb	0
   159  0015D4  EF4A  F008         	goto	_main	;jump to C main() function
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  000024                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000024                     _tx_buf:
   171                           	opt stack 0
   172  000024                     	ds	5
   173  000029                     _sw:
   174                           	opt stack 0
   175  000029                     	ds	3
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	dataCOMRAM
   184  00002C                     __pdataCOMRAM:
   185                           	opt stack 0
   186  00002C                     I2C_LCD_SetCursor@F9802:
   187                           	opt stack 0
   188  00002C                     	ds	2
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	cstackBANK1
   197  000100                     __pcstackBANK1:
   198                           	opt stack 0
   199  000100                     main@txbuf:
   200                           	opt stack 0
   201                           
   202                           ; 200 bytes @ 0x0
   203  000100                     	ds	200
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	cstackCOMRAM
   212  000001                     __pcstackCOMRAM:
   213                           	opt stack 0
   214  000001                     button_timer_interrupt@bt:
   215                           	opt stack 0
   216  000001                     ringbuf_pop@rb:
   217                           	opt stack 0
   218  000001                     ringbuf_num@rb:
   219                           	opt stack 0
   220  000001                     i2ringbuf_push@rb:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x0
   224  000001                     	ds	2
   225  000003                     ??_ringbuf_pop:
   226  000003                     ??_ringbuf_num:
   227  000003                     button_timer_interrupt@sw_value:
   228                           	opt stack 0
   229  000003                     i2ringbuf_push@asciicode:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x2
   233  000003                     	ds	1
   234  000004                     ??_button_timer_interrupt:
   235  000004                     ??i2_ringbuf_push:
   236                           
   237                           ; 0 bytes @ 0x3
   238  000004                     	ds	2
   239  000006                     ringbuf_pop@ret:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x5
   243  000006                     	ds	1
   244  000007                     i2tx_send@asciicode:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x6
   248  000007                     	ds	1
   249  000008                     ??_ISR:
   250                           
   251                           ; 0 bytes @ 0x7
   252  000008                     	ds	14
   253  000016                     ISR@ascii:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x15
   257  000016                     	ds	1
   258  000017                     ??_timer0_init:
   259  000017                     ??_timer3_init:
   260  000017                     ??_I2C_IdleCheck:
   261  000017                     ?_ADC:
   262                           	opt stack 0
   263  000017                     ?___lwdiv:
   264                           	opt stack 0
   265  000017                     ?___lwmod:
   266                           	opt stack 0
   267  000017                     timer1_init@clock_select:
   268                           	opt stack 0
   269  000017                     ADC_init@p_ref:
   270                           	opt stack 0
   271  000017                     UART_init@interrupt_ON:
   272                           	opt stack 0
   273  000017                     Delay_ms@ms:
   274                           	opt stack 0
   275  000017                     ringbuf_init@rb:
   276                           	opt stack 0
   277  000017                     ringbuf_push@rb:
   278                           	opt stack 0
   279  000017                     ___lwdiv@dividend:
   280                           	opt stack 0
   281  000017                     ___lwmod@dividend:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x16
   285  000017                     	ds	1
   286  000018                     ??_timer1_init:
   287  000018                     timer0_init@prescaler:
   288                           	opt stack 0
   289  000018                     timer3_init@prescaler:
   290                           	opt stack 0
   291  000018                     I2C_IdleCheck@mask:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x17
   295  000018                     	ds	1
   296  000019                     ??_ADC:
   297  000019                     ??_Delay_ms:
   298  000019                     timer1_init@prescaler:
   299                           	opt stack 0
   300  000019                     ringbuf_push@asciicode:
   301                           	opt stack 0
   302  000019                     I2C_Start@rw:
   303                           	opt stack 0
   304  000019                     I2C_Send@data:
   305                           	opt stack 0
   306  000019                     ringbuf_init@internal_buf:
   307                           	opt stack 0
   308  000019                     ___lwdiv@divisor:
   309                           	opt stack 0
   310  000019                     ___lwmod@divisor:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x18
   314  000019                     	ds	1
   315  00001A                     ??_ringbuf_push:
   316  00001A                     I2C_Start@adrs:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x19
   320  00001A                     	ds	1
   321  00001B                     ADC@ch:
   322                           	opt stack 0
   323  00001B                     ringbuf_init@bufsize:
   324                           	opt stack 0
   325  00001B                     I2C_LCD_Command@c:
   326                           	opt stack 0
   327  00001B                     ___lwmod@counter:
   328                           	opt stack 0
   329  00001B                     I2C_LCD_Puts@s:
   330                           	opt stack 0
   331  00001B                     ___lwdiv@quotient:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x1A
   335  00001B                     	ds	1
   336  00001C                     I2C_LCD_Command@ans:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x1B
   340  00001C                     	ds	1
   341  00001D                     ??_I2C_LCD_Clear:
   342  00001D                     ??_I2C_LCD_Puts:
   343  00001D                     tx_send@asciicode:
   344                           	opt stack 0
   345  00001D                     I2C_LCD_SetCursor@row:
   346                           	opt stack 0
   347  00001D                     ___lwdiv@counter:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x1C
   351  00001D                     	ds	1
   352  00001E                     tx_sendn@value:
   353                           	opt stack 0
   354  00001E                     I2C_LCD_SetCursor@row_offsets:
   355                           	opt stack 0
   356  00001E                     I2C_LCD_Puts@ans:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x1D
   360  00001E                     	ds	2
   361  000020                     tx_sendn@digits:
   362                           	opt stack 0
   363  000020                     I2C_LCD_SetCursor@col:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x1F
   367  000020                     	ds	1
   368  000021                     tx_sendn@i:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x20
   372  000021                     	ds	1
   373  000022                     tx_sendn@temp:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x21
   377  000022                     	ds	2
   378  000024                     tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           
   385                           ; 0 bytes @ 0x23
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 79 in file "PIC18F27J53-ADC01.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  txbuf         200    0[BANK1 ] unsigned char [200]
   396 ;; Return value:  Size  Location     Type
   397 ;;                  2  278[COMRAM] int 
   398 ;; Registers used:
   399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;      Locals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;      Totals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   409 ;;Total ram usage:      200 bytes
   410 ;; Hardware stack levels required when called:    8
   411 ;; This function calls:
   412 ;;		_ADC
   413 ;;		_ADC_init
   414 ;;		_Delay_ms
   415 ;;		_I2C_LCD_Clear
   416 ;;		_I2C_LCD_Puts
   417 ;;		_I2C_LCD_SetCursor
   418 ;;		_I2C_LCD_init
   419 ;;		_I2C_init
   420 ;;		_UART_init
   421 ;;		_ringbuf_init
   422 ;;		_timer0_init
   423 ;;		_timer1_init
   424 ;;		_timer3_init
   425 ;;		_tx_send
   426 ;;		_tx_sendn
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text0
   433  001094                     __ptext0:
   434                           	opt stack 0
   435  001094                     _main:
   436                           	opt stack 23
   437                           
   438                           ;PIC18F27J53-ADC01.c: 80: OSCCONbits.IRCF = 7;
   439                           
   440                           ;incstack = 0
   441  001094  88D3               	bsf	4051,4,c	;volatile
   442  001096  8AD3               	bsf	4051,5,c	;volatile
   443  001098  8CD3               	bsf	4051,6,c	;volatile
   444                           
   445                           ;PIC18F27J53-ADC01.c: 81: OSCTUNEbits.PLLEN = 1;
   446  00109A  8C9B               	bsf	3995,6,c	;volatile
   447                           
   448                           ;PIC18F27J53-ADC01.c: 82: OSCCONbits.SCS = 0;
   449  00109C  0EFC               	movlw	-4
   450  00109E  16D3               	andwf	4051,f,c	;volatile
   451                           
   452                           ;PIC18F27J53-ADC01.c: 83: TRISA = 0b01000001;
   453  0010A0  0E41               	movlw	65
   454  0010A2  6E92               	movwf	3986,c	;volatile
   455                           
   456                           ;PIC18F27J53-ADC01.c: 84: TRISB = 0b00110000;
   457  0010A4  0E30               	movlw	48
   458  0010A6  6E93               	movwf	3987,c	;volatile
   459                           
   460                           ;PIC18F27J53-ADC01.c: 85: TRISC = 0b10000010;
   461  0010A8  0E82               	movlw	130
   462  0010AA  6E94               	movwf	3988,c	;volatile
   463                           
   464                           ;PIC18F27J53-ADC01.c: 86: ANCON0 = 0b11111110;
   465  0010AC  0EFE               	movlw	254
   466  0010AE  010F               	movlb	15	; () banked
   467  0010B0  6F48               	movwf	72,b	;volatile
   468                           
   469                           ;PIC18F27J53-ADC01.c: 87: ANCON1 = 0b00011111;
   470  0010B2  0E1F               	movlw	31
   471  0010B4  010F               	movlb	15	; () banked
   472  0010B6  6F49               	movwf	73,b	;volatile
   473                           
   474                           ; BSR set to: 15
   475                           ;PIC18F27J53-ADC01.c: 89: timer0_init(8);
   476  0010B8  0E08               	movlw	8
   477  0010BA  EC04  F00B         	call	_timer0_init
   478                           
   479                           ;PIC18F27J53-ADC01.c: 90: timer1_init(0, 2);
   480  0010BE  0E02               	movlw	2
   481  0010C0  6E17               	movwf	timer1_init@clock_select,c
   482  0010C2  0E00               	movlw	0
   483  0010C4  EC54  F00A         	call	_timer1_init
   484                           
   485                           ;PIC18F27J53-ADC01.c: 91: timer3_init(2);
   486  0010C8  0E02               	movlw	2
   487  0010CA  EC59  F00B         	call	_timer3_init
   488                           
   489                           ;PIC18F27J53-ADC01.c: 92: I2C_init();
   490  0010CE  ECD7  F00B         	call	_I2C_init	;wreg free
   491                           
   492                           ;PIC18F27J53-ADC01.c: 93: I2C_LCD_init();
   493  0010D2  ECD7  F009         	call	_I2C_LCD_init	;wreg free
   494                           
   495                           ;PIC18F27J53-ADC01.c: 94: ADC_init(0);
   496  0010D6  0E00               	movlw	0
   497  0010D8  EC91  F00B         	call	_ADC_init
   498                           
   499                           ;PIC18F27J53-ADC01.c: 96: UART_init(1);
   500  0010DC  0E01               	movlw	1
   501  0010DE  EC45  F00B         	call	_UART_init
   502                           
   503                           ;PIC18F27J53-ADC01.c: 97: uint8_t txbuf[200];
   504                           ;PIC18F27J53-ADC01.c: 98: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
   505  0010E2  0E00               	movlw	high _tx_buf
   506  0010E4  6E18               	movwf	ringbuf_init@rb+1,c
   507  0010E6  0E24               	movlw	low _tx_buf
   508  0010E8  6E17               	movwf	ringbuf_init@rb,c
   509  0010EA  0101               	movlb	1	; () banked
   510  0010EC  0E01               	movlw	high main@txbuf
   511  0010EE  6E1A               	movwf	ringbuf_init@internal_buf+1,c
   512  0010F0  0101               	movlb	1	; () banked
   513  0010F2  0E00               	movlw	low main@txbuf
   514  0010F4  6E19               	movwf	ringbuf_init@internal_buf,c
   515  0010F6  0EC8               	movlw	200
   516  0010F8  6E1B               	movwf	ringbuf_init@bufsize,c
   517  0010FA  EC97  F00A         	call	_ringbuf_init	;wreg free
   518                           
   519                           ;PIC18F27J53-ADC01.c: 100: INTCONbits.GIE = 1;
   520  0010FE  8EF2               	bsf	intcon,7,c	;volatile
   521                           
   522                           ;PIC18F27J53-ADC01.c: 102: I2C_LCD_Clear();
   523  001100  EC9F  F00B         	call	_I2C_LCD_Clear	;wreg free
   524                           
   525                           ;PIC18F27J53-ADC01.c: 103: I2C_LCD_SetCursor(0, 0);
   526  001104  0E00               	movlw	0
   527  001106  6E1D               	movwf	I2C_LCD_SetCursor@row,c
   528  001108  0E00               	movlw	0
   529  00110A  EC6C  F00B         	call	_I2C_LCD_SetCursor
   530                           
   531                           ;PIC18F27J53-ADC01.c: 104: I2C_LCD_Puts("Charge");
   532  00110E  0E0F               	movlw	high STR_1
   533  001110  6E1C               	movwf	I2C_LCD_Puts@s+1,c
   534  001112  0E09               	movlw	low STR_1
   535  001114  6E1B               	movwf	I2C_LCD_Puts@s,c
   536  001116  EC01  F00A         	call	_I2C_LCD_Puts	;wreg free
   537                           
   538                           ;PIC18F27J53-ADC01.c: 105: I2C_LCD_SetCursor(0, 1);
   539  00111A  0E01               	movlw	1
   540  00111C  6E1D               	movwf	I2C_LCD_SetCursor@row,c
   541  00111E  0E00               	movlw	0
   542  001120  EC6C  F00B         	call	_I2C_LCD_SetCursor
   543                           
   544                           ;PIC18F27J53-ADC01.c: 106: I2C_LCD_Puts("Station");
   545  001124  0E0F               	movlw	high STR_2
   546  001126  6E1C               	movwf	I2C_LCD_Puts@s+1,c
   547  001128  0E01               	movlw	low STR_2
   548  00112A  6E1B               	movwf	I2C_LCD_Puts@s,c
   549  00112C  EC01  F00A         	call	_I2C_LCD_Puts	;wreg free
   550  001130                     l1404:
   551                           
   552                           ;PIC18F27J53-ADC01.c: 109: if (sw.flag.press) {
   553  001130  B02B               	btfsc	_sw+2,0,c
   554                           
   555                           ;PIC18F27J53-ADC01.c: 110: sw.flag.press = 0;
   556  001132  902B               	bcf	_sw+2,0,c
   557                           
   558                           ;PIC18F27J53-ADC01.c: 111: }
   559                           ;PIC18F27J53-ADC01.c: 112: if (sw.flag.long_hold_1) {
   560  001134  B22B               	btfsc	_sw+2,1,c
   561                           
   562                           ;PIC18F27J53-ADC01.c: 113: sw.flag.long_hold_1 = 0;
   563  001136  922B               	bcf	_sw+2,1,c
   564                           
   565                           ;PIC18F27J53-ADC01.c: 114: }
   566                           ;PIC18F27J53-ADC01.c: 115: tx_sendn(ADC(0), 4);
   567  001138  0E00               	movlw	0
   568  00113A  ECB8  F00A         	call	_ADC
   569  00113E  C017  F01E         	movff	?_ADC,tx_sendn@value
   570  001142  C018  F01F         	movff	?_ADC+1,tx_sendn@value+1
   571  001146  0E04               	movlw	4
   572  001148  6E20               	movwf	tx_sendn@digits,c
   573  00114A  ECA5  F009         	call	_tx_sendn	;wreg free
   574                           
   575                           ;PIC18F27J53-ADC01.c: 116: tx_send('\n');
   576  00114E  0E0A               	movlw	10
   577  001150  ECAB  F00B         	call	_tx_send
   578                           
   579                           ;PIC18F27J53-ADC01.c: 117: Delay_ms(100);
   580  001154  0E00               	movlw	0
   581  001156  6E18               	movwf	Delay_ms@ms+1,c
   582  001158  0E64               	movlw	100
   583  00115A  6E17               	movwf	Delay_ms@ms,c
   584  00115C  EC7F  F00B         	call	_Delay_ms	;wreg free
   585  001160  D7E7               	goto	l1404
   586  001162                     __end_of_main:
   587                           	opt stack 0
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           intcon	equ	0xFF2
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           
   596 ;; *************** function _tx_sendn *****************
   597 ;; Defined at:
   598 ;;		line 53 in file "../My_header\My_UART_18F.h"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  value           2   29[COMRAM] unsigned int 
   601 ;;  digits          1   31[COMRAM] unsigned char 
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  i               1   32[COMRAM] unsigned char 
   604 ;;  temp            2   33[COMRAM] unsigned int 
   605 ;; Return value:  Size  Location     Type
   606 ;;		None               void
   607 ;; Registers used:
   608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   614 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   618 ;;Total ram usage:        6 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    5
   621 ;; This function calls:
   622 ;;		___lwdiv
   623 ;;		___lwmod
   624 ;;		_tx_send
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text1
   631  00134A                     __ptext1:
   632                           	opt stack 0
   633  00134A                     _tx_sendn:
   634                           	opt stack 25
   635                           
   636                           ;My_header\My_UART_18F.h: 54: while (digits--) {
   637                           
   638                           ;incstack = 0
   639  00134A  D02C               	goto	l1162
   640  00134C                     l160:
   641                           
   642                           ;My_header\My_UART_18F.h: 55: uint16_t temp = value;
   643  00134C  C01E  F022         	movff	tx_sendn@value,tx_sendn@temp
   644  001350  C01F  F023         	movff	tx_sendn@value+1,tx_sendn@temp+1
   645                           
   646                           ;My_header\My_UART_18F.h: 56: for (uint8_t i = 0; i < digits; i++) {
   647  001354  0E00               	movlw	0
   648  001356  6E21               	movwf	tx_sendn@i,c
   649  001358  D00F               	goto	l1156
   650  00135A                     l1152:
   651                           
   652                           ;My_header\My_UART_18F.h: 57: temp /= 10;
   653  00135A  C022  F017         	movff	tx_sendn@temp,___lwdiv@dividend
   654  00135E  C023  F018         	movff	tx_sendn@temp+1,___lwdiv@dividend+1
   655  001362  0E00               	movlw	0
   656  001364  6E1A               	movwf	___lwdiv@divisor+1,c
   657  001366  0E0A               	movlw	10
   658  001368  6E19               	movwf	___lwdiv@divisor,c
   659  00136A  EC2B  F00A         	call	___lwdiv	;wreg free
   660  00136E  C017  F022         	movff	?___lwdiv,tx_sendn@temp
   661  001372  C018  F023         	movff	?___lwdiv+1,tx_sendn@temp+1
   662  001376  2A21               	incf	tx_sendn@i,f,c
   663  001378                     l1156:
   664  001378  5020               	movf	tx_sendn@digits,w,c
   665  00137A  5C21               	subwf	tx_sendn@i,w,c
   666  00137C  A0D8               	btfss	status,0,c
   667  00137E  D7ED               	goto	l1152
   668                           
   669                           ;My_header\My_UART_18F.h: 58: }
   670                           ;My_header\My_UART_18F.h: 59: temp %= 10;
   671  001380  C022  F017         	movff	tx_sendn@temp,___lwmod@dividend
   672  001384  C023  F018         	movff	tx_sendn@temp+1,___lwmod@dividend+1
   673  001388  0E00               	movlw	0
   674  00138A  6E1A               	movwf	___lwmod@divisor+1,c
   675  00138C  0E0A               	movlw	10
   676  00138E  6E19               	movwf	___lwmod@divisor,c
   677  001390  EC76  F00A         	call	___lwmod	;wreg free
   678  001394  C017  F022         	movff	?___lwmod,tx_sendn@temp
   679  001398  C018  F023         	movff	?___lwmod+1,tx_sendn@temp+1
   680                           
   681                           ;My_header\My_UART_18F.h: 60: tx_send('0' + temp);
   682  00139C  5022               	movf	tx_sendn@temp,w,c
   683  00139E  0F30               	addlw	48
   684  0013A0  ECAB  F00B         	call	_tx_send
   685  0013A4                     l1162:
   686  0013A4  0620               	decf	tx_sendn@digits,f,c
   687  0013A6  2820               	incf	tx_sendn@digits& (0+255),w,c
   688  0013A8  B4D8               	btfsc	status,2,c
   689  0013AA  0012               	return	
   690  0013AC  D7CF               	goto	l160
   691  0013AE                     __end_of_tx_sendn:
   692                           	opt stack 0
   693                           tblptru	equ	0xFF8
   694                           tblptrh	equ	0xFF7
   695                           tblptrl	equ	0xFF6
   696                           tablat	equ	0xFF5
   697                           intcon	equ	0xFF2
   698                           postinc0	equ	0xFEE
   699                           wreg	equ	0xFE8
   700                           status	equ	0xFD8
   701                           
   702 ;; *************** function _tx_send *****************
   703 ;; Defined at:
   704 ;;		line 40 in file "../My_header\My_UART_18F.h"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  asciicode       1    wreg     unsigned char 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;  asciicode       1   28[COMRAM] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;		None               void
   711 ;; Registers used:
   712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   722 ;;Total ram usage:        1 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    4
   725 ;; This function calls:
   726 ;;		_ringbuf_push
   727 ;; This function is called by:
   728 ;;		_tx_sendn
   729 ;;		_main
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text2
   734  001756                     __ptext2:
   735                           	opt stack 0
   736  001756                     _tx_send:
   737                           	opt stack 25
   738                           
   739                           ;incstack = 0
   740                           ;tx_send@asciicode stored from wreg
   741  001756  6E1D               	movwf	tx_send@asciicode,c
   742                           
   743                           ;My_header\My_UART_18F.h: 41: ringbuf_push(&tx_buf, asciicode);
   744  001758  0E00               	movlw	high _tx_buf
   745  00175A  6E18               	movwf	ringbuf_push@rb+1,c
   746  00175C  0E24               	movlw	low _tx_buf
   747  00175E  6E17               	movwf	ringbuf_push@rb,c
   748  001760  C01D  F019         	movff	tx_send@asciicode,ringbuf_push@asciicode
   749  001764  EC2D  F009         	call	_ringbuf_push	;wreg free
   750                           
   751                           ;My_header\My_UART_18F.h: 42: PIE1bits.TX1IE = 1;
   752  001768  889D               	bsf	3997,4,c	;volatile
   753  00176A  0012               	return	
   754  00176C                     __end_of_tx_send:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           intcon	equ	0xFF2
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           status	equ	0xFD8
   764                           
   765 ;; *************** function _ringbuf_push *****************
   766 ;; Defined at:
   767 ;;		line 29 in file "../My_header\My_ringbuf.h"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  rb              2   22[COMRAM] PTR struct ringbuf
   770 ;;		 -> tx_buf(5), 
   771 ;;  asciicode       1   24[COMRAM] unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   783 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;Total ram usage:        6 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_tx_send
   794 ;;		_tx_sends
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text3
   799  00125A                     __ptext3:
   800                           	opt stack 0
   801  00125A                     _ringbuf_push:
   802                           	opt stack 25
   803                           
   804                           ;My_header\My_ringbuf.h: 30: rb->buf[rb->head] = asciicode;
   805                           
   806                           ;incstack = 0
   807  00125A  EE20 F003          	lfsr	2,3
   808  00125E  5017               	movf	ringbuf_push@rb,w,c
   809  001260  26D9               	addwf	fsr2l,f,c
   810  001262  5018               	movf	ringbuf_push@rb+1,w,c
   811  001264  22DA               	addwfc	fsr2h,f,c
   812  001266  50DF               	movf	indf2,w,c
   813  001268  6E1A               	movwf	??_ringbuf_push& (0+255),c
   814  00126A  501A               	movf	??_ringbuf_push,w,c
   815  00126C  0D01               	mullw	1
   816  00126E  C017  FFD9         	movff	ringbuf_push@rb,fsr2l
   817  001272  C018  FFDA         	movff	ringbuf_push@rb+1,fsr2h
   818  001276  CFDE F01B          	movff	postinc2,??_ringbuf_push+1
   819  00127A  CFDD F01C          	movff	postdec2,??_ringbuf_push+2
   820  00127E  50F3               	movf	prodl,w,c
   821  001280  241B               	addwf	??_ringbuf_push+1,w,c
   822  001282  6ED9               	movwf	fsr2l,c
   823  001284  50F4               	movf	prodh,w,c
   824  001286  201C               	addwfc	??_ringbuf_push+2,w,c
   825  001288  6EDA               	movwf	fsr2h,c
   826  00128A  C019  FFDF         	movff	ringbuf_push@asciicode,indf2
   827                           
   828                           ;My_header\My_ringbuf.h: 31: rb->head++;
   829  00128E  EE20 F003          	lfsr	2,3
   830  001292  5017               	movf	ringbuf_push@rb,w,c
   831  001294  26D9               	addwf	fsr2l,f,c
   832  001296  5018               	movf	ringbuf_push@rb+1,w,c
   833  001298  22DA               	addwfc	fsr2h,f,c
   834  00129A  2ADF               	incf	indf2,f,c
   835                           
   836                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->size) {
   837  00129C  EE20 F003          	lfsr	2,3
   838  0012A0  5017               	movf	ringbuf_push@rb,w,c
   839  0012A2  26D9               	addwf	fsr2l,f,c
   840  0012A4  5018               	movf	ringbuf_push@rb+1,w,c
   841  0012A6  22DA               	addwfc	fsr2h,f,c
   842  0012A8  50DF               	movf	indf2,w,c
   843  0012AA  6E1A               	movwf	??_ringbuf_push& (0+255),c
   844  0012AC  EE20 F002          	lfsr	2,2
   845  0012B0  5017               	movf	ringbuf_push@rb,w,c
   846  0012B2  26D9               	addwf	fsr2l,f,c
   847  0012B4  5018               	movf	ringbuf_push@rb+1,w,c
   848  0012B6  22DA               	addwfc	fsr2h,f,c
   849  0012B8  50DF               	movf	indf2,w,c
   850  0012BA  5C1A               	subwf	??_ringbuf_push,w,c
   851  0012BC  A0D8               	btfss	status,0,c
   852  0012BE  0012               	return	
   853                           
   854                           ;My_header\My_ringbuf.h: 33: rb->head = 0;
   855  0012C0  EE20 F003          	lfsr	2,3
   856  0012C4  5017               	movf	ringbuf_push@rb,w,c
   857  0012C6  26D9               	addwf	fsr2l,f,c
   858  0012C8  5018               	movf	ringbuf_push@rb+1,w,c
   859  0012CA  22DA               	addwfc	fsr2h,f,c
   860  0012CC  0E00               	movlw	0
   861  0012CE  6EDF               	movwf	indf2,c
   862  0012D0  0012               	return	
   863  0012D2                     __end_of_ringbuf_push:
   864                           	opt stack 0
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           prodh	equ	0xFF4
   870                           prodl	equ	0xFF3
   871                           intcon	equ	0xFF2
   872                           postinc0	equ	0xFEE
   873                           wreg	equ	0xFE8
   874                           indf2	equ	0xFDF
   875                           postinc2	equ	0xFDE
   876                           postdec2	equ	0xFDD
   877                           fsr2h	equ	0xFDA
   878                           fsr2l	equ	0xFD9
   879                           status	equ	0xFD8
   880                           
   881 ;; *************** function ___lwmod *****************
   882 ;; Defined at:
   883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  dividend        2   22[COMRAM] unsigned int 
   886 ;;  divisor         2   24[COMRAM] unsigned int 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  counter         1   26[COMRAM] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2   22[COMRAM] unsigned int 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   901 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;Total ram usage:        5 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    3
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_tx_sendn
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text4
   913  0014EC                     __ptext4:
   914                           	opt stack 0
   915  0014EC                     ___lwmod:
   916                           	opt stack 26
   917                           
   918                           ;incstack = 0
   919  0014EC  501A               	movf	___lwmod@divisor+1,w,c
   920  0014EE  1019               	iorwf	___lwmod@divisor,w,c
   921  0014F0  B4D8               	btfsc	status,2,c
   922  0014F2  D018               	goto	l809
   923  0014F4  0E01               	movlw	1
   924  0014F6  6E1B               	movwf	___lwmod@counter,c
   925  0014F8  D004               	goto	l1004
   926  0014FA                     l1002:
   927  0014FA  90D8               	bcf	status,0,c
   928  0014FC  3619               	rlcf	___lwmod@divisor,f,c
   929  0014FE  361A               	rlcf	___lwmod@divisor+1,f,c
   930  001500  2A1B               	incf	___lwmod@counter,f,c
   931  001502                     l1004:
   932  001502  AE1A               	btfss	___lwmod@divisor+1,7,c
   933  001504  D7FA               	goto	l1002
   934  001506                     l1006:
   935  001506  5019               	movf	___lwmod@divisor,w,c
   936  001508  5C17               	subwf	___lwmod@dividend,w,c
   937  00150A  501A               	movf	___lwmod@divisor+1,w,c
   938  00150C  5818               	subwfb	___lwmod@dividend+1,w,c
   939  00150E  A0D8               	btfss	status,0,c
   940  001510  D004               	goto	l1010
   941  001512  5019               	movf	___lwmod@divisor,w,c
   942  001514  5E17               	subwf	___lwmod@dividend,f,c
   943  001516  501A               	movf	___lwmod@divisor+1,w,c
   944  001518  5A18               	subwfb	___lwmod@dividend+1,f,c
   945  00151A                     l1010:
   946  00151A  90D8               	bcf	status,0,c
   947  00151C  321A               	rrcf	___lwmod@divisor+1,f,c
   948  00151E  3219               	rrcf	___lwmod@divisor,f,c
   949  001520  2E1B               	decfsz	___lwmod@counter,f,c
   950  001522  D7F1               	goto	l1006
   951  001524                     l809:
   952  001524  C017  F017         	movff	___lwmod@dividend,?___lwmod
   953  001528  C018  F018         	movff	___lwmod@dividend+1,?___lwmod+1
   954  00152C  0012               	return	
   955  00152E                     __end_of___lwmod:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           prodh	equ	0xFF4
   962                           prodl	equ	0xFF3
   963                           intcon	equ	0xFF2
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           indf2	equ	0xFDF
   967                           postinc2	equ	0xFDE
   968                           postdec2	equ	0xFDD
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8
   972                           
   973 ;; *************** function ___lwdiv *****************
   974 ;; Defined at:
   975 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  dividend        2   22[COMRAM] unsigned int 
   978 ;;  divisor         2   24[COMRAM] unsigned int 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  quotient        2   26[COMRAM] unsigned int 
   981 ;;  counter         1   28[COMRAM] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2   22[COMRAM] unsigned int 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;Total ram usage:        7 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    3
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_tx_sendn
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text5
  1006  001456                     __ptext5:
  1007                           	opt stack 0
  1008  001456                     ___lwdiv:
  1009                           	opt stack 26
  1010                           
  1011                           ;incstack = 0
  1012  001456  0E00               	movlw	0
  1013  001458  6E1C               	movwf	___lwdiv@quotient+1,c
  1014  00145A  0E00               	movlw	0
  1015  00145C  6E1B               	movwf	___lwdiv@quotient,c
  1016  00145E  501A               	movf	___lwdiv@divisor+1,w,c
  1017  001460  1019               	iorwf	___lwdiv@divisor,w,c
  1018  001462  B4D8               	btfsc	status,2,c
  1019  001464  D01C               	goto	l799
  1020  001466  0E01               	movlw	1
  1021  001468  6E1D               	movwf	___lwdiv@counter,c
  1022  00146A  D004               	goto	l984
  1023  00146C                     l982:
  1024  00146C  90D8               	bcf	status,0,c
  1025  00146E  3619               	rlcf	___lwdiv@divisor,f,c
  1026  001470  361A               	rlcf	___lwdiv@divisor+1,f,c
  1027  001472  2A1D               	incf	___lwdiv@counter,f,c
  1028  001474                     l984:
  1029  001474  AE1A               	btfss	___lwdiv@divisor+1,7,c
  1030  001476  D7FA               	goto	l982
  1031  001478                     l986:
  1032  001478  90D8               	bcf	status,0,c
  1033  00147A  361B               	rlcf	___lwdiv@quotient,f,c
  1034  00147C  361C               	rlcf	___lwdiv@quotient+1,f,c
  1035  00147E  5019               	movf	___lwdiv@divisor,w,c
  1036  001480  5C17               	subwf	___lwdiv@dividend,w,c
  1037  001482  501A               	movf	___lwdiv@divisor+1,w,c
  1038  001484  5818               	subwfb	___lwdiv@dividend+1,w,c
  1039  001486  A0D8               	btfss	status,0,c
  1040  001488  D005               	goto	l994
  1041  00148A  5019               	movf	___lwdiv@divisor,w,c
  1042  00148C  5E17               	subwf	___lwdiv@dividend,f,c
  1043  00148E  501A               	movf	___lwdiv@divisor+1,w,c
  1044  001490  5A18               	subwfb	___lwdiv@dividend+1,f,c
  1045  001492  801B               	bsf	___lwdiv@quotient,0,c
  1046  001494                     l994:
  1047  001494  90D8               	bcf	status,0,c
  1048  001496  321A               	rrcf	___lwdiv@divisor+1,f,c
  1049  001498  3219               	rrcf	___lwdiv@divisor,f,c
  1050  00149A  2E1D               	decfsz	___lwdiv@counter,f,c
  1051  00149C  D7ED               	goto	l986
  1052  00149E                     l799:
  1053  00149E  C01B  F017         	movff	___lwdiv@quotient,?___lwdiv
  1054  0014A2  C01C  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1055  0014A6  0012               	return	
  1056  0014A8                     __end_of___lwdiv:
  1057                           	opt stack 0
  1058                           tblptru	equ	0xFF8
  1059                           tblptrh	equ	0xFF7
  1060                           tblptrl	equ	0xFF6
  1061                           tablat	equ	0xFF5
  1062                           prodh	equ	0xFF4
  1063                           prodl	equ	0xFF3
  1064                           intcon	equ	0xFF2
  1065                           postinc0	equ	0xFEE
  1066                           wreg	equ	0xFE8
  1067                           indf2	equ	0xFDF
  1068                           postinc2	equ	0xFDE
  1069                           postdec2	equ	0xFDD
  1070                           fsr2h	equ	0xFDA
  1071                           fsr2l	equ	0xFD9
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _timer3_init *****************
  1075 ;; Defined at:
  1076 ;;		line 49 in file "../My_header\My_hedaer_18F.h"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  prescaler       1    wreg     unsigned char 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  prescaler       1   23[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;		None               void
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;Total ram usage:        2 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    3
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text6
  1105  0016B2                     __ptext6:
  1106                           	opt stack 0
  1107  0016B2                     _timer3_init:
  1108                           	opt stack 27
  1109                           
  1110                           ;incstack = 0
  1111                           ;timer3_init@prescaler stored from wreg
  1112  0016B2  6E18               	movwf	timer3_init@prescaler,c
  1113                           
  1114                           ;My_header\My_hedaer_18F.h: 50: T3CONbits.TMR3CS = 0;
  1115  0016B4  0E3F               	movlw	-193
  1116  0016B6  1679               	andwf	3961,f,c	;volatile
  1117                           
  1118                           ;My_header\My_hedaer_18F.h: 51: T3CONbits.T3OSCEN = 1;
  1119  0016B8  8679               	bsf	3961,3,c	;volatile
  1120                           
  1121                           ;My_header\My_hedaer_18F.h: 52: T3CONbits.T3CKPS = prescaler;
  1122  0016BA  C018  F017         	movff	timer3_init@prescaler,??_timer3_init
  1123  0016BE  3A17               	swapf	??_timer3_init,f,c
  1124  0016C0  5079               	movf	3961,w,c	;volatile
  1125  0016C2  1817               	xorwf	??_timer3_init,w,c
  1126  0016C4  0BCF               	andlw	-49
  1127  0016C6  1817               	xorwf	??_timer3_init,w,c
  1128  0016C8  6E79               	movwf	3961,c	;volatile
  1129                           
  1130                           ;My_header\My_hedaer_18F.h: 53: T3CONbits.RD163 = 0;
  1131  0016CA  9E79               	bcf	3961,7,c	;volatile
  1132                           
  1133                           ;My_header\My_hedaer_18F.h: 54: T3CONbits.TMR3ON = 1;
  1134  0016CC  8079               	bsf	3961,0,c	;volatile
  1135                           
  1136                           ;My_header\My_hedaer_18F.h: 55: IPR2bits.TMR3IP = 0;
  1137  0016CE  92A2               	bcf	4002,1,c	;volatile
  1138                           
  1139                           ;My_header\My_hedaer_18F.h: 56: PIR2bits.TMR3IF = 0;
  1140  0016D0  92A1               	bcf	4001,1,c	;volatile
  1141                           
  1142                           ;My_header\My_hedaer_18F.h: 57: PIE2bits.TMR3IE = 1;
  1143  0016D2  82A0               	bsf	4000,1,c	;volatile
  1144                           
  1145                           ;My_header\My_hedaer_18F.h: 58: INTCONbits.PEIE = 1;
  1146  0016D4  8CF2               	bsf	intcon,6,c	;volatile
  1147  0016D6  0012               	return	
  1148  0016D8                     __end_of_timer3_init:
  1149                           	opt stack 0
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           prodh	equ	0xFF4
  1155                           prodl	equ	0xFF3
  1156                           intcon	equ	0xFF2
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           indf2	equ	0xFDF
  1160                           postinc2	equ	0xFDE
  1161                           postdec2	equ	0xFDD
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _timer1_init *****************
  1167 ;; Defined at:
  1168 ;;		line 34 in file "../My_header\My_hedaer_18F.h"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  prescaler       1    wreg     unsigned char 
  1171 ;;  clock_select    1   22[COMRAM] unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  prescaler       1   24[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;		None               void
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1186 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1187 ;;Total ram usage:        3 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    3
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text7
  1198  0014A8                     __ptext7:
  1199                           	opt stack 0
  1200  0014A8                     _timer1_init:
  1201                           	opt stack 27
  1202                           
  1203                           ;incstack = 0
  1204                           ;timer1_init@prescaler stored from wreg
  1205  0014A8  6E19               	movwf	timer1_init@prescaler,c
  1206                           
  1207                           ;My_header\My_hedaer_18F.h: 35: T1CONbits.TMR1CS = clock_select;
  1208  0014AA  C017  F018         	movff	timer1_init@clock_select,??_timer1_init
  1209  0014AE  3A18               	swapf	??_timer1_init,f,c
  1210  0014B0  4618               	rlncf	??_timer1_init,f,c
  1211  0014B2  4618               	rlncf	??_timer1_init,f,c
  1212  0014B4  50CD               	movf	4045,w,c	;volatile
  1213  0014B6  1818               	xorwf	??_timer1_init,w,c
  1214  0014B8  0B3F               	andlw	-193
  1215  0014BA  1818               	xorwf	??_timer1_init,w,c
  1216  0014BC  6ECD               	movwf	4045,c	;volatile
  1217                           
  1218                           ;My_header\My_hedaer_18F.h: 36: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
  1219  0014BE  5017               	movf	timer1_init@clock_select,w,c
  1220  0014C0  0A02               	xorlw	2
  1221  0014C2  A4D8               	btfss	status,2,c
  1222  0014C4  D002               	goto	l88
  1223  0014C6  86CD               	bsf	4045,3,c	;volatile
  1224  0014C8  D001               	goto	l1042
  1225  0014CA                     l88:
  1226                           
  1227                           ;My_header\My_hedaer_18F.h: 37: else T1CONbits.T1OSCEN = 0;
  1228  0014CA  96CD               	bcf	4045,3,c	;volatile
  1229  0014CC                     l1042:
  1230                           
  1231                           ;My_header\My_hedaer_18F.h: 38: T1CONbits.T1CKPS = prescaler;
  1232  0014CC  C019  F018         	movff	timer1_init@prescaler,??_timer1_init
  1233  0014D0  3A18               	swapf	??_timer1_init,f,c
  1234  0014D2  50CD               	movf	4045,w,c	;volatile
  1235  0014D4  1818               	xorwf	??_timer1_init,w,c
  1236  0014D6  0BCF               	andlw	-49
  1237  0014D8  1818               	xorwf	??_timer1_init,w,c
  1238  0014DA  6ECD               	movwf	4045,c	;volatile
  1239                           
  1240                           ;My_header\My_hedaer_18F.h: 39: T1CONbits.nT1SYNC = 1;
  1241  0014DC  84CD               	bsf	4045,2,c	;volatile
  1242                           
  1243                           ;My_header\My_hedaer_18F.h: 40: T1CONbits.RD16 = 0;
  1244  0014DE  92CD               	bcf	4045,1,c	;volatile
  1245                           
  1246                           ;My_header\My_hedaer_18F.h: 41: T1CONbits.TMR1ON = 1;
  1247  0014E0  80CD               	bsf	4045,0,c	;volatile
  1248                           
  1249                           ;My_header\My_hedaer_18F.h: 42: IPR1bits.TMR1IP = 0;
  1250  0014E2  909F               	bcf	3999,0,c	;volatile
  1251                           
  1252                           ;My_header\My_hedaer_18F.h: 43: PIR1bits.TMR1IF = 0;
  1253  0014E4  909E               	bcf	3998,0,c	;volatile
  1254                           
  1255                           ;My_header\My_hedaer_18F.h: 44: PIE1bits.TMR1IE = 1;
  1256  0014E6  809D               	bsf	3997,0,c	;volatile
  1257                           
  1258                           ;My_header\My_hedaer_18F.h: 45: INTCONbits.PEIE = 1;
  1259  0014E8  8CF2               	bsf	intcon,6,c	;volatile
  1260  0014EA  0012               	return	
  1261  0014EC                     __end_of_timer1_init:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           indf2	equ	0xFDF
  1273                           postinc2	equ	0xFDE
  1274                           postdec2	equ	0xFDD
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _timer0_init *****************
  1280 ;; Defined at:
  1281 ;;		line 13 in file "../My_header\My_hedaer_18F.h"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  prescaler       1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  prescaler       1   23[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;Total ram usage:        2 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    3
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text8
  1310  001608                     __ptext8:
  1311                           	opt stack 0
  1312  001608                     _timer0_init:
  1313                           	opt stack 27
  1314                           
  1315                           ;incstack = 0
  1316                           ;timer0_init@prescaler stored from wreg
  1317  001608  6E18               	movwf	timer0_init@prescaler,c
  1318                           
  1319                           ;My_header\My_hedaer_18F.h: 14: T0CONbits.TMR0ON = 1;
  1320  00160A  8ED5               	bsf	4053,7,c	;volatile
  1321                           
  1322                           ;My_header\My_hedaer_18F.h: 15: T0CONbits.T08BIT = 1;
  1323  00160C  8CD5               	bsf	4053,6,c	;volatile
  1324                           
  1325                           ;My_header\My_hedaer_18F.h: 16: T0CONbits.T0CS = 0;
  1326  00160E  9AD5               	bcf	4053,5,c	;volatile
  1327                           
  1328                           ;My_header\My_hedaer_18F.h: 17: if (prescaler == 0) {
  1329  001610  6618               	tstfsz	timer0_init@prescaler,c
  1330  001612  D002               	goto	l83
  1331                           
  1332                           ;My_header\My_hedaer_18F.h: 18: T0CONbits.PSA = 1;
  1333  001614  86D5               	bsf	4053,3,c	;volatile
  1334                           
  1335                           ;My_header\My_hedaer_18F.h: 19: } else {
  1336  001616  D00A               	goto	l1030
  1337  001618                     l83:
  1338                           
  1339                           ;My_header\My_hedaer_18F.h: 20: T0CONbits.PSA = 0;
  1340  001618  96D5               	bcf	4053,3,c	;volatile
  1341                           
  1342                           ;My_header\My_hedaer_18F.h: 21: T0CONbits.T0PS = prescaler - 1;
  1343  00161A  C018  F017         	movff	timer0_init@prescaler,??_timer0_init
  1344  00161E  0EFF               	movlw	255
  1345  001620  2617               	addwf	??_timer0_init,f,c
  1346  001622  50D5               	movf	4053,w,c	;volatile
  1347  001624  1817               	xorwf	??_timer0_init,w,c
  1348  001626  0BF8               	andlw	-8
  1349  001628  1817               	xorwf	??_timer0_init,w,c
  1350  00162A  6ED5               	movwf	4053,c	;volatile
  1351  00162C                     l1030:
  1352                           
  1353                           ;My_header\My_hedaer_18F.h: 22: }
  1354                           ;My_header\My_hedaer_18F.h: 23: INTCONbits.T0IE = 1;
  1355  00162C  8AF2               	bsf	intcon,5,c	;volatile
  1356                           
  1357                           ;My_header\My_hedaer_18F.h: 24: INTCONbits.TMR0IF = 0;
  1358  00162E  94F2               	bcf	intcon,2,c	;volatile
  1359                           
  1360                           ;My_header\My_hedaer_18F.h: 25: INTCON2bits.TMR0IP = 0;
  1361  001630  94F1               	bcf	intcon2,2,c	;volatile
  1362                           
  1363                           ;My_header\My_hedaer_18F.h: 26: INTCONbits.PEIE = 1;
  1364  001632  8CF2               	bsf	intcon,6,c	;volatile
  1365  001634  0012               	return	
  1366  001636                     __end_of_timer0_init:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           prodh	equ	0xFF4
  1373                           prodl	equ	0xFF3
  1374                           intcon	equ	0xFF2
  1375                           intcon2	equ	0xFF1
  1376                           postinc0	equ	0xFEE
  1377                           wreg	equ	0xFE8
  1378                           indf2	equ	0xFDF
  1379                           postinc2	equ	0xFDE
  1380                           postdec2	equ	0xFDD
  1381                           fsr2h	equ	0xFDA
  1382                           fsr2l	equ	0xFD9
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _ringbuf_init *****************
  1386 ;; Defined at:
  1387 ;;		line 22 in file "../My_header\My_ringbuf.h"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  rb              2   22[COMRAM] PTR struct ringbuf
  1390 ;;		 -> tx_buf(5), 
  1391 ;;  internal_buf    2   24[COMRAM] PTR unsigned char 
  1392 ;;		 -> main@txbuf(200), 
  1393 ;;  bufsize         1   26[COMRAM] unsigned char 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;		None               void
  1398 ;; Registers used:
  1399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1405 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;Total ram usage:        5 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    3
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text9
  1420  00152E                     __ptext9:
  1421                           	opt stack 0
  1422  00152E                     _ringbuf_init:
  1423                           	opt stack 27
  1424                           
  1425                           ;My_header\My_ringbuf.h: 23: rb->buf = internal_buf;
  1426                           
  1427                           ;incstack = 0
  1428  00152E  C017  FFD9         	movff	ringbuf_init@rb,fsr2l
  1429  001532  C018  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1430  001536  C019  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1431  00153A  C01A  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1432                           
  1433                           ;My_header\My_ringbuf.h: 24: rb->size = bufsize;
  1434  00153E  EE20 F002          	lfsr	2,2
  1435  001542  5017               	movf	ringbuf_init@rb,w,c
  1436  001544  26D9               	addwf	fsr2l,f,c
  1437  001546  5018               	movf	ringbuf_init@rb+1,w,c
  1438  001548  22DA               	addwfc	fsr2h,f,c
  1439  00154A  C01B  FFDF         	movff	ringbuf_init@bufsize,indf2
  1440                           
  1441                           ;My_header\My_ringbuf.h: 25: rb->head = 0;
  1442  00154E  EE20 F003          	lfsr	2,3
  1443  001552  5017               	movf	ringbuf_init@rb,w,c
  1444  001554  26D9               	addwf	fsr2l,f,c
  1445  001556  5018               	movf	ringbuf_init@rb+1,w,c
  1446  001558  22DA               	addwfc	fsr2h,f,c
  1447  00155A  0E00               	movlw	0
  1448  00155C  6EDF               	movwf	indf2,c
  1449                           
  1450                           ;My_header\My_ringbuf.h: 26: rb->tail = 0;
  1451  00155E  EE20 F004          	lfsr	2,4
  1452  001562  5017               	movf	ringbuf_init@rb,w,c
  1453  001564  26D9               	addwf	fsr2l,f,c
  1454  001566  5018               	movf	ringbuf_init@rb+1,w,c
  1455  001568  22DA               	addwfc	fsr2h,f,c
  1456  00156A  0E00               	movlw	0
  1457  00156C  6EDF               	movwf	indf2,c
  1458  00156E  0012               	return	
  1459  001570                     __end_of_ringbuf_init:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           intcon	equ	0xFF2
  1468                           intcon2	equ	0xFF1
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           indf2	equ	0xFDF
  1472                           postinc2	equ	0xFDE
  1473                           postdec2	equ	0xFDD
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _UART_init *****************
  1479 ;; Defined at:
  1480 ;;		line 21 in file "../My_header\My_UART_18F.h"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  interrupt_ON    1    wreg     unsigned char 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  interrupt_ON    1   22[COMRAM] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		wreg, status,2
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;Total ram usage:        1 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    3
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text10
  1509  00168A                     __ptext10:
  1510                           	opt stack 0
  1511  00168A                     _UART_init:
  1512                           	opt stack 27
  1513                           
  1514                           ;incstack = 0
  1515                           ;UART_init@interrupt_ON stored from wreg
  1516  00168A  6E17               	movwf	UART_init@interrupt_ON,c
  1517                           
  1518                           ;My_header\My_UART_18F.h: 22: TXSTA1bits.TX9 = 0;
  1519  00168C  9CAD               	bcf	4013,6,c	;volatile
  1520                           
  1521                           ;My_header\My_UART_18F.h: 23: TXSTA1bits.TXEN = 1;
  1522  00168E  8AAD               	bsf	4013,5,c	;volatile
  1523                           
  1524                           ;My_header\My_UART_18F.h: 24: TXSTA1bits.SYNC = 0;
  1525  001690  98AD               	bcf	4013,4,c	;volatile
  1526                           
  1527                           ;My_header\My_UART_18F.h: 25: TXSTA1bits.BRGH = 0;
  1528  001692  94AD               	bcf	4013,2,c	;volatile
  1529                           
  1530                           ;My_header\My_UART_18F.h: 26: RCSTA1bits.SPEN = 1;
  1531  001694  8EAC               	bsf	4012,7,c	;volatile
  1532                           
  1533                           ;My_header\My_UART_18F.h: 27: RCSTA1bits.RX9 = 0;
  1534  001696  9CAC               	bcf	4012,6,c	;volatile
  1535                           
  1536                           ;My_header\My_UART_18F.h: 28: RCSTA1bits.CREN = 1;
  1537  001698  88AC               	bsf	4012,4,c	;volatile
  1538                           
  1539                           ;My_header\My_UART_18F.h: 29: BAUDCON1bits.BRG16 = 0;
  1540  00169A  967E               	bcf	3966,3,c	;volatile
  1541                           
  1542                           ;My_header\My_UART_18F.h: 30: SPBRG1 = 48000000 / 64 / 9600 - 1;
  1543  00169C  0E4D               	movlw	77
  1544  00169E  6EB0               	movwf	4016,c	;volatile
  1545                           
  1546                           ;My_header\My_UART_18F.h: 32: SPBRGH1 = 0;
  1547  0016A0  0E00               	movlw	0
  1548  0016A2  6E7F               	movwf	3967,c	;volatile
  1549                           
  1550                           ;My_header\My_UART_18F.h: 33: if (interrupt_ON) {
  1551  0016A4  5017               	movf	UART_init@interrupt_ON,w,c
  1552  0016A6  B4D8               	btfsc	status,2,c
  1553  0016A8  0012               	return	
  1554                           
  1555                           ;My_header\My_UART_18F.h: 34: IPR1bits.RC1IP = 0;
  1556  0016AA  9A9F               	bcf	3999,5,c	;volatile
  1557                           
  1558                           ;My_header\My_UART_18F.h: 35: PIE1bits.RC1IE = 1;
  1559  0016AC  8A9D               	bsf	3997,5,c	;volatile
  1560                           
  1561                           ;My_header\My_UART_18F.h: 36: INTCONbits.PEIE = 1;
  1562  0016AE  8CF2               	bsf	intcon,6,c	;volatile
  1563  0016B0  0012               	return	
  1564  0016B2                     __end_of_UART_init:
  1565                           	opt stack 0
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           intcon	equ	0xFF2
  1573                           intcon2	equ	0xFF1
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           indf2	equ	0xFDF
  1577                           postinc2	equ	0xFDE
  1578                           postdec2	equ	0xFDD
  1579                           fsr2h	equ	0xFDA
  1580                           fsr2l	equ	0xFD9
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _I2C_init *****************
  1584 ;; Defined at:
  1585 ;;		line 21 in file "../My_header\My_I2C_18F.h"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, status,2
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    3
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text11
  1614  0017AE                     __ptext11:
  1615                           	opt stack 0
  1616  0017AE                     _I2C_init:
  1617                           	opt stack 27
  1618                           
  1619                           ;My_header\My_I2C_18F.h: 22: SSP1STAT = 0b10000000;
  1620                           
  1621                           ;incstack = 0
  1622  0017AE  0E80               	movlw	128
  1623  0017B0  6EC7               	movwf	4039,c	;volatile
  1624                           
  1625                           ;My_header\My_I2C_18F.h: 23: SSP1CON1 = 0b00101000;
  1626  0017B2  0E28               	movlw	40
  1627  0017B4  6EC6               	movwf	4038,c	;volatile
  1628                           
  1629                           ;My_header\My_I2C_18F.h: 24: SSP1ADD = 0x13;
  1630  0017B6  0E13               	movlw	19
  1631  0017B8  6EC8               	movwf	4040,c	;volatile
  1632                           
  1633                           ;My_header\My_I2C_18F.h: 27: SSP1IF = 0;
  1634  0017BA  969E               	bcf	3998,3,c	;volatile
  1635                           
  1636                           ;My_header\My_I2C_18F.h: 28: BCL1IF = 0;
  1637  0017BC  96A1               	bcf	4001,3,c	;volatile
  1638  0017BE  0012               	return	
  1639  0017C0                     __end_of_I2C_init:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           intcon	equ	0xFF2
  1648                           intcon2	equ	0xFF1
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           indf2	equ	0xFDF
  1652                           postinc2	equ	0xFDE
  1653                           postdec2	equ	0xFDD
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _I2C_LCD_init *****************
  1659 ;; Defined at:
  1660 ;;		line 84 in file "../My_header\My_I2C.h"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    7
  1681 ;; This function calls:
  1682 ;;		_Delay_ms
  1683 ;;		_I2C_LCD_Clear
  1684 ;;		_I2C_LCD_Command
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text12
  1691  0013AE                     __ptext12:
  1692                           	opt stack 0
  1693  0013AE                     _I2C_LCD_init:
  1694                           	opt stack 23
  1695                           
  1696                           ;My_header\My_I2C.h: 85: Delay_ms(40);
  1697                           
  1698                           ;incstack = 0
  1699  0013AE  0E00               	movlw	0
  1700  0013B0  6E18               	movwf	Delay_ms@ms+1,c
  1701  0013B2  0E28               	movlw	40
  1702  0013B4  6E17               	movwf	Delay_ms@ms,c
  1703  0013B6  EC7F  F00B         	call	_Delay_ms	;wreg free
  1704                           
  1705                           ;My_header\My_I2C.h: 86: I2C_LCD_Command(0x38);
  1706  0013BA  0E38               	movlw	56
  1707  0013BC  EC1B  F00B         	call	_I2C_LCD_Command
  1708                           
  1709                           ;My_header\My_I2C.h: 87: I2C_LCD_Command(0x39);
  1710  0013C0  0E39               	movlw	57
  1711  0013C2  EC1B  F00B         	call	_I2C_LCD_Command
  1712                           
  1713                           ;My_header\My_I2C.h: 88: I2C_LCD_Command(0x14);
  1714  0013C6  0E14               	movlw	20
  1715  0013C8  EC1B  F00B         	call	_I2C_LCD_Command
  1716                           
  1717                           ;My_header\My_I2C.h: 89: I2C_LCD_Command(0x70);
  1718  0013CC  0E70               	movlw	112
  1719  0013CE  EC1B  F00B         	call	_I2C_LCD_Command
  1720                           
  1721                           ;My_header\My_I2C.h: 90: I2C_LCD_Command(0x56);
  1722  0013D2  0E56               	movlw	86
  1723  0013D4  EC1B  F00B         	call	_I2C_LCD_Command
  1724                           
  1725                           ;My_header\My_I2C.h: 91: I2C_LCD_Command(0x6C);
  1726  0013D8  0E6C               	movlw	108
  1727  0013DA  EC1B  F00B         	call	_I2C_LCD_Command
  1728                           
  1729                           ;My_header\My_I2C.h: 92: Delay_ms(200);
  1730  0013DE  0E00               	movlw	0
  1731  0013E0  6E18               	movwf	Delay_ms@ms+1,c
  1732  0013E2  0EC8               	movlw	200
  1733  0013E4  6E17               	movwf	Delay_ms@ms,c
  1734  0013E6  EC7F  F00B         	call	_Delay_ms	;wreg free
  1735                           
  1736                           ;My_header\My_I2C.h: 93: I2C_LCD_Command(0x38);
  1737  0013EA  0E38               	movlw	56
  1738  0013EC  EC1B  F00B         	call	_I2C_LCD_Command
  1739                           
  1740                           ;My_header\My_I2C.h: 94: I2C_LCD_Command(0x0C);
  1741  0013F0  0E0C               	movlw	12
  1742  0013F2  EC1B  F00B         	call	_I2C_LCD_Command
  1743                           
  1744                           ;My_header\My_I2C.h: 95: I2C_LCD_Command(0x06);
  1745  0013F6  0E06               	movlw	6
  1746  0013F8  EC1B  F00B         	call	_I2C_LCD_Command
  1747                           
  1748                           ;My_header\My_I2C.h: 96: I2C_LCD_Clear();
  1749  0013FC  EC9F  F00B         	call	_I2C_LCD_Clear	;wreg free
  1750  001400  0012               	return	
  1751  001402                     __end_of_I2C_LCD_init:
  1752                           	opt stack 0
  1753                           tblptru	equ	0xFF8
  1754                           tblptrh	equ	0xFF7
  1755                           tblptrl	equ	0xFF6
  1756                           tablat	equ	0xFF5
  1757                           prodh	equ	0xFF4
  1758                           prodl	equ	0xFF3
  1759                           intcon	equ	0xFF2
  1760                           intcon2	equ	0xFF1
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           indf2	equ	0xFDF
  1764                           postinc2	equ	0xFDE
  1765                           postdec2	equ	0xFDD
  1766                           fsr2h	equ	0xFDA
  1767                           fsr2l	equ	0xFD9
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _I2C_LCD_Clear *****************
  1771 ;; Defined at:
  1772 ;;		line 27 in file "../My_header\My_I2C.h"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;Total ram usage:        1 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    6
  1793 ;; This function calls:
  1794 ;;		_I2C_LCD_Command
  1795 ;; This function is called by:
  1796 ;;		_I2C_LCD_init
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text13
  1802  00173E                     __ptext13:
  1803                           	opt stack 0
  1804  00173E                     _I2C_LCD_Clear:
  1805                           	opt stack 23
  1806                           
  1807                           ;My_header\My_I2C.h: 28: I2C_LCD_Command(0x01);
  1808                           
  1809                           ;incstack = 0
  1810  00173E  0E01               	movlw	1
  1811  001740  EC1B  F00B         	call	_I2C_LCD_Command
  1812                           
  1813                           ;My_header\My_I2C.h: 29: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  1814  001744  0E12               	movlw	18
  1815  001746  6E1D               	movwf	??_I2C_LCD_Clear& (0+255),c
  1816  001748  0E23               	movlw	35
  1817  00174A                     u707:
  1818  00174A  2EE8               	decfsz	wreg,f,c
  1819  00174C  D7FE               	goto	u707
  1820  00174E  2E1D               	decfsz	??_I2C_LCD_Clear& (0+255),f,c
  1821  001750  D7FC               	goto	u707
  1822  001752  F000               	nop	
  1823  001754  0012               	return	
  1824  001756                     __end_of_I2C_LCD_Clear:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           intcon2	equ	0xFF1
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           indf2	equ	0xFDF
  1837                           postinc2	equ	0xFDE
  1838                           postdec2	equ	0xFDD
  1839                           fsr2h	equ	0xFDA
  1840                           fsr2l	equ	0xFD9
  1841                           status	equ	0xFD8
  1842                           
  1843 ;; *************** function _Delay_ms *****************
  1844 ;; Defined at:
  1845 ;;		line 101 in file "../My_header\My_hedaer_18F.h"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  ms              2   22[COMRAM] unsigned int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;		None               void
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    3
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_I2C_LCD_init
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text14
  1875  0016FE                     __ptext14:
  1876                           	opt stack 0
  1877  0016FE                     _Delay_ms:
  1878                           	opt stack 26
  1879                           
  1880                           ;My_header\My_hedaer_18F.h: 102: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
  1881                           
  1882                           ;incstack = 0
  1883  0016FE  D008               	goto	l942
  1884  001700                     l940:
  1885  001700  0E10               	movlw	16
  1886  001702  6E19               	movwf	??_Delay_ms& (0+255),c
  1887  001704  0E94               	movlw	148
  1888  001706                     u717:
  1889  001706  2EE8               	decfsz	wreg,f,c
  1890  001708  D7FE               	goto	u717
  1891  00170A  2E19               	decfsz	??_Delay_ms& (0+255),f,c
  1892  00170C  D7FC               	goto	u717
  1893  00170E  D000               	nop2	
  1894  001710                     l942:
  1895  001710  0617               	decf	Delay_ms@ms,f,c
  1896  001712  A0D8               	btfss	status,0,c
  1897  001714  0618               	decf	Delay_ms@ms+1,f,c
  1898  001716  2817               	incf	Delay_ms@ms& (0+255),w,c
  1899  001718  B4D8               	btfsc	status,2,c
  1900  00171A  2818               	incf	(Delay_ms@ms+1)& (0+255),w,c
  1901  00171C  B4D8               	btfsc	status,2,c
  1902  00171E  0012               	return	
  1903  001720  D7EF               	goto	l940
  1904  001722                     __end_of_Delay_ms:
  1905                           	opt stack 0
  1906                           tblptru	equ	0xFF8
  1907                           tblptrh	equ	0xFF7
  1908                           tblptrl	equ	0xFF6
  1909                           tablat	equ	0xFF5
  1910                           prodh	equ	0xFF4
  1911                           prodl	equ	0xFF3
  1912                           intcon	equ	0xFF2
  1913                           intcon2	equ	0xFF1
  1914                           postinc0	equ	0xFEE
  1915                           wreg	equ	0xFE8
  1916                           indf2	equ	0xFDF
  1917                           postinc2	equ	0xFDE
  1918                           postdec2	equ	0xFDD
  1919                           fsr2h	equ	0xFDA
  1920                           fsr2l	equ	0xFD9
  1921                           status	equ	0xFD8
  1922                           
  1923 ;; *************** function _I2C_LCD_SetCursor *****************
  1924 ;; Defined at:
  1925 ;;		line 32 in file "../My_header\My_I2C.h"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  col             1    wreg     unsigned char 
  1928 ;;  row             1   28[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  col             1   31[COMRAM] unsigned char 
  1931 ;;  row_offsets     2   29[COMRAM] unsigned char [2]
  1932 ;; Return value:  Size  Location     Type
  1933 ;;		None               void
  1934 ;; Registers used:
  1935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;Total ram usage:        4 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    6
  1948 ;; This function calls:
  1949 ;;		_I2C_LCD_Command
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text15
  1956  0016D8                     __ptext15:
  1957                           	opt stack 0
  1958  0016D8                     _I2C_LCD_SetCursor:
  1959                           	opt stack 24
  1960                           
  1961                           ;incstack = 0
  1962                           ;I2C_LCD_SetCursor@col stored from wreg
  1963  0016D8  6E20               	movwf	I2C_LCD_SetCursor@col,c
  1964                           
  1965                           ;My_header\My_I2C.h: 33: uint8_t row_offsets[] = {0x00, 0x40};
  1966  0016DA  C02C  F01E         	movff	I2C_LCD_SetCursor@F9802,I2C_LCD_SetCursor@row_offsets
  1967  0016DE  C02D  F01F         	movff	I2C_LCD_SetCursor@F9802+1,I2C_LCD_SetCursor@row_offsets+1
  1968                           
  1969                           ;My_header\My_I2C.h: 35: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  1970  0016E2  501D               	movf	I2C_LCD_SetCursor@row,w,c
  1971  0016E4  0D01               	mullw	1
  1972  0016E6  0E1E               	movlw	low I2C_LCD_SetCursor@row_offsets
  1973  0016E8  24F3               	addwf	prodl,w,c
  1974  0016EA  6ED9               	movwf	fsr2l,c
  1975  0016EC  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  1976  0016EE  20F4               	addwfc	prodh,w,c
  1977  0016F0  6EDA               	movwf	fsr2h,c
  1978  0016F2  50DF               	movf	indf2,w,c
  1979  0016F4  2420               	addwf	I2C_LCD_SetCursor@col,w,c
  1980  0016F6  0980               	iorlw	128
  1981  0016F8  EC1B  F00B         	call	_I2C_LCD_Command
  1982  0016FC  0012               	return	
  1983  0016FE                     __end_of_I2C_LCD_SetCursor:
  1984                           	opt stack 0
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           prodh	equ	0xFF4
  1990                           prodl	equ	0xFF3
  1991                           intcon	equ	0xFF2
  1992                           intcon2	equ	0xFF1
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           indf2	equ	0xFDF
  1996                           postinc2	equ	0xFDE
  1997                           postdec2	equ	0xFDD
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _I2C_LCD_Command *****************
  2003 ;; Defined at:
  2004 ;;		line 14 in file "../My_header\My_I2C.h"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  c               1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  c               1   26[COMRAM] unsigned char 
  2009 ;;  ans             1   27[COMRAM] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;		None               void
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;Total ram usage:        2 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    5
  2026 ;; This function calls:
  2027 ;;		_I2C_Send
  2028 ;;		_I2C_Start
  2029 ;;		_I2C_Stop
  2030 ;; This function is called by:
  2031 ;;		_I2C_LCD_Clear
  2032 ;;		_I2C_LCD_SetCursor
  2033 ;;		_I2C_LCD_init
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text16
  2038  001636                     __ptext16:
  2039                           	opt stack 0
  2040  001636                     _I2C_LCD_Command:
  2041                           	opt stack 24
  2042                           
  2043                           ;incstack = 0
  2044                           ;I2C_LCD_Command@c stored from wreg
  2045  001636  6E1B               	movwf	I2C_LCD_Command@c,c
  2046                           
  2047                           ;My_header\My_I2C.h: 15: uint8_t ans;
  2048                           ;My_header\My_I2C.h: 17: ans = I2C_Start(0x3E, 0);
  2049  001638  0E00               	movlw	0
  2050  00163A  6E19               	movwf	I2C_Start@rw,c
  2051  00163C  0E3E               	movlw	62
  2052  00163E  EC30  F00B         	call	_I2C_Start
  2053  001642  6E1C               	movwf	I2C_LCD_Command@ans,c
  2054                           
  2055                           ;My_header\My_I2C.h: 18: if (ans == 0) {
  2056  001644  661C               	tstfsz	I2C_LCD_Command@ans,c
  2057  001646  D006               	goto	l207
  2058                           
  2059                           ;My_header\My_I2C.h: 20: I2C_Send(0b10000000);
  2060  001648  0E80               	movlw	128
  2061  00164A  ECB6  F00B         	call	_I2C_Send
  2062                           
  2063                           ;My_header\My_I2C.h: 21: I2C_Send(c);
  2064  00164E  501B               	movf	I2C_LCD_Command@c,w,c
  2065  001650  ECB6  F00B         	call	_I2C_Send
  2066  001654                     l207:
  2067                           
  2068                           ;My_header\My_I2C.h: 22: }
  2069                           ;My_header\My_I2C.h: 23: I2C_Stop();
  2070  001654  ECE0  F00B         	call	_I2C_Stop	;wreg free
  2071                           
  2072                           ;My_header\My_I2C.h: 24: _delay((unsigned long)((26)*(48000000/4000000.0)));
  2073  001658  0E68               	movlw	104
  2074  00165A                     u727:
  2075  00165A  2EE8               	decfsz	wreg,f,c
  2076  00165C  D7FE               	goto	u727
  2077  00165E  0012               	return	
  2078  001660                     __end_of_I2C_LCD_Command:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           prodh	equ	0xFF4
  2085                           prodl	equ	0xFF3
  2086                           intcon	equ	0xFF2
  2087                           intcon2	equ	0xFF1
  2088                           postinc0	equ	0xFEE
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           postinc2	equ	0xFDE
  2092                           postdec2	equ	0xFDD
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _I2C_LCD_Puts *****************
  2098 ;; Defined at:
  2099 ;;		line 51 in file "../My_header\My_I2C.h"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  s               2   26[COMRAM] PTR const unsigned char 
  2102 ;;		 -> STR_2(8), STR_1(7), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  ans             2   29[COMRAM] int 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2117 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;Total ram usage:        5 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    5
  2121 ;; This function calls:
  2122 ;;		_I2C_Send
  2123 ;;		_I2C_Start
  2124 ;;		_I2C_Stop
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text17
  2131  001402                     __ptext17:
  2132                           	opt stack 0
  2133  001402                     _I2C_LCD_Puts:
  2134                           	opt stack 25
  2135                           
  2136                           ;My_header\My_I2C.h: 52: int ans;
  2137                           ;My_header\My_I2C.h: 54: ans = I2C_Start(0x3E, 0);
  2138                           
  2139                           ;incstack = 0
  2140  001402  0E00               	movlw	0
  2141  001404  6E19               	movwf	I2C_Start@rw,c
  2142  001406  0E3E               	movlw	62
  2143  001408  EC30  F00B         	call	_I2C_Start
  2144  00140C  6E1D               	movwf	??_I2C_LCD_Puts& (0+255),c
  2145  00140E  501D               	movf	??_I2C_LCD_Puts,w,c
  2146  001410  6E1E               	movwf	I2C_LCD_Puts@ans,c
  2147  001412  6A1F               	clrf	I2C_LCD_Puts@ans+1,c
  2148                           
  2149                           ;My_header\My_I2C.h: 55: if (ans == 0) {
  2150  001414  501F               	movf	I2C_LCD_Puts@ans+1,w,c
  2151  001416  101E               	iorwf	I2C_LCD_Puts@ans,w,c
  2152  001418  A4D8               	btfss	status,2,c
  2153  00141A  D01A               	goto	l1224
  2154                           
  2155                           ;My_header\My_I2C.h: 56: I2C_Send(0b01000000);
  2156  00141C  0E40               	movlw	64
  2157  00141E  ECB6  F00B         	call	_I2C_Send
  2158                           
  2159                           ;My_header\My_I2C.h: 57: while (*s) {
  2160  001422  D00D               	goto	l1222
  2161  001424                     l1216:
  2162                           
  2163                           ;My_header\My_I2C.h: 58: I2C_Send(*s++);
  2164  001424  C01B  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  2165  001428  C01C  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  2166  00142C                     	if	0	;tblptru may be non-zero
  2167  00142C                     	endif
  2168  00142C                     	if	0	;tblptru may be non-zero
  2169  00142C                     	endif
  2170  00142C  0008               	tblrd		*
  2171  00142E  50F5               	movf	tablat,w,c
  2172  001430  ECB6  F00B         	call	_I2C_Send
  2173  001434  4A1B               	infsnz	I2C_LCD_Puts@s,f,c
  2174  001436  2A1C               	incf	I2C_LCD_Puts@s+1,f,c
  2175                           
  2176                           ;My_header\My_I2C.h: 59: _delay((unsigned long)((26)*(48000000/4000000.0)));
  2177  001438  0E68               	movlw	104
  2178  00143A                     u737:
  2179  00143A  2EE8               	decfsz	wreg,f,c
  2180  00143C  D7FE               	goto	u737
  2181  00143E                     l1222:
  2182  00143E  C01B  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  2183  001442  C01C  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  2184  001446                     	if	0	;tblptru may be non-zero
  2185  001446                     	endif
  2186  001446                     	if	0	;tblptru may be non-zero
  2187  001446                     	endif
  2188  001446  0008               	tblrd		*
  2189  001448  50F5               	movf	tablat,w,c
  2190  00144A  0900               	iorlw	0
  2191  00144C  A4D8               	btfss	status,2,c
  2192  00144E  D7EA               	goto	l1216
  2193  001450                     l1224:
  2194                           
  2195                           ;My_header\My_I2C.h: 60: }
  2196                           ;My_header\My_I2C.h: 61: }
  2197                           ;My_header\My_I2C.h: 62: I2C_Stop();
  2198  001450  ECE0  F00B         	call	_I2C_Stop	;wreg free
  2199  001454  0012               	return	
  2200  001456                     __end_of_I2C_LCD_Puts:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodh	equ	0xFF4
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           intcon2	equ	0xFF1
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           indf2	equ	0xFDF
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _I2C_Stop *****************
  2220 ;; Defined at:
  2221 ;;		line 55 in file "../My_header\My_I2C_18F.h"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;		None               void
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    4
  2242 ;; This function calls:
  2243 ;;		_I2C_IdleCheck
  2244 ;; This function is called by:
  2245 ;;		_I2C_LCD_Command
  2246 ;;		_I2C_LCD_Puts
  2247 ;;		_I2C_LCD_Putc
  2248 ;;		_I2C_LCD_CreateChar
  2249 ;;		_RTC_Write
  2250 ;;		_RTC_Read
  2251 ;;		_TM_init
  2252 ;;		_TM_Read
  2253 ;;		_EEP_write
  2254 ;;		_EEP_read
  2255 ;;		_EEP_writes
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text18
  2260  0017C0                     __ptext18:
  2261                           	opt stack 0
  2262  0017C0                     _I2C_Stop:
  2263                           	opt stack 24
  2264                           
  2265                           ;My_header\My_I2C_18F.h: 57: I2C_IdleCheck(0x5);
  2266                           
  2267                           ;incstack = 0
  2268  0017C0  0E05               	movlw	5
  2269  0017C2  ECC1  F00B         	call	_I2C_IdleCheck
  2270                           
  2271                           ;My_header\My_I2C_18F.h: 58: SSP1CON2bits.PEN = 1;
  2272  0017C6  84C5               	bsf	4037,2,c	;volatile
  2273  0017C8  0012               	return	
  2274  0017CA                     __end_of_I2C_Stop:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           intcon2	equ	0xFF1
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _I2C_Start *****************
  2294 ;; Defined at:
  2295 ;;		line 31 in file "../My_header\My_I2C_18F.h"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  adrs            1    wreg     unsigned char 
  2298 ;;  rw              1   24[COMRAM] unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  adrs            1   25[COMRAM] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      unsigned char 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;Total ram usage:        2 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    4
  2317 ;; This function calls:
  2318 ;;		_I2C_IdleCheck
  2319 ;; This function is called by:
  2320 ;;		_I2C_LCD_Command
  2321 ;;		_I2C_LCD_Puts
  2322 ;;		_I2C_LCD_Putc
  2323 ;;		_I2C_LCD_CreateChar
  2324 ;;		_RTC_Write
  2325 ;;		_RTC_Read
  2326 ;;		_TM_init
  2327 ;;		_TM_Read
  2328 ;;		_EEP_write
  2329 ;;		_EEP_read
  2330 ;;		_EEP_writes
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text19
  2335  001660                     __ptext19:
  2336                           	opt stack 0
  2337  001660                     _I2C_Start:
  2338                           	opt stack 24
  2339                           
  2340                           ;incstack = 0
  2341                           ;I2C_Start@adrs stored from wreg
  2342  001660  6E1A               	movwf	I2C_Start@adrs,c
  2343                           
  2344                           ;My_header\My_I2C_18F.h: 33: I2C_IdleCheck(0x5);
  2345  001662  0E05               	movlw	5
  2346  001664  ECC1  F00B         	call	_I2C_IdleCheck
  2347                           
  2348                           ;My_header\My_I2C_18F.h: 34: SSP1CON2bits.SEN = 1;
  2349  001668  80C5               	bsf	4037,0,c	;volatile
  2350                           
  2351                           ;My_header\My_I2C_18F.h: 36: I2C_IdleCheck(0x5);
  2352  00166A  0E05               	movlw	5
  2353  00166C  ECC1  F00B         	call	_I2C_IdleCheck
  2354                           
  2355                           ;My_header\My_I2C_18F.h: 37: SSP1IF = 0;
  2356  001670  969E               	bcf	3998,3,c	;volatile
  2357                           
  2358                           ;My_header\My_I2C_18F.h: 38: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  2359  001672  501A               	movf	I2C_Start@adrs,w,c
  2360  001674  241A               	addwf	I2C_Start@adrs,w,c
  2361  001676  2419               	addwf	I2C_Start@rw,w,c
  2362  001678  6EC9               	movwf	4041,c	;volatile
  2363  00167A                     l183:
  2364  00167A  A69E               	btfss	3998,3,c	;volatile
  2365  00167C  D7FE               	goto	l183
  2366                           
  2367                           ;My_header\My_I2C_18F.h: 40: return SSP1CON2bits.ACKSTAT;
  2368  00167E  ACC5               	btfss	4037,6,c	;volatile
  2369  001680  D002               	goto	u30
  2370  001682  0E01               	movlw	1
  2371  001684  0012               	return	
  2372  001686                     u30:
  2373  001686  0E00               	movlw	0
  2374  001688  0012               	return	
  2375  00168A                     __end_of_I2C_Start:
  2376                           	opt stack 0
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           prodh	equ	0xFF4
  2382                           prodl	equ	0xFF3
  2383                           intcon	equ	0xFF2
  2384                           intcon2	equ	0xFF1
  2385                           postinc0	equ	0xFEE
  2386                           wreg	equ	0xFE8
  2387                           indf2	equ	0xFDF
  2388                           postinc2	equ	0xFDE
  2389                           postdec2	equ	0xFDD
  2390                           fsr2h	equ	0xFDA
  2391                           fsr2l	equ	0xFD9
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _I2C_Send *****************
  2395 ;; Defined at:
  2396 ;;		line 61 in file "../My_header\My_I2C_18F.h"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  data            1    wreg     unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  data            1   24[COMRAM] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;Total ram usage:        1 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    4
  2417 ;; This function calls:
  2418 ;;		_I2C_IdleCheck
  2419 ;; This function is called by:
  2420 ;;		_I2C_LCD_Command
  2421 ;;		_I2C_LCD_Puts
  2422 ;;		_I2C_LCD_Putc
  2423 ;;		_I2C_LCD_CreateChar
  2424 ;;		_RTC_Write
  2425 ;;		_RTC_Read
  2426 ;;		_TM_init
  2427 ;;		_TM_Read
  2428 ;;		_EEP_write
  2429 ;;		_EEP_read
  2430 ;;		_EEP_writes
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text20
  2435  00176C                     __ptext20:
  2436                           	opt stack 0
  2437  00176C                     _I2C_Send:
  2438                           	opt stack 24
  2439                           
  2440                           ;incstack = 0
  2441                           ;I2C_Send@data stored from wreg
  2442  00176C  6E19               	movwf	I2C_Send@data,c
  2443                           
  2444                           ;My_header\My_I2C_18F.h: 62: I2C_IdleCheck(0x5);
  2445  00176E  0E05               	movlw	5
  2446  001770  ECC1  F00B         	call	_I2C_IdleCheck
  2447                           
  2448                           ;My_header\My_I2C_18F.h: 63: SSP1IF = 0;
  2449  001774  969E               	bcf	3998,3,c	;volatile
  2450                           
  2451                           ;My_header\My_I2C_18F.h: 64: SSP1BUF = data;
  2452  001776  C019  FFC9         	movff	I2C_Send@data,4041	;volatile
  2453  00177A                     l198:
  2454  00177A  A69E               	btfss	3998,3,c	;volatile
  2455  00177C  D7FE               	goto	l198
  2456                           
  2457                           ;My_header\My_I2C_18F.h: 66: return SSP1CON2bits.ACKSTAT;
  2458                           ;	Return value of _I2C_Send is never used
  2459  00177E  50C5               	movf	4037,w,c	;volatile
  2460  001780  0012               	return	
  2461  001782                     __end_of_I2C_Send:
  2462                           	opt stack 0
  2463                           tblptru	equ	0xFF8
  2464                           tblptrh	equ	0xFF7
  2465                           tblptrl	equ	0xFF6
  2466                           tablat	equ	0xFF5
  2467                           prodh	equ	0xFF4
  2468                           prodl	equ	0xFF3
  2469                           intcon	equ	0xFF2
  2470                           intcon2	equ	0xFF1
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           postdec2	equ	0xFDD
  2476                           fsr2h	equ	0xFDA
  2477                           fsr2l	equ	0xFD9
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _I2C_IdleCheck *****************
  2481 ;; Defined at:
  2482 ;;		line 17 in file "../My_header\My_I2C_18F.h"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  mask            1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  mask            1   23[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_I2C_Start
  2507 ;;		_I2C_Stop
  2508 ;;		_I2C_Send
  2509 ;;		_I2C_rStart
  2510 ;;		_I2C_Receive
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text21
  2515  001782                     __ptext21:
  2516                           	opt stack 0
  2517  001782                     _I2C_IdleCheck:
  2518                           	opt stack 24
  2519                           
  2520                           ;incstack = 0
  2521                           ;I2C_IdleCheck@mask stored from wreg
  2522  001782  6E18               	movwf	I2C_IdleCheck@mask,c
  2523  001784                     l894:
  2524  001784  50C7               	movf	4039,w,c	;volatile
  2525  001786  1418               	andwf	I2C_IdleCheck@mask,w,c
  2526  001788  6E17               	movwf	??_I2C_IdleCheck& (0+255),c
  2527  00178A  50C5               	movf	4037,w,c	;volatile
  2528  00178C  0B1F               	andlw	31
  2529  00178E  1017               	iorwf	??_I2C_IdleCheck,w,c
  2530  001790  0900               	iorlw	0
  2531  001792  B4D8               	btfsc	status,2,c
  2532  001794  0012               	return	
  2533  001796  D7F6               	goto	l894
  2534  001798                     __end_of_I2C_IdleCheck:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           intcon	equ	0xFF2
  2543                           intcon2	equ	0xFF1
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           indf2	equ	0xFDF
  2547                           postinc2	equ	0xFDE
  2548                           postdec2	equ	0xFDD
  2549                           fsr2h	equ	0xFDA
  2550                           fsr2l	equ	0xFD9
  2551                           status	equ	0xFD8
  2552                           
  2553 ;; *************** function _ADC_init *****************
  2554 ;; Defined at:
  2555 ;;		line 82 in file "../My_header\My_hedaer_18F.h"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  p_ref           1    wreg     unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  p_ref           1   22[COMRAM] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		wreg, status,2
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;Total ram usage:        1 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    3
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text22
  2584  001722                     __ptext22:
  2585                           	opt stack 0
  2586  001722                     _ADC_init:
  2587                           	opt stack 27
  2588                           
  2589                           ;incstack = 0
  2590                           ;ADC_init@p_ref stored from wreg
  2591  001722  6E17               	movwf	ADC_init@p_ref,c
  2592                           
  2593                           ;My_header\My_hedaer_18F.h: 83: ADCON0bits.VCFG1 = 0;
  2594  001724  9EC2               	bcf	4034,7,c	;volatile
  2595                           
  2596                           ;My_header\My_hedaer_18F.h: 84: ADCON0bits.VCFG0 = p_ref;
  2597  001726  B017               	btfsc	ADC_init@p_ref,0,c
  2598  001728  D002               	bra	u195
  2599  00172A  9CC2               	bcf	4034,6,c	;volatile
  2600  00172C  D001               	bra	u196
  2601  00172E                     u195:
  2602  00172E  8CC2               	bsf	4034,6,c	;volatile
  2603  001730                     u196:
  2604                           
  2605                           ;My_header\My_hedaer_18F.h: 86: ADCON1bits.ADFM = 1;
  2606  001730  8EC1               	bsf	4033,7,c	;volatile
  2607                           
  2608                           ;My_header\My_hedaer_18F.h: 87: ADCON1bits.ADCAL = 0;
  2609  001732  9CC1               	bcf	4033,6,c	;volatile
  2610                           
  2611                           ;My_header\My_hedaer_18F.h: 88: ADCON1bits.ADCS = 2;
  2612  001734  50C1               	movf	4033,w,c	;volatile
  2613  001736  0BF8               	andlw	-8
  2614  001738  0902               	iorlw	2
  2615  00173A  6EC1               	movwf	4033,c	;volatile
  2616  00173C  0012               	return	
  2617  00173E                     __end_of_ADC_init:
  2618                           	opt stack 0
  2619                           tblptru	equ	0xFF8
  2620                           tblptrh	equ	0xFF7
  2621                           tblptrl	equ	0xFF6
  2622                           tablat	equ	0xFF5
  2623                           prodh	equ	0xFF4
  2624                           prodl	equ	0xFF3
  2625                           intcon	equ	0xFF2
  2626                           intcon2	equ	0xFF1
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           indf2	equ	0xFDF
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _ADC *****************
  2637 ;; Defined at:
  2638 ;;		line 91 in file "../My_header\My_hedaer_18F.h"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  ch              1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  ch              1   26[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2   22[COMRAM] unsigned int 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;Total ram usage:        5 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    3
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text23
  2667  001570                     __ptext23:
  2668                           	opt stack 0
  2669  001570                     _ADC:
  2670                           	opt stack 27
  2671                           
  2672                           ;incstack = 0
  2673                           ;ADC@ch stored from wreg
  2674  001570  6E1B               	movwf	ADC@ch,c
  2675                           
  2676                           ;My_header\My_hedaer_18F.h: 92: ADCON0bits.ADON = 1;
  2677  001572  80C2               	bsf	4034,0,c	;volatile
  2678                           
  2679                           ;My_header\My_hedaer_18F.h: 93: ADCON0bits.CHS = ch;
  2680  001574  C01B  F019         	movff	ADC@ch,??_ADC
  2681  001578  4619               	rlncf	??_ADC,f,c
  2682  00157A  4619               	rlncf	??_ADC,f,c
  2683  00157C  50C2               	movf	4034,w,c	;volatile
  2684  00157E  1819               	xorwf	??_ADC,w,c
  2685  001580  0BC3               	andlw	-61
  2686  001582  1819               	xorwf	??_ADC,w,c
  2687  001584  6EC2               	movwf	4034,c	;volatile
  2688                           
  2689                           ;My_header\My_hedaer_18F.h: 94: _delay((unsigned long)((3)*(48000000/4000000.0)));
  2690  001586  0E0C               	movlw	12
  2691  001588                     u747:
  2692  001588  2EE8               	decfsz	wreg,f,c
  2693  00158A  D7FE               	goto	u747
  2694                           
  2695                           ;My_header\My_hedaer_18F.h: 95: ADCON0bits.GO_nDONE = 1;
  2696  00158C  82C2               	bsf	4034,1,c	;volatile
  2697  00158E                     l99:
  2698  00158E  B2C2               	btfsc	4034,1,c	;volatile
  2699  001590  D7FE               	goto	l99
  2700                           
  2701                           ;My_header\My_hedaer_18F.h: 97: return ((ADRESH << 8) + ADRESL);
  2702  001592  50C4               	movf	4036,w,c	;volatile
  2703  001594  6E1A               	movwf	(??_ADC+1)& (0+255),c
  2704  001596  6A19               	clrf	??_ADC& (0+255),c
  2705  001598  50C3               	movf	4035,w,c	;volatile
  2706  00159A  2419               	addwf	??_ADC,w,c
  2707  00159C  6E17               	movwf	?_ADC,c
  2708  00159E  0E00               	movlw	0
  2709  0015A0  201A               	addwfc	??_ADC+1,w,c
  2710  0015A2  6E18               	movwf	?_ADC+1,c
  2711  0015A4  0012               	return	
  2712  0015A6                     __end_of_ADC:
  2713                           	opt stack 0
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           prodh	equ	0xFF4
  2719                           prodl	equ	0xFF3
  2720                           intcon	equ	0xFF2
  2721                           intcon2	equ	0xFF1
  2722                           postinc0	equ	0xFEE
  2723                           wreg	equ	0xFE8
  2724                           indf2	equ	0xFDF
  2725                           postinc2	equ	0xFDE
  2726                           postdec2	equ	0xFDD
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function _ISR *****************
  2732 ;; Defined at:
  2733 ;;		line 59 in file "PIC18F27J53-ADC01.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  ascii           1   21[COMRAM] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;		None               void
  2740 ;; Registers used:
  2741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2749 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2750 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2751 ;;Total ram usage:       15 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    2
  2754 ;; This function calls:
  2755 ;;		_button_timer_interrupt
  2756 ;;		_interrupt_TXIF
  2757 ;;		i2_tx_send
  2758 ;; This function is called by:
  2759 ;;		Interrupt level 2
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	intcode
  2764  000008                     __pintcode:
  2765                           	opt stack 0
  2766  000008                     _ISR:
  2767                           	opt stack 23
  2768                           
  2769                           ;incstack = 0
  2770  000008  CFFA F008          	movff	pclath,??_ISR
  2771  00000C  CFFB F009          	movff	pclatu,??_ISR+1
  2772  000010  CFE9 F00A          	movff	fsr0l,??_ISR+2
  2773  000014  CFEA F00B          	movff	fsr0h,??_ISR+3
  2774  000018  CFE1 F00C          	movff	fsr1l,??_ISR+4
  2775  00001C  CFE2 F00D          	movff	fsr1h,??_ISR+5
  2776  000020  CFD9 F00E          	movff	fsr2l,??_ISR+6
  2777  000024  CFDA F00F          	movff	fsr2h,??_ISR+7
  2778  000028  CFF3 F010          	movff	prodl,??_ISR+8
  2779  00002C  CFF4 F011          	movff	prodh,??_ISR+9
  2780  000030  CFF6 F012          	movff	tblptrl,??_ISR+10
  2781  000034  CFF7 F013          	movff	tblptrh,??_ISR+11
  2782  000038  CFF8 F014          	movff	tblptru,??_ISR+12
  2783  00003C  CFF5 F015          	movff	tablat,??_ISR+13
  2784                           
  2785                           ;PIC18F27J53-ADC01.c: 60: interrupt_TXIF();
  2786  000040  ECEC  F00A         	call	_interrupt_TXIF	;wreg free
  2787                           
  2788                           ;PIC18F27J53-ADC01.c: 61: if (PIR1bits.RC1IF) {
  2789  000044  AA9E               	btfss	3998,5,c	;volatile
  2790  000046  D006               	goto	i2l1434
  2791                           
  2792                           ;PIC18F27J53-ADC01.c: 62: PIR1bits.RC1IF = 0;
  2793  000048  9A9E               	bcf	3998,5,c	;volatile
  2794                           
  2795                           ;PIC18F27J53-ADC01.c: 63: uint8_t ascii = RCREG1;
  2796  00004A  CFAF F016          	movff	4015,ISR@ascii	;volatile
  2797                           
  2798                           ;PIC18F27J53-ADC01.c: 64: tx_send(ascii);
  2799  00004E  5016               	movf	ISR@ascii,w,c
  2800  000050  ECCC  F00B         	call	i2_tx_send
  2801  000054                     i2l1434:
  2802                           
  2803                           ;PIC18F27J53-ADC01.c: 65: }
  2804                           ;PIC18F27J53-ADC01.c: 66: if (INTCONbits.T0IF) {
  2805  000054  B4F2               	btfsc	intcon,2,c	;volatile
  2806                           
  2807                           ;PIC18F27J53-ADC01.c: 67: INTCONbits.T0IF = 0;
  2808  000056  94F2               	bcf	intcon,2,c	;volatile
  2809                           
  2810                           ;PIC18F27J53-ADC01.c: 68: }
  2811                           ;PIC18F27J53-ADC01.c: 69: if (PIR1bits.TMR1IF) {
  2812  000058  A09E               	btfss	3998,0,c	;volatile
  2813  00005A  D003               	goto	i2l1442
  2814                           
  2815                           ;PIC18F27J53-ADC01.c: 70: PIR1bits.TMR1IF = 0;
  2816  00005C  909E               	bcf	3998,0,c	;volatile
  2817                           
  2818                           ;PIC18F27J53-ADC01.c: 71: TMR1H = 0x80;
  2819  00005E  0E80               	movlw	128
  2820  000060  6ECF               	movwf	4047,c	;volatile
  2821  000062                     i2l1442:
  2822                           
  2823                           ;PIC18F27J53-ADC01.c: 72: }
  2824                           ;PIC18F27J53-ADC01.c: 73: if (PIR2bits.TMR3IF) {
  2825  000062  A2A1               	btfss	4001,1,c	;volatile
  2826  000064  D00D               	goto	i2l276
  2827                           
  2828                           ;PIC18F27J53-ADC01.c: 74: PIR2bits.TMR3IF = 0;
  2829  000066  92A1               	bcf	4001,1,c	;volatile
  2830                           
  2831                           ;PIC18F27J53-ADC01.c: 75: button_timer_interrupt(&sw, !PORTAbits.RA6);
  2832  000068  0E00               	movlw	high _sw
  2833  00006A  6E02               	movwf	button_timer_interrupt@bt+1,c
  2834  00006C  0E29               	movlw	low _sw
  2835  00006E  6E01               	movwf	button_timer_interrupt@bt,c
  2836  000070  BC80               	btfsc	3968,6,c	;volatile
  2837  000072  D002               	goto	i2u69_40
  2838  000074  0E01               	movlw	1
  2839  000076  D001               	goto	i2u69_46
  2840  000078                     i2u69_40:
  2841  000078  0E00               	movlw	0
  2842  00007A                     i2u69_46:
  2843  00007A  6E03               	movwf	button_timer_interrupt@sw_value,c
  2844  00007C  EC89  F007         	call	_button_timer_interrupt	;wreg free
  2845  000080                     i2l276:
  2846  000080  C015  FFF5         	movff	??_ISR+13,tablat
  2847  000084  C014  FFF8         	movff	??_ISR+12,tblptru
  2848  000088  C013  FFF7         	movff	??_ISR+11,tblptrh
  2849  00008C  C012  FFF6         	movff	??_ISR+10,tblptrl
  2850  000090  C011  FFF4         	movff	??_ISR+9,prodh
  2851  000094  C010  FFF3         	movff	??_ISR+8,prodl
  2852  000098  C00F  FFDA         	movff	??_ISR+7,fsr2h
  2853  00009C  C00E  FFD9         	movff	??_ISR+6,fsr2l
  2854  0000A0  C00D  FFE2         	movff	??_ISR+5,fsr1h
  2855  0000A4  C00C  FFE1         	movff	??_ISR+4,fsr1l
  2856  0000A8  C00B  FFEA         	movff	??_ISR+3,fsr0h
  2857  0000AC  C00A  FFE9         	movff	??_ISR+2,fsr0l
  2858  0000B0  C009  FFFB         	movff	??_ISR+1,pclatu
  2859  0000B4  C008  FFFA         	movff	??_ISR,pclath
  2860  0000B8  0011               	retfie		f
  2861  0000BA                     __end_of_ISR:
  2862                           	opt stack 0
  2863                           pclatu	equ	0xFFB
  2864                           pclath	equ	0xFFA
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           prodh	equ	0xFF4
  2870                           prodl	equ	0xFF3
  2871                           intcon	equ	0xFF2
  2872                           intcon2	equ	0xFF1
  2873                           postinc0	equ	0xFEE
  2874                           fsr0h	equ	0xFEA
  2875                           fsr0l	equ	0xFE9
  2876                           wreg	equ	0xFE8
  2877                           fsr1h	equ	0xFE2
  2878                           fsr1l	equ	0xFE1
  2879                           indf2	equ	0xFDF
  2880                           postinc2	equ	0xFDE
  2881                           postdec2	equ	0xFDD
  2882                           fsr2h	equ	0xFDA
  2883                           fsr2l	equ	0xFD9
  2884                           status	equ	0xFD8
  2885                           
  2886 ;; *************** function i2_tx_send *****************
  2887 ;; Defined at:
  2888 ;;		line 40 in file "../My_header\My_UART_18F.h"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  asciicode       1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  asciicode       1    6[COMRAM] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;		None               void
  2895 ;; Registers used:
  2896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;Total ram usage:        1 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		i2_ringbuf_push
  2911 ;; This function is called by:
  2912 ;;		_ISR
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text25
  2917  001798                     __ptext25:
  2918                           	opt stack 0
  2919  001798                     i2_tx_send:
  2920                           	opt stack 23
  2921                           
  2922                           ;incstack = 0
  2923                           ;i2tx_send@asciicode stored from wreg
  2924  001798  6E07               	movwf	i2tx_send@asciicode,c
  2925                           
  2926                           ;My_header\My_UART_18F.h: 41: ringbuf_push(&tx_buf, asciicode);
  2927  00179A  0E00               	movlw	high _tx_buf
  2928  00179C  6E02               	movwf	i2ringbuf_push@rb+1,c
  2929  00179E  0E24               	movlw	low _tx_buf
  2930  0017A0  6E01               	movwf	i2ringbuf_push@rb,c
  2931  0017A2  C007  F003         	movff	i2tx_send@asciicode,i2ringbuf_push@asciicode
  2932  0017A6  EC69  F009         	call	i2_ringbuf_push	;wreg free
  2933                           
  2934                           ;My_header\My_UART_18F.h: 42: PIE1bits.TX1IE = 1;
  2935  0017AA  889D               	bsf	3997,4,c	;volatile
  2936  0017AC  0012               	return	
  2937  0017AE                     __end_ofi2_tx_send:
  2938                           	opt stack 0
  2939                           pclatu	equ	0xFFB
  2940                           pclath	equ	0xFFA
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodh	equ	0xFF4
  2946                           prodl	equ	0xFF3
  2947                           intcon	equ	0xFF2
  2948                           intcon2	equ	0xFF1
  2949                           postinc0	equ	0xFEE
  2950                           fsr0h	equ	0xFEA
  2951                           fsr0l	equ	0xFE9
  2952                           wreg	equ	0xFE8
  2953                           fsr1h	equ	0xFE2
  2954                           fsr1l	equ	0xFE1
  2955                           indf2	equ	0xFDF
  2956                           postinc2	equ	0xFDE
  2957                           postdec2	equ	0xFDD
  2958                           fsr2h	equ	0xFDA
  2959                           fsr2l	equ	0xFD9
  2960                           status	equ	0xFD8
  2961                           
  2962 ;; *************** function i2_ringbuf_push *****************
  2963 ;; Defined at:
  2964 ;;		line 29 in file "../My_header\My_ringbuf.h"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  2967 ;;		 -> tx_buf(5), 
  2968 ;;  asciicode       1    2[COMRAM] unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;		None               void
  2973 ;; Registers used:
  2974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;Total ram usage:        6 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		i2_tx_send
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text26
  2994  0012D2                     __ptext26:
  2995                           	opt stack 0
  2996  0012D2                     i2_ringbuf_push:
  2997                           	opt stack 23
  2998                           
  2999                           ;My_header\My_ringbuf.h: 30: rb->buf[rb->head] = asciicode;
  3000                           
  3001                           ;incstack = 0
  3002  0012D2  EE20 F003          	lfsr	2,3
  3003  0012D6  5001               	movf	i2ringbuf_push@rb,w,c
  3004  0012D8  26D9               	addwf	fsr2l,f,c
  3005  0012DA  5002               	movf	i2ringbuf_push@rb+1,w,c
  3006  0012DC  22DA               	addwfc	fsr2h,f,c
  3007  0012DE  50DF               	movf	indf2,w,c
  3008  0012E0  6E04               	movwf	??i2_ringbuf_push& (0+255),c
  3009  0012E2  5004               	movf	??i2_ringbuf_push,w,c
  3010  0012E4  0D01               	mullw	1
  3011  0012E6  C001  FFD9         	movff	i2ringbuf_push@rb,fsr2l
  3012  0012EA  C002  FFDA         	movff	i2ringbuf_push@rb+1,fsr2h
  3013  0012EE  CFDE F005          	movff	postinc2,??i2_ringbuf_push+1
  3014  0012F2  CFDD F006          	movff	postdec2,??i2_ringbuf_push+2
  3015  0012F6  50F3               	movf	prodl,w,c
  3016  0012F8  2405               	addwf	??i2_ringbuf_push+1,w,c
  3017  0012FA  6ED9               	movwf	fsr2l,c
  3018  0012FC  50F4               	movf	prodh,w,c
  3019  0012FE  2006               	addwfc	??i2_ringbuf_push+2,w,c
  3020  001300  6EDA               	movwf	fsr2h,c
  3021  001302  C003  FFDF         	movff	i2ringbuf_push@asciicode,indf2
  3022                           
  3023                           ;My_header\My_ringbuf.h: 31: rb->head++;
  3024  001306  EE20 F003          	lfsr	2,3
  3025  00130A  5001               	movf	i2ringbuf_push@rb,w,c
  3026  00130C  26D9               	addwf	fsr2l,f,c
  3027  00130E  5002               	movf	i2ringbuf_push@rb+1,w,c
  3028  001310  22DA               	addwfc	fsr2h,f,c
  3029  001312  2ADF               	incf	indf2,f,c
  3030                           
  3031                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->size) {
  3032  001314  EE20 F003          	lfsr	2,3
  3033  001318  5001               	movf	i2ringbuf_push@rb,w,c
  3034  00131A  26D9               	addwf	fsr2l,f,c
  3035  00131C  5002               	movf	i2ringbuf_push@rb+1,w,c
  3036  00131E  22DA               	addwfc	fsr2h,f,c
  3037  001320  50DF               	movf	indf2,w,c
  3038  001322  6E04               	movwf	??i2_ringbuf_push& (0+255),c
  3039  001324  EE20 F002          	lfsr	2,2
  3040  001328  5001               	movf	i2ringbuf_push@rb,w,c
  3041  00132A  26D9               	addwf	fsr2l,f,c
  3042  00132C  5002               	movf	i2ringbuf_push@rb+1,w,c
  3043  00132E  22DA               	addwfc	fsr2h,f,c
  3044  001330  50DF               	movf	indf2,w,c
  3045  001332  5C04               	subwf	??i2_ringbuf_push,w,c
  3046  001334  A0D8               	btfss	status,0,c
  3047  001336  0012               	return	
  3048                           
  3049                           ;My_header\My_ringbuf.h: 33: rb->head = 0;
  3050  001338  EE20 F003          	lfsr	2,3
  3051  00133C  5001               	movf	i2ringbuf_push@rb,w,c
  3052  00133E  26D9               	addwf	fsr2l,f,c
  3053  001340  5002               	movf	i2ringbuf_push@rb+1,w,c
  3054  001342  22DA               	addwfc	fsr2h,f,c
  3055  001344  0E00               	movlw	0
  3056  001346  6EDF               	movwf	indf2,c
  3057  001348  0012               	return	
  3058  00134A                     __end_ofi2_ringbuf_push:
  3059                           	opt stack 0
  3060                           pclatu	equ	0xFFB
  3061                           pclath	equ	0xFFA
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           intcon	equ	0xFF2
  3069                           intcon2	equ	0xFF1
  3070                           postinc0	equ	0xFEE
  3071                           fsr0h	equ	0xFEA
  3072                           fsr0l	equ	0xFE9
  3073                           wreg	equ	0xFE8
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _interrupt_TXIF *****************
  3084 ;; Defined at:
  3085 ;;		line 64 in file "../My_header\My_UART_18F.h"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    1
  3106 ;; This function calls:
  3107 ;;		_ringbuf_num
  3108 ;;		_ringbuf_pop
  3109 ;; This function is called by:
  3110 ;;		_ISR
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text27
  3115  0015D8                     __ptext27:
  3116                           	opt stack 0
  3117  0015D8                     _interrupt_TXIF:
  3118                           	opt stack 23
  3119                           
  3120                           ;My_header\My_UART_18F.h: 65: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
  3121                           
  3122                           ;incstack = 0
  3123  0015D8  A89D               	btfss	3997,4,c	;volatile
  3124  0015DA  0012               	return	
  3125  0015DC  A89E               	btfss	3998,4,c	;volatile
  3126  0015DE  0012               	return	
  3127                           
  3128                           ;My_header\My_UART_18F.h: 66: PIR1bits.TX1IF = 0;
  3129  0015E0  989E               	bcf	3998,4,c	;volatile
  3130                           
  3131                           ;My_header\My_UART_18F.h: 67: if (ringbuf_num(&tx_buf) > 0) {
  3132  0015E2  0E00               	movlw	high _tx_buf
  3133  0015E4  6E02               	movwf	ringbuf_num@rb+1,c
  3134  0015E6  0E24               	movlw	low _tx_buf
  3135  0015E8  6E01               	movwf	ringbuf_num@rb,c
  3136  0015EA  ECB1  F008         	call	_ringbuf_num	;wreg free
  3137  0015EE  0900               	iorlw	0
  3138  0015F0  B4D8               	btfsc	status,2,c
  3139  0015F2  D008               	goto	i2l169
  3140                           
  3141                           ;My_header\My_UART_18F.h: 68: TXREG1 = ringbuf_pop(&tx_buf);
  3142  0015F4  0E00               	movlw	high _tx_buf
  3143  0015F6  6E02               	movwf	ringbuf_pop@rb+1,c
  3144  0015F8  0E24               	movlw	low _tx_buf
  3145  0015FA  6E01               	movwf	ringbuf_pop@rb,c
  3146  0015FC  ECF0  F008         	call	_ringbuf_pop	;wreg free
  3147  001600  6EAE               	movwf	4014,c	;volatile
  3148                           
  3149                           ;My_header\My_UART_18F.h: 69: } else {
  3150  001602  0012               	return	
  3151  001604                     i2l169:
  3152                           
  3153                           ;My_header\My_UART_18F.h: 70: PIE1bits.TX1IE = 0;
  3154  001604  989D               	bcf	3997,4,c	;volatile
  3155  001606  0012               	return	
  3156  001608                     __end_of_interrupt_TXIF:
  3157                           	opt stack 0
  3158                           pclatu	equ	0xFFB
  3159                           pclath	equ	0xFFA
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           intcon2	equ	0xFF1
  3168                           postinc0	equ	0xFEE
  3169                           fsr0h	equ	0xFEA
  3170                           fsr0l	equ	0xFE9
  3171                           wreg	equ	0xFE8
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _ringbuf_pop *****************
  3182 ;; Defined at:
  3183 ;;		line 37 in file "../My_header\My_ringbuf.h"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  3186 ;;		 -> tx_buf(5), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  ret             1    5[COMRAM] unsigned char 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      unsigned char 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;Total ram usage:        6 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_interrupt_TXIF
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text28
  3212  0011E0                     __ptext28:
  3213                           	opt stack 0
  3214  0011E0                     _ringbuf_pop:
  3215                           	opt stack 23
  3216                           
  3217                           ;My_header\My_ringbuf.h: 38: uint8_t ret = rb->buf[rb->tail];
  3218                           
  3219                           ;incstack = 0
  3220  0011E0  EE20 F004          	lfsr	2,4
  3221  0011E4  5001               	movf	ringbuf_pop@rb,w,c
  3222  0011E6  26D9               	addwf	fsr2l,f,c
  3223  0011E8  5002               	movf	ringbuf_pop@rb+1,w,c
  3224  0011EA  22DA               	addwfc	fsr2h,f,c
  3225  0011EC  50DF               	movf	indf2,w,c
  3226  0011EE  6E03               	movwf	??_ringbuf_pop& (0+255),c
  3227  0011F0  5003               	movf	??_ringbuf_pop,w,c
  3228  0011F2  0D01               	mullw	1
  3229  0011F4  C001  FFD9         	movff	ringbuf_pop@rb,fsr2l
  3230  0011F8  C002  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  3231  0011FC  CFDE F004          	movff	postinc2,??_ringbuf_pop+1
  3232  001200  CFDD F005          	movff	postdec2,??_ringbuf_pop+2
  3233  001204  50F3               	movf	prodl,w,c
  3234  001206  2404               	addwf	??_ringbuf_pop+1,w,c
  3235  001208  6ED9               	movwf	fsr2l,c
  3236  00120A  50F4               	movf	prodh,w,c
  3237  00120C  2005               	addwfc	??_ringbuf_pop+2,w,c
  3238  00120E  6EDA               	movwf	fsr2h,c
  3239  001210  50DF               	movf	indf2,w,c
  3240  001212  6E06               	movwf	ringbuf_pop@ret,c
  3241                           
  3242                           ;My_header\My_ringbuf.h: 39: rb->tail++;
  3243  001214  EE20 F004          	lfsr	2,4
  3244  001218  5001               	movf	ringbuf_pop@rb,w,c
  3245  00121A  26D9               	addwf	fsr2l,f,c
  3246  00121C  5002               	movf	ringbuf_pop@rb+1,w,c
  3247  00121E  22DA               	addwfc	fsr2h,f,c
  3248  001220  2ADF               	incf	indf2,f,c
  3249                           
  3250                           ;My_header\My_ringbuf.h: 40: if (rb->tail >= rb->size) {
  3251  001222  EE20 F004          	lfsr	2,4
  3252  001226  5001               	movf	ringbuf_pop@rb,w,c
  3253  001228  26D9               	addwf	fsr2l,f,c
  3254  00122A  5002               	movf	ringbuf_pop@rb+1,w,c
  3255  00122C  22DA               	addwfc	fsr2h,f,c
  3256  00122E  50DF               	movf	indf2,w,c
  3257  001230  6E03               	movwf	??_ringbuf_pop& (0+255),c
  3258  001232  EE20 F002          	lfsr	2,2
  3259  001236  5001               	movf	ringbuf_pop@rb,w,c
  3260  001238  26D9               	addwf	fsr2l,f,c
  3261  00123A  5002               	movf	ringbuf_pop@rb+1,w,c
  3262  00123C  22DA               	addwfc	fsr2h,f,c
  3263  00123E  50DF               	movf	indf2,w,c
  3264  001240  5C03               	subwf	??_ringbuf_pop,w,c
  3265  001242  A0D8               	btfss	status,0,c
  3266  001244  D008               	goto	i2l952
  3267                           
  3268                           ;My_header\My_ringbuf.h: 41: rb->tail = 0;
  3269  001246  EE20 F004          	lfsr	2,4
  3270  00124A  5001               	movf	ringbuf_pop@rb,w,c
  3271  00124C  26D9               	addwf	fsr2l,f,c
  3272  00124E  5002               	movf	ringbuf_pop@rb+1,w,c
  3273  001250  22DA               	addwfc	fsr2h,f,c
  3274  001252  0E00               	movlw	0
  3275  001254  6EDF               	movwf	indf2,c
  3276  001256                     i2l952:
  3277                           
  3278                           ;My_header\My_ringbuf.h: 42: }
  3279                           ;My_header\My_ringbuf.h: 43: return ret;
  3280  001256  5006               	movf	ringbuf_pop@ret,w,c
  3281  001258  0012               	return	
  3282  00125A                     __end_of_ringbuf_pop:
  3283                           	opt stack 0
  3284                           pclatu	equ	0xFFB
  3285                           pclath	equ	0xFFA
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           prodh	equ	0xFF4
  3291                           prodl	equ	0xFF3
  3292                           intcon	equ	0xFF2
  3293                           intcon2	equ	0xFF1
  3294                           postinc0	equ	0xFEE
  3295                           fsr0h	equ	0xFEA
  3296                           fsr0l	equ	0xFE9
  3297                           wreg	equ	0xFE8
  3298                           fsr1h	equ	0xFE2
  3299                           fsr1l	equ	0xFE1
  3300                           indf2	equ	0xFDF
  3301                           postinc2	equ	0xFDE
  3302                           postdec2	equ	0xFDD
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _ringbuf_num *****************
  3308 ;; Defined at:
  3309 ;;		line 46 in file "../My_header\My_ringbuf.h"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  3312 ;;		 -> tx_buf(5), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;Total ram usage:        4 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_interrupt_TXIF
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text29
  3338  001162                     __ptext29:
  3339                           	opt stack 0
  3340  001162                     _ringbuf_num:
  3341                           	opt stack 23
  3342                           
  3343                           ;My_header\My_ringbuf.h: 47: if (rb->head >= rb->tail) {
  3344                           
  3345                           ;incstack = 0
  3346  001162  EE20 F003          	lfsr	2,3
  3347  001166  5001               	movf	ringbuf_num@rb,w,c
  3348  001168  26D9               	addwf	fsr2l,f,c
  3349  00116A  5002               	movf	ringbuf_num@rb+1,w,c
  3350  00116C  22DA               	addwfc	fsr2h,f,c
  3351  00116E  50DF               	movf	indf2,w,c
  3352  001170  6E03               	movwf	??_ringbuf_num& (0+255),c
  3353  001172  EE20 F004          	lfsr	2,4
  3354  001176  5001               	movf	ringbuf_num@rb,w,c
  3355  001178  26D9               	addwf	fsr2l,f,c
  3356  00117A  5002               	movf	ringbuf_num@rb+1,w,c
  3357  00117C  22DA               	addwfc	fsr2h,f,c
  3358  00117E  50DF               	movf	indf2,w,c
  3359  001180  5C03               	subwf	??_ringbuf_num,w,c
  3360  001182  A0D8               	btfss	status,0,c
  3361  001184  D012               	goto	i2l964
  3362                           
  3363                           ;My_header\My_ringbuf.h: 48: return (rb->head - rb->tail);
  3364  001186  EE20 F003          	lfsr	2,3
  3365  00118A  5001               	movf	ringbuf_num@rb,w,c
  3366  00118C  26D9               	addwf	fsr2l,f,c
  3367  00118E  5002               	movf	ringbuf_num@rb+1,w,c
  3368  001190  22DA               	addwfc	fsr2h,f,c
  3369  001192  50DF               	movf	indf2,w,c
  3370  001194  6E03               	movwf	??_ringbuf_num& (0+255),c
  3371  001196  EE20 F004          	lfsr	2,4
  3372  00119A  5001               	movf	ringbuf_num@rb,w,c
  3373  00119C  26D9               	addwf	fsr2l,f,c
  3374  00119E  5002               	movf	ringbuf_num@rb+1,w,c
  3375  0011A0  22DA               	addwfc	fsr2h,f,c
  3376  0011A2  50DF               	movf	indf2,w,c
  3377  0011A4  0800               	sublw	0
  3378  0011A6  2403               	addwf	??_ringbuf_num,w,c
  3379  0011A8  0012               	return	
  3380  0011AA                     i2l964:
  3381                           
  3382                           ;My_header\My_ringbuf.h: 50: return (rb->size + rb->head - rb->tail);
  3383  0011AA  EE20 F003          	lfsr	2,3
  3384  0011AE  5001               	movf	ringbuf_num@rb,w,c
  3385  0011B0  26D9               	addwf	fsr2l,f,c
  3386  0011B2  5002               	movf	ringbuf_num@rb+1,w,c
  3387  0011B4  22DA               	addwfc	fsr2h,f,c
  3388  0011B6  50DF               	movf	indf2,w,c
  3389  0011B8  6E03               	movwf	??_ringbuf_num& (0+255),c
  3390  0011BA  EE20 F002          	lfsr	2,2
  3391  0011BE  5001               	movf	ringbuf_num@rb,w,c
  3392  0011C0  26D9               	addwf	fsr2l,f,c
  3393  0011C2  5002               	movf	ringbuf_num@rb+1,w,c
  3394  0011C4  22DA               	addwfc	fsr2h,f,c
  3395  0011C6  50DF               	movf	indf2,w,c
  3396  0011C8  6E04               	movwf	(??_ringbuf_num+1)& (0+255),c
  3397  0011CA  EE20 F004          	lfsr	2,4
  3398  0011CE  5001               	movf	ringbuf_num@rb,w,c
  3399  0011D0  26D9               	addwf	fsr2l,f,c
  3400  0011D2  5002               	movf	ringbuf_num@rb+1,w,c
  3401  0011D4  22DA               	addwfc	fsr2h,f,c
  3402  0011D6  50DF               	movf	indf2,w,c
  3403  0011D8  0800               	sublw	0
  3404  0011DA  2404               	addwf	??_ringbuf_num+1,w,c
  3405  0011DC  2403               	addwf	??_ringbuf_num,w,c
  3406  0011DE  0012               	return	
  3407  0011E0                     __end_of_ringbuf_num:
  3408                           	opt stack 0
  3409                           pclatu	equ	0xFFB
  3410                           pclath	equ	0xFFA
  3411                           tblptru	equ	0xFF8
  3412                           tblptrh	equ	0xFF7
  3413                           tblptrl	equ	0xFF6
  3414                           tablat	equ	0xFF5
  3415                           prodh	equ	0xFF4
  3416                           prodl	equ	0xFF3
  3417                           intcon	equ	0xFF2
  3418                           intcon2	equ	0xFF1
  3419                           postinc0	equ	0xFEE
  3420                           fsr0h	equ	0xFEA
  3421                           fsr0l	equ	0xFE9
  3422                           wreg	equ	0xFE8
  3423                           fsr1h	equ	0xFE2
  3424                           fsr1l	equ	0xFE1
  3425                           indf2	equ	0xFDF
  3426                           postinc2	equ	0xFDE
  3427                           postdec2	equ	0xFDD
  3428                           fsr2h	equ	0xFDA
  3429                           fsr2l	equ	0xFD9
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function _button_timer_interrupt *****************
  3433 ;; Defined at:
  3434 ;;		line 45 in file "../My_header\My_button.h"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  bt              2    0[COMRAM] PTR struct button
  3437 ;;		 -> sw(3), 
  3438 ;;  sw_value        1    2[COMRAM] unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;		None               void
  3443 ;; Registers used:
  3444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3450 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;Total ram usage:        5 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_ISR
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text30
  3464  000F12                     __ptext30:
  3465                           	opt stack 0
  3466  000F12                     _button_timer_interrupt:
  3467                           	opt stack 24
  3468                           
  3469                           ;My_header\My_button.h: 46: if (sw_value) {
  3470                           
  3471                           ;incstack = 0
  3472  000F12  5003               	movf	button_timer_interrupt@sw_value,w,c
  3473  000F14  B4D8               	btfsc	status,2,c
  3474  000F16  D056               	goto	i2l1112
  3475                           
  3476                           ;My_header\My_button.h: 47: if (bt->cnt_sw < (48000000/32000000*200) + 1) bt->cnt_sw++;
  3477  000F18  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3478  000F1C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3479  000F20  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3480  000F24  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3481  000F28  0EC9               	movlw	201
  3482  000F2A  5C04               	subwf	??_button_timer_interrupt,w,c
  3483  000F2C  0E00               	movlw	0
  3484  000F2E  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3485  000F30  B0D8               	btfsc	status,0,c
  3486  000F32  D007               	goto	i2l112
  3487  000F34  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3488  000F38  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3489  000F3C  2ADE               	incf	postinc2,f,c
  3490  000F3E  0E00               	movlw	0
  3491  000F40  22DD               	addwfc	postdec2,f,c
  3492  000F42                     i2l112:
  3493                           
  3494                           ;My_header\My_button.h: 48: if (bt->cnt_sw == (48000000/32000000*200))bt->flag.long_hold
      +                          ing_3 = 1;
  3495  000F42  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3496  000F46  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3497  000F4A  50DE               	movf	postinc2,w,c
  3498  000F4C  0AC8               	xorlw	200
  3499  000F4E  10DD               	iorwf	postdec2,w,c
  3500  000F50  A4D8               	btfss	status,2,c
  3501  000F52  D007               	goto	i2l113
  3502  000F54  EE20 F002          	lfsr	2,2
  3503  000F58  5001               	movf	button_timer_interrupt@bt,w,c
  3504  000F5A  26D9               	addwf	fsr2l,f,c
  3505  000F5C  5002               	movf	button_timer_interrupt@bt+1,w,c
  3506  000F5E  22DA               	addwfc	fsr2h,f,c
  3507  000F60  8EDF               	bsf	indf2,7,c
  3508  000F62                     i2l113:
  3509                           
  3510                           ;My_header\My_button.h: 49: if (bt->cnt_sw == (48000000/32000000*80))bt->flag.long_holdi
      +                          ng_2 = 1;
  3511  000F62  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3512  000F66  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3513  000F6A  50DE               	movf	postinc2,w,c
  3514  000F6C  0A50               	xorlw	80
  3515  000F6E  10DD               	iorwf	postdec2,w,c
  3516  000F70  A4D8               	btfss	status,2,c
  3517  000F72  D007               	goto	i2l114
  3518  000F74  EE20 F002          	lfsr	2,2
  3519  000F78  5001               	movf	button_timer_interrupt@bt,w,c
  3520  000F7A  26D9               	addwf	fsr2l,f,c
  3521  000F7C  5002               	movf	button_timer_interrupt@bt+1,w,c
  3522  000F7E  22DA               	addwfc	fsr2h,f,c
  3523  000F80  8CDF               	bsf	indf2,6,c
  3524  000F82                     i2l114:
  3525                           
  3526                           ;My_header\My_button.h: 50: if (bt->cnt_sw == (48000000/32000000*20))bt->flag.long_holdi
      +                          ng_1 = 1;
  3527  000F82  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3528  000F86  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3529  000F8A  50DE               	movf	postinc2,w,c
  3530  000F8C  0A14               	xorlw	20
  3531  000F8E  10DD               	iorwf	postdec2,w,c
  3532  000F90  A4D8               	btfss	status,2,c
  3533  000F92  D007               	goto	i2l115
  3534  000F94  EE20 F002          	lfsr	2,2
  3535  000F98  5001               	movf	button_timer_interrupt@bt,w,c
  3536  000F9A  26D9               	addwf	fsr2l,f,c
  3537  000F9C  5002               	movf	button_timer_interrupt@bt+1,w,c
  3538  000F9E  22DA               	addwfc	fsr2h,f,c
  3539  000FA0  8ADF               	bsf	indf2,5,c
  3540  000FA2                     i2l115:
  3541                           
  3542                           ;My_header\My_button.h: 51: if (bt->cnt_sw == (48000000/32000000*2))bt->flag.pressing = 
      +                          1;
  3543  000FA2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3544  000FA6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3545  000FAA  50DE               	movf	postinc2,w,c
  3546  000FAC  0A02               	xorlw	2
  3547  000FAE  10DD               	iorwf	postdec2,w,c
  3548  000FB0  A4D8               	btfss	status,2,c
  3549  000FB2  0012               	return	
  3550  000FB4  EE20 F002          	lfsr	2,2
  3551  000FB8  5001               	movf	button_timer_interrupt@bt,w,c
  3552  000FBA  26D9               	addwf	fsr2l,f,c
  3553  000FBC  5002               	movf	button_timer_interrupt@bt+1,w,c
  3554  000FBE  22DA               	addwfc	fsr2h,f,c
  3555  000FC0  88DF               	bsf	indf2,4,c
  3556  000FC2  0012               	return	
  3557  000FC4                     i2l1112:
  3558                           
  3559                           ;My_header\My_button.h: 53: if (bt->cnt_sw >= (48000000/32000000*200))bt->flag.long_hold
      +                          _3 = 1;
  3560  000FC4  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3561  000FC8  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3562  000FCC  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3563  000FD0  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3564  000FD4  0EC8               	movlw	200
  3565  000FD6  5C04               	subwf	??_button_timer_interrupt,w,c
  3566  000FD8  0E00               	movlw	0
  3567  000FDA  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3568  000FDC  A0D8               	btfss	status,0,c
  3569  000FDE  D008               	goto	i2l1116
  3570  000FE0  EE20 F002          	lfsr	2,2
  3571  000FE4  5001               	movf	button_timer_interrupt@bt,w,c
  3572  000FE6  26D9               	addwf	fsr2l,f,c
  3573  000FE8  5002               	movf	button_timer_interrupt@bt+1,w,c
  3574  000FEA  22DA               	addwfc	fsr2h,f,c
  3575  000FEC  86DF               	bsf	indf2,3,c
  3576  000FEE  D041               	goto	i2l1128
  3577  000FF0                     i2l1116:
  3578                           
  3579                           ;My_header\My_button.h: 54: else if (bt->cnt_sw >= (48000000/32000000*80))bt->flag.long_
      +                          hold_2 = 1;
  3580  000FF0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3581  000FF4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3582  000FF8  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3583  000FFC  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3584  001000  0E50               	movlw	80
  3585  001002  5C04               	subwf	??_button_timer_interrupt,w,c
  3586  001004  0E00               	movlw	0
  3587  001006  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3588  001008  A0D8               	btfss	status,0,c
  3589  00100A  D008               	goto	i2l1120
  3590  00100C  EE20 F002          	lfsr	2,2
  3591  001010  5001               	movf	button_timer_interrupt@bt,w,c
  3592  001012  26D9               	addwf	fsr2l,f,c
  3593  001014  5002               	movf	button_timer_interrupt@bt+1,w,c
  3594  001016  22DA               	addwfc	fsr2h,f,c
  3595  001018  84DF               	bsf	indf2,2,c
  3596  00101A  D02B               	goto	i2l1128
  3597  00101C                     i2l1120:
  3598                           
  3599                           ;My_header\My_button.h: 55: else if (bt->cnt_sw >= (48000000/32000000*20))bt->flag.long_
      +                          hold_1 = 1;
  3600  00101C  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3601  001020  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3602  001024  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3603  001028  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3604  00102C  0E14               	movlw	20
  3605  00102E  5C04               	subwf	??_button_timer_interrupt,w,c
  3606  001030  0E00               	movlw	0
  3607  001032  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3608  001034  A0D8               	btfss	status,0,c
  3609  001036  D008               	goto	i2l1124
  3610  001038  EE20 F002          	lfsr	2,2
  3611  00103C  5001               	movf	button_timer_interrupt@bt,w,c
  3612  00103E  26D9               	addwf	fsr2l,f,c
  3613  001040  5002               	movf	button_timer_interrupt@bt+1,w,c
  3614  001042  22DA               	addwfc	fsr2h,f,c
  3615  001044  82DF               	bsf	indf2,1,c
  3616  001046  D015               	goto	i2l1128
  3617  001048                     i2l1124:
  3618                           
  3619                           ;My_header\My_button.h: 56: else if (bt->cnt_sw >= (48000000/32000000*2))bt->flag.press 
      +                          = 1;
  3620  001048  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3621  00104C  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3622  001050  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3623  001054  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3624  001058  0E02               	movlw	2
  3625  00105A  5C04               	subwf	??_button_timer_interrupt,w,c
  3626  00105C  0E00               	movlw	0
  3627  00105E  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3628  001060  A0D8               	btfss	status,0,c
  3629  001062  D007               	goto	i2l1128
  3630  001064  EE20 F002          	lfsr	2,2
  3631  001068  5001               	movf	button_timer_interrupt@bt,w,c
  3632  00106A  26D9               	addwf	fsr2l,f,c
  3633  00106C  5002               	movf	button_timer_interrupt@bt+1,w,c
  3634  00106E  22DA               	addwfc	fsr2h,f,c
  3635  001070  80DF               	bsf	indf2,0,c
  3636  001072                     i2l1128:
  3637                           
  3638                           ;My_header\My_button.h: 57: bt->cnt_sw = 0;
  3639  001072  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3640  001076  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3641  00107A  0E00               	movlw	0
  3642  00107C  6EDE               	movwf	postinc2,c
  3643  00107E  0E00               	movlw	0
  3644  001080  6EDD               	movwf	postdec2,c
  3645                           
  3646                           ;My_header\My_button.h: 58: bt->flags &= 0x0F;
  3647  001082  EE20 F002          	lfsr	2,2
  3648  001086  5001               	movf	button_timer_interrupt@bt,w,c
  3649  001088  26D9               	addwf	fsr2l,f,c
  3650  00108A  5002               	movf	button_timer_interrupt@bt+1,w,c
  3651  00108C  22DA               	addwfc	fsr2h,f,c
  3652  00108E  0E0F               	movlw	15
  3653  001090  16DF               	andwf	indf2,f,c
  3654  001092  0012               	return	
  3655  001094                     __end_of_button_timer_interrupt:
  3656                           	opt stack 0
  3657                           pclatu	equ	0xFFB
  3658                           pclath	equ	0xFFA
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           intcon2	equ	0xFF1
  3667                           postinc0	equ	0xFEE
  3668                           fsr0h	equ	0xFEA
  3669                           fsr0l	equ	0xFE9
  3670                           wreg	equ	0xFE8
  3671                           fsr1h	equ	0xFE2
  3672                           fsr1l	equ	0xFE1
  3673                           indf2	equ	0xFDF
  3674                           postinc2	equ	0xFDE
  3675                           postdec2	equ	0xFDD
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           pclatu	equ	0xFFB
  3680                           pclath	equ	0xFFA
  3681                           tblptru	equ	0xFF8
  3682                           tblptrh	equ	0xFF7
  3683                           tblptrl	equ	0xFF6
  3684                           tablat	equ	0xFF5
  3685                           prodh	equ	0xFF4
  3686                           prodl	equ	0xFF3
  3687                           intcon	equ	0xFF2
  3688                           intcon2	equ	0xFF1
  3689                           postinc0	equ	0xFEE
  3690                           fsr0h	equ	0xFEA
  3691                           fsr0l	equ	0xFE9
  3692                           wreg	equ	0xFE8
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           postinc2	equ	0xFDE
  3697                           postdec2	equ	0xFDD
  3698                           fsr2h	equ	0xFDA
  3699                           fsr2l	equ	0xFD9
  3700                           status	equ	0xFD8
  3701                           
  3702                           	psect	rparam
  3703  0000                     pclatu	equ	0xFFB
  3704                           pclath	equ	0xFFA
  3705                           tblptru	equ	0xFF8
  3706                           tblptrh	equ	0xFF7
  3707                           tblptrl	equ	0xFF6
  3708                           tablat	equ	0xFF5
  3709                           prodh	equ	0xFF4
  3710                           prodl	equ	0xFF3
  3711                           intcon	equ	0xFF2
  3712                           intcon2	equ	0xFF1
  3713                           postinc0	equ	0xFEE
  3714                           fsr0h	equ	0xFEA
  3715                           fsr0l	equ	0xFE9
  3716                           wreg	equ	0xFE8
  3717                           fsr1h	equ	0xFE2
  3718                           fsr1l	equ	0xFE1
  3719                           indf2	equ	0xFDF
  3720                           postinc2	equ	0xFDE
  3721                           postdec2	equ	0xFDD
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      45
    BANK0           160      0       0
    BANK1           256    200     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[7]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    S628ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 3
		 -> sw(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_tx_sendn
    _tx_sendn->___lwdiv
    _tx_sendn->_tx_send
    _tx_send->_ringbuf_push
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in COMRAM

    _ISR->i2_tx_send
    i2_tx_send->i2_ringbuf_push
    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0    7793
                                              0 BANK1    200   200      0
                                _ADC
                           _ADC_init
                           _Delay_ms
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                       _I2C_LCD_init
                           _I2C_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
                            _tx_send
                           _tx_sendn
 ---------------------------------------------------------------------------------
 (1) _tx_sendn                                             6     3      3    1195
                                             29 COMRAM     6     3      3
                                _ADC (ARG)
                            ___lwdiv
                            ___lwmod
                            _tx_send
 ---------------------------------------------------------------------------------
 (2) _tx_send                                              1     1      0     424
                                             28 COMRAM     1     1      0
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (3) _ringbuf_push                                         6     3      3     409
                                             22 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     257
                                             22 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     257
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _timer3_init                                          2     2      0      15
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          3     2      1     121
                                             22 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      30
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     0      5     318
                                             22 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_init                                         0     0      0    2155
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     956
                                             28 COMRAM     1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             3     1      2     243
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1153
                                             28 COMRAM     4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Command                                      2     2      0     956
                                             26 COMRAM     2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1123
                                             26 COMRAM     5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0      15
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            2     1      1     881
                                             24 COMRAM     2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_Send                                             1     1      0      30
                                             24 COMRAM     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_IdleCheck                                        2     2      0      15
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  5     3      2      15
                                             22 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 15    15      0    1080
                                              7 COMRAM    15    15      0
             _button_timer_interrupt
                     _interrupt_TXIF
                          i2_tx_send
 ---------------------------------------------------------------------------------
 (7) i2_tx_send                                            1     1      0     228
                                              6 COMRAM     1     1      0
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (8) i2_ringbuf_push                                       6     3      3     206
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _interrupt_TXIF                                       0     0      0     362
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          6     4      2     181
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          4     2      2     181
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _button_timer_interrupt                               5     2      3     467
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _ADC_init
   _Delay_ms
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_init
     _Delay_ms
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_init
   _UART_init
   _ringbuf_init
   _timer0_init
   _timer1_init
   _timer3_init
   _tx_send
     _ringbuf_push
   _tx_sendn
     _ADC (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _tx_send (ARG)
       _ringbuf_push

 _ISR (ROOT)
   _button_timer_interrupt
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
   i2_tx_send
     i2_ringbuf_push

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C8      C8       8       78.1%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      2D       1       47.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F5       6        0.0%
DATA                 0      0      F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 12 11:02:34 2015

             __size_of_I2C_Start 002A                               l83 1618  
                             l88 14CA                               l99 158E  
                             u30 1686                               _sw 0029  
         __end_of_interrupt_TXIF 1608                     __CFG_CP0$OFF 000000  
                            l207 1654                              l160 134C  
                            l183 167A                              _ADC 1570  
                            l198 177A                              l809 1524  
                            l940 1700                              l942 1710  
                            l894 1784                              l982 146C  
                            l799 149E                              l984 1474  
                            l994 1494                              l986 1478  
                            u195 172E                              u196 1730  
                            _ISR 0008                              u707 174A  
                            u717 1706                              u727 165A  
                            u737 143A                              u747 1588  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     _I2C_LCD_Puts 1402  
                           ?_ADC 0017                ??_I2C_LCD_Command 001B  
                           ?_ISR 0001                     _I2C_LCD_init 13AE  
                           l1010 151A                             l1002 14FA  
                           l1004 1502                             l1030 162C  
                           l1006 1506                             l1042 14CC  
                           l1222 143E                             l1216 1424  
                           l1224 1450                             l1152 135A  
                           l1162 13A4                             l1156 1378  
                           l1404 1130               __CFG_WPFP$PAGE_127 000000  
                           STR_1 0F09                             STR_2 0F01  
                           _main 1094         button_timer_interrupt@bt 0001  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                 __end_of_I2C_Send 1782  
         __CFG_DSWDTOSC$T1OSCREF 000000                 __end_of_I2C_Stop 17CA  
                           pclat 000FFA                 __end_of_I2C_init 17C0  
                           prodh 000FF4                             prodl 000FF3  
                           start 00BA                 __end_of_ADC_init 173E  
                  __CFG_IESO$OFF 000000                    _I2C_LCD_Clear 173E  
                          ??_ADC 0019                            ADC@ch 001B  
                  ADC_init@p_ref 0017                            ??_ISR 0008  
         __size_of_I2C_IdleCheck 0016                    __CFG_PLLDIV$2 000000  
                   _BAUDCON1bits 000F7E                  ?_interrupt_TXIF 0001  
                 i2_ringbuf_push 12D2                            ?_main 0001  
                __end_of___lwdiv 14A8                            i2l112 0F42  
                          i2l113 0F62                  __end_of___lwmod 152E  
                          i2l114 0F82                            i2l115 0FA2  
                          i2l169 1604                            i2l276 0080  
                          i2l952 1256                            i2l964 11AA  
                          _TMR1H 000FCF                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                 __CFG_FCMEN$OFF 000000               __size_of_UART_init 0028  
          ringbuf_push@asciicode 0019                __end_of_I2C_Start 168A  
                          tablat 000FF5            UART_init@interrupt_ON 0017  
                          status 000FD8                  __end_of_tx_send 176C  
               __end_of_Delay_ms 1722                   ?_I2C_LCD_Clear 0001  
                __initialization 15A6                     __end_of_main 1162  
            ringbuf_init@bufsize 001B           __end_ofi2_ringbuf_push 134A  
                         ??_main 0024                    __activetblptr 000001  
             __size_ofi2_tx_send 0016                           _BCL1IF 007D0B  
                  _I2C_IdleCheck 1782                _I2C_LCD_SetCursor 16D8  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _ANCON0 000F48                           _ANCON1 000F49  
             I2C_LCD_Command@ans 001C                           i2l1120 101C  
                         i2l1112 0FC4                           i2l1124 1048  
                         i2l1116 0FF0                           i2l1128 1072  
                         i2l1442 0062                           i2l1434 0054  
                 __CFG_WDTEN$OFF 000000               ?_I2C_LCD_SetCursor 001D  
                         _RCREG1 000FAF                           _SPBRG1 000FB0  
                         _SSP1IF 007CF3                   __CFG_WPCFG$OFF 000000  
                         _TXREG1 000FAE                   __CFG_WPDIS$OFF 000000  
            ??_I2C_LCD_SetCursor 001E                   __CFG_XINST$OFF 000000  
                   ?_ringbuf_pop 0001                     ?_ringbuf_num 0001  
              __end_of_UART_init 16B2                     ?_timer0_init 0001  
                   ?_timer1_init 0017                        ??___lwdiv 001B  
                      ??___lwmod 001B                     ?_timer3_init 0001  
                ?i2_ringbuf_push 0001                           clear_0 15AC  
                __CFG_CLKOEC$OFF 000000                           _tx_buf 0024  
                   __pdataCOMRAM 002C                        ?_I2C_Send 0001  
                      ?_I2C_Stop 0001                     __mediumconst 0000  
                      ?_I2C_init 0001        __end_of_I2C_LCD_SetCursor 16FE  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_ADC_init 0001  
                 ?_I2C_IdleCheck 0001                        ??_tx_send 001D  
               __end_of_tx_sendn 13AE             __CFG_LS48MHZ$SYS48X8 000000  
                     __accesstop 0060          __end_of__initialization 15CA  
                ??_I2C_LCD_Clear 001D                __end_ofi2_tx_send 17AE  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 1636  
               I2C_LCD_Command@c 001B                       ??_I2C_Send 0019  
                     ??_I2C_Stop 0019                       ??_I2C_init 0017  
                      ?_Delay_ms 0017          i2ringbuf_push@asciicode 0003  
                     ??_ADC_init 0017                 ??_interrupt_TXIF 0007  
           I2C_LCD_SetCursor@col 0020             I2C_LCD_SetCursor@row 001D  
                   I2C_Send@data 0019               __CFG_OSC$INTOSCPLL 000000  
                ??_I2C_IdleCheck 0017                       ??_Delay_ms 0019  
     __size_of_I2C_LCD_SetCursor 0026           I2C_LCD_SetCursor@F9802 002C  
                   tx_sendn@temp 0022                          _SPBRGH1 000F7F  
                        i2u69_40 0078                          i2u69_46 007A  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
           timer1_init@prescaler 0019                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                 i2ringbuf_push@rb 0001  
                      _I2C_Start 1660                          __Hparam 0000  
                        __Lparam 0000          __end_of_I2C_LCD_Command 1660  
                  ?_ringbuf_init 0017                    ?_ringbuf_push 0017  
                        ___lwdiv 1456                          ___lwmod 14EC  
                   __psmallconst 0F00             __size_of_ringbuf_pop 007A  
           __size_of_ringbuf_num 007E                  __CFG_STVREN$OFF 000000  
                        __pcinit 15A6                        ?_tx_sendn 001E  
                        __ramtop 0F00             __size_of_timer0_init 002E  
           __size_of_timer1_init 0044                          __ptext0 1094  
                        __ptext1 134A                          __ptext2 1756  
                        __ptext3 125A                          __ptext4 14EC  
                        __ptext5 1456                          __ptext6 16B2  
                        __ptext7 14A8                          __ptext8 1608  
                        __ptext9 152E             __size_of_timer3_init 0026  
                  I2C_LCD_Puts@s 001B                        _T0CONbits 000FD5  
                   __size_of_ADC 0036                     __size_of_ISR 00B2  
                      _T1CONbits 000FCD                        _T3CONbits 000F79  
                        _tx_send 1756             end_of_initialization 15CA  
                     ?_I2C_Start 0019             timer3_init@prescaler 0018  
               ??i2_ringbuf_push 0004                   tx_sendn@digits 0020  
                 ??_ringbuf_init 001C                   ??_ringbuf_push 001A  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                       ??_tx_sendn 0021  
                      _PORTAbits 000F80                        _UART_init 168A  
               __CFG_DSBOREN$OFF 000000                 __CFG_CPUDIV$OSC1 000000  
              __size_of_I2C_Send 0016                __size_of_I2C_Stop 000A  
              __size_of_I2C_init 0012                __size_of_ADC_init 001C  
__size_of_button_timer_interrupt 0182          timer1_init@clock_select 0017  
               __CFG_IOL1WAY$OFF 000000              __CFG_MSSP7B_EN$MSK7 000000  
               ?_I2C_LCD_Command 0001                   ringbuf_init@rb 0017  
                      i2_tx_send 1798                   ringbuf_pop@ret 0006  
                 ringbuf_push@rb 0017                    __pidataCOMRAM 17CA  
                     ?_UART_init 0001                 __CFG_DSWDTEN$OFF 000000  
            start_initialization 15A6                      __end_of_ADC 15A6  
                    __end_of_ISR 00BA                    ?_I2C_LCD_Puts 001B  
                  ?_I2C_LCD_init 0001                __size_of_Delay_ms 0024  
                    ??_I2C_Start 001A            __end_of_I2C_LCD_Clear 1756  
                     ?i2_tx_send 0001                __CFG_ADCSEL$BIT12 000000  
         _button_timer_interrupt 0F12                      __pbssCOMRAM 0024  
                  __pcstackBANK1 0100                   ??_I2C_LCD_Puts 001D  
                 ??_I2C_LCD_init 001E              __end_of__stringdata 0F10  
           __end_of_ringbuf_init 1570             __end_of_ringbuf_push 12D2  
               tx_send@asciicode 001D                         ISR@ascii 0016  
               ___lwdiv@dividend 0017                        __pintcode 0008  
                       ?___lwdiv 0017                         ?___lwmod 0017  
                I2C_LCD_Puts@ans 001E                      ??_UART_init 0017  
                    __smallconst 0F00                __size_of_tx_sendn 0064  
                    I2C_Start@rw 0019                         _I2C_Send 176C  
                       _I2C_Stop 17C0             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_init 17AE                         _ADC_init 1722  
          __end_of_I2C_IdleCheck 1798                 ___lwdiv@quotient 001B  
                       ?_tx_send 0001         ringbuf_init@internal_buf 0019  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                  ??_ringbuf_pop 0003                    ??_ringbuf_num 0003  
               __CFG_WDTPS$32768 000000                    tx_sendn@value 001E  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                  ??_timer0_init 0017                    ??_timer1_init 0018  
                    ??i2_tx_send 0007                    ??_timer3_init 0017  
                       _SSP1STAT 000FC7                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1                      __stringdata 0F01  
               __CFG_SOSCSEL$LOW 000000   button_timer_interrupt@sw_value 0003  
        __size_of_interrupt_TXIF 0030                         _Delay_ms 16FE  
                      main@txbuf 0100                    ringbuf_pop@rb 0001  
                  ringbuf_num@rb 0001                    I2C_Start@adrs 001A  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0F00  
           __end_of_I2C_LCD_Puts 1456             __end_of_I2C_LCD_init 1402  
              I2C_IdleCheck@mask 0018                 __size_of___lwdiv 0052  
               __size_of___lwmod 0042              __end_of_ringbuf_pop 125A  
            __end_of_ringbuf_num 11E0              __end_of_timer0_init 1636  
          __size_of_ringbuf_init 0042              __end_of_timer1_init 14EC  
            __end_of_timer3_init 16D8            __size_of_ringbuf_push 0078  
                ___lwdiv@divisor 0019                  ___lwdiv@counter 001D  
           timer0_init@prescaler 0018                         __ptext10 168A  
                       __ptext11 17AE                         __ptext20 176C  
                       __ptext12 13AE                         __ptext21 1782  
                       __ptext13 173E                         __ptext30 0F12  
                       __ptext22 1722                         __ptext14 16FE  
                       __ptext23 1570                         __ptext15 16D8  
                       __ptext16 1636                         __ptext25 1798  
                       __ptext17 1402                         __ptext26 12D2  
                       __ptext18 17C0                         __ptext27 15D8  
                       __ptext19 1660                         __ptext28 11E0  
                       __ptext29 1162                     _SSP1CON2bits 000FC5  
               __size_of_tx_send 0016                    __size_of_main 00CE  
        ?_button_timer_interrupt 0001                     _ringbuf_init 152E  
                   _ringbuf_push 125A                         _tx_sendn 134A  
        __size_ofi2_ringbuf_push 0078         __size_of_I2C_LCD_Command 002A  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
   I2C_LCD_SetCursor@row_offsets 001E                       Delay_ms@ms 0017  
                       intlevel2 0000                 ___lwmod@dividend 0017  
                      tx_sendn@i 0021                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 1094  
                    _ringbuf_pop 11E0                      _ringbuf_num 1162  
                    _timer0_init 1608                      _timer1_init 14A8  
                    _timer3_init 16B2                   _interrupt_TXIF 15D8  
                ___lwmod@divisor 0019                  ___lwmod@counter 001B  
         __size_of_I2C_LCD_Clear 0018            __size_of_I2C_LCD_Puts 0054  
          __size_of_I2C_LCD_init 0054               i2tx_send@asciicode 0007  
