

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 11 16:17:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  001714                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for I2C_LCD_SetCursor@F9792
    47  001714  00                 	db	0
    48  001715  40                 	db	64
    49  0000                     _ANCON0	set	3912
    50  0000                     _ANCON1	set	3913
    51  0000                     _BAUDCON1bits	set	3966
    52  0000                     _INTCON2bits	set	4081
    53  0000                     _INTCONbits	set	4082
    54  0000                     _IPR1bits	set	3999
    55  0000                     _IPR2bits	set	4002
    56  0000                     _OSCCONbits	set	4051
    57  0000                     _OSCTUNEbits	set	3995
    58  0000                     _PIE1bits	set	3997
    59  0000                     _PIE2bits	set	4000
    60  0000                     _PIR1bits	set	3998
    61  0000                     _PIR2bits	set	4001
    62  0000                     _PORTAbits	set	3968
    63  0000                     _RCREG1	set	4015
    64  0000                     _RCSTA1bits	set	4012
    65  0000                     _SPBRG1	set	4016
    66  0000                     _SPBRGH1	set	3967
    67  0000                     _SSP1ADD	set	4040
    68  0000                     _SSP1BUF	set	4041
    69  0000                     _SSP1CON1	set	4038
    70  0000                     _SSP1CON2	set	4037
    71  0000                     _SSP1CON2bits	set	4037
    72  0000                     _SSP1STAT	set	4039
    73  0000                     _T0CONbits	set	4053
    74  0000                     _T1CONbits	set	4045
    75  0000                     _T3CONbits	set	3961
    76  0000                     _TMR1H	set	4047
    77  0000                     _TRISA	set	3986
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISC	set	3988
    80  0000                     _TXREG1	set	4014
    81  0000                     _TXSTA1bits	set	4013
    82  0000                     _BCL1IF	set	32011
    83  0000                     _LATB0	set	31824
    84  0000                     _SSP1IF	set	31987
    85                           
    86                           	psect	smallconst
    87  000F00                     __psmallconst:
    88                           	opt stack 0
    89  000F00  00                 	db	0
    90  000F01                     __stringdata:
    91                           	opt stack 0
    92  000F01                     STR_1:
    93  000F01  54                 	db	84	;'T'
    94  000F02  49                 	db	73	;'I'
    95  000F03  4D                 	db	77	;'M'
    96  000F04  45                 	db	69	;'E'
    97  000F05  52                 	db	82	;'R'
    98  000F06  31                 	db	49	;'1'
    99  000F07  0A                 	db	10
   100  000F08  00                 	db	0
   101  000F09                     STR_3:
   102  000F09  53                 	db	83	;'S'
   103  000F0A  74                 	db	116	;'t'
   104  000F0B  61                 	db	97	;'a'
   105  000F0C  74                 	db	116	;'t'
   106  000F0D  69                 	db	105	;'i'
   107  000F0E  6F                 	db	111	;'o'
   108  000F0F  6E                 	db	110	;'n'
   109  000F10  00                 	db	0
   110  000F11                     STR_2:
   111  000F11  43                 	db	67	;'C'
   112  000F12  68                 	db	104	;'h'
   113  000F13  61                 	db	97	;'a'
   114  000F14  72                 	db	114	;'r'
   115  000F15  67                 	db	103	;'g'
   116  000F16  65                 	db	101	;'e'
   117  000F17  00                 	db	0
   118  000F18                     STR_4:
   119  000F18  48                 	db	72	;'H'
   120  000F19  65                 	db	101	;'e'
   121  000F1A  6C                 	db	108	;'l'
   122  000F1B  6C                 	db	108	;'l'
   123  000F1C  6F                 	db	111	;'o'
   124  000F1D  00                 	db	0
   125  000F1E                     __end_of__stringdata:
   126                           	opt stack 0
   127                           
   128                           ; #config settings
   129  000F1E  00                 	db	0	; dummy byte at the end
   130  0000                     
   131                           	psect	cinit
   132  001522                     __pcinit:
   133                           	opt stack 0
   134  001522                     start_initialization:
   135                           	opt stack 0
   136  001522                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Clear objects allocated to COMRAM (8 bytes)
   140  001522  EE00  F026         	lfsr	0,__pbssCOMRAM
   141  001526  0E08               	movlw	8
   142  001528                     clear_0:
   143  001528  6AEE               	clrf	postinc0,c
   144  00152A  06E8               	decf	wreg,f,c
   145  00152C  E1FD               	bnz	clear_0
   146                           
   147                           ; Initialize objects allocated to COMRAM (2 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  00152E  0E14               	movlw	low __pidataCOMRAM
   150  001530  6EF6               	movwf	tblptrl,c
   151  001532  0E17               	movlw	high __pidataCOMRAM
   152  001534  6EF7               	movwf	tblptrh,c
   153  001536  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  001538  6EF8               	movwf	tblptru,c
   155  00153A  0009               	tblrd		*+	;fetch initializer
   156  00153C  CFF5 F02E          	movff	tablat,__pdataCOMRAM
   157  001540  0009               	tblrd		*+	;fetch initializer
   158  001542  CFF5 F02F          	movff	tablat,__pdataCOMRAM+1
   159  001546                     end_of_initialization:
   160                           	opt stack 0
   161  001546                     __end_of__initialization:
   162                           	opt stack 0
   163  001546  0E00               	movlw	low (__Lsmallconst shr (0+16))
   164  001548  6EF8               	movwf	tblptru,c
   165  00154A  0E0F               	movlw	high __Lsmallconst
   166  00154C  6EF7               	movwf	tblptrh,c
   167  00154E  0100               	movlb	0
   168  001550  EF51  F008         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000026                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000026                     _tx_buf:
   180                           	opt stack 0
   181  000026                     	ds	5
   182  00002B                     _sw:
   183                           	opt stack 0
   184  00002B                     	ds	3
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	dataCOMRAM
   193  00002E                     __pdataCOMRAM:
   194                           	opt stack 0
   195  00002E                     I2C_LCD_SetCursor@F9792:
   196                           	opt stack 0
   197  00002E                     	ds	2
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	cstackBANK1
   206  000100                     __pcstackBANK1:
   207                           	opt stack 0
   208  000100                     main@txbuf:
   209                           	opt stack 0
   210                           
   211                           ; 200 bytes @ 0x0
   212  000100                     	ds	200
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	cstackCOMRAM
   221  000001                     __pcstackCOMRAM:
   222                           	opt stack 0
   223  000001                     button_timer_interrupt@bt:
   224                           	opt stack 0
   225  000001                     ringbuf_pop@rb:
   226                           	opt stack 0
   227  000001                     ringbuf_num@rb:
   228                           	opt stack 0
   229  000001                     i2ringbuf_push@rb:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x0
   233  000001                     	ds	2
   234  000003                     ??_ringbuf_pop:
   235  000003                     ??_ringbuf_num:
   236  000003                     button_timer_interrupt@sw_value:
   237                           	opt stack 0
   238  000003                     i2ringbuf_push@asciicode:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x2
   242  000003                     	ds	1
   243  000004                     ??_button_timer_interrupt:
   244  000004                     ??i2_ringbuf_push:
   245                           
   246                           ; 0 bytes @ 0x3
   247  000004                     	ds	2
   248  000006                     ringbuf_pop@ret:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x5
   252  000006                     	ds	1
   253  000007                     tx_send@asciicode:
   254                           	opt stack 0
   255  000007                     i2tx_sends@asciicode:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x6
   259  000007                     	ds	2
   260  000009                     ??i2_tx_sends:
   261                           
   262                           ; 0 bytes @ 0x8
   263  000009                     	ds	2
   264  00000B                     i2tx_sends@i:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0xA
   268  00000B                     	ds	1
   269  00000C                     ??_ISR:
   270                           
   271                           ; 0 bytes @ 0xB
   272  00000C                     	ds	14
   273  00001A                     ISR@ascii:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x19
   277  00001A                     	ds	1
   278  00001B                     ??_timer0_init:
   279  00001B                     ??_timer3_init:
   280  00001B                     ??_I2C_IdleCheck:
   281  00001B                     timer1_init@clock_select:
   282                           	opt stack 0
   283  00001B                     UART_init@interrupt_ON:
   284                           	opt stack 0
   285  00001B                     Delay_ms@ms:
   286                           	opt stack 0
   287  00001B                     ringbuf_init@rb:
   288                           	opt stack 0
   289  00001B                     ringbuf_push@rb:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x1A
   293  00001B                     	ds	1
   294  00001C                     ??_timer1_init:
   295  00001C                     timer0_init@prescaler:
   296                           	opt stack 0
   297  00001C                     timer3_init@prescaler:
   298                           	opt stack 0
   299  00001C                     I2C_IdleCheck@mask:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x1B
   303  00001C                     	ds	1
   304  00001D                     ??_Delay_ms:
   305  00001D                     timer1_init@prescaler:
   306                           	opt stack 0
   307  00001D                     ringbuf_push@asciicode:
   308                           	opt stack 0
   309  00001D                     I2C_Start@rw:
   310                           	opt stack 0
   311  00001D                     I2C_Send@data:
   312                           	opt stack 0
   313  00001D                     ringbuf_init@internal_buf:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x1C
   317  00001D                     	ds	1
   318  00001E                     ??_ringbuf_push:
   319  00001E                     I2C_Start@adrs:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x1D
   323  00001E                     	ds	1
   324  00001F                     ringbuf_init@bufsize:
   325                           	opt stack 0
   326  00001F                     I2C_LCD_Command@c:
   327                           	opt stack 0
   328  00001F                     I2C_LCD_Puts@s:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x1E
   332  00001F                     	ds	1
   333  000020                     I2C_LCD_Command@ans:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x1F
   337  000020                     	ds	1
   338  000021                     ??_I2C_LCD_Clear:
   339  000021                     ??_I2C_LCD_Puts:
   340  000021                     I2C_LCD_SetCursor@row:
   341                           	opt stack 0
   342  000021                     tx_sends@asciicode:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x20
   346  000021                     	ds	1
   347  000022                     I2C_LCD_SetCursor@row_offsets:
   348                           	opt stack 0
   349  000022                     I2C_LCD_Puts@ans:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x21
   353  000022                     	ds	1
   354  000023                     ??_tx_sends:
   355                           
   356                           ; 0 bytes @ 0x22
   357  000023                     	ds	1
   358  000024                     I2C_LCD_SetCursor@col:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x23
   362  000024                     	ds	1
   363  000025                     tx_sends@i:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x24
   367  000025                     	ds	1
   368  000026                     tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           
   375                           ; 0 bytes @ 0x25
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 80 in file "PIC18F27J53-ADC01.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  txbuf         200    0[BANK1 ] unsigned char [200]
   386 ;; Return value:  Size  Location     Type
   387 ;;                  2  254[COMRAM] int 
   388 ;; Registers used:
   389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   396 ;;      Locals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   398 ;;      Totals:         0       0     200       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   399 ;;Total ram usage:      200 bytes
   400 ;; Hardware stack levels required when called:    8
   401 ;; This function calls:
   402 ;;		_I2C_LCD_Clear
   403 ;;		_I2C_LCD_Puts
   404 ;;		_I2C_LCD_SetCursor
   405 ;;		_I2C_LCD_init
   406 ;;		_I2C_init
   407 ;;		_UART_init
   408 ;;		_ringbuf_init
   409 ;;		_timer0_init
   410 ;;		_timer1_init
   411 ;;		_timer3_init
   412 ;;		_tx_sends
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text0
   419  0010A2                     __ptext0:
   420                           	opt stack 0
   421  0010A2                     _main:
   422                           	opt stack 22
   423                           
   424                           ;PIC18F27J53-ADC01.c: 81: OSCCONbits.IRCF = 7;
   425                           
   426                           ;incstack = 0
   427  0010A2  88D3               	bsf	4051,4,c	;volatile
   428  0010A4  8AD3               	bsf	4051,5,c	;volatile
   429  0010A6  8CD3               	bsf	4051,6,c	;volatile
   430                           
   431                           ;PIC18F27J53-ADC01.c: 82: OSCTUNEbits.PLLEN = 1;
   432  0010A8  8C9B               	bsf	3995,6,c	;volatile
   433                           
   434                           ;PIC18F27J53-ADC01.c: 83: OSCCONbits.SCS = 0;
   435  0010AA  0EFC               	movlw	-4
   436  0010AC  16D3               	andwf	4051,f,c	;volatile
   437                           
   438                           ;PIC18F27J53-ADC01.c: 84: TRISA = 0b01000000;
   439  0010AE  0E40               	movlw	64
   440  0010B0  6E92               	movwf	3986,c	;volatile
   441                           
   442                           ;PIC18F27J53-ADC01.c: 85: TRISB = 0b00110000;
   443  0010B2  0E30               	movlw	48
   444  0010B4  6E93               	movwf	3987,c	;volatile
   445                           
   446                           ;PIC18F27J53-ADC01.c: 86: TRISC = 0b10000010;
   447  0010B6  0E82               	movlw	130
   448  0010B8  6E94               	movwf	3988,c	;volatile
   449                           
   450                           ;PIC18F27J53-ADC01.c: 87: ANCON0 = 0b11111111;
   451  0010BA  010F               	movlb	15	; () banked
   452  0010BC  6948               	setf	72,b	;volatile
   453                           
   454                           ;PIC18F27J53-ADC01.c: 88: ANCON1 = 0b00011111;
   455  0010BE  0E1F               	movlw	31
   456  0010C0  010F               	movlb	15	; () banked
   457  0010C2  6F49               	movwf	73,b	;volatile
   458                           
   459                           ; BSR set to: 15
   460                           ;PIC18F27J53-ADC01.c: 90: timer0_init(8);
   461  0010C4  0E08               	movlw	8
   462  0010C6  ECC2  F00A         	call	_timer0_init
   463                           
   464                           ;PIC18F27J53-ADC01.c: 91: timer1_init(0, 2);
   465  0010CA  0E02               	movlw	2
   466  0010CC  6E1B               	movwf	timer1_init@clock_select,c
   467  0010CE  0E00               	movlw	0
   468  0010D0  EC4E  F00A         	call	_timer1_init
   469                           
   470                           ;PIC18F27J53-ADC01.c: 92: timer3_init(2);
   471  0010D4  0E02               	movlw	2
   472  0010D6  EC17  F00B         	call	_timer3_init
   473                           
   474                           ;PIC18F27J53-ADC01.c: 93: I2C_init();
   475  0010DA  EC7C  F00B         	call	_I2C_init	;wreg free
   476                           
   477                           ;PIC18F27J53-ADC01.c: 94: I2C_LCD_init();
   478  0010DE  ECFA  F009         	call	_I2C_LCD_init	;wreg free
   479                           
   480                           ;PIC18F27J53-ADC01.c: 96: UART_init(1);
   481  0010E2  0E01               	movlw	1
   482  0010E4  EC03  F00B         	call	_UART_init
   483                           
   484                           ;PIC18F27J53-ADC01.c: 97: uint8_t txbuf[200];
   485                           ;PIC18F27J53-ADC01.c: 98: ringbuf_init(&tx_buf, txbuf, sizeof (txbuf));
   486  0010E8  0E00               	movlw	high _tx_buf
   487  0010EA  6E1C               	movwf	ringbuf_init@rb+1,c
   488  0010EC  0E26               	movlw	low _tx_buf
   489  0010EE  6E1B               	movwf	ringbuf_init@rb,c
   490  0010F0  0101               	movlb	1	; () banked
   491  0010F2  0E01               	movlw	high main@txbuf
   492  0010F4  6E1E               	movwf	ringbuf_init@internal_buf+1,c
   493  0010F6  0101               	movlb	1	; () banked
   494  0010F8  0E00               	movlw	low main@txbuf
   495  0010FA  6E1D               	movwf	ringbuf_init@internal_buf,c
   496  0010FC  0EC8               	movlw	200
   497  0010FE  6E1F               	movwf	ringbuf_init@bufsize,c
   498  001100  EC70  F00A         	call	_ringbuf_init	;wreg free
   499                           
   500                           ;PIC18F27J53-ADC01.c: 100: INTCONbits.GIE = 1;
   501  001104  8EF2               	bsf	intcon,7,c	;volatile
   502                           
   503                           ;PIC18F27J53-ADC01.c: 102: I2C_LCD_Clear();
   504  001106  EC4F  F00B         	call	_I2C_LCD_Clear	;wreg free
   505                           
   506                           ;PIC18F27J53-ADC01.c: 103: I2C_LCD_SetCursor(0, 0);
   507  00110A  0E00               	movlw	0
   508  00110C  6E21               	movwf	I2C_LCD_SetCursor@row,c
   509  00110E  0E00               	movlw	0
   510  001110  EC2A  F00B         	call	_I2C_LCD_SetCursor
   511                           
   512                           ;PIC18F27J53-ADC01.c: 104: I2C_LCD_Puts("Charge");
   513  001114  0E0F               	movlw	high STR_2
   514  001116  6E20               	movwf	I2C_LCD_Puts@s+1,c
   515  001118  0E11               	movlw	low STR_2
   516  00111A  6E1F               	movwf	I2C_LCD_Puts@s,c
   517  00111C  EC24  F00A         	call	_I2C_LCD_Puts	;wreg free
   518                           
   519                           ;PIC18F27J53-ADC01.c: 105: I2C_LCD_SetCursor(0, 1);
   520  001120  0E01               	movlw	1
   521  001122  6E21               	movwf	I2C_LCD_SetCursor@row,c
   522  001124  0E00               	movlw	0
   523  001126  EC2A  F00B         	call	_I2C_LCD_SetCursor
   524                           
   525                           ;PIC18F27J53-ADC01.c: 106: I2C_LCD_Puts("Station");
   526  00112A  0E0F               	movlw	high STR_3
   527  00112C  6E20               	movwf	I2C_LCD_Puts@s+1,c
   528  00112E  0E09               	movlw	low STR_3
   529  001130  6E1F               	movwf	I2C_LCD_Puts@s,c
   530  001132  EC24  F00A         	call	_I2C_LCD_Puts	;wreg free
   531  001136                     l1309:
   532                           
   533                           ;PIC18F27J53-ADC01.c: 109: if (sw.flag.press) {
   534  001136  A02D               	btfss	_sw+2,0,c
   535  001138  D7FE               	goto	l1309
   536                           
   537                           ;PIC18F27J53-ADC01.c: 110: sw.flag.press = 0;
   538  00113A  902D               	bcf	_sw+2,0,c
   539                           
   540                           ;PIC18F27J53-ADC01.c: 111: LATB0 = ~LATB0;
   541  00113C  708A               	btg	3978,0,c	;volatile
   542                           
   543                           ;PIC18F27J53-ADC01.c: 112: tx_sends("Hello");
   544  00113E  0E0F               	movlw	high STR_4
   545  001140  6E22               	movwf	tx_sends@asciicode+1,c
   546  001142  0E18               	movlw	low STR_4
   547  001144  6E21               	movwf	tx_sends@asciicode,c
   548  001146  EC9A  F009         	call	_tx_sends	;wreg free
   549  00114A  D7F5               	goto	l1309
   550  00114C                     __end_of_main:
   551                           	opt stack 0
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           intcon	equ	0xFF2
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           
   560 ;; *************** function _tx_sends *****************
   561 ;; Defined at:
   562 ;;		line 45 in file "../My_header\My_UART_18F.h"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  asciicode       2   32[COMRAM] PTR unsigned char 
   565 ;;		 -> STR_4(6), STR_1(8), 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  i               1   36[COMRAM] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;		None               void
   570 ;; Registers used:
   571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;Total ram usage:        5 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    4
   584 ;; This function calls:
   585 ;;		_ringbuf_push
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text1
   592  001334                     __ptext1:
   593                           	opt stack 0
   594  001334                     _tx_sends:
   595                           	opt stack 25
   596                           
   597                           ;My_header\My_UART_18F.h: 46: uint8_t i;
   598                           ;My_header\My_UART_18F.h: 47: for (i = 0; asciicode[i]; i++) {
   599                           
   600                           ;incstack = 0
   601  001334  0E00               	movlw	0
   602  001336  6E25               	movwf	tx_sends@i,c
   603  001338  D018               	goto	l1069
   604  00133A                     l1065:
   605                           
   606                           ;My_header\My_UART_18F.h: 48: ringbuf_push(&tx_buf, asciicode[i]);
   607  00133A  0E00               	movlw	high _tx_buf
   608  00133C  6E1C               	movwf	ringbuf_push@rb+1,c
   609  00133E  0E26               	movlw	low _tx_buf
   610  001340  6E1B               	movwf	ringbuf_push@rb,c
   611  001342  5025               	movf	tx_sends@i,w,c
   612  001344  0D01               	mullw	1
   613  001346  C021  F023         	movff	tx_sends@asciicode,??_tx_sends
   614  00134A  C022  F024         	movff	tx_sends@asciicode+1,??_tx_sends+1
   615  00134E  50F3               	movf	prodl,w,c
   616  001350  2623               	addwf	??_tx_sends,f,c
   617  001352  50F4               	movf	prodh,w,c
   618  001354  2224               	addwfc	??_tx_sends+1,f,c
   619  001356  C023  FFF6         	movff	??_tx_sends,tblptrl
   620  00135A  C024  FFF7         	movff	??_tx_sends+1,tblptrh
   621  00135E                     	if	0	;tblptru may be non-zero
   622  00135E                     	endif
   623  00135E                     	if	0	;tblptru may be non-zero
   624  00135E                     	endif
   625  00135E  0008               	tblrd		*
   626  001360  CFF5 F01D          	movff	tablat,ringbuf_push@asciicode
   627  001364  EC22  F009         	call	_ringbuf_push	;wreg free
   628  001368  2A25               	incf	tx_sends@i,f,c
   629  00136A                     l1069:
   630  00136A  5025               	movf	tx_sends@i,w,c
   631  00136C  0D01               	mullw	1
   632  00136E  C021  F023         	movff	tx_sends@asciicode,??_tx_sends
   633  001372  C022  F024         	movff	tx_sends@asciicode+1,??_tx_sends+1
   634  001376  50F3               	movf	prodl,w,c
   635  001378  2623               	addwf	??_tx_sends,f,c
   636  00137A  50F4               	movf	prodh,w,c
   637  00137C  2224               	addwfc	??_tx_sends+1,f,c
   638  00137E  C023  FFF6         	movff	??_tx_sends,tblptrl
   639  001382  C024  FFF7         	movff	??_tx_sends+1,tblptrh
   640  001386                     	if	0	;tblptru may be non-zero
   641  001386                     	endif
   642  001386                     	if	0	;tblptru may be non-zero
   643  001386                     	endif
   644  001386  0008               	tblrd		*
   645  001388  50F5               	movf	tablat,w,c
   646  00138A  0900               	iorlw	0
   647  00138C  A4D8               	btfss	status,2,c
   648  00138E  D7D5               	goto	l1065
   649                           
   650                           ;My_header\My_UART_18F.h: 49: }
   651                           ;My_header\My_UART_18F.h: 50: PIE1bits.TX1IE = 1;
   652  001390  889D               	bsf	3997,4,c	;volatile
   653  001392  0012               	return	
   654  001394                     __end_of_tx_sends:
   655                           	opt stack 0
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           prodh	equ	0xFF4
   661                           prodl	equ	0xFF3
   662                           intcon	equ	0xFF2
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           status	equ	0xFD8
   666                           
   667 ;; *************** function _ringbuf_push *****************
   668 ;; Defined at:
   669 ;;		line 29 in file "../My_header\My_ringbuf.h"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  rb              2   26[COMRAM] PTR struct ringbuf
   672 ;;		 -> tx_buf(5), 
   673 ;;  asciicode       1   28[COMRAM] unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;		None               void
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   687 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   688 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;Total ram usage:        6 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    3
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_tx_sends
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text2
   700  001244                     __ptext2:
   701                           	opt stack 0
   702  001244                     _ringbuf_push:
   703                           	opt stack 25
   704                           
   705                           ;My_header\My_ringbuf.h: 30: rb->buf[rb->head] = asciicode;
   706                           
   707                           ;incstack = 0
   708  001244  EE20 F003          	lfsr	2,3
   709  001248  501B               	movf	ringbuf_push@rb,w,c
   710  00124A  26D9               	addwf	fsr2l,f,c
   711  00124C  501C               	movf	ringbuf_push@rb+1,w,c
   712  00124E  22DA               	addwfc	fsr2h,f,c
   713  001250  50DF               	movf	indf2,w,c
   714  001252  6E1E               	movwf	??_ringbuf_push& (0+255),c
   715  001254  501E               	movf	??_ringbuf_push,w,c
   716  001256  0D01               	mullw	1
   717  001258  C01B  FFD9         	movff	ringbuf_push@rb,fsr2l
   718  00125C  C01C  FFDA         	movff	ringbuf_push@rb+1,fsr2h
   719  001260  CFDE F01F          	movff	postinc2,??_ringbuf_push+1
   720  001264  CFDD F020          	movff	postdec2,??_ringbuf_push+2
   721  001268  50F3               	movf	prodl,w,c
   722  00126A  241F               	addwf	??_ringbuf_push+1,w,c
   723  00126C  6ED9               	movwf	fsr2l,c
   724  00126E  50F4               	movf	prodh,w,c
   725  001270  2020               	addwfc	??_ringbuf_push+2,w,c
   726  001272  6EDA               	movwf	fsr2h,c
   727  001274  C01D  FFDF         	movff	ringbuf_push@asciicode,indf2
   728                           
   729                           ;My_header\My_ringbuf.h: 31: rb->head++;
   730  001278  EE20 F003          	lfsr	2,3
   731  00127C  501B               	movf	ringbuf_push@rb,w,c
   732  00127E  26D9               	addwf	fsr2l,f,c
   733  001280  501C               	movf	ringbuf_push@rb+1,w,c
   734  001282  22DA               	addwfc	fsr2h,f,c
   735  001284  2ADF               	incf	indf2,f,c
   736                           
   737                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->size) {
   738  001286  EE20 F003          	lfsr	2,3
   739  00128A  501B               	movf	ringbuf_push@rb,w,c
   740  00128C  26D9               	addwf	fsr2l,f,c
   741  00128E  501C               	movf	ringbuf_push@rb+1,w,c
   742  001290  22DA               	addwfc	fsr2h,f,c
   743  001292  50DF               	movf	indf2,w,c
   744  001294  6E1E               	movwf	??_ringbuf_push& (0+255),c
   745  001296  EE20 F002          	lfsr	2,2
   746  00129A  501B               	movf	ringbuf_push@rb,w,c
   747  00129C  26D9               	addwf	fsr2l,f,c
   748  00129E  501C               	movf	ringbuf_push@rb+1,w,c
   749  0012A0  22DA               	addwfc	fsr2h,f,c
   750  0012A2  50DF               	movf	indf2,w,c
   751  0012A4  5C1E               	subwf	??_ringbuf_push,w,c
   752  0012A6  A0D8               	btfss	status,0,c
   753  0012A8  0012               	return	
   754                           
   755                           ;My_header\My_ringbuf.h: 33: rb->head = 0;
   756  0012AA  EE20 F003          	lfsr	2,3
   757  0012AE  501B               	movf	ringbuf_push@rb,w,c
   758  0012B0  26D9               	addwf	fsr2l,f,c
   759  0012B2  501C               	movf	ringbuf_push@rb+1,w,c
   760  0012B4  22DA               	addwfc	fsr2h,f,c
   761  0012B6  0E00               	movlw	0
   762  0012B8  6EDF               	movwf	indf2,c
   763  0012BA  0012               	return	
   764  0012BC                     __end_of_ringbuf_push:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           intcon	equ	0xFF2
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           indf2	equ	0xFDF
   776                           postinc2	equ	0xFDE
   777                           postdec2	equ	0xFDD
   778                           fsr2h	equ	0xFDA
   779                           fsr2l	equ	0xFD9
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function _timer3_init *****************
   783 ;; Defined at:
   784 ;;		line 49 in file "../My_header\My_hedaer_18F.h"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  prescaler       1    wreg     unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  prescaler       1   27[COMRAM] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;Total ram usage:        2 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    3
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text3
   813  00162E                     __ptext3:
   814                           	opt stack 0
   815  00162E                     _timer3_init:
   816                           	opt stack 26
   817                           
   818                           ;incstack = 0
   819                           ;timer3_init@prescaler stored from wreg
   820  00162E  6E1C               	movwf	timer3_init@prescaler,c
   821                           
   822                           ;My_header\My_hedaer_18F.h: 50: T3CONbits.TMR3CS = 0;
   823  001630  0E3F               	movlw	-193
   824  001632  1679               	andwf	3961,f,c	;volatile
   825                           
   826                           ;My_header\My_hedaer_18F.h: 51: T3CONbits.T3OSCEN = 1;
   827  001634  8679               	bsf	3961,3,c	;volatile
   828                           
   829                           ;My_header\My_hedaer_18F.h: 52: T3CONbits.T3CKPS = prescaler;
   830  001636  C01C  F01B         	movff	timer3_init@prescaler,??_timer3_init
   831  00163A  3A1B               	swapf	??_timer3_init,f,c
   832  00163C  5079               	movf	3961,w,c	;volatile
   833  00163E  181B               	xorwf	??_timer3_init,w,c
   834  001640  0BCF               	andlw	-49
   835  001642  181B               	xorwf	??_timer3_init,w,c
   836  001644  6E79               	movwf	3961,c	;volatile
   837                           
   838                           ;My_header\My_hedaer_18F.h: 53: T3CONbits.RD163 = 0;
   839  001646  9E79               	bcf	3961,7,c	;volatile
   840                           
   841                           ;My_header\My_hedaer_18F.h: 54: T3CONbits.TMR3ON = 1;
   842  001648  8079               	bsf	3961,0,c	;volatile
   843                           
   844                           ;My_header\My_hedaer_18F.h: 55: IPR2bits.TMR3IP = 0;
   845  00164A  92A2               	bcf	4002,1,c	;volatile
   846                           
   847                           ;My_header\My_hedaer_18F.h: 56: PIR2bits.TMR3IF = 0;
   848  00164C  92A1               	bcf	4001,1,c	;volatile
   849                           
   850                           ;My_header\My_hedaer_18F.h: 57: PIE2bits.TMR3IE = 1;
   851  00164E  82A0               	bsf	4000,1,c	;volatile
   852                           
   853                           ;My_header\My_hedaer_18F.h: 58: INTCONbits.PEIE = 1;
   854  001650  8CF2               	bsf	intcon,6,c	;volatile
   855  001652  0012               	return	
   856  001654                     __end_of_timer3_init:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           prodh	equ	0xFF4
   863                           prodl	equ	0xFF3
   864                           intcon	equ	0xFF2
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           indf2	equ	0xFDF
   868                           postinc2	equ	0xFDE
   869                           postdec2	equ	0xFDD
   870                           fsr2h	equ	0xFDA
   871                           fsr2l	equ	0xFD9
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function _timer1_init *****************
   875 ;; Defined at:
   876 ;;		line 34 in file "../My_header\My_hedaer_18F.h"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  prescaler       1    wreg     unsigned char 
   879 ;;  clock_select    1   26[COMRAM] unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  prescaler       1   28[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;		None               void
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   894 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   895 ;;Total ram usage:        3 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    3
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text4
   906  00149C                     __ptext4:
   907                           	opt stack 0
   908  00149C                     _timer1_init:
   909                           	opt stack 26
   910                           
   911                           ;incstack = 0
   912                           ;timer1_init@prescaler stored from wreg
   913  00149C  6E1D               	movwf	timer1_init@prescaler,c
   914                           
   915                           ;My_header\My_hedaer_18F.h: 35: T1CONbits.TMR1CS = clock_select;
   916  00149E  C01B  F01C         	movff	timer1_init@clock_select,??_timer1_init
   917  0014A2  3A1C               	swapf	??_timer1_init,f,c
   918  0014A4  461C               	rlncf	??_timer1_init,f,c
   919  0014A6  461C               	rlncf	??_timer1_init,f,c
   920  0014A8  50CD               	movf	4045,w,c	;volatile
   921  0014AA  181C               	xorwf	??_timer1_init,w,c
   922  0014AC  0B3F               	andlw	-193
   923  0014AE  181C               	xorwf	??_timer1_init,w,c
   924  0014B0  6ECD               	movwf	4045,c	;volatile
   925                           
   926                           ;My_header\My_hedaer_18F.h: 36: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
   927  0014B2  501B               	movf	timer1_init@clock_select,w,c
   928  0014B4  0A02               	xorlw	2
   929  0014B6  A4D8               	btfss	status,2,c
   930  0014B8  D002               	goto	l82
   931  0014BA  86CD               	bsf	4045,3,c	;volatile
   932  0014BC  D001               	goto	l975
   933  0014BE                     l82:
   934                           
   935                           ;My_header\My_hedaer_18F.h: 37: else T1CONbits.T1OSCEN = 0;
   936  0014BE  96CD               	bcf	4045,3,c	;volatile
   937  0014C0                     l975:
   938                           
   939                           ;My_header\My_hedaer_18F.h: 38: T1CONbits.T1CKPS = prescaler;
   940  0014C0  C01D  F01C         	movff	timer1_init@prescaler,??_timer1_init
   941  0014C4  3A1C               	swapf	??_timer1_init,f,c
   942  0014C6  50CD               	movf	4045,w,c	;volatile
   943  0014C8  181C               	xorwf	??_timer1_init,w,c
   944  0014CA  0BCF               	andlw	-49
   945  0014CC  181C               	xorwf	??_timer1_init,w,c
   946  0014CE  6ECD               	movwf	4045,c	;volatile
   947                           
   948                           ;My_header\My_hedaer_18F.h: 39: T1CONbits.nT1SYNC = 1;
   949  0014D0  84CD               	bsf	4045,2,c	;volatile
   950                           
   951                           ;My_header\My_hedaer_18F.h: 40: T1CONbits.RD16 = 0;
   952  0014D2  92CD               	bcf	4045,1,c	;volatile
   953                           
   954                           ;My_header\My_hedaer_18F.h: 41: T1CONbits.TMR1ON = 1;
   955  0014D4  80CD               	bsf	4045,0,c	;volatile
   956                           
   957                           ;My_header\My_hedaer_18F.h: 42: IPR1bits.TMR1IP = 0;
   958  0014D6  909F               	bcf	3999,0,c	;volatile
   959                           
   960                           ;My_header\My_hedaer_18F.h: 43: PIR1bits.TMR1IF = 0;
   961  0014D8  909E               	bcf	3998,0,c	;volatile
   962                           
   963                           ;My_header\My_hedaer_18F.h: 44: PIE1bits.TMR1IE = 1;
   964  0014DA  809D               	bsf	3997,0,c	;volatile
   965                           
   966                           ;My_header\My_hedaer_18F.h: 45: INTCONbits.PEIE = 1;
   967  0014DC  8CF2               	bsf	intcon,6,c	;volatile
   968  0014DE  0012               	return	
   969  0014E0                     __end_of_timer1_init:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           prodh	equ	0xFF4
   976                           prodl	equ	0xFF3
   977                           intcon	equ	0xFF2
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           indf2	equ	0xFDF
   981                           postinc2	equ	0xFDE
   982                           postdec2	equ	0xFDD
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _timer0_init *****************
   988 ;; Defined at:
   989 ;;		line 13 in file "../My_header\My_hedaer_18F.h"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  prescaler       1    wreg     unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  prescaler       1   27[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;		None               void
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1007 ;;Total ram usage:        2 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    3
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text5
  1018  001584                     __ptext5:
  1019                           	opt stack 0
  1020  001584                     _timer0_init:
  1021                           	opt stack 26
  1022                           
  1023                           ;incstack = 0
  1024                           ;timer0_init@prescaler stored from wreg
  1025  001584  6E1C               	movwf	timer0_init@prescaler,c
  1026                           
  1027                           ;My_header\My_hedaer_18F.h: 14: T0CONbits.TMR0ON = 1;
  1028  001586  8ED5               	bsf	4053,7,c	;volatile
  1029                           
  1030                           ;My_header\My_hedaer_18F.h: 15: T0CONbits.T08BIT = 1;
  1031  001588  8CD5               	bsf	4053,6,c	;volatile
  1032                           
  1033                           ;My_header\My_hedaer_18F.h: 16: T0CONbits.T0CS = 0;
  1034  00158A  9AD5               	bcf	4053,5,c	;volatile
  1035                           
  1036                           ;My_header\My_hedaer_18F.h: 17: if (prescaler == 0) {
  1037  00158C  661C               	tstfsz	timer0_init@prescaler,c
  1038  00158E  D002               	goto	l77
  1039                           
  1040                           ;My_header\My_hedaer_18F.h: 18: T0CONbits.PSA = 1;
  1041  001590  86D5               	bsf	4053,3,c	;volatile
  1042                           
  1043                           ;My_header\My_hedaer_18F.h: 19: } else {
  1044  001592  D00A               	goto	l963
  1045  001594                     l77:
  1046                           
  1047                           ;My_header\My_hedaer_18F.h: 20: T0CONbits.PSA = 0;
  1048  001594  96D5               	bcf	4053,3,c	;volatile
  1049                           
  1050                           ;My_header\My_hedaer_18F.h: 21: T0CONbits.T0PS = prescaler - 1;
  1051  001596  C01C  F01B         	movff	timer0_init@prescaler,??_timer0_init
  1052  00159A  0EFF               	movlw	255
  1053  00159C  261B               	addwf	??_timer0_init,f,c
  1054  00159E  50D5               	movf	4053,w,c	;volatile
  1055  0015A0  181B               	xorwf	??_timer0_init,w,c
  1056  0015A2  0BF8               	andlw	-8
  1057  0015A4  181B               	xorwf	??_timer0_init,w,c
  1058  0015A6  6ED5               	movwf	4053,c	;volatile
  1059  0015A8                     l963:
  1060                           
  1061                           ;My_header\My_hedaer_18F.h: 22: }
  1062                           ;My_header\My_hedaer_18F.h: 23: INTCONbits.T0IE = 1;
  1063  0015A8  8AF2               	bsf	intcon,5,c	;volatile
  1064                           
  1065                           ;My_header\My_hedaer_18F.h: 24: INTCONbits.TMR0IF = 0;
  1066  0015AA  94F2               	bcf	intcon,2,c	;volatile
  1067                           
  1068                           ;My_header\My_hedaer_18F.h: 25: INTCON2bits.TMR0IP = 0;
  1069  0015AC  94F1               	bcf	intcon2,2,c	;volatile
  1070                           
  1071                           ;My_header\My_hedaer_18F.h: 26: INTCONbits.PEIE = 1;
  1072  0015AE  8CF2               	bsf	intcon,6,c	;volatile
  1073  0015B0  0012               	return	
  1074  0015B2                     __end_of_timer0_init:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           prodh	equ	0xFF4
  1081                           prodl	equ	0xFF3
  1082                           intcon	equ	0xFF2
  1083                           intcon2	equ	0xFF1
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           indf2	equ	0xFDF
  1087                           postinc2	equ	0xFDE
  1088                           postdec2	equ	0xFDD
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function _ringbuf_init *****************
  1094 ;; Defined at:
  1095 ;;		line 22 in file "../My_header\My_ringbuf.h"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  rb              2   26[COMRAM] PTR struct ringbuf
  1098 ;;		 -> tx_buf(5), 
  1099 ;;  internal_buf    2   28[COMRAM] PTR unsigned char 
  1100 ;;		 -> main@txbuf(200), 
  1101 ;;  bufsize         1   30[COMRAM] unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;		None               void
  1106 ;; Registers used:
  1107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1113 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1117 ;;Total ram usage:        5 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    3
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text6
  1128  0014E0                     __ptext6:
  1129                           	opt stack 0
  1130  0014E0                     _ringbuf_init:
  1131                           	opt stack 26
  1132                           
  1133                           ;My_header\My_ringbuf.h: 23: rb->buf = internal_buf;
  1134                           
  1135                           ;incstack = 0
  1136  0014E0  C01B  FFD9         	movff	ringbuf_init@rb,fsr2l
  1137  0014E4  C01C  FFDA         	movff	ringbuf_init@rb+1,fsr2h
  1138  0014E8  C01D  FFDE         	movff	ringbuf_init@internal_buf,postinc2
  1139  0014EC  C01E  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
  1140                           
  1141                           ;My_header\My_ringbuf.h: 24: rb->size = bufsize;
  1142  0014F0  EE20 F002          	lfsr	2,2
  1143  0014F4  501B               	movf	ringbuf_init@rb,w,c
  1144  0014F6  26D9               	addwf	fsr2l,f,c
  1145  0014F8  501C               	movf	ringbuf_init@rb+1,w,c
  1146  0014FA  22DA               	addwfc	fsr2h,f,c
  1147  0014FC  C01F  FFDF         	movff	ringbuf_init@bufsize,indf2
  1148                           
  1149                           ;My_header\My_ringbuf.h: 25: rb->head = 0;
  1150  001500  EE20 F003          	lfsr	2,3
  1151  001504  501B               	movf	ringbuf_init@rb,w,c
  1152  001506  26D9               	addwf	fsr2l,f,c
  1153  001508  501C               	movf	ringbuf_init@rb+1,w,c
  1154  00150A  22DA               	addwfc	fsr2h,f,c
  1155  00150C  0E00               	movlw	0
  1156  00150E  6EDF               	movwf	indf2,c
  1157                           
  1158                           ;My_header\My_ringbuf.h: 26: rb->tail = 0;
  1159  001510  EE20 F004          	lfsr	2,4
  1160  001514  501B               	movf	ringbuf_init@rb,w,c
  1161  001516  26D9               	addwf	fsr2l,f,c
  1162  001518  501C               	movf	ringbuf_init@rb+1,w,c
  1163  00151A  22DA               	addwfc	fsr2h,f,c
  1164  00151C  0E00               	movlw	0
  1165  00151E  6EDF               	movwf	indf2,c
  1166  001520  0012               	return	
  1167  001522                     __end_of_ringbuf_init:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           prodh	equ	0xFF4
  1174                           prodl	equ	0xFF3
  1175                           intcon	equ	0xFF2
  1176                           intcon2	equ	0xFF1
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           indf2	equ	0xFDF
  1180                           postinc2	equ	0xFDE
  1181                           postdec2	equ	0xFDD
  1182                           fsr2h	equ	0xFDA
  1183                           fsr2l	equ	0xFD9
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _UART_init *****************
  1187 ;; Defined at:
  1188 ;;		line 21 in file "../My_header\My_UART_18F.h"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  interrupt_ON    1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  interrupt_ON    1   26[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;		None               void
  1195 ;; Registers used:
  1196 ;;		wreg, status,2
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;Total ram usage:        1 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    3
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text7
  1217  001606                     __ptext7:
  1218                           	opt stack 0
  1219  001606                     _UART_init:
  1220                           	opt stack 26
  1221                           
  1222                           ;incstack = 0
  1223                           ;UART_init@interrupt_ON stored from wreg
  1224  001606  6E1B               	movwf	UART_init@interrupt_ON,c
  1225                           
  1226                           ;My_header\My_UART_18F.h: 22: TXSTA1bits.TX9 = 0;
  1227  001608  9CAD               	bcf	4013,6,c	;volatile
  1228                           
  1229                           ;My_header\My_UART_18F.h: 23: TXSTA1bits.TXEN = 1;
  1230  00160A  8AAD               	bsf	4013,5,c	;volatile
  1231                           
  1232                           ;My_header\My_UART_18F.h: 24: TXSTA1bits.SYNC = 0;
  1233  00160C  98AD               	bcf	4013,4,c	;volatile
  1234                           
  1235                           ;My_header\My_UART_18F.h: 25: TXSTA1bits.BRGH = 0;
  1236  00160E  94AD               	bcf	4013,2,c	;volatile
  1237                           
  1238                           ;My_header\My_UART_18F.h: 26: RCSTA1bits.SPEN = 1;
  1239  001610  8EAC               	bsf	4012,7,c	;volatile
  1240                           
  1241                           ;My_header\My_UART_18F.h: 27: RCSTA1bits.RX9 = 0;
  1242  001612  9CAC               	bcf	4012,6,c	;volatile
  1243                           
  1244                           ;My_header\My_UART_18F.h: 28: RCSTA1bits.CREN = 1;
  1245  001614  88AC               	bsf	4012,4,c	;volatile
  1246                           
  1247                           ;My_header\My_UART_18F.h: 29: BAUDCON1bits.BRG16 = 0;
  1248  001616  967E               	bcf	3966,3,c	;volatile
  1249                           
  1250                           ;My_header\My_UART_18F.h: 30: SPBRG1 = 48000000 / 64 / 9600 - 1;
  1251  001618  0E4D               	movlw	77
  1252  00161A  6EB0               	movwf	4016,c	;volatile
  1253                           
  1254                           ;My_header\My_UART_18F.h: 32: SPBRGH1 = 0;
  1255  00161C  0E00               	movlw	0
  1256  00161E  6E7F               	movwf	3967,c	;volatile
  1257                           
  1258                           ;My_header\My_UART_18F.h: 33: if (interrupt_ON) {
  1259  001620  501B               	movf	UART_init@interrupt_ON,w,c
  1260  001622  B4D8               	btfsc	status,2,c
  1261  001624  0012               	return	
  1262                           
  1263                           ;My_header\My_UART_18F.h: 34: IPR1bits.RC1IP = 0;
  1264  001626  9A9F               	bcf	3999,5,c	;volatile
  1265                           
  1266                           ;My_header\My_UART_18F.h: 35: PIE1bits.RC1IE = 1;
  1267  001628  8A9D               	bsf	3997,5,c	;volatile
  1268                           
  1269                           ;My_header\My_UART_18F.h: 36: INTCONbits.PEIE = 1;
  1270  00162A  8CF2               	bsf	intcon,6,c	;volatile
  1271  00162C  0012               	return	
  1272  00162E                     __end_of_UART_init:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           prodh	equ	0xFF4
  1279                           prodl	equ	0xFF3
  1280                           intcon	equ	0xFF2
  1281                           intcon2	equ	0xFF1
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           indf2	equ	0xFDF
  1285                           postinc2	equ	0xFDE
  1286                           postdec2	equ	0xFDD
  1287                           fsr2h	equ	0xFDA
  1288                           fsr2l	equ	0xFD9
  1289                           status	equ	0xFD8
  1290                           
  1291 ;; *************** function _I2C_init *****************
  1292 ;; Defined at:
  1293 ;;		line 21 in file "../My_header\My_I2C_18F.h"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;		None               void
  1300 ;; Registers used:
  1301 ;;		wreg, status,2
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    3
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text8
  1322  0016F8                     __ptext8:
  1323                           	opt stack 0
  1324  0016F8                     _I2C_init:
  1325                           	opt stack 26
  1326                           
  1327                           ;My_header\My_I2C_18F.h: 22: SSP1STAT = 0b10000000;
  1328                           
  1329                           ;incstack = 0
  1330  0016F8  0E80               	movlw	128
  1331  0016FA  6EC7               	movwf	4039,c	;volatile
  1332                           
  1333                           ;My_header\My_I2C_18F.h: 23: SSP1CON1 = 0b00101000;
  1334  0016FC  0E28               	movlw	40
  1335  0016FE  6EC6               	movwf	4038,c	;volatile
  1336                           
  1337                           ;My_header\My_I2C_18F.h: 24: SSP1ADD = 0x13;
  1338  001700  0E13               	movlw	19
  1339  001702  6EC8               	movwf	4040,c	;volatile
  1340                           
  1341                           ;My_header\My_I2C_18F.h: 27: SSP1IF = 0;
  1342  001704  969E               	bcf	3998,3,c	;volatile
  1343                           
  1344                           ;My_header\My_I2C_18F.h: 28: BCL1IF = 0;
  1345  001706  96A1               	bcf	4001,3,c	;volatile
  1346  001708  0012               	return	
  1347  00170A                     __end_of_I2C_init:
  1348                           	opt stack 0
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           prodh	equ	0xFF4
  1354                           prodl	equ	0xFF3
  1355                           intcon	equ	0xFF2
  1356                           intcon2	equ	0xFF1
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           indf2	equ	0xFDF
  1360                           postinc2	equ	0xFDE
  1361                           postdec2	equ	0xFDD
  1362                           fsr2h	equ	0xFDA
  1363                           fsr2l	equ	0xFD9
  1364                           status	equ	0xFD8
  1365                           
  1366 ;; *************** function _I2C_LCD_init *****************
  1367 ;; Defined at:
  1368 ;;		line 84 in file "../My_header\My_I2C.h"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;		None               void
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    7
  1389 ;; This function calls:
  1390 ;;		_Delay_ms
  1391 ;;		_I2C_LCD_Clear
  1392 ;;		_I2C_LCD_Command
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text9
  1399  0013F4                     __ptext9:
  1400                           	opt stack 0
  1401  0013F4                     _I2C_LCD_init:
  1402                           	opt stack 22
  1403                           
  1404                           ;My_header\My_I2C.h: 85: Delay_ms(40);
  1405                           
  1406                           ;incstack = 0
  1407  0013F4  0E00               	movlw	0
  1408  0013F6  6E1C               	movwf	Delay_ms@ms+1,c
  1409  0013F8  0E28               	movlw	40
  1410  0013FA  6E1B               	movwf	Delay_ms@ms,c
  1411  0013FC  EC3D  F00B         	call	_Delay_ms	;wreg free
  1412                           
  1413                           ;My_header\My_I2C.h: 86: I2C_LCD_Command(0x38);
  1414  001400  0E38               	movlw	56
  1415  001402  ECD9  F00A         	call	_I2C_LCD_Command
  1416                           
  1417                           ;My_header\My_I2C.h: 87: I2C_LCD_Command(0x39);
  1418  001406  0E39               	movlw	57
  1419  001408  ECD9  F00A         	call	_I2C_LCD_Command
  1420                           
  1421                           ;My_header\My_I2C.h: 88: I2C_LCD_Command(0x14);
  1422  00140C  0E14               	movlw	20
  1423  00140E  ECD9  F00A         	call	_I2C_LCD_Command
  1424                           
  1425                           ;My_header\My_I2C.h: 89: I2C_LCD_Command(0x70);
  1426  001412  0E70               	movlw	112
  1427  001414  ECD9  F00A         	call	_I2C_LCD_Command
  1428                           
  1429                           ;My_header\My_I2C.h: 90: I2C_LCD_Command(0x56);
  1430  001418  0E56               	movlw	86
  1431  00141A  ECD9  F00A         	call	_I2C_LCD_Command
  1432                           
  1433                           ;My_header\My_I2C.h: 91: I2C_LCD_Command(0x6C);
  1434  00141E  0E6C               	movlw	108
  1435  001420  ECD9  F00A         	call	_I2C_LCD_Command
  1436                           
  1437                           ;My_header\My_I2C.h: 92: Delay_ms(200);
  1438  001424  0E00               	movlw	0
  1439  001426  6E1C               	movwf	Delay_ms@ms+1,c
  1440  001428  0EC8               	movlw	200
  1441  00142A  6E1B               	movwf	Delay_ms@ms,c
  1442  00142C  EC3D  F00B         	call	_Delay_ms	;wreg free
  1443                           
  1444                           ;My_header\My_I2C.h: 93: I2C_LCD_Command(0x38);
  1445  001430  0E38               	movlw	56
  1446  001432  ECD9  F00A         	call	_I2C_LCD_Command
  1447                           
  1448                           ;My_header\My_I2C.h: 94: I2C_LCD_Command(0x0C);
  1449  001436  0E0C               	movlw	12
  1450  001438  ECD9  F00A         	call	_I2C_LCD_Command
  1451                           
  1452                           ;My_header\My_I2C.h: 95: I2C_LCD_Command(0x06);
  1453  00143C  0E06               	movlw	6
  1454  00143E  ECD9  F00A         	call	_I2C_LCD_Command
  1455                           
  1456                           ;My_header\My_I2C.h: 96: I2C_LCD_Clear();
  1457  001442  EC4F  F00B         	call	_I2C_LCD_Clear	;wreg free
  1458  001446  0012               	return	
  1459  001448                     __end_of_I2C_LCD_init:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           intcon	equ	0xFF2
  1468                           intcon2	equ	0xFF1
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           indf2	equ	0xFDF
  1472                           postinc2	equ	0xFDE
  1473                           postdec2	equ	0xFDD
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _I2C_LCD_Clear *****************
  1479 ;; Defined at:
  1480 ;;		line 27 in file "../My_header\My_I2C.h"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;Total ram usage:        1 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    6
  1501 ;; This function calls:
  1502 ;;		_I2C_LCD_Command
  1503 ;; This function is called by:
  1504 ;;		_I2C_LCD_init
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text10
  1510  00169E                     __ptext10:
  1511                           	opt stack 0
  1512  00169E                     _I2C_LCD_Clear:
  1513                           	opt stack 22
  1514                           
  1515                           ;My_header\My_I2C.h: 28: I2C_LCD_Command(0x01);
  1516                           
  1517                           ;incstack = 0
  1518  00169E  0E01               	movlw	1
  1519  0016A0  ECD9  F00A         	call	_I2C_LCD_Command
  1520                           
  1521                           ;My_header\My_I2C.h: 29: _delay((unsigned long)((1100)*(48000000/4000000.0)));
  1522  0016A4  0E12               	movlw	18
  1523  0016A6  6E21               	movwf	??_I2C_LCD_Clear& (0+255),c
  1524  0016A8  0E23               	movlw	35
  1525  0016AA                     u547:
  1526  0016AA  2EE8               	decfsz	wreg,f,c
  1527  0016AC  D7FE               	goto	u547
  1528  0016AE  2E21               	decfsz	??_I2C_LCD_Clear& (0+255),f,c
  1529  0016B0  D7FC               	goto	u547
  1530  0016B2  F000               	nop	
  1531  0016B4  0012               	return	
  1532  0016B6                     __end_of_I2C_LCD_Clear:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           prodh	equ	0xFF4
  1539                           prodl	equ	0xFF3
  1540                           intcon	equ	0xFF2
  1541                           intcon2	equ	0xFF1
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           indf2	equ	0xFDF
  1545                           postinc2	equ	0xFDE
  1546                           postdec2	equ	0xFDD
  1547                           fsr2h	equ	0xFDA
  1548                           fsr2l	equ	0xFD9
  1549                           status	equ	0xFD8
  1550                           
  1551 ;; *************** function _Delay_ms *****************
  1552 ;; Defined at:
  1553 ;;		line 102 in file "../My_header\My_hedaer_18F.h"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  ms              2   26[COMRAM] unsigned int 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;		None               void
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1570 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1571 ;;Total ram usage:        3 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    3
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_I2C_LCD_init
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text11
  1582  00167A                     __ptext11:
  1583                           	opt stack 0
  1584  00167A                     _Delay_ms:
  1585                           	opt stack 25
  1586                           
  1587                           ;My_header\My_hedaer_18F.h: 103: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0
      +                          )));
  1588                           
  1589                           ;incstack = 0
  1590  00167A  D008               	goto	l909
  1591  00167C                     l907:
  1592  00167C  0E10               	movlw	16
  1593  00167E  6E1D               	movwf	??_Delay_ms& (0+255),c
  1594  001680  0E94               	movlw	148
  1595  001682                     u557:
  1596  001682  2EE8               	decfsz	wreg,f,c
  1597  001684  D7FE               	goto	u557
  1598  001686  2E1D               	decfsz	??_Delay_ms& (0+255),f,c
  1599  001688  D7FC               	goto	u557
  1600  00168A  D000               	nop2	
  1601  00168C                     l909:
  1602  00168C  061B               	decf	Delay_ms@ms,f,c
  1603  00168E  A0D8               	btfss	status,0,c
  1604  001690  061C               	decf	Delay_ms@ms+1,f,c
  1605  001692  281B               	incf	Delay_ms@ms& (0+255),w,c
  1606  001694  B4D8               	btfsc	status,2,c
  1607  001696  281C               	incf	(Delay_ms@ms+1)& (0+255),w,c
  1608  001698  B4D8               	btfsc	status,2,c
  1609  00169A  0012               	return	
  1610  00169C  D7EF               	goto	l907
  1611  00169E                     __end_of_Delay_ms:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           prodh	equ	0xFF4
  1618                           prodl	equ	0xFF3
  1619                           intcon	equ	0xFF2
  1620                           intcon2	equ	0xFF1
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           indf2	equ	0xFDF
  1624                           postinc2	equ	0xFDE
  1625                           postdec2	equ	0xFDD
  1626                           fsr2h	equ	0xFDA
  1627                           fsr2l	equ	0xFD9
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _I2C_LCD_SetCursor *****************
  1631 ;; Defined at:
  1632 ;;		line 32 in file "../My_header\My_I2C.h"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  col             1    wreg     unsigned char 
  1635 ;;  row             1   32[COMRAM] unsigned char 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  col             1   35[COMRAM] unsigned char 
  1638 ;;  row_offsets     2   33[COMRAM] unsigned char [2]
  1639 ;; Return value:  Size  Location     Type
  1640 ;;		None               void
  1641 ;; Registers used:
  1642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1648 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;Total ram usage:        4 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    6
  1655 ;; This function calls:
  1656 ;;		_I2C_LCD_Command
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text12
  1663  001654                     __ptext12:
  1664                           	opt stack 0
  1665  001654                     _I2C_LCD_SetCursor:
  1666                           	opt stack 23
  1667                           
  1668                           ;incstack = 0
  1669                           ;I2C_LCD_SetCursor@col stored from wreg
  1670  001654  6E24               	movwf	I2C_LCD_SetCursor@col,c
  1671                           
  1672                           ;My_header\My_I2C.h: 33: uint8_t row_offsets[] = {0x00, 0x40};
  1673  001656  C02E  F022         	movff	I2C_LCD_SetCursor@F9792,I2C_LCD_SetCursor@row_offsets
  1674  00165A  C02F  F023         	movff	I2C_LCD_SetCursor@F9792+1,I2C_LCD_SetCursor@row_offsets+1
  1675                           
  1676                           ;My_header\My_I2C.h: 35: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  1677  00165E  5021               	movf	I2C_LCD_SetCursor@row,w,c
  1678  001660  0D01               	mullw	1
  1679  001662  0E22               	movlw	low I2C_LCD_SetCursor@row_offsets
  1680  001664  24F3               	addwf	prodl,w,c
  1681  001666  6ED9               	movwf	fsr2l,c
  1682  001668  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  1683  00166A  20F4               	addwfc	prodh,w,c
  1684  00166C  6EDA               	movwf	fsr2h,c
  1685  00166E  50DF               	movf	indf2,w,c
  1686  001670  2424               	addwf	I2C_LCD_SetCursor@col,w,c
  1687  001672  0980               	iorlw	128
  1688  001674  ECD9  F00A         	call	_I2C_LCD_Command
  1689  001678  0012               	return	
  1690  00167A                     __end_of_I2C_LCD_SetCursor:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodh	equ	0xFF4
  1697                           prodl	equ	0xFF3
  1698                           intcon	equ	0xFF2
  1699                           intcon2	equ	0xFF1
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           indf2	equ	0xFDF
  1703                           postinc2	equ	0xFDE
  1704                           postdec2	equ	0xFDD
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _I2C_LCD_Command *****************
  1710 ;; Defined at:
  1711 ;;		line 14 in file "../My_header\My_I2C.h"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  c               1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  c               1   30[COMRAM] unsigned char 
  1716 ;;  ans             1   31[COMRAM] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;		None               void
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;Total ram usage:        2 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    5
  1733 ;; This function calls:
  1734 ;;		_I2C_Send
  1735 ;;		_I2C_Start
  1736 ;;		_I2C_Stop
  1737 ;; This function is called by:
  1738 ;;		_I2C_LCD_Clear
  1739 ;;		_I2C_LCD_SetCursor
  1740 ;;		_I2C_LCD_init
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text13
  1745  0015B2                     __ptext13:
  1746                           	opt stack 0
  1747  0015B2                     _I2C_LCD_Command:
  1748                           	opt stack 23
  1749                           
  1750                           ;incstack = 0
  1751                           ;I2C_LCD_Command@c stored from wreg
  1752  0015B2  6E1F               	movwf	I2C_LCD_Command@c,c
  1753                           
  1754                           ;My_header\My_I2C.h: 15: uint8_t ans;
  1755                           ;My_header\My_I2C.h: 17: ans = I2C_Start(0x3E, 0);
  1756  0015B4  0E00               	movlw	0
  1757  0015B6  6E1D               	movwf	I2C_Start@rw,c
  1758  0015B8  0E3E               	movlw	62
  1759  0015BA  ECEE  F00A         	call	_I2C_Start
  1760  0015BE  6E20               	movwf	I2C_LCD_Command@ans,c
  1761                           
  1762                           ;My_header\My_I2C.h: 18: if (ans == 0) {
  1763  0015C0  6620               	tstfsz	I2C_LCD_Command@ans,c
  1764  0015C2  D006               	goto	l183
  1765                           
  1766                           ;My_header\My_I2C.h: 20: I2C_Send(0b10000000);
  1767  0015C4  0E80               	movlw	128
  1768  0015C6  EC5B  F00B         	call	_I2C_Send
  1769                           
  1770                           ;My_header\My_I2C.h: 21: I2C_Send(c);
  1771  0015CA  501F               	movf	I2C_LCD_Command@c,w,c
  1772  0015CC  EC5B  F00B         	call	_I2C_Send
  1773  0015D0                     l183:
  1774                           
  1775                           ;My_header\My_I2C.h: 22: }
  1776                           ;My_header\My_I2C.h: 23: I2C_Stop();
  1777  0015D0  EC85  F00B         	call	_I2C_Stop	;wreg free
  1778                           
  1779                           ;My_header\My_I2C.h: 24: _delay((unsigned long)((26)*(48000000/4000000.0)));
  1780  0015D4  0E68               	movlw	104
  1781  0015D6                     u567:
  1782  0015D6  2EE8               	decfsz	wreg,f,c
  1783  0015D8  D7FE               	goto	u567
  1784  0015DA  0012               	return	
  1785  0015DC                     __end_of_I2C_LCD_Command:
  1786                           	opt stack 0
  1787                           tblptru	equ	0xFF8
  1788                           tblptrh	equ	0xFF7
  1789                           tblptrl	equ	0xFF6
  1790                           tablat	equ	0xFF5
  1791                           prodh	equ	0xFF4
  1792                           prodl	equ	0xFF3
  1793                           intcon	equ	0xFF2
  1794                           intcon2	equ	0xFF1
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           indf2	equ	0xFDF
  1798                           postinc2	equ	0xFDE
  1799                           postdec2	equ	0xFDD
  1800                           fsr2h	equ	0xFDA
  1801                           fsr2l	equ	0xFD9
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _I2C_LCD_Puts *****************
  1805 ;; Defined at:
  1806 ;;		line 51 in file "../My_header\My_I2C.h"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  s               2   30[COMRAM] PTR const unsigned char 
  1809 ;;		 -> STR_3(8), STR_2(7), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  ans             2   33[COMRAM] int 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;Total ram usage:        5 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    5
  1828 ;; This function calls:
  1829 ;;		_I2C_Send
  1830 ;;		_I2C_Start
  1831 ;;		_I2C_Stop
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text14
  1838  001448                     __ptext14:
  1839                           	opt stack 0
  1840  001448                     _I2C_LCD_Puts:
  1841                           	opt stack 24
  1842                           
  1843                           ;My_header\My_I2C.h: 52: int ans;
  1844                           ;My_header\My_I2C.h: 54: ans = I2C_Start(0x3E, 0);
  1845                           
  1846                           ;incstack = 0
  1847  001448  0E00               	movlw	0
  1848  00144A  6E1D               	movwf	I2C_Start@rw,c
  1849  00144C  0E3E               	movlw	62
  1850  00144E  ECEE  F00A         	call	_I2C_Start
  1851  001452  6E21               	movwf	??_I2C_LCD_Puts& (0+255),c
  1852  001454  5021               	movf	??_I2C_LCD_Puts,w,c
  1853  001456  6E22               	movwf	I2C_LCD_Puts@ans,c
  1854  001458  6A23               	clrf	I2C_LCD_Puts@ans+1,c
  1855                           
  1856                           ;My_header\My_I2C.h: 55: if (ans == 0) {
  1857  00145A  5023               	movf	I2C_LCD_Puts@ans+1,w,c
  1858  00145C  1022               	iorwf	I2C_LCD_Puts@ans,w,c
  1859  00145E  A4D8               	btfss	status,2,c
  1860  001460  D01A               	goto	l1131
  1861                           
  1862                           ;My_header\My_I2C.h: 56: I2C_Send(0b01000000);
  1863  001462  0E40               	movlw	64
  1864  001464  EC5B  F00B         	call	_I2C_Send
  1865                           
  1866                           ;My_header\My_I2C.h: 57: while (*s) {
  1867  001468  D00D               	goto	l1129
  1868  00146A                     l1123:
  1869                           
  1870                           ;My_header\My_I2C.h: 58: I2C_Send(*s++);
  1871  00146A  C01F  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  1872  00146E  C020  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  1873  001472                     	if	0	;tblptru may be non-zero
  1874  001472                     	endif
  1875  001472                     	if	0	;tblptru may be non-zero
  1876  001472                     	endif
  1877  001472  0008               	tblrd		*
  1878  001474  50F5               	movf	tablat,w,c
  1879  001476  EC5B  F00B         	call	_I2C_Send
  1880  00147A  4A1F               	infsnz	I2C_LCD_Puts@s,f,c
  1881  00147C  2A20               	incf	I2C_LCD_Puts@s+1,f,c
  1882                           
  1883                           ;My_header\My_I2C.h: 59: _delay((unsigned long)((26)*(48000000/4000000.0)));
  1884  00147E  0E68               	movlw	104
  1885  001480                     u577:
  1886  001480  2EE8               	decfsz	wreg,f,c
  1887  001482  D7FE               	goto	u577
  1888  001484                     l1129:
  1889  001484  C01F  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  1890  001488  C020  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  1891  00148C                     	if	0	;tblptru may be non-zero
  1892  00148C                     	endif
  1893  00148C                     	if	0	;tblptru may be non-zero
  1894  00148C                     	endif
  1895  00148C  0008               	tblrd		*
  1896  00148E  50F5               	movf	tablat,w,c
  1897  001490  0900               	iorlw	0
  1898  001492  A4D8               	btfss	status,2,c
  1899  001494  D7EA               	goto	l1123
  1900  001496                     l1131:
  1901                           
  1902                           ;My_header\My_I2C.h: 60: }
  1903                           ;My_header\My_I2C.h: 61: }
  1904                           ;My_header\My_I2C.h: 62: I2C_Stop();
  1905  001496  EC85  F00B         	call	_I2C_Stop	;wreg free
  1906  00149A  0012               	return	
  1907  00149C                     __end_of_I2C_LCD_Puts:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           prodh	equ	0xFF4
  1914                           prodl	equ	0xFF3
  1915                           intcon	equ	0xFF2
  1916                           intcon2	equ	0xFF1
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           indf2	equ	0xFDF
  1920                           postinc2	equ	0xFDE
  1921                           postdec2	equ	0xFDD
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _I2C_Stop *****************
  1927 ;; Defined at:
  1928 ;;		line 55 in file "../My_header\My_I2C_18F.h"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    4
  1949 ;; This function calls:
  1950 ;;		_I2C_IdleCheck
  1951 ;; This function is called by:
  1952 ;;		_I2C_LCD_Command
  1953 ;;		_I2C_LCD_Puts
  1954 ;;		_I2C_LCD_Putc
  1955 ;;		_I2C_LCD_CreateChar
  1956 ;;		_RTC_Write
  1957 ;;		_RTC_Read
  1958 ;;		_TM_init
  1959 ;;		_TM_Read
  1960 ;;		_EEP_write
  1961 ;;		_EEP_read
  1962 ;;		_EEP_writes
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text15
  1967  00170A                     __ptext15:
  1968                           	opt stack 0
  1969  00170A                     _I2C_Stop:
  1970                           	opt stack 23
  1971                           
  1972                           ;My_header\My_I2C_18F.h: 57: I2C_IdleCheck(0x5);
  1973                           
  1974                           ;incstack = 0
  1975  00170A  0E05               	movlw	5
  1976  00170C  EC66  F00B         	call	_I2C_IdleCheck
  1977                           
  1978                           ;My_header\My_I2C_18F.h: 58: SSP1CON2bits.PEN = 1;
  1979  001710  84C5               	bsf	4037,2,c	;volatile
  1980  001712  0012               	return	
  1981  001714                     __end_of_I2C_Stop:
  1982                           	opt stack 0
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           prodh	equ	0xFF4
  1988                           prodl	equ	0xFF3
  1989                           intcon	equ	0xFF2
  1990                           intcon2	equ	0xFF1
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           indf2	equ	0xFDF
  1994                           postinc2	equ	0xFDE
  1995                           postdec2	equ	0xFDD
  1996                           fsr2h	equ	0xFDA
  1997                           fsr2l	equ	0xFD9
  1998                           status	equ	0xFD8
  1999                           
  2000 ;; *************** function _I2C_Start *****************
  2001 ;; Defined at:
  2002 ;;		line 31 in file "../My_header\My_I2C_18F.h"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  adrs            1    wreg     unsigned char 
  2005 ;;  rw              1   28[COMRAM] unsigned char 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  adrs            1   29[COMRAM] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2017 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;Total ram usage:        2 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    4
  2024 ;; This function calls:
  2025 ;;		_I2C_IdleCheck
  2026 ;; This function is called by:
  2027 ;;		_I2C_LCD_Command
  2028 ;;		_I2C_LCD_Puts
  2029 ;;		_I2C_LCD_Putc
  2030 ;;		_I2C_LCD_CreateChar
  2031 ;;		_RTC_Write
  2032 ;;		_RTC_Read
  2033 ;;		_TM_init
  2034 ;;		_TM_Read
  2035 ;;		_EEP_write
  2036 ;;		_EEP_read
  2037 ;;		_EEP_writes
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text16
  2042  0015DC                     __ptext16:
  2043                           	opt stack 0
  2044  0015DC                     _I2C_Start:
  2045                           	opt stack 23
  2046                           
  2047                           ;incstack = 0
  2048                           ;I2C_Start@adrs stored from wreg
  2049  0015DC  6E1E               	movwf	I2C_Start@adrs,c
  2050                           
  2051                           ;My_header\My_I2C_18F.h: 33: I2C_IdleCheck(0x5);
  2052  0015DE  0E05               	movlw	5
  2053  0015E0  EC66  F00B         	call	_I2C_IdleCheck
  2054                           
  2055                           ;My_header\My_I2C_18F.h: 34: SSP1CON2bits.SEN = 1;
  2056  0015E4  80C5               	bsf	4037,0,c	;volatile
  2057                           
  2058                           ;My_header\My_I2C_18F.h: 36: I2C_IdleCheck(0x5);
  2059  0015E6  0E05               	movlw	5
  2060  0015E8  EC66  F00B         	call	_I2C_IdleCheck
  2061                           
  2062                           ;My_header\My_I2C_18F.h: 37: SSP1IF = 0;
  2063  0015EC  969E               	bcf	3998,3,c	;volatile
  2064                           
  2065                           ;My_header\My_I2C_18F.h: 38: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
  2066  0015EE  501E               	movf	I2C_Start@adrs,w,c
  2067  0015F0  241E               	addwf	I2C_Start@adrs,w,c
  2068  0015F2  241D               	addwf	I2C_Start@rw,w,c
  2069  0015F4  6EC9               	movwf	4041,c	;volatile
  2070  0015F6                     l159:
  2071  0015F6  A69E               	btfss	3998,3,c	;volatile
  2072  0015F8  D7FE               	goto	l159
  2073                           
  2074                           ;My_header\My_I2C_18F.h: 40: return SSP1CON2bits.ACKSTAT;
  2075  0015FA  ACC5               	btfss	4037,6,c	;volatile
  2076  0015FC  D002               	goto	u30
  2077  0015FE  0E01               	movlw	1
  2078  001600  0012               	return	
  2079  001602                     u30:
  2080  001602  0E00               	movlw	0
  2081  001604  0012               	return	
  2082  001606                     __end_of_I2C_Start:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           prodh	equ	0xFF4
  2089                           prodl	equ	0xFF3
  2090                           intcon	equ	0xFF2
  2091                           intcon2	equ	0xFF1
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           indf2	equ	0xFDF
  2095                           postinc2	equ	0xFDE
  2096                           postdec2	equ	0xFDD
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function _I2C_Send *****************
  2102 ;; Defined at:
  2103 ;;		line 61 in file "../My_header\My_I2C_18F.h"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  data            1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  data            1   28[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    4
  2124 ;; This function calls:
  2125 ;;		_I2C_IdleCheck
  2126 ;; This function is called by:
  2127 ;;		_I2C_LCD_Command
  2128 ;;		_I2C_LCD_Puts
  2129 ;;		_I2C_LCD_Putc
  2130 ;;		_I2C_LCD_CreateChar
  2131 ;;		_RTC_Write
  2132 ;;		_RTC_Read
  2133 ;;		_TM_init
  2134 ;;		_TM_Read
  2135 ;;		_EEP_write
  2136 ;;		_EEP_read
  2137 ;;		_EEP_writes
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text17
  2142  0016B6                     __ptext17:
  2143                           	opt stack 0
  2144  0016B6                     _I2C_Send:
  2145                           	opt stack 23
  2146                           
  2147                           ;incstack = 0
  2148                           ;I2C_Send@data stored from wreg
  2149  0016B6  6E1D               	movwf	I2C_Send@data,c
  2150                           
  2151                           ;My_header\My_I2C_18F.h: 62: I2C_IdleCheck(0x5);
  2152  0016B8  0E05               	movlw	5
  2153  0016BA  EC66  F00B         	call	_I2C_IdleCheck
  2154                           
  2155                           ;My_header\My_I2C_18F.h: 63: SSP1IF = 0;
  2156  0016BE  969E               	bcf	3998,3,c	;volatile
  2157                           
  2158                           ;My_header\My_I2C_18F.h: 64: SSP1BUF = data;
  2159  0016C0  C01D  FFC9         	movff	I2C_Send@data,4041	;volatile
  2160  0016C4                     l174:
  2161  0016C4  A69E               	btfss	3998,3,c	;volatile
  2162  0016C6  D7FE               	goto	l174
  2163                           
  2164                           ;My_header\My_I2C_18F.h: 66: return SSP1CON2bits.ACKSTAT;
  2165                           ;	Return value of _I2C_Send is never used
  2166  0016C8  50C5               	movf	4037,w,c	;volatile
  2167  0016CA  0012               	return	
  2168  0016CC                     __end_of_I2C_Send:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           prodh	equ	0xFF4
  2175                           prodl	equ	0xFF3
  2176                           intcon	equ	0xFF2
  2177                           intcon2	equ	0xFF1
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           indf2	equ	0xFDF
  2181                           postinc2	equ	0xFDE
  2182                           postdec2	equ	0xFDD
  2183                           fsr2h	equ	0xFDA
  2184                           fsr2l	equ	0xFD9
  2185                           status	equ	0xFD8
  2186                           
  2187 ;; *************** function _I2C_IdleCheck *****************
  2188 ;; Defined at:
  2189 ;;		line 17 in file "../My_header\My_I2C_18F.h"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  mask            1    wreg     unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  mask            1   27[COMRAM] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    3
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_I2C_Start
  2214 ;;		_I2C_Stop
  2215 ;;		_I2C_Send
  2216 ;;		_I2C_rStart
  2217 ;;		_I2C_Receive
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text18
  2222  0016CC                     __ptext18:
  2223                           	opt stack 0
  2224  0016CC                     _I2C_IdleCheck:
  2225                           	opt stack 23
  2226                           
  2227                           ;incstack = 0
  2228                           ;I2C_IdleCheck@mask stored from wreg
  2229  0016CC  6E1C               	movwf	I2C_IdleCheck@mask,c
  2230  0016CE                     l869:
  2231  0016CE  50C7               	movf	4039,w,c	;volatile
  2232  0016D0  141C               	andwf	I2C_IdleCheck@mask,w,c
  2233  0016D2  6E1B               	movwf	??_I2C_IdleCheck& (0+255),c
  2234  0016D4  50C5               	movf	4037,w,c	;volatile
  2235  0016D6  0B1F               	andlw	31
  2236  0016D8  101B               	iorwf	??_I2C_IdleCheck,w,c
  2237  0016DA  0900               	iorlw	0
  2238  0016DC  B4D8               	btfsc	status,2,c
  2239  0016DE  0012               	return	
  2240  0016E0  D7F6               	goto	l869
  2241  0016E2                     __end_of_I2C_IdleCheck:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon	equ	0xFF2
  2250                           intcon2	equ	0xFF1
  2251                           postinc0	equ	0xFEE
  2252                           wreg	equ	0xFE8
  2253                           indf2	equ	0xFDF
  2254                           postinc2	equ	0xFDE
  2255                           postdec2	equ	0xFDD
  2256                           fsr2h	equ	0xFDA
  2257                           fsr2l	equ	0xFD9
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function _ISR *****************
  2261 ;; Defined at:
  2262 ;;		line 59 in file "PIC18F27J53-ADC01.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  ascii           1   25[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;		None               void
  2269 ;; Registers used:
  2270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2280 ;;Total ram usage:       15 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		_button_timer_interrupt
  2285 ;;		_interrupt_TXIF
  2286 ;;		_tx_send
  2287 ;;		i2_tx_sends
  2288 ;; This function is called by:
  2289 ;;		Interrupt level 2
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	intcode
  2294  000008                     __pintcode:
  2295                           	opt stack 0
  2296  000008                     _ISR:
  2297                           	opt stack 22
  2298                           
  2299                           ;incstack = 0
  2300  000008  CFFA F00C          	movff	pclath,??_ISR
  2301  00000C  CFFB F00D          	movff	pclatu,??_ISR+1
  2302  000010  CFE9 F00E          	movff	fsr0l,??_ISR+2
  2303  000014  CFEA F00F          	movff	fsr0h,??_ISR+3
  2304  000018  CFE1 F010          	movff	fsr1l,??_ISR+4
  2305  00001C  CFE2 F011          	movff	fsr1h,??_ISR+5
  2306  000020  CFD9 F012          	movff	fsr2l,??_ISR+6
  2307  000024  CFDA F013          	movff	fsr2h,??_ISR+7
  2308  000028  CFF3 F014          	movff	prodl,??_ISR+8
  2309  00002C  CFF4 F015          	movff	prodh,??_ISR+9
  2310  000030  CFF6 F016          	movff	tblptrl,??_ISR+10
  2311  000034  CFF7 F017          	movff	tblptrh,??_ISR+11
  2312  000038  CFF8 F018          	movff	tblptru,??_ISR+12
  2313  00003C  CFF5 F019          	movff	tablat,??_ISR+13
  2314                           
  2315                           ;PIC18F27J53-ADC01.c: 60: interrupt_TXIF();
  2316  000040  ECAA  F00A         	call	_interrupt_TXIF	;wreg free
  2317                           
  2318                           ;PIC18F27J53-ADC01.c: 61: if (PIR1bits.RC1IF) {
  2319  000044  AA9E               	btfss	3998,5,c	;volatile
  2320  000046  D006               	goto	i2l1261
  2321                           
  2322                           ;PIC18F27J53-ADC01.c: 62: PIR1bits.RC1IF = 0;
  2323  000048  9A9E               	bcf	3998,5,c	;volatile
  2324                           
  2325                           ;PIC18F27J53-ADC01.c: 63: uint8_t ascii = RCREG1;
  2326  00004A  CFAF F01A          	movff	4015,ISR@ascii	;volatile
  2327                           
  2328                           ;PIC18F27J53-ADC01.c: 64: tx_send(ascii);
  2329  00004E  501A               	movf	ISR@ascii,w,c
  2330  000050  EC71  F00B         	call	_tx_send
  2331  000054                     i2l1261:
  2332                           
  2333                           ;PIC18F27J53-ADC01.c: 65: }
  2334                           ;PIC18F27J53-ADC01.c: 66: if (INTCONbits.T0IF) {
  2335  000054  B4F2               	btfsc	intcon,2,c	;volatile
  2336                           
  2337                           ;PIC18F27J53-ADC01.c: 67: INTCONbits.T0IF = 0;
  2338  000056  94F2               	bcf	intcon,2,c	;volatile
  2339                           
  2340                           ;PIC18F27J53-ADC01.c: 68: }
  2341                           ;PIC18F27J53-ADC01.c: 69: if (PIR1bits.TMR1IF) {
  2342  000058  A09E               	btfss	3998,0,c	;volatile
  2343  00005A  D009               	goto	i2l1271
  2344                           
  2345                           ;PIC18F27J53-ADC01.c: 70: PIR1bits.TMR1IF = 0;
  2346  00005C  909E               	bcf	3998,0,c	;volatile
  2347                           
  2348                           ;PIC18F27J53-ADC01.c: 71: TMR1H = 0x80;
  2349  00005E  0E80               	movlw	128
  2350  000060  6ECF               	movwf	4047,c	;volatile
  2351                           
  2352                           ;PIC18F27J53-ADC01.c: 72: tx_sends("TIMER1\n");
  2353  000062  0E0F               	movlw	high STR_1
  2354  000064  6E08               	movwf	i2tx_sends@asciicode+1,c
  2355  000066  0E01               	movlw	low STR_1
  2356  000068  6E07               	movwf	i2tx_sends@asciicode,c
  2357  00006A  ECCA  F009         	call	i2_tx_sends	;wreg free
  2358  00006E                     i2l1271:
  2359                           
  2360                           ;PIC18F27J53-ADC01.c: 73: }
  2361                           ;PIC18F27J53-ADC01.c: 74: if (PIR2bits.TMR3IF) {
  2362  00006E  A2A1               	btfss	4001,1,c	;volatile
  2363  000070  D00D               	goto	i2l252
  2364                           
  2365                           ;PIC18F27J53-ADC01.c: 75: PIR2bits.TMR3IF = 0;
  2366  000072  92A1               	bcf	4001,1,c	;volatile
  2367                           
  2368                           ;PIC18F27J53-ADC01.c: 76: button_timer_interrupt(&sw, !PORTAbits.RA6);
  2369  000074  0E00               	movlw	high _sw
  2370  000076  6E02               	movwf	button_timer_interrupt@bt+1,c
  2371  000078  0E2B               	movlw	low _sw
  2372  00007A  6E01               	movwf	button_timer_interrupt@bt,c
  2373  00007C  BC80               	btfsc	3968,6,c	;volatile
  2374  00007E  D002               	goto	i2u52_40
  2375  000080  0E01               	movlw	1
  2376  000082  D001               	goto	i2u52_46
  2377  000084                     i2u52_40:
  2378  000084  0E00               	movlw	0
  2379  000086                     i2u52_46:
  2380  000086  6E03               	movwf	button_timer_interrupt@sw_value,c
  2381  000088  EC90  F007         	call	_button_timer_interrupt	;wreg free
  2382  00008C                     i2l252:
  2383  00008C  C019  FFF5         	movff	??_ISR+13,tablat
  2384  000090  C018  FFF8         	movff	??_ISR+12,tblptru
  2385  000094  C017  FFF7         	movff	??_ISR+11,tblptrh
  2386  000098  C016  FFF6         	movff	??_ISR+10,tblptrl
  2387  00009C  C015  FFF4         	movff	??_ISR+9,prodh
  2388  0000A0  C014  FFF3         	movff	??_ISR+8,prodl
  2389  0000A4  C013  FFDA         	movff	??_ISR+7,fsr2h
  2390  0000A8  C012  FFD9         	movff	??_ISR+6,fsr2l
  2391  0000AC  C011  FFE2         	movff	??_ISR+5,fsr1h
  2392  0000B0  C010  FFE1         	movff	??_ISR+4,fsr1l
  2393  0000B4  C00F  FFEA         	movff	??_ISR+3,fsr0h
  2394  0000B8  C00E  FFE9         	movff	??_ISR+2,fsr0l
  2395  0000BC  C00D  FFFB         	movff	??_ISR+1,pclatu
  2396  0000C0  C00C  FFFA         	movff	??_ISR,pclath
  2397  0000C4  0011               	retfie		f
  2398  0000C6                     __end_of_ISR:
  2399                           	opt stack 0
  2400                           pclatu	equ	0xFFB
  2401                           pclath	equ	0xFFA
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           intcon	equ	0xFF2
  2409                           intcon2	equ	0xFF1
  2410                           postinc0	equ	0xFEE
  2411                           fsr0h	equ	0xFEA
  2412                           fsr0l	equ	0xFE9
  2413                           wreg	equ	0xFE8
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           indf2	equ	0xFDF
  2417                           postinc2	equ	0xFDE
  2418                           postdec2	equ	0xFDD
  2419                           fsr2h	equ	0xFDA
  2420                           fsr2l	equ	0xFD9
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function i2_tx_sends *****************
  2424 ;; Defined at:
  2425 ;;		line 45 in file "../My_header\My_UART_18F.h"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  asciicode       2    6[COMRAM] PTR unsigned char 
  2428 ;;		 -> STR_4(6), STR_1(8), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  tx_sends        1   10[COMRAM] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;		None               void
  2433 ;; Registers used:
  2434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;Total ram usage:        5 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    1
  2447 ;; This function calls:
  2448 ;;		i2_ringbuf_push
  2449 ;; This function is called by:
  2450 ;;		_ISR
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text20
  2455  001394                     __ptext20:
  2456                           	opt stack 0
  2457  001394                     i2_tx_sends:
  2458                           	opt stack 22
  2459                           
  2460                           ;My_header\My_UART_18F.h: 46: uint8_t i;
  2461                           ;My_header\My_UART_18F.h: 47: for (i = 0; asciicode[i]; i++) {
  2462                           
  2463                           ;incstack = 0
  2464  001394  0E00               	movlw	0
  2465  001396  6E0B               	movwf	i2tx_sends@i,c
  2466  001398  D018               	goto	i2l1141
  2467  00139A                     i2l1137:
  2468                           
  2469                           ;My_header\My_UART_18F.h: 48: ringbuf_push(&tx_buf, asciicode[i]);
  2470  00139A  0E00               	movlw	high _tx_buf
  2471  00139C  6E02               	movwf	i2ringbuf_push@rb+1,c
  2472  00139E  0E26               	movlw	low _tx_buf
  2473  0013A0  6E01               	movwf	i2ringbuf_push@rb,c
  2474  0013A2  500B               	movf	i2tx_sends@i,w,c
  2475  0013A4  0D01               	mullw	1
  2476  0013A6  C007  F009         	movff	i2tx_sends@asciicode,??i2_tx_sends
  2477  0013AA  C008  F00A         	movff	i2tx_sends@asciicode+1,??i2_tx_sends+1
  2478  0013AE  50F3               	movf	prodl,w,c
  2479  0013B0  2609               	addwf	??i2_tx_sends,f,c
  2480  0013B2  50F4               	movf	prodh,w,c
  2481  0013B4  220A               	addwfc	??i2_tx_sends+1,f,c
  2482  0013B6  C009  FFF6         	movff	??i2_tx_sends,tblptrl
  2483  0013BA  C00A  FFF7         	movff	??i2_tx_sends+1,tblptrh
  2484  0013BE                     	if	0	;tblptru may be non-zero
  2485  0013BE                     	endif
  2486  0013BE                     	if	0	;tblptru may be non-zero
  2487  0013BE                     	endif
  2488  0013BE  0008               	tblrd		*
  2489  0013C0  CFF5 F003          	movff	tablat,i2ringbuf_push@asciicode
  2490  0013C4  EC5E  F009         	call	i2_ringbuf_push	;wreg free
  2491  0013C8  2A0B               	incf	i2tx_sends@i,f,c
  2492  0013CA                     i2l1141:
  2493  0013CA  500B               	movf	i2tx_sends@i,w,c
  2494  0013CC  0D01               	mullw	1
  2495  0013CE  C007  F009         	movff	i2tx_sends@asciicode,??i2_tx_sends
  2496  0013D2  C008  F00A         	movff	i2tx_sends@asciicode+1,??i2_tx_sends+1
  2497  0013D6  50F3               	movf	prodl,w,c
  2498  0013D8  2609               	addwf	??i2_tx_sends,f,c
  2499  0013DA  50F4               	movf	prodh,w,c
  2500  0013DC  220A               	addwfc	??i2_tx_sends+1,f,c
  2501  0013DE  C009  FFF6         	movff	??i2_tx_sends,tblptrl
  2502  0013E2  C00A  FFF7         	movff	??i2_tx_sends+1,tblptrh
  2503  0013E6                     	if	0	;tblptru may be non-zero
  2504  0013E6                     	endif
  2505  0013E6                     	if	0	;tblptru may be non-zero
  2506  0013E6                     	endif
  2507  0013E6  0008               	tblrd		*
  2508  0013E8  50F5               	movf	tablat,w,c
  2509  0013EA  0900               	iorlw	0
  2510  0013EC  A4D8               	btfss	status,2,c
  2511  0013EE  D7D5               	goto	i2l1137
  2512                           
  2513                           ;My_header\My_UART_18F.h: 49: }
  2514                           ;My_header\My_UART_18F.h: 50: PIE1bits.TX1IE = 1;
  2515  0013F0  889D               	bsf	3997,4,c	;volatile
  2516  0013F2  0012               	return	
  2517  0013F4                     __end_ofi2_tx_sends:
  2518                           	opt stack 0
  2519                           pclatu	equ	0xFFB
  2520                           pclath	equ	0xFFA
  2521                           tblptru	equ	0xFF8
  2522                           tblptrh	equ	0xFF7
  2523                           tblptrl	equ	0xFF6
  2524                           tablat	equ	0xFF5
  2525                           prodh	equ	0xFF4
  2526                           prodl	equ	0xFF3
  2527                           intcon	equ	0xFF2
  2528                           intcon2	equ	0xFF1
  2529                           postinc0	equ	0xFEE
  2530                           fsr0h	equ	0xFEA
  2531                           fsr0l	equ	0xFE9
  2532                           wreg	equ	0xFE8
  2533                           fsr1h	equ	0xFE2
  2534                           fsr1l	equ	0xFE1
  2535                           indf2	equ	0xFDF
  2536                           postinc2	equ	0xFDE
  2537                           postdec2	equ	0xFDD
  2538                           fsr2h	equ	0xFDA
  2539                           fsr2l	equ	0xFD9
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _tx_send *****************
  2543 ;; Defined at:
  2544 ;;		line 40 in file "../My_header\My_UART_18F.h"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  asciicode       1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  asciicode       1    6[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    1
  2565 ;; This function calls:
  2566 ;;		i2_ringbuf_push
  2567 ;; This function is called by:
  2568 ;;		_ISR
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text21
  2573  0016E2                     __ptext21:
  2574                           	opt stack 0
  2575  0016E2                     _tx_send:
  2576                           	opt stack 22
  2577                           
  2578                           ;incstack = 0
  2579                           ;tx_send@asciicode stored from wreg
  2580  0016E2  6E07               	movwf	tx_send@asciicode,c
  2581                           
  2582                           ;My_header\My_UART_18F.h: 41: ringbuf_push(&tx_buf, asciicode);
  2583  0016E4  0E00               	movlw	high _tx_buf
  2584  0016E6  6E02               	movwf	i2ringbuf_push@rb+1,c
  2585  0016E8  0E26               	movlw	low _tx_buf
  2586  0016EA  6E01               	movwf	i2ringbuf_push@rb,c
  2587  0016EC  C007  F003         	movff	tx_send@asciicode,i2ringbuf_push@asciicode
  2588  0016F0  EC5E  F009         	call	i2_ringbuf_push	;wreg free
  2589                           
  2590                           ;My_header\My_UART_18F.h: 42: PIE1bits.TX1IE = 1;
  2591  0016F4  889D               	bsf	3997,4,c	;volatile
  2592  0016F6  0012               	return	
  2593  0016F8                     __end_of_tx_send:
  2594                           	opt stack 0
  2595                           pclatu	equ	0xFFB
  2596                           pclath	equ	0xFFA
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon	equ	0xFF2
  2604                           intcon2	equ	0xFF1
  2605                           postinc0	equ	0xFEE
  2606                           fsr0h	equ	0xFEA
  2607                           fsr0l	equ	0xFE9
  2608                           wreg	equ	0xFE8
  2609                           fsr1h	equ	0xFE2
  2610                           fsr1l	equ	0xFE1
  2611                           indf2	equ	0xFDF
  2612                           postinc2	equ	0xFDE
  2613                           postdec2	equ	0xFDD
  2614                           fsr2h	equ	0xFDA
  2615                           fsr2l	equ	0xFD9
  2616                           status	equ	0xFD8
  2617                           
  2618 ;; *************** function i2_ringbuf_push *****************
  2619 ;; Defined at:
  2620 ;;		line 29 in file "../My_header\My_ringbuf.h"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  2623 ;;		 -> tx_buf(5), 
  2624 ;;  asciicode       1    2[COMRAM] unsigned char 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;		None               void
  2629 ;; Registers used:
  2630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2636 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2640 ;;Total ram usage:        6 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_tx_send
  2646 ;;		i2_tx_sends
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           	psect	text22
  2651  0012BC                     __ptext22:
  2652                           	opt stack 0
  2653  0012BC                     i2_ringbuf_push:
  2654                           	opt stack 22
  2655                           
  2656                           ;My_header\My_ringbuf.h: 30: rb->buf[rb->head] = asciicode;
  2657                           
  2658                           ;incstack = 0
  2659  0012BC  EE20 F003          	lfsr	2,3
  2660  0012C0  5001               	movf	i2ringbuf_push@rb,w,c
  2661  0012C2  26D9               	addwf	fsr2l,f,c
  2662  0012C4  5002               	movf	i2ringbuf_push@rb+1,w,c
  2663  0012C6  22DA               	addwfc	fsr2h,f,c
  2664  0012C8  50DF               	movf	indf2,w,c
  2665  0012CA  6E04               	movwf	??i2_ringbuf_push& (0+255),c
  2666  0012CC  5004               	movf	??i2_ringbuf_push,w,c
  2667  0012CE  0D01               	mullw	1
  2668  0012D0  C001  FFD9         	movff	i2ringbuf_push@rb,fsr2l
  2669  0012D4  C002  FFDA         	movff	i2ringbuf_push@rb+1,fsr2h
  2670  0012D8  CFDE F005          	movff	postinc2,??i2_ringbuf_push+1
  2671  0012DC  CFDD F006          	movff	postdec2,??i2_ringbuf_push+2
  2672  0012E0  50F3               	movf	prodl,w,c
  2673  0012E2  2405               	addwf	??i2_ringbuf_push+1,w,c
  2674  0012E4  6ED9               	movwf	fsr2l,c
  2675  0012E6  50F4               	movf	prodh,w,c
  2676  0012E8  2006               	addwfc	??i2_ringbuf_push+2,w,c
  2677  0012EA  6EDA               	movwf	fsr2h,c
  2678  0012EC  C003  FFDF         	movff	i2ringbuf_push@asciicode,indf2
  2679                           
  2680                           ;My_header\My_ringbuf.h: 31: rb->head++;
  2681  0012F0  EE20 F003          	lfsr	2,3
  2682  0012F4  5001               	movf	i2ringbuf_push@rb,w,c
  2683  0012F6  26D9               	addwf	fsr2l,f,c
  2684  0012F8  5002               	movf	i2ringbuf_push@rb+1,w,c
  2685  0012FA  22DA               	addwfc	fsr2h,f,c
  2686  0012FC  2ADF               	incf	indf2,f,c
  2687                           
  2688                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->size) {
  2689  0012FE  EE20 F003          	lfsr	2,3
  2690  001302  5001               	movf	i2ringbuf_push@rb,w,c
  2691  001304  26D9               	addwf	fsr2l,f,c
  2692  001306  5002               	movf	i2ringbuf_push@rb+1,w,c
  2693  001308  22DA               	addwfc	fsr2h,f,c
  2694  00130A  50DF               	movf	indf2,w,c
  2695  00130C  6E04               	movwf	??i2_ringbuf_push& (0+255),c
  2696  00130E  EE20 F002          	lfsr	2,2
  2697  001312  5001               	movf	i2ringbuf_push@rb,w,c
  2698  001314  26D9               	addwf	fsr2l,f,c
  2699  001316  5002               	movf	i2ringbuf_push@rb+1,w,c
  2700  001318  22DA               	addwfc	fsr2h,f,c
  2701  00131A  50DF               	movf	indf2,w,c
  2702  00131C  5C04               	subwf	??i2_ringbuf_push,w,c
  2703  00131E  A0D8               	btfss	status,0,c
  2704  001320  0012               	return	
  2705                           
  2706                           ;My_header\My_ringbuf.h: 33: rb->head = 0;
  2707  001322  EE20 F003          	lfsr	2,3
  2708  001326  5001               	movf	i2ringbuf_push@rb,w,c
  2709  001328  26D9               	addwf	fsr2l,f,c
  2710  00132A  5002               	movf	i2ringbuf_push@rb+1,w,c
  2711  00132C  22DA               	addwfc	fsr2h,f,c
  2712  00132E  0E00               	movlw	0
  2713  001330  6EDF               	movwf	indf2,c
  2714  001332  0012               	return	
  2715  001334                     __end_ofi2_ringbuf_push:
  2716                           	opt stack 0
  2717                           pclatu	equ	0xFFB
  2718                           pclath	equ	0xFFA
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodh	equ	0xFF4
  2724                           prodl	equ	0xFF3
  2725                           intcon	equ	0xFF2
  2726                           intcon2	equ	0xFF1
  2727                           postinc0	equ	0xFEE
  2728                           fsr0h	equ	0xFEA
  2729                           fsr0l	equ	0xFE9
  2730                           wreg	equ	0xFE8
  2731                           fsr1h	equ	0xFE2
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           postinc2	equ	0xFDE
  2735                           postdec2	equ	0xFDD
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _interrupt_TXIF *****************
  2741 ;; Defined at:
  2742 ;;		line 53 in file "../My_header\My_UART_18F.h"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    1
  2763 ;; This function calls:
  2764 ;;		_ringbuf_num
  2765 ;;		_ringbuf_pop
  2766 ;; This function is called by:
  2767 ;;		_ISR
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text23
  2772  001554                     __ptext23:
  2773                           	opt stack 0
  2774  001554                     _interrupt_TXIF:
  2775                           	opt stack 22
  2776                           
  2777                           ;My_header\My_UART_18F.h: 54: if (PIE1bits.TX1IE && PIR1bits.TX1IF) {
  2778                           
  2779                           ;incstack = 0
  2780  001554  A89D               	btfss	3997,4,c	;volatile
  2781  001556  0012               	return	
  2782  001558  A89E               	btfss	3998,4,c	;volatile
  2783  00155A  0012               	return	
  2784                           
  2785                           ;My_header\My_UART_18F.h: 55: PIR1bits.TX1IF = 0;
  2786  00155C  989E               	bcf	3998,4,c	;volatile
  2787                           
  2788                           ;My_header\My_UART_18F.h: 56: if (ringbuf_num(&tx_buf) > 0) {
  2789  00155E  0E00               	movlw	high _tx_buf
  2790  001560  6E02               	movwf	ringbuf_num@rb+1,c
  2791  001562  0E26               	movlw	low _tx_buf
  2792  001564  6E01               	movwf	ringbuf_num@rb,c
  2793  001566  ECA6  F008         	call	_ringbuf_num	;wreg free
  2794  00156A  0900               	iorlw	0
  2795  00156C  B4D8               	btfsc	status,2,c
  2796  00156E  D008               	goto	i2l145
  2797                           
  2798                           ;My_header\My_UART_18F.h: 57: TXREG1 = ringbuf_pop(&tx_buf);
  2799  001570  0E00               	movlw	high _tx_buf
  2800  001572  6E02               	movwf	ringbuf_pop@rb+1,c
  2801  001574  0E26               	movlw	low _tx_buf
  2802  001576  6E01               	movwf	ringbuf_pop@rb,c
  2803  001578  ECE5  F008         	call	_ringbuf_pop	;wreg free
  2804  00157C  6EAE               	movwf	4014,c	;volatile
  2805                           
  2806                           ;My_header\My_UART_18F.h: 58: } else {
  2807  00157E  0012               	return	
  2808  001580                     i2l145:
  2809                           
  2810                           ;My_header\My_UART_18F.h: 59: PIE1bits.TX1IE = 0;
  2811  001580  989D               	bcf	3997,4,c	;volatile
  2812  001582  0012               	return	
  2813  001584                     __end_of_interrupt_TXIF:
  2814                           	opt stack 0
  2815                           pclatu	equ	0xFFB
  2816                           pclath	equ	0xFFA
  2817                           tblptru	equ	0xFF8
  2818                           tblptrh	equ	0xFF7
  2819                           tblptrl	equ	0xFF6
  2820                           tablat	equ	0xFF5
  2821                           prodh	equ	0xFF4
  2822                           prodl	equ	0xFF3
  2823                           intcon	equ	0xFF2
  2824                           intcon2	equ	0xFF1
  2825                           postinc0	equ	0xFEE
  2826                           fsr0h	equ	0xFEA
  2827                           fsr0l	equ	0xFE9
  2828                           wreg	equ	0xFE8
  2829                           fsr1h	equ	0xFE2
  2830                           fsr1l	equ	0xFE1
  2831                           indf2	equ	0xFDF
  2832                           postinc2	equ	0xFDE
  2833                           postdec2	equ	0xFDD
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _ringbuf_pop *****************
  2839 ;; Defined at:
  2840 ;;		line 37 in file "../My_header\My_ringbuf.h"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  2843 ;;		 -> tx_buf(5), 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  ret             1    5[COMRAM] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      unsigned char 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;Total ram usage:        6 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_interrupt_TXIF
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text24
  2869  0011CA                     __ptext24:
  2870                           	opt stack 0
  2871  0011CA                     _ringbuf_pop:
  2872                           	opt stack 22
  2873                           
  2874                           ;My_header\My_ringbuf.h: 38: uint8_t ret = rb->buf[rb->tail];
  2875                           
  2876                           ;incstack = 0
  2877  0011CA  EE20 F004          	lfsr	2,4
  2878  0011CE  5001               	movf	ringbuf_pop@rb,w,c
  2879  0011D0  26D9               	addwf	fsr2l,f,c
  2880  0011D2  5002               	movf	ringbuf_pop@rb+1,w,c
  2881  0011D4  22DA               	addwfc	fsr2h,f,c
  2882  0011D6  50DF               	movf	indf2,w,c
  2883  0011D8  6E03               	movwf	??_ringbuf_pop& (0+255),c
  2884  0011DA  5003               	movf	??_ringbuf_pop,w,c
  2885  0011DC  0D01               	mullw	1
  2886  0011DE  C001  FFD9         	movff	ringbuf_pop@rb,fsr2l
  2887  0011E2  C002  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
  2888  0011E6  CFDE F004          	movff	postinc2,??_ringbuf_pop+1
  2889  0011EA  CFDD F005          	movff	postdec2,??_ringbuf_pop+2
  2890  0011EE  50F3               	movf	prodl,w,c
  2891  0011F0  2404               	addwf	??_ringbuf_pop+1,w,c
  2892  0011F2  6ED9               	movwf	fsr2l,c
  2893  0011F4  50F4               	movf	prodh,w,c
  2894  0011F6  2005               	addwfc	??_ringbuf_pop+2,w,c
  2895  0011F8  6EDA               	movwf	fsr2h,c
  2896  0011FA  50DF               	movf	indf2,w,c
  2897  0011FC  6E06               	movwf	ringbuf_pop@ret,c
  2898                           
  2899                           ;My_header\My_ringbuf.h: 39: rb->tail++;
  2900  0011FE  EE20 F004          	lfsr	2,4
  2901  001202  5001               	movf	ringbuf_pop@rb,w,c
  2902  001204  26D9               	addwf	fsr2l,f,c
  2903  001206  5002               	movf	ringbuf_pop@rb+1,w,c
  2904  001208  22DA               	addwfc	fsr2h,f,c
  2905  00120A  2ADF               	incf	indf2,f,c
  2906                           
  2907                           ;My_header\My_ringbuf.h: 40: if (rb->tail >= rb->size) {
  2908  00120C  EE20 F004          	lfsr	2,4
  2909  001210  5001               	movf	ringbuf_pop@rb,w,c
  2910  001212  26D9               	addwf	fsr2l,f,c
  2911  001214  5002               	movf	ringbuf_pop@rb+1,w,c
  2912  001216  22DA               	addwfc	fsr2h,f,c
  2913  001218  50DF               	movf	indf2,w,c
  2914  00121A  6E03               	movwf	??_ringbuf_pop& (0+255),c
  2915  00121C  EE20 F002          	lfsr	2,2
  2916  001220  5001               	movf	ringbuf_pop@rb,w,c
  2917  001222  26D9               	addwf	fsr2l,f,c
  2918  001224  5002               	movf	ringbuf_pop@rb+1,w,c
  2919  001226  22DA               	addwfc	fsr2h,f,c
  2920  001228  50DF               	movf	indf2,w,c
  2921  00122A  5C03               	subwf	??_ringbuf_pop,w,c
  2922  00122C  A0D8               	btfss	status,0,c
  2923  00122E  D008               	goto	i2l927
  2924                           
  2925                           ;My_header\My_ringbuf.h: 41: rb->tail = 0;
  2926  001230  EE20 F004          	lfsr	2,4
  2927  001234  5001               	movf	ringbuf_pop@rb,w,c
  2928  001236  26D9               	addwf	fsr2l,f,c
  2929  001238  5002               	movf	ringbuf_pop@rb+1,w,c
  2930  00123A  22DA               	addwfc	fsr2h,f,c
  2931  00123C  0E00               	movlw	0
  2932  00123E  6EDF               	movwf	indf2,c
  2933  001240                     i2l927:
  2934                           
  2935                           ;My_header\My_ringbuf.h: 42: }
  2936                           ;My_header\My_ringbuf.h: 43: return ret;
  2937  001240  5006               	movf	ringbuf_pop@ret,w,c
  2938  001242  0012               	return	
  2939  001244                     __end_of_ringbuf_pop:
  2940                           	opt stack 0
  2941                           pclatu	equ	0xFFB
  2942                           pclath	equ	0xFFA
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodh	equ	0xFF4
  2948                           prodl	equ	0xFF3
  2949                           intcon	equ	0xFF2
  2950                           intcon2	equ	0xFF1
  2951                           postinc0	equ	0xFEE
  2952                           fsr0h	equ	0xFEA
  2953                           fsr0l	equ	0xFE9
  2954                           wreg	equ	0xFE8
  2955                           fsr1h	equ	0xFE2
  2956                           fsr1l	equ	0xFE1
  2957                           indf2	equ	0xFDF
  2958                           postinc2	equ	0xFDE
  2959                           postdec2	equ	0xFDD
  2960                           fsr2h	equ	0xFDA
  2961                           fsr2l	equ	0xFD9
  2962                           status	equ	0xFD8
  2963                           
  2964 ;; *************** function _ringbuf_num *****************
  2965 ;; Defined at:
  2966 ;;		line 46 in file "../My_header\My_ringbuf.h"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  rb              2    0[COMRAM] PTR struct ringbuf
  2969 ;;		 -> tx_buf(5), 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      unsigned char 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;Total ram usage:        4 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_interrupt_TXIF
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text25
  2995  00114C                     __ptext25:
  2996                           	opt stack 0
  2997  00114C                     _ringbuf_num:
  2998                           	opt stack 22
  2999                           
  3000                           ;My_header\My_ringbuf.h: 47: if (rb->head >= rb->tail) {
  3001                           
  3002                           ;incstack = 0
  3003  00114C  EE20 F003          	lfsr	2,3
  3004  001150  5001               	movf	ringbuf_num@rb,w,c
  3005  001152  26D9               	addwf	fsr2l,f,c
  3006  001154  5002               	movf	ringbuf_num@rb+1,w,c
  3007  001156  22DA               	addwfc	fsr2h,f,c
  3008  001158  50DF               	movf	indf2,w,c
  3009  00115A  6E03               	movwf	??_ringbuf_num& (0+255),c
  3010  00115C  EE20 F004          	lfsr	2,4
  3011  001160  5001               	movf	ringbuf_num@rb,w,c
  3012  001162  26D9               	addwf	fsr2l,f,c
  3013  001164  5002               	movf	ringbuf_num@rb+1,w,c
  3014  001166  22DA               	addwfc	fsr2h,f,c
  3015  001168  50DF               	movf	indf2,w,c
  3016  00116A  5C03               	subwf	??_ringbuf_num,w,c
  3017  00116C  A0D8               	btfss	status,0,c
  3018  00116E  D012               	goto	i2l939
  3019                           
  3020                           ;My_header\My_ringbuf.h: 48: return (rb->head - rb->tail);
  3021  001170  EE20 F003          	lfsr	2,3
  3022  001174  5001               	movf	ringbuf_num@rb,w,c
  3023  001176  26D9               	addwf	fsr2l,f,c
  3024  001178  5002               	movf	ringbuf_num@rb+1,w,c
  3025  00117A  22DA               	addwfc	fsr2h,f,c
  3026  00117C  50DF               	movf	indf2,w,c
  3027  00117E  6E03               	movwf	??_ringbuf_num& (0+255),c
  3028  001180  EE20 F004          	lfsr	2,4
  3029  001184  5001               	movf	ringbuf_num@rb,w,c
  3030  001186  26D9               	addwf	fsr2l,f,c
  3031  001188  5002               	movf	ringbuf_num@rb+1,w,c
  3032  00118A  22DA               	addwfc	fsr2h,f,c
  3033  00118C  50DF               	movf	indf2,w,c
  3034  00118E  0800               	sublw	0
  3035  001190  2403               	addwf	??_ringbuf_num,w,c
  3036  001192  0012               	return	
  3037  001194                     i2l939:
  3038                           
  3039                           ;My_header\My_ringbuf.h: 50: return (rb->size + rb->head - rb->tail);
  3040  001194  EE20 F003          	lfsr	2,3
  3041  001198  5001               	movf	ringbuf_num@rb,w,c
  3042  00119A  26D9               	addwf	fsr2l,f,c
  3043  00119C  5002               	movf	ringbuf_num@rb+1,w,c
  3044  00119E  22DA               	addwfc	fsr2h,f,c
  3045  0011A0  50DF               	movf	indf2,w,c
  3046  0011A2  6E03               	movwf	??_ringbuf_num& (0+255),c
  3047  0011A4  EE20 F002          	lfsr	2,2
  3048  0011A8  5001               	movf	ringbuf_num@rb,w,c
  3049  0011AA  26D9               	addwf	fsr2l,f,c
  3050  0011AC  5002               	movf	ringbuf_num@rb+1,w,c
  3051  0011AE  22DA               	addwfc	fsr2h,f,c
  3052  0011B0  50DF               	movf	indf2,w,c
  3053  0011B2  6E04               	movwf	(??_ringbuf_num+1)& (0+255),c
  3054  0011B4  EE20 F004          	lfsr	2,4
  3055  0011B8  5001               	movf	ringbuf_num@rb,w,c
  3056  0011BA  26D9               	addwf	fsr2l,f,c
  3057  0011BC  5002               	movf	ringbuf_num@rb+1,w,c
  3058  0011BE  22DA               	addwfc	fsr2h,f,c
  3059  0011C0  50DF               	movf	indf2,w,c
  3060  0011C2  0800               	sublw	0
  3061  0011C4  2404               	addwf	??_ringbuf_num+1,w,c
  3062  0011C6  2403               	addwf	??_ringbuf_num,w,c
  3063  0011C8  0012               	return	
  3064  0011CA                     __end_of_ringbuf_num:
  3065                           	opt stack 0
  3066                           pclatu	equ	0xFFB
  3067                           pclath	equ	0xFFA
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           intcon	equ	0xFF2
  3075                           intcon2	equ	0xFF1
  3076                           postinc0	equ	0xFEE
  3077                           fsr0h	equ	0xFEA
  3078                           fsr0l	equ	0xFE9
  3079                           wreg	equ	0xFE8
  3080                           fsr1h	equ	0xFE2
  3081                           fsr1l	equ	0xFE1
  3082                           indf2	equ	0xFDF
  3083                           postinc2	equ	0xFDE
  3084                           postdec2	equ	0xFDD
  3085                           fsr2h	equ	0xFDA
  3086                           fsr2l	equ	0xFD9
  3087                           status	equ	0xFD8
  3088                           
  3089 ;; *************** function _button_timer_interrupt *****************
  3090 ;; Defined at:
  3091 ;;		line 45 in file "../My_header\My_button.h"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  bt              2    0[COMRAM] PTR struct button
  3094 ;;		 -> sw(3), 
  3095 ;;  sw_value        1    2[COMRAM] unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;		None               void
  3100 ;; Registers used:
  3101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3107 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3110 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3111 ;;Total ram usage:        5 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_ISR
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text26
  3121  000F20                     __ptext26:
  3122                           	opt stack 0
  3123  000F20                     _button_timer_interrupt:
  3124                           	opt stack 23
  3125                           
  3126                           ;My_header\My_button.h: 46: if (sw_value) {
  3127                           
  3128                           ;incstack = 0
  3129  000F20  5003               	movf	button_timer_interrupt@sw_value,w,c
  3130  000F22  B4D8               	btfsc	status,2,c
  3131  000F24  D056               	goto	i2l1023
  3132                           
  3133                           ;My_header\My_button.h: 47: if (bt->cnt_sw < (48000000/32000000*200) + 1) bt->cnt_sw++;
  3134  000F26  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3135  000F2A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3136  000F2E  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3137  000F32  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3138  000F36  0EC9               	movlw	201
  3139  000F38  5C04               	subwf	??_button_timer_interrupt,w,c
  3140  000F3A  0E00               	movlw	0
  3141  000F3C  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3142  000F3E  B0D8               	btfsc	status,0,c
  3143  000F40  D007               	goto	i2l97
  3144  000F42  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3145  000F46  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3146  000F4A  2ADE               	incf	postinc2,f,c
  3147  000F4C  0E00               	movlw	0
  3148  000F4E  22DD               	addwfc	postdec2,f,c
  3149  000F50                     i2l97:
  3150                           
  3151                           ;My_header\My_button.h: 48: if (bt->cnt_sw == (48000000/32000000*200))bt->flag.long_hold
      +                          ing_3 = 1;
  3152  000F50  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3153  000F54  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3154  000F58  50DE               	movf	postinc2,w,c
  3155  000F5A  0AC8               	xorlw	200
  3156  000F5C  10DD               	iorwf	postdec2,w,c
  3157  000F5E  A4D8               	btfss	status,2,c
  3158  000F60  D007               	goto	i2l98
  3159  000F62  EE20 F002          	lfsr	2,2
  3160  000F66  5001               	movf	button_timer_interrupt@bt,w,c
  3161  000F68  26D9               	addwf	fsr2l,f,c
  3162  000F6A  5002               	movf	button_timer_interrupt@bt+1,w,c
  3163  000F6C  22DA               	addwfc	fsr2h,f,c
  3164  000F6E  8EDF               	bsf	indf2,7,c
  3165  000F70                     i2l98:
  3166                           
  3167                           ;My_header\My_button.h: 49: if (bt->cnt_sw == (48000000/32000000*80))bt->flag.long_holdi
      +                          ng_2 = 1;
  3168  000F70  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3169  000F74  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3170  000F78  50DE               	movf	postinc2,w,c
  3171  000F7A  0A50               	xorlw	80
  3172  000F7C  10DD               	iorwf	postdec2,w,c
  3173  000F7E  A4D8               	btfss	status,2,c
  3174  000F80  D007               	goto	i2l99
  3175  000F82  EE20 F002          	lfsr	2,2
  3176  000F86  5001               	movf	button_timer_interrupt@bt,w,c
  3177  000F88  26D9               	addwf	fsr2l,f,c
  3178  000F8A  5002               	movf	button_timer_interrupt@bt+1,w,c
  3179  000F8C  22DA               	addwfc	fsr2h,f,c
  3180  000F8E  8CDF               	bsf	indf2,6,c
  3181  000F90                     i2l99:
  3182                           
  3183                           ;My_header\My_button.h: 50: if (bt->cnt_sw == (48000000/32000000*20))bt->flag.long_holdi
      +                          ng_1 = 1;
  3184  000F90  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3185  000F94  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3186  000F98  50DE               	movf	postinc2,w,c
  3187  000F9A  0A14               	xorlw	20
  3188  000F9C  10DD               	iorwf	postdec2,w,c
  3189  000F9E  A4D8               	btfss	status,2,c
  3190  000FA0  D007               	goto	i2l100
  3191  000FA2  EE20 F002          	lfsr	2,2
  3192  000FA6  5001               	movf	button_timer_interrupt@bt,w,c
  3193  000FA8  26D9               	addwf	fsr2l,f,c
  3194  000FAA  5002               	movf	button_timer_interrupt@bt+1,w,c
  3195  000FAC  22DA               	addwfc	fsr2h,f,c
  3196  000FAE  8ADF               	bsf	indf2,5,c
  3197  000FB0                     i2l100:
  3198                           
  3199                           ;My_header\My_button.h: 51: if (bt->cnt_sw == (48000000/32000000*2))bt->flag.pressing = 
      +                          1;
  3200  000FB0  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3201  000FB4  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3202  000FB8  50DE               	movf	postinc2,w,c
  3203  000FBA  0A02               	xorlw	2
  3204  000FBC  10DD               	iorwf	postdec2,w,c
  3205  000FBE  A4D8               	btfss	status,2,c
  3206  000FC0  0012               	return	
  3207  000FC2  EE20 F002          	lfsr	2,2
  3208  000FC6  5001               	movf	button_timer_interrupt@bt,w,c
  3209  000FC8  26D9               	addwf	fsr2l,f,c
  3210  000FCA  5002               	movf	button_timer_interrupt@bt+1,w,c
  3211  000FCC  22DA               	addwfc	fsr2h,f,c
  3212  000FCE  88DF               	bsf	indf2,4,c
  3213  000FD0  0012               	return	
  3214  000FD2                     i2l1023:
  3215                           
  3216                           ;My_header\My_button.h: 53: if (bt->cnt_sw >= (48000000/32000000*200))bt->flag.long_hold
      +                          _3 = 1;
  3217  000FD2  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3218  000FD6  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3219  000FDA  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3220  000FDE  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3221  000FE2  0EC8               	movlw	200
  3222  000FE4  5C04               	subwf	??_button_timer_interrupt,w,c
  3223  000FE6  0E00               	movlw	0
  3224  000FE8  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3225  000FEA  A0D8               	btfss	status,0,c
  3226  000FEC  D008               	goto	i2l1027
  3227  000FEE  EE20 F002          	lfsr	2,2
  3228  000FF2  5001               	movf	button_timer_interrupt@bt,w,c
  3229  000FF4  26D9               	addwf	fsr2l,f,c
  3230  000FF6  5002               	movf	button_timer_interrupt@bt+1,w,c
  3231  000FF8  22DA               	addwfc	fsr2h,f,c
  3232  000FFA  86DF               	bsf	indf2,3,c
  3233  000FFC  D041               	goto	i2l1039
  3234  000FFE                     i2l1027:
  3235                           
  3236                           ;My_header\My_button.h: 54: else if (bt->cnt_sw >= (48000000/32000000*80))bt->flag.long_
      +                          hold_2 = 1;
  3237  000FFE  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3238  001002  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3239  001006  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3240  00100A  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3241  00100E  0E50               	movlw	80
  3242  001010  5C04               	subwf	??_button_timer_interrupt,w,c
  3243  001012  0E00               	movlw	0
  3244  001014  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3245  001016  A0D8               	btfss	status,0,c
  3246  001018  D008               	goto	i2l1031
  3247  00101A  EE20 F002          	lfsr	2,2
  3248  00101E  5001               	movf	button_timer_interrupt@bt,w,c
  3249  001020  26D9               	addwf	fsr2l,f,c
  3250  001022  5002               	movf	button_timer_interrupt@bt+1,w,c
  3251  001024  22DA               	addwfc	fsr2h,f,c
  3252  001026  84DF               	bsf	indf2,2,c
  3253  001028  D02B               	goto	i2l1039
  3254  00102A                     i2l1031:
  3255                           
  3256                           ;My_header\My_button.h: 55: else if (bt->cnt_sw >= (48000000/32000000*20))bt->flag.long_
      +                          hold_1 = 1;
  3257  00102A  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3258  00102E  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3259  001032  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3260  001036  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3261  00103A  0E14               	movlw	20
  3262  00103C  5C04               	subwf	??_button_timer_interrupt,w,c
  3263  00103E  0E00               	movlw	0
  3264  001040  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3265  001042  A0D8               	btfss	status,0,c
  3266  001044  D008               	goto	i2l1035
  3267  001046  EE20 F002          	lfsr	2,2
  3268  00104A  5001               	movf	button_timer_interrupt@bt,w,c
  3269  00104C  26D9               	addwf	fsr2l,f,c
  3270  00104E  5002               	movf	button_timer_interrupt@bt+1,w,c
  3271  001050  22DA               	addwfc	fsr2h,f,c
  3272  001052  82DF               	bsf	indf2,1,c
  3273  001054  D015               	goto	i2l1039
  3274  001056                     i2l1035:
  3275                           
  3276                           ;My_header\My_button.h: 56: else if (bt->cnt_sw >= (48000000/32000000*2))bt->flag.press 
      +                          = 1;
  3277  001056  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3278  00105A  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3279  00105E  CFDE F004          	movff	postinc2,??_button_timer_interrupt
  3280  001062  CFDD F005          	movff	postdec2,??_button_timer_interrupt+1
  3281  001066  0E02               	movlw	2
  3282  001068  5C04               	subwf	??_button_timer_interrupt,w,c
  3283  00106A  0E00               	movlw	0
  3284  00106C  5805               	subwfb	??_button_timer_interrupt+1,w,c
  3285  00106E  A0D8               	btfss	status,0,c
  3286  001070  D007               	goto	i2l1039
  3287  001072  EE20 F002          	lfsr	2,2
  3288  001076  5001               	movf	button_timer_interrupt@bt,w,c
  3289  001078  26D9               	addwf	fsr2l,f,c
  3290  00107A  5002               	movf	button_timer_interrupt@bt+1,w,c
  3291  00107C  22DA               	addwfc	fsr2h,f,c
  3292  00107E  80DF               	bsf	indf2,0,c
  3293  001080                     i2l1039:
  3294                           
  3295                           ;My_header\My_button.h: 57: bt->cnt_sw = 0;
  3296  001080  C001  FFD9         	movff	button_timer_interrupt@bt,fsr2l
  3297  001084  C002  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
  3298  001088  0E00               	movlw	0
  3299  00108A  6EDE               	movwf	postinc2,c
  3300  00108C  0E00               	movlw	0
  3301  00108E  6EDD               	movwf	postdec2,c
  3302                           
  3303                           ;My_header\My_button.h: 58: bt->flags &= 0x0F;
  3304  001090  EE20 F002          	lfsr	2,2
  3305  001094  5001               	movf	button_timer_interrupt@bt,w,c
  3306  001096  26D9               	addwf	fsr2l,f,c
  3307  001098  5002               	movf	button_timer_interrupt@bt+1,w,c
  3308  00109A  22DA               	addwfc	fsr2h,f,c
  3309  00109C  0E0F               	movlw	15
  3310  00109E  16DF               	andwf	indf2,f,c
  3311  0010A0  0012               	return	
  3312  0010A2                     __end_of_button_timer_interrupt:
  3313                           	opt stack 0
  3314                           pclatu	equ	0xFFB
  3315                           pclath	equ	0xFFA
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           intcon2	equ	0xFF1
  3324                           postinc0	equ	0xFEE
  3325                           fsr0h	equ	0xFEA
  3326                           fsr0l	equ	0xFE9
  3327                           wreg	equ	0xFE8
  3328                           fsr1h	equ	0xFE2
  3329                           fsr1l	equ	0xFE1
  3330                           indf2	equ	0xFDF
  3331                           postinc2	equ	0xFDE
  3332                           postdec2	equ	0xFDD
  3333                           fsr2h	equ	0xFDA
  3334                           fsr2l	equ	0xFD9
  3335                           status	equ	0xFD8
  3336                           pclatu	equ	0xFFB
  3337                           pclath	equ	0xFFA
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           intcon2	equ	0xFF1
  3346                           postinc0	equ	0xFEE
  3347                           fsr0h	equ	0xFEA
  3348                           fsr0l	equ	0xFE9
  3349                           wreg	equ	0xFE8
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           fsr2h	equ	0xFDA
  3356                           fsr2l	equ	0xFD9
  3357                           status	equ	0xFD8
  3358                           
  3359                           	psect	rparam
  3360  0000                     pclatu	equ	0xFFB
  3361                           pclath	equ	0xFFA
  3362                           tblptru	equ	0xFF8
  3363                           tblptrh	equ	0xFF7
  3364                           tblptrl	equ	0xFF6
  3365                           tablat	equ	0xFF5
  3366                           prodh	equ	0xFF4
  3367                           prodl	equ	0xFF3
  3368                           intcon	equ	0xFF2
  3369                           intcon2	equ	0xFF1
  3370                           postinc0	equ	0xFEE
  3371                           fsr0h	equ	0xFEA
  3372                           fsr0l	equ	0xFE9
  3373                           wreg	equ	0xFE8
  3374                           fsr1h	equ	0xFE2
  3375                           fsr1l	equ	0xFE1
  3376                           indf2	equ	0xFDF
  3377                           postinc2	equ	0xFDE
  3378                           postdec2	equ	0xFDD
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8


Data Sizes:
    Strings     29
    Constant    0
    Data        2
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      47
    BANK0           160      0       0
    BANK1           256    200     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[7]), 

    tx_sends@asciicode	PTR unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[6]), STR_1(CODE[8]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    ringbuf_push@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_push@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    S496ringbuf$buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 200
		 -> main@txbuf(BANK1[200]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 6
		 -> tx_buf(COMRAM[5]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 3
		 -> sw(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_tx_sends
    _tx_sends->_ringbuf_push
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_LCD_Puts->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck

Critical Paths under _ISR in COMRAM

    _ISR->i2_tx_sends
    i2_tx_sends->i2_ringbuf_push
    _tx_send->i2_ringbuf_push
    _interrupt_TXIF->_ringbuf_pop

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0    6389
                                              0 BANK1    200   200      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                       _I2C_LCD_init
                           _I2C_init
                          _UART_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
                           _tx_sends
 ---------------------------------------------------------------------------------
 (1) _tx_sends                                             5     3      2     564
                                             32 COMRAM     5     3      2
                       _ringbuf_push
 ---------------------------------------------------------------------------------
 (2) _ringbuf_push                                         6     3      3     371
                                             26 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _timer3_init                                          2     2      0      15
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          3     2      1     121
                                             26 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          2     2      0      30
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ringbuf_init                                         5     0      5     318
                                             26 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            1     1      0      15
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_init                                         0     0      0    2079
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     956
                                             32 COMRAM     1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             3     1      2     167
                                             26 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_SetCursor                                    4     3      1    1153
                                             32 COMRAM     4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Command                                      2     2      0     956
                                             30 COMRAM     2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_Puts                                         5     3      2    1123
                                             30 COMRAM     5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0      15
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            2     1      1     881
                                             28 COMRAM     2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (3) _I2C_Send                                             1     1      0      30
                                             28 COMRAM     1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_IdleCheck                                        2     2      0      15
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 15    15      0    1300
                                             11 COMRAM    15    15      0
             _button_timer_interrupt
                     _interrupt_TXIF
                            _tx_send
                         i2_tx_sends
 ---------------------------------------------------------------------------------
 (7) i2_tx_sends                                           5     3      2     260
                                              6 COMRAM     5     3      2
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (7) _tx_send                                              1     1      0     196
                                              6 COMRAM     1     1      0
                     i2_ringbuf_push
 ---------------------------------------------------------------------------------
 (8) i2_ringbuf_push                                       6     3      3     181
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _interrupt_TXIF                                       0     0      0     362
                        _ringbuf_num
                        _ringbuf_pop
 ---------------------------------------------------------------------------------
 (8) _ringbuf_pop                                          6     4      2     181
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ringbuf_num                                          4     2      2     181
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _button_timer_interrupt                               5     2      3     467
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_LCD_Clear
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_Puts
     _I2C_Send
       _I2C_IdleCheck
     _I2C_Start
       _I2C_IdleCheck
     _I2C_Stop
       _I2C_IdleCheck
   _I2C_LCD_SetCursor
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_LCD_init
     _Delay_ms
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Command
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
   _I2C_init
   _UART_init
   _ringbuf_init
   _timer0_init
   _timer1_init
   _timer3_init
   _tx_sends
     _ringbuf_push

 _ISR (ROOT)
   _button_timer_interrupt
   _interrupt_TXIF
     _ringbuf_num
     _ringbuf_pop
   _tx_send
     i2_ringbuf_push
   i2_tx_sends
     i2_ringbuf_push

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     C8      C8       8       78.1%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      2F       1       49.5%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7       6        0.0%
DATA                 0      0      F7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 11 16:17:42 2015

             __size_of_I2C_Start 002A                               l82 14BE  
                             l77 1594                               u30 1602  
                             _sw 002B           __end_of_interrupt_TXIF 1584  
                   __CFG_CP0$OFF 000000                              l174 16C4  
                            l159 15F6                              l183 15D0  
                            l907 167C                              l909 168C  
                            l963 15A8                              l869 16CE  
                            l975 14C0                              _ISR 0008  
                            u547 16AA                              u557 1682  
                            u567 15D6                              u577 1480  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     _I2C_LCD_Puts 1448  
              ??_I2C_LCD_Command 001F                             ?_ISR 0001  
                   _I2C_LCD_init 13F4                             l1123 146A  
                           l1131 1496                             l1129 1484  
                           l1065 133A                             l1069 136A  
                           l1309 1136               __CFG_WPFP$PAGE_127 000000  
                           STR_1 0F01                             STR_2 0F11  
                           STR_3 0F09                             STR_4 0F18  
                           i2l97 0F50                             i2l98 0F70  
                           i2l99 0F90                             _main 10A2  
       button_timer_interrupt@bt 0001                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
               __end_of_I2C_Send 16CC           __CFG_DSWDTOSC$T1OSCREF 000000  
               __end_of_I2C_Stop 1714                             pclat 000FFA  
               __end_of_I2C_init 170A                             prodh 000FF4  
                           prodl 000FF3                             start 00C6  
                  __CFG_IESO$OFF 000000                    _I2C_LCD_Clear 169E  
                          ??_ISR 000C           __size_of_I2C_IdleCheck 0016  
                  __CFG_PLLDIV$2 000000                     _BAUDCON1bits 000F7E  
                ?_interrupt_TXIF 0001                       i2_tx_sends 1394  
                 i2_ringbuf_push 12BC                            ?_main 0001  
                          _LATB0 007C50                            i2l100 0FB0  
                          i2l145 1580                            i2l252 008C  
                          i2l927 1240                            i2l939 1194  
                          _TMR1H 000FCF                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                 __CFG_FCMEN$OFF 000000               __size_of_UART_init 0028  
          ringbuf_push@asciicode 001D                __end_of_I2C_Start 1606  
                          tablat 000FF5            UART_init@interrupt_ON 001B  
                          status 000FD8                  __end_of_tx_send 16F8  
               __end_of_Delay_ms 169E                   ?_I2C_LCD_Clear 0001  
                __initialization 1522                     __end_of_main 114C  
            ringbuf_init@bufsize 001F           __end_ofi2_ringbuf_push 1334  
                         ??_main 0026                    __activetblptr 000001  
                         _BCL1IF 007D0B                    _I2C_IdleCheck 16CC  
              _I2C_LCD_SetCursor 1654                           _ANCON0 000F48  
                         _ANCON1 000F49               I2C_LCD_Command@ans 0020  
                         i2l1031 102A                           i2l1023 0FD2  
                         i2l1035 1056                           i2l1027 0FFE  
                         i2l1141 13CA                           i2l1039 1080  
                         i2l1137 139A                           i2l1261 0054  
                         i2l1271 006E                   __CFG_WDTEN$OFF 000000  
             ?_I2C_LCD_SetCursor 0021                           _RCREG1 000FAF  
                         _SPBRG1 000FB0                           _SSP1IF 007CF3  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                 __CFG_WPDIS$OFF 000000              ??_I2C_LCD_SetCursor 0022  
                 __CFG_XINST$OFF 000000                     ?_ringbuf_pop 0001  
                   ?_ringbuf_num 0001                __end_of_UART_init 162E  
                   ?_timer0_init 0001                     ?_timer1_init 001B  
                   ?_timer3_init 0001                  ?i2_ringbuf_push 0001  
                         clear_0 1528                  __CFG_CLKOEC$OFF 000000  
                    ?i2_tx_sends 0007                           _tx_buf 0026  
                   __pdataCOMRAM 002E                        ?_I2C_Send 0001  
                      ?_I2C_Stop 0001                     __mediumconst 0000  
                      ?_I2C_init 0001        __end_of_I2C_LCD_SetCursor 167A  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                   ?_I2C_IdleCheck 0001  
                      ??_tx_send 0007                 __end_of_tx_sends 1394  
           __CFG_LS48MHZ$SYS48X8 000000                       __accesstop 0060  
        __end_of__initialization 1546                  ??_I2C_LCD_Clear 0021  
           __CFG_WPEND$PAGE_WPFP 000000                   __pcstackCOMRAM 0001  
                __CFG_DSWDTPS$G2 000000                  _I2C_LCD_Command 15B2  
               I2C_LCD_Command@c 001F                       ??_I2C_Send 001D  
                     ??_I2C_Stop 001D                       ??_I2C_init 001B  
                      ?_Delay_ms 001B          i2ringbuf_push@asciicode 0003  
            __size_ofi2_tx_sends 0060                      i2tx_sends@i 000B  
               ??_interrupt_TXIF 0007             I2C_LCD_SetCursor@col 0024  
           I2C_LCD_SetCursor@row 0021                     I2C_Send@data 001D  
             __CFG_OSC$INTOSCPLL 000000                  ??_I2C_IdleCheck 001B  
                     ??_Delay_ms 001D       __size_of_I2C_LCD_SetCursor 0026  
                        i2u52_40 0084           I2C_LCD_SetCursor@F9792 002E  
                        i2u52_46 0086                          _SPBRGH1 000F7F  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
           timer1_init@prescaler 001D                 __CFG_CFGPLLEN$ON 000000  
       ??_button_timer_interrupt 0004                 i2ringbuf_push@rb 0001  
                      _I2C_Start 15DC                          __Hparam 0000  
                        __Lparam 0000          __end_of_I2C_LCD_Command 15DC  
                  ?_ringbuf_init 001B                    ?_ringbuf_push 001B  
                   __psmallconst 0F00             __size_of_ringbuf_pop 007A  
           __size_of_ringbuf_num 007E                  __CFG_STVREN$OFF 000000  
                        __pcinit 1522                        ?_tx_sends 0021  
                        __ramtop 0F00             __size_of_timer0_init 002E  
           __size_of_timer1_init 0044                          __ptext0 10A2  
                        __ptext1 1334                          __ptext2 1244  
                        __ptext3 162E                          __ptext4 149C  
                        __ptext5 1584                          __ptext6 14E0  
                        __ptext7 1606                          __ptext8 16F8  
                        __ptext9 13F4             __size_of_timer3_init 0026  
                  I2C_LCD_Puts@s 001F                        _T0CONbits 000FD5  
                   __size_of_ISR 00BE                        _T1CONbits 000FCD  
                      _T3CONbits 000F79                          _tx_send 16E2  
           end_of_initialization 1546                       ?_I2C_Start 001D  
           timer3_init@prescaler 001C                 ??i2_ringbuf_push 0004  
                 ??_ringbuf_init 0020                   ??_ringbuf_push 001E  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                     ??i2_tx_sends 0009  
                     ??_tx_sends 0023                        _PORTAbits 000F80  
                      _UART_init 1606                 __CFG_DSBOREN$OFF 000000  
               __CFG_CPUDIV$OSC1 000000                __size_of_I2C_Send 0016  
              __size_of_I2C_Stop 000A                __size_of_I2C_init 0012  
__size_of_button_timer_interrupt 0182          timer1_init@clock_select 001B  
            i2tx_sends@asciicode 0007                 __CFG_IOL1WAY$OFF 000000  
             __end_ofi2_tx_sends 13F4              __CFG_MSSP7B_EN$MSK7 000000  
               ?_I2C_LCD_Command 0001                   ringbuf_init@rb 001B  
                 ringbuf_pop@ret 0006                   ringbuf_push@rb 001B  
                  __pidataCOMRAM 1714                       ?_UART_init 0001  
               __CFG_DSWDTEN$OFF 000000              start_initialization 1522  
                    __end_of_ISR 00C6                    ?_I2C_LCD_Puts 001F  
                  ?_I2C_LCD_init 0001                __size_of_Delay_ms 0024  
                    ??_I2C_Start 001E            __end_of_I2C_LCD_Clear 16B6  
              __CFG_ADCSEL$BIT12 000000           _button_timer_interrupt 0F20  
                    __pbssCOMRAM 0026                    __pcstackBANK1 0100  
                 ??_I2C_LCD_Puts 0021                   ??_I2C_LCD_init 0022  
            __end_of__stringdata 0F1E             __end_of_ringbuf_init 1522  
           __end_of_ringbuf_push 12BC                 tx_send@asciicode 0007  
                       ISR@ascii 001A                        __pintcode 0008  
                I2C_LCD_Puts@ans 0022                      ??_UART_init 001B  
                    __smallconst 0F00                __size_of_tx_sends 0060  
                    I2C_Start@rw 001D                         _I2C_Send 16B6  
                       _I2C_Stop 170A             __CFG_RTCOSC$T1OSCREF 000000  
                       _I2C_init 16F8            __end_of_I2C_IdleCheck 16E2  
                       ?_tx_send 0001         ringbuf_init@internal_buf 001D  
                       _IPR1bits 000F9F                         _IPR2bits 000FA2  
                       _PIE1bits 000F9D                         _PIE2bits 000FA0  
                       _PIR1bits 000F9E                         _PIR2bits 000FA1  
                  ??_ringbuf_pop 0003                    ??_ringbuf_num 0003  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                    ??_timer0_init 001B  
                  ??_timer1_init 001C                    ??_timer3_init 001B  
                       _SSP1STAT 000FC7                      __stringdata 0F01  
               __CFG_SOSCSEL$LOW 000000   button_timer_interrupt@sw_value 0003  
        __size_of_interrupt_TXIF 0030                         _Delay_ms 167A  
                      main@txbuf 0100                    ringbuf_pop@rb 0001  
                  ringbuf_num@rb 0001                    I2C_Start@adrs 001E  
                    _INTCON2bits 000FF1                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0F00  
           __end_of_I2C_LCD_Puts 149C             __end_of_I2C_LCD_init 1448  
              I2C_IdleCheck@mask 001C                tx_sends@asciicode 0021  
            __end_of_ringbuf_pop 1244              __end_of_ringbuf_num 11CA  
            __end_of_timer0_init 15B2            __size_of_ringbuf_init 0042  
            __end_of_timer1_init 14E0              __end_of_timer3_init 1654  
          __size_of_ringbuf_push 0078             timer0_init@prescaler 001C  
                       __ptext10 169E                         __ptext11 167A  
                       __ptext20 1394                         __ptext12 1654  
                       __ptext21 16E2                         __ptext13 15B2  
                       __ptext22 12BC                         __ptext14 1448  
                       __ptext23 1554                         __ptext15 170A  
                       __ptext24 11CA                         __ptext16 15DC  
                       __ptext25 114C                         __ptext17 16B6  
                       __ptext26 0F20                         __ptext18 16CC  
                   _SSP1CON2bits 000FC5                 __size_of_tx_send 0016  
                  __size_of_main 00AA          ?_button_timer_interrupt 0001  
                   _ringbuf_init 14E0                     _ringbuf_push 1244  
                       _tx_sends 1334          __size_ofi2_ringbuf_push 0078  
       __size_of_I2C_LCD_Command 002A                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2     I2C_LCD_SetCursor@row_offsets 0022  
                     Delay_ms@ms 001B                         intlevel2 0000  
                      tx_sends@i 0025                       _RCSTA1bits 000FAC  
                     _OSCCONbits 000FD3   __end_of_button_timer_interrupt 10A2  
                    _ringbuf_pop 11CA                      _ringbuf_num 114C  
                    _timer0_init 1584                      _timer1_init 149C  
                    _timer3_init 162E                   _interrupt_TXIF 1554  
         __size_of_I2C_LCD_Clear 0018            __size_of_I2C_LCD_Puts 0054  
          __size_of_I2C_LCD_init 0054  
