

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Nov 10 22:35:59 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   151                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   152                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   153                           	dabs	1,0xD00,48,_BDT
   154                           	dabs	1,0xD38,8,_CtrlTrfData
   155                           	dabs	1,0xD30,8,_SetupPkt
   156  0000                     
   157                           	psect	idataCOMRAM
   158  016C8A                     __pidataCOMRAM:
   159                           	opt stack 0
   160                           
   161                           ;initializer for epoch_to_caltime@month_cache
   162  016C8A  01                 	db	1
   163                           
   164                           	psect	idataBANK1
   165  016C88                     __pidataBANK1:
   166                           	opt stack 0
   167                           
   168                           ;initializer for I2C_LCD_SetCursor@F8672
   169  016C88  00                 	db	0
   170  016C89  40                 	db	64
   171                           
   172                           	psect	mediumconst
   173  00FACC                     __pmediumconst:
   174                           	opt stack 0
   175  00FACC  00                 	db	0
   176  00FACD                     _dpowers:
   177                           	opt stack 0
   178  00FACD  0001               	dw	1
   179  00FACF  000A               	dw	10
   180  00FAD1  0064               	dw	100
   181  00FAD3  03E8               	dw	1000
   182  00FAD5  2710               	dw	10000
   183  00FAD7                     __end_of_dpowers:
   184                           	opt stack 0
   185  00FAD7                     _USB_SD_Ptr:
   186                           	opt stack 0
   187  00FAD7  B8                 	db	low _sd000
   188  00FAD8  FB                 	db	high _sd000
   189  00FAD9  22                 	db	low _sd001
   190  00FADA  FB                 	db	high _sd001
   191  00FADB  56                 	db	low _sd002
   192  00FADC  FB                 	db	high _sd002
   193  00FADD                     __end_of_USB_SD_Ptr:
   194                           	opt stack 0
   195  00FADD                     _USB_CD_Ptr:
   196                           	opt stack 0
   197  00FADD  DF                 	db	low _configDescriptor1
   198  00FADE  FA                 	db	high _configDescriptor1
   199  00FADF                     __end_of_USB_CD_Ptr:
   200                           	opt stack 0
   201  00FADF                     _configDescriptor1:
   202                           	opt stack 0
   203  00FADF  09                 	db	9
   204  00FAE0  02                 	db	2
   205  00FAE1  43                 	db	67
   206  00FAE2  00                 	db	0
   207  00FAE3  02                 	db	2
   208  00FAE4  01                 	db	1
   209  00FAE5  00                 	db	0
   210  00FAE6  C0                 	db	192
   211  00FAE7  32                 	db	50
   212  00FAE8  09                 	db	9
   213  00FAE9  04                 	db	4
   214  00FAEA  00                 	db	0
   215  00FAEB  00                 	db	0
   216  00FAEC  01                 	db	1
   217  00FAED  02                 	db	2
   218  00FAEE  02                 	db	2
   219  00FAEF  01                 	db	1
   220  00FAF0  00                 	db	0
   221  00FAF1  05                 	db	5
   222  00FAF2  24                 	db	36
   223  00FAF3  00                 	db	0
   224  00FAF4  10                 	db	16
   225  00FAF5  01                 	db	1
   226  00FAF6  04                 	db	4
   227  00FAF7  24                 	db	36
   228  00FAF8  02                 	db	2
   229  00FAF9  02                 	db	2
   230  00FAFA  05                 	db	5
   231  00FAFB  24                 	db	36
   232  00FAFC  06                 	db	6
   233  00FAFD  00                 	db	0
   234  00FAFE  01                 	db	1
   235  00FAFF  05                 	db	5
   236  00FB00  24                 	db	36
   237  00FB01  01                 	db	1
   238  00FB02  00                 	db	0
   239  00FB03  01                 	db	1
   240  00FB04  07                 	db	7
   241  00FB05  05                 	db	5
   242  00FB06  81                 	db	129
   243  00FB07  03                 	db	3
   244  00FB08  08                 	db	8
   245  00FB09  00                 	db	0
   246  00FB0A  02                 	db	2
   247  00FB0B  09                 	db	9
   248  00FB0C  04                 	db	4
   249  00FB0D  01                 	db	1
   250  00FB0E  00                 	db	0
   251  00FB0F  02                 	db	2
   252  00FB10  0A                 	db	10
   253  00FB11  00                 	db	0
   254  00FB12  00                 	db	0
   255  00FB13  00                 	db	0
   256  00FB14  07                 	db	7
   257  00FB15  05                 	db	5
   258  00FB16  02                 	db	2
   259  00FB17  02                 	db	2
   260  00FB18  40                 	db	64
   261  00FB19  00                 	db	0
   262  00FB1A  00                 	db	0
   263  00FB1B  07                 	db	7
   264  00FB1C  05                 	db	5
   265  00FB1D  82                 	db	130
   266  00FB1E  02                 	db	2
   267  00FB1F  40                 	db	64
   268  00FB20  00                 	db	0
   269  00FB21  00                 	db	0
   270  00FB22                     __end_of_configDescriptor1:
   271                           	opt stack 0
   272  00FB22                     _sd001:
   273                           	opt stack 0
   274  00FB22  34                 	db	52
   275  00FB23  03                 	db	3
   276  00FB24  004D               	dw	77
   277  00FB26  0069               	dw	105
   278  00FB28  0063               	dw	99
   279  00FB2A  0072               	dw	114
   280  00FB2C  006F               	dw	111
   281  00FB2E  0063               	dw	99
   282  00FB30  0068               	dw	104
   283  00FB32  0069               	dw	105
   284  00FB34  0070               	dw	112
   285  00FB36  0020               	dw	32
   286  00FB38  0054               	dw	84
   287  00FB3A  0065               	dw	101
   288  00FB3C  0063               	dw	99
   289  00FB3E  0068               	dw	104
   290  00FB40  006E               	dw	110
   291  00FB42  006F               	dw	111
   292  00FB44  006C               	dw	108
   293  00FB46  006F               	dw	111
   294  00FB48  0067               	dw	103
   295  00FB4A  0079               	dw	121
   296  00FB4C  0020               	dw	32
   297  00FB4E  0049               	dw	73
   298  00FB50  006E               	dw	110
   299  00FB52  0063               	dw	99
   300  00FB54  002E               	dw	46
   301  00FB56                     __end_of_sd001:
   302                           	opt stack 0
   303  00FB56                     _sd002:
   304                           	opt stack 0
   305  00FB56  34                 	db	52
   306  00FB57  03                 	db	3
   307  00FB58  0043               	dw	67
   308  00FB5A  0044               	dw	68
   309  00FB5C  0043               	dw	67
   310  00FB5E  0020               	dw	32
   311  00FB60  0052               	dw	82
   312  00FB62  0053               	dw	83
   313  00FB64  002D               	dw	45
   314  00FB66  0032               	dw	50
   315  00FB68  0033               	dw	51
   316  00FB6A  0032               	dw	50
   317  00FB6C  0020               	dw	32
   318  00FB6E  0045               	dw	69
   319  00FB70  006D               	dw	109
   320  00FB72  0075               	dw	117
   321  00FB74  006C               	dw	108
   322  00FB76  0061               	dw	97
   323  00FB78  0074               	dw	116
   324  00FB7A  0069               	dw	105
   325  00FB7C  006F               	dw	111
   326  00FB7E  006E               	dw	110
   327  00FB80  0020               	dw	32
   328  00FB82  0044               	dw	68
   329  00FB84  0065               	dw	101
   330  00FB86  006D               	dw	109
   331  00FB88  006F               	dw	111
   332  00FB8A                     __end_of_sd002:
   333                           	opt stack 0
   334  00FB8A                     _weekday_3char:
   335                           	opt stack 0
   336  00FB8A  53                 	db	83
   337  00FB8B  55                 	db	85
   338  00FB8C  4E                 	db	78
   339  00FB8D  00                 	db	0
   340  00FB8E  4D                 	db	77
   341  00FB8F  4F                 	db	79
   342  00FB90  4E                 	db	78
   343  00FB91  00                 	db	0
   344  00FB92  54                 	db	84
   345  00FB93  55                 	db	85
   346  00FB94  45                 	db	69
   347  00FB95  00                 	db	0
   348  00FB96  57                 	db	87
   349  00FB97  45                 	db	69
   350  00FB98  44                 	db	68
   351  00FB99  00                 	db	0
   352  00FB9A  54                 	db	84
   353  00FB9B  48                 	db	72
   354  00FB9C  55                 	db	85
   355  00FB9D  00                 	db	0
   356  00FB9E  46                 	db	70
   357  00FB9F  52                 	db	82
   358  00FBA0  49                 	db	73
   359  00FBA1  00                 	db	0
   360  00FBA2  53                 	db	83
   361  00FBA3  41                 	db	65
   362  00FBA4  54                 	db	84
   363  00FBA5  00                 	db	0
   364  00FBA6                     __end_of_weekday_3char:
   365                           	opt stack 0
   366  00FBA6                     _device_dsc:
   367                           	opt stack 0
   368  00FBA6  12                 	db	18
   369  00FBA7  01                 	db	1
   370  00FBA8  0200               	dw	512
   371  00FBAA  02                 	db	2
   372  00FBAB  00                 	db	0
   373  00FBAC  00                 	db	0
   374  00FBAD  08                 	db	8
   375  00FBAE  04D8               	dw	1240
   376  00FBB0  000A               	dw	10
   377  00FBB2  0100               	dw	256
   378  00FBB4  01                 	db	1
   379  00FBB5  02                 	db	2
   380  00FBB6  00                 	db	0
   381  00FBB7  01                 	db	1
   382  00FBB8                     __end_of_device_dsc:
   383                           	opt stack 0
   384  00FBB8                     _sd000:
   385                           	opt stack 0
   386  00FBB8  04                 	db	4
   387  00FBB9  03                 	db	3
   388  00FBBA  0409               	dw	1033
   389  00FBBC                     __end_of_sd000:
   390                           	opt stack 0
   391  0000                     _ANCON0	set	3912
   392  0000                     _ANCON1	set	3913
   393  0000                     _PADCFG1bits	set	3900
   394  0000                     _RTCCAL	set	3902
   395  0000                     _RTCCFGbits	set	3903
   396  0000                     _RTCVALH	set	3899
   397  0000                     _RTCVALL	set	3898
   398  0000                     _T5CONbits	set	3874
   399  0000                     _UADDR	set	3896
   400  0000                     _UCFG	set	3897
   401  0000                     _UEIE	set	3895
   402  0000                     _UEP0bits	set	3878
   403  0000                     _UIE	set	3894
   404  0000                     _UIEbits	set	3894
   405  0000                     _UEP0	set	3878
   406  0000                     _UEP1	set	3879
   407  0000                     _ADRES	set	4035
   408  0000                     _ADCON0bits	set	4034
   409  0000                     _ADCON1bits	set	4033
   410  0000                     _BAUDCON1bits	set	3966
   411  0000                     _CTMUCONH	set	4019
   412  0000                     _CTMUCONHbits	set	4019
   413  0000                     _CTMUCONL	set	4018
   414  0000                     _CTMUCONLbits	set	4018
   415  0000                     _CTMUICON	set	4017
   416  0000                     _EECON2	set	4007
   417  0000                     _INTCON2bits	set	4081
   418  0000                     _INTCONbits	set	4082
   419  0000                     _IPR1bits	set	3999
   420  0000                     _IPR2bits	set	4002
   421  0000                     _IPR5bits	set	3993
   422  0000                     _OSCCONbits	set	4051
   423  0000                     _OSCTUNEbits	set	3995
   424  0000                     _PIE1bits	set	3997
   425  0000                     _PIE2bits	set	4000
   426  0000                     _PIE5bits	set	3985
   427  0000                     _PIR1bits	set	3998
   428  0000                     _PIR2bits	set	4001
   429  0000                     _PIR5bits	set	3992
   430  0000                     _RCONbits	set	4048
   431  0000                     _RCREG1	set	4015
   432  0000                     _RCSTA1bits	set	4012
   433  0000                     _SPBRG1	set	4016
   434  0000                     _SPBRGH1	set	3967
   435  0000                     _SSP1ADD	set	4040
   436  0000                     _SSP1BUF	set	4041
   437  0000                     _SSP1CON1	set	4038
   438  0000                     _SSP1CON2	set	4037
   439  0000                     _SSP1CON2bits	set	4037
   440  0000                     _SSP1STAT	set	4039
   441  0000                     _T0CONbits	set	4053
   442  0000                     _T1CONbits	set	4045
   443  0000                     _T3CONbits	set	3961
   444  0000                     _TMR1H	set	4047
   445  0000                     _TRISA	set	3986
   446  0000                     _TRISB	set	3987
   447  0000                     _TRISC	set	3988
   448  0000                     _TXREG1	set	4014
   449  0000                     _TXSTA1bits	set	4013
   450  0000                     _UCON	set	3941
   451  0000                     _UCONbits	set	3941
   452  0000                     _UEIR	set	3939
   453  0000                     _UIR	set	3938
   454  0000                     _UIRbits	set	3938
   455  0000                     _USTAT	set	3940
   456  0000                     _BCL1IF	set	32011
   457  0000                     _LATA5	set	31821
   458  0000                     _LATA6	set	31822
   459  0000                     _LATA7	set	31823
   460  0000                     _LATB2	set	31826
   461  0000                     _LATB6	set	31830
   462  0000                     _LATB7	set	31831
   463  0000                     _LATC2	set	31834
   464  0000                     _SSP1IF	set	31987
   465  00FBBC                     STR_57:
   466  00FBBC  09                 	db	9
   467  00FBBD  2A                 	db	42
   468  00FBBE  2A                 	db	42
   469  00FBBF  2A                 	db	42
   470  00FBC0  2A                 	db	42
   471  00FBC1  2A                 	db	42
   472  00FBC2  2A                 	db	42
   473  00FBC3  2A                 	db	42
   474  00FBC4  2A                 	db	42
   475  00FBC5  2A                 	db	42
   476  00FBC6  2A                 	db	42
   477  00FBC7  2A                 	db	42
   478  00FBC8  2A                 	db	42
   479  00FBC9  2A                 	db	42
   480  00FBCA  2A                 	db	42
   481  00FBCB  2A                 	db	42
   482  00FBCC  2A                 	db	42
   483  00FBCD  2A                 	db	42
   484  00FBCE  2A                 	db	42
   485  00FBCF  2A                 	db	42
   486  00FBD0  2A                 	db	42
   487  00FBD1  2A                 	db	42
   488  00FBD2  2A                 	db	42
   489  00FBD3  2A                 	db	42
   490  00FBD4  2A                 	db	42
   491  00FBD5  2A                 	db	42
   492  00FBD6  2A                 	db	42
   493  00FBD7  2A                 	db	42
   494  00FBD8  2A                 	db	42
   495  00FBD9  0A                 	db	10
   496  00FBDA  09                 	db	9
   497  00FBDB  2A                 	db	42
   498  00FBDC  2A                 	db	42
   499  00FBDD  2A                 	db	42
   500  00FBDE  2A                 	db	42
   501  00FBDF  20                 	db	32
   502  00FBE0  43                 	db	67	;'C'
   503  00FBE1  68                 	db	104	;'h'
   504  00FBE2  61                 	db	97	;'a'
   505  00FBE3  72                 	db	114	;'r'
   506  00FBE4  67                 	db	103	;'g'
   507  00FBE5  65                 	db	101	;'e'
   508  00FBE6  20                 	db	32
   509  00FBE7  53                 	db	83	;'S'
   510  00FBE8  74                 	db	116	;'t'
   511  00FBE9  61                 	db	97	;'a'
   512  00FBEA  74                 	db	116	;'t'
   513  00FBEB  69                 	db	105	;'i'
   514  00FBEC  6F                 	db	111	;'o'
   515  00FBED  6E                 	db	110	;'n'
   516  00FBEE  20                 	db	32
   517  00FBEF  36                 	db	54	;'6'
   518  00FBF0  2E                 	db	46
   519  00FBF1  37                 	db	55	;'7'
   520  00FBF2  20                 	db	32
   521  00FBF3  2A                 	db	42
   522  00FBF4  2A                 	db	42
   523  00FBF5  2A                 	db	42
   524  00FBF6  2A                 	db	42
   525  00FBF7  0A                 	db	10
   526  00FBF8  09                 	db	9
   527  00FBF9  2A                 	db	42
   528  00FBFA  2A                 	db	42
   529  00FBFB  2A                 	db	42
   530  00FBFC  2A                 	db	42
   531  00FBFD  20                 	db	32
   532  00FBFE  4D                 	db	77	;'M'
   533  00FBFF  61                 	db	97	;'a'
   534  00FC00  64                 	db	100	;'d'
   535  00FC01  65                 	db	101	;'e'
   536  00FC02  20                 	db	32
   537  00FC03  62                 	db	98	;'b'
   538  00FC04  79                 	db	121	;'y'
   539  00FC05  20                 	db	32
   540  00FC06  40                 	db	64	;'@'
   541  00FC07  52                 	db	82	;'R'
   542  00FC08  79                 	db	121	;'y'
   543  00FC09  6F                 	db	111	;'o'
   544  00FC0A  6B                 	db	107	;'k'
   545  00FC0B  65                 	db	101	;'e'
   546  00FC0C  72                 	db	114	;'r'
   547  00FC0D  69                 	db	105	;'i'
   548  00FC0E  20                 	db	32
   549  00FC0F  20                 	db	32
   550  00FC10  20                 	db	32
   551  00FC11  2A                 	db	42
   552  00FC12  2A                 	db	42
   553  00FC13  2A                 	db	42
   554  00FC14  2A                 	db	42
   555  00FC15  0A                 	db	10
   556  00FC16  09                 	db	9
   557  00FC17  2A                 	db	42
   558  00FC18  2A                 	db	42
   559  00FC19  2A                 	db	42
   560  00FC1A  2A                 	db	42
   561  00FC1B  2A                 	db	42
   562  00FC1C  2A                 	db	42
   563  00FC1D  2A                 	db	42
   564  00FC1E  2A                 	db	42
   565  00FC1F  2A                 	db	42
   566  00FC20  2A                 	db	42
   567  00FC21  2A                 	db	42
   568  00FC22  2A                 	db	42
   569  00FC23  2A                 	db	42
   570  00FC24  2A                 	db	42
   571  00FC25  2A                 	db	42
   572  00FC26  2A                 	db	42
   573  00FC27  2A                 	db	42
   574  00FC28  2A                 	db	42
   575  00FC29  2A                 	db	42
   576  00FC2A  2A                 	db	42
   577  00FC2B  2A                 	db	42
   578  00FC2C  2A                 	db	42
   579  00FC2D  2A                 	db	42
   580  00FC2E  2A                 	db	42
   581  00FC2F  2A                 	db	42
   582  00FC30  2A                 	db	42
   583  00FC31  2A                 	db	42
   584  00FC32  2A                 	db	42
   585  00FC33  0A                 	db	10
   586  00FC34  0A                 	db	10
   587  00FC35  09                 	db	9
   588  00FC36  63                 	db	99	;'c'
   589  00FC37  6F                 	db	111	;'o'
   590  00FC38  6D                 	db	109	;'m'
   591  00FC39  6D                 	db	109	;'m'
   592  00FC3A  61                 	db	97	;'a'
   593  00FC3B  6E                 	db	110	;'n'
   594  00FC3C  64                 	db	100	;'d'
   595  00FC3D  20                 	db	32
   596  00FC3E  09                 	db	9
   597  00FC3F  6F                 	db	111	;'o'
   598  00FC40  70                 	db	112	;'p'
   599  00FC41  65                 	db	101	;'e'
   600  00FC42  6C                 	db	108	;'l'
   601  00FC43  61                 	db	97	;'a'
   602  00FC44  6E                 	db	110	;'n'
   603  00FC45  64                 	db	100	;'d'
   604  00FC46  31                 	db	49	;'1'
   605  00FC47  09                 	db	9
   606  00FC48  6F                 	db	111	;'o'
   607  00FC49  70                 	db	112	;'p'
   608  00FC4A  65                 	db	101	;'e'
   609  00FC4B  6C                 	db	108	;'l'
   610  00FC4C  61                 	db	97	;'a'
   611  00FC4D  6E                 	db	110	;'n'
   612  00FC4E  64                 	db	100	;'d'
   613  00FC4F  32                 	db	50	;'2'
   614  00FC50  0A                 	db	10
   615  00FC51  0A                 	db	10
   616  00FC52  09                 	db	9
   617  00FC53  70                 	db	112	;'p'
   618  00FC54  72                 	db	114	;'r'
   619  00FC55  69                 	db	105	;'i'
   620  00FC56  6E                 	db	110	;'n'
   621  00FC57  74                 	db	116	;'t'
   622  00FC58  5F                 	db	95	;'_'
   623  00FC59  74                 	db	116	;'t'
   624  00FC5A  69                 	db	105	;'i'
   625  00FC5B  6D                 	db	109	;'m'
   626  00FC5C  65                 	db	101	;'e'
   627  00FC5D  28                 	db	40
   628  00FC5E  74                 	db	116	;'t'
   629  00FC5F  29                 	db	41
   630  00FC60  0A                 	db	10
   631  00FC61  09                 	db	9
   632  00FC62  61                 	db	97	;'a'
   633  00FC63  64                 	db	100	;'d'
   634  00FC64  6A                 	db	106	;'j'
   635  00FC65  75                 	db	117	;'u'
   636  00FC66  73                 	db	115	;'s'
   637  00FC67  74                 	db	116	;'t'
   638  00FC68  5F                 	db	95	;'_'
   639  00FC69  74                 	db	116	;'t'
   640  00FC6A  69                 	db	105	;'i'
   641  00FC6B  6D                 	db	109	;'m'
   642  00FC6C  65                 	db	101	;'e'
   643  00FC6D  28                 	db	40
   644  00FC6E  61                 	db	97	;'a'
   645  00FC6F  74                 	db	116	;'t'
   646  00FC70  29                 	db	41
   647  00FC71  20                 	db	32
   648  00FC72  5B                 	db	91	;'['
   649  00FC73  68                 	db	104	;'h'
   650  00FC74  61                 	db	97	;'a'
   651  00FC75  6E                 	db	110	;'n'
   652  00FC76  64                 	db	100	;'d'
   653  00FC77  3A                 	db	58	;':'
   654  00FC78  79                 	db	121	;'y'
   655  00FC79  2C                 	db	44
   656  00FC7A  4D                 	db	77	;'M'
   657  00FC7B  2C                 	db	44
   658  00FC7C  64                 	db	100	;'d'
   659  00FC7D  2C                 	db	44
   660  00FC7E  68                 	db	104	;'h'
   661  00FC7F  2C                 	db	44
   662  00FC80  6D                 	db	109	;'m'
   663  00FC81  2C                 	db	44
   664  00FC82  73                 	db	115	;'s'
   665  00FC83  5D                 	db	93	;']'
   666  00FC84  20                 	db	32
   667  00FC85  5B                 	db	91	;'['
   668  00FC86  76                 	db	118	;'v'
   669  00FC87  61                 	db	97	;'a'
   670  00FC88  6C                 	db	108	;'l'
   671  00FC89  75                 	db	117	;'u'
   672  00FC8A  65                 	db	101	;'e'
   673  00FC8B  28                 	db	40
   674  00FC8C  64                 	db	100	;'d'
   675  00FC8D  65                 	db	101	;'e'
   676  00FC8E  63                 	db	99	;'c'
   677  00FC8F  69                 	db	105	;'i'
   678  00FC90  6D                 	db	109	;'m'
   679  00FC91  61                 	db	97	;'a'
   680  00FC92  6C                 	db	108	;'l'
   681  00FC93  29                 	db	41
   682  00FC94  5D                 	db	93	;']'
   683  00FC95  0A                 	db	10
   684  00FC96  09                 	db	9
   685  00FC97  73                 	db	115	;'s'
   686  00FC98  65                 	db	101	;'e'
   687  00FC99  74                 	db	116	;'t'
   688  00FC9A  74                 	db	116	;'t'
   689  00FC9B  69                 	db	105	;'i'
   690  00FC9C  6E                 	db	110	;'n'
   691  00FC9D  67                 	db	103	;'g'
   692  00FC9E  73                 	db	115	;'s'
   693  00FC9F  28                 	db	40
   694  00FCA0  73                 	db	115	;'s'
   695  00FCA1  65                 	db	101	;'e'
   696  00FCA2  74                 	db	116	;'t'
   697  00FCA3  29                 	db	41
   698  00FCA4  20                 	db	32
   699  00FCA5  5B                 	db	91	;'['
   700  00FCA6  70                 	db	112	;'p'
   701  00FCA7  6F                 	db	111	;'o'
   702  00FCA8  72                 	db	114	;'r'
   703  00FCA9  74                 	db	116	;'t'
   704  00FCAA  3A                 	db	58	;':'
   705  00FCAB  6C                 	db	108	;'l'
   706  00FCAC  65                 	db	101	;'e'
   707  00FCAD  66                 	db	102	;'f'
   708  00FCAE  74                 	db	116	;'t'
   709  00FCAF  28                 	db	40
   710  00FCB0  6C                 	db	108	;'l'
   711  00FCB1  29                 	db	41
   712  00FCB2  2C                 	db	44
   713  00FCB3  63                 	db	99	;'c'
   714  00FCB4  65                 	db	101	;'e'
   715  00FCB5  6E                 	db	110	;'n'
   716  00FCB6  74                 	db	116	;'t'
   717  00FCB7  65                 	db	101	;'e'
   718  00FCB8  72                 	db	114	;'r'
   719  00FCB9  28                 	db	40
   720  00FCBA  63                 	db	99	;'c'
   721  00FCBB  29                 	db	41
   722  00FCBC  2C                 	db	44
   723  00FCBD  72                 	db	114	;'r'
   724  00FCBE  69                 	db	105	;'i'
   725  00FCBF  67                 	db	103	;'g'
   726  00FCC0  68                 	db	104	;'h'
   727  00FCC1  74                 	db	116	;'t'
   728  00FCC2  28                 	db	40
   729  00FCC3  72                 	db	114	;'r'
   730  00FCC4  29                 	db	41
   731  00FCC5  5D                 	db	93	;']'
   732  00FCC6  0A                 	db	10
   733  00FCC7  09                 	db	9
   734  00FCC8  09                 	db	9
   735  00FCC9  5B                 	db	91	;'['
   736  00FCCA  61                 	db	97	;'a'
   737  00FCCB  75                 	db	117	;'u'
   738  00FCCC  74                 	db	116	;'t'
   739  00FCCD  6F                 	db	111	;'o'
   740  00FCCE  5F                 	db	95	;'_'
   741  00FCCF  73                 	db	115	;'s'
   742  00FCD0  74                 	db	116	;'t'
   743  00FCD1  6F                 	db	111	;'o'
   744  00FCD2  70                 	db	112	;'p'
   745  00FCD3  28                 	db	40
   746  00FCD4  61                 	db	97	;'a'
   747  00FCD5  73                 	db	115	;'s'
   748  00FCD6  29                 	db	41
   749  00FCD7  2C                 	db	44
   750  00FCD8  61                 	db	97	;'a'
   751  00FCD9  6C                 	db	108	;'l'
   752  00FCDA  77                 	db	119	;'w'
   753  00FCDB  61                 	db	97	;'a'
   754  00FCDC  79                 	db	121	;'y'
   755  00FCDD  73                 	db	115	;'s'
   756  00FCDE  5F                 	db	95	;'_'
   757  00FCDF  6F                 	db	111	;'o'
   758  00FCE0  6E                 	db	110	;'n'
   759  00FCE1  28                 	db	40
   760  00FCE2  61                 	db	97	;'a'
   761  00FCE3  6F                 	db	111	;'o'
   762  00FCE4  29                 	db	41
   763  00FCE5  2C                 	db	44
   764  00FCE6  69                 	db	105	;'i'
   765  00FCE7  6E                 	db	110	;'n'
   766  00FCE8  74                 	db	116	;'t'
   767  00FCE9  65                 	db	101	;'e'
   768  00FCEA  67                 	db	103	;'g'
   769  00FCEB  72                 	db	114	;'r'
   770  00FCEC  61                 	db	97	;'a'
   771  00FCED  74                 	db	116	;'t'
   772  00FCEE  69                 	db	105	;'i'
   773  00FCEF  6E                 	db	110	;'n'
   774  00FCF0  67                 	db	103	;'g'
   775  00FCF1  5F                 	db	95	;'_'
   776  00FCF2  72                 	db	114	;'r'
   777  00FCF3  65                 	db	101	;'e'
   778  00FCF4  73                 	db	115	;'s'
   779  00FCF5  65                 	db	101	;'e'
   780  00FCF6  74                 	db	116	;'t'
   781  00FCF7  28                 	db	40
   782  00FCF8  69                 	db	105	;'i'
   783  00FCF9  72                 	db	114	;'r'
   784  00FCFA  29                 	db	41
   785  00FCFB  5D                 	db	93	;']'
   786  00FCFC  0A                 	db	10
   787  00FCFD  09                 	db	9
   788  00FCFE  64                 	db	100	;'d'
   789  00FCFF  69                 	db	105	;'i'
   790  00FD00  73                 	db	115	;'s'
   791  00FD01  70                 	db	112	;'p'
   792  00FD02  6C                 	db	108	;'l'
   793  00FD03  61                 	db	97	;'a'
   794  00FD04  79                 	db	121	;'y'
   795  00FD05  28                 	db	40
   796  00FD06  64                 	db	100	;'d'
   797  00FD07  29                 	db	41
   798  00FD08  20                 	db	32
   799  00FD09  5B                 	db	91	;'['
   800  00FD0A  70                 	db	112	;'p'
   801  00FD0B  6F                 	db	111	;'o'
   802  00FD0C  72                 	db	114	;'r'
   803  00FD0D  74                 	db	116	;'t'
   804  00FD0E  3A                 	db	58	;':'
   805  00FD0F  6C                 	db	108	;'l'
   806  00FD10  65                 	db	101	;'e'
   807  00FD11  66                 	db	102	;'f'
   808  00FD12  74                 	db	116	;'t'
   809  00FD13  28                 	db	40
   810  00FD14  6C                 	db	108	;'l'
   811  00FD15  29                 	db	41
   812  00FD16  2C                 	db	44
   813  00FD17  63                 	db	99	;'c'
   814  00FD18  65                 	db	101	;'e'
   815  00FD19  6E                 	db	110	;'n'
   816  00FD1A  74                 	db	116	;'t'
   817  00FD1B  65                 	db	101	;'e'
   818  00FD1C  72                 	db	114	;'r'
   819  00FD1D  28                 	db	40
   820  00FD1E  63                 	db	99	;'c'
   821  00FD1F  29                 	db	41
   822  00FD20  2C                 	db	44
   823  00FD21  72                 	db	114	;'r'
   824  00FD22  69                 	db	105	;'i'
   825  00FD23  67                 	db	103	;'g'
   826  00FD24  68                 	db	104	;'h'
   827  00FD25  74                 	db	116	;'t'
   828  00FD26  28                 	db	40
   829  00FD27  72                 	db	114	;'r'
   830  00FD28  29                 	db	41
   831  00FD29  5D                 	db	93	;']'
   832  00FD2A  0A                 	db	10
   833  00FD2B  09                 	db	9
   834  00FD2C  09                 	db	9
   835  00FD2D  5B                 	db	91	;'['
   836  00FD2E  63                 	db	99	;'c'
   837  00FD2F  6F                 	db	111	;'o'
   838  00FD30  6E                 	db	110	;'n'
   839  00FD31  74                 	db	116	;'t'
   840  00FD32  65                 	db	101	;'e'
   841  00FD33  6E                 	db	110	;'n'
   842  00FD34  74                 	db	116	;'t'
   843  00FD35  3A                 	db	58	;':'
   844  00FD36  63                 	db	99	;'c'
   845  00FD37  75                 	db	117	;'u'
   846  00FD38  72                 	db	114	;'r'
   847  00FD39  72                 	db	114	;'r'
   848  00FD3A  65                 	db	101	;'e'
   849  00FD3B  6E                 	db	110	;'n'
   850  00FD3C  74                 	db	116	;'t'
   851  00FD3D  28                 	db	40
   852  00FD3E  63                 	db	99	;'c'
   853  00FD3F  29                 	db	41
   854  00FD40  2C                 	db	44
   855  00FD41  69                 	db	105	;'i'
   856  00FD42  6E                 	db	110	;'n'
   857  00FD43  74                 	db	116	;'t'
   858  00FD44  65                 	db	101	;'e'
   859  00FD45  67                 	db	103	;'g'
   860  00FD46  72                 	db	114	;'r'
   861  00FD47  61                 	db	97	;'a'
   862  00FD48  74                 	db	116	;'t'
   863  00FD49  65                 	db	101	;'e'
   864  00FD4A  64                 	db	100	;'d'
   865  00FD4B  5F                 	db	95	;'_'
   866  00FD4C  63                 	db	99	;'c'
   867  00FD4D  75                 	db	117	;'u'
   868  00FD4E  72                 	db	114	;'r'
   869  00FD4F  72                 	db	114	;'r'
   870  00FD50  65                 	db	101	;'e'
   871  00FD51  6E                 	db	110	;'n'
   872  00FD52  74                 	db	116	;'t'
   873  00FD53  28                 	db	40
   874  00FD54  69                 	db	105	;'i'
   875  00FD55  63                 	db	99	;'c'
   876  00FD56  29                 	db	41
   877  00FD57  2C                 	db	44
   878  00FD58  69                 	db	105	;'i'
   879  00FD59  6E                 	db	110	;'n'
   880  00FD5A  74                 	db	116	;'t'
   881  00FD5B  65                 	db	101	;'e'
   882  00FD5C  67                 	db	103	;'g'
   883  00FD5D  72                 	db	114	;'r'
   884  00FD5E  61                 	db	97	;'a'
   885  00FD5F  74                 	db	116	;'t'
   886  00FD60  65                 	db	101	;'e'
   887  00FD61  64                 	db	100	;'d'
   888  00FD62  5F                 	db	95	;'_'
   889  00FD63  74                 	db	116	;'t'
   890  00FD64  69                 	db	105	;'i'
   891  00FD65  6D                 	db	109	;'m'
   892  00FD66  65                 	db	101	;'e'
   893  00FD67  28                 	db	40
   894  00FD68  69                 	db	105	;'i'
   895  00FD69  74                 	db	116	;'t'
   896  00FD6A  29                 	db	41
   897  00FD6B  5D                 	db	93	;']'
   898  00FD6C  0A                 	db	10
   899  00FD6D  09                 	db	9
   900  00FD6E  74                 	db	116	;'t'
   901  00FD6F  6F                 	db	111	;'o'
   902  00FD70  75                 	db	117	;'u'
   903  00FD71  63                 	db	99	;'c'
   904  00FD72  68                 	db	104	;'h'
   905  00FD73  20                 	db	32
   906  00FD74  5B                 	db	91	;'['
   907  00FD75  72                 	db	114	;'r'
   908  00FD76  65                 	db	101	;'e'
   909  00FD77  73                 	db	115	;'s'
   910  00FD78  65                 	db	101	;'e'
   911  00FD79  74                 	db	116	;'t'
   912  00FD7A  28                 	db	40
   913  00FD7B  72                 	db	114	;'r'
   914  00FD7C  29                 	db	41
   915  00FD7D  2C                 	db	44
   916  00FD7E  69                 	db	105	;'i'
   917  00FD7F  6E                 	db	110	;'n'
   918  00FD80  69                 	db	105	;'i'
   919  00FD81  74                 	db	116	;'t'
   920  00FD82  69                 	db	105	;'i'
   921  00FD83  61                 	db	97	;'a'
   922  00FD84  6C                 	db	108	;'l'
   923  00FD85  69                 	db	105	;'i'
   924  00FD86  7A                 	db	122	;'z'
   925  00FD87  65                 	db	101	;'e'
   926  00FD88  28                 	db	40
   927  00FD89  69                 	db	105	;'i'
   928  00FD8A  6E                 	db	110	;'n'
   929  00FD8B  69                 	db	105	;'i'
   930  00FD8C  74                 	db	116	;'t'
   931  00FD8D  29                 	db	41
   932  00FD8E  5D                 	db	93	;']'
   933  00FD8F  20                 	db	32
   934  00FD90  5B                 	db	91	;'['
   935  00FD91  76                 	db	118	;'v'
   936  00FD92  61                 	db	97	;'a'
   937  00FD93  6C                 	db	108	;'l'
   938  00FD94  75                 	db	117	;'u'
   939  00FD95  65                 	db	101	;'e'
   940  00FD96  28                 	db	40
   941  00FD97  25                 	db	37
   942  00FD98  29                 	db	41
   943  00FD99  5D                 	db	93	;']'
   944  00FD9A  0A                 	db	10
   945  00FD9B  09                 	db	9
   946  00FD9C  52                 	db	82	;'R'
   947  00FD9D  45                 	db	69	;'E'
   948  00FD9E  53                 	db	83	;'S'
   949  00FD9F  45                 	db	69	;'E'
   950  00FDA0  54                 	db	84	;'T'
   951  00FDA1  28                 	db	40
   952  00FDA2  29                 	db	41
   953  00FDA3  3B                 	db	59	;';'
   954  00FDA4  0A                 	db	10
   955  00FDA5  00                 	db	0
   956  00FDA6                     STR_5:
   957  00FDA6  09                 	db	9
   958  00FDA7  32                 	db	50	;'2'
   959  00FDA8  30                 	db	48	;'0'
   960  00FDA9  25                 	db	37
   961  00FDAA  30                 	db	48	;'0'
   962  00FDAB  32                 	db	50	;'2'
   963  00FDAC  64                 	db	100	;'d'
   964  00FDAD  2F                 	db	47
   965  00FDAE  25                 	db	37
   966  00FDAF  30                 	db	48	;'0'
   967  00FDB0  32                 	db	50	;'2'
   968  00FDB1  64                 	db	100	;'d'
   969  00FDB2  2F                 	db	47
   970  00FDB3  25                 	db	37
   971  00FDB4  30                 	db	48	;'0'
   972  00FDB5  32                 	db	50	;'2'
   973  00FDB6  64                 	db	100	;'d'
   974  00FDB7  28                 	db	40
   975  00FDB8  25                 	db	37
   976  00FDB9  73                 	db	115	;'s'
   977  00FDBA  29                 	db	41
   978  00FDBB  25                 	db	37
   979  00FDBC  30                 	db	48	;'0'
   980  00FDBD  32                 	db	50	;'2'
   981  00FDBE  64                 	db	100	;'d'
   982  00FDBF  3A                 	db	58	;':'
   983  00FDC0  25                 	db	37
   984  00FDC1  30                 	db	48	;'0'
   985  00FDC2  32                 	db	50	;'2'
   986  00FDC3  64                 	db	100	;'d'
   987  00FDC4  2D                 	db	45
   988  00FDC5  25                 	db	37
   989  00FDC6  30                 	db	48	;'0'
   990  00FDC7  32                 	db	50	;'2'
   991  00FDC8  64                 	db	100	;'d'
   992  00FDC9  0A                 	db	10
   993  00FDCA  00                 	db	0
   994  00FDCB                     STR_67:
   995  00FDCB  09                 	db	9
   996  00FDCC  69                 	db	105	;'i'
   997  00FDCD  6E                 	db	110	;'n'
   998  00FDCE  76                 	db	118	;'v'
   999  00FDCF  61                 	db	97	;'a'
  1000  00FDD0  6C                 	db	108	;'l'
  1001  00FDD1  69                 	db	105	;'i'
  1002  00FDD2  64                 	db	100	;'d'
  1003  00FDD3  20                 	db	32
  1004  00FDD4  64                 	db	100	;'d'
  1005  00FDD5  61                 	db	97	;'a'
  1006  00FDD6  74                 	db	116	;'t'
  1007  00FDD7  61                 	db	97	;'a'
  1008  00FDD8  0A                 	db	10
  1009  00FDD9  09                 	db	9
  1010  00FDDA  69                 	db	105	;'i'
  1011  00FDDB  6E                 	db	110	;'n'
  1012  00FDDC  69                 	db	105	;'i'
  1013  00FDDD  74                 	db	116	;'t'
  1014  00FDDE  69                 	db	105	;'i'
  1015  00FDDF  61                 	db	97	;'a'
  1016  00FDE0  6C                 	db	108	;'l'
  1017  00FDE1  69                 	db	105	;'i'
  1018  00FDE2  7A                 	db	122	;'z'
  1019  00FDE3  69                 	db	105	;'i'
  1020  00FDE4  6E                 	db	110	;'n'
  1021  00FDE5  67                 	db	103	;'g'
  1022  00FDE6  20                 	db	32
  1023  00FDE7  66                 	db	102	;'f'
  1024  00FDE8  61                 	db	97	;'a'
  1025  00FDE9  69                 	db	105	;'i'
  1026  00FDEA  6C                 	db	108	;'l'
  1027  00FDEB  65                 	db	101	;'e'
  1028  00FDEC  64                 	db	100	;'d'
  1029  00FDED  0A                 	db	10
  1030  00FDEE  00                 	db	0
  1031  00FDEF                     STR_66:
  1032  00FDEF  09                 	db	9
  1033  00FDF0  69                 	db	105	;'i'
  1034  00FDF1  6E                 	db	110	;'n'
  1035  00FDF2  69                 	db	105	;'i'
  1036  00FDF3  74                 	db	116	;'t'
  1037  00FDF4  69                 	db	105	;'i'
  1038  00FDF5  61                 	db	97	;'a'
  1039  00FDF6  6C                 	db	108	;'l'
  1040  00FDF7  69                 	db	105	;'i'
  1041  00FDF8  7A                 	db	122	;'z'
  1042  00FDF9  69                 	db	105	;'i'
  1043  00FDFA  6E                 	db	110	;'n'
  1044  00FDFB  67                 	db	103	;'g'
  1045  00FDFC  20                 	db	32
  1046  00FDFD  63                 	db	99	;'c'
  1047  00FDFE  6F                 	db	111	;'o'
  1048  00FDFF  6D                 	db	109	;'m'
  1049  00FE00  70                 	db	112	;'p'
  1050  00FE01  6C                 	db	108	;'l'
  1051  00FE02  65                 	db	101	;'e'
  1052  00FE03  74                 	db	116	;'t'
  1053  00FE04  65                 	db	101	;'e'
  1054  00FE05  0A                 	db	10
  1055  00FE06  00                 	db	0
  1056  00FE07                     STR_77:
  1057  00FE07  69                 	db	105	;'i'
  1058  00FE08  6E                 	db	110	;'n'
  1059  00FE09  74                 	db	116	;'t'
  1060  00FE0A  65                 	db	101	;'e'
  1061  00FE0B  67                 	db	103	;'g'
  1062  00FE0C  72                 	db	114	;'r'
  1063  00FE0D  61                 	db	97	;'a'
  1064  00FE0E  74                 	db	116	;'t'
  1065  00FE0F  65                 	db	101	;'e'
  1066  00FE10  64                 	db	100	;'d'
  1067  00FE11  5F                 	db	95	;'_'
  1068  00FE12  63                 	db	99	;'c'
  1069  00FE13  75                 	db	117	;'u'
  1070  00FE14  72                 	db	114	;'r'
  1071  00FE15  72                 	db	114	;'r'
  1072  00FE16  65                 	db	101	;'e'
  1073  00FE17  6E                 	db	110	;'n'
  1074  00FE18  74                 	db	116	;'t'
  1075  00FE19  00                 	db	0
  1076  00FE1A                     STR_70:
  1077  00FE1A  09                 	db	9
  1078  00FE1B  73                 	db	115	;'s'
  1079  00FE1C  65                 	db	101	;'e'
  1080  00FE1D  74                 	db	116	;'t'
  1081  00FE1E  69                 	db	105	;'i'
  1082  00FE1F  6E                 	db	110	;'n'
  1083  00FE20  67                 	db	103	;'g'
  1084  00FE21  20                 	db	32
  1085  00FE22  63                 	db	99	;'c'
  1086  00FE23  6F                 	db	111	;'o'
  1087  00FE24  6D                 	db	109	;'m'
  1088  00FE25  70                 	db	112	;'p'
  1089  00FE26  6C                 	db	108	;'l'
  1090  00FE27  65                 	db	101	;'e'
  1091  00FE28  74                 	db	116	;'t'
  1092  00FE29  65                 	db	101	;'e'
  1093  00FE2A  0A                 	db	10
  1094  00FE2B  00                 	db	0
  1095  00FE2C                     STR_29:
  1096  00FE2C  43                 	db	67	;'C'
  1097  00FE2D  68                 	db	104	;'h'
  1098  00FE2E  61                 	db	97	;'a'
  1099  00FE2F  72                 	db	114	;'r'
  1100  00FE30  67                 	db	103	;'g'
  1101  00FE31  65                 	db	101	;'e'
  1102  00FE32  20                 	db	32
  1103  00FE33  53                 	db	83	;'S'
  1104  00FE34  74                 	db	116	;'t'
  1105  00FE35  61                 	db	97	;'a'
  1106  00FE36  74                 	db	116	;'t'
  1107  00FE37  69                 	db	105	;'i'
  1108  00FE38  6F                 	db	111	;'o'
  1109  00FE39  6E                 	db	110	;'n'
  1110  00FE3A  20                 	db	32
  1111  00FE3B  36                 	db	54	;'6'
  1112  00FE3C  00                 	db	0
  1113  00FE3D                     STR_39:
  1114  00FE3D  54                 	db	84	;'T'
  1115  00FE3E  6F                 	db	111	;'o'
  1116  00FE3F  67                 	db	103	;'g'
  1117  00FE40  67                 	db	103	;'g'
  1118  00FE41  6C                 	db	108	;'l'
  1119  00FE42  65                 	db	101	;'e'
  1120  00FE43  20                 	db	32
  1121  00FE44  41                 	db	65	;'A'
  1122  00FE45  75                 	db	117	;'u'
  1123  00FE46  74                 	db	116	;'t'
  1124  00FE47  6F                 	db	111	;'o'
  1125  00FE48  53                 	db	83	;'S'
  1126  00FE49  74                 	db	116	;'t'
  1127  00FE4A  6F                 	db	111	;'o'
  1128  00FE4B  70                 	db	112	;'p'
  1129  00FE4C  3F                 	db	63	;'?'
  1130  00FE4D  00                 	db	0
  1131  00FE4E                     STR_38:
  1132  00FE4E  49                 	db	73	;'I'
  1133  00FE4F  6E                 	db	110	;'n'
  1134  00FE50  74                 	db	116	;'t'
  1135  00FE51  65                 	db	101	;'e'
  1136  00FE52  67                 	db	103	;'g'
  1137  00FE53  72                 	db	114	;'r'
  1138  00FE54  61                 	db	97	;'a'
  1139  00FE55  74                 	db	116	;'t'
  1140  00FE56  20                 	db	32
  1141  00FE57  52                 	db	82	;'R'
  1142  00FE58  65                 	db	101	;'e'
  1143  00FE59  73                 	db	115	;'s'
  1144  00FE5A  65                 	db	101	;'e'
  1145  00FE5B  74                 	db	116	;'t'
  1146  00FE5C  65                 	db	101	;'e'
  1147  00FE5D  64                 	db	100	;'d'
  1148  00FE5E  00                 	db	0
  1149  00FE5F                     STR_37:
  1150  00FE5F  49                 	db	73	;'I'
  1151  00FE60  6E                 	db	110	;'n'
  1152  00FE61  74                 	db	116	;'t'
  1153  00FE62  65                 	db	101	;'e'
  1154  00FE63  67                 	db	103	;'g'
  1155  00FE64  72                 	db	114	;'r'
  1156  00FE65  61                 	db	97	;'a'
  1157  00FE66  74                 	db	116	;'t'
  1158  00FE67  20                 	db	32
  1159  00FE68  52                 	db	82	;'R'
  1160  00FE69  65                 	db	101	;'e'
  1161  00FE6A  73                 	db	115	;'s'
  1162  00FE6B  65                 	db	101	;'e'
  1163  00FE6C  74                 	db	116	;'t'
  1164  00FE6D  3F                 	db	63	;'?'
  1165  00FE6E  00                 	db	0
  1166  00FE6F                     STR_79:
  1167  00FE6F  69                 	db	105	;'i'
  1168  00FE70  6E                 	db	110	;'n'
  1169  00FE71  74                 	db	116	;'t'
  1170  00FE72  65                 	db	101	;'e'
  1171  00FE73  67                 	db	103	;'g'
  1172  00FE74  72                 	db	114	;'r'
  1173  00FE75  61                 	db	97	;'a'
  1174  00FE76  74                 	db	116	;'t'
  1175  00FE77  65                 	db	101	;'e'
  1176  00FE78  64                 	db	100	;'d'
  1177  00FE79  5F                 	db	95	;'_'
  1178  00FE7A  74                 	db	116	;'t'
  1179  00FE7B  69                 	db	105	;'i'
  1180  00FE7C  6D                 	db	109	;'m'
  1181  00FE7D  65                 	db	101	;'e'
  1182  00FE7E  00                 	db	0
  1183  00FE7F                     STR_40:
  1184  00FE7F  41                 	db	65	;'A'
  1185  00FE80  6C                 	db	108	;'l'
  1186  00FE81  77                 	db	119	;'w'
  1187  00FE82  61                 	db	97	;'a'
  1188  00FE83  79                 	db	121	;'y'
  1189  00FE84  73                 	db	115	;'s'
  1190  00FE85  20                 	db	32
  1191  00FE86  43                 	db	67	;'C'
  1192  00FE87  68                 	db	104	;'h'
  1193  00FE88  61                 	db	97	;'a'
  1194  00FE89  72                 	db	114	;'r'
  1195  00FE8A  67                 	db	103	;'g'
  1196  00FE8B  69                 	db	105	;'i'
  1197  00FE8C  6E                 	db	110	;'n'
  1198  00FE8D  67                 	db	103	;'g'
  1199  00FE8E  00                 	db	0
  1200  00FE8F                     STR_31:
  1201  00FE8F  53                 	db	83	;'S'
  1202  00FE90  74                 	db	116	;'t'
  1203  00FE91  61                 	db	97	;'a'
  1204  00FE92  72                 	db	114	;'r'
  1205  00FE93  74                 	db	116	;'t'
  1206  00FE94  20                 	db	32
  1207  00FE95  43                 	db	67	;'C'
  1208  00FE96  68                 	db	104	;'h'
  1209  00FE97  61                 	db	97	;'a'
  1210  00FE98  72                 	db	114	;'r'
  1211  00FE99  67                 	db	103	;'g'
  1212  00FE9A  69                 	db	105	;'i'
  1213  00FE9B  6E                 	db	110	;'n'
  1214  00FE9C  67                 	db	103	;'g'
  1215  00FE9D  00                 	db	0
  1216  00FE9E                     STR_45:
  1217  00FE9E  4E                 	db	78	;'N'
  1218  00FE9F  6F                 	db	111	;'o'
  1219  00FEA0  74                 	db	116	;'t'
  1220  00FEA1  68                 	db	104	;'h'
  1221  00FEA2  69                 	db	105	;'i'
  1222  00FEA3  6E                 	db	110	;'n'
  1223  00FEA4  67                 	db	103	;'g'
  1224  00FEA5  20                 	db	32
  1225  00FEA6  64                 	db	100	;'d'
  1226  00FEA7  6F                 	db	111	;'o'
  1227  00FEA8  6E                 	db	110	;'n'
  1228  00FEA9  65                 	db	101	;'e'
  1229  00FEAA  2E                 	db	46
  1230  00FEAB  00                 	db	0
  1231  00FEAC                     STR_30:
  1232  00FEAC  4D                 	db	77	;'M'
  1233  00FEAD  61                 	db	97	;'a'
  1234  00FEAE  64                 	db	100	;'d'
  1235  00FEAF  65                 	db	101	;'e'
  1236  00FEB0  20                 	db	32
  1237  00FEB1  62                 	db	98	;'b'
  1238  00FEB2  79                 	db	121	;'y'
  1239  00FEB3  20                 	db	32
  1240  00FEB4  4B                 	db	75	;'K'
  1241  00FEB5  45                 	db	69	;'E'
  1242  00FEB6  52                 	db	82	;'R'
  1243  00FEB7  49                 	db	73	;'I'
  1244  00FEB8  00                 	db	0
  1245  00FEB9                     STR_41:
  1246  00FEB9  41                 	db	65	;'A'
  1247  00FEBA  75                 	db	117	;'u'
  1248  00FEBB  74                 	db	116	;'t'
  1249  00FEBC  6F                 	db	111	;'o'
  1250  00FEBD  20                 	db	32
  1251  00FEBE  53                 	db	83	;'S'
  1252  00FEBF  74                 	db	116	;'t'
  1253  00FEC0  6F                 	db	111	;'o'
  1254  00FEC1  70                 	db	112	;'p'
  1255  00FEC2  20                 	db	32
  1256  00FEC3  4F                 	db	79	;'O'
  1257  00FEC4  4E                 	db	78	;'N'
  1258  00FEC5  00                 	db	0
  1259  00FEC6                     STR_42:
  1260  00FEC6  54                 	db	84	;'T'
  1261  00FEC7  6F                 	db	111	;'o'
  1262  00FEC8  67                 	db	103	;'g'
  1263  00FEC9  67                 	db	103	;'g'
  1264  00FECA  6C                 	db	108	;'l'
  1265  00FECB  65                 	db	101	;'e'
  1266  00FECC  20                 	db	32
  1267  00FECD  4C                 	db	76	;'L'
  1268  00FECE  45                 	db	69	;'E'
  1269  00FECF  44                 	db	68	;'D'
  1270  00FED0  3F                 	db	63	;'?'
  1271  00FED1  00                 	db	0
  1272  00FED2                     STR_26:
  1273  00FED2  43                 	db	67	;'C'
  1274  00FED3  45                 	db	69	;'E'
  1275  00FED4  4E                 	db	78	;'N'
  1276  00FED5  54                 	db	84	;'T'
  1277  00FED6  45                 	db	69	;'E'
  1278  00FED7  52                 	db	82	;'R'
  1279  00FED8  20                 	db	32
  1280  00FED9  50                 	db	80	;'P'
  1281  00FEDA  4F                 	db	79	;'O'
  1282  00FEDB  52                 	db	82	;'R'
  1283  00FEDC  54                 	db	84	;'T'
  1284  00FEDD  00                 	db	0
  1285  00FEDE                     STR_10:
  1286  00FEDE  61                 	db	97	;'a'
  1287  00FEDF  64                 	db	100	;'d'
  1288  00FEE0  6A                 	db	106	;'j'
  1289  00FEE1  75                 	db	117	;'u'
  1290  00FEE2  73                 	db	115	;'s'
  1291  00FEE3  74                 	db	116	;'t'
  1292  00FEE4  5F                 	db	95	;'_'
  1293  00FEE5  74                 	db	116	;'t'
  1294  00FEE6  69                 	db	105	;'i'
  1295  00FEE7  6D                 	db	109	;'m'
  1296  00FEE8  65                 	db	101	;'e'
  1297  00FEE9  00                 	db	0
  1298  00FEEA                     STR_25:
  1299  00FEEA  43                 	db	67	;'C'
  1300  00FEEB  65                 	db	101	;'e'
  1301  00FEEC  6E                 	db	110	;'n'
  1302  00FEED  74                 	db	116	;'t'
  1303  00FEEE  65                 	db	101	;'e'
  1304  00FEEF  72                 	db	114	;'r'
  1305  00FEF0  20                 	db	32
  1306  00FEF1  50                 	db	80	;'P'
  1307  00FEF2  6F                 	db	111	;'o'
  1308  00FEF3  72                 	db	114	;'r'
  1309  00FEF4  74                 	db	116	;'t'
  1310  00FEF5  00                 	db	0
  1311  00FEF6                     STR_28:
  1312  00FEF6  52                 	db	82	;'R'
  1313  00FEF7  49                 	db	73	;'I'
  1314  00FEF8  47                 	db	71	;'G'
  1315  00FEF9  48                 	db	72	;'H'
  1316  00FEFA  54                 	db	84	;'T'
  1317  00FEFB  20                 	db	32
  1318  00FEFC  50                 	db	80	;'P'
  1319  00FEFD  4F                 	db	79	;'O'
  1320  00FEFE  52                 	db	82	;'R'
  1321  00FEFF  54                 	db	84	;'T'
  1322  00FF00  00                 	db	0
  1323  00FF01                     STR_7:
  1324  00FF01  70                 	db	112	;'p'
  1325  00FF02  72                 	db	114	;'r'
  1326  00FF03  69                 	db	105	;'i'
  1327  00FF04  6E                 	db	110	;'n'
  1328  00FF05  74                 	db	116	;'t'
  1329  00FF06  5F                 	db	95	;'_'
  1330  00FF07  74                 	db	116	;'t'
  1331  00FF08  69                 	db	105	;'i'
  1332  00FF09  6D                 	db	109	;'m'
  1333  00FF0A  65                 	db	101	;'e'
  1334  00FF0B  00                 	db	0
  1335  00FF0C                     STR_64:
  1336  00FF0C  69                 	db	105	;'i'
  1337  00FF0D  6E                 	db	110	;'n'
  1338  00FF0E  69                 	db	105	;'i'
  1339  00FF0F  74                 	db	116	;'t'
  1340  00FF10  69                 	db	105	;'i'
  1341  00FF11  61                 	db	97	;'a'
  1342  00FF12  6C                 	db	108	;'l'
  1343  00FF13  69                 	db	105	;'i'
  1344  00FF14  7A                 	db	122	;'z'
  1345  00FF15  65                 	db	101	;'e'
  1346  00FF16  00                 	db	0
  1347  00FF17                     STR_27:
  1348  00FF17  52                 	db	82	;'R'
  1349  00FF18  69                 	db	105	;'i'
  1350  00FF19  67                 	db	103	;'g'
  1351  00FF1A  68                 	db	104	;'h'
  1352  00FF1B  74                 	db	116	;'t'
  1353  00FF1C  20                 	db	32
  1354  00FF1D  50                 	db	80	;'P'
  1355  00FF1E  6F                 	db	111	;'o'
  1356  00FF1F  72                 	db	114	;'r'
  1357  00FF20  74                 	db	116	;'t'
  1358  00FF21  00                 	db	0
  1359  00FF22                     STR_24:
  1360  00FF22  4C                 	db	76	;'L'
  1361  00FF23  45                 	db	69	;'E'
  1362  00FF24  46                 	db	70	;'F'
  1363  00FF25  54                 	db	84	;'T'
  1364  00FF26  20                 	db	32
  1365  00FF27  50                 	db	80	;'P'
  1366  00FF28  4F                 	db	79	;'O'
  1367  00FF29  52                 	db	82	;'R'
  1368  00FF2A  54                 	db	84	;'T'
  1369  00FF2B  00                 	db	0
  1370  00FF2C                     STR_60:
  1371  00FF2C  61                 	db	97	;'a'
  1372  00FF2D  75                 	db	117	;'u'
  1373  00FF2E  74                 	db	116	;'t'
  1374  00FF2F  6F                 	db	111	;'o'
  1375  00FF30  5F                 	db	95	;'_'
  1376  00FF31  73                 	db	115	;'s'
  1377  00FF32  74                 	db	116	;'t'
  1378  00FF33  6F                 	db	111	;'o'
  1379  00FF34  70                 	db	112	;'p'
  1380  00FF35  00                 	db	0
  1381  00FF36                     STR_23:
  1382  00FF36  4C                 	db	76	;'L'
  1383  00FF37  65                 	db	101	;'e'
  1384  00FF38  66                 	db	102	;'f'
  1385  00FF39  74                 	db	116	;'t'
  1386  00FF3A  20                 	db	32
  1387  00FF3B  50                 	db	80	;'P'
  1388  00FF3C  6F                 	db	111	;'o'
  1389  00FF3D  72                 	db	114	;'r'
  1390  00FF3E  74                 	db	116	;'t'
  1391  00FF3F  00                 	db	0
  1392  00FF40                     STR_61:
  1393  00FF40  52                 	db	82	;'R'
  1394  00FF41  45                 	db	69	;'E'
  1395  00FF42  53                 	db	83	;'S'
  1396  00FF43  45                 	db	69	;'E'
  1397  00FF44  54                 	db	84	;'T'
  1398  00FF45  28                 	db	40
  1399  00FF46  29                 	db	41
  1400  00FF47  3B                 	db	59	;';'
  1401  00FF48  00                 	db	0
  1402  00FF49                     STR_100:
  1403  00FF49  53                 	db	83	;'S'
  1404  00FF4A  4C                 	db	76	;'L'
  1405  00FF4B  45                 	db	69	;'E'
  1406  00FF4C  45                 	db	69	;'E'
  1407  00FF4D  50                 	db	80	;'P'
  1408  00FF4E  49                 	db	73	;'I'
  1409  00FF4F  4E                 	db	78	;'N'
  1410  00FF50  47                 	db	71	;'G'
  1411  00FF51  00                 	db	0
  1412  00FF52                     STR_62:
  1413  00FF52  62                 	db	98	;'b'
  1414  00FF53  6F                 	db	111	;'o'
  1415  00FF54  6F                 	db	111	;'o'
  1416  00FF55  74                 	db	116	;'t'
  1417  00FF56  6C                 	db	108	;'l'
  1418  00FF57  6F                 	db	111	;'o'
  1419  00FF58  61                 	db	97	;'a'
  1420  00FF59  64                 	db	100	;'d'
  1421  00FF5A  00                 	db	0
  1422  00FF5B                     STR_58:
  1423  00FF5B  73                 	db	115	;'s'
  1424  00FF5C  65                 	db	101	;'e'
  1425  00FF5D  74                 	db	116	;'t'
  1426  00FF5E  74                 	db	116	;'t'
  1427  00FF5F  69                 	db	105	;'i'
  1428  00FF60  6E                 	db	110	;'n'
  1429  00FF61  67                 	db	103	;'g'
  1430  00FF62  73                 	db	115	;'s'
  1431  00FF63  00                 	db	0
  1432  00FF64                     STR_6:
  1433  00FF64  09                 	db	9
  1434  00FF65  65                 	db	101	;'e'
  1435  00FF66  72                 	db	114	;'r'
  1436  00FF67  72                 	db	114	;'r'
  1437  00FF68  6F                 	db	111	;'o'
  1438  00FF69  72                 	db	114	;'r'
  1439  00FF6A  0A                 	db	10
  1440  00FF6B  00                 	db	0
  1441  00FF6C                     STR_44:
  1442  00FF6C  4C                 	db	76	;'L'
  1443  00FF6D  45                 	db	69	;'E'
  1444  00FF6E  44                 	db	68	;'D'
  1445  00FF6F  20                 	db	32
  1446  00FF70  4F                 	db	79	;'O'
  1447  00FF71  46                 	db	70	;'F'
  1448  00FF72  46                 	db	70	;'F'
  1449  00FF73  00                 	db	0
  1450  00FF74                     STR_71:
  1451  00FF74  64                 	db	100	;'d'
  1452  00FF75  69                 	db	105	;'i'
  1453  00FF76  73                 	db	115	;'s'
  1454  00FF77  70                 	db	112	;'p'
  1455  00FF78  6C                 	db	108	;'l'
  1456  00FF79  61                 	db	97	;'a'
  1457  00FF7A  79                 	db	121	;'y'
  1458  00FF7B  00                 	db	0
  1459  00FF7C                     STR_101:
  1460  00FF7C  28                 	db	40
  1461  00FF7D  6E                 	db	110	;'n'
  1462  00FF7E  75                 	db	117	;'u'
  1463  00FF7F  6C                 	db	108	;'l'
  1464  00FF80  6C                 	db	108	;'l'
  1465  00FF81  29                 	db	41
  1466  00FF82  00                 	db	0
  1467  00FF83                     STR_43:
  1468  00FF83  4C                 	db	76	;'L'
  1469  00FF84  45                 	db	69	;'E'
  1470  00FF85  44                 	db	68	;'D'
  1471  00FF86  20                 	db	32
  1472  00FF87  4F                 	db	79	;'O'
  1473  00FF88  4E                 	db	78	;'N'
  1474  00FF89  00                 	db	0
  1475  00FF8A                     STR_22:
  1476  00FF8A  73                 	db	115	;'s'
  1477  00FF8B  65                 	db	101	;'e'
  1478  00FF8C  63                 	db	99	;'c'
  1479  00FF8D  6F                 	db	111	;'o'
  1480  00FF8E  6E                 	db	110	;'n'
  1481  00FF8F  64                 	db	100	;'d'
  1482  00FF90  00                 	db	0
  1483  00FF91                     STR_20:
  1484  00FF91  6D                 	db	109	;'m'
  1485  00FF92  69                 	db	105	;'i'
  1486  00FF93  6E                 	db	110	;'n'
  1487  00FF94  75                 	db	117	;'u'
  1488  00FF95  74                 	db	116	;'t'
  1489  00FF96  65                 	db	101	;'e'
  1490  00FF97  00                 	db	0
  1491  00FF98                     STR_81:
  1492  00FF98  63                 	db	99	;'c'
  1493  00FF99  65                 	db	101	;'e'
  1494  00FF9A  6E                 	db	110	;'n'
  1495  00FF9B  74                 	db	116	;'t'
  1496  00FF9C  65                 	db	101	;'e'
  1497  00FF9D  72                 	db	114	;'r'
  1498  00FF9E  00                 	db	0
  1499  00FF9F                     STR_63:
  1500  00FF9F  74                 	db	116	;'t'
  1501  00FFA0  6F                 	db	111	;'o'
  1502  00FFA1  75                 	db	117	;'u'
  1503  00FFA2  63                 	db	99	;'c'
  1504  00FFA3  68                 	db	104	;'h'
  1505  00FFA4  00                 	db	0
  1506  00FFA5                     STR_14:
  1507  00FFA5  6D                 	db	109	;'m'
  1508  00FFA6  6F                 	db	111	;'o'
  1509  00FFA7  6E                 	db	110	;'n'
  1510  00FFA8  74                 	db	116	;'t'
  1511  00FFA9  68                 	db	104	;'h'
  1512  00FFAA  00                 	db	0
  1513  00FFAB                     STR_68:
  1514  00FFAB  72                 	db	114	;'r'
  1515  00FFAC  65                 	db	101	;'e'
  1516  00FFAD  73                 	db	115	;'s'
  1517  00FFAE  65                 	db	101	;'e'
  1518  00FFAF  74                 	db	116	;'t'
  1519  00FFB0  00                 	db	0
  1520  00FFB1                     STR_89:
  1521  00FFB1  72                 	db	114	;'r'
  1522  00FFB2  69                 	db	105	;'i'
  1523  00FFB3  67                 	db	103	;'g'
  1524  00FFB4  68                 	db	104	;'h'
  1525  00FFB5  74                 	db	116	;'t'
  1526  00FFB6  00                 	db	0
  1527  00FFB7                     STR_49:
  1528  00FFB7  6D                 	db	109	;'m'
  1529  00FFB8  41                 	db	65	;'A'
  1530  00FFB9  68                 	db	104	;'h'
  1531  00FFBA  0A                 	db	10
  1532  00FFBB  00                 	db	0
  1533  00FFBC                     STR_55:
  1534  00FFBC  68                 	db	104	;'h'
  1535  00FFBD  65                 	db	101	;'e'
  1536  00FFBE  6C                 	db	108	;'l'
  1537  00FFBF  70                 	db	112	;'p'
  1538  00FFC0  00                 	db	0
  1539  00FFC1                     STR_12:
  1540  00FFC1  79                 	db	121	;'y'
  1541  00FFC2  65                 	db	101	;'e'
  1542  00FFC3  61                 	db	97	;'a'
  1543  00FFC4  72                 	db	114	;'r'
  1544  00FFC5  00                 	db	0
  1545  00FFC6                     STR_18:
  1546  00FFC6  68                 	db	104	;'h'
  1547  00FFC7  6F                 	db	111	;'o'
  1548  00FFC8  75                 	db	117	;'u'
  1549  00FFC9  72                 	db	114	;'r'
  1550  00FFCA  00                 	db	0
  1551  00FFCB                     STR_73:
  1552  00FFCB  6C                 	db	108	;'l'
  1553  00FFCC  65                 	db	101	;'e'
  1554  00FFCD  66                 	db	102	;'f'
  1555  00FFCE  74                 	db	116	;'t'
  1556  00FFCF  00                 	db	0
  1557  00FFD0                     STR_65:
  1558  00FFD0  69                 	db	105	;'i'
  1559  00FFD1  6E                 	db	110	;'n'
  1560  00FFD2  69                 	db	105	;'i'
  1561  00FFD3  74                 	db	116	;'t'
  1562  00FFD4  00                 	db	0
  1563  00FFD5                     STR_2:
  1564  00FFD5  08                 	db	8
  1565  00FFD6  20                 	db	32
  1566  00FFD7  08                 	db	8
  1567  00FFD8  00                 	db	0
  1568  00FFD9                     STR_32:
  1569  00FFD9  6D                 	db	109	;'m'
  1570  00FFDA  41                 	db	65	;'A'
  1571  00FFDB  68                 	db	104	;'h'
  1572  00FFDC  00                 	db	0
  1573  00FFDD                     STR_16:
  1574  00FFDD  64                 	db	100	;'d'
  1575  00FFDE  61                 	db	97	;'a'
  1576  00FFDF  79                 	db	121	;'y'
  1577  00FFE0  00                 	db	0
  1578  00FFE1                     STR_47:
  1579  00FFE1  41                 	db	65	;'A'
  1580  00FFE2  0A                 	db	10
  1581  00FFE3  00                 	db	0
  1582  00FFE4                     STR_1:
  1583  00FFE4  20                 	db	32
  1584  00FFE5  20                 	db	32
  1585  00FFE6  00                 	db	0
  1586  00FFE7                     STR_33:
  1587  00FFE7  64                 	db	100	;'d'
  1588  00FFE8  20                 	db	32
  1589  00FFE9  00                 	db	0
  1590  00FFEA                     STR_34:
  1591  00FFEA  68                 	db	104	;'h'
  1592  00FFEB  20                 	db	32
  1593  00FFEC  00                 	db	0
  1594  00FFED                     STR_35:
  1595  00FFED  6D                 	db	109	;'m'
  1596  00FFEE  20                 	db	32
  1597  00FFEF  00                 	db	0
  1598  00FFF0                     STR_78:
  1599  00FFF0  69                 	db	105	;'i'
  1600  00FFF1  63                 	db	99	;'c'
  1601  00FFF2  00                 	db	0
  1602  00FFF3                     STR_9:
  1603  00FFF3  61                 	db	97	;'a'
  1604  00FFF4  74                 	db	116	;'t'
  1605  00FFF5  00                 	db	0
  1606  00FFF6                     STR_46:
  1607  00FFF6  09                 	db	9
  1608  00FFF7  00                 	db	0
  1609  00FFF8                     STR_13:
  1610  00FFF8  4D                 	db	77	;'M'
  1611  00FFF9  00                 	db	0
  1612  00FFFA                     STR_74:
  1613  00FFFA  6C                 	db	108	;'l'
  1614  00FFFB  00                 	db	0
  1615  00FFFC                     STR_19:
  1616  00FFFC  6D                 	db	109	;'m'
  1617  00FFFD  00                 	db	0
  1618  0000                     
  1619                           ; #config settings
  1620  00FFFE  00                 	db	0	; dummy byte at the end
  1621  0000                     
  1622                           	psect	cinit
  1623  015CC0                     __pcinit:
  1624                           	opt stack 0
  1625  015CC0                     start_initialization:
  1626                           	opt stack 0
  1627  015CC0                     __initialization:
  1628                           	opt stack 0
  1629                           
  1630                           ; Clear objects allocated to BIGRAMl (2000 bytes)
  1631  015CC0  EE03  F0CD         	lfsr	0,__pbssBIGRAMl
  1632  015CC4  EE17 F0D0          	lfsr	1,2000
  1633  015CC8                     clear_0:
  1634  015CC8  6AEE               	clrf	postinc0,c
  1635  015CCA  50E5               	movf	postdec1,w,c
  1636  015CCC  50E1               	movf	fsr1l,w,c
  1637  015CCE  E1FC               	bnz	clear_0
  1638  015CD0  50E2               	movf	fsr1h,w,c
  1639  015CD2  E1FA               	bnz	clear_0
  1640                           
  1641                           ; Clear objects allocated to BANK3 (100 bytes)
  1642  015CD4  EE03  F069         	lfsr	0,__pbssBANK3
  1643  015CD8  0E64               	movlw	100
  1644  015CDA                     clear_1:
  1645  015CDA  6AEE               	clrf	postinc0,c
  1646  015CDC  06E8               	decf	wreg,f,c
  1647  015CDE  E1FD               	bnz	clear_1
  1648                           
  1649                           ; Clear objects allocated to BANK2 (254 bytes)
  1650  015CE0  EE02  F000         	lfsr	0,__pbssBANK2
  1651  015CE4  0EFE               	movlw	254
  1652  015CE6                     clear_2:
  1653  015CE6  6AEE               	clrf	postinc0,c
  1654  015CE8  06E8               	decf	wreg,f,c
  1655  015CEA  E1FD               	bnz	clear_2
  1656                           
  1657                           ; Clear objects allocated to BANK1 (146 bytes)
  1658  015CEC  EE01  F000         	lfsr	0,__pbssBANK1
  1659  015CF0  0E92               	movlw	146
  1660  015CF2                     clear_3:
  1661  015CF2  6AEE               	clrf	postinc0,c
  1662  015CF4  06E8               	decf	wreg,f,c
  1663  015CF6  E1FD               	bnz	clear_3
  1664                           
  1665                           ; Clear objects allocated to BANK0 (31 bytes)
  1666  015CF8  EE00  F0E1         	lfsr	0,__pbssBANK0
  1667  015CFC  0E1F               	movlw	31
  1668  015CFE                     clear_4:
  1669  015CFE  6AEE               	clrf	postinc0,c
  1670  015D00  06E8               	decf	wreg,f,c
  1671  015D02  E1FD               	bnz	clear_4
  1672                           
  1673                           ; Clear objects allocated to COMRAM (43 bytes)
  1674  015D04  EE00  F02D         	lfsr	0,__pbssCOMRAM
  1675  015D08  0E2B               	movlw	43
  1676  015D0A                     clear_5:
  1677  015D0A  6AEE               	clrf	postinc0,c
  1678  015D0C  06E8               	decf	wreg,f,c
  1679  015D0E  E1FD               	bnz	clear_5
  1680                           
  1681                           ; Initialize objects allocated to BANK1 (2 bytes)
  1682                           ; load TBLPTR registers with __pidataBANK1
  1683  015D10  0E88               	movlw	low __pidataBANK1
  1684  015D12  6EF6               	movwf	tblptrl,c
  1685  015D14  0E6C               	movlw	high __pidataBANK1
  1686  015D16  6EF7               	movwf	tblptrh,c
  1687  015D18  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1688  015D1A  6EF8               	movwf	tblptru,c
  1689  015D1C  0009               	tblrd		*+	;fetch initializer
  1690  015D1E  CFF5 F198          	movff	tablat,__pdataBANK1
  1691  015D22  0009               	tblrd		*+	;fetch initializer
  1692  015D24  CFF5 F199          	movff	tablat,__pdataBANK1+1
  1693                           
  1694                           ; Initialize objects allocated to COMRAM (1 bytes)
  1695                           ; load TBLPTR registers with __pidataCOMRAM
  1696  015D28  0E8A               	movlw	low __pidataCOMRAM
  1697  015D2A  6EF6               	movwf	tblptrl,c
  1698  015D2C  0E6C               	movlw	high __pidataCOMRAM
  1699  015D2E  6EF7               	movwf	tblptrh,c
  1700  015D30  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1701  015D32  6EF8               	movwf	tblptru,c
  1702  015D34  0009               	tblrd		*+	;fetch initializer
  1703  015D36  CFF5 F058          	movff	tablat,__pdataCOMRAM
  1704  015D3A                     end_of_initialization:
  1705                           	opt stack 0
  1706  015D3A                     __end_of__initialization:
  1707                           	opt stack 0
  1708  015D3A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1709  015D3C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1710  015D3E  0100               	movlb	0
  1711  015D40  EFE1  F0A4         	goto	_main	;jump to C main() function
  1712                           tblptru	equ	0xFF8
  1713                           tblptrh	equ	0xFF7
  1714                           tblptrl	equ	0xFF6
  1715                           tablat	equ	0xFF5
  1716                           postinc0	equ	0xFEE
  1717                           wreg	equ	0xFE8
  1718                           postdec1	equ	0xFE5
  1719                           fsr1h	equ	0xFE2
  1720                           fsr1l	equ	0xFE1
  1721                           
  1722                           	psect	bssCOMRAM
  1723  00002D                     __pbssCOMRAM:
  1724                           	opt stack 0
  1725  00002D                     _ep_data_in:
  1726                           	opt stack 0
  1727  00002D                     	ds	3
  1728  000030                     _ep_data_out:
  1729                           	opt stack 0
  1730  000030                     	ds	3
  1731  000033                     _CDCDataOutHandle:
  1732                           	opt stack 0
  1733  000033                     	ds	2
  1734  000035                     _pBDTEntryEP0OutCurrent:
  1735                           	opt stack 0
  1736  000035                     	ds	2
  1737  000037                     _pBDTEntryEP0OutNext:
  1738                           	opt stack 0
  1739  000037                     	ds	2
  1740  000039                     ISR@cnt_t1:
  1741                           	opt stack 0
  1742  000039                     	ds	1
  1743  00003A                     RTCC_loop@prev_halfsec:
  1744                           	opt stack 0
  1745  00003A                     	ds	1
  1746  00003B                     _BothEP0OutUOWNsSet:
  1747                           	opt stack 0
  1748  00003B                     	ds	1
  1749  00003C                     _RemoteWakeup:
  1750                           	opt stack 0
  1751  00003C                     	ds	1
  1752  00003D                     _USBDeferINDataStagePackets:
  1753                           	opt stack 0
  1754  00003D                     	ds	1
  1755  00003E                     _USBDeferOUTDataStagePackets:
  1756                           	opt stack 0
  1757  00003E                     	ds	1
  1758  00003F                     _USBDeferStatusStagePacket:
  1759                           	opt stack 0
  1760  00003F                     	ds	1
  1761  000040                     _USBDeviceState:
  1762                           	opt stack 0
  1763  000040                     	ds	1
  1764  000041                     _USBStatusStageEnabledFlag1:
  1765                           	opt stack 0
  1766  000041                     	ds	1
  1767  000042                     _USBStatusStageEnabledFlag2:
  1768                           	opt stack 0
  1769  000042                     	ds	1
  1770  000043                     _USBStatusStageTimeoutCounter:
  1771                           	opt stack 0
  1772  000043                     	ds	1
  1773  000044                     _cdc_mem_type:
  1774                           	opt stack 0
  1775  000044                     	ds	1
  1776  000045                     _cdc_tx_len:
  1777                           	opt stack 0
  1778  000045                     	ds	1
  1779  000046                     _colon:
  1780                           	opt stack 0
  1781  000046                     	ds	1
  1782  000047                     _controlTransferState:
  1783                           	opt stack 0
  1784  000047                     	ds	1
  1785  000048                     _ctmu_flag:
  1786                           	opt stack 0
  1787  000048                     	ds	1
  1788  000049                     _ctmu_ratio:
  1789                           	opt stack 0
  1790  000049                     	ds	1
  1791  00004A                     _cut_time_flag:
  1792                           	opt stack 0
  1793  00004A                     	ds	1
  1794  00004B                     _display_flag:
  1795                           	opt stack 0
  1796  00004B                     	ds	1
  1797  00004C                     _endpoint_number:
  1798                           	opt stack 0
  1799  00004C                     	ds	1
  1800  00004D                     _next_print_content:
  1801                           	opt stack 0
  1802  00004D                     	ds	1
  1803  00004E                     _shortPacketStatus:
  1804                           	opt stack 0
  1805  00004E                     	ds	1
  1806  00004F                     _sleep_flag:
  1807                           	opt stack 0
  1808  00004F                     	ds	1
  1809  000050                     _time_change_flag:
  1810                           	opt stack 0
  1811  000050                     	ds	1
  1812  000051                     _delay_display:
  1813                           	opt stack 0
  1814  000051                     	ds	3
  1815  000054                     _USBAlternateInterface:
  1816                           	opt stack 0
  1817  000054                     	ds	2
  1818  000056                     _USBActiveConfiguration:
  1819                           	opt stack 0
  1820  000056                     	ds	1
  1821  000057                     _USTATcopy:
  1822                           	opt stack 0
  1823  000057                     	ds	1
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           postdec1	equ	0xFE5
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           
  1834                           	psect	dataCOMRAM
  1835  000058                     __pdataCOMRAM:
  1836                           	opt stack 0
  1837  000058                     epoch_to_caltime@month_cache:
  1838                           	opt stack 0
  1839  000058                     	ds	1
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           postinc0	equ	0xFEE
  1845                           wreg	equ	0xFE8
  1846                           postdec1	equ	0xFE5
  1847                           fsr1h	equ	0xFE2
  1848                           fsr1l	equ	0xFE1
  1849                           
  1850                           	psect	bssBANK0
  1851  0000E1                     __pbssBANK0:
  1852                           	opt stack 0
  1853  0000E1                     _outPipes:
  1854                           	opt stack 0
  1855  0000E1                     	ds	9
  1856  0000EA                     _inPipes:
  1857                           	opt stack 0
  1858  0000EA                     	ds	6
  1859  0000F0                     _pBDTEntryIn:
  1860                           	opt stack 0
  1861  0000F0                     	ds	6
  1862  0000F6                     _cdc_rx_len:
  1863                           	opt stack 0
  1864  0000F6                     	ds	1
  1865  0000F7                     _cdc_trf_state:
  1866                           	opt stack 0
  1867  0000F7                     	ds	1
  1868  0000F8                     _edit_flag:
  1869                           	opt stack 0
  1870  0000F8                     	ds	1
  1871  0000F9                     _halfsec:
  1872                           	opt stack 0
  1873  0000F9                     	ds	1
  1874  0000FA                     _print_content:
  1875                           	opt stack 0
  1876  0000FA                     	ds	1
  1877  0000FB                     _print_port:
  1878                           	opt stack 0
  1879  0000FB                     	ds	1
  1880  0000FC                     _epoch_now:
  1881                           	opt stack 0
  1882  0000FC                     	ds	4
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           postdec1	equ	0xFE5
  1890                           fsr1h	equ	0xFE2
  1891                           fsr1l	equ	0xFE1
  1892                           
  1893                           	psect	bssBANK1
  1894  000100                     __pbssBANK1:
  1895                           	opt stack 0
  1896  000100                     _pBDTEntryOut:
  1897                           	opt stack 0
  1898  000100                     	ds	6
  1899  000106                     _ms:
  1900                           	opt stack 0
  1901  000106                     	ds	4
  1902  00010A                     LED_indicator@cnt:
  1903                           	opt stack 0
  1904  00010A                     	ds	3
  1905  00010D                     LED_indicator@cntf:
  1906                           	opt stack 0
  1907  00010D                     	ds	3
  1908  000110                     _d1:
  1909                           	opt stack 0
  1910  000110                     	ds	3
  1911  000113                     _pCDCDst:
  1912                           	opt stack 0
  1913  000113                     	ds	3
  1914  000116                     _pCDCSrc:
  1915                           	opt stack 0
  1916  000116                     	ds	3
  1917  000119                     ISR@cnt_t0:
  1918                           	opt stack 0
  1919  000119                     	ds	2
  1920  00011B                     USBCBSendResume@delay_count:
  1921                           	opt stack 0
  1922  00011B                     	ds	2
  1923  00011D                     _CDCDataInHandle:
  1924                           	opt stack 0
  1925  00011D                     	ds	2
  1926  00011F                     _ctmu_value_m:
  1927                           	opt stack 0
  1928  00011F                     	ds	2
  1929  000121                     _pDst:
  1930                           	opt stack 0
  1931  000121                     	ds	2
  1932  000123                     epoch_to_caltime@day_cache:
  1933                           	opt stack 0
  1934  000123                     	ds	2
  1935  000125                     millis_timer@cnt:
  1936                           	opt stack 0
  1937  000125                     	ds	2
  1938  000127                     _USBBusIsSuspended:
  1939                           	opt stack 0
  1940  000127                     	ds	1
  1941  000128                     _control_signal_bitmap:
  1942                           	opt stack 0
  1943  000128                     	ds	1
  1944  000129                     epoch_to_caltime@year_cache:
  1945                           	opt stack 0
  1946  000129                     	ds	1
  1947  00012A                     my_terminal_loop@command_init:
  1948                           	opt stack 0
  1949  00012A                     	ds	1
  1950  00012B                     _port:
  1951                           	opt stack 0
  1952  00012B                     	ds	69
  1953  000170                     _tx_buf:
  1954                           	opt stack 0
  1955  000170                     	ds	8
  1956  000178                     my_terminal_loop@command:
  1957                           	opt stack 0
  1958  000178                     	ds	8
  1959  000180                     _caltime_now:
  1960                           	opt stack 0
  1961  000180                     	ds	7
  1962  000187                     _line_coding:
  1963                           	opt stack 0
  1964  000187                     	ds	7
  1965  00018E                     _ctmu_m:
  1966                           	opt stack 0
  1967  00018E                     	ds	4
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec1	equ	0xFE5
  1975                           fsr1h	equ	0xFE2
  1976                           fsr1l	equ	0xFE1
  1977                           
  1978                           	psect	dataBANK1
  1979  000198                     __pdataBANK1:
  1980                           	opt stack 0
  1981  000198                     I2C_LCD_SetCursor@F8672:
  1982                           	opt stack 0
  1983  000198                     	ds	2
  1984                           tblptru	equ	0xFF8
  1985                           tblptrh	equ	0xFF7
  1986                           tblptrl	equ	0xFF6
  1987                           tablat	equ	0xFF5
  1988                           postinc0	equ	0xFEE
  1989                           wreg	equ	0xFE8
  1990                           postdec1	equ	0xFE5
  1991                           fsr1h	equ	0xFE2
  1992                           fsr1l	equ	0xFE1
  1993                           
  1994                           	psect	bssBANK2
  1995  000200                     __pbssBANK2:
  1996                           	opt stack 0
  1997  000200                     _cdc_notice:
  1998                           	opt stack 0
  1999  000200                     	ds	10
  2000  00020A                     _BaudRateGen:
  2001                           	opt stack 0
  2002  00020A                     	ds	4
  2003  00020E                     _cdc_data_rx:
  2004                           	opt stack 0
  2005  00020E                     	ds	64
  2006  00024E                     _cdc_data_tx:
  2007                           	opt stack 0
  2008  00024E                     	ds	64
  2009  00028E                     my_terminal_loop@op0:
  2010                           	opt stack 0
  2011  00028E                     	ds	20
  2012  0002A2                     my_terminal_loop@op1:
  2013                           	opt stack 0
  2014  0002A2                     	ds	20
  2015  0002B6                     my_terminal_loop@op2:
  2016                           	opt stack 0
  2017  0002B6                     	ds	20
  2018  0002CA                     my_terminal_loop@op3:
  2019                           	opt stack 0
  2020  0002CA                     	ds	20
  2021  0002DE                     _dummy_encapsulated_cmd_response:
  2022                           	opt stack 0
  2023  0002DE                     	ds	8
  2024  0002E6                     _rx_buf:
  2025                           	opt stack 0
  2026  0002E6                     	ds	8
  2027  0002EE                     _usb_rx:
  2028                           	opt stack 0
  2029  0002EE                     	ds	8
  2030  0002F6                     _usb_tx:
  2031                           	opt stack 0
  2032  0002F6                     	ds	8
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           postdec1	equ	0xFE5
  2040                           fsr1h	equ	0xFE2
  2041                           fsr1l	equ	0xFE1
  2042                           
  2043                           	psect	bssBANK3
  2044  000369                     __pbssBANK3:
  2045                           	opt stack 0
  2046  000369                     main_init@usbrx:
  2047                           	opt stack 0
  2048  000369                     	ds	100
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postdec1	equ	0xFE5
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           
  2059                           	psect	bssBIGRAMl
  2060  0003CD                     __pbssBIGRAMl:
  2061                           	opt stack 0
  2062  0003CD                     main_init@usbtx:
  2063                           	opt stack 0
  2064  0003CD                     	ds	2000
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           postinc0	equ	0xFEE
  2070                           wreg	equ	0xFE8
  2071                           postdec1	equ	0xFE5
  2072                           fsr1h	equ	0xFE2
  2073                           fsr1l	equ	0xFE1
  2074                           
  2075                           	psect	cstackBANK3
  2076  000300                     __pcstackBANK3:
  2077                           	opt stack 0
  2078  000300                     my_terminal_loop@buf:
  2079                           	opt stack 0
  2080                           
  2081                           ; 100 bytes @ 0x0
  2082  000300                     	ds	100
  2083  000364                     _my_terminal_loop$5280:
  2084                           	opt stack 0
  2085                           
  2086                           ; 2 bytes @ 0x64
  2087  000364                     	ds	2
  2088  000366                     my_terminal_loop@i_2171:
  2089                           	opt stack 0
  2090                           
  2091                           ; 1 bytes @ 0x66
  2092  000366                     	ds	1
  2093  000367                     my_terminal_loop@ascii:
  2094                           	opt stack 0
  2095                           
  2096                           ; 1 bytes @ 0x67
  2097  000367                     	ds	1
  2098  000368                     my_terminal_loop@i:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x68
  2102  000368                     	ds	1
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           postinc0	equ	0xFEE
  2108                           wreg	equ	0xFE8
  2109                           postdec1	equ	0xFE5
  2110                           fsr1h	equ	0xFE2
  2111                           fsr1l	equ	0xFE1
  2112                           
  2113                           	psect	cstackBANK1
  2114  000192                     __pcstackBANK1:
  2115                           	opt stack 0
  2116  000192                     my_terminal_loop@tx:
  2117                           	opt stack 0
  2118                           
  2119                           ; 2 bytes @ 0x0
  2120  000192                     	ds	2
  2121  000194                     my_terminal_loop@rx:
  2122                           	opt stack 0
  2123                           
  2124                           ; 2 bytes @ 0x2
  2125  000194                     	ds	2
  2126  000196                     ??_my_terminal_loop:
  2127                           
  2128                           ; 0 bytes @ 0x4
  2129  000196                     	ds	2
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           postinc0	equ	0xFEE
  2135                           wreg	equ	0xFE8
  2136                           postdec1	equ	0xFE5
  2137                           fsr1h	equ	0xFE2
  2138                           fsr1l	equ	0xFE1
  2139                           
  2140                           	psect	cstackBANK0
  2141  000060                     __pcstackBANK0:
  2142                           	opt stack 0
  2143  000060                     ??_isdigit:
  2144  000060                     ??_timer0_init:
  2145  000060                     ??_timer3_init:
  2146  000060                     ??_I2C_IdleCheck:
  2147  000060                     ??_x_to_d:
  2148  000060                     ?_ADC:
  2149                           	opt stack 0
  2150  000060                     ?_ringbuf_num:
  2151                           	opt stack 0
  2152  000060                     ?_USBTransferOnePacket:
  2153                           	opt stack 0
  2154  000060                     ?___awdiv:
  2155                           	opt stack 0
  2156  000060                     ?___awmod:
  2157                           	opt stack 0
  2158  000060                     ?___lwmod:
  2159                           	opt stack 0
  2160  000060                     ?___lldiv:
  2161                           	opt stack 0
  2162  000060                     timer1_init@clock_select:
  2163                           	opt stack 0
  2164  000060                     ADC_init@p_ref:
  2165                           	opt stack 0
  2166  000060                     OUT@value:
  2167                           	opt stack 0
  2168  000060                     IN@b:
  2169                           	opt stack 0
  2170  000060                     LED_OUT@value:
  2171                           	opt stack 0
  2172  000060                     _is_usb_available$2609:
  2173                           	opt stack 0
  2174  000060                     USBTransferOnePacket@dir:
  2175                           	opt stack 0
  2176  000060                     ringbuf_init@rb:
  2177                           	opt stack 0
  2178  000060                     ringbuf_num@rb:
  2179                           	opt stack 0
  2180  000060                     ringbuf_delete@rb:
  2181                           	opt stack 0
  2182  000060                     Delay_ms@ms:
  2183                           	opt stack 0
  2184  000060                     delay_set@d:
  2185                           	opt stack 0
  2186  000060                     my_strcmp@str1:
  2187                           	opt stack 0
  2188  000060                     putUSBUSART@data:
  2189                           	opt stack 0
  2190  000060                     ___awdiv@dividend:
  2191                           	opt stack 0
  2192  000060                     ___awmod@dividend:
  2193                           	opt stack 0
  2194  000060                     ___lwmod@dividend:
  2195                           	opt stack 0
  2196  000060                     memset@p1:
  2197                           	opt stack 0
  2198  000060                     ___lldiv@dividend:
  2199                           	opt stack 0
  2200                           
  2201                           ; 4 bytes @ 0x0
  2202  000060                     	ds	1
  2203  000061                     ??_timer1_init:
  2204  000061                     timer0_init@prescaler:
  2205                           	opt stack 0
  2206  000061                     timer3_init@prescaler:
  2207                           	opt stack 0
  2208  000061                     I2C_IdleCheck@mask:
  2209                           	opt stack 0
  2210  000061                     x_to_d@hex:
  2211                           	opt stack 0
  2212  000061                     OUT@b:
  2213                           	opt stack 0
  2214  000061                     LED_OUT@b:
  2215                           	opt stack 0
  2216  000061                     _isdigit$4728:
  2217                           	opt stack 0
  2218  000061                     USBTransferOnePacket@data:
  2219                           	opt stack 0
  2220                           
  2221                           ; 2 bytes @ 0x1
  2222  000061                     	ds	1
  2223  000062                     ??_ADC:
  2224  000062                     ??_ringbuf_num:
  2225  000062                     ??_Delay_ms:
  2226  000062                     timer1_init@prescaler:
  2227                           	opt stack 0
  2228  000062                     I2C_Start@rw:
  2229                           	opt stack 0
  2230  000062                     I2C_Send@data:
  2231                           	opt stack 0
  2232  000062                     putUSBUSART@length:
  2233                           	opt stack 0
  2234  000062                     isdigit@c:
  2235                           	opt stack 0
  2236  000062                     ringbuf_init@internal_buf:
  2237                           	opt stack 0
  2238  000062                     delay_set@value:
  2239                           	opt stack 0
  2240  000062                     RTCC_to_caltime@ct:
  2241                           	opt stack 0
  2242  000062                     my_strcmp@str2:
  2243                           	opt stack 0
  2244  000062                     ___awdiv@divisor:
  2245                           	opt stack 0
  2246  000062                     ___awmod@divisor:
  2247                           	opt stack 0
  2248  000062                     ___lwmod@divisor:
  2249                           	opt stack 0
  2250  000062                     memset@c:
  2251                           	opt stack 0
  2252                           
  2253                           ; 2 bytes @ 0x2
  2254  000062                     	ds	1
  2255  000063                     ADC@ch:
  2256                           	opt stack 0
  2257  000063                     I2C_Start@adrs:
  2258                           	opt stack 0
  2259  000063                     USBTransferOnePacket@len:
  2260                           	opt stack 0
  2261                           
  2262                           ; 1 bytes @ 0x3
  2263  000063                     	ds	1
  2264  000064                     ??_my_strcmp:
  2265  000064                     I2C_LCD_Command@c:
  2266                           	opt stack 0
  2267  000064                     I2C_LCD_Putc@c:
  2268                           	opt stack 0
  2269  000064                     RTCC_to_caltime@dumy:
  2270                           	opt stack 0
  2271  000064                     port_loop@i:
  2272                           	opt stack 0
  2273  000064                     USBTransferOnePacket@ep:
  2274                           	opt stack 0
  2275  000064                     ___awdiv@counter:
  2276                           	opt stack 0
  2277  000064                     ___awmod@counter:
  2278                           	opt stack 0
  2279  000064                     ___lwmod@counter:
  2280                           	opt stack 0
  2281  000064                     ringbuf_init@bufsize:
  2282                           	opt stack 0
  2283  000064                     I2C_LCD_Puts@s:
  2284                           	opt stack 0
  2285  000064                     memset@n:
  2286                           	opt stack 0
  2287  000064                     ___lldiv@divisor:
  2288                           	opt stack 0
  2289                           
  2290                           ; 4 bytes @ 0x4
  2291  000064                     	ds	1
  2292  000065                     I2C_LCD_Command@ans:
  2293                           	opt stack 0
  2294  000065                     I2C_LCD_Putc@ans:
  2295                           	opt stack 0
  2296  000065                     ___awdiv@sign:
  2297                           	opt stack 0
  2298  000065                     ___awmod@sign:
  2299                           	opt stack 0
  2300  000065                     USBTransferOnePacket@handle:
  2301                           	opt stack 0
  2302                           
  2303                           ; 2 bytes @ 0x5
  2304  000065                     	ds	1
  2305  000066                     ??_I2C_LCD_Clear:
  2306  000066                     ??_I2C_LCD_Puts:
  2307  000066                     I2C_LCD_SetCursor@row:
  2308                           	opt stack 0
  2309  000066                     month_length@month:
  2310                           	opt stack 0
  2311  000066                     ___awdiv@quotient:
  2312                           	opt stack 0
  2313  000066                     memset@p:
  2314                           	opt stack 0
  2315                           
  2316                           ; 2 bytes @ 0x6
  2317  000066                     	ds	1
  2318  000067                     ??_CDCTxService:
  2319  000067                     ??_month_length:
  2320  000067                     I2C_LCD_SetCursor@row_offsets:
  2321                           	opt stack 0
  2322  000067                     I2C_LCD_Puts@ans:
  2323                           	opt stack 0
  2324  000067                     getsUSBUSART@buffer:
  2325                           	opt stack 0
  2326                           
  2327                           ; 2 bytes @ 0x7
  2328  000067                     	ds	1
  2329  000068                     d_to_x@dec:
  2330                           	opt stack 0
  2331  000068                     USBDeviceInit@i:
  2332                           	opt stack 0
  2333  000068                     ringbuf_pop@rb:
  2334                           	opt stack 0
  2335  000068                     ringbuf_backspace@rb:
  2336                           	opt stack 0
  2337  000068                     _CDCTxService$4409:
  2338                           	opt stack 0
  2339  000068                     ___lldiv@quotient:
  2340                           	opt stack 0
  2341                           
  2342                           ; 4 bytes @ 0x8
  2343  000068                     	ds	1
  2344  000069                     I2C_LCD_SetCursor@col:
  2345                           	opt stack 0
  2346  000069                     getsUSBUSART@len:
  2347                           	opt stack 0
  2348  000069                     caltime_to_RTCC@ct:
  2349                           	opt stack 0
  2350                           
  2351                           ; 2 bytes @ 0x9
  2352  000069                     	ds	1
  2353  00006A                     ??_getsUSBUSART:
  2354  00006A                     ??_ringbuf_pop:
  2355  00006A                     ??_ringbuf_backspace:
  2356  00006A                     sleep_loop@i:
  2357                           	opt stack 0
  2358  00006A                     CDCTxService@i:
  2359                           	opt stack 0
  2360                           
  2361                           ; 1 bytes @ 0xA
  2362  00006A                     	ds	1
  2363  00006B                     month_length@year:
  2364                           	opt stack 0
  2365  00006B                     CDCTxService@byte_to_send:
  2366                           	opt stack 0
  2367  00006B                     _getsUSBUSART$4361:
  2368                           	opt stack 0
  2369                           
  2370                           ; 2 bytes @ 0xB
  2371  00006B                     	ds	1
  2372  00006C                     ?_put_string_usb:
  2373                           	opt stack 0
  2374  00006C                     ___lldiv@counter:
  2375                           	opt stack 0
  2376  00006C                     put_string_usb@s:
  2377                           	opt stack 0
  2378                           
  2379                           ; 2 bytes @ 0xC
  2380  00006C                     	ds	1
  2381  00006D                     ?_get_string_usb:
  2382                           	opt stack 0
  2383  00006D                     ?_CTMU_read:
  2384                           	opt stack 0
  2385  00006D                     ?___lmul:
  2386                           	opt stack 0
  2387  00006D                     ?___llmod:
  2388                           	opt stack 0
  2389  00006D                     get_string_usb@s:
  2390                           	opt stack 0
  2391  00006D                     ___lmul@multiplier:
  2392                           	opt stack 0
  2393  00006D                     ___llmod@dividend:
  2394                           	opt stack 0
  2395                           
  2396                           ; 4 bytes @ 0xD
  2397  00006D                     	ds	1
  2398  00006E                     ringbuf_pop@ret:
  2399                           	opt stack 0
  2400  00006E                     put_string_usb@len:
  2401                           	opt stack 0
  2402                           
  2403                           ; 2 bytes @ 0xE
  2404  00006E                     	ds	1
  2405  00006F                     ??_CTMU_read:
  2406  00006F                     get_string_usb@len:
  2407                           	opt stack 0
  2408                           
  2409                           ; 2 bytes @ 0xF
  2410  00006F                     	ds	1
  2411  000070                     CTMU_read@ch:
  2412                           	opt stack 0
  2413                           
  2414                           ; 1 bytes @ 0x10
  2415  000070                     	ds	1
  2416  000071                     ??_get_string_usb:
  2417  000071                     CTMU_read@sum:
  2418                           	opt stack 0
  2419  000071                     ___lmul@multiplicand:
  2420                           	opt stack 0
  2421  000071                     ___llmod@divisor:
  2422                           	opt stack 0
  2423                           
  2424                           ; 4 bytes @ 0x11
  2425  000071                     	ds	1
  2426  000072                     get_string_usb@rx_len:
  2427                           	opt stack 0
  2428                           
  2429                           ; 2 bytes @ 0x12
  2430  000072                     	ds	3
  2431  000075                     CTMU_read@i:
  2432                           	opt stack 0
  2433  000075                     ___llmod@counter:
  2434                           	opt stack 0
  2435  000075                     ___lmul@product:
  2436                           	opt stack 0
  2437                           
  2438                           ; 4 bytes @ 0x15
  2439  000075                     	ds	1
  2440  000076                     ?___wmul:
  2441                           	opt stack 0
  2442  000076                     ___wmul@multiplier:
  2443                           	opt stack 0
  2444                           
  2445                           ; 2 bytes @ 0x16
  2446  000076                     	ds	2
  2447  000078                     ___wmul@multiplicand:
  2448                           	opt stack 0
  2449                           
  2450                           ; 2 bytes @ 0x18
  2451  000078                     	ds	1
  2452  000079                     ?_get_quot_rem:
  2453                           	opt stack 0
  2454  000079                     get_quot_rem@quot:
  2455                           	opt stack 0
  2456  000079                     caltime_to_epoch@ct:
  2457                           	opt stack 0
  2458                           
  2459                           ; 2 bytes @ 0x19
  2460  000079                     	ds	1
  2461  00007A                     ___wmul@product:
  2462                           	opt stack 0
  2463                           
  2464                           ; 2 bytes @ 0x1A
  2465  00007A                     	ds	1
  2466  00007B                     get_quot_rem@div:
  2467                           	opt stack 0
  2468  00007B                     caltime_to_epoch@ep:
  2469                           	opt stack 0
  2470                           
  2471                           ; 2 bytes @ 0x1B
  2472  00007B                     	ds	1
  2473  00007C                     ??_Auto_cut:
  2474  00007C                     ?_my_atoi:
  2475                           	opt stack 0
  2476  00007C                     ?___lwdiv:
  2477                           	opt stack 0
  2478  00007C                     my_atoi@str:
  2479                           	opt stack 0
  2480  00007C                     ___lwdiv@dividend:
  2481                           	opt stack 0
  2482                           
  2483                           ; 2 bytes @ 0x1C
  2484  00007C                     	ds	1
  2485  00007D                     ??_caltime_to_epoch:
  2486  00007D                     get_quot_rem@num:
  2487                           	opt stack 0
  2488                           
  2489                           ; 4 bytes @ 0x1D
  2490  00007D                     	ds	1
  2491  00007E                     ??_my_atoi:
  2492  00007E                     Auto_cut@i:
  2493                           	opt stack 0
  2494  00007E                     ___lwdiv@divisor:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0x1E
  2498  00007E                     	ds	2
  2499  000080                     ___lwdiv@counter:
  2500                           	opt stack 0
  2501                           
  2502                           ; 1 bytes @ 0x20
  2503  000080                     	ds	1
  2504  000081                     caltime_to_epoch@year:
  2505                           	opt stack 0
  2506  000081                     epoch_to_caltime@ct:
  2507                           	opt stack 0
  2508  000081                     ___lwdiv@quotient:
  2509                           	opt stack 0
  2510                           
  2511                           ; 2 bytes @ 0x21
  2512  000081                     	ds	1
  2513  000082                     caltime_to_epoch@month_1936:
  2514                           	opt stack 0
  2515  000082                     my_atoi@ret:
  2516                           	opt stack 0
  2517                           
  2518                           ; 2 bytes @ 0x22
  2519  000082                     	ds	1
  2520  000083                     ?_sprintf:
  2521                           	opt stack 0
  2522  000083                     ctmu_set_ratio@percentage:
  2523                           	opt stack 0
  2524  000083                     ringbuf_put@rb:
  2525                           	opt stack 0
  2526  000083                     button_timer_interrupt@bt:
  2527                           	opt stack 0
  2528  000083                     epoch_to_caltime@ep:
  2529                           	opt stack 0
  2530  000083                     my_utoa@str:
  2531                           	opt stack 0
  2532  000083                     sprintf@sp:
  2533                           	opt stack 0
  2534  000083                     caltime_to_epoch@epoch:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x23
  2538  000083                     	ds	2
  2539  000085                     ??_epoch_to_caltime:
  2540  000085                     ringbuf_put@asciicode:
  2541                           	opt stack 0
  2542  000085                     button_timer_interrupt@sw_value:
  2543                           	opt stack 0
  2544  000085                     my_utoa@value:
  2545                           	opt stack 0
  2546  000085                     sprintf@f:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0x25
  2550  000085                     	ds	1
  2551  000086                     ??_ringbuf_put:
  2552  000086                     
  2553                           ; 0 bytes @ 0x26
  2554  000086                     	ds	1
  2555  000087                     caltime_to_epoch@month:
  2556                           	opt stack 0
  2557  000087                     my_utoa@digits:
  2558                           	opt stack 0
  2559  000087                     epoch_to_caltime@day_since_epoch:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x27
  2563  000087                     	ds	1
  2564  000088                     my_utoa@d:
  2565                           	opt stack 0
  2566  000088                     RTCC_from_RTCC@ct:
  2567                           	opt stack 0
  2568                           
  2569                           ; 2 bytes @ 0x28
  2570  000088                     	ds	1
  2571  000089                     epoch_to_caltime@day:
  2572                           	opt stack 0
  2573  000089                     my_utoa@v:
  2574                           	opt stack 0
  2575                           
  2576                           ; 2 bytes @ 0x29
  2577  000089                     	ds	1
  2578  00008A                     ringbuf_put_num@rb:
  2579                           	opt stack 0
  2580  00008A                     ringbuf_put_str@rb:
  2581                           	opt stack 0
  2582  00008A                     RTCC_from_RTCC@ep:
  2583                           	opt stack 0
  2584  00008A                     USB_loop@rx_len:
  2585                           	opt stack 0
  2586                           
  2587                           ; 2 bytes @ 0x2A
  2588  00008A                     	ds	1
  2589  00008B                     epoch_to_caltime@year:
  2590                           	opt stack 0
  2591  00008B                     display_dec@edit:
  2592                           	opt stack 0
  2593                           
  2594                           ; 1 bytes @ 0x2B
  2595  00008B                     	ds	1
  2596  00008C                     epoch_to_caltime@month:
  2597                           	opt stack 0
  2598  00008C                     USB_loop@data:
  2599                           	opt stack 0
  2600  00008C                     ringbuf_put_num@value:
  2601                           	opt stack 0
  2602  00008C                     ringbuf_put_str@str:
  2603                           	opt stack 0
  2604  00008C                     display_dec@str:
  2605                           	opt stack 0
  2606                           
  2607                           ; 10 bytes @ 0x2C
  2608  00008C                     	ds	1
  2609  00008D                     epoch_to_caltime@num:
  2610                           	opt stack 0
  2611                           
  2612                           ; 4 bytes @ 0x2D
  2613  00008D                     	ds	1
  2614  00008E                     ringbuf_put_num@digits:
  2615                           	opt stack 0
  2616                           
  2617                           ; 1 bytes @ 0x2E
  2618  00008E                     	ds	1
  2619  00008F                     ringbuf_put_num@i:
  2620                           	opt stack 0
  2621                           
  2622                           ; 1 bytes @ 0x2F
  2623  00008F                     	ds	1
  2624  000090                     ringbuf_put_num@temp:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0x30
  2628  000090                     	ds	1
  2629  000091                     RTCC_from_caltime@ct:
  2630                           	opt stack 0
  2631  000091                     RTCC_from_epoch@ct:
  2632                           	opt stack 0
  2633                           
  2634                           ; 2 bytes @ 0x31
  2635  000091                     	ds	1
  2636  000092                     command_get_data@tx:
  2637                           	opt stack 0
  2638                           
  2639                           ; 2 bytes @ 0x32
  2640  000092                     	ds	1
  2641  000093                     RTCC_from_caltime@ep:
  2642                           	opt stack 0
  2643  000093                     RTCC_from_epoch@ep:
  2644                           	opt stack 0
  2645                           
  2646                           ; 2 bytes @ 0x33
  2647  000093                     	ds	1
  2648  000094                     command_get_data@content:
  2649                           	opt stack 0
  2650                           
  2651                           ; 1 bytes @ 0x34
  2652  000094                     	ds	1
  2653  000095                     ??_sprintf:
  2654  000095                     command_get_data@i:
  2655                           	opt stack 0
  2656  000095                     RTCC_adjust_time_inc@ct:
  2657                           	opt stack 0
  2658  000095                     RTCC_adjust_time_dec@ct:
  2659                           	opt stack 0
  2660                           
  2661                           ; 2 bytes @ 0x35
  2662  000095                     	ds	1
  2663  000096                     display_dec@dec:
  2664                           	opt stack 0
  2665  000096                     command_get_data@str:
  2666                           	opt stack 0
  2667                           
  2668                           ; 10 bytes @ 0x36
  2669  000096                     	ds	1
  2670  000097                     display_time_1602@ct:
  2671                           	opt stack 0
  2672  000097                     RTCC_adjust_time_inc@ep:
  2673                           	opt stack 0
  2674  000097                     RTCC_adjust_time_dec@ep:
  2675                           	opt stack 0
  2676                           
  2677                           ; 2 bytes @ 0x37
  2678  000097                     	ds	2
  2679  000099                     ??_RTCC_adjust_time_inc:
  2680  000099                     ??_RTCC_adjust_time_dec:
  2681  000099                     sprintf@prec:
  2682                           	opt stack 0
  2683  000099                     display_time_1602@ep:
  2684                           	opt stack 0
  2685                           
  2686                           ; 2 bytes @ 0x39
  2687  000099                     	ds	1
  2688  00009A                     sprintf@ap:
  2689                           	opt stack 0
  2690                           
  2691                           ; 2 bytes @ 0x3A
  2692  00009A                     	ds	1
  2693  00009B                     ??_display_time_1602:
  2694                           
  2695                           ; 0 bytes @ 0x3B
  2696  00009B                     	ds	1
  2697  00009C                     sprintf@cp:
  2698                           	opt stack 0
  2699  00009C                     display_LCD@str:
  2700                           	opt stack 0
  2701                           
  2702                           ; 10 bytes @ 0x3C
  2703  00009C                     	ds	1
  2704  00009D                     RTCC_adjust_time_inc@i_2018:
  2705                           	opt stack 0
  2706  00009D                     RTCC_adjust_time_dec@i_2031:
  2707                           	opt stack 0
  2708                           
  2709                           ; 1 bytes @ 0x3D
  2710  00009D                     	ds	1
  2711  00009E                     RTCC_adjust_time_inc@i:
  2712                           	opt stack 0
  2713  00009E                     RTCC_adjust_time_dec@i:
  2714                           	opt stack 0
  2715  00009E                     sprintf@val:
  2716                           	opt stack 0
  2717                           
  2718                           ; 2 bytes @ 0x3E
  2719  00009E                     	ds	1
  2720  00009F                     RTCC_adjust_time_button@mode:
  2721                           	opt stack 0
  2722                           
  2723                           ; 2 bytes @ 0x3F
  2724  00009F                     	ds	1
  2725  0000A0                     sprintf@len:
  2726                           	opt stack 0
  2727  0000A0                     _command_get_data$5283:
  2728                           	opt stack 0
  2729                           
  2730                           ; 4 bytes @ 0x40
  2731  0000A0                     	ds	1
  2732  0000A1                     RTCC_adjust_time_button@cnt_inc:
  2733                           	opt stack 0
  2734                           
  2735                           ; 2 bytes @ 0x41
  2736  0000A1                     	ds	1
  2737  0000A2                     sprintf@flag:
  2738                           	opt stack 0
  2739                           
  2740                           ; 1 bytes @ 0x42
  2741  0000A2                     	ds	1
  2742  0000A3                     sprintf@c:
  2743                           	opt stack 0
  2744  0000A3                     RTCC_adjust_time_button@cnt_dec:
  2745                           	opt stack 0
  2746                           
  2747                           ; 2 bytes @ 0x43
  2748  0000A3                     	ds	1
  2749  0000A4                     sprintf@width:
  2750                           	opt stack 0
  2751                           
  2752                           ; 2 bytes @ 0x44
  2753  0000A4                     	ds	1
  2754  0000A5                     
  2755                           ; 0 bytes @ 0x45
  2756  0000A5                     	ds	1
  2757  0000A6                     print_time@tx:
  2758                           	opt stack 0
  2759  0000A6                     _display_LCD$5282:
  2760                           	opt stack 0
  2761                           
  2762                           ; 4 bytes @ 0x46
  2763  0000A6                     	ds	2
  2764  0000A8                     print_time@str:
  2765                           	opt stack 0
  2766                           
  2767                           ; 30 bytes @ 0x48
  2768  0000A8                     	ds	2
  2769  0000AA                     
  2770                           ; 0 bytes @ 0x4A
  2771  0000AA                     	ds	28
  2772  0000C6                     command_at_hand@tx:
  2773                           	opt stack 0
  2774                           
  2775                           ; 2 bytes @ 0x66
  2776  0000C6                     	ds	2
  2777  0000C8                     command_at_hand@hand:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0x68
  2781  0000C8                     	ds	2
  2782  0000CA                     command_at_hand@min:
  2783                           	opt stack 0
  2784                           
  2785                           ; 1 bytes @ 0x6A
  2786  0000CA                     	ds	1
  2787  0000CB                     command_at_hand@max:
  2788                           	opt stack 0
  2789                           
  2790                           ; 1 bytes @ 0x6B
  2791  0000CB                     	ds	1
  2792  0000CC                     command_at_hand@value:
  2793                           	opt stack 0
  2794                           
  2795                           ; 1 bytes @ 0x6C
  2796  0000CC                     	ds	1
  2797  0000CD                     command_time@tx:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x6D
  2801  0000CD                     	ds	2
  2802  0000CF                     command_time@op0:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x6F
  2806  0000CF                     	ds	2
  2807  0000D1                     command_time@op1:
  2808                           	opt stack 0
  2809                           
  2810                           ; 2 bytes @ 0x71
  2811  0000D1                     	ds	2
  2812  0000D3                     command_time@op2:
  2813                           	opt stack 0
  2814                           
  2815                           ; 2 bytes @ 0x73
  2816  0000D3                     	ds	2
  2817  0000D5                     _command_time$5281:
  2818                           	opt stack 0
  2819                           
  2820                           ; 1 bytes @ 0x75
  2821  0000D5                     	ds	1
  2822  0000D6                     command_operation@tx:
  2823                           	opt stack 0
  2824                           
  2825                           ; 2 bytes @ 0x76
  2826  0000D6                     	ds	2
  2827  0000D8                     command_operation@op0:
  2828                           	opt stack 0
  2829                           
  2830                           ; 2 bytes @ 0x78
  2831  0000D8                     	ds	2
  2832  0000DA                     command_operation@op1:
  2833                           	opt stack 0
  2834                           
  2835                           ; 2 bytes @ 0x7A
  2836  0000DA                     	ds	2
  2837  0000DC                     command_operation@op2:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x7C
  2841  0000DC                     	ds	2
  2842  0000DE                     command_operation@op3:
  2843                           	opt stack 0
  2844                           
  2845                           ; 2 bytes @ 0x7E
  2846  0000DE                     	ds	2
  2847  0000E0                     command_operation@percentage:
  2848                           	opt stack 0
  2849                           
  2850                           ; 1 bytes @ 0x80
  2851  0000E0                     	ds	1
  2852  0000E1                     tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           postdec1	equ	0xFE5
  2859                           fsr1h	equ	0xFE2
  2860                           fsr1l	equ	0xFE1
  2861                           
  2862                           ; 0 bytes @ 0x81
  2863                           
  2864                           	psect	cstackCOMRAM
  2865  000001                     __pcstackCOMRAM:
  2866                           	opt stack 0
  2867  000001                     ??_USBStdGetDscHandler:
  2868  000001                     ??_USBStdGetStatusHandler:
  2869  000001                     ?i2_USBTransferOnePacket:
  2870                           	opt stack 0
  2871  000001                     ?i2___awdiv:
  2872                           	opt stack 0
  2873  000001                     ?i2___lwdiv:
  2874                           	opt stack 0
  2875  000001                     ?i2___lldiv:
  2876                           	opt stack 0
  2877  000001                     USBConfigureEndpoint@direction:
  2878                           	opt stack 0
  2879  000001                     USBCtrlTrfTxService@byteToSend:
  2880                           	opt stack 0
  2881  000001                     USBCtrlTrfRxService@i:
  2882                           	opt stack 0
  2883  000001                     i2LED_OUT@value:
  2884                           	opt stack 0
  2885  000001                     i2USBTransferOnePacket@dir:
  2886                           	opt stack 0
  2887  000001                     delay_timer_interrupt@d:
  2888                           	opt stack 0
  2889  000001                     i2___awdiv@dividend:
  2890                           	opt stack 0
  2891  000001                     i2___lwdiv@dividend:
  2892                           	opt stack 0
  2893  000001                     i2memset@p1:
  2894                           	opt stack 0
  2895  000001                     i2___lldiv@dividend:
  2896                           	opt stack 0
  2897                           
  2898                           ; 4 bytes @ 0x0
  2899  000001                     	ds	1
  2900  000002                     ??_USBConfigureEndpoint:
  2901  000002                     USBCtrlTrfRxService@byteToRead:
  2902                           	opt stack 0
  2903  000002                     USBCtrlTrfInHandler@lastDTS:
  2904                           	opt stack 0
  2905  000002                     i2LED_OUT@b:
  2906                           	opt stack 0
  2907  000002                     USBStdGetStatusHandler@p:
  2908                           	opt stack 0
  2909  000002                     i2USBTransferOnePacket@data:
  2910                           	opt stack 0
  2911                           
  2912                           ; 2 bytes @ 0x1
  2913  000002                     	ds	1
  2914  000003                     charge_time_count@i:
  2915                           	opt stack 0
  2916  000003                     i2___awdiv@divisor:
  2917                           	opt stack 0
  2918  000003                     i2___lwdiv@divisor:
  2919                           	opt stack 0
  2920  000003                     i2memset@c:
  2921                           	opt stack 0
  2922                           
  2923                           ; 2 bytes @ 0x2
  2924  000003                     	ds	1
  2925  000004                     i2USBTransferOnePacket@len:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0x3
  2929  000004                     	ds	1
  2930  000005                     i2USBTransferOnePacket@ep:
  2931                           	opt stack 0
  2932  000005                     i2___awdiv@counter:
  2933                           	opt stack 0
  2934  000005                     i2___lwdiv@quotient:
  2935                           	opt stack 0
  2936  000005                     i2memset@n:
  2937                           	opt stack 0
  2938  000005                     i2___lldiv@divisor:
  2939                           	opt stack 0
  2940                           
  2941                           ; 4 bytes @ 0x4
  2942  000005                     	ds	1
  2943  000006                     USBConfigureEndpoint@EPNum:
  2944                           	opt stack 0
  2945  000006                     i2___awdiv@sign:
  2946                           	opt stack 0
  2947  000006                     i2USBTransferOnePacket@handle:
  2948                           	opt stack 0
  2949                           
  2950                           ; 2 bytes @ 0x5
  2951  000006                     	ds	1
  2952  000007                     i2___lwdiv@counter:
  2953                           	opt stack 0
  2954  000007                     USBConfigureEndpoint@handle:
  2955                           	opt stack 0
  2956  000007                     i2___awdiv@quotient:
  2957                           	opt stack 0
  2958  000007                     i2memset@p:
  2959                           	opt stack 0
  2960                           
  2961                           ; 2 bytes @ 0x6
  2962  000007                     	ds	2
  2963  000009                     ??_LED_indicator:
  2964  000009                     USBEnableEndpoint@options:
  2965                           	opt stack 0
  2966  000009                     i2USBDeviceInit@i:
  2967                           	opt stack 0
  2968  000009                     i2___lldiv@quotient:
  2969                           	opt stack 0
  2970                           
  2971                           ; 4 bytes @ 0x8
  2972  000009                     	ds	1
  2973  00000A                     USBEnableEndpoint@p:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x9
  2977  00000A                     	ds	2
  2978  00000C                     LED_indicator@i:
  2979                           	opt stack 0
  2980  00000C                     USBEnableEndpoint@ep:
  2981                           	opt stack 0
  2982                           
  2983                           ; 1 bytes @ 0xB
  2984  00000C                     	ds	1
  2985  00000D                     i2___lldiv@counter:
  2986                           	opt stack 0
  2987  00000D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0xC
  2991  00000D                     	ds	1
  2992  00000E                     ??_integrating:
  2993                           
  2994                           ; 0 bytes @ 0xD
  2995  00000E                     	ds	1
  2996  00000F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2997                           	opt stack 0
  2998                           
  2999                           ; 2 bytes @ 0xE
  3000  00000F                     	ds	1
  3001  000010                     integrating@i:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0xF
  3005  000010                     	ds	1
  3006  000011                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  3007                           	opt stack 0
  3008                           
  3009                           ; 2 bytes @ 0x10
  3010  000011                     	ds	2
  3011  000013                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  3012                           
  3013                           ; 0 bytes @ 0x12
  3014  000013                     	ds	2
  3015  000015                     ??_USBStdFeatureReqHandler:
  3016  000015                     USBStdSetCfgHandler@i:
  3017                           	opt stack 0
  3018                           
  3019                           ; 1 bytes @ 0x14
  3020  000015                     	ds	1
  3021  000016                     USBStdFeatureReqHandler@pUEP:
  3022                           	opt stack 0
  3023                           
  3024                           ; 2 bytes @ 0x15
  3025  000016                     	ds	2
  3026  000018                     USBStdFeatureReqHandler@current_ep_data:
  3027                           	opt stack 0
  3028                           
  3029                           ; 1 bytes @ 0x17
  3030  000018                     	ds	1
  3031  000019                     USBStdFeatureReqHandler@p:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x18
  3035  000019                     	ds	2
  3036  00001B                     ??_USBCtrlEPService:
  3037  00001B                     
  3038                           ; 0 bytes @ 0x1A
  3039  00001B                     	ds	2
  3040  00001D                     USBCtrlEPService@setup_cnt:
  3041                           	opt stack 0
  3042                           
  3043                           ; 1 bytes @ 0x1C
  3044  00001D                     	ds	1
  3045  00001E                     USBDeviceTasks@i:
  3046                           	opt stack 0
  3047                           
  3048                           ; 1 bytes @ 0x1D
  3049  00001E                     	ds	1
  3050  00001F                     ??_ISR:
  3051                           
  3052                           ; 0 bytes @ 0x1E
  3053  00001F                     	ds	14
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           postdec1	equ	0xFE5
  3061                           fsr1h	equ	0xFE2
  3062                           fsr1l	equ	0xFE1
  3063                           
  3064 ;;
  3065 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3066 ;;
  3067 ;; *************** function _main *****************
  3068 ;; Defined at:
  3069 ;;		line 109 in file "main.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2  932[None  ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels required when called:   20
  3089 ;; This function calls:
  3090 ;;		_RTCC_from_RTCC
  3091 ;;		_RTCC_from_epoch
  3092 ;;		_RTCC_loop
  3093 ;;		_USB_loop
  3094 ;;		_ctmu_loop
  3095 ;;		_ctmu_set_ratio
  3096 ;;		_delay_set
  3097 ;;		_main_init
  3098 ;;		_my_terminal_loop
  3099 ;;		_normal_mode_loop
  3100 ;;		_sleep_loop
  3101 ;; This function is called by:
  3102 ;;		Startup code after reset
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text0
  3107  0149C2                     __ptext0:
  3108                           	opt stack 0
  3109  0149C2                     _main:
  3110                           	opt stack 11
  3111                           
  3112                           ;main.c: 110: main_init();
  3113                           
  3114                           ;incstack = 0
  3115  0149C2  EC82  F0AA         	call	_main_init	;wreg free
  3116                           
  3117                           ;main.c: 112: ctmu_ratio = 90;
  3118  0149C6  0E5A               	movlw	90
  3119  0149C8  6E49               	movwf	_ctmu_ratio,c
  3120                           
  3121                           ;main.c: 113: ctmu_set_ratio(ctmu_ratio);
  3122  0149CA  5049               	movf	_ctmu_ratio,w,c
  3123  0149CC  EC03  F0A1         	call	_ctmu_set_ratio
  3124                           
  3125                           ;main.c: 115: RTCC_from_RTCC(&caltime_now, &epoch_now);
  3126  0149D0  0E80               	movlw	low _caltime_now
  3127  0149D2  0100               	movlb	0	; () banked
  3128  0149D4  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
  3129  0149D6  0E01               	movlw	high _caltime_now
  3130  0149D8  0100               	movlb	0	; () banked
  3131  0149DA  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
  3132  0149DC  0EFC               	movlw	low _epoch_now
  3133  0149DE  0100               	movlb	0	; () banked
  3134  0149E0  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
  3135  0149E2  0E00               	movlw	high _epoch_now
  3136  0149E4  0100               	movlb	0	; () banked
  3137  0149E6  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
  3138  0149E8  ECBC  F0B5         	call	_RTCC_from_RTCC	;wreg free
  3139                           
  3140                           ;main.c: 116: if (caltime_now.DD == 0) {
  3141  0149EC  0101               	movlb	1	; () banked
  3142  0149EE  5184               	movf	(_caltime_now+4)& (0+255),w,b
  3143  0149F0  A4D8               	btfss	status,2,c
  3144  0149F2  D017               	goto	l11814
  3145                           
  3146                           ; BSR set to: 1
  3147                           ;main.c: 117: epoch_now = 0;
  3148  0149F4  0E00               	movlw	0
  3149  0149F6  0100               	movlb	0	; () banked
  3150  0149F8  6FFC               	movwf	_epoch_now& (0+255),b
  3151  0149FA  0E00               	movlw	0
  3152  0149FC  6FFD               	movwf	(_epoch_now+1)& (0+255),b
  3153  0149FE  0E00               	movlw	0
  3154  014A00  6FFE               	movwf	(_epoch_now+2)& (0+255),b
  3155  014A02  0E00               	movlw	0
  3156  014A04  6FFF               	movwf	(_epoch_now+3)& (0+255),b
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;main.c: 118: RTCC_from_epoch(&caltime_now, &epoch_now);
  3160  014A06  0E80               	movlw	low _caltime_now
  3161  014A08  0100               	movlb	0	; () banked
  3162  014A0A  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  3163  014A0C  0E01               	movlw	high _caltime_now
  3164  014A0E  0100               	movlb	0	; () banked
  3165  014A10  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  3166  014A12  0EFC               	movlw	low _epoch_now
  3167  014A14  0100               	movlb	0	; () banked
  3168  014A16  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  3169  014A18  0E00               	movlw	high _epoch_now
  3170  014A1A  0100               	movlb	0	; () banked
  3171  014A1C  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  3172  014A1E  ECAB  F0B5         	call	_RTCC_from_epoch	;wreg free
  3173  014A22                     l11814:
  3174                           
  3175                           ;main.c: 119: }
  3176                           ;main.c: 120: print_content = LOGO;
  3177  014A22  0E00               	movlw	0
  3178  014A24  0100               	movlb	0	; () banked
  3179  014A26  6FFA               	movwf	_print_content& (0+255),b
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;main.c: 121: next_print_content = TIME;
  3183  014A28  0E01               	movlw	1
  3184  014A2A  6E4D               	movwf	_next_print_content,c
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;main.c: 122: delay_set(&delay_display, 120);
  3188  014A2C  0E51               	movlw	low _delay_display
  3189  014A2E  0100               	movlb	0	; () banked
  3190  014A30  6F60               	movwf	delay_set@d& (0+255),b
  3191  014A32  0E00               	movlw	high _delay_display
  3192  014A34  0100               	movlb	0	; () banked
  3193  014A36  6F61               	movwf	(delay_set@d+1)& (0+255),b
  3194  014A38  0E00               	movlw	0
  3195  014A3A  0100               	movlb	0	; () banked
  3196  014A3C  6F63               	movwf	(delay_set@value+1)& (0+255),b
  3197  014A3E  0E78               	movlw	120
  3198  014A40  6F62               	movwf	delay_set@value& (0+255),b
  3199  014A42  EC87  F0B5         	call	_delay_set	;wreg free
  3200  014A46  D023               	goto	l11856
  3201  014A48                     l11822:
  3202                           
  3203                           ;main.c: 127: INTCONbits.GIE = 0;
  3204  014A48  9EF2               	bcf	intcon,7,c	;volatile
  3205                           
  3206                           ;main.c: 128: USB_loop();
  3207  014A4A  EC64  F0AC         	call	_USB_loop	;wreg free
  3208                           
  3209                           ;main.c: 129: INTCONbits.GIE = 1;
  3210  014A4E  8EF2               	bsf	intcon,7,c	;volatile
  3211                           
  3212                           ;main.c: 130: INTCONbits.GIE = 0;
  3213  014A50  9EF2               	bcf	intcon,7,c	;volatile
  3214                           
  3215                           ;main.c: 131: my_terminal_loop(&usb_tx, &usb_rx);
  3216  014A52  0EF6               	movlw	low _usb_tx
  3217  014A54  0101               	movlb	1	; () banked
  3218  014A56  6F92               	movwf	my_terminal_loop@tx& (0+255),b
  3219  014A58  0E02               	movlw	high _usb_tx
  3220  014A5A  0101               	movlb	1	; () banked
  3221  014A5C  6F93               	movwf	(my_terminal_loop@tx+1)& (0+255),b
  3222  014A5E  0EEE               	movlw	low _usb_rx
  3223  014A60  0101               	movlb	1	; () banked
  3224  014A62  6F94               	movwf	my_terminal_loop@rx& (0+255),b
  3225  014A64  0E02               	movlw	high _usb_rx
  3226  014A66  0101               	movlb	1	; () banked
  3227  014A68  6F95               	movwf	(my_terminal_loop@rx+1)& (0+255),b
  3228  014A6A  ECB1  F08D         	call	_my_terminal_loop	;wreg free
  3229                           
  3230                           ;main.c: 132: INTCONbits.GIE = 1;
  3231  014A6E  8EF2               	bsf	intcon,7,c	;volatile
  3232                           
  3233                           ;main.c: 133: INTCONbits.GIE = 0;
  3234  014A70  9EF2               	bcf	intcon,7,c	;volatile
  3235                           
  3236                           ;main.c: 134: normal_mode_loop();
  3237  014A72  EC77  F0A9         	call	_normal_mode_loop	;wreg free
  3238                           
  3239                           ;main.c: 135: INTCONbits.GIE = 1;
  3240  014A76  8EF2               	bsf	intcon,7,c	;volatile
  3241                           
  3242                           ;main.c: 136: INTCONbits.GIE = 0;
  3243  014A78  9EF2               	bcf	intcon,7,c	;volatile
  3244                           
  3245                           ;main.c: 137: RTCC_loop();
  3246  014A7A  EC1B  F0B3         	call	_RTCC_loop	;wreg free
  3247                           
  3248                           ;main.c: 138: INTCONbits.GIE = 1;
  3249  014A7E  8EF2               	bsf	intcon,7,c	;volatile
  3250                           
  3251                           ;main.c: 139: INTCONbits.GIE = 0;
  3252  014A80  9EF2               	bcf	intcon,7,c	;volatile
  3253                           
  3254                           ;main.c: 140: ctmu_loop();
  3255  014A82  EC9A  F09E         	call	_ctmu_loop	;wreg free
  3256                           
  3257                           ;main.c: 141: INTCONbits.GIE = 1;
  3258  014A86  8EF2               	bsf	intcon,7,c	;volatile
  3259                           
  3260                           ;main.c: 142: INTCONbits.GIE = 0;
  3261  014A88  9EF2               	bcf	intcon,7,c	;volatile
  3262                           
  3263                           ;main.c: 143: sleep_loop();
  3264  014A8A  EC2E  F0AA         	call	_sleep_loop	;wreg free
  3265  014A8E                     l11856:
  3266                           
  3267                           ;main.c: 144: INTCONbits.GIE = 1;
  3268  014A8E  8EF2               	bsf	intcon,7,c	;volatile
  3269  014A90  D7DB               	goto	l11822
  3270  014A92                     __end_of_main:
  3271                           	opt stack 0
  3272                           tblptru	equ	0xFF8
  3273                           tblptrh	equ	0xFF7
  3274                           tblptrl	equ	0xFF6
  3275                           tablat	equ	0xFF5
  3276                           intcon	equ	0xFF2
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _sleep_loop *****************
  3285 ;; Defined at:
  3286 ;;		line 633 in file "tasks.h"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  i               1   10[BANK0 ] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;		None               void
  3293 ;; Registers used:
  3294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:   15
  3307 ;; This function calls:
  3308 ;;		_ADC
  3309 ;;		_I2C_LCD_Clear
  3310 ;;		_I2C_LCD_Puts
  3311 ;;		_I2C_LCD_SetCursor
  3312 ;;		_LED_OUT
  3313 ;;		_OUT
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text1
  3320  01545C                     __ptext1:
  3321                           	opt stack 0
  3322  01545C                     _sleep_loop:
  3323                           	opt stack 15
  3324                           
  3325                           ;tasks.h: 634: if (ADC(12) < 2048) {
  3326                           
  3327                           ;incstack = 0
  3328  01545C  0E0C               	movlw	12
  3329  01545E  EC6E  F0B4         	call	_ADC
  3330  015462  0E08               	movlw	8
  3331  015464  0100               	movlb	0	; () banked
  3332  015466  5D61               	subwf	(?_ADC+1)& (0+255),w,b
  3333  015468  B0D8               	btfsc	status,0,c
  3334  01546A  D048               	goto	l11628
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;tasks.h: 635: sleep_flag = 1;
  3338  01546C  0E01               	movlw	1
  3339  01546E  6E4F               	movwf	_sleep_flag,c
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;tasks.h: 636: INTCONbits.GIE = 0;
  3343  015470  9EF2               	bcf	intcon,7,c	;volatile
  3344                           
  3345                           ;tasks.h: 637: for (uint8_t i = 0; i < 3; i++) {
  3346  015472  0E00               	movlw	0
  3347  015474  0100               	movlb	0	; () banked
  3348  015476  6F6A               	movwf	sleep_loop@i& (0+255),b
  3349  015478                     l11604:
  3350                           
  3351                           ; BSR set to: 0
  3352  015478  0E02               	movlw	2
  3353  01547A  0100               	movlb	0	; () banked
  3354  01547C  656A               	cpfsgt	sleep_loop@i& (0+255),b
  3355  01547E  D001               	goto	l11608
  3356  015480  D011               	goto	l904
  3357  015482                     l11608:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;tasks.h: 638: OUT(i, 0);
  3361  015482  0E00               	movlw	0
  3362  015484  0100               	movlb	0	; () banked
  3363  015486  6F60               	movwf	OUT@value& (0+255),b
  3364  015488  0100               	movlb	0	; () banked
  3365  01548A  516A               	movf	sleep_loop@i& (0+255),w,b
  3366  01548C  EC16  F0B0         	call	_OUT
  3367                           
  3368                           ;tasks.h: 639: LED_OUT(i, 0);
  3369  015490  0E00               	movlw	0
  3370  015492  0100               	movlb	0	; () banked
  3371  015494  6F60               	movwf	LED_OUT@value& (0+255),b
  3372  015496  0100               	movlb	0	; () banked
  3373  015498  516A               	movf	sleep_loop@i& (0+255),w,b
  3374  01549A  ECDD  F0AF         	call	_LED_OUT
  3375  01549E  0100               	movlb	0	; () banked
  3376  0154A0  2B6A               	incf	sleep_loop@i& (0+255),f,b
  3377  0154A2  D7EA               	goto	l11604
  3378  0154A4                     l904:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;tasks.h: 640: }
  3382                           ;tasks.h: 641: UCONbits.USBEN = 0;
  3383  0154A4  9665               	bcf	3941,3,c	;volatile
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;tasks.h: 642: I2C_LCD_Clear();
  3387  0154A6  EC0A  F0B6         	call	_I2C_LCD_Clear	;wreg free
  3388                           
  3389                           ;tasks.h: 643: I2C_LCD_SetCursor(0, 0);
  3390  0154AA  0E00               	movlw	0
  3391  0154AC  0100               	movlb	0	; () banked
  3392  0154AE  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3393  0154B0  0E00               	movlw	0
  3394  0154B2  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  3395                           
  3396                           ;tasks.h: 644: I2C_LCD_Puts("Charge Station 6");
  3397  0154B6  0E2C               	movlw	low STR_29
  3398  0154B8  0100               	movlb	0	; () banked
  3399  0154BA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  3400  0154BC  0EFE               	movlw	high STR_29
  3401  0154BE  0100               	movlb	0	; () banked
  3402  0154C0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3403  0154C2  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  3404                           
  3405                           ;tasks.h: 645: I2C_LCD_SetCursor(0, 1);
  3406  0154C6  0E01               	movlw	1
  3407  0154C8  0100               	movlb	0	; () banked
  3408  0154CA  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  3409  0154CC  0E00               	movlw	0
  3410  0154CE  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  3411                           
  3412                           ;tasks.h: 646: I2C_LCD_Puts("SLEEPING");
  3413  0154D2  0E49               	movlw	low STR_100
  3414  0154D4  0100               	movlb	0	; () banked
  3415  0154D6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  3416  0154D8  0EFF               	movlw	high STR_100
  3417  0154DA  0100               	movlb	0	; () banked
  3418  0154DC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  3419  0154DE  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  3420                           
  3421                           ;tasks.h: 647: }
  3422                           ;tasks.h: 648: while (sleep_flag) {
  3423  0154E2  D00C               	goto	l11628
  3424  0154E4                     l11624:
  3425                           
  3426                           ;tasks.h: 649: if (ADC(12) > 2048) {
  3427  0154E4  0E0C               	movlw	12
  3428  0154E6  EC6E  F0B4         	call	_ADC
  3429  0154EA  0100               	movlb	0	; () banked
  3430  0154EC  0560               	decf	?_ADC& (0+255),w,b
  3431  0154EE  0E08               	movlw	8
  3432  0154F0  0100               	movlb	0	; () banked
  3433  0154F2  5961               	subwfb	(?_ADC+1)& (0+255),w,b
  3434  0154F4  B0D8               	btfsc	status,0,c
  3435                           
  3436                           ; BSR set to: 0
  3437  0154F6  00FF               	reset		;# 
  3438  0154F8  0003               	sleep		;# 
  3439                           
  3440                           ;tasks.h: 653: __nop();
  3441  0154FA  F000               	nop	
  3442  0154FC                     l11628:
  3443  0154FC  504F               	movf	_sleep_flag,w,c
  3444  0154FE  B4D8               	btfsc	status,2,c
  3445  015500  0012               	return	
  3446  015502  D7F0               	goto	l11624
  3447  015504                     __end_of_sleep_loop:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           intcon	equ	0xFF2
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postdec1	equ	0xFE5
  3457                           fsr1h	equ	0xFE2
  3458                           fsr1l	equ	0xFE1
  3459                           status	equ	0xFD8
  3460                           
  3461 ;; *************** function _normal_mode_loop *****************
  3462 ;; Defined at:
  3463 ;;		line 577 in file "tasks.h"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;		None               void
  3470 ;; Registers used:
  3471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:   17
  3484 ;; This function calls:
  3485 ;;		_Auto_cut
  3486 ;;		_RTCC_adjust_time_button
  3487 ;;		_display_LCD
  3488 ;;		_port_loop
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text2
  3495  0152EE                     __ptext2:
  3496                           	opt stack 0
  3497  0152EE                     _normal_mode_loop:
  3498                           	opt stack 13
  3499                           
  3500                           ;tasks.h: 578: if (!edit_flag.flags) {
  3501                           
  3502                           ;incstack = 0
  3503  0152EE  0100               	movlb	0	; () banked
  3504  0152F0  51F8               	movf	_edit_flag& (0+255),w,b
  3505  0152F2  A4D8               	btfss	status,2,c
  3506  0152F4  D021               	goto	l11566
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;tasks.h: 579: port_loop();
  3510  0152F6  EC4A  F086         	call	_port_loop	;wreg free
  3511                           
  3512                           ;tasks.h: 580: if (ctmu_m.flag.press) {
  3513  0152FA  0101               	movlb	1	; () banked
  3514  0152FC  A190               	btfss	(_ctmu_m+2)& (0+255),0,b
  3515  0152FE  D01C               	goto	l11566
  3516                           
  3517                           ; BSR set to: 1
  3518                           ;tasks.h: 581: ctmu_m.flags = 0;
  3519  015300  0E00               	movlw	0
  3520  015302  0101               	movlb	1	; () banked
  3521  015304  6F91               	movwf	(_ctmu_m+3)& (0+255),b
  3522  015306  0E00               	movlw	0
  3523  015308  6F90               	movwf	(_ctmu_m+2)& (0+255),b
  3524                           
  3525                           ;tasks.h: 582: display_flag = 1;
  3526  01530A  0E01               	movlw	1
  3527  01530C  6E4B               	movwf	_display_flag,c
  3528                           
  3529                           ;tasks.h: 583: switch (print_content) {
  3530  01530E  D008               	goto	l11564
  3531  015310                     l11554:
  3532                           
  3533                           ;tasks.h: 585: print_content = TIME;
  3534  015310  0E01               	movlw	1
  3535  015312  D001               	goto	L2
  3536  015314                     l11556:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;tasks.h: 588: print_content = LOGO;
  3540  015314  0E00               	movlw	0
  3541  015316                     L2:
  3542  015316  0100               	movlb	0	; () banked
  3543  015318  6FFA               	movwf	_print_content& (0+255),b
  3544                           
  3545                           ;tasks.h: 592: break;
  3546  01531A  D00E               	goto	l11566
  3547  01531C                     l11560:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;tasks.h: 594: print_content = CURRENT;
  3551  01531C  0E03               	movlw	3
  3552  01531E  D7FB               	goto	L2
  3553  015320                     l11564:
  3554  015320  0100               	movlb	0	; () banked
  3555  015322  51FA               	movf	_print_content& (0+255),w,b
  3556                           
  3557                           ; Switch size 1, requested type "space"
  3558                           ; Number of cases is 3, Range of values is 0 to 3
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte           10     6 (average)
  3562                           ;	Chosen strategy is simple_byte
  3563  015324  0A00               	xorlw	0	; case 0
  3564  015326  B4D8               	btfsc	status,2,c
  3565  015328  D7F9               	goto	l11560
  3566  01532A  0A01               	xorlw	1	; case 1
  3567  01532C  B4D8               	btfsc	status,2,c
  3568  01532E  D7F2               	goto	l11556
  3569  015330  0A02               	xorlw	2	; case 3
  3570  015332  B4D8               	btfsc	status,2,c
  3571  015334  D7ED               	goto	l11554
  3572  015336  D7F2               	goto	l11560
  3573  015338                     l11566:
  3574                           
  3575                           ;tasks.h: 597: }
  3576                           ;tasks.h: 598: }
  3577                           ;tasks.h: 599: if (print_content == TIME)RTCC_adjust_time_button(&ctmu_m, &port[0].ctmu,
      +                           &port[1].ctmu);
  3578  015338  0100               	movlb	0	; () banked
  3579  01533A  05FA               	decf	_print_content& (0+255),w,b
  3580  01533C  A4D8               	btfss	status,2,c
  3581  01533E  D014               	goto	l11570
  3582                           
  3583                           ; BSR set to: 0
  3584  015340  0E8E               	movlw	low _ctmu_m
  3585  015342  0100               	movlb	0	; () banked
  3586  015344  6F9F               	movwf	RTCC_adjust_time_button@mode& (0+255),b
  3587  015346  0E01               	movlw	high _ctmu_m
  3588  015348  0100               	movlb	0	; () banked
  3589  01534A  6FA0               	movwf	(RTCC_adjust_time_button@mode+1)& (0+255),b
  3590  01534C  0E2B               	movlw	low _port
  3591  01534E  0100               	movlb	0	; () banked
  3592  015350  6FA1               	movwf	RTCC_adjust_time_button@cnt_inc& (0+255),b
  3593  015352  0E01               	movlw	high _port
  3594  015354  0100               	movlb	0	; () banked
  3595  015356  6FA2               	movwf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),b
  3596  015358  0E42               	movlw	low (_port+23)
  3597  01535A  0100               	movlb	0	; () banked
  3598  01535C  6FA3               	movwf	RTCC_adjust_time_button@cnt_dec& (0+255),b
  3599  01535E  0E01               	movlw	high (_port+23)
  3600  015360  0100               	movlb	0	; () banked
  3601  015362  6FA4               	movwf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),b
  3602  015364  EC7C  F09D         	call	_RTCC_adjust_time_button	;wreg free
  3603  015368                     l11570:
  3604                           
  3605                           ;tasks.h: 601: if (cut_time_flag) {
  3606  015368  504A               	movf	_cut_time_flag,w,c
  3607  01536A  B4D8               	btfsc	status,2,c
  3608  01536C  D004               	goto	l11576
  3609                           
  3610                           ;tasks.h: 602: cut_time_flag = 0;
  3611  01536E  0E00               	movlw	0
  3612  015370  6E4A               	movwf	_cut_time_flag,c
  3613                           
  3614                           ;tasks.h: 603: Auto_cut();
  3615  015372  EC4F  F09C         	call	_Auto_cut	;wreg free
  3616  015376                     l11576:
  3617                           
  3618                           ;tasks.h: 604: }
  3619                           ;tasks.h: 605: if (time_change_flag) {
  3620  015376  5050               	movf	_time_change_flag,w,c
  3621  015378  B4D8               	btfsc	status,2,c
  3622  01537A  D004               	goto	l888
  3623                           
  3624                           ;tasks.h: 606: time_change_flag = 0;
  3625  01537C  0E00               	movlw	0
  3626  01537E  6E50               	movwf	_time_change_flag,c
  3627                           
  3628                           ;tasks.h: 607: display_flag = 1;
  3629  015380  0E01               	movlw	1
  3630  015382  6E4B               	movwf	_display_flag,c
  3631  015384                     l888:
  3632                           
  3633                           ;tasks.h: 608: }
  3634                           ;tasks.h: 609: if (delay_display.flag) {
  3635  015384  5051               	movf	_delay_display,w,c
  3636  015386  B4D8               	btfsc	status,2,c
  3637  015388  D006               	goto	l889
  3638                           
  3639                           ;tasks.h: 610: delay_display.flag = 0;
  3640  01538A  0E00               	movlw	0
  3641  01538C  6E51               	movwf	_delay_display,c
  3642                           
  3643                           ;tasks.h: 611: print_content = next_print_content;
  3644  01538E  C04D  F0FA         	movff	_next_print_content,_print_content
  3645                           
  3646                           ;tasks.h: 612: display_flag = 1;
  3647  015392  0E01               	movlw	1
  3648  015394  6E4B               	movwf	_display_flag,c
  3649  015396                     l889:
  3650                           
  3651                           ;tasks.h: 613: }
  3652                           ;tasks.h: 614: if (display_flag) {
  3653  015396  504B               	movf	_display_flag,w,c
  3654  015398  B4D8               	btfsc	status,2,c
  3655  01539A  0012               	return	
  3656                           
  3657                           ;tasks.h: 615: display_flag = 0;
  3658  01539C  0E00               	movlw	0
  3659  01539E  6E4B               	movwf	_display_flag,c
  3660                           
  3661                           ;tasks.h: 616: display_LCD();
  3662  0153A0  EC00  F080         	call	_display_LCD	;wreg free
  3663  0153A4  0012               	return	
  3664  0153A6                     __end_of_normal_mode_loop:
  3665                           	opt stack 0
  3666                           tblptru	equ	0xFF8
  3667                           tblptrh	equ	0xFF7
  3668                           tblptrl	equ	0xFF6
  3669                           tablat	equ	0xFF5
  3670                           intcon	equ	0xFF2
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           postdec1	equ	0xFE5
  3674                           fsr1h	equ	0xFE2
  3675                           fsr1l	equ	0xFE1
  3676                           status	equ	0xFD8
  3677                           
  3678 ;; *************** function _port_loop *****************
  3679 ;; Defined at:
  3680 ;;		line 446 in file "tasks.h"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  i               1    4[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;Total ram usage:        1 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:   12
  3701 ;; This function calls:
  3702 ;;		_LED_OUT
  3703 ;;		_OUT
  3704 ;;		_delay_set
  3705 ;; This function is called by:
  3706 ;;		_normal_mode_loop
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text3
  3711  010C94                     __ptext3:
  3712                           	opt stack 0
  3713  010C94                     _port_loop:
  3714                           	opt stack 17
  3715                           
  3716                           ;tasks.h: 447: uint8_t i;
  3717                           ;tasks.h: 448: for (i = 0; i < 3; i++) {
  3718                           
  3719                           ;incstack = 0
  3720  010C94  0E00               	movlw	0
  3721  010C96  0100               	movlb	0	; () banked
  3722  010C98  6F64               	movwf	port_loop@i& (0+255),b
  3723  010C9A                     l11250:
  3724                           
  3725                           ; BSR set to: 0
  3726  010C9A  0E02               	movlw	2
  3727  010C9C  0100               	movlb	0	; () banked
  3728  010C9E  6564               	cpfsgt	port_loop@i& (0+255),b
  3729  010CA0  D001               	goto	l11254
  3730  010CA2  0012               	return	
  3731  010CA4                     l11254:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;tasks.h: 450: if (port[i].ctmu.flag.pressing) {
  3735  010CA4  0100               	movlb	0	; () banked
  3736  010CA6  5164               	movf	port_loop@i& (0+255),w,b
  3737  010CA8  0D17               	mullw	23
  3738  010CAA  0E03               	movlw	3
  3739  010CAC  26F3               	addwf	prodl,f,c
  3740  010CAE  0E00               	movlw	0
  3741  010CB0  22F4               	addwfc	prodh,f,c
  3742  010CB2  0E2B               	movlw	low _port
  3743  010CB4  24F3               	addwf	prodl,w,c
  3744  010CB6  6ED9               	movwf	fsr2l,c
  3745  010CB8  0E01               	movlw	high _port
  3746  010CBA  20F4               	addwfc	prodh,w,c
  3747  010CBC  6EDA               	movwf	fsr2h,c
  3748  010CBE  0101               	movlb	1	; () banked
  3749  010CC0  A0DF               	btfss	indf2,0,c
  3750  010CC2  D007               	goto	l11258
  3751                           
  3752                           ; BSR set to: 1
  3753                           ;tasks.h: 452: LED_OUT(i, 1);
  3754  010CC4  0E01               	movlw	1
  3755  010CC6  0100               	movlb	0	; () banked
  3756  010CC8  6F60               	movwf	LED_OUT@value& (0+255),b
  3757  010CCA  0100               	movlb	0	; () banked
  3758  010CCC  5164               	movf	port_loop@i& (0+255),w,b
  3759  010CCE  ECDD  F0AF         	call	_LED_OUT
  3760  010CD2                     l11258:
  3761                           
  3762                           ;tasks.h: 453: }
  3763                           ;tasks.h: 455: if (port[i].ctmu.flag.press) {
  3764  010CD2  0100               	movlb	0	; () banked
  3765  010CD4  5164               	movf	port_loop@i& (0+255),w,b
  3766  010CD6  0D17               	mullw	23
  3767  010CD8  0E02               	movlw	2
  3768  010CDA  26F3               	addwf	prodl,f,c
  3769  010CDC  0E00               	movlw	0
  3770  010CDE  22F4               	addwfc	prodh,f,c
  3771  010CE0  0E2B               	movlw	low _port
  3772  010CE2  24F3               	addwf	prodl,w,c
  3773  010CE4  6ED9               	movwf	fsr2l,c
  3774  010CE6  0E01               	movlw	high _port
  3775  010CE8  20F4               	addwfc	prodh,w,c
  3776  010CEA  6EDA               	movwf	fsr2h,c
  3777  010CEC  0101               	movlb	1	; () banked
  3778  010CEE  A0DF               	btfss	indf2,0,c
  3779  010CF0  D071               	goto	l11294
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;tasks.h: 456: port[i].ctmu.flags = 0;
  3783  010CF2  0100               	movlb	0	; () banked
  3784  010CF4  5164               	movf	port_loop@i& (0+255),w,b
  3785  010CF6  0D17               	mullw	23
  3786  010CF8  0E02               	movlw	2
  3787  010CFA  26F3               	addwf	prodl,f,c
  3788  010CFC  0E00               	movlw	0
  3789  010CFE  22F4               	addwfc	prodh,f,c
  3790  010D00  0E2B               	movlw	low _port
  3791  010D02  24F3               	addwf	prodl,w,c
  3792  010D04  6ED9               	movwf	fsr2l,c
  3793  010D06  0E01               	movlw	high _port
  3794  010D08  20F4               	addwfc	prodh,w,c
  3795  010D0A  6EDA               	movwf	fsr2h,c
  3796  010D0C  0E00               	movlw	0
  3797  010D0E  6EDE               	movwf	postinc2,c
  3798  010D10  0E00               	movlw	0
  3799  010D12  6EDD               	movwf	postdec2,c
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;tasks.h: 457: LED_OUT(i, 0);
  3803  010D14  0E00               	movlw	0
  3804  010D16  0100               	movlb	0	; () banked
  3805  010D18  6F60               	movwf	LED_OUT@value& (0+255),b
  3806  010D1A  0100               	movlb	0	; () banked
  3807  010D1C  5164               	movf	port_loop@i& (0+255),w,b
  3808  010D1E  ECDD  F0AF         	call	_LED_OUT
  3809                           
  3810                           ;tasks.h: 460: if (print_port == i) {
  3811  010D22  0100               	movlb	0	; () banked
  3812  010D24  5164               	movf	port_loop@i& (0+255),w,b
  3813  010D26  0100               	movlb	0	; () banked
  3814  010D28  19FB               	xorwf	_print_port& (0+255),w,b
  3815  010D2A  B4D8               	btfsc	status,2,c
  3816  010D2C  D009               	goto	l11278
  3817  010D2E  D012               	goto	l851
  3818  010D30                     l11268:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;tasks.h: 463: print_content = INTEGRATING;
  3822  010D30  0E04               	movlw	4
  3823  010D32  D001               	goto	L4
  3824  010D34                     l11270:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;tasks.h: 466: print_content = CHARGE_TIME;
  3828  010D34  0E05               	movlw	5
  3829  010D36                     L4:
  3830  010D36  0100               	movlb	0	; () banked
  3831  010D38  6FFA               	movwf	_print_content& (0+255),b
  3832                           
  3833                           ;tasks.h: 470: break;
  3834  010D3A  D00E               	goto	l11280
  3835  010D3C                     l11274:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;tasks.h: 472: print_content = CURRENT;
  3839  010D3C  0E03               	movlw	3
  3840  010D3E  D7FB               	goto	L4
  3841  010D40                     l11278:
  3842                           
  3843                           ; BSR set to: 0
  3844  010D40  0100               	movlb	0	; () banked
  3845  010D42  51FA               	movf	_print_content& (0+255),w,b
  3846                           
  3847                           ; Switch size 1, requested type "space"
  3848                           ; Number of cases is 3, Range of values is 3 to 5
  3849                           ; switch strategies available:
  3850                           ; Name         Instructions Cycles
  3851                           ; simple_byte           10     6 (average)
  3852                           ;	Chosen strategy is simple_byte
  3853  010D44  0A03               	xorlw	3	; case 3
  3854  010D46  B4D8               	btfsc	status,2,c
  3855  010D48  D7F3               	goto	l11268
  3856  010D4A  0A07               	xorlw	7	; case 4
  3857  010D4C  B4D8               	btfsc	status,2,c
  3858  010D4E  D7F2               	goto	l11270
  3859  010D50  0A01               	xorlw	1	; case 5
  3860  010D52  D7F4               	goto	l11274
  3861  010D54                     l851:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;tasks.h: 476: print_port = i;
  3865  010D54  C064  F0FB         	movff	port_loop@i,_print_port
  3866  010D58                     l11280:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;tasks.h: 477: }
  3870                           ;tasks.h: 479: if (!port[i].flag.out_flag) {
  3871  010D58  0100               	movlb	0	; () banked
  3872  010D5A  5164               	movf	port_loop@i& (0+255),w,b
  3873  010D5C  0D17               	mullw	23
  3874  010D5E  0E16               	movlw	22
  3875  010D60  26F3               	addwf	prodl,f,c
  3876  010D62  0E00               	movlw	0
  3877  010D64  22F4               	addwfc	prodh,f,c
  3878  010D66  0E2B               	movlw	low _port
  3879  010D68  24F3               	addwf	prodl,w,c
  3880  010D6A  6ED9               	movwf	fsr2l,c
  3881  010D6C  0E01               	movlw	high _port
  3882  010D6E  20F4               	addwfc	prodh,w,c
  3883  010D70  6EDA               	movwf	fsr2h,c
  3884  010D72  0101               	movlb	1	; () banked
  3885  010D74  B4DF               	btfsc	indf2,2,c
  3886  010D76  D014               	goto	l11288
  3887                           
  3888                           ; BSR set to: 1
  3889                           ;tasks.h: 480: print_content = START_CHARGING;
  3890  010D78  0E02               	movlw	2
  3891  010D7A  0100               	movlb	0	; () banked
  3892  010D7C  6FFA               	movwf	_print_content& (0+255),b
  3893                           
  3894                           ;tasks.h: 481: next_print_content = CURRENT;
  3895  010D7E  0E03               	movlw	3
  3896  010D80  6E4D               	movwf	_next_print_content,c
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;tasks.h: 482: delay_set(&delay_display, 32);
  3900  010D82  0E51               	movlw	low _delay_display
  3901  010D84  0100               	movlb	0	; () banked
  3902  010D86  6F60               	movwf	delay_set@d& (0+255),b
  3903  010D88  0E00               	movlw	high _delay_display
  3904  010D8A  0100               	movlb	0	; () banked
  3905  010D8C  6F61               	movwf	(delay_set@d+1)& (0+255),b
  3906  010D8E  0E00               	movlw	0
  3907  010D90  0100               	movlb	0	; () banked
  3908  010D92  6F63               	movwf	(delay_set@value+1)& (0+255),b
  3909  010D94  0E20               	movlw	32
  3910  010D96  6F62               	movwf	delay_set@value& (0+255),b
  3911  010D98  EC87  F0B5         	call	_delay_set	;wreg free
  3912                           
  3913                           ;tasks.h: 483: display_flag = 1;
  3914  010D9C  0E01               	movlw	1
  3915  010D9E  6E4B               	movwf	_display_flag,c
  3916  010DA0                     l11288:
  3917                           
  3918                           ;tasks.h: 484: }
  3919                           ;tasks.h: 486: OUT(i, 1);
  3920  010DA0  0E01               	movlw	1
  3921  010DA2  0100               	movlb	0	; () banked
  3922  010DA4  6F60               	movwf	OUT@value& (0+255),b
  3923  010DA6  0100               	movlb	0	; () banked
  3924  010DA8  5164               	movf	port_loop@i& (0+255),w,b
  3925  010DAA  EC16  F0B0         	call	_OUT
  3926                           
  3927                           ;tasks.h: 487: port[i].cut_cnt = 0;
  3928  010DAE  0100               	movlb	0	; () banked
  3929  010DB0  5164               	movf	port_loop@i& (0+255),w,b
  3930  010DB2  0D17               	mullw	23
  3931  010DB4  0E14               	movlw	20
  3932  010DB6  26F3               	addwf	prodl,f,c
  3933  010DB8  0E00               	movlw	0
  3934  010DBA  22F4               	addwfc	prodh,f,c
  3935  010DBC  0E2B               	movlw	low _port
  3936  010DBE  24F3               	addwf	prodl,w,c
  3937  010DC0  6ED9               	movwf	fsr2l,c
  3938  010DC2  0E01               	movlw	high _port
  3939  010DC4  20F4               	addwfc	prodh,w,c
  3940  010DC6  6EDA               	movwf	fsr2h,c
  3941  010DC8  0E00               	movlw	0
  3942  010DCA  6EDE               	movwf	postinc2,c
  3943  010DCC  0E00               	movlw	0
  3944  010DCE  6EDD               	movwf	postdec2,c
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;tasks.h: 488: display_flag = 1;
  3948  010DD0  0E01               	movlw	1
  3949  010DD2  6E4B               	movwf	_display_flag,c
  3950  010DD4                     l11294:
  3951                           
  3952                           ;tasks.h: 489: }
  3953                           ;tasks.h: 491: if (port[i].ctmu.flag.long_holding_2) {
  3954  010DD4  0100               	movlb	0	; () banked
  3955  010DD6  5164               	movf	port_loop@i& (0+255),w,b
  3956  010DD8  0D17               	mullw	23
  3957  010DDA  0E03               	movlw	3
  3958  010DDC  26F3               	addwf	prodl,f,c
  3959  010DDE  0E00               	movlw	0
  3960  010DE0  22F4               	addwfc	prodh,f,c
  3961  010DE2  0E2B               	movlw	low _port
  3962  010DE4  24F3               	addwf	prodl,w,c
  3963  010DE6  6ED9               	movwf	fsr2l,c
  3964  010DE8  0E01               	movlw	high _port
  3965  010DEA  20F4               	addwfc	prodh,w,c
  3966  010DEC  6EDA               	movwf	fsr2h,c
  3967  010DEE  0101               	movlb	1	; () banked
  3968  010DF0  A4DF               	btfss	indf2,2,c
  3969  010DF2  D016               	goto	l860
  3970                           
  3971                           ; BSR set to: 1
  3972                           ;tasks.h: 492: port[i].ctmu.flags = 0;
  3973  010DF4  0100               	movlb	0	; () banked
  3974  010DF6  5164               	movf	port_loop@i& (0+255),w,b
  3975  010DF8  0D17               	mullw	23
  3976  010DFA  0E02               	movlw	2
  3977  010DFC  26F3               	addwf	prodl,f,c
  3978  010DFE  0E00               	movlw	0
  3979  010E00  22F4               	addwfc	prodh,f,c
  3980  010E02  0E2B               	movlw	low _port
  3981  010E04  24F3               	addwf	prodl,w,c
  3982  010E06  6ED9               	movwf	fsr2l,c
  3983  010E08  0E01               	movlw	high _port
  3984  010E0A  20F4               	addwfc	prodh,w,c
  3985  010E0C  6EDA               	movwf	fsr2h,c
  3986  010E0E  0E00               	movlw	0
  3987  010E10  6EDE               	movwf	postinc2,c
  3988  010E12  0E00               	movlw	0
  3989  010E14  6EDD               	movwf	postdec2,c
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;tasks.h: 493: print_content = RESET_;
  3993  010E16  0E06               	movlw	6
  3994  010E18  0100               	movlb	0	; () banked
  3995  010E1A  6FFA               	movwf	_print_content& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;tasks.h: 494: display_flag = 1;
  3999  010E1C  0E01               	movlw	1
  4000  010E1E  6E4B               	movwf	_display_flag,c
  4001  010E20                     l860:
  4002                           
  4003                           ;tasks.h: 495: }
  4004                           ;tasks.h: 496: if (port[i].ctmu.flag.long_hold_2) {
  4005  010E20  0100               	movlb	0	; () banked
  4006  010E22  5164               	movf	port_loop@i& (0+255),w,b
  4007  010E24  0D17               	mullw	23
  4008  010E26  0E02               	movlw	2
  4009  010E28  26F3               	addwf	prodl,f,c
  4010  010E2A  0E00               	movlw	0
  4011  010E2C  22F4               	addwfc	prodh,f,c
  4012  010E2E  0E2B               	movlw	low _port
  4013  010E30  24F3               	addwf	prodl,w,c
  4014  010E32  6ED9               	movwf	fsr2l,c
  4015  010E34  0E01               	movlw	high _port
  4016  010E36  20F4               	addwfc	prodh,w,c
  4017  010E38  6EDA               	movwf	fsr2h,c
  4018  010E3A  0101               	movlb	1	; () banked
  4019  010E3C  A4DF               	btfss	indf2,2,c
  4020  010E3E  D05F               	goto	l11320
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;tasks.h: 497: port[i].ctmu.flags = 0;
  4024  010E40  0100               	movlb	0	; () banked
  4025  010E42  5164               	movf	port_loop@i& (0+255),w,b
  4026  010E44  0D17               	mullw	23
  4027  010E46  0E02               	movlw	2
  4028  010E48  26F3               	addwf	prodl,f,c
  4029  010E4A  0E00               	movlw	0
  4030  010E4C  22F4               	addwfc	prodh,f,c
  4031  010E4E  0E2B               	movlw	low _port
  4032  010E50  24F3               	addwf	prodl,w,c
  4033  010E52  6ED9               	movwf	fsr2l,c
  4034  010E54  0E01               	movlw	high _port
  4035  010E56  20F4               	addwfc	prodh,w,c
  4036  010E58  6EDA               	movwf	fsr2h,c
  4037  010E5A  0E00               	movlw	0
  4038  010E5C  6EDE               	movwf	postinc2,c
  4039  010E5E  0E00               	movlw	0
  4040  010E60  6EDD               	movwf	postdec2,c
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;tasks.h: 498: LED_OUT(i, 0);
  4044  010E62  0E00               	movlw	0
  4045  010E64  0100               	movlb	0	; () banked
  4046  010E66  6F60               	movwf	LED_OUT@value& (0+255),b
  4047  010E68  0100               	movlb	0	; () banked
  4048  010E6A  5164               	movf	port_loop@i& (0+255),w,b
  4049  010E6C  ECDD  F0AF         	call	_LED_OUT
  4050                           
  4051                           ;tasks.h: 499: port[i].integrated_current = 0;
  4052  010E70  0100               	movlb	0	; () banked
  4053  010E72  5164               	movf	port_loop@i& (0+255),w,b
  4054  010E74  0D17               	mullw	23
  4055  010E76  0E08               	movlw	8
  4056  010E78  26F3               	addwf	prodl,f,c
  4057  010E7A  0E00               	movlw	0
  4058  010E7C  22F4               	addwfc	prodh,f,c
  4059  010E7E  0E2B               	movlw	low _port
  4060  010E80  24F3               	addwf	prodl,w,c
  4061  010E82  6ED9               	movwf	fsr2l,c
  4062  010E84  0E01               	movlw	high _port
  4063  010E86  20F4               	addwfc	prodh,w,c
  4064  010E88  6EDA               	movwf	fsr2h,c
  4065  010E8A  6ADE               	clrf	postinc2,c
  4066  010E8C  6ADE               	clrf	postinc2,c
  4067  010E8E  6ADE               	clrf	postinc2,c
  4068  010E90  6ADD               	clrf	postdec2,c
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;tasks.h: 500: port[i].integrated_current_sec = 0;
  4072  010E92  0100               	movlb	0	; () banked
  4073  010E94  5164               	movf	port_loop@i& (0+255),w,b
  4074  010E96  0D17               	mullw	23
  4075  010E98  0E0C               	movlw	12
  4076  010E9A  26F3               	addwf	prodl,f,c
  4077  010E9C  0E00               	movlw	0
  4078  010E9E  22F4               	addwfc	prodh,f,c
  4079  010EA0  0E2B               	movlw	low _port
  4080  010EA2  24F3               	addwf	prodl,w,c
  4081  010EA4  6ED9               	movwf	fsr2l,c
  4082  010EA6  0E01               	movlw	high _port
  4083  010EA8  20F4               	addwfc	prodh,w,c
  4084  010EAA  6EDA               	movwf	fsr2h,c
  4085  010EAC  6ADE               	clrf	postinc2,c
  4086  010EAE  6ADE               	clrf	postinc2,c
  4087  010EB0  6ADE               	clrf	postinc2,c
  4088  010EB2  6ADD               	clrf	postdec2,c
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;tasks.h: 501: port[i].integrated_time = 0;
  4092  010EB4  0100               	movlb	0	; () banked
  4093  010EB6  5164               	movf	port_loop@i& (0+255),w,b
  4094  010EB8  0D17               	mullw	23
  4095  010EBA  0E10               	movlw	16
  4096  010EBC  26F3               	addwf	prodl,f,c
  4097  010EBE  0E00               	movlw	0
  4098  010EC0  22F4               	addwfc	prodh,f,c
  4099  010EC2  0E2B               	movlw	low _port
  4100  010EC4  24F3               	addwf	prodl,w,c
  4101  010EC6  6ED9               	movwf	fsr2l,c
  4102  010EC8  0E01               	movlw	high _port
  4103  010ECA  20F4               	addwfc	prodh,w,c
  4104  010ECC  6EDA               	movwf	fsr2h,c
  4105  010ECE  6ADE               	clrf	postinc2,c
  4106  010ED0  6ADE               	clrf	postinc2,c
  4107  010ED2  6ADE               	clrf	postinc2,c
  4108  010ED4  6ADD               	clrf	postdec2,c
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;tasks.h: 502: print_content = RESETED;
  4112  010ED6  0E07               	movlw	7
  4113  010ED8  0100               	movlb	0	; () banked
  4114  010EDA  6FFA               	movwf	_print_content& (0+255),b
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;tasks.h: 503: next_print_content = INTEGRATING;
  4118  010EDC  0E04               	movlw	4
  4119  010EDE  6E4D               	movwf	_next_print_content,c
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;tasks.h: 504: delay_set(&delay_display, 64);
  4123  010EE0  0E51               	movlw	low _delay_display
  4124  010EE2  0100               	movlb	0	; () banked
  4125  010EE4  6F60               	movwf	delay_set@d& (0+255),b
  4126  010EE6  0E00               	movlw	high _delay_display
  4127  010EE8  0100               	movlb	0	; () banked
  4128  010EEA  6F61               	movwf	(delay_set@d+1)& (0+255),b
  4129  010EEC  0E00               	movlw	0
  4130  010EEE  0100               	movlb	0	; () banked
  4131  010EF0  6F63               	movwf	(delay_set@value+1)& (0+255),b
  4132  010EF2  0E40               	movlw	64
  4133  010EF4  6F62               	movwf	delay_set@value& (0+255),b
  4134  010EF6  EC87  F0B5         	call	_delay_set	;wreg free
  4135                           
  4136                           ;tasks.h: 505: display_flag = 1;
  4137  010EFA  0E01               	movlw	1
  4138  010EFC  6E4B               	movwf	_display_flag,c
  4139  010EFE                     l11320:
  4140                           
  4141                           ;tasks.h: 506: }
  4142                           ;tasks.h: 508: if (port[i].ctmu.flag.long_holding_3) {
  4143  010EFE  0100               	movlb	0	; () banked
  4144  010F00  5164               	movf	port_loop@i& (0+255),w,b
  4145  010F02  0D17               	mullw	23
  4146  010F04  0E03               	movlw	3
  4147  010F06  26F3               	addwf	prodl,f,c
  4148  010F08  0E00               	movlw	0
  4149  010F0A  22F4               	addwfc	prodh,f,c
  4150  010F0C  0E2B               	movlw	low _port
  4151  010F0E  24F3               	addwf	prodl,w,c
  4152  010F10  6ED9               	movwf	fsr2l,c
  4153  010F12  0E01               	movlw	high _port
  4154  010F14  20F4               	addwfc	prodh,w,c
  4155  010F16  6EDA               	movwf	fsr2h,c
  4156  010F18  0101               	movlb	1	; () banked
  4157  010F1A  A6DF               	btfss	indf2,3,c
  4158  010F1C  D016               	goto	l862
  4159                           
  4160                           ; BSR set to: 1
  4161                           ;tasks.h: 509: port[i].ctmu.flags = 0;
  4162  010F1E  0100               	movlb	0	; () banked
  4163  010F20  5164               	movf	port_loop@i& (0+255),w,b
  4164  010F22  0D17               	mullw	23
  4165  010F24  0E02               	movlw	2
  4166  010F26  26F3               	addwf	prodl,f,c
  4167  010F28  0E00               	movlw	0
  4168  010F2A  22F4               	addwfc	prodh,f,c
  4169  010F2C  0E2B               	movlw	low _port
  4170  010F2E  24F3               	addwf	prodl,w,c
  4171  010F30  6ED9               	movwf	fsr2l,c
  4172  010F32  0E01               	movlw	high _port
  4173  010F34  20F4               	addwfc	prodh,w,c
  4174  010F36  6EDA               	movwf	fsr2h,c
  4175  010F38  0E00               	movlw	0
  4176  010F3A  6EDE               	movwf	postinc2,c
  4177  010F3C  0E00               	movlw	0
  4178  010F3E  6EDD               	movwf	postdec2,c
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;tasks.h: 510: print_content = TOGGLE_STOP_;
  4182  010F40  0E08               	movlw	8
  4183  010F42  0100               	movlb	0	; () banked
  4184  010F44  6FFA               	movwf	_print_content& (0+255),b
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;tasks.h: 511: display_flag = 1;
  4188  010F46  0E01               	movlw	1
  4189  010F48  6E4B               	movwf	_display_flag,c
  4190  010F4A                     l862:
  4191                           
  4192                           ;tasks.h: 512: }
  4193                           ;tasks.h: 513: if (port[i].ctmu.flag.long_hold_3) {
  4194  010F4A  0100               	movlb	0	; () banked
  4195  010F4C  5164               	movf	port_loop@i& (0+255),w,b
  4196  010F4E  0D17               	mullw	23
  4197  010F50  0E02               	movlw	2
  4198  010F52  26F3               	addwf	prodl,f,c
  4199  010F54  0E00               	movlw	0
  4200  010F56  22F4               	addwfc	prodh,f,c
  4201  010F58  0E2B               	movlw	low _port
  4202  010F5A  24F3               	addwf	prodl,w,c
  4203  010F5C  6ED9               	movwf	fsr2l,c
  4204  010F5E  0E01               	movlw	high _port
  4205  010F60  20F4               	addwfc	prodh,w,c
  4206  010F62  6EDA               	movwf	fsr2h,c
  4207  010F64  0101               	movlb	1	; () banked
  4208  010F66  A6DF               	btfss	indf2,3,c
  4209  010F68  D074               	goto	l11356
  4210                           
  4211                           ; BSR set to: 1
  4212                           ;tasks.h: 514: port[i].ctmu.flags = 0;
  4213  010F6A  0100               	movlb	0	; () banked
  4214  010F6C  5164               	movf	port_loop@i& (0+255),w,b
  4215  010F6E  0D17               	mullw	23
  4216  010F70  0E02               	movlw	2
  4217  010F72  26F3               	addwf	prodl,f,c
  4218  010F74  0E00               	movlw	0
  4219  010F76  22F4               	addwfc	prodh,f,c
  4220  010F78  0E2B               	movlw	low _port
  4221  010F7A  24F3               	addwf	prodl,w,c
  4222  010F7C  6ED9               	movwf	fsr2l,c
  4223  010F7E  0E01               	movlw	high _port
  4224  010F80  20F4               	addwfc	prodh,w,c
  4225  010F82  6EDA               	movwf	fsr2h,c
  4226  010F84  0E00               	movlw	0
  4227  010F86  6EDE               	movwf	postinc2,c
  4228  010F88  0E00               	movlw	0
  4229  010F8A  6EDD               	movwf	postdec2,c
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;tasks.h: 515: LED_OUT(i, 0);
  4233  010F8C  0E00               	movlw	0
  4234  010F8E  0100               	movlb	0	; () banked
  4235  010F90  6F60               	movwf	LED_OUT@value& (0+255),b
  4236  010F92  0100               	movlb	0	; () banked
  4237  010F94  5164               	movf	port_loop@i& (0+255),w,b
  4238  010F96  ECDD  F0AF         	call	_LED_OUT
  4239                           
  4240                           ;tasks.h: 516: if (port[i].flag.auto_cut_ON) {
  4241  010F9A  0100               	movlb	0	; () banked
  4242  010F9C  5164               	movf	port_loop@i& (0+255),w,b
  4243  010F9E  0D17               	mullw	23
  4244  010FA0  0E16               	movlw	22
  4245  010FA2  26F3               	addwf	prodl,f,c
  4246  010FA4  0E00               	movlw	0
  4247  010FA6  22F4               	addwfc	prodh,f,c
  4248  010FA8  0E2B               	movlw	low _port
  4249  010FAA  24F3               	addwf	prodl,w,c
  4250  010FAC  6ED9               	movwf	fsr2l,c
  4251  010FAE  0E01               	movlw	high _port
  4252  010FB0  20F4               	addwfc	prodh,w,c
  4253  010FB2  6EDA               	movwf	fsr2h,c
  4254  010FB4  0101               	movlb	1	; () banked
  4255  010FB6  A0DF               	btfss	indf2,0,c
  4256  010FB8  D029               	goto	l11346
  4257                           
  4258                           ; BSR set to: 1
  4259                           ;tasks.h: 517: port[i].flag.auto_cut_ON = 0;
  4260  010FBA  0100               	movlb	0	; () banked
  4261  010FBC  5164               	movf	port_loop@i& (0+255),w,b
  4262  010FBE  0D17               	mullw	23
  4263  010FC0  0E16               	movlw	22
  4264  010FC2  26F3               	addwf	prodl,f,c
  4265  010FC4  0E00               	movlw	0
  4266  010FC6  22F4               	addwfc	prodh,f,c
  4267  010FC8  0E2B               	movlw	low _port
  4268  010FCA  24F3               	addwf	prodl,w,c
  4269  010FCC  6ED9               	movwf	fsr2l,c
  4270  010FCE  0E01               	movlw	high _port
  4271  010FD0  20F4               	addwfc	prodh,w,c
  4272  010FD2  6EDA               	movwf	fsr2h,c
  4273  010FD4  0101               	movlb	1	; () banked
  4274  010FD6  90DF               	bcf	indf2,0,c
  4275                           
  4276                           ; BSR set to: 1
  4277                           ;tasks.h: 518: OUT(i, 1);
  4278  010FD8  0E01               	movlw	1
  4279  010FDA  0100               	movlb	0	; () banked
  4280  010FDC  6F60               	movwf	OUT@value& (0+255),b
  4281  010FDE  0100               	movlb	0	; () banked
  4282  010FE0  5164               	movf	port_loop@i& (0+255),w,b
  4283  010FE2  EC16  F0B0         	call	_OUT
  4284                           
  4285                           ;tasks.h: 519: print_content = ALWAYS_ON;
  4286  010FE6  0E09               	movlw	9
  4287  010FE8  0100               	movlb	0	; () banked
  4288  010FEA  6FFA               	movwf	_print_content& (0+255),b
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;tasks.h: 520: next_print_content = TIME;
  4292  010FEC  0E01               	movlw	1
  4293  010FEE  6E4D               	movwf	_next_print_content,c
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;tasks.h: 521: delay_set(&delay_display, 100);
  4297  010FF0  0E51               	movlw	low _delay_display
  4298  010FF2  0100               	movlb	0	; () banked
  4299  010FF4  6F60               	movwf	delay_set@d& (0+255),b
  4300  010FF6  0E00               	movlw	high _delay_display
  4301  010FF8  0100               	movlb	0	; () banked
  4302  010FFA  6F61               	movwf	(delay_set@d+1)& (0+255),b
  4303  010FFC  0E00               	movlw	0
  4304  010FFE  0100               	movlb	0	; () banked
  4305  011000  6F63               	movwf	(delay_set@value+1)& (0+255),b
  4306  011002  0E64               	movlw	100
  4307  011004  6F62               	movwf	delay_set@value& (0+255),b
  4308  011006  EC87  F0B5         	call	_delay_set	;wreg free
  4309  01100A  D021               	goto	l11354
  4310  01100C                     l11346:
  4311                           
  4312                           ;tasks.h: 524: port[i].flag.auto_cut_ON = 1;
  4313  01100C  0100               	movlb	0	; () banked
  4314  01100E  5164               	movf	port_loop@i& (0+255),w,b
  4315  011010  0D17               	mullw	23
  4316  011012  0E16               	movlw	22
  4317  011014  26F3               	addwf	prodl,f,c
  4318  011016  0E00               	movlw	0
  4319  011018  22F4               	addwfc	prodh,f,c
  4320  01101A  0E2B               	movlw	low _port
  4321  01101C  24F3               	addwf	prodl,w,c
  4322  01101E  6ED9               	movwf	fsr2l,c
  4323  011020  0E01               	movlw	high _port
  4324  011022  20F4               	addwfc	prodh,w,c
  4325  011024  6EDA               	movwf	fsr2h,c
  4326  011026  0101               	movlb	1	; () banked
  4327  011028  80DF               	bsf	indf2,0,c
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;tasks.h: 525: print_content = AUTO_STOP;
  4331  01102A  0E0A               	movlw	10
  4332  01102C  0100               	movlb	0	; () banked
  4333  01102E  6FFA               	movwf	_print_content& (0+255),b
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;tasks.h: 526: next_print_content = TIME;
  4337  011030  0E01               	movlw	1
  4338  011032  6E4D               	movwf	_next_print_content,c
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;tasks.h: 527: delay_set(&delay_display, 100);
  4342  011034  0E51               	movlw	low _delay_display
  4343  011036  0100               	movlb	0	; () banked
  4344  011038  6F60               	movwf	delay_set@d& (0+255),b
  4345  01103A  0E00               	movlw	high _delay_display
  4346  01103C  0100               	movlb	0	; () banked
  4347  01103E  6F61               	movwf	(delay_set@d+1)& (0+255),b
  4348  011040  0E00               	movlw	0
  4349  011042  0100               	movlb	0	; () banked
  4350  011044  6F63               	movwf	(delay_set@value+1)& (0+255),b
  4351  011046  0E64               	movlw	100
  4352  011048  6F62               	movwf	delay_set@value& (0+255),b
  4353  01104A  EC87  F0B5         	call	_delay_set	;wreg free
  4354  01104E                     l11354:
  4355                           
  4356                           ;tasks.h: 528: display_flag = 1;
  4357  01104E  0E01               	movlw	1
  4358  011050  6E4B               	movwf	_display_flag,c
  4359  011052                     l11356:
  4360                           
  4361                           ;tasks.h: 529: }
  4362                           ;tasks.h: 530: }
  4363                           ;tasks.h: 532: if (port[i].ctmu.flag.long_holding_4) {
  4364  011052  0100               	movlb	0	; () banked
  4365  011054  5164               	movf	port_loop@i& (0+255),w,b
  4366  011056  0D17               	mullw	23
  4367  011058  0E03               	movlw	3
  4368  01105A  26F3               	addwf	prodl,f,c
  4369  01105C  0E00               	movlw	0
  4370  01105E  22F4               	addwfc	prodh,f,c
  4371  011060  0E2B               	movlw	low _port
  4372  011062  24F3               	addwf	prodl,w,c
  4373  011064  6ED9               	movwf	fsr2l,c
  4374  011066  0E01               	movlw	high _port
  4375  011068  20F4               	addwfc	prodh,w,c
  4376  01106A  6EDA               	movwf	fsr2h,c
  4377  01106C  0101               	movlb	1	; () banked
  4378  01106E  A8DF               	btfss	indf2,4,c
  4379  011070  D016               	goto	l866
  4380                           
  4381                           ; BSR set to: 1
  4382                           ;tasks.h: 533: port[i].ctmu.flags = 0;
  4383  011072  0100               	movlb	0	; () banked
  4384  011074  5164               	movf	port_loop@i& (0+255),w,b
  4385  011076  0D17               	mullw	23
  4386  011078  0E02               	movlw	2
  4387  01107A  26F3               	addwf	prodl,f,c
  4388  01107C  0E00               	movlw	0
  4389  01107E  22F4               	addwfc	prodh,f,c
  4390  011080  0E2B               	movlw	low _port
  4391  011082  24F3               	addwf	prodl,w,c
  4392  011084  6ED9               	movwf	fsr2l,c
  4393  011086  0E01               	movlw	high _port
  4394  011088  20F4               	addwfc	prodh,w,c
  4395  01108A  6EDA               	movwf	fsr2h,c
  4396  01108C  0E00               	movlw	0
  4397  01108E  6EDE               	movwf	postinc2,c
  4398  011090  0E00               	movlw	0
  4399  011092  6EDD               	movwf	postdec2,c
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;tasks.h: 534: print_content = TOGGLE_LED_;
  4403  011094  0E0B               	movlw	11
  4404  011096  0100               	movlb	0	; () banked
  4405  011098  6FFA               	movwf	_print_content& (0+255),b
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;tasks.h: 535: display_flag = 1;
  4409  01109A  0E01               	movlw	1
  4410  01109C  6E4B               	movwf	_display_flag,c
  4411  01109E                     l866:
  4412                           
  4413                           ;tasks.h: 536: }
  4414                           ;tasks.h: 537: if (port[i].ctmu.flag.long_hold_4) {
  4415  01109E  0100               	movlb	0	; () banked
  4416  0110A0  5164               	movf	port_loop@i& (0+255),w,b
  4417  0110A2  0D17               	mullw	23
  4418  0110A4  0E02               	movlw	2
  4419  0110A6  26F3               	addwf	prodl,f,c
  4420  0110A8  0E00               	movlw	0
  4421  0110AA  22F4               	addwfc	prodh,f,c
  4422  0110AC  0E2B               	movlw	low _port
  4423  0110AE  24F3               	addwf	prodl,w,c
  4424  0110B0  6ED9               	movwf	fsr2l,c
  4425  0110B2  0E01               	movlw	high _port
  4426  0110B4  20F4               	addwfc	prodh,w,c
  4427  0110B6  6EDA               	movwf	fsr2h,c
  4428  0110B8  0101               	movlb	1	; () banked
  4429  0110BA  A8DF               	btfss	indf2,4,c
  4430  0110BC  D06D               	goto	l11390
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;tasks.h: 538: port[i].ctmu.flags = 0;
  4434  0110BE  0100               	movlb	0	; () banked
  4435  0110C0  5164               	movf	port_loop@i& (0+255),w,b
  4436  0110C2  0D17               	mullw	23
  4437  0110C4  0E02               	movlw	2
  4438  0110C6  26F3               	addwf	prodl,f,c
  4439  0110C8  0E00               	movlw	0
  4440  0110CA  22F4               	addwfc	prodh,f,c
  4441  0110CC  0E2B               	movlw	low _port
  4442  0110CE  24F3               	addwf	prodl,w,c
  4443  0110D0  6ED9               	movwf	fsr2l,c
  4444  0110D2  0E01               	movlw	high _port
  4445  0110D4  20F4               	addwfc	prodh,w,c
  4446  0110D6  6EDA               	movwf	fsr2h,c
  4447  0110D8  0E00               	movlw	0
  4448  0110DA  6EDE               	movwf	postinc2,c
  4449  0110DC  0E00               	movlw	0
  4450  0110DE  6EDD               	movwf	postdec2,c
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;tasks.h: 539: LED_OUT(i, 0);
  4454  0110E0  0E00               	movlw	0
  4455  0110E2  0100               	movlb	0	; () banked
  4456  0110E4  6F60               	movwf	LED_OUT@value& (0+255),b
  4457  0110E6  0100               	movlb	0	; () banked
  4458  0110E8  5164               	movf	port_loop@i& (0+255),w,b
  4459  0110EA  ECDD  F0AF         	call	_LED_OUT
  4460                           
  4461                           ;tasks.h: 540: if (port[i].flag.led_indicator_ON) {
  4462  0110EE  0100               	movlb	0	; () banked
  4463  0110F0  5164               	movf	port_loop@i& (0+255),w,b
  4464  0110F2  0D17               	mullw	23
  4465  0110F4  0E16               	movlw	22
  4466  0110F6  26F3               	addwf	prodl,f,c
  4467  0110F8  0E00               	movlw	0
  4468  0110FA  22F4               	addwfc	prodh,f,c
  4469  0110FC  0E2B               	movlw	low _port
  4470  0110FE  24F3               	addwf	prodl,w,c
  4471  011100  6ED9               	movwf	fsr2l,c
  4472  011102  0E01               	movlw	high _port
  4473  011104  20F4               	addwfc	prodh,w,c
  4474  011106  6EDA               	movwf	fsr2h,c
  4475  011108  0101               	movlb	1	; () banked
  4476  01110A  A2DF               	btfss	indf2,1,c
  4477  01110C  D022               	goto	l11380
  4478                           
  4479                           ; BSR set to: 1
  4480                           ;tasks.h: 541: port[i].flag.led_indicator_ON = 0;
  4481  01110E  0100               	movlb	0	; () banked
  4482  011110  5164               	movf	port_loop@i& (0+255),w,b
  4483  011112  0D17               	mullw	23
  4484  011114  0E16               	movlw	22
  4485  011116  26F3               	addwf	prodl,f,c
  4486  011118  0E00               	movlw	0
  4487  01111A  22F4               	addwfc	prodh,f,c
  4488  01111C  0E2B               	movlw	low _port
  4489  01111E  24F3               	addwf	prodl,w,c
  4490  011120  6ED9               	movwf	fsr2l,c
  4491  011122  0E01               	movlw	high _port
  4492  011124  20F4               	addwfc	prodh,w,c
  4493  011126  6EDA               	movwf	fsr2h,c
  4494  011128  0101               	movlb	1	; () banked
  4495  01112A  92DF               	bcf	indf2,1,c
  4496                           
  4497                           ; BSR set to: 1
  4498                           ;tasks.h: 542: print_content = LED_OFF;
  4499  01112C  0E0D               	movlw	13
  4500  01112E  0100               	movlb	0	; () banked
  4501  011130  6FFA               	movwf	_print_content& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;tasks.h: 543: next_print_content = TIME;
  4505  011132  0E01               	movlw	1
  4506  011134  6E4D               	movwf	_next_print_content,c
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;tasks.h: 544: delay_set(&delay_display, 100);
  4510  011136  0E51               	movlw	low _delay_display
  4511  011138  0100               	movlb	0	; () banked
  4512  01113A  6F60               	movwf	delay_set@d& (0+255),b
  4513  01113C  0E00               	movlw	high _delay_display
  4514  01113E  0100               	movlb	0	; () banked
  4515  011140  6F61               	movwf	(delay_set@d+1)& (0+255),b
  4516  011142  0E00               	movlw	0
  4517  011144  0100               	movlb	0	; () banked
  4518  011146  6F63               	movwf	(delay_set@value+1)& (0+255),b
  4519  011148  0E64               	movlw	100
  4520  01114A  6F62               	movwf	delay_set@value& (0+255),b
  4521  01114C  EC87  F0B5         	call	_delay_set	;wreg free
  4522  011150  D021               	goto	l11388
  4523  011152                     l11380:
  4524                           
  4525                           ;tasks.h: 547: port[i].flag.led_indicator_ON = 1;
  4526  011152  0100               	movlb	0	; () banked
  4527  011154  5164               	movf	port_loop@i& (0+255),w,b
  4528  011156  0D17               	mullw	23
  4529  011158  0E16               	movlw	22
  4530  01115A  26F3               	addwf	prodl,f,c
  4531  01115C  0E00               	movlw	0
  4532  01115E  22F4               	addwfc	prodh,f,c
  4533  011160  0E2B               	movlw	low _port
  4534  011162  24F3               	addwf	prodl,w,c
  4535  011164  6ED9               	movwf	fsr2l,c
  4536  011166  0E01               	movlw	high _port
  4537  011168  20F4               	addwfc	prodh,w,c
  4538  01116A  6EDA               	movwf	fsr2h,c
  4539  01116C  0101               	movlb	1	; () banked
  4540  01116E  82DF               	bsf	indf2,1,c
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;tasks.h: 548: print_content = LED_ON;
  4544  011170  0E0C               	movlw	12
  4545  011172  0100               	movlb	0	; () banked
  4546  011174  6FFA               	movwf	_print_content& (0+255),b
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;tasks.h: 549: next_print_content = TIME;
  4550  011176  0E01               	movlw	1
  4551  011178  6E4D               	movwf	_next_print_content,c
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;tasks.h: 550: delay_set(&delay_display, 100);
  4555  01117A  0E51               	movlw	low _delay_display
  4556  01117C  0100               	movlb	0	; () banked
  4557  01117E  6F60               	movwf	delay_set@d& (0+255),b
  4558  011180  0E00               	movlw	high _delay_display
  4559  011182  0100               	movlb	0	; () banked
  4560  011184  6F61               	movwf	(delay_set@d+1)& (0+255),b
  4561  011186  0E00               	movlw	0
  4562  011188  0100               	movlb	0	; () banked
  4563  01118A  6F63               	movwf	(delay_set@value+1)& (0+255),b
  4564  01118C  0E64               	movlw	100
  4565  01118E  6F62               	movwf	delay_set@value& (0+255),b
  4566  011190  EC87  F0B5         	call	_delay_set	;wreg free
  4567  011194                     l11388:
  4568                           
  4569                           ;tasks.h: 551: display_flag = 1;
  4570  011194  0E01               	movlw	1
  4571  011196  6E4B               	movwf	_display_flag,c
  4572  011198                     l11390:
  4573                           
  4574                           ;tasks.h: 552: }
  4575                           ;tasks.h: 553: }
  4576                           ;tasks.h: 555: if (port[i].ctmu.flag.long_holding_5) {
  4577  011198  0100               	movlb	0	; () banked
  4578  01119A  5164               	movf	port_loop@i& (0+255),w,b
  4579  01119C  0D17               	mullw	23
  4580  01119E  0E03               	movlw	3
  4581  0111A0  26F3               	addwf	prodl,f,c
  4582  0111A2  0E00               	movlw	0
  4583  0111A4  22F4               	addwfc	prodh,f,c
  4584  0111A6  0E2B               	movlw	low _port
  4585  0111A8  24F3               	addwf	prodl,w,c
  4586  0111AA  6ED9               	movwf	fsr2l,c
  4587  0111AC  0E01               	movlw	high _port
  4588  0111AE  20F4               	addwfc	prodh,w,c
  4589  0111B0  6EDA               	movwf	fsr2h,c
  4590  0111B2  0101               	movlb	1	; () banked
  4591  0111B4  AADF               	btfss	indf2,5,c
  4592  0111B6  D02C               	goto	l11404
  4593                           
  4594                           ; BSR set to: 1
  4595                           ;tasks.h: 556: port[i].ctmu.flags = 0;
  4596  0111B8  0100               	movlb	0	; () banked
  4597  0111BA  5164               	movf	port_loop@i& (0+255),w,b
  4598  0111BC  0D17               	mullw	23
  4599  0111BE  0E02               	movlw	2
  4600  0111C0  26F3               	addwf	prodl,f,c
  4601  0111C2  0E00               	movlw	0
  4602  0111C4  22F4               	addwfc	prodh,f,c
  4603  0111C6  0E2B               	movlw	low _port
  4604  0111C8  24F3               	addwf	prodl,w,c
  4605  0111CA  6ED9               	movwf	fsr2l,c
  4606  0111CC  0E01               	movlw	high _port
  4607  0111CE  20F4               	addwfc	prodh,w,c
  4608  0111D0  6EDA               	movwf	fsr2h,c
  4609  0111D2  0E00               	movlw	0
  4610  0111D4  6EDE               	movwf	postinc2,c
  4611  0111D6  0E00               	movlw	0
  4612  0111D8  6EDD               	movwf	postdec2,c
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;tasks.h: 557: LED_OUT(i, 0);
  4616  0111DA  0E00               	movlw	0
  4617  0111DC  0100               	movlb	0	; () banked
  4618  0111DE  6F60               	movwf	LED_OUT@value& (0+255),b
  4619  0111E0  0100               	movlb	0	; () banked
  4620  0111E2  5164               	movf	port_loop@i& (0+255),w,b
  4621  0111E4  ECDD  F0AF         	call	_LED_OUT
  4622                           
  4623                           ;tasks.h: 558: print_content = NOTHING_DONE;
  4624  0111E8  0E0E               	movlw	14
  4625  0111EA  0100               	movlb	0	; () banked
  4626  0111EC  6FFA               	movwf	_print_content& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;tasks.h: 559: next_print_content = CURRENT;
  4630  0111EE  0E03               	movlw	3
  4631  0111F0  6E4D               	movwf	_next_print_content,c
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;tasks.h: 560: delay_set(&delay_display, 64);
  4635  0111F2  0E51               	movlw	low _delay_display
  4636  0111F4  0100               	movlb	0	; () banked
  4637  0111F6  6F60               	movwf	delay_set@d& (0+255),b
  4638  0111F8  0E00               	movlw	high _delay_display
  4639  0111FA  0100               	movlb	0	; () banked
  4640  0111FC  6F61               	movwf	(delay_set@d+1)& (0+255),b
  4641  0111FE  0E00               	movlw	0
  4642  011200  0100               	movlb	0	; () banked
  4643  011202  6F63               	movwf	(delay_set@value+1)& (0+255),b
  4644  011204  0E40               	movlw	64
  4645  011206  6F62               	movwf	delay_set@value& (0+255),b
  4646  011208  EC87  F0B5         	call	_delay_set	;wreg free
  4647                           
  4648                           ;tasks.h: 561: display_flag = 1;
  4649  01120C  0E01               	movlw	1
  4650  01120E  6E4B               	movwf	_display_flag,c
  4651  011210                     l11404:
  4652  011210  0100               	movlb	0	; () banked
  4653  011212  2B64               	incf	port_loop@i& (0+255),f,b
  4654  011214  D542               	goto	l11250
  4655  011216                     __end_of_port_loop:
  4656                           	opt stack 0
  4657                           tblptru	equ	0xFF8
  4658                           tblptrh	equ	0xFF7
  4659                           tblptrl	equ	0xFF6
  4660                           tablat	equ	0xFF5
  4661                           prodh	equ	0xFF4
  4662                           prodl	equ	0xFF3
  4663                           intcon	equ	0xFF2
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           postdec1	equ	0xFE5
  4667                           fsr1h	equ	0xFE2
  4668                           fsr1l	equ	0xFE1
  4669                           indf2	equ	0xFDF
  4670                           postinc2	equ	0xFDE
  4671                           postdec2	equ	0xFDD
  4672                           fsr2h	equ	0xFDA
  4673                           fsr2l	equ	0xFD9
  4674                           status	equ	0xFD8
  4675                           
  4676 ;; *************** function _delay_set *****************
  4677 ;; Defined at:
  4678 ;;		line 349 in file "../My_header\My_header.h"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  d               2    0[BANK0 ] PTR struct Delay
  4681 ;;		 -> delay_display(3), 
  4682 ;;  value           2    2[BANK0 ] unsigned int 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;		None               void
  4687 ;; Registers used:
  4688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4698 ;;Total ram usage:        4 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:   11
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_port_loop
  4705 ;;		_main
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text4
  4710  016B0E                     __ptext4:
  4711                           	opt stack 0
  4712  016B0E                     _delay_set:
  4713                           	opt stack 17
  4714                           
  4715                           ;My_header\My_header.h: 350: d->cnt = value;
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;incstack = 0
  4719  016B0E  0100               	movlb	0	; () banked
  4720  016B10  EE20 F001          	lfsr	2,1
  4721  016B14  5160               	movf	delay_set@d& (0+255),w,b
  4722  016B16  26D9               	addwf	fsr2l,f,c
  4723  016B18  5161               	movf	(delay_set@d+1)& (0+255),w,b
  4724  016B1A  22DA               	addwfc	fsr2h,f,c
  4725  016B1C  C062  FFDE         	movff	delay_set@value,postinc2
  4726  016B20  C063  FFDD         	movff	delay_set@value+1,postdec2
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;My_header\My_header.h: 351: d->flag = 0;
  4730  016B24  C060  FFD9         	movff	delay_set@d,fsr2l
  4731  016B28  C061  FFDA         	movff	delay_set@d+1,fsr2h
  4732  016B2C  0E00               	movlw	0
  4733  016B2E  6EDF               	movwf	indf2,c
  4734                           
  4735                           ; BSR set to: 0
  4736  016B30  0012               	return		;funcret
  4737  016B32                     __end_of_delay_set:
  4738                           	opt stack 0
  4739                           tblptru	equ	0xFF8
  4740                           tblptrh	equ	0xFF7
  4741                           tblptrl	equ	0xFF6
  4742                           tablat	equ	0xFF5
  4743                           prodh	equ	0xFF4
  4744                           prodl	equ	0xFF3
  4745                           intcon	equ	0xFF2
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _LED_OUT *****************
  4759 ;; Defined at:
  4760 ;;		line 129 in file "tasks.h"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  b               1    wreg     unsigned char 
  4763 ;;  value           1    0[BANK0 ] unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  b               1    1[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4775 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4779 ;;Total ram usage:        2 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:   11
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_port_loop
  4786 ;;		_sleep_loop
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text5
  4791  015FBA                     __ptext5:
  4792                           	opt stack 0
  4793  015FBA                     _LED_OUT:
  4794                           	opt stack 18
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;incstack = 0
  4798                           ;LED_OUT@b stored from wreg
  4799  015FBA  0100               	movlb	0	; () banked
  4800  015FBC  6F61               	movwf	LED_OUT@b& (0+255),b
  4801                           
  4802                           ;tasks.h: 130: port[b].flag.led_flag = value;
  4803  015FBE  0100               	movlb	0	; () banked
  4804  015FC0  5161               	movf	LED_OUT@b& (0+255),w,b
  4805  015FC2  0D17               	mullw	23
  4806  015FC4  0E16               	movlw	22
  4807  015FC6  26F3               	addwf	prodl,f,c
  4808  015FC8  0E00               	movlw	0
  4809  015FCA  22F4               	addwfc	prodh,f,c
  4810  015FCC  0E2B               	movlw	low _port
  4811  015FCE  24F3               	addwf	prodl,w,c
  4812  015FD0  6ED9               	movwf	fsr2l,c
  4813  015FD2  0E01               	movlw	high _port
  4814  015FD4  20F4               	addwfc	prodh,w,c
  4815  015FD6  6EDA               	movwf	fsr2h,c
  4816  015FD8  0100               	movlb	0	; () banked
  4817  015FDA  B160               	btfsc	LED_OUT@value& (0+255),0,b
  4818  015FDC  D003               	bra	u11965
  4819  015FDE  0101               	movlb	1	; () banked
  4820  015FE0  96DF               	bcf	indf2,3,c
  4821  015FE2  D002               	bra	u11966
  4822  015FE4                     u11965:
  4823  015FE4  0101               	movlb	1	; () banked
  4824  015FE6  86DF               	bsf	indf2,3,c
  4825  015FE8                     u11966:
  4826                           
  4827                           ;tasks.h: 131: switch (b) {
  4828  015FE8  D015               	goto	l10518
  4829  015FEA                     l697:
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;tasks.h: 133: LATB7 = value;
  4833  015FEA  0100               	movlb	0	; () banked
  4834  015FEC  A160               	btfss	LED_OUT@value& (0+255),0,b
  4835  015FEE  D002               	goto	u11970
  4836  015FF0  8E8A               	bsf	3978,7,c	;volatile
  4837  015FF2  0012               	return	
  4838  015FF4                     u11970:
  4839  015FF4  9E8A               	bcf	3978,7,c	;volatile
  4840                           
  4841                           ;tasks.h: 134: break;
  4842  015FF6  0012               	return	
  4843  015FF8                     l699:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;tasks.h: 136: LATB6 = value;
  4847  015FF8  0100               	movlb	0	; () banked
  4848  015FFA  A160               	btfss	LED_OUT@value& (0+255),0,b
  4849  015FFC  D002               	goto	u11990
  4850  015FFE  8C8A               	bsf	3978,6,c	;volatile
  4851  016000  0012               	return	
  4852  016002                     u11990:
  4853  016002  9C8A               	bcf	3978,6,c	;volatile
  4854                           
  4855                           ;tasks.h: 137: break;
  4856  016004  0012               	return	
  4857  016006                     l700:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;tasks.h: 139: LATC2 = value;
  4861  016006  0100               	movlb	0	; () banked
  4862  016008  A160               	btfss	LED_OUT@value& (0+255),0,b
  4863  01600A  D002               	goto	u12010
  4864  01600C  848B               	bsf	3979,2,c	;volatile
  4865  01600E  0012               	return	
  4866  016010                     u12010:
  4867  016010  948B               	bcf	3979,2,c	;volatile
  4868                           
  4869                           ;tasks.h: 141: }
  4870                           
  4871                           ;tasks.h: 140: break;
  4872  016012  0012               	return	
  4873  016014                     l10518:
  4874  016014  0100               	movlb	0	; () banked
  4875  016016  5161               	movf	LED_OUT@b& (0+255),w,b
  4876                           
  4877                           ; Switch size 1, requested type "space"
  4878                           ; Number of cases is 3, Range of values is 0 to 2
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte           10     6 (average)
  4882                           ;	Chosen strategy is simple_byte
  4883  016018  0A00               	xorlw	0	; case 0
  4884  01601A  B4D8               	btfsc	status,2,c
  4885  01601C  D7E6               	goto	l697
  4886  01601E  0A01               	xorlw	1	; case 1
  4887  016020  B4D8               	btfsc	status,2,c
  4888  016022  D7EA               	goto	l699
  4889  016024  0A03               	xorlw	3	; case 2
  4890  016026  A4D8               	btfss	status,2,c
  4891  016028  0012               	return	
  4892  01602A  D7ED               	goto	l700
  4893  01602C                     __end_of_LED_OUT:
  4894                           	opt stack 0
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           prodh	equ	0xFF4
  4900                           prodl	equ	0xFF3
  4901                           intcon	equ	0xFF2
  4902                           postinc0	equ	0xFEE
  4903                           wreg	equ	0xFE8
  4904                           postdec1	equ	0xFE5
  4905                           fsr1h	equ	0xFE2
  4906                           fsr1l	equ	0xFE1
  4907                           indf2	equ	0xFDF
  4908                           postinc2	equ	0xFDE
  4909                           postdec2	equ	0xFDD
  4910                           fsr2h	equ	0xFDA
  4911                           fsr2l	equ	0xFD9
  4912                           status	equ	0xFD8
  4913                           
  4914 ;; *************** function _display_LCD *****************
  4915 ;; Defined at:
  4916 ;;		line 220 in file "tasks.h"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;		None
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  str            10   60[BANK0 ] unsigned char [10]
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4933 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;Total ram usage:       14 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:   16
  4937 ;; This function calls:
  4938 ;;		_I2C_LCD_Clear
  4939 ;;		_I2C_LCD_Putc
  4940 ;;		_I2C_LCD_Puts
  4941 ;;		_I2C_LCD_SetCursor
  4942 ;;		___lldiv
  4943 ;;		___llmod
  4944 ;;		___lwdiv
  4945 ;;		___lwmod
  4946 ;;		_display_port
  4947 ;;		_display_time_1602
  4948 ;;		_my_utoa
  4949 ;; This function is called by:
  4950 ;;		_normal_mode_loop
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text6
  4955  010000                     __ptext6:
  4956                           	opt stack 0
  4957  010000                     _display_LCD:
  4958                           	opt stack 13
  4959                           
  4960                           ;tasks.h: 221: I2C_LCD_Clear();
  4961                           
  4962                           ;incstack = 0
  4963  010000  EC0A  F0B6         	call	_I2C_LCD_Clear	;wreg free
  4964                           
  4965                           ;tasks.h: 222: switch (print_content) {
  4966  010004  D2F5               	goto	l11246
  4967  010006                     l11120:
  4968                           
  4969                           ;tasks.h: 224: I2C_LCD_SetCursor(0, 0);
  4970  010006  0E00               	movlw	0
  4971  010008  0100               	movlb	0	; () banked
  4972  01000A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4973  01000C  0E00               	movlw	0
  4974  01000E  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  4975                           
  4976                           ;tasks.h: 225: I2C_LCD_Puts("Charge Station 6");
  4977  010012  0E2C               	movlw	low STR_29
  4978  010014  0100               	movlb	0	; () banked
  4979  010016  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4980  010018  0EFE               	movlw	high STR_29
  4981  01001A  0100               	movlb	0	; () banked
  4982  01001C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4983  01001E  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  4984                           
  4985                           ;tasks.h: 226: I2C_LCD_SetCursor(0, 1);
  4986  010022  0E01               	movlw	1
  4987  010024  0100               	movlb	0	; () banked
  4988  010026  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  4989  010028  0E00               	movlw	0
  4990  01002A  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  4991                           
  4992                           ;tasks.h: 227: I2C_LCD_Puts("Made by KERI");
  4993  01002E  0EAC               	movlw	low STR_30
  4994  010030  0100               	movlb	0	; () banked
  4995  010032  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  4996  010034  0EFE               	movlw	high STR_30
  4997  010036  0100               	movlb	0	; () banked
  4998  010038  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  4999  01003A  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5000                           
  5001                           ;tasks.h: 228: break;
  5002  01003E  0012               	return	
  5003  010040                     l11126:
  5004                           
  5005                           ;tasks.h: 230: display_time_1602(&caltime_now, &epoch_now);
  5006  010040  0E80               	movlw	low _caltime_now
  5007  010042  0100               	movlb	0	; () banked
  5008  010044  6F97               	movwf	display_time_1602@ct& (0+255),b
  5009  010046  0E01               	movlw	high _caltime_now
  5010  010048  0100               	movlb	0	; () banked
  5011  01004A  6F98               	movwf	(display_time_1602@ct+1)& (0+255),b
  5012  01004C  0EFC               	movlw	low _epoch_now
  5013  01004E  0100               	movlb	0	; () banked
  5014  010050  6F99               	movwf	display_time_1602@ep& (0+255),b
  5015  010052  0E00               	movlw	high _epoch_now
  5016  010054  0100               	movlb	0	; () banked
  5017  010056  6F9A               	movwf	(display_time_1602@ep+1)& (0+255),b
  5018  010058  EC65  F09A         	call	_display_time_1602	;wreg free
  5019                           
  5020                           ;tasks.h: 231: break;
  5021  01005C  0012               	return	
  5022  01005E                     l11128:
  5023                           
  5024                           ;tasks.h: 233: display_port();
  5025  01005E  EC9A  F09F         	call	_display_port	;wreg free
  5026                           
  5027                           ;tasks.h: 234: I2C_LCD_SetCursor(0, 1);
  5028  010062  0E01               	movlw	1
  5029  010064  0100               	movlb	0	; () banked
  5030  010066  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5031  010068  0E00               	movlw	0
  5032  01006A  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5033                           
  5034                           ;tasks.h: 235: I2C_LCD_Puts("Start Charging");
  5035  01006E  0E8F               	movlw	low STR_31
  5036  010070  0100               	movlb	0	; () banked
  5037  010072  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5038  010074  0EFE               	movlw	high STR_31
  5039  010076  0100               	movlb	0	; () banked
  5040  010078  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5041  01007A  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5042                           
  5043                           ;tasks.h: 236: break;
  5044  01007E  0012               	return	
  5045  010080                     l11134:
  5046                           
  5047                           ;tasks.h: 238: display_port();
  5048  010080  EC9A  F09F         	call	_display_port	;wreg free
  5049                           
  5050                           ;tasks.h: 239: I2C_LCD_SetCursor(0, 1);
  5051  010084  0E01               	movlw	1
  5052  010086  0100               	movlb	0	; () banked
  5053  010088  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5054  01008A  0E00               	movlw	0
  5055  01008C  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5056                           
  5057                           ;tasks.h: 240: I2C_LCD_Putc((port[print_port].current % 10000) / 1000 + '0');
  5058  010090  0E27               	movlw	39
  5059  010092  0100               	movlb	0	; () banked
  5060  010094  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5061  010096  0E10               	movlw	16
  5062  010098  6F62               	movwf	___lwmod@divisor& (0+255),b
  5063  01009A  0100               	movlb	0	; () banked
  5064  01009C  51FB               	movf	_print_port& (0+255),w,b
  5065  01009E  0D17               	mullw	23
  5066  0100A0  0E06               	movlw	6
  5067  0100A2  26F3               	addwf	prodl,f,c
  5068  0100A4  0E00               	movlw	0
  5069  0100A6  22F4               	addwfc	prodh,f,c
  5070  0100A8  0E2B               	movlw	low _port
  5071  0100AA  24F3               	addwf	prodl,w,c
  5072  0100AC  6ED9               	movwf	fsr2l,c
  5073  0100AE  0E01               	movlw	high _port
  5074  0100B0  20F4               	addwfc	prodh,w,c
  5075  0100B2  6EDA               	movwf	fsr2h,c
  5076  0100B4  CFDE F060          	movff	postinc2,___lwmod@dividend
  5077  0100B8  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  5078  0100BC  EC21  F0B1         	call	___lwmod	;wreg free
  5079  0100C0  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  5080  0100C4  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5081  0100C8  0E03               	movlw	3
  5082  0100CA  0100               	movlb	0	; () banked
  5083  0100CC  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5084  0100CE  0EE8               	movlw	232
  5085  0100D0  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5086  0100D2  EC66  F0AF         	call	___lwdiv	;wreg free
  5087  0100D6  0100               	movlb	0	; () banked
  5088  0100D8  517C               	movf	?___lwdiv& (0+255),w,b
  5089  0100DA  0F30               	addlw	48
  5090  0100DC  EC99  F0B3         	call	_I2C_LCD_Putc
  5091                           
  5092                           ;tasks.h: 241: I2C_LCD_Putc('.');
  5093  0100E0  0E2E               	movlw	46
  5094  0100E2  EC99  F0B3         	call	_I2C_LCD_Putc
  5095                           
  5096                           ;tasks.h: 242: I2C_LCD_Putc((port[print_port].current % 1000) / 100 + '0');
  5097  0100E6  0E03               	movlw	3
  5098  0100E8  0100               	movlb	0	; () banked
  5099  0100EA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5100  0100EC  0EE8               	movlw	232
  5101  0100EE  6F62               	movwf	___lwmod@divisor& (0+255),b
  5102  0100F0  0100               	movlb	0	; () banked
  5103  0100F2  51FB               	movf	_print_port& (0+255),w,b
  5104  0100F4  0D17               	mullw	23
  5105  0100F6  0E06               	movlw	6
  5106  0100F8  26F3               	addwf	prodl,f,c
  5107  0100FA  0E00               	movlw	0
  5108  0100FC  22F4               	addwfc	prodh,f,c
  5109  0100FE  0E2B               	movlw	low _port
  5110  010100  24F3               	addwf	prodl,w,c
  5111  010102  6ED9               	movwf	fsr2l,c
  5112  010104  0E01               	movlw	high _port
  5113  010106  20F4               	addwfc	prodh,w,c
  5114  010108  6EDA               	movwf	fsr2h,c
  5115  01010A  CFDE F060          	movff	postinc2,___lwmod@dividend
  5116  01010E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  5117  010112  EC21  F0B1         	call	___lwmod	;wreg free
  5118  010116  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  5119  01011A  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5120  01011E  0E00               	movlw	0
  5121  010120  0100               	movlb	0	; () banked
  5122  010122  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5123  010124  0E64               	movlw	100
  5124  010126  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5125  010128  EC66  F0AF         	call	___lwdiv	;wreg free
  5126  01012C  0100               	movlb	0	; () banked
  5127  01012E  517C               	movf	?___lwdiv& (0+255),w,b
  5128  010130  0F30               	addlw	48
  5129  010132  EC99  F0B3         	call	_I2C_LCD_Putc
  5130                           
  5131                           ;tasks.h: 243: I2C_LCD_Putc((port[print_port].current % 100) / 10 + '0');
  5132  010136  0E00               	movlw	0
  5133  010138  0100               	movlb	0	; () banked
  5134  01013A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5135  01013C  0E64               	movlw	100
  5136  01013E  6F62               	movwf	___lwmod@divisor& (0+255),b
  5137  010140  0100               	movlb	0	; () banked
  5138  010142  51FB               	movf	_print_port& (0+255),w,b
  5139  010144  0D17               	mullw	23
  5140  010146  0E06               	movlw	6
  5141  010148  26F3               	addwf	prodl,f,c
  5142  01014A  0E00               	movlw	0
  5143  01014C  22F4               	addwfc	prodh,f,c
  5144  01014E  0E2B               	movlw	low _port
  5145  010150  24F3               	addwf	prodl,w,c
  5146  010152  6ED9               	movwf	fsr2l,c
  5147  010154  0E01               	movlw	high _port
  5148  010156  20F4               	addwfc	prodh,w,c
  5149  010158  6EDA               	movwf	fsr2h,c
  5150  01015A  CFDE F060          	movff	postinc2,___lwmod@dividend
  5151  01015E  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  5152  010162  EC21  F0B1         	call	___lwmod	;wreg free
  5153  010166  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
  5154  01016A  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5155  01016E  0E00               	movlw	0
  5156  010170  0100               	movlb	0	; () banked
  5157  010172  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5158  010174  0E0A               	movlw	10
  5159  010176  6F7E               	movwf	___lwdiv@divisor& (0+255),b
  5160  010178  EC66  F0AF         	call	___lwdiv	;wreg free
  5161  01017C  0100               	movlb	0	; () banked
  5162  01017E  517C               	movf	?___lwdiv& (0+255),w,b
  5163  010180  0F30               	addlw	48
  5164  010182  EC99  F0B3         	call	_I2C_LCD_Putc
  5165                           
  5166                           ;tasks.h: 244: I2C_LCD_Putc((port[print_port].current % 10) / 1 + '0');
  5167  010186  0100               	movlb	0	; () banked
  5168  010188  51FB               	movf	_print_port& (0+255),w,b
  5169  01018A  0D17               	mullw	23
  5170  01018C  0E06               	movlw	6
  5171  01018E  26F3               	addwf	prodl,f,c
  5172  010190  0E00               	movlw	0
  5173  010192  22F4               	addwfc	prodh,f,c
  5174  010194  0E2B               	movlw	low _port
  5175  010196  24F3               	addwf	prodl,w,c
  5176  010198  6ED9               	movwf	fsr2l,c
  5177  01019A  0E01               	movlw	high _port
  5178  01019C  20F4               	addwfc	prodh,w,c
  5179  01019E  6EDA               	movwf	fsr2h,c
  5180  0101A0  CFDE F060          	movff	postinc2,___lwmod@dividend
  5181  0101A4  CFDD F061          	movff	postdec2,___lwmod@dividend+1
  5182  0101A8  0E00               	movlw	0
  5183  0101AA  0100               	movlb	0	; () banked
  5184  0101AC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  5185  0101AE  0E0A               	movlw	10
  5186  0101B0  6F62               	movwf	___lwmod@divisor& (0+255),b
  5187  0101B2  EC21  F0B1         	call	___lwmod	;wreg free
  5188  0101B6  0100               	movlb	0	; () banked
  5189  0101B8  5160               	movf	?___lwmod& (0+255),w,b
  5190  0101BA  0F30               	addlw	48
  5191  0101BC  EC99  F0B3         	call	_I2C_LCD_Putc
  5192                           
  5193                           ;tasks.h: 245: I2C_LCD_Putc('A');
  5194  0101C0  0E41               	movlw	65
  5195  0101C2  EC99  F0B3         	call	_I2C_LCD_Putc
  5196                           
  5197                           ;tasks.h: 246: break;
  5198  0101C6  0012               	return	
  5199  0101C8                     l11150:
  5200                           
  5201                           ;tasks.h: 248: display_port();
  5202  0101C8  EC9A  F09F         	call	_display_port	;wreg free
  5203                           
  5204                           ;tasks.h: 249: I2C_LCD_SetCursor(0, 1);
  5205  0101CC  0E01               	movlw	1
  5206  0101CE  0100               	movlb	0	; () banked
  5207  0101D0  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5208  0101D2  0E00               	movlw	0
  5209  0101D4  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5210                           
  5211                           ;tasks.h: 250: uint8_t str[10];
  5212                           ;tasks.h: 251: my_utoa(str, port[print_port].integrated_current, 5);
  5213  0101D8  0E9C               	movlw	low display_LCD@str
  5214  0101DA  0100               	movlb	0	; () banked
  5215  0101DC  6F83               	movwf	my_utoa@str& (0+255),b
  5216  0101DE  0E00               	movlw	high display_LCD@str
  5217  0101E0  0100               	movlb	0	; () banked
  5218  0101E2  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  5219  0101E4  0100               	movlb	0	; () banked
  5220  0101E6  51FB               	movf	_print_port& (0+255),w,b
  5221  0101E8  0D17               	mullw	23
  5222  0101EA  0E08               	movlw	8
  5223  0101EC  26F3               	addwf	prodl,f,c
  5224  0101EE  0E00               	movlw	0
  5225  0101F0  22F4               	addwfc	prodh,f,c
  5226  0101F2  0E2B               	movlw	low _port
  5227  0101F4  24F3               	addwf	prodl,w,c
  5228  0101F6  6ED9               	movwf	fsr2l,c
  5229  0101F8  0E01               	movlw	high _port
  5230  0101FA  20F4               	addwfc	prodh,w,c
  5231  0101FC  6EDA               	movwf	fsr2h,c
  5232  0101FE  CFDE F085          	movff	postinc2,my_utoa@value
  5233  010202  CFDD F086          	movff	postdec2,my_utoa@value+1
  5234  010206  0E05               	movlw	5
  5235  010208  0100               	movlb	0	; () banked
  5236  01020A  6F87               	movwf	my_utoa@digits& (0+255),b
  5237  01020C  EC1C  F0AE         	call	_my_utoa	;wreg free
  5238                           
  5239                           ;tasks.h: 252: I2C_LCD_Puts(str);
  5240  010210  0E9C               	movlw	low display_LCD@str
  5241  010212  0100               	movlb	0	; () banked
  5242  010214  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5243  010216  0E00               	movlw	high display_LCD@str
  5244  010218  0100               	movlb	0	; () banked
  5245  01021A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5246  01021C  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5247                           
  5248                           ;tasks.h: 253: I2C_LCD_Puts("mAh");
  5249  010220  0ED9               	movlw	low STR_32
  5250  010222  0100               	movlb	0	; () banked
  5251  010224  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5252  010226  0EFF               	movlw	high STR_32
  5253  010228  0100               	movlb	0	; () banked
  5254  01022A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5255  01022C  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5256                           
  5257                           ;tasks.h: 254: break;
  5258  010230  0012               	return	
  5259  010232                     l11160:
  5260                           
  5261                           ;tasks.h: 256: display_port();
  5262  010232  EC9A  F09F         	call	_display_port	;wreg free
  5263                           
  5264                           ;tasks.h: 257: uint8_t str[10];
  5265                           ;tasks.h: 258: I2C_LCD_SetCursor(0, 1);
  5266  010236  0E01               	movlw	1
  5267  010238  0100               	movlb	0	; () banked
  5268  01023A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5269  01023C  0E00               	movlw	0
  5270  01023E  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5271                           
  5272                           ;tasks.h: 259: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  5273  010242  0E10               	movlw	16
  5274  010244  0100               	movlb	0	; () banked
  5275  010246  6F64               	movwf	___lldiv@divisor& (0+255),b
  5276  010248  0E0E               	movlw	14
  5277  01024A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5278  01024C  0E00               	movlw	0
  5279  01024E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5280  010250  0E00               	movlw	0
  5281  010252  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5282  010254  0100               	movlb	0	; () banked
  5283  010256  51FB               	movf	_print_port& (0+255),w,b
  5284  010258  0D17               	mullw	23
  5285  01025A  0E10               	movlw	16
  5286  01025C  26F3               	addwf	prodl,f,c
  5287  01025E  0E00               	movlw	0
  5288  010260  22F4               	addwfc	prodh,f,c
  5289  010262  0E2B               	movlw	low _port
  5290  010264  24F3               	addwf	prodl,w,c
  5291  010266  6ED9               	movwf	fsr2l,c
  5292  010268  0E01               	movlw	high _port
  5293  01026A  20F4               	addwfc	prodh,w,c
  5294  01026C  6EDA               	movwf	fsr2h,c
  5295  01026E  CFDE F060          	movff	postinc2,___lldiv@dividend
  5296  010272  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  5297  010276  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  5298  01027A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  5299  01027E  EC02  F0A8         	call	___lldiv	;wreg free
  5300  010282  C060  F0A6         	movff	?___lldiv,_display_LCD$5282
  5301  010286  C061  F0A7         	movff	?___lldiv+1,_display_LCD$5282+1
  5302  01028A  C062  F0A8         	movff	?___lldiv+2,_display_LCD$5282+2
  5303  01028E  C063  F0A9         	movff	?___lldiv+3,_display_LCD$5282+3
  5304                           
  5305                           ;tasks.h: 259: my_utoa(str, port[print_port].integrated_time / 3600 / 24, 2);
  5306  010292  0E9C               	movlw	low display_LCD@str
  5307  010294  0100               	movlb	0	; () banked
  5308  010296  6F83               	movwf	my_utoa@str& (0+255),b
  5309  010298  0E00               	movlw	high display_LCD@str
  5310  01029A  0100               	movlb	0	; () banked
  5311  01029C  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  5312  01029E  C0A6  F060         	movff	_display_LCD$5282,___lldiv@dividend
  5313  0102A2  C0A7  F061         	movff	_display_LCD$5282+1,___lldiv@dividend+1
  5314  0102A6  C0A8  F062         	movff	_display_LCD$5282+2,___lldiv@dividend+2
  5315  0102AA  C0A9  F063         	movff	_display_LCD$5282+3,___lldiv@dividend+3
  5316  0102AE  0E18               	movlw	24
  5317  0102B0  0100               	movlb	0	; () banked
  5318  0102B2  6F64               	movwf	___lldiv@divisor& (0+255),b
  5319  0102B4  0E00               	movlw	0
  5320  0102B6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5321  0102B8  0E00               	movlw	0
  5322  0102BA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5323  0102BC  0E00               	movlw	0
  5324  0102BE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5325  0102C0  EC02  F0A8         	call	___lldiv	;wreg free
  5326  0102C4  C060  F085         	movff	?___lldiv,my_utoa@value
  5327  0102C8  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
  5328  0102CC  0E02               	movlw	2
  5329  0102CE  0100               	movlb	0	; () banked
  5330  0102D0  6F87               	movwf	my_utoa@digits& (0+255),b
  5331  0102D2  EC1C  F0AE         	call	_my_utoa	;wreg free
  5332                           
  5333                           ;tasks.h: 260: I2C_LCD_Puts(str);
  5334  0102D6  0E9C               	movlw	low display_LCD@str
  5335  0102D8  0100               	movlb	0	; () banked
  5336  0102DA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5337  0102DC  0E00               	movlw	high display_LCD@str
  5338  0102DE  0100               	movlb	0	; () banked
  5339  0102E0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5340  0102E2  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5341                           
  5342                           ;tasks.h: 261: I2C_LCD_Puts("d ");
  5343  0102E6  0EE7               	movlw	low STR_33
  5344  0102E8  0100               	movlb	0	; () banked
  5345  0102EA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5346  0102EC  0EFF               	movlw	high STR_33
  5347  0102EE  0100               	movlb	0	; () banked
  5348  0102F0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5349  0102F2  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5350                           
  5351                           ;tasks.h: 262: my_utoa(str, (port[print_port].integrated_time / 3600) % 24, 2);
  5352  0102F6  0E9C               	movlw	low display_LCD@str
  5353  0102F8  0100               	movlb	0	; () banked
  5354  0102FA  6F83               	movwf	my_utoa@str& (0+255),b
  5355  0102FC  0E00               	movlw	high display_LCD@str
  5356  0102FE  0100               	movlb	0	; () banked
  5357  010300  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  5358  010302  0E10               	movlw	16
  5359  010304  0100               	movlb	0	; () banked
  5360  010306  6F64               	movwf	___lldiv@divisor& (0+255),b
  5361  010308  0E0E               	movlw	14
  5362  01030A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5363  01030C  0E00               	movlw	0
  5364  01030E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5365  010310  0E00               	movlw	0
  5366  010312  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5367  010314  0100               	movlb	0	; () banked
  5368  010316  51FB               	movf	_print_port& (0+255),w,b
  5369  010318  0D17               	mullw	23
  5370  01031A  0E10               	movlw	16
  5371  01031C  26F3               	addwf	prodl,f,c
  5372  01031E  0E00               	movlw	0
  5373  010320  22F4               	addwfc	prodh,f,c
  5374  010322  0E2B               	movlw	low _port
  5375  010324  24F3               	addwf	prodl,w,c
  5376  010326  6ED9               	movwf	fsr2l,c
  5377  010328  0E01               	movlw	high _port
  5378  01032A  20F4               	addwfc	prodh,w,c
  5379  01032C  6EDA               	movwf	fsr2h,c
  5380  01032E  CFDE F060          	movff	postinc2,___lldiv@dividend
  5381  010332  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  5382  010336  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  5383  01033A  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  5384  01033E  EC02  F0A8         	call	___lldiv	;wreg free
  5385  010342  C060  F06D         	movff	?___lldiv,___llmod@dividend
  5386  010346  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  5387  01034A  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  5388  01034E  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  5389  010352  0E18               	movlw	24
  5390  010354  0100               	movlb	0	; () banked
  5391  010356  6F71               	movwf	___llmod@divisor& (0+255),b
  5392  010358  0E00               	movlw	0
  5393  01035A  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  5394  01035C  0E00               	movlw	0
  5395  01035E  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  5396  010360  0E00               	movlw	0
  5397  010362  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  5398  010364  EC17  F0AC         	call	___llmod	;wreg free
  5399  010368  C06D  F085         	movff	?___llmod,my_utoa@value
  5400  01036C  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  5401  010370  0E02               	movlw	2
  5402  010372  0100               	movlb	0	; () banked
  5403  010374  6F87               	movwf	my_utoa@digits& (0+255),b
  5404  010376  EC1C  F0AE         	call	_my_utoa	;wreg free
  5405                           
  5406                           ;tasks.h: 263: I2C_LCD_Puts(str);
  5407  01037A  0E9C               	movlw	low display_LCD@str
  5408  01037C  0100               	movlb	0	; () banked
  5409  01037E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5410  010380  0E00               	movlw	high display_LCD@str
  5411  010382  0100               	movlb	0	; () banked
  5412  010384  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5413  010386  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5414                           
  5415                           ;tasks.h: 264: I2C_LCD_Puts("h ");
  5416  01038A  0EEA               	movlw	low STR_34
  5417  01038C  0100               	movlb	0	; () banked
  5418  01038E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5419  010390  0EFF               	movlw	high STR_34
  5420  010392  0100               	movlb	0	; () banked
  5421  010394  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5422  010396  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5423                           
  5424                           ;tasks.h: 265: my_utoa(str, (port[print_port].integrated_time / 60) % 60, 2);
  5425  01039A  0E9C               	movlw	low display_LCD@str
  5426  01039C  0100               	movlb	0	; () banked
  5427  01039E  6F83               	movwf	my_utoa@str& (0+255),b
  5428  0103A0  0E00               	movlw	high display_LCD@str
  5429  0103A2  0100               	movlb	0	; () banked
  5430  0103A4  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  5431  0103A6  0E3C               	movlw	60
  5432  0103A8  0100               	movlb	0	; () banked
  5433  0103AA  6F64               	movwf	___lldiv@divisor& (0+255),b
  5434  0103AC  0E00               	movlw	0
  5435  0103AE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  5436  0103B0  0E00               	movlw	0
  5437  0103B2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  5438  0103B4  0E00               	movlw	0
  5439  0103B6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  5440  0103B8  0100               	movlb	0	; () banked
  5441  0103BA  51FB               	movf	_print_port& (0+255),w,b
  5442  0103BC  0D17               	mullw	23
  5443  0103BE  0E10               	movlw	16
  5444  0103C0  26F3               	addwf	prodl,f,c
  5445  0103C2  0E00               	movlw	0
  5446  0103C4  22F4               	addwfc	prodh,f,c
  5447  0103C6  0E2B               	movlw	low _port
  5448  0103C8  24F3               	addwf	prodl,w,c
  5449  0103CA  6ED9               	movwf	fsr2l,c
  5450  0103CC  0E01               	movlw	high _port
  5451  0103CE  20F4               	addwfc	prodh,w,c
  5452  0103D0  6EDA               	movwf	fsr2h,c
  5453  0103D2  CFDE F060          	movff	postinc2,___lldiv@dividend
  5454  0103D6  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  5455  0103DA  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  5456  0103DE  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  5457  0103E2  EC02  F0A8         	call	___lldiv	;wreg free
  5458  0103E6  C060  F06D         	movff	?___lldiv,___llmod@dividend
  5459  0103EA  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  5460  0103EE  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  5461  0103F2  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  5462  0103F6  0E3C               	movlw	60
  5463  0103F8  0100               	movlb	0	; () banked
  5464  0103FA  6F71               	movwf	___llmod@divisor& (0+255),b
  5465  0103FC  0E00               	movlw	0
  5466  0103FE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  5467  010400  0E00               	movlw	0
  5468  010402  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  5469  010404  0E00               	movlw	0
  5470  010406  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  5471  010408  EC17  F0AC         	call	___llmod	;wreg free
  5472  01040C  C06D  F085         	movff	?___llmod,my_utoa@value
  5473  010410  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  5474  010414  0E02               	movlw	2
  5475  010416  0100               	movlb	0	; () banked
  5476  010418  6F87               	movwf	my_utoa@digits& (0+255),b
  5477  01041A  EC1C  F0AE         	call	_my_utoa	;wreg free
  5478                           
  5479                           ;tasks.h: 266: I2C_LCD_Puts(str);
  5480  01041E  0E9C               	movlw	low display_LCD@str
  5481  010420  0100               	movlb	0	; () banked
  5482  010422  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5483  010424  0E00               	movlw	high display_LCD@str
  5484  010426  0100               	movlb	0	; () banked
  5485  010428  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5486  01042A  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5487                           
  5488                           ;tasks.h: 267: I2C_LCD_Puts("m ");
  5489  01042E  0EED               	movlw	low STR_35
  5490  010430  0100               	movlb	0	; () banked
  5491  010432  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5492  010434  0EFF               	movlw	high STR_35
  5493  010436  0100               	movlb	0	; () banked
  5494  010438  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5495  01043A  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5496                           
  5497                           ;tasks.h: 268: my_utoa(str, port[print_port].integrated_time % 60, 2);
  5498  01043E  0E9C               	movlw	low display_LCD@str
  5499  010440  0100               	movlb	0	; () banked
  5500  010442  6F83               	movwf	my_utoa@str& (0+255),b
  5501  010444  0E00               	movlw	high display_LCD@str
  5502  010446  0100               	movlb	0	; () banked
  5503  010448  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  5504  01044A  0100               	movlb	0	; () banked
  5505  01044C  51FB               	movf	_print_port& (0+255),w,b
  5506  01044E  0D17               	mullw	23
  5507  010450  0E10               	movlw	16
  5508  010452  26F3               	addwf	prodl,f,c
  5509  010454  0E00               	movlw	0
  5510  010456  22F4               	addwfc	prodh,f,c
  5511  010458  0E2B               	movlw	low _port
  5512  01045A  24F3               	addwf	prodl,w,c
  5513  01045C  6ED9               	movwf	fsr2l,c
  5514  01045E  0E01               	movlw	high _port
  5515  010460  20F4               	addwfc	prodh,w,c
  5516  010462  6EDA               	movwf	fsr2h,c
  5517  010464  CFDE F06D          	movff	postinc2,___llmod@dividend
  5518  010468  CFDE F06E          	movff	postinc2,___llmod@dividend+1
  5519  01046C  CFDE F06F          	movff	postinc2,___llmod@dividend+2
  5520  010470  CFDE F070          	movff	postinc2,___llmod@dividend+3
  5521  010474  0E3C               	movlw	60
  5522  010476  0100               	movlb	0	; () banked
  5523  010478  6F71               	movwf	___llmod@divisor& (0+255),b
  5524  01047A  0E00               	movlw	0
  5525  01047C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  5526  01047E  0E00               	movlw	0
  5527  010480  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  5528  010482  0E00               	movlw	0
  5529  010484  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  5530  010486  EC17  F0AC         	call	___llmod	;wreg free
  5531  01048A  C06D  F085         	movff	?___llmod,my_utoa@value
  5532  01048E  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
  5533  010492  0E02               	movlw	2
  5534  010494  0100               	movlb	0	; () banked
  5535  010496  6F87               	movwf	my_utoa@digits& (0+255),b
  5536  010498  EC1C  F0AE         	call	_my_utoa	;wreg free
  5537                           
  5538                           ;tasks.h: 269: I2C_LCD_Puts(str);
  5539  01049C  0E9C               	movlw	low display_LCD@str
  5540  01049E  0100               	movlb	0	; () banked
  5541  0104A0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5542  0104A2  0E00               	movlw	high display_LCD@str
  5543  0104A4  0100               	movlb	0	; () banked
  5544  0104A6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5545  0104A8  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5546                           
  5547                           ;tasks.h: 270: I2C_LCD_Puts("s");
  5548  0104AC  0E62               	movlw	low (STR_58+7)
  5549  0104AE  0100               	movlb	0	; () banked
  5550  0104B0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5551  0104B2  0EFF               	movlw	high (STR_58+7)
  5552  0104B4  0100               	movlb	0	; () banked
  5553  0104B6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5554  0104B8  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5555                           
  5556                           ;tasks.h: 271: break;
  5557  0104BC  0012               	return	
  5558  0104BE                     l11190:
  5559                           
  5560                           ;tasks.h: 273: display_port();
  5561  0104BE  EC9A  F09F         	call	_display_port	;wreg free
  5562                           
  5563                           ;tasks.h: 274: I2C_LCD_SetCursor(0, 1);
  5564  0104C2  0E01               	movlw	1
  5565  0104C4  0100               	movlb	0	; () banked
  5566  0104C6  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5567  0104C8  0E00               	movlw	0
  5568  0104CA  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5569                           
  5570                           ;tasks.h: 275: I2C_LCD_Puts("Integrat Reset?");
  5571  0104CE  0E5F               	movlw	low STR_37
  5572  0104D0  0100               	movlb	0	; () banked
  5573  0104D2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5574  0104D4  0EFE               	movlw	high STR_37
  5575  0104D6  0100               	movlb	0	; () banked
  5576  0104D8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5577  0104DA  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5578                           
  5579                           ;tasks.h: 276: break;
  5580  0104DE  0012               	return	
  5581  0104E0                     l11196:
  5582                           
  5583                           ;tasks.h: 278: display_port();
  5584  0104E0  EC9A  F09F         	call	_display_port	;wreg free
  5585                           
  5586                           ;tasks.h: 279: I2C_LCD_SetCursor(0, 1);
  5587  0104E4  0E01               	movlw	1
  5588  0104E6  0100               	movlb	0	; () banked
  5589  0104E8  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5590  0104EA  0E00               	movlw	0
  5591  0104EC  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5592                           
  5593                           ;tasks.h: 280: I2C_LCD_Puts("Integrat Reseted");
  5594  0104F0  0E4E               	movlw	low STR_38
  5595  0104F2  0100               	movlb	0	; () banked
  5596  0104F4  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5597  0104F6  0EFE               	movlw	high STR_38
  5598  0104F8  0100               	movlb	0	; () banked
  5599  0104FA  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5600  0104FC  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5601                           
  5602                           ;tasks.h: 281: break;
  5603  010500  0012               	return	
  5604  010502                     l11202:
  5605                           
  5606                           ;tasks.h: 283: display_port();
  5607  010502  EC9A  F09F         	call	_display_port	;wreg free
  5608                           
  5609                           ;tasks.h: 284: I2C_LCD_SetCursor(0, 1);
  5610  010506  0E01               	movlw	1
  5611  010508  0100               	movlb	0	; () banked
  5612  01050A  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5613  01050C  0E00               	movlw	0
  5614  01050E  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5615                           
  5616                           ;tasks.h: 285: I2C_LCD_Puts("Toggle AutoStop?");
  5617  010512  0E3D               	movlw	low STR_39
  5618  010514  0100               	movlb	0	; () banked
  5619  010516  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5620  010518  0EFE               	movlw	high STR_39
  5621  01051A  0100               	movlb	0	; () banked
  5622  01051C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5623  01051E  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5624                           
  5625                           ;tasks.h: 286: break;
  5626  010522  0012               	return	
  5627  010524                     l11208:
  5628                           
  5629                           ;tasks.h: 288: display_port();
  5630  010524  EC9A  F09F         	call	_display_port	;wreg free
  5631                           
  5632                           ;tasks.h: 289: I2C_LCD_SetCursor(0, 1);
  5633  010528  0E01               	movlw	1
  5634  01052A  0100               	movlb	0	; () banked
  5635  01052C  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5636  01052E  0E00               	movlw	0
  5637  010530  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5638                           
  5639                           ;tasks.h: 290: I2C_LCD_Puts("Always Charging");
  5640  010534  0E7F               	movlw	low STR_40
  5641  010536  0100               	movlb	0	; () banked
  5642  010538  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5643  01053A  0EFE               	movlw	high STR_40
  5644  01053C  0100               	movlb	0	; () banked
  5645  01053E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5646  010540  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5647                           
  5648                           ;tasks.h: 291: break;
  5649  010544  0012               	return	
  5650  010546                     l11214:
  5651                           
  5652                           ;tasks.h: 293: display_port();
  5653  010546  EC9A  F09F         	call	_display_port	;wreg free
  5654                           
  5655                           ;tasks.h: 294: I2C_LCD_SetCursor(0, 1);
  5656  01054A  0E01               	movlw	1
  5657  01054C  0100               	movlb	0	; () banked
  5658  01054E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5659  010550  0E00               	movlw	0
  5660  010552  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5661                           
  5662                           ;tasks.h: 295: I2C_LCD_Puts("Auto Stop ON");
  5663  010556  0EB9               	movlw	low STR_41
  5664  010558  0100               	movlb	0	; () banked
  5665  01055A  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5666  01055C  0EFE               	movlw	high STR_41
  5667  01055E  0100               	movlb	0	; () banked
  5668  010560  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5669  010562  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5670                           
  5671                           ;tasks.h: 296: break;
  5672  010566  0012               	return	
  5673  010568                     l11220:
  5674                           
  5675                           ;tasks.h: 298: display_port();
  5676  010568  EC9A  F09F         	call	_display_port	;wreg free
  5677                           
  5678                           ;tasks.h: 299: I2C_LCD_SetCursor(0, 1);
  5679  01056C  0E01               	movlw	1
  5680  01056E  0100               	movlb	0	; () banked
  5681  010570  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5682  010572  0E00               	movlw	0
  5683  010574  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5684                           
  5685                           ;tasks.h: 300: I2C_LCD_Puts("Toggle LED?");
  5686  010578  0EC6               	movlw	low STR_42
  5687  01057A  0100               	movlb	0	; () banked
  5688  01057C  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5689  01057E  0EFE               	movlw	high STR_42
  5690  010580  0100               	movlb	0	; () banked
  5691  010582  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5692  010584  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5693                           
  5694                           ;tasks.h: 301: break;
  5695  010588  0012               	return	
  5696  01058A                     l11226:
  5697                           
  5698                           ;tasks.h: 303: display_port();
  5699  01058A  EC9A  F09F         	call	_display_port	;wreg free
  5700                           
  5701                           ;tasks.h: 304: I2C_LCD_SetCursor(0, 1);
  5702  01058E  0E01               	movlw	1
  5703  010590  0100               	movlb	0	; () banked
  5704  010592  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5705  010594  0E00               	movlw	0
  5706  010596  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5707                           
  5708                           ;tasks.h: 305: I2C_LCD_Puts("LED ON");
  5709  01059A  0E83               	movlw	low STR_43
  5710  01059C  0100               	movlb	0	; () banked
  5711  01059E  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5712  0105A0  0EFF               	movlw	high STR_43
  5713  0105A2  0100               	movlb	0	; () banked
  5714  0105A4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5715  0105A6  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5716                           
  5717                           ;tasks.h: 306: break;
  5718  0105AA  0012               	return	
  5719  0105AC                     l11232:
  5720                           
  5721                           ;tasks.h: 308: display_port();
  5722  0105AC  EC9A  F09F         	call	_display_port	;wreg free
  5723                           
  5724                           ;tasks.h: 309: I2C_LCD_SetCursor(0, 1);
  5725  0105B0  0E01               	movlw	1
  5726  0105B2  0100               	movlb	0	; () banked
  5727  0105B4  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5728  0105B6  0E00               	movlw	0
  5729  0105B8  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5730                           
  5731                           ;tasks.h: 310: I2C_LCD_Puts("LED OFF");
  5732  0105BC  0E6C               	movlw	low STR_44
  5733  0105BE  0100               	movlb	0	; () banked
  5734  0105C0  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5735  0105C2  0EFF               	movlw	high STR_44
  5736  0105C4  0100               	movlb	0	; () banked
  5737  0105C6  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5738  0105C8  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5739                           
  5740                           ;tasks.h: 311: break;
  5741  0105CC  0012               	return	
  5742  0105CE                     l11238:
  5743                           
  5744                           ;tasks.h: 313: display_port();
  5745  0105CE  EC9A  F09F         	call	_display_port	;wreg free
  5746                           
  5747                           ;tasks.h: 314: I2C_LCD_SetCursor(0, 1);
  5748  0105D2  0E01               	movlw	1
  5749  0105D4  0100               	movlb	0	; () banked
  5750  0105D6  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5751  0105D8  0E00               	movlw	0
  5752  0105DA  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5753                           
  5754                           ;tasks.h: 315: I2C_LCD_Puts("Nothing done.");
  5755  0105DE  0E9E               	movlw	low STR_45
  5756  0105E0  0100               	movlb	0	; () banked
  5757  0105E2  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5758  0105E4  0EFE               	movlw	high STR_45
  5759  0105E6  0100               	movlb	0	; () banked
  5760  0105E8  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5761  0105EA  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5762                           
  5763                           ;tasks.h: 317: }
  5764                           
  5765                           ;tasks.h: 316: break;
  5766  0105EE  0012               	return	
  5767  0105F0                     l11246:
  5768  0105F0  0100               	movlb	0	; () banked
  5769  0105F2  51FA               	movf	_print_content& (0+255),w,b
  5770                           
  5771                           ; Switch size 1, requested type "space"
  5772                           ; Number of cases is 15, Range of values is 0 to 14
  5773                           ; switch strategies available:
  5774                           ; Name         Instructions Cycles
  5775                           ; simple_byte           46    24 (average)
  5776                           ;	Chosen strategy is simple_byte
  5777  0105F4  0A00               	xorlw	0	; case 0
  5778  0105F6  B4D8               	btfsc	status,2,c
  5779  0105F8  D506               	goto	l11120
  5780  0105FA  0A01               	xorlw	1	; case 1
  5781  0105FC  B4D8               	btfsc	status,2,c
  5782  0105FE  D520               	goto	l11126
  5783  010600  0A03               	xorlw	3	; case 2
  5784  010602  B4D8               	btfsc	status,2,c
  5785  010604  D52C               	goto	l11128
  5786  010606  0A01               	xorlw	1	; case 3
  5787  010608  B4D8               	btfsc	status,2,c
  5788  01060A  D53A               	goto	l11134
  5789  01060C  0A07               	xorlw	7	; case 4
  5790  01060E  B4D8               	btfsc	status,2,c
  5791  010610  D5DB               	goto	l11150
  5792  010612  0A01               	xorlw	1	; case 5
  5793  010614  B4D8               	btfsc	status,2,c
  5794  010616  D60D               	goto	l11160
  5795  010618  0A03               	xorlw	3	; case 6
  5796  01061A  B4D8               	btfsc	status,2,c
  5797  01061C  D750               	goto	l11190
  5798  01061E  0A01               	xorlw	1	; case 7
  5799  010620  B4D8               	btfsc	status,2,c
  5800  010622  D75E               	goto	l11196
  5801  010624  0A0F               	xorlw	15	; case 8
  5802  010626  B4D8               	btfsc	status,2,c
  5803  010628  D76C               	goto	l11202
  5804  01062A  0A01               	xorlw	1	; case 9
  5805  01062C  B4D8               	btfsc	status,2,c
  5806  01062E  D77A               	goto	l11208
  5807  010630  0A03               	xorlw	3	; case 10
  5808  010632  B4D8               	btfsc	status,2,c
  5809  010634  D788               	goto	l11214
  5810  010636  0A01               	xorlw	1	; case 11
  5811  010638  B4D8               	btfsc	status,2,c
  5812  01063A  D796               	goto	l11220
  5813  01063C  0A07               	xorlw	7	; case 12
  5814  01063E  B4D8               	btfsc	status,2,c
  5815  010640  D7A4               	goto	l11226
  5816  010642  0A01               	xorlw	1	; case 13
  5817  010644  B4D8               	btfsc	status,2,c
  5818  010646  D7B2               	goto	l11232
  5819  010648  0A03               	xorlw	3	; case 14
  5820  01064A  A4D8               	btfss	status,2,c
  5821  01064C  0012               	return	
  5822  01064E  D7BF               	goto	l11238
  5823  010650                     __end_of_display_LCD:
  5824                           	opt stack 0
  5825                           tblptru	equ	0xFF8
  5826                           tblptrh	equ	0xFF7
  5827                           tblptrl	equ	0xFF6
  5828                           tablat	equ	0xFF5
  5829                           prodh	equ	0xFF4
  5830                           prodl	equ	0xFF3
  5831                           intcon	equ	0xFF2
  5832                           postinc0	equ	0xFEE
  5833                           wreg	equ	0xFE8
  5834                           postdec1	equ	0xFE5
  5835                           fsr1h	equ	0xFE2
  5836                           fsr1l	equ	0xFE1
  5837                           indf2	equ	0xFDF
  5838                           postinc2	equ	0xFDE
  5839                           postdec2	equ	0xFDD
  5840                           fsr2h	equ	0xFDA
  5841                           fsr2l	equ	0xFD9
  5842                           status	equ	0xFD8
  5843                           
  5844 ;; *************** function _display_time_1602 *****************
  5845 ;; Defined at:
  5846 ;;		line 278 in file "../My_header\My_RTCC.h"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  ct              2   55[BANK0 ] PTR struct .
  5849 ;;		 -> caltime_now(7), 
  5850 ;;  ep              2   57[BANK0 ] PTR unsigned long 
  5851 ;;		 -> epoch_now(4), 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;		None               void
  5856 ;; Registers used:
  5857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;Total ram usage:        5 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:   15
  5870 ;; This function calls:
  5871 ;;		_I2C_LCD_Putc
  5872 ;;		_I2C_LCD_Puts
  5873 ;;		_I2C_LCD_SetCursor
  5874 ;;		_RTCC_from_RTCC
  5875 ;;		_display_dec
  5876 ;; This function is called by:
  5877 ;;		_display_LCD
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text7
  5882  0134CA                     __ptext7:
  5883                           	opt stack 0
  5884  0134CA                     _display_time_1602:
  5885                           	opt stack 13
  5886                           
  5887                           ;My_header\My_RTCC.h: 279: RTCC_from_RTCC(ct, ep);
  5888                           
  5889                           ;incstack = 0
  5890  0134CA  C097  F088         	movff	display_time_1602@ct,RTCC_from_RTCC@ct
  5891  0134CE  C098  F089         	movff	display_time_1602@ct+1,RTCC_from_RTCC@ct+1
  5892  0134D2  C099  F08A         	movff	display_time_1602@ep,RTCC_from_RTCC@ep
  5893  0134D6  C09A  F08B         	movff	display_time_1602@ep+1,RTCC_from_RTCC@ep+1
  5894  0134DA  ECBC  F0B5         	call	_RTCC_from_RTCC	;wreg free
  5895                           
  5896                           ;My_header\My_RTCC.h: 281: I2C_LCD_SetCursor(0, 0);
  5897  0134DE  0E00               	movlw	0
  5898  0134E0  0100               	movlb	0	; () banked
  5899  0134E2  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  5900  0134E4  0E00               	movlw	0
  5901  0134E6  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  5902                           
  5903                           ;My_header\My_RTCC.h: 282: display_dec(20, edit_flag.flag.YY);
  5904  0134EA  0E00               	movlw	0
  5905  0134EC  BBF8               	btfsc	_edit_flag& (0+255),5,b
  5906  0134EE  0E01               	movlw	1
  5907  0134F0  0100               	movlb	0	; () banked
  5908  0134F2  6F8B               	movwf	display_dec@edit& (0+255),b
  5909  0134F4  0E14               	movlw	20
  5910  0134F6  ECAE  F0B1         	call	_display_dec
  5911                           
  5912                           ;My_header\My_RTCC.h: 283: display_dec(ct->YY, edit_flag.flag.YY);
  5913  0134FA  0E00               	movlw	0
  5914  0134FC  BBF8               	btfsc	_edit_flag& (0+255),5,b
  5915  0134FE  0E01               	movlw	1
  5916  013500  0100               	movlb	0	; () banked
  5917  013502  6F8B               	movwf	display_dec@edit& (0+255),b
  5918  013504  0100               	movlb	0	; () banked
  5919  013506  EE20 F006          	lfsr	2,6
  5920  01350A  5197               	movf	display_time_1602@ct& (0+255),w,b
  5921  01350C  26D9               	addwf	fsr2l,f,c
  5922  01350E  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  5923  013510  22DA               	addwfc	fsr2h,f,c
  5924  013512  50DF               	movf	indf2,w,c
  5925  013514  ECAE  F0B1         	call	_display_dec
  5926                           
  5927                           ;My_header\My_RTCC.h: 284: I2C_LCD_Putc('/');
  5928  013518  0E2F               	movlw	47
  5929  01351A  EC99  F0B3         	call	_I2C_LCD_Putc
  5930                           
  5931                           ;My_header\My_RTCC.h: 285: display_dec(ct->MM, edit_flag.flag.MM);
  5932  01351E  0E00               	movlw	0
  5933  013520  B9F8               	btfsc	_edit_flag& (0+255),4,b
  5934  013522  0E01               	movlw	1
  5935  013524  0100               	movlb	0	; () banked
  5936  013526  6F8B               	movwf	display_dec@edit& (0+255),b
  5937  013528  0100               	movlb	0	; () banked
  5938  01352A  EE20 F005          	lfsr	2,5
  5939  01352E  5197               	movf	display_time_1602@ct& (0+255),w,b
  5940  013530  26D9               	addwf	fsr2l,f,c
  5941  013532  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  5942  013534  22DA               	addwfc	fsr2h,f,c
  5943  013536  50DF               	movf	indf2,w,c
  5944  013538  ECAE  F0B1         	call	_display_dec
  5945                           
  5946                           ;My_header\My_RTCC.h: 286: I2C_LCD_Putc('/');
  5947  01353C  0E2F               	movlw	47
  5948  01353E  EC99  F0B3         	call	_I2C_LCD_Putc
  5949                           
  5950                           ;My_header\My_RTCC.h: 287: display_dec(ct->DD, edit_flag.flag.DD);
  5951  013542  0E00               	movlw	0
  5952  013544  B7F8               	btfsc	_edit_flag& (0+255),3,b
  5953  013546  0E01               	movlw	1
  5954  013548  0100               	movlb	0	; () banked
  5955  01354A  6F8B               	movwf	display_dec@edit& (0+255),b
  5956  01354C  0100               	movlb	0	; () banked
  5957  01354E  EE20 F004          	lfsr	2,4
  5958  013552  5197               	movf	display_time_1602@ct& (0+255),w,b
  5959  013554  26D9               	addwf	fsr2l,f,c
  5960  013556  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  5961  013558  22DA               	addwfc	fsr2h,f,c
  5962  01355A  50DF               	movf	indf2,w,c
  5963  01355C  ECAE  F0B1         	call	_display_dec
  5964                           
  5965                           ;My_header\My_RTCC.h: 288: I2C_LCD_Putc('(');
  5966  013560  0E28               	movlw	40
  5967  013562  EC99  F0B3         	call	_I2C_LCD_Putc
  5968                           
  5969                           ;My_header\My_RTCC.h: 289: I2C_LCD_Puts(weekday_3char[ct->EE]);
  5970  013566  0100               	movlb	0	; () banked
  5971  013568  EE20 F003          	lfsr	2,3
  5972  01356C  5197               	movf	display_time_1602@ct& (0+255),w,b
  5973  01356E  26D9               	addwf	fsr2l,f,c
  5974  013570  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  5975  013572  22DA               	addwfc	fsr2h,f,c
  5976  013574  50DF               	movf	indf2,w,c
  5977  013576  0100               	movlb	0	; () banked
  5978  013578  6F9B               	movwf	??_display_time_1602& (0+255),b
  5979  01357A  0100               	movlb	0	; () banked
  5980  01357C  519B               	movf	??_display_time_1602& (0+255),w,b
  5981  01357E  0D04               	mullw	4
  5982  013580  0E8A               	movlw	low _weekday_3char
  5983  013582  24F3               	addwf	prodl,w,c
  5984  013584  0100               	movlb	0	; () banked
  5985  013586  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  5986  013588  0EFB               	movlw	high _weekday_3char
  5987  01358A  20F4               	addwfc	prodh,w,c
  5988  01358C  0100               	movlb	0	; () banked
  5989  01358E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  5990  013590  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  5991                           
  5992                           ;My_header\My_RTCC.h: 290: I2C_LCD_Putc(')');
  5993  013594  0E29               	movlw	41
  5994  013596  EC99  F0B3         	call	_I2C_LCD_Putc
  5995                           
  5996                           ;My_header\My_RTCC.h: 291: I2C_LCD_SetCursor(8, 1);
  5997  01359A  0E01               	movlw	1
  5998  01359C  0100               	movlb	0	; () banked
  5999  01359E  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6000  0135A0  0E08               	movlw	8
  6001  0135A2  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  6002                           
  6003                           ;My_header\My_RTCC.h: 292: display_dec(ct->hh, edit_flag.flag.hh);
  6004  0135A6  0E00               	movlw	0
  6005  0135A8  B5F8               	btfsc	_edit_flag& (0+255),2,b
  6006  0135AA  0E01               	movlw	1
  6007  0135AC  0100               	movlb	0	; () banked
  6008  0135AE  6F8B               	movwf	display_dec@edit& (0+255),b
  6009  0135B0  0100               	movlb	0	; () banked
  6010  0135B2  EE20 F002          	lfsr	2,2
  6011  0135B6  5197               	movf	display_time_1602@ct& (0+255),w,b
  6012  0135B8  26D9               	addwf	fsr2l,f,c
  6013  0135BA  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  6014  0135BC  22DA               	addwfc	fsr2h,f,c
  6015  0135BE  50DF               	movf	indf2,w,c
  6016  0135C0  ECAE  F0B1         	call	_display_dec
  6017                           
  6018                           ;My_header\My_RTCC.h: 293: if (colon) I2C_LCD_Putc(':');
  6019  0135C4  5046               	movf	_colon,w,c
  6020  0135C6  B4D8               	btfsc	status,2,c
  6021  0135C8  D004               	goto	l10308
  6022  0135CA  0E3A               	movlw	58
  6023  0135CC  EC99  F0B3         	call	_I2C_LCD_Putc
  6024  0135D0  D003               	goto	l10310
  6025  0135D2                     l10308:
  6026                           
  6027                           ;My_header\My_RTCC.h: 294: else I2C_LCD_Putc(' ');
  6028  0135D2  0E20               	movlw	32
  6029  0135D4  EC99  F0B3         	call	_I2C_LCD_Putc
  6030  0135D8                     l10310:
  6031                           
  6032                           ;My_header\My_RTCC.h: 295: display_dec(ct->mm, edit_flag.flag.mm);
  6033  0135D8  0E00               	movlw	0
  6034  0135DA  B3F8               	btfsc	_edit_flag& (0+255),1,b
  6035  0135DC  0E01               	movlw	1
  6036  0135DE  0100               	movlb	0	; () banked
  6037  0135E0  6F8B               	movwf	display_dec@edit& (0+255),b
  6038  0135E2  0100               	movlb	0	; () banked
  6039  0135E4  EE20 F001          	lfsr	2,1
  6040  0135E8  5197               	movf	display_time_1602@ct& (0+255),w,b
  6041  0135EA  26D9               	addwf	fsr2l,f,c
  6042  0135EC  5198               	movf	(display_time_1602@ct+1)& (0+255),w,b
  6043  0135EE  22DA               	addwfc	fsr2h,f,c
  6044  0135F0  50DF               	movf	indf2,w,c
  6045  0135F2  ECAE  F0B1         	call	_display_dec
  6046                           
  6047                           ;My_header\My_RTCC.h: 296: I2C_LCD_Putc('-');
  6048  0135F6  0E2D               	movlw	45
  6049  0135F8  EC99  F0B3         	call	_I2C_LCD_Putc
  6050                           
  6051                           ;My_header\My_RTCC.h: 297: display_dec(ct->ss, edit_flag.flag.ss);
  6052  0135FC  0E00               	movlw	0
  6053  0135FE  B1F8               	btfsc	_edit_flag& (0+255),0,b
  6054  013600  0E01               	movlw	1
  6055  013602  0100               	movlb	0	; () banked
  6056  013604  6F8B               	movwf	display_dec@edit& (0+255),b
  6057  013606  C097  FFD9         	movff	display_time_1602@ct,fsr2l
  6058  01360A  C098  FFDA         	movff	display_time_1602@ct+1,fsr2h
  6059  01360E  50DF               	movf	indf2,w,c
  6060  013610  ECAE  F0B1         	call	_display_dec
  6061  013614  0012               	return		;funcret
  6062  013616                     __end_of_display_time_1602:
  6063                           	opt stack 0
  6064                           tblptru	equ	0xFF8
  6065                           tblptrh	equ	0xFF7
  6066                           tblptrl	equ	0xFF6
  6067                           tablat	equ	0xFF5
  6068                           prodh	equ	0xFF4
  6069                           prodl	equ	0xFF3
  6070                           intcon	equ	0xFF2
  6071                           postinc0	equ	0xFEE
  6072                           wreg	equ	0xFE8
  6073                           postdec1	equ	0xFE5
  6074                           fsr1h	equ	0xFE2
  6075                           fsr1l	equ	0xFE1
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function _display_dec *****************
  6084 ;; Defined at:
  6085 ;;		line 251 in file "../My_header\My_RTCC.h"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  dec             1    wreg     unsigned char 
  6088 ;;  edit            1   43[BANK0 ] unsigned char 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  dec             1   54[BANK0 ] unsigned char 
  6091 ;;  str            10   44[BANK0 ] unsigned char [10]
  6092 ;; Return value:  Size  Location     Type
  6093 ;;		None               void
  6094 ;; Registers used:
  6095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6101 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;Total ram usage:       12 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:   14
  6108 ;; This function calls:
  6109 ;;		_I2C_LCD_Puts
  6110 ;;		_my_utoa
  6111 ;; This function is called by:
  6112 ;;		_display_time_1602
  6113 ;;		_display_time_0802
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text8
  6118  01635C                     __ptext8:
  6119                           	opt stack 0
  6120  01635C                     _display_dec:
  6121                           	opt stack 13
  6122                           
  6123                           ;incstack = 0
  6124                           ;display_dec@dec stored from wreg
  6125  01635C  0100               	movlb	0	; () banked
  6126  01635E  6F96               	movwf	display_dec@dec& (0+255),b
  6127                           
  6128                           ;My_header\My_RTCC.h: 252: char str[10];
  6129                           ;My_header\My_RTCC.h: 253: my_utoa(str, dec, 2);
  6130  016360  0E8C               	movlw	low display_dec@str
  6131  016362  0100               	movlb	0	; () banked
  6132  016364  6F83               	movwf	my_utoa@str& (0+255),b
  6133  016366  0E00               	movlw	high display_dec@str
  6134  016368  0100               	movlb	0	; () banked
  6135  01636A  6F84               	movwf	(my_utoa@str+1)& (0+255),b
  6136  01636C  C096  F085         	movff	display_dec@dec,my_utoa@value
  6137  016370  0100               	movlb	0	; () banked
  6138  016372  6B86               	clrf	(my_utoa@value+1)& (0+255),b
  6139  016374  0E02               	movlw	2
  6140  016376  0100               	movlb	0	; () banked
  6141  016378  6F87               	movwf	my_utoa@digits& (0+255),b
  6142  01637A  EC1C  F0AE         	call	_my_utoa	;wreg free
  6143                           
  6144                           ;My_header\My_RTCC.h: 254: if (edit && halfsec)I2C_LCD_Puts("  ");
  6145  01637E  0100               	movlb	0	; () banked
  6146  016380  518B               	movf	display_dec@edit& (0+255),w,b
  6147  016382  0100               	movlb	0	; () banked
  6148  016384  B4D8               	btfsc	status,2,c
  6149  016386  D00D               	goto	l10188
  6150                           
  6151                           ; BSR set to: 0
  6152  016388  0100               	movlb	0	; () banked
  6153  01638A  51F9               	movf	_halfsec& (0+255),w,b
  6154  01638C  B4D8               	btfsc	status,2,c
  6155  01638E  D009               	goto	l10188
  6156                           
  6157                           ; BSR set to: 0
  6158  016390  0EE4               	movlw	low STR_1
  6159  016392  0100               	movlb	0	; () banked
  6160  016394  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6161  016396  0EFF               	movlw	high STR_1
  6162  016398  0100               	movlb	0	; () banked
  6163  01639A  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6164  01639C  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6165  0163A0  0012               	return	
  6166  0163A2                     l10188:
  6167                           
  6168                           ;My_header\My_RTCC.h: 255: else I2C_LCD_Puts(str);
  6169  0163A2  0E8C               	movlw	low display_dec@str
  6170  0163A4  0100               	movlb	0	; () banked
  6171  0163A6  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6172  0163A8  0E00               	movlw	high display_dec@str
  6173  0163AA  0100               	movlb	0	; () banked
  6174  0163AC  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6175  0163AE  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6176  0163B2  0012               	return	
  6177  0163B4                     __end_of_display_dec:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           postinc0	equ	0xFEE
  6187                           wreg	equ	0xFE8
  6188                           postdec1	equ	0xFE5
  6189                           fsr1h	equ	0xFE2
  6190                           fsr1l	equ	0xFE1
  6191                           indf2	equ	0xFDF
  6192                           postinc2	equ	0xFDE
  6193                           postdec2	equ	0xFDD
  6194                           fsr2h	equ	0xFDA
  6195                           fsr2l	equ	0xFD9
  6196                           status	equ	0xFD8
  6197                           
  6198 ;; *************** function _I2C_LCD_Putc *****************
  6199 ;; Defined at:
  6200 ;;		line 118 in file "../My_header\My_I2C.h"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  c               1    wreg     unsigned char 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  c               1    4[BANK0 ] unsigned char 
  6205 ;;  ans             1    5[BANK0 ] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;		None               void
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;Total ram usage:        2 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:   13
  6222 ;; This function calls:
  6223 ;;		_I2C_Send
  6224 ;;		_I2C_Start
  6225 ;;		_I2C_Stop
  6226 ;; This function is called by:
  6227 ;;		_display_time_1602
  6228 ;;		_display_LCD
  6229 ;;		_display_time_0802
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text9
  6234  016732                     __ptext9:
  6235                           	opt stack 0
  6236  016732                     _I2C_LCD_Putc:
  6237                           	opt stack 14
  6238                           
  6239                           ;incstack = 0
  6240                           ;I2C_LCD_Putc@c stored from wreg
  6241  016732  0100               	movlb	0	; () banked
  6242  016734  6F64               	movwf	I2C_LCD_Putc@c& (0+255),b
  6243                           
  6244                           ;My_header\My_I2C.h: 119: uint8_t ans;
  6245                           ;My_header\My_I2C.h: 121: ans = I2C_Start(0x3E, 0);
  6246  016736  0E00               	movlw	0
  6247  016738  0100               	movlb	0	; () banked
  6248  01673A  6F62               	movwf	I2C_Start@rw& (0+255),b
  6249  01673C  0E3E               	movlw	62
  6250  01673E  EC56  F0B4         	call	_I2C_Start
  6251  016742  0100               	movlb	0	; () banked
  6252  016744  6F65               	movwf	I2C_LCD_Putc@ans& (0+255),b
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;My_header\My_I2C.h: 122: if (ans == 0) {
  6256  016746  0100               	movlb	0	; () banked
  6257  016748  5165               	movf	I2C_LCD_Putc@ans& (0+255),w,b
  6258  01674A  0100               	movlb	0	; () banked
  6259  01674C  A4D8               	btfss	status,2,c
  6260  01674E  D007               	goto	l357
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;My_header\My_I2C.h: 124: I2C_Send(0b11000000);
  6264  016750  0EC0               	movlw	192
  6265  016752  EC17  F0B6         	call	_I2C_Send
  6266                           
  6267                           ;My_header\My_I2C.h: 125: I2C_Send(c);
  6268  016756  0100               	movlb	0	; () banked
  6269  016758  5164               	movf	I2C_LCD_Putc@c& (0+255),w,b
  6270  01675A  EC17  F0B6         	call	_I2C_Send
  6271  01675E                     l357:
  6272                           
  6273                           ;My_header\My_I2C.h: 126: }
  6274                           ;My_header\My_I2C.h: 127: I2C_Stop();
  6275  01675E  EC3C  F0B6         	call	_I2C_Stop	;wreg free
  6276                           
  6277                           ;My_header\My_I2C.h: 128: _delay((unsigned long)((26)*(48000000/4000000.0)));
  6278  016762  0E68               	movlw	104
  6279  016764                     u13687:
  6280  016764  2EE8               	decfsz	wreg,f,c
  6281  016766  D7FE               	goto	u13687
  6282  016768  0012               	return		;funcret
  6283  01676A                     __end_of_I2C_LCD_Putc:
  6284                           	opt stack 0
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           postinc0	equ	0xFEE
  6293                           wreg	equ	0xFE8
  6294                           postdec1	equ	0xFE5
  6295                           fsr1h	equ	0xFE2
  6296                           fsr1l	equ	0xFE1
  6297                           indf2	equ	0xFDF
  6298                           postinc2	equ	0xFDE
  6299                           postdec2	equ	0xFDD
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _display_port *****************
  6305 ;; Defined at:
  6306 ;;		line 201 in file "tasks.h"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;		None               void
  6313 ;; Registers used:
  6314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:   15
  6327 ;; This function calls:
  6328 ;;		_I2C_LCD_Puts
  6329 ;;		_I2C_LCD_SetCursor
  6330 ;; This function is called by:
  6331 ;;		_display_LCD
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text10
  6336  013F34                     __ptext10:
  6337                           	opt stack 0
  6338  013F34                     _display_port:
  6339                           	opt stack 13
  6340                           
  6341                           ;tasks.h: 202: I2C_LCD_SetCursor(0, 0);
  6342                           
  6343                           ;incstack = 0
  6344  013F34  0E00               	movlw	0
  6345  013F36  0100               	movlb	0	; () banked
  6346  013F38  6F66               	movwf	I2C_LCD_SetCursor@row& (0+255),b
  6347  013F3A  0E00               	movlw	0
  6348  013F3C  ECB3  F0B4         	call	_I2C_LCD_SetCursor
  6349                           
  6350                           ;tasks.h: 204: switch (print_port) {
  6351  013F40  D066               	goto	l10542
  6352  013F42                     l10522:
  6353                           
  6354                           ;tasks.h: 206: if (port[print_port].flag.auto_cut_ON) I2C_LCD_Puts("Left Port");
  6355  013F42  0100               	movlb	0	; () banked
  6356  013F44  51FB               	movf	_print_port& (0+255),w,b
  6357  013F46  0D17               	mullw	23
  6358  013F48  0E16               	movlw	22
  6359  013F4A  26F3               	addwf	prodl,f,c
  6360  013F4C  0E00               	movlw	0
  6361  013F4E  22F4               	addwfc	prodh,f,c
  6362  013F50  0E2B               	movlw	low _port
  6363  013F52  24F3               	addwf	prodl,w,c
  6364  013F54  6ED9               	movwf	fsr2l,c
  6365  013F56  0E01               	movlw	high _port
  6366  013F58  20F4               	addwfc	prodh,w,c
  6367  013F5A  6EDA               	movwf	fsr2h,c
  6368  013F5C  0101               	movlb	1	; () banked
  6369  013F5E  A0DF               	btfss	indf2,0,c
  6370  013F60  D009               	goto	l10526
  6371                           
  6372                           ; BSR set to: 1
  6373  013F62  0E36               	movlw	low STR_23
  6374  013F64  0100               	movlb	0	; () banked
  6375  013F66  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6376  013F68  0EFF               	movlw	high STR_23
  6377  013F6A  0100               	movlb	0	; () banked
  6378  013F6C  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6379  013F6E  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6380  013F72  0012               	return	
  6381  013F74                     l10526:
  6382                           
  6383                           ;tasks.h: 207: else I2C_LCD_Puts("LEFT PORT");
  6384  013F74  0E22               	movlw	low STR_24
  6385  013F76  0100               	movlb	0	; () banked
  6386  013F78  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6387  013F7A  0EFF               	movlw	high STR_24
  6388  013F7C  0100               	movlb	0	; () banked
  6389  013F7E  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6390  013F80  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6391                           
  6392                           ;tasks.h: 208: break;
  6393  013F84  0012               	return	
  6394  013F86                     l10528:
  6395                           
  6396                           ;tasks.h: 210: if (port[print_port].flag.auto_cut_ON) I2C_LCD_Puts("Center Port");
  6397  013F86  0100               	movlb	0	; () banked
  6398  013F88  51FB               	movf	_print_port& (0+255),w,b
  6399  013F8A  0D17               	mullw	23
  6400  013F8C  0E16               	movlw	22
  6401  013F8E  26F3               	addwf	prodl,f,c
  6402  013F90  0E00               	movlw	0
  6403  013F92  22F4               	addwfc	prodh,f,c
  6404  013F94  0E2B               	movlw	low _port
  6405  013F96  24F3               	addwf	prodl,w,c
  6406  013F98  6ED9               	movwf	fsr2l,c
  6407  013F9A  0E01               	movlw	high _port
  6408  013F9C  20F4               	addwfc	prodh,w,c
  6409  013F9E  6EDA               	movwf	fsr2h,c
  6410  013FA0  0101               	movlb	1	; () banked
  6411  013FA2  A0DF               	btfss	indf2,0,c
  6412  013FA4  D009               	goto	l10532
  6413                           
  6414                           ; BSR set to: 1
  6415  013FA6  0EEA               	movlw	low STR_25
  6416  013FA8  0100               	movlb	0	; () banked
  6417  013FAA  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6418  013FAC  0EFE               	movlw	high STR_25
  6419  013FAE  0100               	movlb	0	; () banked
  6420  013FB0  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6421  013FB2  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6422  013FB6  0012               	return	
  6423  013FB8                     l10532:
  6424                           
  6425                           ;tasks.h: 211: else I2C_LCD_Puts("CENTER PORT");
  6426  013FB8  0ED2               	movlw	low STR_26
  6427  013FBA  0100               	movlb	0	; () banked
  6428  013FBC  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6429  013FBE  0EFE               	movlw	high STR_26
  6430  013FC0  0100               	movlb	0	; () banked
  6431  013FC2  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6432  013FC4  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6433                           
  6434                           ;tasks.h: 212: break;
  6435  013FC8  0012               	return	
  6436  013FCA                     l10534:
  6437                           
  6438                           ;tasks.h: 214: if (port[print_port].flag.auto_cut_ON) I2C_LCD_Puts("Right Port");
  6439  013FCA  0100               	movlb	0	; () banked
  6440  013FCC  51FB               	movf	_print_port& (0+255),w,b
  6441  013FCE  0D17               	mullw	23
  6442  013FD0  0E16               	movlw	22
  6443  013FD2  26F3               	addwf	prodl,f,c
  6444  013FD4  0E00               	movlw	0
  6445  013FD6  22F4               	addwfc	prodh,f,c
  6446  013FD8  0E2B               	movlw	low _port
  6447  013FDA  24F3               	addwf	prodl,w,c
  6448  013FDC  6ED9               	movwf	fsr2l,c
  6449  013FDE  0E01               	movlw	high _port
  6450  013FE0  20F4               	addwfc	prodh,w,c
  6451  013FE2  6EDA               	movwf	fsr2h,c
  6452  013FE4  0101               	movlb	1	; () banked
  6453  013FE6  A0DF               	btfss	indf2,0,c
  6454  013FE8  D009               	goto	l10538
  6455                           
  6456                           ; BSR set to: 1
  6457  013FEA  0E17               	movlw	low STR_27
  6458  013FEC  0100               	movlb	0	; () banked
  6459  013FEE  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6460  013FF0  0EFF               	movlw	high STR_27
  6461  013FF2  0100               	movlb	0	; () banked
  6462  013FF4  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6463  013FF6  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6464  013FFA  0012               	return	
  6465  013FFC                     l10538:
  6466                           
  6467                           ;tasks.h: 215: else I2C_LCD_Puts("RIGHT PORT");
  6468  013FFC  0EF6               	movlw	low STR_28
  6469  013FFE  0100               	movlb	0	; () banked
  6470  014000  6F64               	movwf	I2C_LCD_Puts@s& (0+255),b
  6471  014002  0EFE               	movlw	high STR_28
  6472  014004  0100               	movlb	0	; () banked
  6473  014006  6F65               	movwf	(I2C_LCD_Puts@s+1)& (0+255),b
  6474  014008  EC47  F0AD         	call	_I2C_LCD_Puts	;wreg free
  6475                           
  6476                           ;tasks.h: 217: }
  6477                           
  6478                           ;tasks.h: 216: break;
  6479  01400C  0012               	return	
  6480  01400E                     l10542:
  6481  01400E  0100               	movlb	0	; () banked
  6482  014010  51FB               	movf	_print_port& (0+255),w,b
  6483                           
  6484                           ; Switch size 1, requested type "space"
  6485                           ; Number of cases is 3, Range of values is 0 to 2
  6486                           ; switch strategies available:
  6487                           ; Name         Instructions Cycles
  6488                           ; simple_byte           10     6 (average)
  6489                           ;	Chosen strategy is simple_byte
  6490  014012  0A00               	xorlw	0	; case 0
  6491  014014  B4D8               	btfsc	status,2,c
  6492  014016  D795               	goto	l10522
  6493  014018  0A01               	xorlw	1	; case 1
  6494  01401A  B4D8               	btfsc	status,2,c
  6495  01401C  D7B4               	goto	l10528
  6496  01401E  0A03               	xorlw	3	; case 2
  6497  014020  A4D8               	btfss	status,2,c
  6498  014022  0012               	return	
  6499  014024  D7D2               	goto	l10534
  6500  014026                     __end_of_display_port:
  6501                           	opt stack 0
  6502                           tblptru	equ	0xFF8
  6503                           tblptrh	equ	0xFF7
  6504                           tblptrl	equ	0xFF6
  6505                           tablat	equ	0xFF5
  6506                           prodh	equ	0xFF4
  6507                           prodl	equ	0xFF3
  6508                           intcon	equ	0xFF2
  6509                           postinc0	equ	0xFEE
  6510                           wreg	equ	0xFE8
  6511                           postdec1	equ	0xFE5
  6512                           fsr1h	equ	0xFE2
  6513                           fsr1l	equ	0xFE1
  6514                           indf2	equ	0xFDF
  6515                           postinc2	equ	0xFDE
  6516                           postdec2	equ	0xFDD
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8
  6520                           
  6521 ;; *************** function _I2C_LCD_SetCursor *****************
  6522 ;; Defined at:
  6523 ;;		line 112 in file "../My_header\My_I2C.h"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  col             1    wreg     unsigned char 
  6526 ;;  row             1    6[BANK0 ] unsigned char 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  col             1    9[BANK0 ] unsigned char 
  6529 ;;  row_offsets     2    7[BANK0 ] unsigned char [2]
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6539 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;Total ram usage:        4 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:   14
  6546 ;; This function calls:
  6547 ;;		_I2C_LCD_Command
  6548 ;; This function is called by:
  6549 ;;		_display_time_1602
  6550 ;;		_display_port
  6551 ;;		_display_LCD
  6552 ;;		_sleep_loop
  6553 ;;		_display_time_0802
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text11
  6558  016966                     __ptext11:
  6559                           	opt stack 0
  6560  016966                     _I2C_LCD_SetCursor:
  6561                           	opt stack 15
  6562                           
  6563                           ;incstack = 0
  6564                           ;I2C_LCD_SetCursor@col stored from wreg
  6565  016966  0100               	movlb	0	; () banked
  6566  016968  6F69               	movwf	I2C_LCD_SetCursor@col& (0+255),b
  6567                           
  6568                           ;My_header\My_I2C.h: 113: uint8_t row_offsets[] = {0x00, 0x40};
  6569  01696A  C198  F067         	movff	I2C_LCD_SetCursor@F8672,I2C_LCD_SetCursor@row_offsets
  6570  01696E  C199  F068         	movff	I2C_LCD_SetCursor@F8672+1,I2C_LCD_SetCursor@row_offsets+1
  6571                           
  6572                           ;My_header\My_I2C.h: 115: I2C_LCD_Command(0x80 | (col + row_offsets[row]));
  6573  016972  0100               	movlb	0	; () banked
  6574  016974  5166               	movf	I2C_LCD_SetCursor@row& (0+255),w,b
  6575  016976  0D01               	mullw	1
  6576  016978  0E67               	movlw	low I2C_LCD_SetCursor@row_offsets
  6577  01697A  24F3               	addwf	prodl,w,c
  6578  01697C  6ED9               	movwf	fsr2l,c
  6579  01697E  0E00               	movlw	high I2C_LCD_SetCursor@row_offsets
  6580  016980  20F4               	addwfc	prodh,w,c
  6581  016982  6EDA               	movwf	fsr2h,c
  6582  016984  50DF               	movf	indf2,w,c
  6583  016986  0100               	movlb	0	; () banked
  6584  016988  2569               	addwf	I2C_LCD_SetCursor@col& (0+255),w,b
  6585  01698A  0980               	iorlw	128
  6586  01698C  ECD1  F0B3         	call	_I2C_LCD_Command
  6587  016990  0012               	return		;funcret
  6588  016992                     __end_of_I2C_LCD_SetCursor:
  6589                           	opt stack 0
  6590                           tblptru	equ	0xFF8
  6591                           tblptrh	equ	0xFF7
  6592                           tblptrl	equ	0xFF6
  6593                           tablat	equ	0xFF5
  6594                           prodh	equ	0xFF4
  6595                           prodl	equ	0xFF3
  6596                           intcon	equ	0xFF2
  6597                           postinc0	equ	0xFEE
  6598                           wreg	equ	0xFE8
  6599                           postdec1	equ	0xFE5
  6600                           fsr1h	equ	0xFE2
  6601                           fsr1l	equ	0xFE1
  6602                           indf2	equ	0xFDF
  6603                           postinc2	equ	0xFDE
  6604                           postdec2	equ	0xFDD
  6605                           fsr2h	equ	0xFDA
  6606                           fsr2l	equ	0xFD9
  6607                           status	equ	0xFD8
  6608                           
  6609 ;; *************** function _I2C_LCD_Puts *****************
  6610 ;; Defined at:
  6611 ;;		line 131 in file "../My_header\My_I2C.h"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  6614 ;;		 -> STR_100(9), STR_99(17), STR_45(14), STR_44(8), 
  6615 ;;		 -> STR_43(7), STR_42(12), STR_41(13), STR_40(16), 
  6616 ;;		 -> STR_39(17), STR_38(17), STR_37(16), STR_36(2), 
  6617 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(4), 
  6618 ;;		 -> display_LCD@str(10), STR_31(15), STR_30(13), STR_29(17), 
  6619 ;;		 -> STR_28(11), STR_27(11), STR_26(12), STR_25(12), 
  6620 ;;		 -> STR_24(10), STR_23(10), weekday_3char(28), STR_1(3), 
  6621 ;;		 -> display_dec@str(10), 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  ans             2    7[BANK0 ] int 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;		None               void
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6636 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6637 ;;Total ram usage:        5 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:   13
  6640 ;; This function calls:
  6641 ;;		_I2C_Send
  6642 ;;		_I2C_Start
  6643 ;;		_I2C_Stop
  6644 ;; This function is called by:
  6645 ;;		_display_dec
  6646 ;;		_display_time_1602
  6647 ;;		_display_port
  6648 ;;		_display_LCD
  6649 ;;		_sleep_loop
  6650 ;;		_display_time_0802
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text12
  6655  015A8E                     __ptext12:
  6656                           	opt stack 0
  6657  015A8E                     _I2C_LCD_Puts:
  6658                           	opt stack 16
  6659                           
  6660                           ;My_header\My_I2C.h: 132: int ans;
  6661                           ;My_header\My_I2C.h: 134: ans = I2C_Start(0x3E, 0);
  6662                           
  6663                           ;incstack = 0
  6664  015A8E  0E00               	movlw	0
  6665  015A90  0100               	movlb	0	; () banked
  6666  015A92  6F62               	movwf	I2C_Start@rw& (0+255),b
  6667  015A94  0E3E               	movlw	62
  6668  015A96  EC56  F0B4         	call	_I2C_Start
  6669  015A9A  0100               	movlb	0	; () banked
  6670  015A9C  6F66               	movwf	??_I2C_LCD_Puts& (0+255),b
  6671  015A9E  0100               	movlb	0	; () banked
  6672  015AA0  5166               	movf	??_I2C_LCD_Puts& (0+255),w,b
  6673  015AA2  0100               	movlb	0	; () banked
  6674  015AA4  6F67               	movwf	I2C_LCD_Puts@ans& (0+255),b
  6675  015AA6  6B68               	clrf	(I2C_LCD_Puts@ans+1)& (0+255),b
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;My_header\My_I2C.h: 135: if (ans == 0) {
  6679  015AA8  0100               	movlb	0	; () banked
  6680  015AAA  5167               	movf	I2C_LCD_Puts@ans& (0+255),w,b
  6681  015AAC  0100               	movlb	0	; () banked
  6682  015AAE  1168               	iorwf	(I2C_LCD_Puts@ans+1)& (0+255),w,b
  6683  015AB0  A4D8               	btfss	status,2,c
  6684  015AB2  D031               	goto	l10050
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;My_header\My_I2C.h: 136: I2C_Send(0b01000000);
  6688  015AB4  0E40               	movlw	64
  6689  015AB6  EC17  F0B6         	call	_I2C_Send
  6690                           
  6691                           ;My_header\My_I2C.h: 137: while (*s) {
  6692  015ABA  D019               	goto	l10048
  6693  015ABC                     l10042:
  6694                           
  6695                           ;My_header\My_I2C.h: 138: I2C_Send(*s++);
  6696  015ABC  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  6697  015AC0  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  6698  015AC4  0E00               	movlw	low (__mediumconst shr (0+16))
  6699  015AC6  6EF8               	movwf	tblptru,c
  6700  015AC8  0E0E               	movlw	(high __ramtop+-1)
  6701  015ACA  64F7               	cpfsgt	tblptrh,c
  6702  015ACC  D003               	bra	u11147
  6703  015ACE  0008               	tblrd		*
  6704  015AD0  50F5               	movf	tablat,w,c
  6705  015AD2  D005               	bra	u11140
  6706  015AD4                     u11147:
  6707  015AD4  CFF6 FFE1          	movff	tblptrl,fsr1l
  6708  015AD8  CFF7 FFE2          	movff	tblptrh,fsr1h
  6709  015ADC  50E7               	movf	indf1,w,c
  6710  015ADE                     u11140:
  6711  015ADE  EC17  F0B6         	call	_I2C_Send
  6712  015AE2  0100               	movlb	0	; () banked
  6713  015AE4  4B64               	infsnz	I2C_LCD_Puts@s& (0+255),f,b
  6714  015AE6  2B65               	incf	(I2C_LCD_Puts@s+1)& (0+255),f,b
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;My_header\My_I2C.h: 139: _delay((unsigned long)((26)*(48000000/4000000.0)));
  6718  015AE8  0E68               	movlw	104
  6719  015AEA                     u13697:
  6720  015AEA  2EE8               	decfsz	wreg,f,c
  6721  015AEC  D7FE               	goto	u13697
  6722  015AEE                     l10048:
  6723  015AEE  C064  FFF6         	movff	I2C_LCD_Puts@s,tblptrl
  6724  015AF2  C065  FFF7         	movff	I2C_LCD_Puts@s+1,tblptrh
  6725  015AF6  0E00               	movlw	low (__mediumconst shr (0+16))
  6726  015AF8  6EF8               	movwf	tblptru,c
  6727  015AFA  0E0E               	movlw	(high __ramtop+-1)
  6728  015AFC  64F7               	cpfsgt	tblptrh,c
  6729  015AFE  D003               	bra	u11157
  6730  015B00  0008               	tblrd		*
  6731  015B02  50F5               	movf	tablat,w,c
  6732  015B04  D005               	bra	u11150
  6733  015B06                     u11157:
  6734  015B06  CFF6 FFE1          	movff	tblptrl,fsr1l
  6735  015B0A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6736  015B0E  50E7               	movf	indf1,w,c
  6737  015B10                     u11150:
  6738  015B10  0900               	iorlw	0
  6739  015B12  A4D8               	btfss	status,2,c
  6740  015B14  D7D3               	goto	l10042
  6741  015B16                     l10050:
  6742                           
  6743                           ;My_header\My_I2C.h: 140: }
  6744                           ;My_header\My_I2C.h: 141: }
  6745                           ;My_header\My_I2C.h: 142: I2C_Stop();
  6746  015B16  EC3C  F0B6         	call	_I2C_Stop	;wreg free
  6747  015B1A  0012               	return		;funcret
  6748  015B1C                     __end_of_I2C_LCD_Puts:
  6749                           	opt stack 0
  6750                           tblptru	equ	0xFF8
  6751                           tblptrh	equ	0xFF7
  6752                           tblptrl	equ	0xFF6
  6753                           tablat	equ	0xFF5
  6754                           prodh	equ	0xFF4
  6755                           prodl	equ	0xFF3
  6756                           intcon	equ	0xFF2
  6757                           postinc0	equ	0xFEE
  6758                           wreg	equ	0xFE8
  6759                           indf1	equ	0xFE7
  6760                           postdec1	equ	0xFE5
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           indf2	equ	0xFDF
  6764                           postinc2	equ	0xFDE
  6765                           postdec2	equ	0xFDD
  6766                           fsr2h	equ	0xFDA
  6767                           fsr2l	equ	0xFD9
  6768                           status	equ	0xFD8
  6769                           
  6770 ;; *************** function _RTCC_adjust_time_button *****************
  6771 ;; Defined at:
  6772 ;;		line 363 in file "../My_header\My_RTCC.h"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  mode            2   63[BANK0 ] PTR struct button
  6775 ;;		 -> ctmu_m(4), 
  6776 ;;  cnt_inc         2   65[BANK0 ] PTR struct button
  6777 ;;		 -> port(69), 
  6778 ;;  cnt_dec         2   67[BANK0 ] PTR struct button
  6779 ;;		 -> port(69), 
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;		None
  6782 ;; Return value:  Size  Location     Type
  6783 ;;		None               void
  6784 ;; Registers used:
  6785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6791 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6794 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6795 ;;Total ram usage:        6 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:   16
  6798 ;; This function calls:
  6799 ;;		_RTCC_adjust_time_cursor
  6800 ;;		_RTCC_adjust_time_dec
  6801 ;;		_RTCC_adjust_time_inc
  6802 ;;		_RTCC_adjust_time_toggle
  6803 ;; This function is called by:
  6804 ;;		_normal_mode_loop
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text13
  6809  013AF8                     __ptext13:
  6810                           	opt stack 0
  6811  013AF8                     _RTCC_adjust_time_button:
  6812                           	opt stack 13
  6813                           
  6814                           ;My_header\My_RTCC.h: 364: if (mode->flag.long_holding_3) {
  6815                           
  6816                           ;incstack = 0
  6817  013AF8  0100               	movlb	0	; () banked
  6818  013AFA  EE20 F003          	lfsr	2,3
  6819  013AFE  519F               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6820  013B00  26D9               	addwf	fsr2l,f,c
  6821  013B02  51A0               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6822  013B04  22DA               	addwfc	fsr2h,f,c
  6823  013B06  0100               	movlb	0	; () banked
  6824  013B08  A6DF               	btfss	indf2,3,c
  6825  013B0A  D02C               	goto	l10952
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;My_header\My_RTCC.h: 365: mode->flag.long_holding_3 = 0;
  6829  013B0C  0100               	movlb	0	; () banked
  6830  013B0E  EE20 F003          	lfsr	2,3
  6831  013B12  519F               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6832  013B14  26D9               	addwf	fsr2l,f,c
  6833  013B16  51A0               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6834  013B18  22DA               	addwfc	fsr2h,f,c
  6835  013B1A  0100               	movlb	0	; () banked
  6836  013B1C  96DF               	bcf	indf2,3,c
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;My_header\My_RTCC.h: 366: RTCC_adjust_time_toggle();
  6840  013B1E  EC23  F0B6         	call	_RTCC_adjust_time_toggle	;wreg free
  6841                           
  6842                           ;My_header\My_RTCC.h: 367: mode->flags = 0;
  6843  013B22  0100               	movlb	0	; () banked
  6844  013B24  EE20 F002          	lfsr	2,2
  6845  013B28  519F               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6846  013B2A  26D9               	addwf	fsr2l,f,c
  6847  013B2C  51A0               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6848  013B2E  22DA               	addwfc	fsr2h,f,c
  6849  013B30  0E00               	movlw	0
  6850  013B32  6EDE               	movwf	postinc2,c
  6851  013B34  0E00               	movlw	0
  6852  013B36  6EDD               	movwf	postdec2,c
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;My_header\My_RTCC.h: 368: cnt_inc->flags = 0;
  6856  013B38  0100               	movlb	0	; () banked
  6857  013B3A  EE20 F002          	lfsr	2,2
  6858  013B3E  51A1               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  6859  013B40  26D9               	addwf	fsr2l,f,c
  6860  013B42  51A2               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  6861  013B44  22DA               	addwfc	fsr2h,f,c
  6862  013B46  0E00               	movlw	0
  6863  013B48  6EDE               	movwf	postinc2,c
  6864  013B4A  0E00               	movlw	0
  6865  013B4C  6EDD               	movwf	postdec2,c
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;My_header\My_RTCC.h: 369: cnt_dec->flags = 0;
  6869  013B4E  0100               	movlb	0	; () banked
  6870  013B50  EE20 F002          	lfsr	2,2
  6871  013B54  51A3               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  6872  013B56  26D9               	addwf	fsr2l,f,c
  6873  013B58  51A4               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  6874  013B5A  22DA               	addwfc	fsr2h,f,c
  6875  013B5C  0E00               	movlw	0
  6876  013B5E  6EDE               	movwf	postinc2,c
  6877  013B60  0E00               	movlw	0
  6878  013B62  6EDD               	movwf	postdec2,c
  6879  013B64                     l10952:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;My_header\My_RTCC.h: 370: }
  6883                           ;My_header\My_RTCC.h: 371: if (edit_flag.flags) {
  6884  013B64  0100               	movlb	0	; () banked
  6885  013B66  51F8               	movf	_edit_flag& (0+255),w,b
  6886  013B68  B4D8               	btfsc	status,2,c
  6887  013B6A  0012               	return	
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;My_header\My_RTCC.h: 372: if (mode->flag.press) {
  6891  013B6C  0100               	movlb	0	; () banked
  6892  013B6E  EE20 F002          	lfsr	2,2
  6893  013B72  519F               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6894  013B74  26D9               	addwf	fsr2l,f,c
  6895  013B76  51A0               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6896  013B78  22DA               	addwfc	fsr2h,f,c
  6897  013B7A  0100               	movlb	0	; () banked
  6898  013B7C  A0DF               	btfss	indf2,0,c
  6899  013B7E  D00B               	goto	l10960
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;My_header\My_RTCC.h: 373: mode->flag.press = 0;
  6903  013B80  0100               	movlb	0	; () banked
  6904  013B82  EE20 F002          	lfsr	2,2
  6905  013B86  519F               	movf	RTCC_adjust_time_button@mode& (0+255),w,b
  6906  013B88  26D9               	addwf	fsr2l,f,c
  6907  013B8A  51A0               	movf	(RTCC_adjust_time_button@mode+1)& (0+255),w,b
  6908  013B8C  22DA               	addwfc	fsr2h,f,c
  6909  013B8E  0100               	movlb	0	; () banked
  6910  013B90  90DF               	bcf	indf2,0,c
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;My_header\My_RTCC.h: 374: RTCC_adjust_time_cursor();
  6914  013B92  EC52  F0B1         	call	_RTCC_adjust_time_cursor	;wreg free
  6915  013B96                     l10960:
  6916                           
  6917                           ;My_header\My_RTCC.h: 375: }
  6918                           ;My_header\My_RTCC.h: 376: if (cnt_inc->flag.press) {
  6919  013B96  0100               	movlb	0	; () banked
  6920  013B98  EE20 F002          	lfsr	2,2
  6921  013B9C  51A1               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  6922  013B9E  26D9               	addwf	fsr2l,f,c
  6923  013BA0  51A2               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  6924  013BA2  22DA               	addwfc	fsr2h,f,c
  6925  013BA4  0100               	movlb	0	; () banked
  6926  013BA6  A0DF               	btfss	indf2,0,c
  6927  013BA8  D017               	goto	l10966
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;My_header\My_RTCC.h: 377: cnt_inc->flag.press = 0;
  6931  013BAA  0100               	movlb	0	; () banked
  6932  013BAC  EE20 F002          	lfsr	2,2
  6933  013BB0  51A1               	movf	RTCC_adjust_time_button@cnt_inc& (0+255),w,b
  6934  013BB2  26D9               	addwf	fsr2l,f,c
  6935  013BB4  51A2               	movf	(RTCC_adjust_time_button@cnt_inc+1)& (0+255),w,b
  6936  013BB6  22DA               	addwfc	fsr2h,f,c
  6937  013BB8  0100               	movlb	0	; () banked
  6938  013BBA  90DF               	bcf	indf2,0,c
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;My_header\My_RTCC.h: 378: RTCC_adjust_time_inc(&caltime_now, &epoch_now);
  6942  013BBC  0E80               	movlw	low _caltime_now
  6943  013BBE  0100               	movlb	0	; () banked
  6944  013BC0  6F95               	movwf	RTCC_adjust_time_inc@ct& (0+255),b
  6945  013BC2  0E01               	movlw	high _caltime_now
  6946  013BC4  0100               	movlb	0	; () banked
  6947  013BC6  6F96               	movwf	(RTCC_adjust_time_inc@ct+1)& (0+255),b
  6948  013BC8  0EFC               	movlw	low _epoch_now
  6949  013BCA  0100               	movlb	0	; () banked
  6950  013BCC  6F97               	movwf	RTCC_adjust_time_inc@ep& (0+255),b
  6951  013BCE  0E00               	movlw	high _epoch_now
  6952  013BD0  0100               	movlb	0	; () banked
  6953  013BD2  6F98               	movwf	(RTCC_adjust_time_inc@ep+1)& (0+255),b
  6954  013BD4  ECF4  F094         	call	_RTCC_adjust_time_inc	;wreg free
  6955  013BD8                     l10966:
  6956                           
  6957                           ;My_header\My_RTCC.h: 379: }
  6958                           ;My_header\My_RTCC.h: 380: if (cnt_dec->flag.press) {
  6959  013BD8  0100               	movlb	0	; () banked
  6960  013BDA  EE20 F002          	lfsr	2,2
  6961  013BDE  51A3               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  6962  013BE0  26D9               	addwf	fsr2l,f,c
  6963  013BE2  51A4               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  6964  013BE4  22DA               	addwfc	fsr2h,f,c
  6965  013BE6  0100               	movlb	0	; () banked
  6966  013BE8  A0DF               	btfss	indf2,0,c
  6967  013BEA  0012               	return	
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;My_header\My_RTCC.h: 381: cnt_dec->flag.press = 0;
  6971  013BEC  0100               	movlb	0	; () banked
  6972  013BEE  EE20 F002          	lfsr	2,2
  6973  013BF2  51A3               	movf	RTCC_adjust_time_button@cnt_dec& (0+255),w,b
  6974  013BF4  26D9               	addwf	fsr2l,f,c
  6975  013BF6  51A4               	movf	(RTCC_adjust_time_button@cnt_dec+1)& (0+255),w,b
  6976  013BF8  22DA               	addwfc	fsr2h,f,c
  6977  013BFA  0100               	movlb	0	; () banked
  6978  013BFC  90DF               	bcf	indf2,0,c
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;My_header\My_RTCC.h: 382: RTCC_adjust_time_dec(&caltime_now, &epoch_now);
  6982  013BFE  0E80               	movlw	low _caltime_now
  6983  013C00  0100               	movlb	0	; () banked
  6984  013C02  6F95               	movwf	RTCC_adjust_time_dec@ct& (0+255),b
  6985  013C04  0E01               	movlw	high _caltime_now
  6986  013C06  0100               	movlb	0	; () banked
  6987  013C08  6F96               	movwf	(RTCC_adjust_time_dec@ct+1)& (0+255),b
  6988  013C0A  0EFC               	movlw	low _epoch_now
  6989  013C0C  0100               	movlb	0	; () banked
  6990  013C0E  6F97               	movwf	RTCC_adjust_time_dec@ep& (0+255),b
  6991  013C10  0E00               	movlw	high _epoch_now
  6992  013C12  0100               	movlb	0	; () banked
  6993  013C14  6F98               	movwf	(RTCC_adjust_time_dec@ep+1)& (0+255),b
  6994  013C16  EC26  F096         	call	_RTCC_adjust_time_dec	;wreg free
  6995  013C1A  0012               	return	
  6996  013C1C                     __end_of_RTCC_adjust_time_button:
  6997                           	opt stack 0
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           postinc0	equ	0xFEE
  7006                           wreg	equ	0xFE8
  7007                           indf1	equ	0xFE7
  7008                           postdec1	equ	0xFE5
  7009                           fsr1h	equ	0xFE2
  7010                           fsr1l	equ	0xFE1
  7011                           indf2	equ	0xFDF
  7012                           postinc2	equ	0xFDE
  7013                           postdec2	equ	0xFDD
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018 ;; *************** function _RTCC_adjust_time_toggle *****************
  7019 ;; Defined at:
  7020 ;;		line 303 in file "../My_header\My_RTCC.h"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;		None               void
  7027 ;; Registers used:
  7028 ;;		wreg, status,2
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:   11
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_RTCC_adjust_time_button
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text14
  7049  016C46                     __ptext14:
  7050                           	opt stack 0
  7051  016C46                     _RTCC_adjust_time_toggle:
  7052                           	opt stack 17
  7053                           
  7054                           ;My_header\My_RTCC.h: 304: if (edit_flag.flags) {
  7055                           
  7056                           ;incstack = 0
  7057  016C46  0100               	movlb	0	; () banked
  7058  016C48  51F8               	movf	_edit_flag& (0+255),w,b
  7059  016C4A  B4D8               	btfsc	status,2,c
  7060  016C4C  D004               	goto	l505
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;My_header\My_RTCC.h: 305: edit_flag.flags = 0;
  7064  016C4E  0E00               	movlw	0
  7065  016C50  0100               	movlb	0	; () banked
  7066  016C52  6FF8               	movwf	_edit_flag& (0+255),b
  7067                           
  7068                           ;My_header\My_RTCC.h: 306: } else {
  7069  016C54  0012               	return	
  7070  016C56                     l505:
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;My_header\My_RTCC.h: 307: edit_flag.flag.ss = 1;
  7074  016C56  0100               	movlb	0	; () banked
  7075  016C58  81F8               	bsf	_edit_flag& (0+255),0,b
  7076  016C5A  0012               	return	
  7077  016C5C                     __end_of_RTCC_adjust_time_toggle:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           intcon	equ	0xFF2
  7086                           postinc0	equ	0xFEE
  7087                           wreg	equ	0xFE8
  7088                           indf1	equ	0xFE7
  7089                           postdec1	equ	0xFE5
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           fsr2h	equ	0xFDA
  7096                           fsr2l	equ	0xFD9
  7097                           status	equ	0xFD8
  7098                           
  7099 ;; *************** function _RTCC_adjust_time_inc *****************
  7100 ;; Defined at:
  7101 ;;		line 321 in file "../My_header\My_RTCC.h"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  ct              2   53[BANK0 ] PTR struct .
  7104 ;;		 -> caltime_now(7), 
  7105 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  7106 ;;		 -> epoch_now(4), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  i               1   61[BANK0 ] unsigned char 
  7109 ;;  i               1   62[BANK0 ] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;Total ram usage:       10 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:   15
  7126 ;; This function calls:
  7127 ;;		_RTCC_from_RTCC
  7128 ;;		_RTCC_from_epoch
  7129 ;;		___lmul
  7130 ;;		_month_length
  7131 ;; This function is called by:
  7132 ;;		_RTCC_adjust_time_button
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text15
  7137  0129E8                     __ptext15:
  7138                           	opt stack 0
  7139  0129E8                     _RTCC_adjust_time_inc:
  7140                           	opt stack 13
  7141                           
  7142                           ;My_header\My_RTCC.h: 322: RTCC_from_RTCC(ct, ep);
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;incstack = 0
  7146  0129E8  C095  F088         	movff	RTCC_adjust_time_inc@ct,RTCC_from_RTCC@ct
  7147  0129EC  C096  F089         	movff	RTCC_adjust_time_inc@ct+1,RTCC_from_RTCC@ct+1
  7148  0129F0  C097  F08A         	movff	RTCC_adjust_time_inc@ep,RTCC_from_RTCC@ep
  7149  0129F4  C098  F08B         	movff	RTCC_adjust_time_inc@ep+1,RTCC_from_RTCC@ep+1
  7150  0129F8  ECBC  F0B5         	call	_RTCC_from_RTCC	;wreg free
  7151                           
  7152                           ;My_header\My_RTCC.h: 323: if (edit_flag.flag.ss) *ep += 1;
  7153  0129FC  0100               	movlb	0	; () banked
  7154  0129FE  A1F8               	btfss	_edit_flag& (0+255),0,b
  7155  012A00  D009               	goto	l10340
  7156                           
  7157                           ; BSR set to: 0
  7158  012A02  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7159  012A06  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7160  012A0A  2ADE               	incf	postinc2,f,c
  7161  012A0C  0E00               	movlw	0
  7162  012A0E  22DE               	addwfc	postinc2,f,c
  7163  012A10  22DE               	addwfc	postinc2,f,c
  7164  012A12  22DE               	addwfc	postinc2,f,c
  7165  012A14                     l10340:
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;My_header\My_RTCC.h: 324: if (edit_flag.flag.mm) *ep += ((epoch_t)60);
  7169  012A14  0100               	movlb	0	; () banked
  7170  012A16  A3F8               	btfss	_edit_flag& (0+255),1,b
  7171  012A18  D00A               	goto	l10344
  7172                           
  7173                           ; BSR set to: 0
  7174  012A1A  0E3C               	movlw	60
  7175  012A1C  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7176  012A20  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7177  012A24  26DE               	addwf	postinc2,f,c
  7178  012A26  0E00               	movlw	0
  7179  012A28  22DE               	addwfc	postinc2,f,c
  7180  012A2A  22DE               	addwfc	postinc2,f,c
  7181  012A2C  22DE               	addwfc	postinc2,f,c
  7182  012A2E                     l10344:
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;My_header\My_RTCC.h: 325: if (edit_flag.flag.hh) *ep += ((epoch_t)60*60);
  7186  012A2E  0100               	movlb	0	; () banked
  7187  012A30  A5F8               	btfss	_edit_flag& (0+255),2,b
  7188  012A32  D00C               	goto	l10348
  7189                           
  7190                           ; BSR set to: 0
  7191  012A34  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7192  012A38  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7193  012A3C  0E10               	movlw	16
  7194  012A3E  26DE               	addwf	postinc2,f,c
  7195  012A40  0E0E               	movlw	14
  7196  012A42  22DE               	addwfc	postinc2,f,c
  7197  012A44  0E00               	movlw	0
  7198  012A46  22DE               	addwfc	postinc2,f,c
  7199  012A48  0E00               	movlw	0
  7200  012A4A  22DE               	addwfc	postinc2,f,c
  7201  012A4C                     l10348:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;My_header\My_RTCC.h: 326: if (edit_flag.flag.DD) *ep += ((epoch_t)60*60*24);
  7205  012A4C  0100               	movlb	0	; () banked
  7206  012A4E  A7F8               	btfss	_edit_flag& (0+255),3,b
  7207  012A50  D00C               	goto	l10352
  7208                           
  7209                           ; BSR set to: 0
  7210  012A52  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7211  012A56  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7212  012A5A  0E80               	movlw	128
  7213  012A5C  26DE               	addwf	postinc2,f,c
  7214  012A5E  0E51               	movlw	81
  7215  012A60  22DE               	addwfc	postinc2,f,c
  7216  012A62  0E01               	movlw	1
  7217  012A64  22DE               	addwfc	postinc2,f,c
  7218  012A66  0E00               	movlw	0
  7219  012A68  22DE               	addwfc	postinc2,f,c
  7220  012A6A                     l10352:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;My_header\My_RTCC.h: 327: if (edit_flag.flag.MM) *ep += ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7224  012A6A  0100               	movlb	0	; () banked
  7225  012A6C  A9F8               	btfss	_edit_flag& (0+255),4,b
  7226  012A6E  D038               	goto	l10356
  7227                           
  7228                           ; BSR set to: 0
  7229  012A70  0100               	movlb	0	; () banked
  7230  012A72  EE20 F005          	lfsr	2,5
  7231  012A76  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  7232  012A78  26D9               	addwf	fsr2l,f,c
  7233  012A7A  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  7234  012A7C  22DA               	addwfc	fsr2h,f,c
  7235  012A7E  50DF               	movf	indf2,w,c
  7236  012A80  0100               	movlb	0	; () banked
  7237  012A82  6F66               	movwf	month_length@month& (0+255),b
  7238  012A84  0100               	movlb	0	; () banked
  7239  012A86  EE20 F006          	lfsr	2,6
  7240  012A8A  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  7241  012A8C  26D9               	addwf	fsr2l,f,c
  7242  012A8E  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  7243  012A90  22DA               	addwfc	fsr2h,f,c
  7244  012A92  50DF               	movf	indf2,w,c
  7245  012A94  ECC7  F0A2         	call	_month_length
  7246  012A98  0100               	movlb	0	; () banked
  7247  012A9A  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  7248  012A9C  0100               	movlb	0	; () banked
  7249  012A9E  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  7250  012AA0  0100               	movlb	0	; () banked
  7251  012AA2  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7252  012AA4  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7253  012AA6  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7254  012AA8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7255  012AAA  0E80               	movlw	128
  7256  012AAC  0100               	movlb	0	; () banked
  7257  012AAE  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7258  012AB0  0E51               	movlw	81
  7259  012AB2  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7260  012AB4  0E01               	movlw	1
  7261  012AB6  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7262  012AB8  0E00               	movlw	0
  7263  012ABA  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7264  012ABC  ECA2  F0AF         	call	___lmul	;wreg free
  7265  012AC0  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7266  012AC4  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7267  012AC8  0100               	movlb	0	; () banked
  7268  012ACA  516D               	movf	?___lmul& (0+255),w,b
  7269  012ACC  26DE               	addwf	postinc2,f,c
  7270  012ACE  0100               	movlb	0	; () banked
  7271  012AD0  516E               	movf	(?___lmul+1)& (0+255),w,b
  7272  012AD2  22DE               	addwfc	postinc2,f,c
  7273  012AD4  0100               	movlb	0	; () banked
  7274  012AD6  516F               	movf	(?___lmul+2)& (0+255),w,b
  7275  012AD8  22DE               	addwfc	postinc2,f,c
  7276  012ADA  0100               	movlb	0	; () banked
  7277  012ADC  5170               	movf	(?___lmul+3)& (0+255),w,b
  7278  012ADE  22DE               	addwfc	postinc2,f,c
  7279  012AE0                     l10356:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;My_header\My_RTCC.h: 328: if (edit_flag.flag.YY) {
  7283  012AE0  0100               	movlb	0	; () banked
  7284  012AE2  ABF8               	btfss	_edit_flag& (0+255),5,b
  7285  012AE4  D088               	goto	l10378
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;My_header\My_RTCC.h: 329: for (uint8_t i = ct->MM; i <= 12; i++) {
  7289  012AE6  0100               	movlb	0	; () banked
  7290  012AE8  EE20 F005          	lfsr	2,5
  7291  012AEC  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  7292  012AEE  26D9               	addwf	fsr2l,f,c
  7293  012AF0  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  7294  012AF2  22DA               	addwfc	fsr2h,f,c
  7295  012AF4  50DF               	movf	indf2,w,c
  7296  012AF6  0100               	movlb	0	; () banked
  7297  012AF8  6F9E               	movwf	RTCC_adjust_time_inc@i& (0+255),b
  7298  012AFA                     l10360:
  7299                           
  7300                           ; BSR set to: 0
  7301  012AFA  0E0C               	movlw	12
  7302  012AFC  0100               	movlb	0	; () banked
  7303  012AFE  659E               	cpfsgt	RTCC_adjust_time_inc@i& (0+255),b
  7304  012B00  D001               	goto	l10364
  7305  012B02  D033               	goto	l10370
  7306  012B04                     l10364:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;My_header\My_RTCC.h: 330: *ep += ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7310  012B04  C09E  F066         	movff	RTCC_adjust_time_inc@i,month_length@month
  7311  012B08  0100               	movlb	0	; () banked
  7312  012B0A  EE20 F006          	lfsr	2,6
  7313  012B0E  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  7314  012B10  26D9               	addwf	fsr2l,f,c
  7315  012B12  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  7316  012B14  22DA               	addwfc	fsr2h,f,c
  7317  012B16  50DF               	movf	indf2,w,c
  7318  012B18  ECC7  F0A2         	call	_month_length
  7319  012B1C  0100               	movlb	0	; () banked
  7320  012B1E  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  7321  012B20  0100               	movlb	0	; () banked
  7322  012B22  5199               	movf	??_RTCC_adjust_time_inc& (0+255),w,b
  7323  012B24  0100               	movlb	0	; () banked
  7324  012B26  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7325  012B28  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7326  012B2A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7327  012B2C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7328  012B2E  0E80               	movlw	128
  7329  012B30  0100               	movlb	0	; () banked
  7330  012B32  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7331  012B34  0E51               	movlw	81
  7332  012B36  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7333  012B38  0E01               	movlw	1
  7334  012B3A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7335  012B3C  0E00               	movlw	0
  7336  012B3E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7337  012B40  ECA2  F0AF         	call	___lmul	;wreg free
  7338  012B44  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7339  012B48  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7340  012B4C  0100               	movlb	0	; () banked
  7341  012B4E  516D               	movf	?___lmul& (0+255),w,b
  7342  012B50  26DE               	addwf	postinc2,f,c
  7343  012B52  0100               	movlb	0	; () banked
  7344  012B54  516E               	movf	(?___lmul+1)& (0+255),w,b
  7345  012B56  22DE               	addwfc	postinc2,f,c
  7346  012B58  0100               	movlb	0	; () banked
  7347  012B5A  516F               	movf	(?___lmul+2)& (0+255),w,b
  7348  012B5C  22DE               	addwfc	postinc2,f,c
  7349  012B5E  0100               	movlb	0	; () banked
  7350  012B60  5170               	movf	(?___lmul+3)& (0+255),w,b
  7351  012B62  22DE               	addwfc	postinc2,f,c
  7352                           
  7353                           ; BSR set to: 0
  7354  012B64  0100               	movlb	0	; () banked
  7355  012B66  2B9E               	incf	RTCC_adjust_time_inc@i& (0+255),f,b
  7356  012B68  D7C8               	goto	l10360
  7357  012B6A                     l10370:
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;My_header\My_RTCC.h: 331: }
  7361                           ;My_header\My_RTCC.h: 332: for (uint8_t i = 1; i < ct->MM; i++) {
  7362  012B6A  0E01               	movlw	1
  7363  012B6C  0100               	movlb	0	; () banked
  7364  012B6E  6F9D               	movwf	RTCC_adjust_time_inc@i_2018& (0+255),b
  7365  012B70  D036               	goto	l10376
  7366  012B72                     l10372:
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;My_header\My_RTCC.h: 333: *ep += ((epoch_t)60*60*24) * month_length(ct->YY + 1, i);
  7370  012B72  C09D  F066         	movff	RTCC_adjust_time_inc@i_2018,month_length@month
  7371  012B76  0100               	movlb	0	; () banked
  7372  012B78  EE20 F006          	lfsr	2,6
  7373  012B7C  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  7374  012B7E  26D9               	addwf	fsr2l,f,c
  7375  012B80  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  7376  012B82  22DA               	addwfc	fsr2h,f,c
  7377  012B84  50DF               	movf	indf2,w,c
  7378  012B86  0100               	movlb	0	; () banked
  7379  012B88  6F99               	movwf	??_RTCC_adjust_time_inc& (0+255),b
  7380  012B8A  0100               	movlb	0	; () banked
  7381  012B8C  2999               	incf	??_RTCC_adjust_time_inc& (0+255),w,b
  7382  012B8E  ECC7  F0A2         	call	_month_length
  7383  012B92  0100               	movlb	0	; () banked
  7384  012B94  6F9A               	movwf	(??_RTCC_adjust_time_inc+1)& (0+255),b
  7385  012B96  0100               	movlb	0	; () banked
  7386  012B98  519A               	movf	(??_RTCC_adjust_time_inc+1)& (0+255),w,b
  7387  012B9A  0100               	movlb	0	; () banked
  7388  012B9C  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7389  012B9E  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7390  012BA0  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7391  012BA2  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7392  012BA4  0E80               	movlw	128
  7393  012BA6  0100               	movlb	0	; () banked
  7394  012BA8  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7395  012BAA  0E51               	movlw	81
  7396  012BAC  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7397  012BAE  0E01               	movlw	1
  7398  012BB0  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7399  012BB2  0E00               	movlw	0
  7400  012BB4  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7401  012BB6  ECA2  F0AF         	call	___lmul	;wreg free
  7402  012BBA  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7403  012BBE  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7404  012BC2  0100               	movlb	0	; () banked
  7405  012BC4  516D               	movf	?___lmul& (0+255),w,b
  7406  012BC6  26DE               	addwf	postinc2,f,c
  7407  012BC8  0100               	movlb	0	; () banked
  7408  012BCA  516E               	movf	(?___lmul+1)& (0+255),w,b
  7409  012BCC  22DE               	addwfc	postinc2,f,c
  7410  012BCE  0100               	movlb	0	; () banked
  7411  012BD0  516F               	movf	(?___lmul+2)& (0+255),w,b
  7412  012BD2  22DE               	addwfc	postinc2,f,c
  7413  012BD4  0100               	movlb	0	; () banked
  7414  012BD6  5170               	movf	(?___lmul+3)& (0+255),w,b
  7415  012BD8  22DE               	addwfc	postinc2,f,c
  7416                           
  7417                           ; BSR set to: 0
  7418  012BDA  0100               	movlb	0	; () banked
  7419  012BDC  2B9D               	incf	RTCC_adjust_time_inc@i_2018& (0+255),f,b
  7420  012BDE                     l10376:
  7421                           
  7422                           ; BSR set to: 0
  7423  012BDE  0100               	movlb	0	; () banked
  7424  012BE0  EE20 F005          	lfsr	2,5
  7425  012BE4  5195               	movf	RTCC_adjust_time_inc@ct& (0+255),w,b
  7426  012BE6  26D9               	addwf	fsr2l,f,c
  7427  012BE8  5196               	movf	(RTCC_adjust_time_inc@ct+1)& (0+255),w,b
  7428  012BEA  22DA               	addwfc	fsr2h,f,c
  7429  012BEC  50DE               	movf	postinc2,w,c
  7430  012BEE  0100               	movlb	0	; () banked
  7431  012BF0  5D9D               	subwf	RTCC_adjust_time_inc@i_2018& (0+255),w,b
  7432  012BF2  A0D8               	btfss	status,0,c
  7433  012BF4  D7BE               	goto	l10372
  7434  012BF6                     l10378:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;My_header\My_RTCC.h: 334: }
  7438                           ;My_header\My_RTCC.h: 335: }
  7439                           ;My_header\My_RTCC.h: 337: if (*ep >= 3155760000)*ep -= 3155760000;
  7440  012BF6  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7441  012BFA  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7442  012BFE  0E80               	movlw	128
  7443  012C00  5CDE               	subwf	postinc2,w,c
  7444  012C02  0E13               	movlw	19
  7445  012C04  58DE               	subwfb	postinc2,w,c
  7446  012C06  0E19               	movlw	25
  7447  012C08  58DE               	subwfb	postinc2,w,c
  7448  012C0A  0EBC               	movlw	188
  7449  012C0C  58DE               	subwfb	postinc2,w,c
  7450  012C0E  A0D8               	btfss	status,0,c
  7451  012C10  D00C               	goto	l10382
  7452                           
  7453                           ; BSR set to: 0
  7454  012C12  C097  FFD9         	movff	RTCC_adjust_time_inc@ep,fsr2l
  7455  012C16  C098  FFDA         	movff	RTCC_adjust_time_inc@ep+1,fsr2h
  7456  012C1A  0E80               	movlw	128
  7457  012C1C  5EDE               	subwf	postinc2,f,c
  7458  012C1E  0E13               	movlw	19
  7459  012C20  5ADE               	subwfb	postinc2,f,c
  7460  012C22  0E19               	movlw	25
  7461  012C24  5ADE               	subwfb	postinc2,f,c
  7462  012C26  0EBC               	movlw	188
  7463  012C28  5ADE               	subwfb	postinc2,f,c
  7464  012C2A                     l10382:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;My_header\My_RTCC.h: 338: RTCC_from_epoch(&caltime_now, &epoch_now);
  7468  012C2A  0E80               	movlw	low _caltime_now
  7469  012C2C  0100               	movlb	0	; () banked
  7470  012C2E  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  7471  012C30  0E01               	movlw	high _caltime_now
  7472  012C32  0100               	movlb	0	; () banked
  7473  012C34  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7474  012C36  0EFC               	movlw	low _epoch_now
  7475  012C38  0100               	movlb	0	; () banked
  7476  012C3A  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  7477  012C3C  0E00               	movlw	high _epoch_now
  7478  012C3E  0100               	movlb	0	; () banked
  7479  012C40  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7480  012C42  ECAB  F0B5         	call	_RTCC_from_epoch	;wreg free
  7481                           
  7482                           ;My_header\My_RTCC.h: 339: time_change_flag = 1;
  7483  012C46  0E01               	movlw	1
  7484  012C48  6E50               	movwf	_time_change_flag,c
  7485  012C4A  0012               	return		;funcret
  7486  012C4C                     __end_of_RTCC_adjust_time_inc:
  7487                           	opt stack 0
  7488                           tblptru	equ	0xFF8
  7489                           tblptrh	equ	0xFF7
  7490                           tblptrl	equ	0xFF6
  7491                           tablat	equ	0xFF5
  7492                           prodh	equ	0xFF4
  7493                           prodl	equ	0xFF3
  7494                           intcon	equ	0xFF2
  7495                           postinc0	equ	0xFEE
  7496                           wreg	equ	0xFE8
  7497                           indf1	equ	0xFE7
  7498                           postdec1	equ	0xFE5
  7499                           fsr1h	equ	0xFE2
  7500                           fsr1l	equ	0xFE1
  7501                           indf2	equ	0xFDF
  7502                           postinc2	equ	0xFDE
  7503                           postdec2	equ	0xFDD
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function _RTCC_adjust_time_dec *****************
  7509 ;; Defined at:
  7510 ;;		line 342 in file "../My_header\My_RTCC.h"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  ct              2   53[BANK0 ] PTR struct .
  7513 ;;		 -> caltime_now(7), 
  7514 ;;  ep              2   55[BANK0 ] PTR unsigned long 
  7515 ;;		 -> epoch_now(4), 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  i               1   61[BANK0 ] unsigned char 
  7518 ;;  i               1   62[BANK0 ] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;		None               void
  7521 ;; Registers used:
  7522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7528 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7530 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7531 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7532 ;;Total ram usage:       10 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:   15
  7535 ;; This function calls:
  7536 ;;		_RTCC_from_RTCC
  7537 ;;		_RTCC_from_epoch
  7538 ;;		___lmul
  7539 ;;		_month_length
  7540 ;; This function is called by:
  7541 ;;		_RTCC_adjust_time_button
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text16
  7546  012C4C                     __ptext16:
  7547                           	opt stack 0
  7548  012C4C                     _RTCC_adjust_time_dec:
  7549                           	opt stack 13
  7550                           
  7551                           ;My_header\My_RTCC.h: 343: RTCC_from_RTCC(ct, ep);
  7552                           
  7553                           ;incstack = 0
  7554  012C4C  C095  F088         	movff	RTCC_adjust_time_dec@ct,RTCC_from_RTCC@ct
  7555  012C50  C096  F089         	movff	RTCC_adjust_time_dec@ct+1,RTCC_from_RTCC@ct+1
  7556  012C54  C097  F08A         	movff	RTCC_adjust_time_dec@ep,RTCC_from_RTCC@ep
  7557  012C58  C098  F08B         	movff	RTCC_adjust_time_dec@ep+1,RTCC_from_RTCC@ep+1
  7558  012C5C  ECBC  F0B5         	call	_RTCC_from_RTCC	;wreg free
  7559                           
  7560                           ;My_header\My_RTCC.h: 344: if (edit_flag.flag.ss) *ep -= 1;
  7561  012C60  0100               	movlb	0	; () banked
  7562  012C62  A1F8               	btfss	_edit_flag& (0+255),0,b
  7563  012C64  D009               	goto	l10392
  7564                           
  7565                           ; BSR set to: 0
  7566  012C66  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7567  012C6A  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7568  012C6E  06DE               	decf	postinc2,f,c
  7569  012C70  0E00               	movlw	0
  7570  012C72  5ADE               	subwfb	postinc2,f,c
  7571  012C74  5ADE               	subwfb	postinc2,f,c
  7572  012C76  5ADE               	subwfb	postinc2,f,c
  7573  012C78                     l10392:
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;My_header\My_RTCC.h: 345: if (edit_flag.flag.mm) *ep -= ((epoch_t)60);
  7577  012C78  0100               	movlb	0	; () banked
  7578  012C7A  A3F8               	btfss	_edit_flag& (0+255),1,b
  7579  012C7C  D00A               	goto	l10396
  7580                           
  7581                           ; BSR set to: 0
  7582  012C7E  0E3C               	movlw	60
  7583  012C80  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7584  012C84  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7585  012C88  5EDE               	subwf	postinc2,f,c
  7586  012C8A  0E00               	movlw	0
  7587  012C8C  5ADE               	subwfb	postinc2,f,c
  7588  012C8E  5ADE               	subwfb	postinc2,f,c
  7589  012C90  5ADE               	subwfb	postinc2,f,c
  7590  012C92                     l10396:
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;My_header\My_RTCC.h: 346: if (edit_flag.flag.hh) *ep -= ((epoch_t)60*60);
  7594  012C92  0100               	movlb	0	; () banked
  7595  012C94  A5F8               	btfss	_edit_flag& (0+255),2,b
  7596  012C96  D00C               	goto	l10400
  7597                           
  7598                           ; BSR set to: 0
  7599  012C98  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7600  012C9C  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7601  012CA0  0E10               	movlw	16
  7602  012CA2  5EDE               	subwf	postinc2,f,c
  7603  012CA4  0E0E               	movlw	14
  7604  012CA6  5ADE               	subwfb	postinc2,f,c
  7605  012CA8  0E00               	movlw	0
  7606  012CAA  5ADE               	subwfb	postinc2,f,c
  7607  012CAC  0E00               	movlw	0
  7608  012CAE  5ADE               	subwfb	postinc2,f,c
  7609  012CB0                     l10400:
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;My_header\My_RTCC.h: 347: if (edit_flag.flag.DD) *ep -= ((epoch_t)60*60*24);
  7613  012CB0  0100               	movlb	0	; () banked
  7614  012CB2  A7F8               	btfss	_edit_flag& (0+255),3,b
  7615  012CB4  D00C               	goto	l10404
  7616                           
  7617                           ; BSR set to: 0
  7618  012CB6  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7619  012CBA  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7620  012CBE  0E80               	movlw	128
  7621  012CC0  5EDE               	subwf	postinc2,f,c
  7622  012CC2  0E51               	movlw	81
  7623  012CC4  5ADE               	subwfb	postinc2,f,c
  7624  012CC6  0E01               	movlw	1
  7625  012CC8  5ADE               	subwfb	postinc2,f,c
  7626  012CCA  0E00               	movlw	0
  7627  012CCC  5ADE               	subwfb	postinc2,f,c
  7628  012CCE                     l10404:
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;My_header\My_RTCC.h: 348: if (edit_flag.flag.MM) *ep -= ((epoch_t)60*60*24) * month_len
      +                          gth(ct->YY, ct->MM);
  7632  012CCE  0100               	movlb	0	; () banked
  7633  012CD0  A9F8               	btfss	_edit_flag& (0+255),4,b
  7634  012CD2  D038               	goto	l10408
  7635                           
  7636                           ; BSR set to: 0
  7637  012CD4  0100               	movlb	0	; () banked
  7638  012CD6  EE20 F005          	lfsr	2,5
  7639  012CDA  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7640  012CDC  26D9               	addwf	fsr2l,f,c
  7641  012CDE  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7642  012CE0  22DA               	addwfc	fsr2h,f,c
  7643  012CE2  50DF               	movf	indf2,w,c
  7644  012CE4  0100               	movlb	0	; () banked
  7645  012CE6  6F66               	movwf	month_length@month& (0+255),b
  7646  012CE8  0100               	movlb	0	; () banked
  7647  012CEA  EE20 F006          	lfsr	2,6
  7648  012CEE  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7649  012CF0  26D9               	addwf	fsr2l,f,c
  7650  012CF2  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7651  012CF4  22DA               	addwfc	fsr2h,f,c
  7652  012CF6  50DF               	movf	indf2,w,c
  7653  012CF8  ECC7  F0A2         	call	_month_length
  7654  012CFC  0100               	movlb	0	; () banked
  7655  012CFE  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7656  012D00  0100               	movlb	0	; () banked
  7657  012D02  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7658  012D04  0100               	movlb	0	; () banked
  7659  012D06  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7660  012D08  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7661  012D0A  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7662  012D0C  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7663  012D0E  0E80               	movlw	128
  7664  012D10  0100               	movlb	0	; () banked
  7665  012D12  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7666  012D14  0E51               	movlw	81
  7667  012D16  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7668  012D18  0E01               	movlw	1
  7669  012D1A  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7670  012D1C  0E00               	movlw	0
  7671  012D1E  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7672  012D20  ECA2  F0AF         	call	___lmul	;wreg free
  7673  012D24  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7674  012D28  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7675  012D2C  0100               	movlb	0	; () banked
  7676  012D2E  516D               	movf	?___lmul& (0+255),w,b
  7677  012D30  5EDE               	subwf	postinc2,f,c
  7678  012D32  0100               	movlb	0	; () banked
  7679  012D34  516E               	movf	(?___lmul+1)& (0+255),w,b
  7680  012D36  5ADE               	subwfb	postinc2,f,c
  7681  012D38  0100               	movlb	0	; () banked
  7682  012D3A  516F               	movf	(?___lmul+2)& (0+255),w,b
  7683  012D3C  5ADE               	subwfb	postinc2,f,c
  7684  012D3E  0100               	movlb	0	; () banked
  7685  012D40  5170               	movf	(?___lmul+3)& (0+255),w,b
  7686  012D42  5ADE               	subwfb	postinc2,f,c
  7687  012D44                     l10408:
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;My_header\My_RTCC.h: 349: if (edit_flag.flag.YY) {
  7691  012D44  0100               	movlb	0	; () banked
  7692  012D46  ABF8               	btfss	_edit_flag& (0+255),5,b
  7693  012D48  D088               	goto	l10430
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;My_header\My_RTCC.h: 350: for (uint8_t i = ct->MM; i >= 1; i--) {
  7697  012D4A  0100               	movlb	0	; () banked
  7698  012D4C  EE20 F005          	lfsr	2,5
  7699  012D50  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7700  012D52  26D9               	addwf	fsr2l,f,c
  7701  012D54  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7702  012D56  22DA               	addwfc	fsr2h,f,c
  7703  012D58  50DF               	movf	indf2,w,c
  7704  012D5A  0100               	movlb	0	; () banked
  7705  012D5C  6F9E               	movwf	RTCC_adjust_time_dec@i& (0+255),b
  7706  012D5E                     l10412:
  7707                           
  7708                           ; BSR set to: 0
  7709  012D5E  0100               	movlb	0	; () banked
  7710  012D60  519E               	movf	RTCC_adjust_time_dec@i& (0+255),w,b
  7711  012D62  0100               	movlb	0	; () banked
  7712  012D64  B4D8               	btfsc	status,2,c
  7713  012D66  D033               	goto	l10422
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;My_header\My_RTCC.h: 351: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY, i);
  7717                           
  7718                           ; BSR set to: 0
  7719                           
  7720                           ; BSR set to: 0
  7721  012D68  C09E  F066         	movff	RTCC_adjust_time_dec@i,month_length@month
  7722  012D6C  0100               	movlb	0	; () banked
  7723  012D6E  EE20 F006          	lfsr	2,6
  7724  012D72  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7725  012D74  26D9               	addwf	fsr2l,f,c
  7726  012D76  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7727  012D78  22DA               	addwfc	fsr2h,f,c
  7728  012D7A  50DF               	movf	indf2,w,c
  7729  012D7C  ECC7  F0A2         	call	_month_length
  7730  012D80  0100               	movlb	0	; () banked
  7731  012D82  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7732  012D84  0100               	movlb	0	; () banked
  7733  012D86  5199               	movf	??_RTCC_adjust_time_dec& (0+255),w,b
  7734  012D88  0100               	movlb	0	; () banked
  7735  012D8A  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7736  012D8C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7737  012D8E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7738  012D90  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7739  012D92  0E80               	movlw	128
  7740  012D94  0100               	movlb	0	; () banked
  7741  012D96  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7742  012D98  0E51               	movlw	81
  7743  012D9A  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7744  012D9C  0E01               	movlw	1
  7745  012D9E  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7746  012DA0  0E00               	movlw	0
  7747  012DA2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7748  012DA4  ECA2  F0AF         	call	___lmul	;wreg free
  7749  012DA8  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7750  012DAC  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7751  012DB0  0100               	movlb	0	; () banked
  7752  012DB2  516D               	movf	?___lmul& (0+255),w,b
  7753  012DB4  5EDE               	subwf	postinc2,f,c
  7754  012DB6  0100               	movlb	0	; () banked
  7755  012DB8  516E               	movf	(?___lmul+1)& (0+255),w,b
  7756  012DBA  5ADE               	subwfb	postinc2,f,c
  7757  012DBC  0100               	movlb	0	; () banked
  7758  012DBE  516F               	movf	(?___lmul+2)& (0+255),w,b
  7759  012DC0  5ADE               	subwfb	postinc2,f,c
  7760  012DC2  0100               	movlb	0	; () banked
  7761  012DC4  5170               	movf	(?___lmul+3)& (0+255),w,b
  7762  012DC6  5ADE               	subwfb	postinc2,f,c
  7763                           
  7764                           ; BSR set to: 0
  7765  012DC8  0100               	movlb	0	; () banked
  7766  012DCA  079E               	decf	RTCC_adjust_time_dec@i& (0+255),f,b
  7767  012DCC  D7C8               	goto	l10412
  7768  012DCE                     l10422:
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;My_header\My_RTCC.h: 352: }
  7772                           ;My_header\My_RTCC.h: 353: for (uint8_t i = 12; i > ct->MM; i--) {
  7773  012DCE  0E0C               	movlw	12
  7774  012DD0  0100               	movlb	0	; () banked
  7775  012DD2  6F9D               	movwf	RTCC_adjust_time_dec@i_2031& (0+255),b
  7776  012DD4  D036               	goto	l10428
  7777  012DD6                     l10424:
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;My_header\My_RTCC.h: 354: *ep -= ((epoch_t)60*60*24) * month_length(ct->YY - 1, i);
  7781  012DD6  C09D  F066         	movff	RTCC_adjust_time_dec@i_2031,month_length@month
  7782  012DDA  0100               	movlb	0	; () banked
  7783  012DDC  EE20 F006          	lfsr	2,6
  7784  012DE0  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7785  012DE2  26D9               	addwf	fsr2l,f,c
  7786  012DE4  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7787  012DE6  22DA               	addwfc	fsr2h,f,c
  7788  012DE8  50DF               	movf	indf2,w,c
  7789  012DEA  0100               	movlb	0	; () banked
  7790  012DEC  6F99               	movwf	??_RTCC_adjust_time_dec& (0+255),b
  7791  012DEE  0100               	movlb	0	; () banked
  7792  012DF0  0599               	decf	??_RTCC_adjust_time_dec& (0+255),w,b
  7793  012DF2  ECC7  F0A2         	call	_month_length
  7794  012DF6  0100               	movlb	0	; () banked
  7795  012DF8  6F9A               	movwf	(??_RTCC_adjust_time_dec+1)& (0+255),b
  7796  012DFA  0100               	movlb	0	; () banked
  7797  012DFC  519A               	movf	(??_RTCC_adjust_time_dec+1)& (0+255),w,b
  7798  012DFE  0100               	movlb	0	; () banked
  7799  012E00  6F6D               	movwf	___lmul@multiplier& (0+255),b
  7800  012E02  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
  7801  012E04  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
  7802  012E06  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
  7803  012E08  0E80               	movlw	128
  7804  012E0A  0100               	movlb	0	; () banked
  7805  012E0C  6F71               	movwf	___lmul@multiplicand& (0+255),b
  7806  012E0E  0E51               	movlw	81
  7807  012E10  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
  7808  012E12  0E01               	movlw	1
  7809  012E14  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
  7810  012E16  0E00               	movlw	0
  7811  012E18  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
  7812  012E1A  ECA2  F0AF         	call	___lmul	;wreg free
  7813  012E1E  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7814  012E22  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7815  012E26  0100               	movlb	0	; () banked
  7816  012E28  516D               	movf	?___lmul& (0+255),w,b
  7817  012E2A  5EDE               	subwf	postinc2,f,c
  7818  012E2C  0100               	movlb	0	; () banked
  7819  012E2E  516E               	movf	(?___lmul+1)& (0+255),w,b
  7820  012E30  5ADE               	subwfb	postinc2,f,c
  7821  012E32  0100               	movlb	0	; () banked
  7822  012E34  516F               	movf	(?___lmul+2)& (0+255),w,b
  7823  012E36  5ADE               	subwfb	postinc2,f,c
  7824  012E38  0100               	movlb	0	; () banked
  7825  012E3A  5170               	movf	(?___lmul+3)& (0+255),w,b
  7826  012E3C  5ADE               	subwfb	postinc2,f,c
  7827                           
  7828                           ; BSR set to: 0
  7829  012E3E  0100               	movlb	0	; () banked
  7830  012E40  079D               	decf	RTCC_adjust_time_dec@i_2031& (0+255),f,b
  7831  012E42                     l10428:
  7832                           
  7833                           ; BSR set to: 0
  7834  012E42  0100               	movlb	0	; () banked
  7835  012E44  EE20 F005          	lfsr	2,5
  7836  012E48  5195               	movf	RTCC_adjust_time_dec@ct& (0+255),w,b
  7837  012E4A  26D9               	addwf	fsr2l,f,c
  7838  012E4C  5196               	movf	(RTCC_adjust_time_dec@ct+1)& (0+255),w,b
  7839  012E4E  22DA               	addwfc	fsr2h,f,c
  7840  012E50  0100               	movlb	0	; () banked
  7841  012E52  519D               	movf	RTCC_adjust_time_dec@i_2031& (0+255),w,b
  7842  012E54  5CDE               	subwf	postinc2,w,c
  7843  012E56  A0D8               	btfss	status,0,c
  7844  012E58  D7BE               	goto	l10424
  7845  012E5A                     l10430:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;My_header\My_RTCC.h: 355: }
  7849                           ;My_header\My_RTCC.h: 356: }
  7850                           ;My_header\My_RTCC.h: 358: if (*ep >= 3155760000)*ep += 3155760000;
  7851  012E5A  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7852  012E5E  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7853  012E62  0E80               	movlw	128
  7854  012E64  5CDE               	subwf	postinc2,w,c
  7855  012E66  0E13               	movlw	19
  7856  012E68  58DE               	subwfb	postinc2,w,c
  7857  012E6A  0E19               	movlw	25
  7858  012E6C  58DE               	subwfb	postinc2,w,c
  7859  012E6E  0EBC               	movlw	188
  7860  012E70  58DE               	subwfb	postinc2,w,c
  7861  012E72  A0D8               	btfss	status,0,c
  7862  012E74  D00C               	goto	l10434
  7863                           
  7864                           ; BSR set to: 0
  7865  012E76  C097  FFD9         	movff	RTCC_adjust_time_dec@ep,fsr2l
  7866  012E7A  C098  FFDA         	movff	RTCC_adjust_time_dec@ep+1,fsr2h
  7867  012E7E  0E80               	movlw	128
  7868  012E80  26DE               	addwf	postinc2,f,c
  7869  012E82  0E13               	movlw	19
  7870  012E84  22DE               	addwfc	postinc2,f,c
  7871  012E86  0E19               	movlw	25
  7872  012E88  22DE               	addwfc	postinc2,f,c
  7873  012E8A  0EBC               	movlw	188
  7874  012E8C  22DE               	addwfc	postinc2,f,c
  7875  012E8E                     l10434:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;My_header\My_RTCC.h: 359: RTCC_from_epoch(&caltime_now, &epoch_now);
  7879  012E8E  0E80               	movlw	low _caltime_now
  7880  012E90  0100               	movlb	0	; () banked
  7881  012E92  6F91               	movwf	RTCC_from_epoch@ct& (0+255),b
  7882  012E94  0E01               	movlw	high _caltime_now
  7883  012E96  0100               	movlb	0	; () banked
  7884  012E98  6F92               	movwf	(RTCC_from_epoch@ct+1)& (0+255),b
  7885  012E9A  0EFC               	movlw	low _epoch_now
  7886  012E9C  0100               	movlb	0	; () banked
  7887  012E9E  6F93               	movwf	RTCC_from_epoch@ep& (0+255),b
  7888  012EA0  0E00               	movlw	high _epoch_now
  7889  012EA2  0100               	movlb	0	; () banked
  7890  012EA4  6F94               	movwf	(RTCC_from_epoch@ep+1)& (0+255),b
  7891  012EA6  ECAB  F0B5         	call	_RTCC_from_epoch	;wreg free
  7892                           
  7893                           ;My_header\My_RTCC.h: 360: time_change_flag = 1;
  7894  012EAA  0E01               	movlw	1
  7895  012EAC  6E50               	movwf	_time_change_flag,c
  7896  012EAE  0012               	return		;funcret
  7897  012EB0                     __end_of_RTCC_adjust_time_dec:
  7898                           	opt stack 0
  7899                           tblptru	equ	0xFF8
  7900                           tblptrh	equ	0xFF7
  7901                           tblptrl	equ	0xFF6
  7902                           tablat	equ	0xFF5
  7903                           prodh	equ	0xFF4
  7904                           prodl	equ	0xFF3
  7905                           intcon	equ	0xFF2
  7906                           postinc0	equ	0xFEE
  7907                           wreg	equ	0xFE8
  7908                           indf1	equ	0xFE7
  7909                           postdec1	equ	0xFE5
  7910                           fsr1h	equ	0xFE2
  7911                           fsr1l	equ	0xFE1
  7912                           indf2	equ	0xFDF
  7913                           postinc2	equ	0xFDE
  7914                           postdec2	equ	0xFDD
  7915                           fsr2h	equ	0xFDA
  7916                           fsr2l	equ	0xFD9
  7917                           status	equ	0xFD8
  7918                           
  7919 ;; *************** function _RTCC_from_epoch *****************
  7920 ;; Defined at:
  7921 ;;		line 242 in file "../My_header\My_RTCC.h"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  ct              2   49[BANK0 ] PTR struct .
  7924 ;;		 -> caltime_now(7), 
  7925 ;;  ep              2   51[BANK0 ] PTR unsigned long 
  7926 ;;		 -> epoch_now(4), 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;		None               void
  7931 ;; Registers used:
  7932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7941 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7942 ;;Total ram usage:        4 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:   14
  7945 ;; This function calls:
  7946 ;;		_caltime_to_RTCC
  7947 ;;		_epoch_to_caltime
  7948 ;; This function is called by:
  7949 ;;		_RTCC_adjust_time_inc
  7950 ;;		_RTCC_adjust_time_dec
  7951 ;;		_main
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text17
  7956  016B56                     __ptext17:
  7957                           	opt stack 0
  7958  016B56                     _RTCC_from_epoch:
  7959                           	opt stack 13
  7960                           
  7961                           ;My_header\My_RTCC.h: 243: epoch_to_caltime(ct, ep);
  7962                           
  7963                           ;incstack = 0
  7964  016B56  C091  F081         	movff	RTCC_from_epoch@ct,epoch_to_caltime@ct
  7965  016B5A  C092  F082         	movff	RTCC_from_epoch@ct+1,epoch_to_caltime@ct+1
  7966  016B5E  C093  F083         	movff	RTCC_from_epoch@ep,epoch_to_caltime@ep
  7967  016B62  C094  F084         	movff	RTCC_from_epoch@ep+1,epoch_to_caltime@ep+1
  7968  016B66  EC58  F097         	call	_epoch_to_caltime	;wreg free
  7969                           
  7970                           ;My_header\My_RTCC.h: 244: caltime_to_RTCC(ct);
  7971  016B6A  C091  F069         	movff	RTCC_from_epoch@ct,caltime_to_RTCC@ct
  7972  016B6E  C092  F06A         	movff	RTCC_from_epoch@ct+1,caltime_to_RTCC@ct+1
  7973  016B72  EC49  F0A5         	call	_caltime_to_RTCC	;wreg free
  7974  016B76  0012               	return		;funcret
  7975  016B78                     __end_of_RTCC_from_epoch:
  7976                           	opt stack 0
  7977                           tblptru	equ	0xFF8
  7978                           tblptrh	equ	0xFF7
  7979                           tblptrl	equ	0xFF6
  7980                           tablat	equ	0xFF5
  7981                           prodh	equ	0xFF4
  7982                           prodl	equ	0xFF3
  7983                           intcon	equ	0xFF2
  7984                           postinc0	equ	0xFEE
  7985                           wreg	equ	0xFE8
  7986                           indf1	equ	0xFE7
  7987                           postdec1	equ	0xFE5
  7988                           fsr1h	equ	0xFE2
  7989                           fsr1l	equ	0xFE1
  7990                           indf2	equ	0xFDF
  7991                           postinc2	equ	0xFDE
  7992                           postdec2	equ	0xFDD
  7993                           fsr2h	equ	0xFDA
  7994                           fsr2l	equ	0xFD9
  7995                           status	equ	0xFD8
  7996                           
  7997 ;; *************** function _RTCC_adjust_time_cursor *****************
  7998 ;; Defined at:
  7999 ;;		line 311 in file "../My_header\My_RTCC.h"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;		None
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;		None               void
  8006 ;; Registers used:
  8007 ;;		wreg, status,2
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8017 ;;Total ram usage:        0 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:   11
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		_RTCC_adjust_time_button
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text18
  8028  0162A4                     __ptext18:
  8029                           	opt stack 0
  8030  0162A4                     _RTCC_adjust_time_cursor:
  8031                           	opt stack 17
  8032                           
  8033                           ;My_header\My_RTCC.h: 312: if (edit_flag.flag.ss)edit_flag.flags = 0x02;
  8034                           
  8035                           ;incstack = 0
  8036  0162A4  0100               	movlb	0	; () banked
  8037  0162A6  A1F8               	btfss	_edit_flag& (0+255),0,b
  8038  0162A8  D004               	goto	l510
  8039                           
  8040                           ; BSR set to: 0
  8041  0162AA  0E02               	movlw	2
  8042  0162AC  0100               	movlb	0	; () banked
  8043  0162AE  6FF8               	movwf	_edit_flag& (0+255),b
  8044  0162B0  0012               	return	
  8045  0162B2                     l510:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;My_header\My_RTCC.h: 313: else if (edit_flag.flag.mm)edit_flag.flags = 0x04;
  8049  0162B2  0100               	movlb	0	; () banked
  8050  0162B4  A3F8               	btfss	_edit_flag& (0+255),1,b
  8051  0162B6  D004               	goto	l512
  8052                           
  8053                           ; BSR set to: 0
  8054  0162B8  0E04               	movlw	4
  8055  0162BA  0100               	movlb	0	; () banked
  8056  0162BC  6FF8               	movwf	_edit_flag& (0+255),b
  8057  0162BE  0012               	return	
  8058  0162C0                     l512:
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;My_header\My_RTCC.h: 314: else if (edit_flag.flag.hh)edit_flag.flags = 0x08;
  8062  0162C0  0100               	movlb	0	; () banked
  8063  0162C2  A5F8               	btfss	_edit_flag& (0+255),2,b
  8064  0162C4  D004               	goto	l514
  8065                           
  8066                           ; BSR set to: 0
  8067  0162C6  0E08               	movlw	8
  8068  0162C8  0100               	movlb	0	; () banked
  8069  0162CA  6FF8               	movwf	_edit_flag& (0+255),b
  8070  0162CC  0012               	return	
  8071  0162CE                     l514:
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;My_header\My_RTCC.h: 315: else if (edit_flag.flag.DD)edit_flag.flags = 0x10;
  8075  0162CE  0100               	movlb	0	; () banked
  8076  0162D0  A7F8               	btfss	_edit_flag& (0+255),3,b
  8077  0162D2  D004               	goto	l516
  8078                           
  8079                           ; BSR set to: 0
  8080  0162D4  0E10               	movlw	16
  8081  0162D6  0100               	movlb	0	; () banked
  8082  0162D8  6FF8               	movwf	_edit_flag& (0+255),b
  8083  0162DA  0012               	return	
  8084  0162DC                     l516:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;My_header\My_RTCC.h: 316: else if (edit_flag.flag.MM)edit_flag.flags = 0x20;
  8088  0162DC  0100               	movlb	0	; () banked
  8089  0162DE  A9F8               	btfss	_edit_flag& (0+255),4,b
  8090  0162E0  D004               	goto	l518
  8091                           
  8092                           ; BSR set to: 0
  8093  0162E2  0E20               	movlw	32
  8094  0162E4  0100               	movlb	0	; () banked
  8095  0162E6  6FF8               	movwf	_edit_flag& (0+255),b
  8096  0162E8  0012               	return	
  8097  0162EA                     l518:
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;My_header\My_RTCC.h: 317: else if (edit_flag.flag.YY)edit_flag.flags = 0x01;
  8101  0162EA  0100               	movlb	0	; () banked
  8102  0162EC  ABF8               	btfss	_edit_flag& (0+255),5,b
  8103  0162EE  D004               	goto	l10332
  8104                           
  8105                           ; BSR set to: 0
  8106  0162F0  0E01               	movlw	1
  8107  0162F2  0100               	movlb	0	; () banked
  8108  0162F4  6FF8               	movwf	_edit_flag& (0+255),b
  8109  0162F6  0012               	return	
  8110  0162F8                     l10332:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;My_header\My_RTCC.h: 318: else edit_flag.flags = 0x00;
  8114  0162F8  0E00               	movlw	0
  8115  0162FA  0100               	movlb	0	; () banked
  8116  0162FC  6FF8               	movwf	_edit_flag& (0+255),b
  8117                           
  8118                           ; BSR set to: 0
  8119                           
  8120                           ; BSR set to: 0
  8121                           
  8122                           ; BSR set to: 0
  8123                           
  8124                           ; BSR set to: 0
  8125                           
  8126                           ; BSR set to: 0
  8127  0162FE  0012               	return	
  8128  016300                     __end_of_RTCC_adjust_time_cursor:
  8129                           	opt stack 0
  8130                           tblptru	equ	0xFF8
  8131                           tblptrh	equ	0xFF7
  8132                           tblptrl	equ	0xFF6
  8133                           tablat	equ	0xFF5
  8134                           prodh	equ	0xFF4
  8135                           prodl	equ	0xFF3
  8136                           intcon	equ	0xFF2
  8137                           postinc0	equ	0xFEE
  8138                           wreg	equ	0xFE8
  8139                           indf1	equ	0xFE7
  8140                           postdec1	equ	0xFE5
  8141                           fsr1h	equ	0xFE2
  8142                           fsr1l	equ	0xFE1
  8143                           indf2	equ	0xFDF
  8144                           postinc2	equ	0xFDE
  8145                           postdec2	equ	0xFDD
  8146                           fsr2h	equ	0xFDA
  8147                           fsr2l	equ	0xFD9
  8148                           status	equ	0xFD8
  8149                           
  8150 ;; *************** function _Auto_cut *****************
  8151 ;; Defined at:
  8152 ;;		line 171 in file "tasks.h"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  i               1   30[BANK0 ] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;		None               void
  8159 ;; Registers used:
  8160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8170 ;;Total ram usage:        3 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:   12
  8173 ;; This function calls:
  8174 ;;		_ADC
  8175 ;;		_IN
  8176 ;;		_OUT
  8177 ;;		___wmul
  8178 ;; This function is called by:
  8179 ;;		_normal_mode_loop
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text19
  8184  01389E                     __ptext19:
  8185                           	opt stack 0
  8186  01389E                     _Auto_cut:
  8187                           	opt stack 17
  8188                           
  8189                           ;tasks.h: 172: for (uint8_t i = 0; i < 3; i++) {
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;incstack = 0
  8193  01389E  0E00               	movlw	0
  8194  0138A0  0100               	movlb	0	; () banked
  8195  0138A2  6F7E               	movwf	Auto_cut@i& (0+255),b
  8196  0138A4                     l11098:
  8197                           
  8198                           ; BSR set to: 0
  8199  0138A4  0E02               	movlw	2
  8200  0138A6  0100               	movlb	0	; () banked
  8201  0138A8  657E               	cpfsgt	Auto_cut@i& (0+255),b
  8202  0138AA  D001               	goto	l11102
  8203  0138AC  0012               	return	
  8204  0138AE                     l11102:
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;tasks.h: 173: port[i].current = 13 * ADC(IN(i)) / 16;
  8208  0138AE  0100               	movlb	0	; () banked
  8209  0138B0  517E               	movf	Auto_cut@i& (0+255),w,b
  8210  0138B2  ECC9  F0B4         	call	_IN
  8211  0138B6  EC6E  F0B4         	call	_ADC
  8212  0138BA  C060  F076         	movff	?_ADC,___wmul@multiplier
  8213  0138BE  C061  F077         	movff	?_ADC+1,___wmul@multiplier+1
  8214  0138C2  0E00               	movlw	0
  8215  0138C4  0100               	movlb	0	; () banked
  8216  0138C6  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8217  0138C8  0E0D               	movlw	13
  8218  0138CA  6F78               	movwf	___wmul@multiplicand& (0+255),b
  8219  0138CC  ECED  F0B3         	call	___wmul	;wreg free
  8220  0138D0  0E04               	movlw	4
  8221  0138D2  0100               	movlb	0	; () banked
  8222  0138D4  6F7C               	movwf	??_Auto_cut& (0+255),b
  8223  0138D6                     u12885:
  8224  0138D6  0100               	movlb	0	; () banked
  8225  0138D8  90D8               	bcf	status,0,c
  8226  0138DA  3377               	rrcf	(?___wmul+1)& (0+255),f,b
  8227  0138DC  3376               	rrcf	?___wmul& (0+255),f,b
  8228  0138DE  0100               	movlb	0	; () banked
  8229  0138E0  2F7C               	decfsz	??_Auto_cut& (0+255),f,b
  8230  0138E2  D7F9               	goto	u12885
  8231  0138E4  0100               	movlb	0	; () banked
  8232  0138E6  517E               	movf	Auto_cut@i& (0+255),w,b
  8233  0138E8  0D17               	mullw	23
  8234  0138EA  0E06               	movlw	6
  8235  0138EC  26F3               	addwf	prodl,f,c
  8236  0138EE  0E00               	movlw	0
  8237  0138F0  22F4               	addwfc	prodh,f,c
  8238  0138F2  0E2B               	movlw	low _port
  8239  0138F4  24F3               	addwf	prodl,w,c
  8240  0138F6  6ED9               	movwf	fsr2l,c
  8241  0138F8  0E01               	movlw	high _port
  8242  0138FA  20F4               	addwfc	prodh,w,c
  8243  0138FC  6EDA               	movwf	fsr2h,c
  8244  0138FE  0100               	movlb	0	; () banked
  8245  013900  C076  FFDE         	movff	?___wmul,postinc2
  8246  013904  0100               	movlb	0	; () banked
  8247  013906  C077  FFDD         	movff	?___wmul+1,postdec2
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;tasks.h: 174: if (port[i].flag.auto_cut_ON) {
  8251  01390A  0100               	movlb	0	; () banked
  8252  01390C  517E               	movf	Auto_cut@i& (0+255),w,b
  8253  01390E  0D17               	mullw	23
  8254  013910  0E16               	movlw	22
  8255  013912  26F3               	addwf	prodl,f,c
  8256  013914  0E00               	movlw	0
  8257  013916  22F4               	addwfc	prodh,f,c
  8258  013918  0E2B               	movlw	low _port
  8259  01391A  24F3               	addwf	prodl,w,c
  8260  01391C  6ED9               	movwf	fsr2l,c
  8261  01391E  0E01               	movlw	high _port
  8262  013920  20F4               	addwfc	prodh,w,c
  8263  013922  6EDA               	movwf	fsr2h,c
  8264  013924  0101               	movlb	1	; () banked
  8265  013926  A0DF               	btfss	indf2,0,c
  8266  013928  D051               	goto	l11114
  8267                           
  8268                           ; BSR set to: 1
  8269                           ;tasks.h: 175: if (port[i].current < 100) {
  8270  01392A  0100               	movlb	0	; () banked
  8271  01392C  517E               	movf	Auto_cut@i& (0+255),w,b
  8272  01392E  0D17               	mullw	23
  8273  013930  0E06               	movlw	6
  8274  013932  26F3               	addwf	prodl,f,c
  8275  013934  0E00               	movlw	0
  8276  013936  22F4               	addwfc	prodh,f,c
  8277  013938  0E2B               	movlw	low _port
  8278  01393A  24F3               	addwf	prodl,w,c
  8279  01393C  6ED9               	movwf	fsr2l,c
  8280  01393E  0E01               	movlw	high _port
  8281  013940  20F4               	addwfc	prodh,w,c
  8282  013942  6EDA               	movwf	fsr2h,c
  8283  013944  0E01               	movlw	1
  8284  013946  50DB               	movf	plusw2,w,c
  8285  013948  E130               	bnz	l11112
  8286  01394A  0E64               	movlw	100
  8287  01394C  5CDE               	subwf	postinc2,w,c
  8288  01394E  B0D8               	btfsc	status,0,c
  8289  013950  D02C               	goto	l11112
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;tasks.h: 176: port[i].cut_cnt++;
  8293  013952  0100               	movlb	0	; () banked
  8294  013954  517E               	movf	Auto_cut@i& (0+255),w,b
  8295  013956  0D17               	mullw	23
  8296  013958  0E14               	movlw	20
  8297  01395A  26F3               	addwf	prodl,f,c
  8298  01395C  0E00               	movlw	0
  8299  01395E  22F4               	addwfc	prodh,f,c
  8300  013960  0E2B               	movlw	low _port
  8301  013962  24F3               	addwf	prodl,w,c
  8302  013964  6ED9               	movwf	fsr2l,c
  8303  013966  0E01               	movlw	high _port
  8304  013968  20F4               	addwfc	prodh,w,c
  8305  01396A  6EDA               	movwf	fsr2h,c
  8306  01396C  2ADE               	incf	postinc2,f,c
  8307  01396E  0E00               	movlw	0
  8308  013970  22DD               	addwfc	postdec2,f,c
  8309                           
  8310                           ;tasks.h: 177: if (port[i].cut_cnt > 6) {
  8311  013972  0100               	movlb	0	; () banked
  8312  013974  517E               	movf	Auto_cut@i& (0+255),w,b
  8313  013976  0D17               	mullw	23
  8314  013978  0E14               	movlw	20
  8315  01397A  26F3               	addwf	prodl,f,c
  8316  01397C  0E00               	movlw	0
  8317  01397E  22F4               	addwfc	prodh,f,c
  8318  013980  0E2B               	movlw	low _port
  8319  013982  24F3               	addwf	prodl,w,c
  8320  013984  6ED9               	movwf	fsr2l,c
  8321  013986  0E01               	movlw	high _port
  8322  013988  20F4               	addwfc	prodh,w,c
  8323  01398A  6EDA               	movwf	fsr2h,c
  8324  01398C  0E01               	movlw	1
  8325  01398E  50DB               	movf	plusw2,w,c
  8326  013990  E104               	bnz	u12910
  8327  013992  0E07               	movlw	7
  8328  013994  5CDE               	subwf	postinc2,w,c
  8329  013996  A0D8               	btfss	status,0,c
  8330  013998  D019               	goto	l11114
  8331  01399A                     u12910:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;tasks.h: 178: OUT(i, 0);
  8335  01399A  0E00               	movlw	0
  8336  01399C  0100               	movlb	0	; () banked
  8337  01399E  6F60               	movwf	OUT@value& (0+255),b
  8338  0139A0  0100               	movlb	0	; () banked
  8339  0139A2  517E               	movf	Auto_cut@i& (0+255),w,b
  8340  0139A4  EC16  F0B0         	call	_OUT
  8341                           
  8342                           ;tasks.h: 179: }
  8343                           ;tasks.h: 180: } else {
  8344  0139A8  D011               	goto	l11114
  8345  0139AA                     l11112:
  8346                           
  8347                           ;tasks.h: 181: port[i].cut_cnt = 0;
  8348  0139AA  0100               	movlb	0	; () banked
  8349  0139AC  517E               	movf	Auto_cut@i& (0+255),w,b
  8350  0139AE  0D17               	mullw	23
  8351  0139B0  0E14               	movlw	20
  8352  0139B2  26F3               	addwf	prodl,f,c
  8353  0139B4  0E00               	movlw	0
  8354  0139B6  22F4               	addwfc	prodh,f,c
  8355  0139B8  0E2B               	movlw	low _port
  8356  0139BA  24F3               	addwf	prodl,w,c
  8357  0139BC  6ED9               	movwf	fsr2l,c
  8358  0139BE  0E01               	movlw	high _port
  8359  0139C0  20F4               	addwfc	prodh,w,c
  8360  0139C2  6EDA               	movwf	fsr2h,c
  8361  0139C4  0E00               	movlw	0
  8362  0139C6  6EDE               	movwf	postinc2,c
  8363  0139C8  0E00               	movlw	0
  8364  0139CA  6EDD               	movwf	postdec2,c
  8365  0139CC                     l11114:
  8366  0139CC  0100               	movlb	0	; () banked
  8367  0139CE  2B7E               	incf	Auto_cut@i& (0+255),f,b
  8368  0139D0  D769               	goto	l11098
  8369  0139D2                     __end_of_Auto_cut:
  8370                           	opt stack 0
  8371                           tblptru	equ	0xFF8
  8372                           tblptrh	equ	0xFF7
  8373                           tblptrl	equ	0xFF6
  8374                           tablat	equ	0xFF5
  8375                           prodh	equ	0xFF4
  8376                           prodl	equ	0xFF3
  8377                           intcon	equ	0xFF2
  8378                           postinc0	equ	0xFEE
  8379                           wreg	equ	0xFE8
  8380                           indf1	equ	0xFE7
  8381                           postdec1	equ	0xFE5
  8382                           fsr1h	equ	0xFE2
  8383                           fsr1l	equ	0xFE1
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           plusw2	equ	0xFDB
  8388                           fsr2h	equ	0xFDA
  8389                           fsr2l	equ	0xFD9
  8390                           status	equ	0xFD8
  8391                           
  8392 ;; *************** function _OUT *****************
  8393 ;; Defined at:
  8394 ;;		line 102 in file "tasks.h"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  b               1    wreg     unsigned char 
  8397 ;;  value           1    0[BANK0 ] unsigned char 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  b               1    1[BANK0 ] unsigned char 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;		None               void
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;Total ram usage:        2 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:   11
  8416 ;; This function calls:
  8417 ;;		Nothing
  8418 ;; This function is called by:
  8419 ;;		_Auto_cut
  8420 ;;		_port_loop
  8421 ;;		_sleep_loop
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text20
  8426  01602C                     __ptext20:
  8427                           	opt stack 0
  8428  01602C                     _OUT:
  8429                           	opt stack 18
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;incstack = 0
  8433                           ;OUT@b stored from wreg
  8434  01602C  0100               	movlb	0	; () banked
  8435  01602E  6F61               	movwf	OUT@b& (0+255),b
  8436                           
  8437                           ;tasks.h: 103: port[b].flag.out_flag = value;
  8438  016030  0100               	movlb	0	; () banked
  8439  016032  5161               	movf	OUT@b& (0+255),w,b
  8440  016034  0D17               	mullw	23
  8441  016036  0E16               	movlw	22
  8442  016038  26F3               	addwf	prodl,f,c
  8443  01603A  0E00               	movlw	0
  8444  01603C  22F4               	addwfc	prodh,f,c
  8445  01603E  0E2B               	movlw	low _port
  8446  016040  24F3               	addwf	prodl,w,c
  8447  016042  6ED9               	movwf	fsr2l,c
  8448  016044  0E01               	movlw	high _port
  8449  016046  20F4               	addwfc	prodh,w,c
  8450  016048  6EDA               	movwf	fsr2h,c
  8451  01604A  0100               	movlb	0	; () banked
  8452  01604C  B160               	btfsc	OUT@value& (0+255),0,b
  8453  01604E  D003               	bra	u11895
  8454  016050  0101               	movlb	1	; () banked
  8455  016052  94DF               	bcf	indf2,2,c
  8456  016054  D002               	bra	u11896
  8457  016056                     u11895:
  8458  016056  0101               	movlb	1	; () banked
  8459  016058  84DF               	bsf	indf2,2,c
  8460  01605A                     u11896:
  8461                           
  8462                           ;tasks.h: 104: switch (b) {
  8463  01605A  D015               	goto	l10490
  8464  01605C                     l681:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;tasks.h: 106: LATA5 = value;
  8468  01605C  0100               	movlb	0	; () banked
  8469  01605E  A160               	btfss	OUT@value& (0+255),0,b
  8470  016060  D002               	goto	u11900
  8471  016062  8A89               	bsf	3977,5,c	;volatile
  8472  016064  0012               	return	
  8473  016066                     u11900:
  8474  016066  9A89               	bcf	3977,5,c	;volatile
  8475                           
  8476                           ;tasks.h: 107: break;
  8477  016068  0012               	return	
  8478  01606A                     l683:
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;tasks.h: 109: LATA6 = value;
  8482  01606A  0100               	movlb	0	; () banked
  8483  01606C  A160               	btfss	OUT@value& (0+255),0,b
  8484  01606E  D002               	goto	u11920
  8485  016070  8C89               	bsf	3977,6,c	;volatile
  8486  016072  0012               	return	
  8487  016074                     u11920:
  8488  016074  9C89               	bcf	3977,6,c	;volatile
  8489                           
  8490                           ;tasks.h: 110: break;
  8491  016076  0012               	return	
  8492  016078                     l684:
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;tasks.h: 112: LATA7 = value;
  8496  016078  0100               	movlb	0	; () banked
  8497  01607A  A160               	btfss	OUT@value& (0+255),0,b
  8498  01607C  D002               	goto	u11940
  8499  01607E  8E89               	bsf	3977,7,c	;volatile
  8500  016080  0012               	return	
  8501  016082                     u11940:
  8502  016082  9E89               	bcf	3977,7,c	;volatile
  8503                           
  8504                           ;tasks.h: 114: }
  8505                           
  8506                           ;tasks.h: 113: break;
  8507  016084  0012               	return	
  8508  016086                     l10490:
  8509  016086  0100               	movlb	0	; () banked
  8510  016088  5161               	movf	OUT@b& (0+255),w,b
  8511                           
  8512                           ; Switch size 1, requested type "space"
  8513                           ; Number of cases is 3, Range of values is 0 to 2
  8514                           ; switch strategies available:
  8515                           ; Name         Instructions Cycles
  8516                           ; simple_byte           10     6 (average)
  8517                           ;	Chosen strategy is simple_byte
  8518  01608A  0A00               	xorlw	0	; case 0
  8519  01608C  B4D8               	btfsc	status,2,c
  8520  01608E  D7E6               	goto	l681
  8521  016090  0A01               	xorlw	1	; case 1
  8522  016092  B4D8               	btfsc	status,2,c
  8523  016094  D7EA               	goto	l683
  8524  016096  0A03               	xorlw	3	; case 2
  8525  016098  A4D8               	btfss	status,2,c
  8526  01609A  0012               	return	
  8527  01609C  D7ED               	goto	l684
  8528  01609E                     __end_of_OUT:
  8529                           	opt stack 0
  8530                           tblptru	equ	0xFF8
  8531                           tblptrh	equ	0xFF7
  8532                           tblptrl	equ	0xFF6
  8533                           tablat	equ	0xFF5
  8534                           prodh	equ	0xFF4
  8535                           prodl	equ	0xFF3
  8536                           intcon	equ	0xFF2
  8537                           postinc0	equ	0xFEE
  8538                           wreg	equ	0xFE8
  8539                           indf1	equ	0xFE7
  8540                           postdec1	equ	0xFE5
  8541                           fsr1h	equ	0xFE2
  8542                           fsr1l	equ	0xFE1
  8543                           indf2	equ	0xFDF
  8544                           postinc2	equ	0xFDE
  8545                           postdec2	equ	0xFDD
  8546                           plusw2	equ	0xFDB
  8547                           fsr2h	equ	0xFDA
  8548                           fsr2l	equ	0xFD9
  8549                           status	equ	0xFD8
  8550                           
  8551 ;; *************** function _IN *****************
  8552 ;; Defined at:
  8553 ;;		line 117 in file "tasks.h"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  b               1    wreg     unsigned char 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  b               1    0[BANK0 ] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      unsigned char 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8570 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8571 ;;Total ram usage:        1 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:   11
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		_Auto_cut
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text21
  8582  016992                     __ptext21:
  8583                           	opt stack 0
  8584  016992                     _IN:
  8585                           	opt stack 17
  8586                           
  8587                           ;incstack = 0
  8588                           ;IN@b stored from wreg
  8589  016992  0100               	movlb	0	; () banked
  8590  016994  6F60               	movwf	IN@b& (0+255),b
  8591                           
  8592                           ;tasks.h: 118: switch (b) {
  8593  016996  D006               	goto	l10508
  8594  016998                     l10494:
  8595                           
  8596                           ;tasks.h: 120: return 8;
  8597  016998  0E08               	movlw	8
  8598  01699A  0012               	return	
  8599  01699C                     l10498:
  8600                           
  8601                           ;tasks.h: 122: return 9;
  8602  01699C  0E09               	movlw	9
  8603  01699E  0012               	return	
  8604  0169A0                     l10502:
  8605                           
  8606                           ;tasks.h: 124: return 10;
  8607  0169A0  0E0A               	movlw	10
  8608  0169A2  0012               	return	
  8609  0169A4                     l10508:
  8610  0169A4  0100               	movlb	0	; () banked
  8611  0169A6  5160               	movf	IN@b& (0+255),w,b
  8612                           
  8613                           ; Switch size 1, requested type "space"
  8614                           ; Number of cases is 3, Range of values is 0 to 2
  8615                           ; switch strategies available:
  8616                           ; Name         Instructions Cycles
  8617                           ; simple_byte           10     6 (average)
  8618                           ;	Chosen strategy is simple_byte
  8619  0169A8  0A00               	xorlw	0	; case 0
  8620  0169AA  B4D8               	btfsc	status,2,c
  8621  0169AC  D7F5               	goto	l10494
  8622  0169AE  0A01               	xorlw	1	; case 1
  8623  0169B0  B4D8               	btfsc	status,2,c
  8624  0169B2  D7F4               	goto	l10498
  8625  0169B4  0A03               	xorlw	3	; case 2
  8626  0169B6  B4D8               	btfsc	status,2,c
  8627  0169B8  D7F3               	goto	l10502
  8628                           
  8629                           ;tasks.h: 126: return 0;
  8630                           
  8631                           ; BSR set to: 0
  8632  0169BA  0E00               	movlw	0
  8633  0169BC  0012               	return	
  8634  0169BE                     __end_of_IN:
  8635                           	opt stack 0
  8636                           tblptru	equ	0xFF8
  8637                           tblptrh	equ	0xFF7
  8638                           tblptrl	equ	0xFF6
  8639                           tablat	equ	0xFF5
  8640                           prodh	equ	0xFF4
  8641                           prodl	equ	0xFF3
  8642                           intcon	equ	0xFF2
  8643                           postinc0	equ	0xFEE
  8644                           wreg	equ	0xFE8
  8645                           indf1	equ	0xFE7
  8646                           postdec1	equ	0xFE5
  8647                           fsr1h	equ	0xFE2
  8648                           fsr1l	equ	0xFE1
  8649                           indf2	equ	0xFDF
  8650                           postinc2	equ	0xFDE
  8651                           postdec2	equ	0xFDD
  8652                           plusw2	equ	0xFDB
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function _ADC *****************
  8658 ;; Defined at:
  8659 ;;		line 172 in file "../My_header\My_header.h"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  ch              1    wreg     unsigned char 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  ch              1    3[BANK0 ] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  2    0[BANK0 ] unsigned int 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8673 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8676 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8677 ;;Total ram usage:        4 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:   11
  8680 ;; This function calls:
  8681 ;;		Nothing
  8682 ;; This function is called by:
  8683 ;;		_Auto_cut
  8684 ;;		_sleep_loop
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text22
  8689  0168DC                     __ptext22:
  8690                           	opt stack 0
  8691  0168DC                     _ADC:
  8692                           	opt stack 18
  8693                           
  8694                           ;incstack = 0
  8695                           ;ADC@ch stored from wreg
  8696  0168DC  0100               	movlb	0	; () banked
  8697  0168DE  6F63               	movwf	ADC@ch& (0+255),b
  8698                           
  8699                           ;My_header\My_header.h: 173: ADCON0bits.CHS = ch;
  8700  0168E0  C063  F062         	movff	ADC@ch,??_ADC
  8701  0168E4  0100               	movlb	0	; () banked
  8702  0168E6  4762               	rlncf	??_ADC& (0+255),f,b
  8703  0168E8  4762               	rlncf	??_ADC& (0+255),f,b
  8704  0168EA  50C2               	movf	4034,w,c	;volatile
  8705  0168EC  0100               	movlb	0	; () banked
  8706  0168EE  1962               	xorwf	??_ADC& (0+255),w,b
  8707  0168F0  0BC3               	andlw	-61
  8708  0168F2  1962               	xorwf	??_ADC& (0+255),w,b
  8709  0168F4  6EC2               	movwf	4034,c	;volatile
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;My_header\My_header.h: 174: ADCON0bits.ADON = 1;
  8713  0168F6  80C2               	bsf	4034,0,c	;volatile
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;My_header\My_header.h: 176: PIR1bits.ADIF = 0;
  8717  0168F8  9C9E               	bcf	3998,6,c	;volatile
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;My_header\My_header.h: 177: ADCON0bits.GO_nDONE = 1;
  8721  0168FA  82C2               	bsf	4034,1,c	;volatile
  8722  0168FC                     l161:
  8723  0168FC  AC9E               	btfss	3998,6,c	;volatile
  8724  0168FE  D7FE               	goto	l161
  8725                           
  8726                           ;My_header\My_header.h: 179: return ADRES;
  8727  016900  CFC3 F060          	movff	4035,?_ADC	;volatile
  8728  016904  CFC4 F061          	movff	4036,?_ADC+1	;volatile
  8729  016908  0012               	return		;funcret
  8730  01690A                     __end_of_ADC:
  8731                           	opt stack 0
  8732                           tblptru	equ	0xFF8
  8733                           tblptrh	equ	0xFF7
  8734                           tblptrl	equ	0xFF6
  8735                           tablat	equ	0xFF5
  8736                           prodh	equ	0xFF4
  8737                           prodl	equ	0xFF3
  8738                           intcon	equ	0xFF2
  8739                           postinc0	equ	0xFEE
  8740                           wreg	equ	0xFE8
  8741                           indf1	equ	0xFE7
  8742                           postdec1	equ	0xFE5
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           indf2	equ	0xFDF
  8746                           postinc2	equ	0xFDE
  8747                           postdec2	equ	0xFDD
  8748                           plusw2	equ	0xFDB
  8749                           fsr2h	equ	0xFDA
  8750                           fsr2l	equ	0xFD9
  8751                           status	equ	0xFD8
  8752                           
  8753 ;; *************** function _my_terminal_loop *****************
  8754 ;; Defined at:
  8755 ;;		line 22 in file "../My_header\My_terminal.h"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;  tx              2    0[BANK1 ] PTR struct ringbuf
  8758 ;;		 -> usb_tx(8), 
  8759 ;;  rx              2    2[BANK1 ] PTR struct ringbuf
  8760 ;;		 -> usb_rx(8), 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  i               1  102[BANK3 ] unsigned char 
  8763 ;;  i               1  104[BANK3 ] unsigned char 
  8764 ;;  ascii           1  103[BANK3 ] unsigned char 
  8765 ;;  buf           100    0[BANK3 ] unsigned char [100]
  8766 ;; Return value:  Size  Location     Type
  8767 ;;		None               void
  8768 ;; Registers used:
  8769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8775 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8776 ;;      Locals:         0       0       0       0     105       0       0       0       0       0       0       0       
      +0       0       0       0
  8777 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8778 ;;      Totals:         0       0       6       0     105       0       0       0       0       0       0       0       
      +0       0       0       0
  8779 ;;Total ram usage:      111 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:   19
  8782 ;; This function calls:
  8783 ;;		_command_operation
  8784 ;;		_ringbuf_backspace
  8785 ;;		_ringbuf_delete
  8786 ;;		_ringbuf_init
  8787 ;;		_ringbuf_num
  8788 ;;		_ringbuf_pop
  8789 ;;		_ringbuf_put
  8790 ;;		_ringbuf_put_num
  8791 ;;		_ringbuf_put_str
  8792 ;; This function is called by:
  8793 ;;		_main
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text23
  8798  011B62                     __ptext23:
  8799                           	opt stack 0
  8800  011B62                     _my_terminal_loop:
  8801                           	opt stack 11
  8802                           
  8803                           ;My_header\My_terminal.h: 23: static ringbuf_t command;
  8804                           ;My_header\My_terminal.h: 24: static uint8_t command_init = 0;
  8805                           ;My_header\My_terminal.h: 25: if (command_init == 0) {
  8806                           
  8807                           ;incstack = 0
  8808  011B62  0101               	movlb	1	; () banked
  8809  011B64  512A               	movf	my_terminal_loop@command_init& (0+255),w,b
  8810  011B66  0101               	movlb	1	; () banked
  8811  011B68  A4D8               	btfss	status,2,c
  8812  011B6A  D016               	goto	l11468
  8813                           
  8814                           ; BSR set to: 1
  8815                           ;My_header\My_terminal.h: 26: command_init = 1;
  8816  011B6C  0E01               	movlw	1
  8817  011B6E  0101               	movlb	1	; () banked
  8818  011B70  6F2A               	movwf	my_terminal_loop@command_init& (0+255),b
  8819                           
  8820                           ; BSR set to: 1
  8821                           ;My_header\My_terminal.h: 27: char buf[100];
  8822                           ;My_header\My_terminal.h: 28: ringbuf_init(&command, buf, sizeof (buf));
  8823  011B72  0E78               	movlw	low my_terminal_loop@command
  8824  011B74  0100               	movlb	0	; () banked
  8825  011B76  6F60               	movwf	ringbuf_init@rb& (0+255),b
  8826  011B78  0E01               	movlw	high my_terminal_loop@command
  8827  011B7A  0100               	movlb	0	; () banked
  8828  011B7C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
  8829  011B7E  0E00               	movlw	low my_terminal_loop@buf
  8830  011B80  0100               	movlb	0	; () banked
  8831  011B82  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
  8832  011B84  0E03               	movlw	high my_terminal_loop@buf
  8833  011B86  0100               	movlb	0	; () banked
  8834  011B88  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
  8835  011B8A  0E00               	movlw	0
  8836  011B8C  0100               	movlb	0	; () banked
  8837  011B8E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
  8838  011B90  0E64               	movlw	100
  8839  011B92  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
  8840  011B94  EC32  F0B2         	call	_ringbuf_init	;wreg free
  8841  011B98                     l11468:
  8842                           
  8843                           ;My_header\My_terminal.h: 29: }
  8844                           ;My_header\My_terminal.h: 30: if (ringbuf_num(rx)) {
  8845  011B98  C194  F060         	movff	my_terminal_loop@rx,ringbuf_num@rb
  8846  011B9C  C195  F061         	movff	my_terminal_loop@rx+1,ringbuf_num@rb+1
  8847  011BA0  EC8C  F0A0         	call	_ringbuf_num	;wreg free
  8848  011BA4  0100               	movlb	0	; () banked
  8849  011BA6  5160               	movf	?_ringbuf_num& (0+255),w,b
  8850  011BA8  0100               	movlb	0	; () banked
  8851  011BAA  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  8852  011BAC  B4D8               	btfsc	status,2,c
  8853  011BAE  0012               	return	
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;My_header\My_terminal.h: 31: char ascii = ringbuf_pop(rx);
  8857  011BB0  C194  F068         	movff	my_terminal_loop@rx,ringbuf_pop@rb
  8858  011BB4  C195  F069         	movff	my_terminal_loop@rx+1,ringbuf_pop@rb+1
  8859  011BB8  EC18  F0A6         	call	_ringbuf_pop	;wreg free
  8860  011BBC  0103               	movlb	3	; () banked
  8861  011BBE  6F67               	movwf	my_terminal_loop@ascii& (0+255),b
  8862                           
  8863                           ;My_header\My_terminal.h: 32: switch (ascii) {
  8864  011BC0  D176               	goto	l11532
  8865  011BC2                     l11472:
  8866                           
  8867                           ; BSR set to: 3
  8868                           ;My_header\My_terminal.h: 34: ringbuf_put(&command, '\0');
  8869  011BC2  0E78               	movlw	low my_terminal_loop@command
  8870  011BC4  0100               	movlb	0	; () banked
  8871  011BC6  6F83               	movwf	ringbuf_put@rb& (0+255),b
  8872  011BC8  0E01               	movlw	high my_terminal_loop@command
  8873  011BCA  0100               	movlb	0	; () banked
  8874  011BCC  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
  8875  011BCE  0E00               	movlw	0
  8876  011BD0  0100               	movlb	0	; () banked
  8877  011BD2  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
  8878  011BD4  EC77  F0A4         	call	_ringbuf_put	;wreg free
  8879                           
  8880                           ;My_header\My_terminal.h: 35: ringbuf_put(tx, '\t');
  8881  011BD8  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
  8882  011BDC  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  8883  011BE0  0E09               	movlw	9
  8884  011BE2  0100               	movlb	0	; () banked
  8885  011BE4  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
  8886  011BE6  EC77  F0A4         	call	_ringbuf_put	;wreg free
  8887                           
  8888                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  8889  011BEA  0E78               	movlw	low my_terminal_loop@command
  8890  011BEC  0100               	movlb	0	; () banked
  8891  011BEE  6F60               	movwf	ringbuf_num@rb& (0+255),b
  8892  011BF0  0E01               	movlw	high my_terminal_loop@command
  8893  011BF2  0100               	movlb	0	; () banked
  8894  011BF4  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  8895  011BF6  EC8C  F0A0         	call	_ringbuf_num	;wreg free
  8896  011BFA  0EFF               	movlw	255
  8897  011BFC  0100               	movlb	0	; () banked
  8898  011BFE  2560               	addwf	?_ringbuf_num& (0+255),w,b
  8899  011C00  0103               	movlb	3	; () banked
  8900  011C02  6F64               	movwf	_my_terminal_loop$5280& (0+255),b
  8901  011C04  0EFF               	movlw	255
  8902  011C06  0100               	movlb	0	; () banked
  8903  011C08  2161               	addwfc	(?_ringbuf_num+1)& (0+255),w,b
  8904  011C0A  0103               	movlb	3	; () banked
  8905  011C0C  6F65               	movwf	(_my_terminal_loop$5280+1)& (0+255),b
  8906                           
  8907                           ;My_header\My_terminal.h: 36: ringbuf_put_num(tx, ringbuf_num(&command) - 1, 2);
  8908  011C0E  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_num@rb
  8909  011C12  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_num@rb+1
  8910  011C16  C364  F08C         	movff	_my_terminal_loop$5280,ringbuf_put_num@value
  8911  011C1A  C365  F08D         	movff	_my_terminal_loop$5280+1,ringbuf_put_num@value+1
  8912  011C1E  0E02               	movlw	2
  8913  011C20  0100               	movlb	0	; () banked
  8914  011C22  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
  8915  011C24  ECE4  F0AE         	call	_ringbuf_put_num	;wreg free
  8916                           
  8917                           ;My_header\My_terminal.h: 37: ringbuf_put(tx, '\n');
  8918  011C28  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
  8919  011C2C  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  8920  011C30  0E0A               	movlw	10
  8921  011C32  0100               	movlb	0	; () banked
  8922  011C34  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
  8923  011C36  EC77  F0A4         	call	_ringbuf_put	;wreg free
  8924                           
  8925                           ;My_header\My_terminal.h: 38: static char op0[20];
  8926                           ;My_header\My_terminal.h: 39: static char op1[20];
  8927                           ;My_header\My_terminal.h: 40: static char op2[20];
  8928                           ;My_header\My_terminal.h: 41: static char op3[20];
  8929                           ;My_header\My_terminal.h: 42: uint8_t i;
  8930                           ;My_header\My_terminal.h: 43: for (i = 0; op0[i] = ringbuf_pop(&command); i++);
  8931  011C3A  0E00               	movlw	0
  8932  011C3C  0103               	movlb	3	; () banked
  8933  011C3E  6F68               	movwf	my_terminal_loop@i& (0+255),b
  8934  011C40  D002               	goto	l11478
  8935  011C42                     l11476:
  8936                           
  8937                           ; BSR set to: 3
  8938  011C42  0103               	movlb	3	; () banked
  8939  011C44  2B68               	incf	my_terminal_loop@i& (0+255),f,b
  8940  011C46                     l11478:
  8941                           
  8942                           ; BSR set to: 3
  8943  011C46  0E78               	movlw	low my_terminal_loop@command
  8944  011C48  0100               	movlb	0	; () banked
  8945  011C4A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  8946  011C4C  0E01               	movlw	high my_terminal_loop@command
  8947  011C4E  0100               	movlb	0	; () banked
  8948  011C50  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  8949  011C52  EC18  F0A6         	call	_ringbuf_pop	;wreg free
  8950  011C56  0101               	movlb	1	; () banked
  8951  011C58  6F96               	movwf	??_my_terminal_loop& (0+255),b
  8952  011C5A  0103               	movlb	3	; () banked
  8953  011C5C  5168               	movf	my_terminal_loop@i& (0+255),w,b
  8954  011C5E  0D01               	mullw	1
  8955  011C60  0E8E               	movlw	low my_terminal_loop@op0
  8956  011C62  24F3               	addwf	prodl,w,c
  8957  011C64  6ED9               	movwf	fsr2l,c
  8958  011C66  0E02               	movlw	high my_terminal_loop@op0
  8959  011C68  20F4               	addwfc	prodh,w,c
  8960  011C6A  6EDA               	movwf	fsr2h,c
  8961  011C6C  C196  FFDF         	movff	??_my_terminal_loop,indf2
  8962  011C70  50DF               	movf	indf2,w,c
  8963  011C72  A4D8               	btfss	status,2,c
  8964  011C74  D7E6               	goto	l11476
  8965                           
  8966                           ; BSR set to: 3
  8967                           ;My_header\My_terminal.h: 44: op0[i] = '\0';
  8968                           
  8969                           ; BSR set to: 3
  8970  011C76  0103               	movlb	3	; () banked
  8971  011C78  5168               	movf	my_terminal_loop@i& (0+255),w,b
  8972  011C7A  0D01               	mullw	1
  8973  011C7C  0E8E               	movlw	low my_terminal_loop@op0
  8974  011C7E  24F3               	addwf	prodl,w,c
  8975  011C80  6ED9               	movwf	fsr2l,c
  8976  011C82  0E02               	movlw	high my_terminal_loop@op0
  8977  011C84  20F4               	addwfc	prodh,w,c
  8978  011C86  6EDA               	movwf	fsr2h,c
  8979  011C88  0E00               	movlw	0
  8980  011C8A  6EDF               	movwf	indf2,c
  8981                           
  8982                           ; BSR set to: 3
  8983                           ;My_header\My_terminal.h: 45: for (i = 0; op1[i] = ringbuf_pop(&command); i++);
  8984  011C8C  0E00               	movlw	0
  8985  011C8E  0103               	movlb	3	; () banked
  8986  011C90  6F68               	movwf	my_terminal_loop@i& (0+255),b
  8987  011C92  D002               	goto	l11486
  8988  011C94                     l11484:
  8989                           
  8990                           ; BSR set to: 3
  8991  011C94  0103               	movlb	3	; () banked
  8992  011C96  2B68               	incf	my_terminal_loop@i& (0+255),f,b
  8993  011C98                     l11486:
  8994                           
  8995                           ; BSR set to: 3
  8996  011C98  0E78               	movlw	low my_terminal_loop@command
  8997  011C9A  0100               	movlb	0	; () banked
  8998  011C9C  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  8999  011C9E  0E01               	movlw	high my_terminal_loop@command
  9000  011CA0  0100               	movlb	0	; () banked
  9001  011CA2  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9002  011CA4  EC18  F0A6         	call	_ringbuf_pop	;wreg free
  9003  011CA8  0101               	movlb	1	; () banked
  9004  011CAA  6F96               	movwf	??_my_terminal_loop& (0+255),b
  9005  011CAC  0103               	movlb	3	; () banked
  9006  011CAE  5168               	movf	my_terminal_loop@i& (0+255),w,b
  9007  011CB0  0D01               	mullw	1
  9008  011CB2  0EA2               	movlw	low my_terminal_loop@op1
  9009  011CB4  24F3               	addwf	prodl,w,c
  9010  011CB6  6ED9               	movwf	fsr2l,c
  9011  011CB8  0E02               	movlw	high my_terminal_loop@op1
  9012  011CBA  20F4               	addwfc	prodh,w,c
  9013  011CBC  6EDA               	movwf	fsr2h,c
  9014  011CBE  C196  FFDF         	movff	??_my_terminal_loop,indf2
  9015  011CC2  50DF               	movf	indf2,w,c
  9016  011CC4  A4D8               	btfss	status,2,c
  9017  011CC6  D7E6               	goto	l11484
  9018                           
  9019                           ; BSR set to: 3
  9020                           ;My_header\My_terminal.h: 46: op1[i] = '\0';
  9021                           
  9022                           ; BSR set to: 3
  9023  011CC8  0103               	movlb	3	; () banked
  9024  011CCA  5168               	movf	my_terminal_loop@i& (0+255),w,b
  9025  011CCC  0D01               	mullw	1
  9026  011CCE  0EA2               	movlw	low my_terminal_loop@op1
  9027  011CD0  24F3               	addwf	prodl,w,c
  9028  011CD2  6ED9               	movwf	fsr2l,c
  9029  011CD4  0E02               	movlw	high my_terminal_loop@op1
  9030  011CD6  20F4               	addwfc	prodh,w,c
  9031  011CD8  6EDA               	movwf	fsr2h,c
  9032  011CDA  0E00               	movlw	0
  9033  011CDC  6EDF               	movwf	indf2,c
  9034                           
  9035                           ; BSR set to: 3
  9036                           ;My_header\My_terminal.h: 47: for (i = 0; op2[i] = ringbuf_pop(&command); i++);
  9037  011CDE  0E00               	movlw	0
  9038  011CE0  0103               	movlb	3	; () banked
  9039  011CE2  6F68               	movwf	my_terminal_loop@i& (0+255),b
  9040  011CE4  D002               	goto	l11494
  9041  011CE6                     l11492:
  9042                           
  9043                           ; BSR set to: 3
  9044  011CE6  0103               	movlb	3	; () banked
  9045  011CE8  2B68               	incf	my_terminal_loop@i& (0+255),f,b
  9046  011CEA                     l11494:
  9047                           
  9048                           ; BSR set to: 3
  9049  011CEA  0E78               	movlw	low my_terminal_loop@command
  9050  011CEC  0100               	movlb	0	; () banked
  9051  011CEE  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  9052  011CF0  0E01               	movlw	high my_terminal_loop@command
  9053  011CF2  0100               	movlb	0	; () banked
  9054  011CF4  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9055  011CF6  EC18  F0A6         	call	_ringbuf_pop	;wreg free
  9056  011CFA  0101               	movlb	1	; () banked
  9057  011CFC  6F96               	movwf	??_my_terminal_loop& (0+255),b
  9058  011CFE  0103               	movlb	3	; () banked
  9059  011D00  5168               	movf	my_terminal_loop@i& (0+255),w,b
  9060  011D02  0D01               	mullw	1
  9061  011D04  0EB6               	movlw	low my_terminal_loop@op2
  9062  011D06  24F3               	addwf	prodl,w,c
  9063  011D08  6ED9               	movwf	fsr2l,c
  9064  011D0A  0E02               	movlw	high my_terminal_loop@op2
  9065  011D0C  20F4               	addwfc	prodh,w,c
  9066  011D0E  6EDA               	movwf	fsr2h,c
  9067  011D10  C196  FFDF         	movff	??_my_terminal_loop,indf2
  9068  011D14  50DF               	movf	indf2,w,c
  9069  011D16  A4D8               	btfss	status,2,c
  9070  011D18  D7E6               	goto	l11492
  9071                           
  9072                           ; BSR set to: 3
  9073                           ;My_header\My_terminal.h: 48: op2[i] = '\0';
  9074                           
  9075                           ; BSR set to: 3
  9076  011D1A  0103               	movlb	3	; () banked
  9077  011D1C  5168               	movf	my_terminal_loop@i& (0+255),w,b
  9078  011D1E  0D01               	mullw	1
  9079  011D20  0EB6               	movlw	low my_terminal_loop@op2
  9080  011D22  24F3               	addwf	prodl,w,c
  9081  011D24  6ED9               	movwf	fsr2l,c
  9082  011D26  0E02               	movlw	high my_terminal_loop@op2
  9083  011D28  20F4               	addwfc	prodh,w,c
  9084  011D2A  6EDA               	movwf	fsr2h,c
  9085  011D2C  0E00               	movlw	0
  9086  011D2E  6EDF               	movwf	indf2,c
  9087                           
  9088                           ; BSR set to: 3
  9089                           ;My_header\My_terminal.h: 49: for (i = 0; op3[i] = ringbuf_pop(&command); i++);
  9090  011D30  0E00               	movlw	0
  9091  011D32  0103               	movlb	3	; () banked
  9092  011D34  6F68               	movwf	my_terminal_loop@i& (0+255),b
  9093  011D36  D002               	goto	l11502
  9094  011D38                     l11500:
  9095                           
  9096                           ; BSR set to: 3
  9097  011D38  0103               	movlb	3	; () banked
  9098  011D3A  2B68               	incf	my_terminal_loop@i& (0+255),f,b
  9099  011D3C                     l11502:
  9100                           
  9101                           ; BSR set to: 3
  9102  011D3C  0E78               	movlw	low my_terminal_loop@command
  9103  011D3E  0100               	movlb	0	; () banked
  9104  011D40  6F68               	movwf	ringbuf_pop@rb& (0+255),b
  9105  011D42  0E01               	movlw	high my_terminal_loop@command
  9106  011D44  0100               	movlb	0	; () banked
  9107  011D46  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
  9108  011D48  EC18  F0A6         	call	_ringbuf_pop	;wreg free
  9109  011D4C  0101               	movlb	1	; () banked
  9110  011D4E  6F96               	movwf	??_my_terminal_loop& (0+255),b
  9111  011D50  0103               	movlb	3	; () banked
  9112  011D52  5168               	movf	my_terminal_loop@i& (0+255),w,b
  9113  011D54  0D01               	mullw	1
  9114  011D56  0ECA               	movlw	low my_terminal_loop@op3
  9115  011D58  24F3               	addwf	prodl,w,c
  9116  011D5A  6ED9               	movwf	fsr2l,c
  9117  011D5C  0E02               	movlw	high my_terminal_loop@op3
  9118  011D5E  20F4               	addwfc	prodh,w,c
  9119  011D60  6EDA               	movwf	fsr2h,c
  9120  011D62  C196  FFDF         	movff	??_my_terminal_loop,indf2
  9121  011D66  50DF               	movf	indf2,w,c
  9122  011D68  A4D8               	btfss	status,2,c
  9123  011D6A  D7E6               	goto	l11500
  9124                           
  9125                           ; BSR set to: 3
  9126                           ;My_header\My_terminal.h: 50: op3[i] = '\0';
  9127                           
  9128                           ; BSR set to: 3
  9129  011D6C  0103               	movlb	3	; () banked
  9130  011D6E  5168               	movf	my_terminal_loop@i& (0+255),w,b
  9131  011D70  0D01               	mullw	1
  9132  011D72  0ECA               	movlw	low my_terminal_loop@op3
  9133  011D74  24F3               	addwf	prodl,w,c
  9134  011D76  6ED9               	movwf	fsr2l,c
  9135  011D78  0E02               	movlw	high my_terminal_loop@op3
  9136  011D7A  20F4               	addwfc	prodh,w,c
  9137  011D7C  6EDA               	movwf	fsr2h,c
  9138  011D7E  0E00               	movlw	0
  9139  011D80  6EDF               	movwf	indf2,c
  9140                           
  9141                           ; BSR set to: 3
  9142                           ;My_header\My_terminal.h: 51: command_operation(tx, op0, op1, op2, op3);
  9143  011D82  C192  F0D6         	movff	my_terminal_loop@tx,command_operation@tx
  9144  011D86  C193  F0D7         	movff	my_terminal_loop@tx+1,command_operation@tx+1
  9145  011D8A  0E8E               	movlw	low my_terminal_loop@op0
  9146  011D8C  0100               	movlb	0	; () banked
  9147  011D8E  6FD8               	movwf	command_operation@op0& (0+255),b
  9148  011D90  0E02               	movlw	high my_terminal_loop@op0
  9149  011D92  0100               	movlb	0	; () banked
  9150  011D94  6FD9               	movwf	(command_operation@op0+1)& (0+255),b
  9151  011D96  0EA2               	movlw	low my_terminal_loop@op1
  9152  011D98  0100               	movlb	0	; () banked
  9153  011D9A  6FDA               	movwf	command_operation@op1& (0+255),b
  9154  011D9C  0E02               	movlw	high my_terminal_loop@op1
  9155  011D9E  0100               	movlb	0	; () banked
  9156  011DA0  6FDB               	movwf	(command_operation@op1+1)& (0+255),b
  9157  011DA2  0EB6               	movlw	low my_terminal_loop@op2
  9158  011DA4  0100               	movlb	0	; () banked
  9159  011DA6  6FDC               	movwf	command_operation@op2& (0+255),b
  9160  011DA8  0E02               	movlw	high my_terminal_loop@op2
  9161  011DAA  0100               	movlb	0	; () banked
  9162  011DAC  6FDD               	movwf	(command_operation@op2+1)& (0+255),b
  9163  011DAE  0ECA               	movlw	low my_terminal_loop@op3
  9164  011DB0  0100               	movlb	0	; () banked
  9165  011DB2  6FDE               	movwf	command_operation@op3& (0+255),b
  9166  011DB4  0E02               	movlw	high my_terminal_loop@op3
  9167  011DB6  0100               	movlb	0	; () banked
  9168  011DB8  6FDF               	movwf	(command_operation@op3+1)& (0+255),b
  9169  011DBA  EC28  F083         	call	_command_operation	;wreg free
  9170                           
  9171                           ;My_header\My_terminal.h: 52: break;
  9172  011DBE  0012               	return	
  9173  011DC0                     l11508:
  9174                           
  9175                           ;My_header\My_terminal.h: 54: ringbuf_put(&command, '\0');
  9176  011DC0  0E78               	movlw	low my_terminal_loop@command
  9177  011DC2  0100               	movlb	0	; () banked
  9178  011DC4  6F83               	movwf	ringbuf_put@rb& (0+255),b
  9179  011DC6  0E01               	movlw	high my_terminal_loop@command
  9180  011DC8  0100               	movlb	0	; () banked
  9181  011DCA  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
  9182  011DCC  0E00               	movlw	0
  9183  011DCE  0100               	movlb	0	; () banked
  9184  011DD0  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
  9185  011DD2  EC77  F0A4         	call	_ringbuf_put	;wreg free
  9186                           
  9187                           ;My_header\My_terminal.h: 55: ringbuf_put(tx, ' ');
  9188  011DD6  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
  9189  011DDA  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  9190  011DDE  0E20               	movlw	32
  9191  011DE0  0100               	movlb	0	; () banked
  9192  011DE2  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
  9193  011DE4  EC77  F0A4         	call	_ringbuf_put	;wreg free
  9194                           
  9195                           ;My_header\My_terminal.h: 56: break;
  9196  011DE8  0012               	return	
  9197  011DEA                     l11510:
  9198                           
  9199                           ;My_header\My_terminal.h: 58: ringbuf_backspace(&command);
  9200  011DEA  0E78               	movlw	low my_terminal_loop@command
  9201  011DEC  0100               	movlb	0	; () banked
  9202  011DEE  6F68               	movwf	ringbuf_backspace@rb& (0+255),b
  9203  011DF0  0E01               	movlw	high my_terminal_loop@command
  9204  011DF2  0100               	movlb	0	; () banked
  9205  011DF4  6F69               	movwf	(ringbuf_backspace@rb+1)& (0+255),b
  9206  011DF6  EC8E  F0AD         	call	_ringbuf_backspace	;wreg free
  9207                           
  9208                           ;My_header\My_terminal.h: 59: ringbuf_put_str(tx, "\b \b");
  9209  011DFA  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  9210  011DFE  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  9211  011E02  0ED5               	movlw	low STR_2
  9212  011E04  0100               	movlb	0	; () banked
  9213  011E06  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  9214  011E08  0EFF               	movlw	high STR_2
  9215  011E0A  0100               	movlb	0	; () banked
  9216  011E0C  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  9217  011E0E  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
  9218                           
  9219                           ;My_header\My_terminal.h: 60: break;
  9220  011E12  0012               	return	
  9221  011E14                     l11514:
  9222                           
  9223                           ;My_header\My_terminal.h: 62: for (uint8_t i = 0; i < ringbuf_num(&command); i++) ringbu
      +                          f_put_str(tx, "\b \b");
  9224  011E14  0E00               	movlw	0
  9225  011E16  0103               	movlb	3	; () banked
  9226  011E18  6F66               	movwf	my_terminal_loop@i_2171& (0+255),b
  9227  011E1A  D00E               	goto	l11520
  9228  011E1C                     l11516:
  9229  011E1C  C192  F08A         	movff	my_terminal_loop@tx,ringbuf_put_str@rb
  9230  011E20  C193  F08B         	movff	my_terminal_loop@tx+1,ringbuf_put_str@rb+1
  9231  011E24  0ED5               	movlw	low STR_2
  9232  011E26  0100               	movlb	0	; () banked
  9233  011E28  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  9234  011E2A  0EFF               	movlw	high STR_2
  9235  011E2C  0100               	movlb	0	; () banked
  9236  011E2E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  9237  011E30  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
  9238  011E34  0103               	movlb	3	; () banked
  9239  011E36  2B66               	incf	my_terminal_loop@i_2171& (0+255),f,b
  9240  011E38                     l11520:
  9241                           
  9242                           ; BSR set to: 3
  9243  011E38  0E78               	movlw	low my_terminal_loop@command
  9244  011E3A  0100               	movlb	0	; () banked
  9245  011E3C  6F60               	movwf	ringbuf_num@rb& (0+255),b
  9246  011E3E  0E01               	movlw	high my_terminal_loop@command
  9247  011E40  0100               	movlb	0	; () banked
  9248  011E42  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
  9249  011E44  EC8C  F0A0         	call	_ringbuf_num	;wreg free
  9250  011E48  0103               	movlb	3	; () banked
  9251  011E4A  5166               	movf	my_terminal_loop@i_2171& (0+255),w,b
  9252  011E4C  0101               	movlb	1	; () banked
  9253  011E4E  6F96               	movwf	??_my_terminal_loop& (0+255),b
  9254  011E50  6B97               	clrf	(??_my_terminal_loop+1)& (0+255),b
  9255  011E52  0100               	movlb	0	; () banked
  9256  011E54  5160               	movf	?_ringbuf_num& (0+255),w,b
  9257  011E56  0101               	movlb	1	; () banked
  9258  011E58  5D96               	subwf	??_my_terminal_loop& (0+255),w,b
  9259  011E5A  0100               	movlb	0	; () banked
  9260  011E5C  5161               	movf	(?_ringbuf_num+1)& (0+255),w,b
  9261  011E5E  0101               	movlb	1	; () banked
  9262  011E60  5997               	subwfb	(??_my_terminal_loop+1)& (0+255),w,b
  9263  011E62  A0D8               	btfss	status,0,c
  9264  011E64  D7DB               	goto	l11516
  9265                           
  9266                           ; BSR set to: 1
  9267                           ;My_header\My_terminal.h: 63: ringbuf_delete(&command);
  9268                           
  9269                           ; BSR set to: 1
  9270  011E66  0E78               	movlw	low my_terminal_loop@command
  9271  011E68  0100               	movlb	0	; () banked
  9272  011E6A  6F60               	movwf	ringbuf_delete@rb& (0+255),b
  9273  011E6C  0E01               	movlw	high my_terminal_loop@command
  9274  011E6E  0100               	movlb	0	; () banked
  9275  011E70  6F61               	movwf	(ringbuf_delete@rb+1)& (0+255),b
  9276  011E72  EC74  F0B5         	call	_ringbuf_delete	;wreg free
  9277                           
  9278                           ;My_header\My_terminal.h: 64: break;
  9279  011E76  0012               	return	
  9280  011E78                     l11524:
  9281                           
  9282                           ;My_header\My_terminal.h: 66: if (ascii >= ' ' && ascii <= '~') {
  9283  011E78  0E1F               	movlw	31
  9284  011E7A  0103               	movlb	3	; () banked
  9285  011E7C  6567               	cpfsgt	my_terminal_loop@ascii& (0+255),b
  9286  011E7E  0012               	return	
  9287                           
  9288                           ; BSR set to: 3
  9289  011E80  0E7F               	movlw	127
  9290  011E82  0103               	movlb	3	; () banked
  9291  011E84  6167               	cpfslt	my_terminal_loop@ascii& (0+255),b
  9292  011E86  0012               	return	
  9293                           
  9294                           ; BSR set to: 3
  9295                           ;My_header\My_terminal.h: 67: ringbuf_put(&command, ascii);
  9296  011E88  0E78               	movlw	low my_terminal_loop@command
  9297  011E8A  0100               	movlb	0	; () banked
  9298  011E8C  6F83               	movwf	ringbuf_put@rb& (0+255),b
  9299  011E8E  0E01               	movlw	high my_terminal_loop@command
  9300  011E90  0100               	movlb	0	; () banked
  9301  011E92  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
  9302  011E94  C367  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  9303  011E98  EC77  F0A4         	call	_ringbuf_put	;wreg free
  9304                           
  9305                           ;My_header\My_terminal.h: 68: ringbuf_put(tx, ascii);
  9306  011E9C  C192  F083         	movff	my_terminal_loop@tx,ringbuf_put@rb
  9307  011EA0  C193  F084         	movff	my_terminal_loop@tx+1,ringbuf_put@rb+1
  9308  011EA4  C367  F085         	movff	my_terminal_loop@ascii,ringbuf_put@asciicode
  9309  011EA8  EC77  F0A4         	call	_ringbuf_put	;wreg free
  9310                           
  9311                           ;My_header\My_terminal.h: 71: }
  9312                           
  9313                           ;My_header\My_terminal.h: 69: }
  9314                           ;My_header\My_terminal.h: 70: break;
  9315  011EAC  0012               	return	
  9316  011EAE                     l11532:
  9317  011EAE  0103               	movlb	3	; () banked
  9318  011EB0  5167               	movf	my_terminal_loop@ascii& (0+255),w,b
  9319                           
  9320                           ; Switch size 1, requested type "space"
  9321                           ; Number of cases is 4, Range of values is 8 to 127
  9322                           ; switch strategies available:
  9323                           ; Name         Instructions Cycles
  9324                           ; simple_byte           13     7 (average)
  9325                           ;	Chosen strategy is simple_byte
  9326  011EB2  0A08               	xorlw	8	; case 8
  9327  011EB4  B4D8               	btfsc	status,2,c
  9328  011EB6  D799               	goto	l11510
  9329  011EB8  0A05               	xorlw	5	; case 13
  9330  011EBA  B4D8               	btfsc	status,2,c
  9331  011EBC  D682               	goto	l11472
  9332  011EBE  0A2D               	xorlw	45	; case 32
  9333  011EC0  B4D8               	btfsc	status,2,c
  9334  011EC2  D77E               	goto	l11508
  9335  011EC4  0A5F               	xorlw	95	; case 127
  9336  011EC6  B4D8               	btfsc	status,2,c
  9337  011EC8  D7A5               	goto	l11514
  9338  011ECA  D7D6               	goto	l11524
  9339  011ECC                     __end_of_my_terminal_loop:
  9340                           	opt stack 0
  9341                           tblptru	equ	0xFF8
  9342                           tblptrh	equ	0xFF7
  9343                           tblptrl	equ	0xFF6
  9344                           tablat	equ	0xFF5
  9345                           prodh	equ	0xFF4
  9346                           prodl	equ	0xFF3
  9347                           intcon	equ	0xFF2
  9348                           postinc0	equ	0xFEE
  9349                           wreg	equ	0xFE8
  9350                           indf1	equ	0xFE7
  9351                           postdec1	equ	0xFE5
  9352                           fsr1h	equ	0xFE2
  9353                           fsr1l	equ	0xFE1
  9354                           indf2	equ	0xFDF
  9355                           postinc2	equ	0xFDE
  9356                           postdec2	equ	0xFDD
  9357                           plusw2	equ	0xFDB
  9358                           fsr2h	equ	0xFDA
  9359                           fsr2l	equ	0xFD9
  9360                           status	equ	0xFD8
  9361                           
  9362 ;; *************** function _ringbuf_delete *****************
  9363 ;; Defined at:
  9364 ;;		line 85 in file "../My_header\My_ringbuf.h"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
  9367 ;;		 -> my_terminal_loop@command(8), 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;		None               void
  9372 ;; Registers used:
  9373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9383 ;;Total ram usage:        2 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:   11
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_my_terminal_loop
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text24
  9394  016AE8                     __ptext24:
  9395                           	opt stack 0
  9396  016AE8                     _ringbuf_delete:
  9397                           	opt stack 18
  9398                           
  9399                           ;My_header\My_ringbuf.h: 86: rb->head = rb->tail;
  9400                           
  9401                           ;incstack = 0
  9402  016AE8  0100               	movlb	0	; () banked
  9403  016AEA  EE20 F006          	lfsr	2,6
  9404  016AEE  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  9405  016AF0  26D9               	addwf	fsr2l,f,c
  9406  016AF2  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  9407  016AF4  22DA               	addwfc	fsr2h,f,c
  9408  016AF6  0100               	movlb	0	; () banked
  9409  016AF8  EE10 F004          	lfsr	1,4
  9410  016AFC  5160               	movf	ringbuf_delete@rb& (0+255),w,b
  9411  016AFE  26E1               	addwf	fsr1l,f,c
  9412  016B00  5161               	movf	(ringbuf_delete@rb+1)& (0+255),w,b
  9413  016B02  22E2               	addwfc	fsr1h,f,c
  9414  016B04  CFDE FFE6          	movff	postinc2,postinc1
  9415  016B08  CFDD FFE5          	movff	postdec2,postdec1
  9416                           
  9417                           ; BSR set to: 0
  9418  016B0C  0012               	return		;funcret
  9419  016B0E                     __end_of_ringbuf_delete:
  9420                           	opt stack 0
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           intcon	equ	0xFF2
  9428                           postinc0	equ	0xFEE
  9429                           wreg	equ	0xFE8
  9430                           indf1	equ	0xFE7
  9431                           postinc1	equ	0xFE6
  9432                           postdec1	equ	0xFE5
  9433                           fsr1h	equ	0xFE2
  9434                           fsr1l	equ	0xFE1
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           postdec2	equ	0xFDD
  9438                           plusw2	equ	0xFDB
  9439                           fsr2h	equ	0xFDA
  9440                           fsr2l	equ	0xFD9
  9441                           status	equ	0xFD8
  9442                           
  9443 ;; *************** function _ringbuf_backspace *****************
  9444 ;; Defined at:
  9445 ;;		line 78 in file "../My_header\My_ringbuf.h"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
  9448 ;;		 -> my_terminal_loop@command(8), 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;		None               void
  9453 ;; Registers used:
  9454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9462 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9463 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9464 ;;Total ram usage:        6 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:   12
  9467 ;; This function calls:
  9468 ;;		_ringbuf_num
  9469 ;; This function is called by:
  9470 ;;		_my_terminal_loop
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text25
  9475  015B1C                     __ptext25:
  9476                           	opt stack 0
  9477  015B1C                     _ringbuf_backspace:
  9478                           	opt stack 17
  9479                           
  9480                           ;My_header\My_ringbuf.h: 79: if (ringbuf_num(rb)) {
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;incstack = 0
  9484  015B1C  C068  F060         	movff	ringbuf_backspace@rb,ringbuf_num@rb
  9485  015B20  C069  F061         	movff	ringbuf_backspace@rb+1,ringbuf_num@rb+1
  9486  015B24  EC8C  F0A0         	call	_ringbuf_num	;wreg free
  9487  015B28  0100               	movlb	0	; () banked
  9488  015B2A  5160               	movf	?_ringbuf_num& (0+255),w,b
  9489  015B2C  0100               	movlb	0	; () banked
  9490  015B2E  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
  9491  015B30  B4D8               	btfsc	status,2,c
  9492  015B32  0012               	return	
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;My_header\My_ringbuf.h: 80: if (rb->head) rb->head--;
  9496  015B34  0100               	movlb	0	; () banked
  9497  015B36  EE20 F004          	lfsr	2,4
  9498  015B3A  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  9499  015B3C  26D9               	addwf	fsr2l,f,c
  9500  015B3E  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  9501  015B40  22DA               	addwfc	fsr2h,f,c
  9502  015B42  50DE               	movf	postinc2,w,c
  9503  015B44  10DE               	iorwf	postinc2,w,c
  9504  015B46  B4D8               	btfsc	status,2,c
  9505  015B48  D00B               	goto	l10902
  9506                           
  9507                           ; BSR set to: 0
  9508  015B4A  0100               	movlb	0	; () banked
  9509  015B4C  EE20 F004          	lfsr	2,4
  9510  015B50  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  9511  015B52  26D9               	addwf	fsr2l,f,c
  9512  015B54  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  9513  015B56  22DA               	addwfc	fsr2h,f,c
  9514  015B58  06DE               	decf	postinc2,f,c
  9515  015B5A  0E00               	movlw	0
  9516  015B5C  5ADD               	subwfb	postdec2,f,c
  9517  015B5E  0012               	return	
  9518  015B60                     l10902:
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;My_header\My_ringbuf.h: 81: else rb->head = rb->size - 1;
  9522  015B60  0EFF               	movlw	255
  9523  015B62  0100               	movlb	0	; () banked
  9524  015B64  6F6A               	movwf	??_ringbuf_backspace& (0+255),b
  9525  015B66  0EFF               	movlw	255
  9526  015B68  0100               	movlb	0	; () banked
  9527  015B6A  6F6B               	movwf	(??_ringbuf_backspace+1)& (0+255),b
  9528  015B6C  0100               	movlb	0	; () banked
  9529  015B6E  EE20 F002          	lfsr	2,2
  9530  015B72  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  9531  015B74  26D9               	addwf	fsr2l,f,c
  9532  015B76  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  9533  015B78  22DA               	addwfc	fsr2h,f,c
  9534  015B7A  CFDE F06C          	movff	postinc2,??_ringbuf_backspace+2
  9535  015B7E  CFDD F06D          	movff	postdec2,??_ringbuf_backspace+3
  9536  015B82  0100               	movlb	0	; () banked
  9537  015B84  516A               	movf	??_ringbuf_backspace& (0+255),w,b
  9538  015B86  0100               	movlb	0	; () banked
  9539  015B88  276C               	addwf	(??_ringbuf_backspace+2)& (0+255),f,b
  9540  015B8A  0100               	movlb	0	; () banked
  9541  015B8C  516B               	movf	(??_ringbuf_backspace+1)& (0+255),w,b
  9542  015B8E  0100               	movlb	0	; () banked
  9543  015B90  236D               	addwfc	(??_ringbuf_backspace+3)& (0+255),f,b
  9544  015B92  0100               	movlb	0	; () banked
  9545  015B94  EE20 F004          	lfsr	2,4
  9546  015B98  5168               	movf	ringbuf_backspace@rb& (0+255),w,b
  9547  015B9A  26D9               	addwf	fsr2l,f,c
  9548  015B9C  5169               	movf	(ringbuf_backspace@rb+1)& (0+255),w,b
  9549  015B9E  22DA               	addwfc	fsr2h,f,c
  9550  015BA0  C06C  FFDE         	movff	??_ringbuf_backspace+2,postinc2
  9551  015BA4  C06D  FFDD         	movff	??_ringbuf_backspace+3,postdec2
  9552                           
  9553                           ; BSR set to: 0
  9554  015BA8  0012               	return	
  9555  015BAA                     __end_of_ringbuf_backspace:
  9556                           	opt stack 0
  9557                           tblptru	equ	0xFF8
  9558                           tblptrh	equ	0xFF7
  9559                           tblptrl	equ	0xFF6
  9560                           tablat	equ	0xFF5
  9561                           prodh	equ	0xFF4
  9562                           prodl	equ	0xFF3
  9563                           intcon	equ	0xFF2
  9564                           postinc0	equ	0xFEE
  9565                           wreg	equ	0xFE8
  9566                           indf1	equ	0xFE7
  9567                           postinc1	equ	0xFE6
  9568                           postdec1	equ	0xFE5
  9569                           fsr1h	equ	0xFE2
  9570                           fsr1l	equ	0xFE1
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           postdec2	equ	0xFDD
  9574                           plusw2	equ	0xFDB
  9575                           fsr2h	equ	0xFDA
  9576                           fsr2l	equ	0xFD9
  9577                           status	equ	0xFD8
  9578                           
  9579 ;; *************** function _command_operation *****************
  9580 ;; Defined at:
  9581 ;;		line 362 in file "tasks.h"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  tx              2  118[BANK0 ] PTR struct ringbuf
  9584 ;;		 -> usb_tx(8), 
  9585 ;;  op0             2  120[BANK0 ] PTR unsigned char 
  9586 ;;		 -> my_terminal_loop@op0(20), 
  9587 ;;  op1             2  122[BANK0 ] PTR unsigned char 
  9588 ;;		 -> my_terminal_loop@op1(20), 
  9589 ;;  op2             2  124[BANK0 ] PTR unsigned char 
  9590 ;;		 -> my_terminal_loop@op2(20), 
  9591 ;;  op3             2  126[BANK0 ] PTR unsigned char 
  9592 ;;		 -> my_terminal_loop@op3(20), 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  percentage      1  128[BANK0 ] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;		None               void
  9597 ;; Registers used:
  9598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9604 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9607 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9608 ;;Total ram usage:       11 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:   18
  9611 ;; This function calls:
  9612 ;;		_command_get_data
  9613 ;;		_command_time
  9614 ;;		_ctmu_set_ratio
  9615 ;;		_my_atoi
  9616 ;;		_my_strcmp
  9617 ;;		_print_time
  9618 ;;		_ringbuf_put_str
  9619 ;; This function is called by:
  9620 ;;		_my_terminal_loop
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text26
  9625  010650                     __ptext26:
  9626                           	opt stack 0
  9627  010650                     _command_operation:
  9628                           	opt stack 11
  9629                           
  9630                           ;tasks.h: 363: if (!my_strcmp(op0, "help") || !my_strcmp(op0, "?")) {
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;incstack = 0
  9634  010650  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9635  010654  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9636  010658  0EBC               	movlw	low STR_55
  9637  01065A  0100               	movlb	0	; () banked
  9638  01065C  6F62               	movwf	my_strcmp@str2& (0+255),b
  9639  01065E  0EFF               	movlw	high STR_55
  9640  010660  0100               	movlb	0	; () banked
  9641  010662  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9642  010664  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9643  010668  0900               	iorlw	0
  9644  01066A  B4D8               	btfsc	status,2,c
  9645  01066C  D00F               	goto	l10976
  9646  01066E  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9647  010672  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9648  010676  0ED0               	movlw	low (STR_42+10)
  9649  010678  0100               	movlb	0	; () banked
  9650  01067A  6F62               	movwf	my_strcmp@str2& (0+255),b
  9651  01067C  0EFE               	movlw	high (STR_42+10)
  9652  01067E  0100               	movlb	0	; () banked
  9653  010680  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9654  010682  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9655  010686  0900               	iorlw	0
  9656  010688  A4D8               	btfss	status,2,c
  9657  01068A  D00C               	goto	l10978
  9658  01068C                     l10976:
  9659                           
  9660                           ;tasks.h: 364: ringbuf_put_str(tx,
  9661                           ;tasks.h: 365: "\t****************************\n"
  9662                           ;tasks.h: 366: "\t**** Charge Station 6.7 ****\n"
  9663                           ;tasks.h: 367: "\t**** Made by @Ryokeri   ****\n"
  9664                           ;tasks.h: 368: "\t****************************\n\n"
  9665                           ;tasks.h: 369: "\tcommand \topeland1\topeland2\n\n"
  9666                           ;tasks.h: 370: "\tprint_time(t)\n"
  9667                           ;tasks.h: 371: "\tadjust_time(at) [hand:y,M,d,h,m,s] [value(decimal)]\n"
  9668                           ;tasks.h: 372: "\tsettings(set) [port:left(l),center(c),right(r)]\n\t\t[auto_stop(as),al
      +                          ways_on(ao),integrating_reset(ir)]\n"
  9669  01068C  C0D6  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
  9670  010690  C0D7  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
  9671  010694  0EBC               	movlw	low STR_57
  9672  010696  0100               	movlb	0	; () banked
  9673  010698  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  9674  01069A  0EFB               	movlw	high STR_57
  9675  01069C  0100               	movlb	0	; () banked
  9676  01069E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  9677  0106A0  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
  9678  0106A4                     l10978:
  9679                           
  9680                           ;tasks.h: 377: }
  9681                           ;tasks.h: 378: if (!my_strcmp(op0, "settings") || !my_strcmp(op0, "set")) {
  9682  0106A4  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9683  0106A8  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9684  0106AC  0E5B               	movlw	low STR_58
  9685  0106AE  0100               	movlb	0	; () banked
  9686  0106B0  6F62               	movwf	my_strcmp@str2& (0+255),b
  9687  0106B2  0EFF               	movlw	high STR_58
  9688  0106B4  0100               	movlb	0	; () banked
  9689  0106B6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9690  0106B8  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9691  0106BC  0900               	iorlw	0
  9692  0106BE  B4D8               	btfsc	status,2,c
  9693  0106C0  D00F               	goto	l10982
  9694  0106C2  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9695  0106C6  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9696  0106CA  0EAD               	movlw	low (STR_68+2)
  9697  0106CC  0100               	movlb	0	; () banked
  9698  0106CE  6F62               	movwf	my_strcmp@str2& (0+255),b
  9699  0106D0  0EFF               	movlw	high (STR_68+2)
  9700  0106D2  0100               	movlb	0	; () banked
  9701  0106D4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9702  0106D6  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9703  0106DA  0900               	iorlw	0
  9704  0106DC  A4D8               	btfss	status,2,c
  9705  0106DE  D00C               	goto	l10984
  9706  0106E0                     l10982:
  9707                           
  9708                           ;tasks.h: 379: if (!my_strcmp(op1, "auto_stop")) {
  9709  0106E0  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9710  0106E4  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9711  0106E8  0E2C               	movlw	low STR_60
  9712  0106EA  0100               	movlb	0	; () banked
  9713  0106EC  6F62               	movwf	my_strcmp@str2& (0+255),b
  9714  0106EE  0EFF               	movlw	high STR_60
  9715  0106F0  0100               	movlb	0	; () banked
  9716  0106F2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9717  0106F4  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9718  0106F8                     l10984:
  9719                           
  9720                           ;tasks.h: 380: }
  9721                           ;tasks.h: 381: }
  9722                           ;tasks.h: 382: if (!my_strcmp(op0, "RESET();")) {
  9723  0106F8  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9724  0106FC  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9725  010700  0E40               	movlw	low STR_61
  9726  010702  0100               	movlb	0	; () banked
  9727  010704  6F62               	movwf	my_strcmp@str2& (0+255),b
  9728  010706  0EFF               	movlw	high STR_61
  9729  010708  0100               	movlb	0	; () banked
  9730  01070A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9731  01070C  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9732  010710  0900               	iorlw	0
  9733  010712  B4D8               	btfsc	status,2,c
  9734  010714  00FF               	reset		;# 
  9735                           
  9736                           ;tasks.h: 384: }
  9737                           ;tasks.h: 385: if (!my_strcmp(op0, "bootload")) {
  9738  010716  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9739  01071A  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9740  01071E  0E52               	movlw	low STR_62
  9741  010720  0100               	movlb	0	; () banked
  9742  010722  6F62               	movwf	my_strcmp@str2& (0+255),b
  9743  010724  0EFF               	movlw	high STR_62
  9744  010726  0100               	movlb	0	; () banked
  9745  010728  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9746  01072A  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9747  01072E  0900               	iorlw	0
  9748  010730  B4D8               	btfsc	status,2,c
  9749  010732  EF0E F000          	goto	28	;# 
  9750                           
  9751                           ;tasks.h: 387: }
  9752                           ;tasks.h: 388: command_time(tx, op0, op1, op2);
  9753  010736  C0D6  F0CD         	movff	command_operation@tx,command_time@tx
  9754  01073A  C0D7  F0CE         	movff	command_operation@tx+1,command_time@tx+1
  9755  01073E  C0D8  F0CF         	movff	command_operation@op0,command_time@op0
  9756  010742  C0D9  F0D0         	movff	command_operation@op0+1,command_time@op0+1
  9757  010746  C0DA  F0D1         	movff	command_operation@op1,command_time@op1
  9758  01074A  C0DB  F0D2         	movff	command_operation@op1+1,command_time@op1+1
  9759  01074E  C0DC  F0D3         	movff	command_operation@op2,command_time@op2
  9760  010752  C0DD  F0D4         	movff	command_operation@op2+1,command_time@op2+1
  9761  010756  EC66  F08F         	call	_command_time	;wreg free
  9762                           
  9763                           ;tasks.h: 389: if (!my_strcmp(op0, "touch")) {
  9764  01075A  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9765  01075E  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9766  010762  0E9F               	movlw	low STR_63
  9767  010764  0100               	movlb	0	; () banked
  9768  010766  6F62               	movwf	my_strcmp@str2& (0+255),b
  9769  010768  0EFF               	movlw	high STR_63
  9770  01076A  0100               	movlb	0	; () banked
  9771  01076C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9772  01076E  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9773  010772  0900               	iorlw	0
  9774  010774  A4D8               	btfss	status,2,c
  9775  010776  D077               	goto	l11020
  9776                           
  9777                           ;tasks.h: 390: if (!my_strcmp(op1, "initialize") || !my_strcmp(op1, "init")) {
  9778  010778  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9779  01077C  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9780  010780  0E0C               	movlw	low STR_64
  9781  010782  0100               	movlb	0	; () banked
  9782  010784  6F62               	movwf	my_strcmp@str2& (0+255),b
  9783  010786  0EFF               	movlw	high STR_64
  9784  010788  0100               	movlb	0	; () banked
  9785  01078A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9786  01078C  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9787  010790  0900               	iorlw	0
  9788  010792  B4D8               	btfsc	status,2,c
  9789  010794  D00F               	goto	l11000
  9790  010796  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9791  01079A  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9792  01079E  0ED0               	movlw	low STR_65
  9793  0107A0  0100               	movlb	0	; () banked
  9794  0107A2  6F62               	movwf	my_strcmp@str2& (0+255),b
  9795  0107A4  0EFF               	movlw	high STR_65
  9796  0107A6  0100               	movlb	0	; () banked
  9797  0107A8  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9798  0107AA  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9799  0107AE  0900               	iorlw	0
  9800  0107B0  A4D8               	btfss	status,2,c
  9801  0107B2  D02C               	goto	l11012
  9802  0107B4                     l11000:
  9803                           
  9804                           ;tasks.h: 391: uint8_t percentage = my_atoi(op2);
  9805  0107B4  C0DC  F07C         	movff	command_operation@op2,my_atoi@str
  9806  0107B8  C0DD  F07D         	movff	command_operation@op2+1,my_atoi@str+1
  9807  0107BC  EC78  F0AB         	call	_my_atoi	;wreg free
  9808  0107C0  0100               	movlb	0	; () banked
  9809  0107C2  517C               	movf	?_my_atoi& (0+255),w,b
  9810  0107C4  0100               	movlb	0	; () banked
  9811  0107C6  6FE0               	movwf	command_operation@percentage& (0+255),b
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;tasks.h: 392: if (percentage <= 100) {
  9815  0107C8  0E65               	movlw	101
  9816  0107CA  0100               	movlb	0	; () banked
  9817  0107CC  61E0               	cpfslt	command_operation@percentage& (0+255),b
  9818  0107CE  D012               	goto	l11010
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;tasks.h: 393: ctmu_ratio = percentage;
  9822  0107D0  C0E0  F049         	movff	command_operation@percentage,_ctmu_ratio
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;tasks.h: 394: ctmu_set_ratio(ctmu_ratio);
  9826  0107D4  5049               	movf	_ctmu_ratio,w,c
  9827  0107D6  EC03  F0A1         	call	_ctmu_set_ratio
  9828                           
  9829                           ;tasks.h: 395: ringbuf_put_str(tx, "\tinitializing complete\n");
  9830  0107DA  C0D6  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
  9831  0107DE  C0D7  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
  9832  0107E2  0EEF               	movlw	low STR_66
  9833  0107E4  0100               	movlb	0	; () banked
  9834  0107E6  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  9835  0107E8  0EFD               	movlw	high STR_66
  9836  0107EA  0100               	movlb	0	; () banked
  9837  0107EC  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  9838  0107EE  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
  9839                           
  9840                           ;tasks.h: 396: } else {
  9841  0107F2  D00C               	goto	l11012
  9842  0107F4                     l11010:
  9843                           
  9844                           ;tasks.h: 397: ringbuf_put_str(tx, "\tinvalid data\n\tinitializing failed\n");
  9845  0107F4  C0D6  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
  9846  0107F8  C0D7  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
  9847  0107FC  0ECB               	movlw	low STR_67
  9848  0107FE  0100               	movlb	0	; () banked
  9849  010800  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  9850  010802  0EFD               	movlw	high STR_67
  9851  010804  0100               	movlb	0	; () banked
  9852  010806  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  9853  010808  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
  9854  01080C                     l11012:
  9855                           
  9856                           ;tasks.h: 398: }
  9857                           ;tasks.h: 399: }
  9858                           ;tasks.h: 400: if (!my_strcmp(op1, "reset") || !my_strcmp(op1, "r")) {
  9859  01080C  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9860  010810  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9861  010814  0EAB               	movlw	low STR_68
  9862  010816  0100               	movlb	0	; () banked
  9863  010818  6F62               	movwf	my_strcmp@str2& (0+255),b
  9864  01081A  0EFF               	movlw	high STR_68
  9865  01081C  0100               	movlb	0	; () banked
  9866  01081E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9867  010820  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9868  010824  0900               	iorlw	0
  9869  010826  B4D8               	btfsc	status,2,c
  9870  010828  D00F               	goto	l11016
  9871  01082A  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9872  01082E  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9873  010832  0EC4               	movlw	low (STR_12+3)
  9874  010834  0100               	movlb	0	; () banked
  9875  010836  6F62               	movwf	my_strcmp@str2& (0+255),b
  9876  010838  0EFF               	movlw	high (STR_12+3)
  9877  01083A  0100               	movlb	0	; () banked
  9878  01083C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9879  01083E  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9880  010842  0900               	iorlw	0
  9881  010844  A4D8               	btfss	status,2,c
  9882  010846  D00F               	goto	l11020
  9883  010848                     l11016:
  9884                           
  9885                           ;tasks.h: 401: ctmu_set_ratio(ctmu_ratio);
  9886  010848  5049               	movf	_ctmu_ratio,w,c
  9887  01084A  EC03  F0A1         	call	_ctmu_set_ratio
  9888                           
  9889                           ;tasks.h: 402: ringbuf_put_str(tx, "\tseting complete\n");
  9890  01084E  C0D6  F08A         	movff	command_operation@tx,ringbuf_put_str@rb
  9891  010852  C0D7  F08B         	movff	command_operation@tx+1,ringbuf_put_str@rb+1
  9892  010856  0E1A               	movlw	low STR_70
  9893  010858  0100               	movlb	0	; () banked
  9894  01085A  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
  9895  01085C  0EFE               	movlw	high STR_70
  9896  01085E  0100               	movlb	0	; () banked
  9897  010860  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
  9898  010862  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
  9899  010866                     l11020:
  9900                           
  9901                           ;tasks.h: 403: }
  9902                           ;tasks.h: 404: }
  9903                           ;tasks.h: 405: if (!my_strcmp(op0, "display") || !my_strcmp(op0, "d")) {
  9904  010866  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9905  01086A  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9906  01086E  0E74               	movlw	low STR_71
  9907  010870  0100               	movlb	0	; () banked
  9908  010872  6F62               	movwf	my_strcmp@str2& (0+255),b
  9909  010874  0EFF               	movlw	high STR_71
  9910  010876  0100               	movlb	0	; () banked
  9911  010878  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9912  01087A  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9913  01087E  0900               	iorlw	0
  9914  010880  B4D8               	btfsc	status,2,c
  9915  010882  D00F               	goto	l11024
  9916  010884  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
  9917  010888  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
  9918  01088C  0E59               	movlw	low (STR_62+7)
  9919  01088E  0100               	movlb	0	; () banked
  9920  010890  6F62               	movwf	my_strcmp@str2& (0+255),b
  9921  010892  0EFF               	movlw	high (STR_62+7)
  9922  010894  0100               	movlb	0	; () banked
  9923  010896  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9924  010898  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9925  01089C  0900               	iorlw	0
  9926  01089E  A4D8               	btfss	status,2,c
  9927  0108A0  D1D4               	goto	l11090
  9928  0108A2                     l11024:
  9929                           
  9930                           ;tasks.h: 406: if (!my_strcmp(op1, "left") || !my_strcmp(op1, "l")) {
  9931  0108A2  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9932  0108A6  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9933  0108AA  0ECB               	movlw	low STR_73
  9934  0108AC  0100               	movlb	0	; () banked
  9935  0108AE  6F62               	movwf	my_strcmp@str2& (0+255),b
  9936  0108B0  0EFF               	movlw	high STR_73
  9937  0108B2  0100               	movlb	0	; () banked
  9938  0108B4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9939  0108B6  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9940  0108BA  0900               	iorlw	0
  9941  0108BC  B4D8               	btfsc	status,2,c
  9942  0108BE  D00F               	goto	l11028
  9943  0108C0  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
  9944  0108C4  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
  9945  0108C8  0EFA               	movlw	low STR_74
  9946  0108CA  0100               	movlb	0	; () banked
  9947  0108CC  6F62               	movwf	my_strcmp@str2& (0+255),b
  9948  0108CE  0EFF               	movlw	high STR_74
  9949  0108D0  0100               	movlb	0	; () banked
  9950  0108D2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9951  0108D4  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9952  0108D8  0900               	iorlw	0
  9953  0108DA  A4D8               	btfss	status,2,c
  9954  0108DC  D07E               	goto	l11046
  9955  0108DE                     l11028:
  9956                           
  9957                           ;tasks.h: 407: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
  9958  0108DE  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
  9959  0108E2  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
  9960  0108E6  0E12               	movlw	low (STR_77+11)
  9961  0108E8  0100               	movlb	0	; () banked
  9962  0108EA  6F62               	movwf	my_strcmp@str2& (0+255),b
  9963  0108EC  0EFE               	movlw	high (STR_77+11)
  9964  0108EE  0100               	movlb	0	; () banked
  9965  0108F0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9966  0108F2  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9967  0108F6  0900               	iorlw	0
  9968  0108F8  B4D8               	btfsc	status,2,c
  9969  0108FA  D00F               	goto	l11032
  9970  0108FC  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
  9971  010900  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
  9972  010904  0EF1               	movlw	low (STR_78+1)
  9973  010906  0100               	movlb	0	; () banked
  9974  010908  6F62               	movwf	my_strcmp@str2& (0+255),b
  9975  01090A  0EFF               	movlw	high (STR_78+1)
  9976  01090C  0100               	movlb	0	; () banked
  9977  01090E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
  9978  010910  ECD5  F0AA         	call	_my_strcmp	;wreg free
  9979  010914  0900               	iorlw	0
  9980  010916  A4D8               	btfss	status,2,c
  9981  010918  D00C               	goto	l11034
  9982  01091A                     l11032:
  9983                           
  9984                           ;tasks.h: 408: command_get_data(tx, 0, 0);
  9985  01091A  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
  9986  01091E  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
  9987  010922  0E00               	movlw	0
  9988  010924  0100               	movlb	0	; () banked
  9989  010926  6F94               	movwf	command_get_data@content& (0+255),b
  9990  010928  0E00               	movlw	0
  9991  01092A  0100               	movlb	0	; () banked
  9992  01092C  6F95               	movwf	command_get_data@i& (0+255),b
  9993  01092E  EC0B  F089         	call	_command_get_data	;wreg free
  9994  010932                     l11034:
  9995                           
  9996                           ;tasks.h: 409: }
  9997                           ;tasks.h: 410: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
  9998  010932  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
  9999  010936  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10000  01093A  0E07               	movlw	low STR_77
 10001  01093C  0100               	movlb	0	; () banked
 10002  01093E  6F62               	movwf	my_strcmp@str2& (0+255),b
 10003  010940  0EFE               	movlw	high STR_77
 10004  010942  0100               	movlb	0	; () banked
 10005  010944  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10006  010946  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10007  01094A  0900               	iorlw	0
 10008  01094C  B4D8               	btfsc	status,2,c
 10009  01094E  D00F               	goto	l11038
 10010  010950  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10011  010954  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10012  010958  0EF0               	movlw	low STR_78
 10013  01095A  0100               	movlb	0	; () banked
 10014  01095C  6F62               	movwf	my_strcmp@str2& (0+255),b
 10015  01095E  0EFF               	movlw	high STR_78
 10016  010960  0100               	movlb	0	; () banked
 10017  010962  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10018  010964  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10019  010968  0900               	iorlw	0
 10020  01096A  A4D8               	btfss	status,2,c
 10021  01096C  D00C               	goto	l11040
 10022  01096E                     l11038:
 10023                           
 10024                           ;tasks.h: 411: command_get_data(tx, 1, 0);
 10025  01096E  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10026  010972  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10027  010976  0E01               	movlw	1
 10028  010978  0100               	movlb	0	; () banked
 10029  01097A  6F94               	movwf	command_get_data@content& (0+255),b
 10030  01097C  0E00               	movlw	0
 10031  01097E  0100               	movlb	0	; () banked
 10032  010980  6F95               	movwf	command_get_data@i& (0+255),b
 10033  010982  EC0B  F089         	call	_command_get_data	;wreg free
 10034  010986                     l11040:
 10035                           
 10036                           ;tasks.h: 412: }
 10037                           ;tasks.h: 413: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 10038  010986  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10039  01098A  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10040  01098E  0E6F               	movlw	low STR_79
 10041  010990  0100               	movlb	0	; () banked
 10042  010992  6F62               	movwf	my_strcmp@str2& (0+255),b
 10043  010994  0EFE               	movlw	high STR_79
 10044  010996  0100               	movlb	0	; () banked
 10045  010998  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10046  01099A  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10047  01099E  0900               	iorlw	0
 10048  0109A0  B4D8               	btfsc	status,2,c
 10049  0109A2  D00F               	goto	l11044
 10050  0109A4  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10051  0109A8  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10052  0109AC  0ED2               	movlw	low (STR_65+2)
 10053  0109AE  0100               	movlb	0	; () banked
 10054  0109B0  6F62               	movwf	my_strcmp@str2& (0+255),b
 10055  0109B2  0EFF               	movlw	high (STR_65+2)
 10056  0109B4  0100               	movlb	0	; () banked
 10057  0109B6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10058  0109B8  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10059  0109BC  0900               	iorlw	0
 10060  0109BE  A4D8               	btfss	status,2,c
 10061  0109C0  D00C               	goto	l11046
 10062  0109C2                     l11044:
 10063                           
 10064                           ;tasks.h: 414: command_get_data(tx, 2, 0);
 10065  0109C2  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10066  0109C6  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10067  0109CA  0E02               	movlw	2
 10068  0109CC  0100               	movlb	0	; () banked
 10069  0109CE  6F94               	movwf	command_get_data@content& (0+255),b
 10070  0109D0  0E00               	movlw	0
 10071  0109D2  0100               	movlb	0	; () banked
 10072  0109D4  6F95               	movwf	command_get_data@i& (0+255),b
 10073  0109D6  EC0B  F089         	call	_command_get_data	;wreg free
 10074  0109DA                     l11046:
 10075                           
 10076                           ;tasks.h: 415: }
 10077                           ;tasks.h: 417: }
 10078                           ;tasks.h: 418: if (!my_strcmp(op1, "center") || !my_strcmp(op1, "c")) {
 10079  0109DA  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
 10080  0109DE  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 10081  0109E2  0E98               	movlw	low STR_81
 10082  0109E4  0100               	movlb	0	; () banked
 10083  0109E6  6F62               	movwf	my_strcmp@str2& (0+255),b
 10084  0109E8  0EFF               	movlw	high STR_81
 10085  0109EA  0100               	movlb	0	; () banked
 10086  0109EC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10087  0109EE  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10088  0109F2  0900               	iorlw	0
 10089  0109F4  B4D8               	btfsc	status,2,c
 10090  0109F6  D00F               	goto	l11050
 10091  0109F8  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
 10092  0109FC  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 10093  010A00  0EF1               	movlw	low (STR_78+1)
 10094  010A02  0100               	movlb	0	; () banked
 10095  010A04  6F62               	movwf	my_strcmp@str2& (0+255),b
 10096  010A06  0EFF               	movlw	high (STR_78+1)
 10097  010A08  0100               	movlb	0	; () banked
 10098  010A0A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10099  010A0C  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10100  010A10  0900               	iorlw	0
 10101  010A12  A4D8               	btfss	status,2,c
 10102  010A14  D07E               	goto	l11068
 10103  010A16                     l11050:
 10104                           
 10105                           ;tasks.h: 419: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 10106  010A16  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10107  010A1A  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10108  010A1E  0E12               	movlw	low (STR_77+11)
 10109  010A20  0100               	movlb	0	; () banked
 10110  010A22  6F62               	movwf	my_strcmp@str2& (0+255),b
 10111  010A24  0EFE               	movlw	high (STR_77+11)
 10112  010A26  0100               	movlb	0	; () banked
 10113  010A28  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10114  010A2A  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10115  010A2E  0900               	iorlw	0
 10116  010A30  B4D8               	btfsc	status,2,c
 10117  010A32  D00F               	goto	l11054
 10118  010A34  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10119  010A38  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10120  010A3C  0EF1               	movlw	low (STR_78+1)
 10121  010A3E  0100               	movlb	0	; () banked
 10122  010A40  6F62               	movwf	my_strcmp@str2& (0+255),b
 10123  010A42  0EFF               	movlw	high (STR_78+1)
 10124  010A44  0100               	movlb	0	; () banked
 10125  010A46  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10126  010A48  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10127  010A4C  0900               	iorlw	0
 10128  010A4E  A4D8               	btfss	status,2,c
 10129  010A50  D00C               	goto	l11056
 10130  010A52                     l11054:
 10131                           
 10132                           ;tasks.h: 420: command_get_data(tx, 0, 1);
 10133  010A52  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10134  010A56  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10135  010A5A  0E00               	movlw	0
 10136  010A5C  0100               	movlb	0	; () banked
 10137  010A5E  6F94               	movwf	command_get_data@content& (0+255),b
 10138  010A60  0E01               	movlw	1
 10139  010A62  0100               	movlb	0	; () banked
 10140  010A64  6F95               	movwf	command_get_data@i& (0+255),b
 10141  010A66  EC0B  F089         	call	_command_get_data	;wreg free
 10142  010A6A                     l11056:
 10143                           
 10144                           ;tasks.h: 421: }
 10145                           ;tasks.h: 422: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 10146  010A6A  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10147  010A6E  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10148  010A72  0E07               	movlw	low STR_77
 10149  010A74  0100               	movlb	0	; () banked
 10150  010A76  6F62               	movwf	my_strcmp@str2& (0+255),b
 10151  010A78  0EFE               	movlw	high STR_77
 10152  010A7A  0100               	movlb	0	; () banked
 10153  010A7C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10154  010A7E  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10155  010A82  0900               	iorlw	0
 10156  010A84  B4D8               	btfsc	status,2,c
 10157  010A86  D00F               	goto	l11060
 10158  010A88  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10159  010A8C  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10160  010A90  0EF0               	movlw	low STR_78
 10161  010A92  0100               	movlb	0	; () banked
 10162  010A94  6F62               	movwf	my_strcmp@str2& (0+255),b
 10163  010A96  0EFF               	movlw	high STR_78
 10164  010A98  0100               	movlb	0	; () banked
 10165  010A9A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10166  010A9C  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10167  010AA0  0900               	iorlw	0
 10168  010AA2  A4D8               	btfss	status,2,c
 10169  010AA4  D00C               	goto	l11062
 10170  010AA6                     l11060:
 10171                           
 10172                           ;tasks.h: 423: command_get_data(tx, 1, 1);
 10173  010AA6  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10174  010AAA  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10175  010AAE  0E01               	movlw	1
 10176  010AB0  0100               	movlb	0	; () banked
 10177  010AB2  6F94               	movwf	command_get_data@content& (0+255),b
 10178  010AB4  0E01               	movlw	1
 10179  010AB6  0100               	movlb	0	; () banked
 10180  010AB8  6F95               	movwf	command_get_data@i& (0+255),b
 10181  010ABA  EC0B  F089         	call	_command_get_data	;wreg free
 10182  010ABE                     l11062:
 10183                           
 10184                           ;tasks.h: 424: }
 10185                           ;tasks.h: 425: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 10186  010ABE  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10187  010AC2  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10188  010AC6  0E6F               	movlw	low STR_79
 10189  010AC8  0100               	movlb	0	; () banked
 10190  010ACA  6F62               	movwf	my_strcmp@str2& (0+255),b
 10191  010ACC  0EFE               	movlw	high STR_79
 10192  010ACE  0100               	movlb	0	; () banked
 10193  010AD0  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10194  010AD2  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10195  010AD6  0900               	iorlw	0
 10196  010AD8  B4D8               	btfsc	status,2,c
 10197  010ADA  D00F               	goto	l11066
 10198  010ADC  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10199  010AE0  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10200  010AE4  0ED2               	movlw	low (STR_65+2)
 10201  010AE6  0100               	movlb	0	; () banked
 10202  010AE8  6F62               	movwf	my_strcmp@str2& (0+255),b
 10203  010AEA  0EFF               	movlw	high (STR_65+2)
 10204  010AEC  0100               	movlb	0	; () banked
 10205  010AEE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10206  010AF0  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10207  010AF4  0900               	iorlw	0
 10208  010AF6  A4D8               	btfss	status,2,c
 10209  010AF8  D00C               	goto	l11068
 10210  010AFA                     l11066:
 10211                           
 10212                           ;tasks.h: 426: command_get_data(tx, 2, 1);
 10213  010AFA  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10214  010AFE  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10215  010B02  0E02               	movlw	2
 10216  010B04  0100               	movlb	0	; () banked
 10217  010B06  6F94               	movwf	command_get_data@content& (0+255),b
 10218  010B08  0E01               	movlw	1
 10219  010B0A  0100               	movlb	0	; () banked
 10220  010B0C  6F95               	movwf	command_get_data@i& (0+255),b
 10221  010B0E  EC0B  F089         	call	_command_get_data	;wreg free
 10222  010B12                     l11068:
 10223                           
 10224                           ;tasks.h: 427: }
 10225                           ;tasks.h: 428: }
 10226                           ;tasks.h: 429: if (!my_strcmp(op1, "right") || !my_strcmp(op1, "r")) {
 10227  010B12  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
 10228  010B16  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 10229  010B1A  0EB1               	movlw	low STR_89
 10230  010B1C  0100               	movlb	0	; () banked
 10231  010B1E  6F62               	movwf	my_strcmp@str2& (0+255),b
 10232  010B20  0EFF               	movlw	high STR_89
 10233  010B22  0100               	movlb	0	; () banked
 10234  010B24  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10235  010B26  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10236  010B2A  0900               	iorlw	0
 10237  010B2C  B4D8               	btfsc	status,2,c
 10238  010B2E  D00F               	goto	l11072
 10239  010B30  C0DA  F060         	movff	command_operation@op1,my_strcmp@str1
 10240  010B34  C0DB  F061         	movff	command_operation@op1+1,my_strcmp@str1+1
 10241  010B38  0EC4               	movlw	low (STR_12+3)
 10242  010B3A  0100               	movlb	0	; () banked
 10243  010B3C  6F62               	movwf	my_strcmp@str2& (0+255),b
 10244  010B3E  0EFF               	movlw	high (STR_12+3)
 10245  010B40  0100               	movlb	0	; () banked
 10246  010B42  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10247  010B44  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10248  010B48  0900               	iorlw	0
 10249  010B4A  A4D8               	btfss	status,2,c
 10250  010B4C  D07E               	goto	l11090
 10251  010B4E                     l11072:
 10252                           
 10253                           ;tasks.h: 430: if (!my_strcmp(op2, "current") || !my_strcmp(op2, "c")) {
 10254  010B4E  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10255  010B52  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10256  010B56  0E12               	movlw	low (STR_77+11)
 10257  010B58  0100               	movlb	0	; () banked
 10258  010B5A  6F62               	movwf	my_strcmp@str2& (0+255),b
 10259  010B5C  0EFE               	movlw	high (STR_77+11)
 10260  010B5E  0100               	movlb	0	; () banked
 10261  010B60  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10262  010B62  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10263  010B66  0900               	iorlw	0
 10264  010B68  B4D8               	btfsc	status,2,c
 10265  010B6A  D00F               	goto	l11076
 10266  010B6C  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10267  010B70  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10268  010B74  0EF1               	movlw	low (STR_78+1)
 10269  010B76  0100               	movlb	0	; () banked
 10270  010B78  6F62               	movwf	my_strcmp@str2& (0+255),b
 10271  010B7A  0EFF               	movlw	high (STR_78+1)
 10272  010B7C  0100               	movlb	0	; () banked
 10273  010B7E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10274  010B80  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10275  010B84  0900               	iorlw	0
 10276  010B86  A4D8               	btfss	status,2,c
 10277  010B88  D00C               	goto	l11078
 10278  010B8A                     l11076:
 10279                           
 10280                           ;tasks.h: 431: command_get_data(tx, 0, 2);
 10281  010B8A  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10282  010B8E  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10283  010B92  0E00               	movlw	0
 10284  010B94  0100               	movlb	0	; () banked
 10285  010B96  6F94               	movwf	command_get_data@content& (0+255),b
 10286  010B98  0E02               	movlw	2
 10287  010B9A  0100               	movlb	0	; () banked
 10288  010B9C  6F95               	movwf	command_get_data@i& (0+255),b
 10289  010B9E  EC0B  F089         	call	_command_get_data	;wreg free
 10290  010BA2                     l11078:
 10291                           
 10292                           ;tasks.h: 432: }
 10293                           ;tasks.h: 433: if (!my_strcmp(op2, "integrated_current") || !my_strcmp(op2, "ic")) {
 10294  010BA2  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10295  010BA6  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10296  010BAA  0E07               	movlw	low STR_77
 10297  010BAC  0100               	movlb	0	; () banked
 10298  010BAE  6F62               	movwf	my_strcmp@str2& (0+255),b
 10299  010BB0  0EFE               	movlw	high STR_77
 10300  010BB2  0100               	movlb	0	; () banked
 10301  010BB4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10302  010BB6  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10303  010BBA  0900               	iorlw	0
 10304  010BBC  B4D8               	btfsc	status,2,c
 10305  010BBE  D00F               	goto	l11082
 10306  010BC0  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10307  010BC4  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10308  010BC8  0EF0               	movlw	low STR_78
 10309  010BCA  0100               	movlb	0	; () banked
 10310  010BCC  6F62               	movwf	my_strcmp@str2& (0+255),b
 10311  010BCE  0EFF               	movlw	high STR_78
 10312  010BD0  0100               	movlb	0	; () banked
 10313  010BD2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10314  010BD4  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10315  010BD8  0900               	iorlw	0
 10316  010BDA  A4D8               	btfss	status,2,c
 10317  010BDC  D00C               	goto	l11084
 10318  010BDE                     l11082:
 10319                           
 10320                           ;tasks.h: 434: command_get_data(tx, 1, 2);
 10321  010BDE  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10322  010BE2  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10323  010BE6  0E01               	movlw	1
 10324  010BE8  0100               	movlb	0	; () banked
 10325  010BEA  6F94               	movwf	command_get_data@content& (0+255),b
 10326  010BEC  0E02               	movlw	2
 10327  010BEE  0100               	movlb	0	; () banked
 10328  010BF0  6F95               	movwf	command_get_data@i& (0+255),b
 10329  010BF2  EC0B  F089         	call	_command_get_data	;wreg free
 10330  010BF6                     l11084:
 10331                           
 10332                           ;tasks.h: 435: }
 10333                           ;tasks.h: 436: if (!my_strcmp(op2, "integrated_time") || !my_strcmp(op2, "it")) {
 10334  010BF6  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10335  010BFA  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10336  010BFE  0E6F               	movlw	low STR_79
 10337  010C00  0100               	movlb	0	; () banked
 10338  010C02  6F62               	movwf	my_strcmp@str2& (0+255),b
 10339  010C04  0EFE               	movlw	high STR_79
 10340  010C06  0100               	movlb	0	; () banked
 10341  010C08  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10342  010C0A  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10343  010C0E  0900               	iorlw	0
 10344  010C10  B4D8               	btfsc	status,2,c
 10345  010C12  D00F               	goto	l11088
 10346  010C14  C0DC  F060         	movff	command_operation@op2,my_strcmp@str1
 10347  010C18  C0DD  F061         	movff	command_operation@op2+1,my_strcmp@str1+1
 10348  010C1C  0ED2               	movlw	low (STR_65+2)
 10349  010C1E  0100               	movlb	0	; () banked
 10350  010C20  6F62               	movwf	my_strcmp@str2& (0+255),b
 10351  010C22  0EFF               	movlw	high (STR_65+2)
 10352  010C24  0100               	movlb	0	; () banked
 10353  010C26  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10354  010C28  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10355  010C2C  0900               	iorlw	0
 10356  010C2E  A4D8               	btfss	status,2,c
 10357  010C30  D00C               	goto	l11090
 10358  010C32                     l11088:
 10359                           
 10360                           ;tasks.h: 437: command_get_data(tx, 2, 2);
 10361  010C32  C0D6  F092         	movff	command_operation@tx,command_get_data@tx
 10362  010C36  C0D7  F093         	movff	command_operation@tx+1,command_get_data@tx+1
 10363  010C3A  0E02               	movlw	2
 10364  010C3C  0100               	movlb	0	; () banked
 10365  010C3E  6F94               	movwf	command_get_data@content& (0+255),b
 10366  010C40  0E02               	movlw	2
 10367  010C42  0100               	movlb	0	; () banked
 10368  010C44  6F95               	movwf	command_get_data@i& (0+255),b
 10369  010C46  EC0B  F089         	call	_command_get_data	;wreg free
 10370  010C4A                     l11090:
 10371                           
 10372                           ;tasks.h: 438: }
 10373                           ;tasks.h: 439: }
 10374                           ;tasks.h: 440: }
 10375                           ;tasks.h: 441: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")) {
 10376  010C4A  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
 10377  010C4E  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 10378  010C52  0E01               	movlw	low STR_7
 10379  010C54  0100               	movlb	0	; () banked
 10380  010C56  6F62               	movwf	my_strcmp@str2& (0+255),b
 10381  010C58  0EFF               	movlw	high STR_7
 10382  010C5A  0100               	movlb	0	; () banked
 10383  010C5C  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10384  010C5E  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10385  010C62  0900               	iorlw	0
 10386  010C64  B4D8               	btfsc	status,2,c
 10387  010C66  D00F               	goto	l11094
 10388  010C68  C0D8  F060         	movff	command_operation@op0,my_strcmp@str1
 10389  010C6C  C0D9  F061         	movff	command_operation@op0+1,my_strcmp@str1+1
 10390  010C70  0EF4               	movlw	low (STR_9+1)
 10391  010C72  0100               	movlb	0	; () banked
 10392  010C74  6F62               	movwf	my_strcmp@str2& (0+255),b
 10393  010C76  0EFF               	movlw	high (STR_9+1)
 10394  010C78  0100               	movlb	0	; () banked
 10395  010C7A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10396  010C7C  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10397  010C80  0900               	iorlw	0
 10398  010C82  A4D8               	btfss	status,2,c
 10399  010C84  0012               	return	
 10400  010C86                     l11094:
 10401                           
 10402                           ;tasks.h: 442: print_time(tx);
 10403  010C86  C0D6  F0A6         	movff	command_operation@tx,print_time@tx
 10404  010C8A  C0D7  F0A7         	movff	command_operation@tx+1,print_time@tx+1
 10405  010C8E  ECB1  F0AC         	call	_print_time	;wreg free
 10406  010C92  0012               	return	
 10407  010C94                     __end_of_command_operation:
 10408                           	opt stack 0
 10409                           tblptru	equ	0xFF8
 10410                           tblptrh	equ	0xFF7
 10411                           tblptrl	equ	0xFF6
 10412                           tablat	equ	0xFF5
 10413                           prodh	equ	0xFF4
 10414                           prodl	equ	0xFF3
 10415                           intcon	equ	0xFF2
 10416                           postinc0	equ	0xFEE
 10417                           wreg	equ	0xFE8
 10418                           indf1	equ	0xFE7
 10419                           postinc1	equ	0xFE6
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           plusw2	equ	0xFDB
 10427                           fsr2h	equ	0xFDA
 10428                           fsr2l	equ	0xFD9
 10429                           status	equ	0xFD8
 10430                           
 10431 ;; *************** function _ctmu_set_ratio *****************
 10432 ;; Defined at:
 10433 ;;		line 320 in file "tasks.h"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;  percentage      1    wreg     unsigned char 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;  percentage      1   35[BANK0 ] unsigned char 
 10438 ;; Return value:  Size  Location     Type
 10439 ;;		None               void
 10440 ;; Registers used:
 10441 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 0/0
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10451 ;;Total ram usage:        1 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; Hardware stack levels required when called:   13
 10454 ;; This function calls:
 10455 ;;		_CTMU_read
 10456 ;;		___lwdiv
 10457 ;;		___wmul
 10458 ;; This function is called by:
 10459 ;;		_command_operation
 10460 ;;		_main
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text27
 10465  014206                     __ptext27:
 10466                           	opt stack 0
 10467  014206                     _ctmu_set_ratio:
 10468                           	opt stack 15
 10469                           
 10470                           ;incstack = 0
 10471                           ;ctmu_set_ratio@percentage stored from wreg
 10472  014206  0100               	movlb	0	; () banked
 10473  014208  6F83               	movwf	ctmu_set_ratio@percentage& (0+255),b
 10474                           
 10475                           ;tasks.h: 321: port[0].ctmu_value = (uint16_t) percentage * CTMU_read(0) / 100;
 10476  01420A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 10477  01420E  0100               	movlb	0	; () banked
 10478  014210  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 10479  014212  0E00               	movlw	0
 10480  014214  EC42  F0A7         	call	_CTMU_read
 10481  014218  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 10482  01421C  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 10483  014220  ECED  F0B3         	call	___wmul	;wreg free
 10484  014224  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 10485  014228  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 10486  01422C  0E00               	movlw	0
 10487  01422E  0100               	movlb	0	; () banked
 10488  014230  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10489  014232  0E64               	movlw	100
 10490  014234  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 10491  014236  EC66  F0AF         	call	___lwdiv	;wreg free
 10492  01423A  C07C  F12F         	movff	?___lwdiv,_port+4
 10493  01423E  C07D  F130         	movff	?___lwdiv+1,_port+5
 10494                           
 10495                           ;tasks.h: 322: port[1].ctmu_value = (uint16_t) percentage * CTMU_read(1) / 100;
 10496  014242  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 10497  014246  0100               	movlb	0	; () banked
 10498  014248  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 10499  01424A  0E01               	movlw	1
 10500  01424C  EC42  F0A7         	call	_CTMU_read
 10501  014250  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 10502  014254  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 10503  014258  ECED  F0B3         	call	___wmul	;wreg free
 10504  01425C  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 10505  014260  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 10506  014264  0E00               	movlw	0
 10507  014266  0100               	movlb	0	; () banked
 10508  014268  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10509  01426A  0E64               	movlw	100
 10510  01426C  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 10511  01426E  EC66  F0AF         	call	___lwdiv	;wreg free
 10512  014272  C07C  F146         	movff	?___lwdiv,_port+27
 10513  014276  C07D  F147         	movff	?___lwdiv+1,_port+28
 10514                           
 10515                           ;tasks.h: 323: port[2].ctmu_value = (uint16_t) percentage * CTMU_read(2) / 100;
 10516  01427A  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 10517  01427E  0100               	movlb	0	; () banked
 10518  014280  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 10519  014282  0E02               	movlw	2
 10520  014284  EC42  F0A7         	call	_CTMU_read
 10521  014288  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 10522  01428C  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 10523  014290  ECED  F0B3         	call	___wmul	;wreg free
 10524  014294  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 10525  014298  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 10526  01429C  0E00               	movlw	0
 10527  01429E  0100               	movlb	0	; () banked
 10528  0142A0  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10529  0142A2  0E64               	movlw	100
 10530  0142A4  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 10531  0142A6  EC66  F0AF         	call	___lwdiv	;wreg free
 10532  0142AA  C07C  F15D         	movff	?___lwdiv,_port+50
 10533  0142AE  C07D  F15E         	movff	?___lwdiv+1,_port+51
 10534                           
 10535                           ;tasks.h: 324: ctmu_value_m = (uint16_t) percentage * CTMU_read(3) / 100;
 10536  0142B2  C083  F076         	movff	ctmu_set_ratio@percentage,___wmul@multiplier
 10537  0142B6  0100               	movlb	0	; () banked
 10538  0142B8  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
 10539  0142BA  0E03               	movlw	3
 10540  0142BC  EC42  F0A7         	call	_CTMU_read
 10541  0142C0  C06D  F078         	movff	?_CTMU_read,___wmul@multiplicand
 10542  0142C4  C06E  F079         	movff	?_CTMU_read+1,___wmul@multiplicand+1
 10543  0142C8  ECED  F0B3         	call	___wmul	;wreg free
 10544  0142CC  C076  F07C         	movff	?___wmul,___lwdiv@dividend
 10545  0142D0  C077  F07D         	movff	?___wmul+1,___lwdiv@dividend+1
 10546  0142D4  0E00               	movlw	0
 10547  0142D6  0100               	movlb	0	; () banked
 10548  0142D8  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 10549  0142DA  0E64               	movlw	100
 10550  0142DC  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 10551  0142DE  EC66  F0AF         	call	___lwdiv	;wreg free
 10552  0142E2  C07C  F11F         	movff	?___lwdiv,_ctmu_value_m
 10553  0142E6  C07D  F120         	movff	?___lwdiv+1,_ctmu_value_m+1
 10554  0142EA  0012               	return		;funcret
 10555  0142EC                     __end_of_ctmu_set_ratio:
 10556                           	opt stack 0
 10557                           tblptru	equ	0xFF8
 10558                           tblptrh	equ	0xFF7
 10559                           tblptrl	equ	0xFF6
 10560                           tablat	equ	0xFF5
 10561                           prodh	equ	0xFF4
 10562                           prodl	equ	0xFF3
 10563                           intcon	equ	0xFF2
 10564                           postinc0	equ	0xFEE
 10565                           wreg	equ	0xFE8
 10566                           indf1	equ	0xFE7
 10567                           postinc1	equ	0xFE6
 10568                           postdec1	equ	0xFE5
 10569                           fsr1h	equ	0xFE2
 10570                           fsr1l	equ	0xFE1
 10571                           indf2	equ	0xFDF
 10572                           postinc2	equ	0xFDE
 10573                           postdec2	equ	0xFDD
 10574                           plusw2	equ	0xFDB
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function _command_time *****************
 10580 ;; Defined at:
 10581 ;;		line 107 in file "../My_header\My_terminal.h"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  tx              2  109[BANK0 ] PTR struct ringbuf
 10584 ;;		 -> usb_tx(8), 
 10585 ;;  op0             2  111[BANK0 ] PTR unsigned char 
 10586 ;;		 -> my_terminal_loop@op0(20), 
 10587 ;;  op1             2  113[BANK0 ] PTR unsigned char 
 10588 ;;		 -> my_terminal_loop@op1(20), 
 10589 ;;  op2             2  115[BANK0 ] PTR unsigned char 
 10590 ;;		 -> my_terminal_loop@op2(20), 
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;		None
 10593 ;; Return value:  Size  Location     Type
 10594 ;;		None               void
 10595 ;; Registers used:
 10596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10605 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10606 ;;Total ram usage:        9 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:   17
 10609 ;; This function calls:
 10610 ;;		_command_at_hand
 10611 ;;		_month_length
 10612 ;;		_my_atoi
 10613 ;;		_my_strcmp
 10614 ;;		_print_time
 10615 ;; This function is called by:
 10616 ;;		_command_operation
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text28
 10621  011ECC                     __ptext28:
 10622                           	opt stack 0
 10623  011ECC                     _command_time:
 10624                           	opt stack 11
 10625                           
 10626                           ;My_header\My_terminal.h: 108: if (!my_strcmp(op0, "print_time") || !my_strcmp(op0, "t")
      +                          ) {
 10627                           
 10628                           ;incstack = 0
 10629  011ECC  C0CF  F060         	movff	command_time@op0,my_strcmp@str1
 10630  011ED0  C0D0  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 10631  011ED4  0E01               	movlw	low STR_7
 10632  011ED6  0100               	movlb	0	; () banked
 10633  011ED8  6F62               	movwf	my_strcmp@str2& (0+255),b
 10634  011EDA  0EFF               	movlw	high STR_7
 10635  011EDC  0100               	movlb	0	; () banked
 10636  011EDE  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10637  011EE0  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10638  011EE4  0900               	iorlw	0
 10639  011EE6  B4D8               	btfsc	status,2,c
 10640  011EE8  D00F               	goto	l10442
 10641  011EEA  C0CF  F060         	movff	command_time@op0,my_strcmp@str1
 10642  011EEE  C0D0  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 10643  011EF2  0EF4               	movlw	low (STR_9+1)
 10644  011EF4  0100               	movlb	0	; () banked
 10645  011EF6  6F62               	movwf	my_strcmp@str2& (0+255),b
 10646  011EF8  0EFF               	movlw	high (STR_9+1)
 10647  011EFA  0100               	movlb	0	; () banked
 10648  011EFC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10649  011EFE  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10650  011F02  0900               	iorlw	0
 10651  011F04  A4D8               	btfss	status,2,c
 10652  011F06  D006               	goto	l10444
 10653  011F08                     l10442:
 10654                           
 10655                           ;My_header\My_terminal.h: 109: print_time(tx);
 10656  011F08  C0CD  F0A6         	movff	command_time@tx,print_time@tx
 10657  011F0C  C0CE  F0A7         	movff	command_time@tx+1,print_time@tx+1
 10658  011F10  ECB1  F0AC         	call	_print_time	;wreg free
 10659  011F14                     l10444:
 10660                           
 10661                           ;My_header\My_terminal.h: 110: }
 10662                           ;My_header\My_terminal.h: 111: if (!my_strcmp(op0, "at") || !my_strcmp(op0, "adjust_time
      +                          ")) {
 10663  011F14  C0CF  F060         	movff	command_time@op0,my_strcmp@str1
 10664  011F18  C0D0  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 10665  011F1C  0EF3               	movlw	low STR_9
 10666  011F1E  0100               	movlb	0	; () banked
 10667  011F20  6F62               	movwf	my_strcmp@str2& (0+255),b
 10668  011F22  0EFF               	movlw	high STR_9
 10669  011F24  0100               	movlb	0	; () banked
 10670  011F26  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10671  011F28  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10672  011F2C  0900               	iorlw	0
 10673  011F2E  B4D8               	btfsc	status,2,c
 10674  011F30  D00F               	goto	l10448
 10675  011F32  C0CF  F060         	movff	command_time@op0,my_strcmp@str1
 10676  011F36  C0D0  F061         	movff	command_time@op0+1,my_strcmp@str1+1
 10677  011F3A  0EDE               	movlw	low STR_10
 10678  011F3C  0100               	movlb	0	; () banked
 10679  011F3E  6F62               	movwf	my_strcmp@str2& (0+255),b
 10680  011F40  0EFE               	movlw	high STR_10
 10681  011F42  0100               	movlb	0	; () banked
 10682  011F44  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10683  011F46  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10684  011F4A  0900               	iorlw	0
 10685  011F4C  A4D8               	btfss	status,2,c
 10686  011F4E  0012               	return	
 10687  011F50                     l10448:
 10688                           
 10689                           ;My_header\My_terminal.h: 112: if (!my_strcmp(op1, "y") || !my_strcmp(op1, "year")) {
 10690  011F50  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10691  011F54  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10692  011F58  0EDF               	movlw	low (STR_16+2)
 10693  011F5A  0100               	movlb	0	; () banked
 10694  011F5C  6F62               	movwf	my_strcmp@str2& (0+255),b
 10695  011F5E  0EFF               	movlw	high (STR_16+2)
 10696  011F60  0100               	movlb	0	; () banked
 10697  011F62  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10698  011F64  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10699  011F68  0900               	iorlw	0
 10700  011F6A  B4D8               	btfsc	status,2,c
 10701  011F6C  D00F               	goto	l10452
 10702  011F6E  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10703  011F72  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10704  011F76  0EC1               	movlw	low STR_12
 10705  011F78  0100               	movlb	0	; () banked
 10706  011F7A  6F62               	movwf	my_strcmp@str2& (0+255),b
 10707  011F7C  0EFF               	movlw	high STR_12
 10708  011F7E  0100               	movlb	0	; () banked
 10709  011F80  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10710  011F82  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10711  011F86  0900               	iorlw	0
 10712  011F88  A4D8               	btfss	status,2,c
 10713  011F8A  D01C               	goto	l10454
 10714  011F8C                     l10452:
 10715                           
 10716                           ;My_header\My_terminal.h: 113: command_at_hand(tx, &caltime_now.YY, 0, 99, my_atoi(op2))
      +                          ;
 10717  011F8C  C0CD  F0C6         	movff	command_time@tx,command_at_hand@tx
 10718  011F90  C0CE  F0C7         	movff	command_time@tx+1,command_at_hand@tx+1
 10719  011F94  0E86               	movlw	low (_caltime_now+6)
 10720  011F96  0100               	movlb	0	; () banked
 10721  011F98  6FC8               	movwf	command_at_hand@hand& (0+255),b
 10722  011F9A  0E01               	movlw	high (_caltime_now+6)
 10723  011F9C  0100               	movlb	0	; () banked
 10724  011F9E  6FC9               	movwf	(command_at_hand@hand+1)& (0+255),b
 10725  011FA0  0E00               	movlw	0
 10726  011FA2  0100               	movlb	0	; () banked
 10727  011FA4  6FCA               	movwf	command_at_hand@min& (0+255),b
 10728  011FA6  0E63               	movlw	99
 10729  011FA8  0100               	movlb	0	; () banked
 10730  011FAA  6FCB               	movwf	command_at_hand@max& (0+255),b
 10731  011FAC  C0D3  F07C         	movff	command_time@op2,my_atoi@str
 10732  011FB0  C0D4  F07D         	movff	command_time@op2+1,my_atoi@str+1
 10733  011FB4  EC78  F0AB         	call	_my_atoi	;wreg free
 10734  011FB8  0100               	movlb	0	; () banked
 10735  011FBA  517C               	movf	?_my_atoi& (0+255),w,b
 10736  011FBC  0100               	movlb	0	; () banked
 10737  011FBE  6FCC               	movwf	command_at_hand@value& (0+255),b
 10738  011FC0  EC87  F0B0         	call	_command_at_hand	;wreg free
 10739  011FC4                     l10454:
 10740                           
 10741                           ;My_header\My_terminal.h: 114: }
 10742                           ;My_header\My_terminal.h: 115: if (!my_strcmp(op1, "M") || !my_strcmp(op1, "month")) {
 10743  011FC4  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10744  011FC8  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10745  011FCC  0EF8               	movlw	low STR_13
 10746  011FCE  0100               	movlb	0	; () banked
 10747  011FD0  6F62               	movwf	my_strcmp@str2& (0+255),b
 10748  011FD2  0EFF               	movlw	high STR_13
 10749  011FD4  0100               	movlb	0	; () banked
 10750  011FD6  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10751  011FD8  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10752  011FDC  0900               	iorlw	0
 10753  011FDE  B4D8               	btfsc	status,2,c
 10754  011FE0  D00F               	goto	l10458
 10755  011FE2  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10756  011FE6  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10757  011FEA  0EA5               	movlw	low STR_14
 10758  011FEC  0100               	movlb	0	; () banked
 10759  011FEE  6F62               	movwf	my_strcmp@str2& (0+255),b
 10760  011FF0  0EFF               	movlw	high STR_14
 10761  011FF2  0100               	movlb	0	; () banked
 10762  011FF4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10763  011FF6  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10764  011FFA  0900               	iorlw	0
 10765  011FFC  A4D8               	btfss	status,2,c
 10766  011FFE  D01C               	goto	l10460
 10767  012000                     l10458:
 10768                           
 10769                           ;My_header\My_terminal.h: 116: command_at_hand(tx, &caltime_now.MM, 1, 12, my_atoi(op2))
      +                          ;
 10770  012000  C0CD  F0C6         	movff	command_time@tx,command_at_hand@tx
 10771  012004  C0CE  F0C7         	movff	command_time@tx+1,command_at_hand@tx+1
 10772  012008  0E85               	movlw	low (_caltime_now+5)
 10773  01200A  0100               	movlb	0	; () banked
 10774  01200C  6FC8               	movwf	command_at_hand@hand& (0+255),b
 10775  01200E  0E01               	movlw	high (_caltime_now+5)
 10776  012010  0100               	movlb	0	; () banked
 10777  012012  6FC9               	movwf	(command_at_hand@hand+1)& (0+255),b
 10778  012014  0E01               	movlw	1
 10779  012016  0100               	movlb	0	; () banked
 10780  012018  6FCA               	movwf	command_at_hand@min& (0+255),b
 10781  01201A  0E0C               	movlw	12
 10782  01201C  0100               	movlb	0	; () banked
 10783  01201E  6FCB               	movwf	command_at_hand@max& (0+255),b
 10784  012020  C0D3  F07C         	movff	command_time@op2,my_atoi@str
 10785  012024  C0D4  F07D         	movff	command_time@op2+1,my_atoi@str+1
 10786  012028  EC78  F0AB         	call	_my_atoi	;wreg free
 10787  01202C  0100               	movlb	0	; () banked
 10788  01202E  517C               	movf	?_my_atoi& (0+255),w,b
 10789  012030  0100               	movlb	0	; () banked
 10790  012032  6FCC               	movwf	command_at_hand@value& (0+255),b
 10791  012034  EC87  F0B0         	call	_command_at_hand	;wreg free
 10792  012038                     l10460:
 10793                           
 10794                           ;My_header\My_terminal.h: 117: }
 10795                           ;My_header\My_terminal.h: 118: if (!my_strcmp(op1, "d") || !my_strcmp(op1, "day")) {
 10796  012038  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10797  01203C  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10798  012040  0E59               	movlw	low (STR_62+7)
 10799  012042  0100               	movlb	0	; () banked
 10800  012044  6F62               	movwf	my_strcmp@str2& (0+255),b
 10801  012046  0EFF               	movlw	high (STR_62+7)
 10802  012048  0100               	movlb	0	; () banked
 10803  01204A  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10804  01204C  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10805  012050  0900               	iorlw	0
 10806  012052  B4D8               	btfsc	status,2,c
 10807  012054  D00F               	goto	l10464
 10808  012056  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10809  01205A  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10810  01205E  0EDD               	movlw	low STR_16
 10811  012060  0100               	movlb	0	; () banked
 10812  012062  6F62               	movwf	my_strcmp@str2& (0+255),b
 10813  012064  0EFF               	movlw	high STR_16
 10814  012066  0100               	movlb	0	; () banked
 10815  012068  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10816  01206A  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10817  01206E  0900               	iorlw	0
 10818  012070  A4D8               	btfss	status,2,c
 10819  012072  D023               	goto	l10468
 10820  012074                     l10464:
 10821                           
 10822                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 10823  012074  C185  F066         	movff	_caltime_now+5,month_length@month
 10824  012078  0101               	movlb	1	; () banked
 10825  01207A  5186               	movf	(_caltime_now+6)& (0+255),w,b
 10826  01207C  ECC7  F0A2         	call	_month_length
 10827  012080  0100               	movlb	0	; () banked
 10828  012082  6FD5               	movwf	_command_time$5281& (0+255),b
 10829                           
 10830                           ; BSR set to: 0
 10831                           ;My_header\My_terminal.h: 119: command_at_hand(tx, &caltime_now.DD, 1, month_length(calt
      +                          ime_now.YY, caltime_now.MM), my_atoi(op2));
 10832  012084  C0CD  F0C6         	movff	command_time@tx,command_at_hand@tx
 10833  012088  C0CE  F0C7         	movff	command_time@tx+1,command_at_hand@tx+1
 10834  01208C  0E84               	movlw	low (_caltime_now+4)
 10835  01208E  0100               	movlb	0	; () banked
 10836  012090  6FC8               	movwf	command_at_hand@hand& (0+255),b
 10837  012092  0E01               	movlw	high (_caltime_now+4)
 10838  012094  0100               	movlb	0	; () banked
 10839  012096  6FC9               	movwf	(command_at_hand@hand+1)& (0+255),b
 10840  012098  0E01               	movlw	1
 10841  01209A  0100               	movlb	0	; () banked
 10842  01209C  6FCA               	movwf	command_at_hand@min& (0+255),b
 10843  01209E  C0D5  F0CB         	movff	_command_time$5281,command_at_hand@max
 10844  0120A2  C0D3  F07C         	movff	command_time@op2,my_atoi@str
 10845  0120A6  C0D4  F07D         	movff	command_time@op2+1,my_atoi@str+1
 10846  0120AA  EC78  F0AB         	call	_my_atoi	;wreg free
 10847  0120AE  0100               	movlb	0	; () banked
 10848  0120B0  517C               	movf	?_my_atoi& (0+255),w,b
 10849  0120B2  0100               	movlb	0	; () banked
 10850  0120B4  6FCC               	movwf	command_at_hand@value& (0+255),b
 10851  0120B6  EC87  F0B0         	call	_command_at_hand	;wreg free
 10852  0120BA                     l10468:
 10853                           
 10854                           ;My_header\My_terminal.h: 120: }
 10855                           ;My_header\My_terminal.h: 121: if (!my_strcmp(op1, "h") || !my_strcmp(op1, "hour")) {
 10856  0120BA  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10857  0120BE  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10858  0120C2  0EDB               	movlw	low (STR_32+2)
 10859  0120C4  0100               	movlb	0	; () banked
 10860  0120C6  6F62               	movwf	my_strcmp@str2& (0+255),b
 10861  0120C8  0EFF               	movlw	high (STR_32+2)
 10862  0120CA  0100               	movlb	0	; () banked
 10863  0120CC  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10864  0120CE  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10865  0120D2  0900               	iorlw	0
 10866  0120D4  B4D8               	btfsc	status,2,c
 10867  0120D6  D00F               	goto	l10472
 10868  0120D8  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10869  0120DC  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10870  0120E0  0EC6               	movlw	low STR_18
 10871  0120E2  0100               	movlb	0	; () banked
 10872  0120E4  6F62               	movwf	my_strcmp@str2& (0+255),b
 10873  0120E6  0EFF               	movlw	high STR_18
 10874  0120E8  0100               	movlb	0	; () banked
 10875  0120EA  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10876  0120EC  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10877  0120F0  0900               	iorlw	0
 10878  0120F2  A4D8               	btfss	status,2,c
 10879  0120F4  D01C               	goto	l10474
 10880  0120F6                     l10472:
 10881                           
 10882                           ;My_header\My_terminal.h: 122: command_at_hand(tx, &caltime_now.hh, 0, 23, my_atoi(op2))
      +                          ;
 10883  0120F6  C0CD  F0C6         	movff	command_time@tx,command_at_hand@tx
 10884  0120FA  C0CE  F0C7         	movff	command_time@tx+1,command_at_hand@tx+1
 10885  0120FE  0E82               	movlw	low (_caltime_now+2)
 10886  012100  0100               	movlb	0	; () banked
 10887  012102  6FC8               	movwf	command_at_hand@hand& (0+255),b
 10888  012104  0E01               	movlw	high (_caltime_now+2)
 10889  012106  0100               	movlb	0	; () banked
 10890  012108  6FC9               	movwf	(command_at_hand@hand+1)& (0+255),b
 10891  01210A  0E00               	movlw	0
 10892  01210C  0100               	movlb	0	; () banked
 10893  01210E  6FCA               	movwf	command_at_hand@min& (0+255),b
 10894  012110  0E17               	movlw	23
 10895  012112  0100               	movlb	0	; () banked
 10896  012114  6FCB               	movwf	command_at_hand@max& (0+255),b
 10897  012116  C0D3  F07C         	movff	command_time@op2,my_atoi@str
 10898  01211A  C0D4  F07D         	movff	command_time@op2+1,my_atoi@str+1
 10899  01211E  EC78  F0AB         	call	_my_atoi	;wreg free
 10900  012122  0100               	movlb	0	; () banked
 10901  012124  517C               	movf	?_my_atoi& (0+255),w,b
 10902  012126  0100               	movlb	0	; () banked
 10903  012128  6FCC               	movwf	command_at_hand@value& (0+255),b
 10904  01212A  EC87  F0B0         	call	_command_at_hand	;wreg free
 10905  01212E                     l10474:
 10906                           
 10907                           ;My_header\My_terminal.h: 123: }
 10908                           ;My_header\My_terminal.h: 124: if (!my_strcmp(op1, "m") || !my_strcmp(op1, "minute")) {
 10909  01212E  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10910  012132  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10911  012136  0EFC               	movlw	low STR_19
 10912  012138  0100               	movlb	0	; () banked
 10913  01213A  6F62               	movwf	my_strcmp@str2& (0+255),b
 10914  01213C  0EFF               	movlw	high STR_19
 10915  01213E  0100               	movlb	0	; () banked
 10916  012140  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10917  012142  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10918  012146  0900               	iorlw	0
 10919  012148  B4D8               	btfsc	status,2,c
 10920  01214A  D00F               	goto	l10478
 10921  01214C  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10922  012150  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10923  012154  0E91               	movlw	low STR_20
 10924  012156  0100               	movlb	0	; () banked
 10925  012158  6F62               	movwf	my_strcmp@str2& (0+255),b
 10926  01215A  0EFF               	movlw	high STR_20
 10927  01215C  0100               	movlb	0	; () banked
 10928  01215E  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10929  012160  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10930  012164  0900               	iorlw	0
 10931  012166  A4D8               	btfss	status,2,c
 10932  012168  D01C               	goto	l10480
 10933  01216A                     l10478:
 10934                           
 10935                           ;My_header\My_terminal.h: 125: command_at_hand(tx, &caltime_now.mm, 0, 59, my_atoi(op2))
      +                          ;
 10936  01216A  C0CD  F0C6         	movff	command_time@tx,command_at_hand@tx
 10937  01216E  C0CE  F0C7         	movff	command_time@tx+1,command_at_hand@tx+1
 10938  012172  0E81               	movlw	low (_caltime_now+1)
 10939  012174  0100               	movlb	0	; () banked
 10940  012176  6FC8               	movwf	command_at_hand@hand& (0+255),b
 10941  012178  0E01               	movlw	high (_caltime_now+1)
 10942  01217A  0100               	movlb	0	; () banked
 10943  01217C  6FC9               	movwf	(command_at_hand@hand+1)& (0+255),b
 10944  01217E  0E00               	movlw	0
 10945  012180  0100               	movlb	0	; () banked
 10946  012182  6FCA               	movwf	command_at_hand@min& (0+255),b
 10947  012184  0E3B               	movlw	59
 10948  012186  0100               	movlb	0	; () banked
 10949  012188  6FCB               	movwf	command_at_hand@max& (0+255),b
 10950  01218A  C0D3  F07C         	movff	command_time@op2,my_atoi@str
 10951  01218E  C0D4  F07D         	movff	command_time@op2+1,my_atoi@str+1
 10952  012192  EC78  F0AB         	call	_my_atoi	;wreg free
 10953  012196  0100               	movlb	0	; () banked
 10954  012198  517C               	movf	?_my_atoi& (0+255),w,b
 10955  01219A  0100               	movlb	0	; () banked
 10956  01219C  6FCC               	movwf	command_at_hand@value& (0+255),b
 10957  01219E  EC87  F0B0         	call	_command_at_hand	;wreg free
 10958  0121A2                     l10480:
 10959                           
 10960                           ;My_header\My_terminal.h: 126: }
 10961                           ;My_header\My_terminal.h: 127: if (!my_strcmp(op1, "s") || !my_strcmp(op1, "second")) {
 10962  0121A2  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10963  0121A6  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10964  0121AA  0E62               	movlw	low (STR_58+7)
 10965  0121AC  0100               	movlb	0	; () banked
 10966  0121AE  6F62               	movwf	my_strcmp@str2& (0+255),b
 10967  0121B0  0EFF               	movlw	high (STR_58+7)
 10968  0121B2  0100               	movlb	0	; () banked
 10969  0121B4  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10970  0121B6  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10971  0121BA  0900               	iorlw	0
 10972  0121BC  B4D8               	btfsc	status,2,c
 10973  0121BE  D00F               	goto	l10484
 10974  0121C0  C0D1  F060         	movff	command_time@op1,my_strcmp@str1
 10975  0121C4  C0D2  F061         	movff	command_time@op1+1,my_strcmp@str1+1
 10976  0121C8  0E8A               	movlw	low STR_22
 10977  0121CA  0100               	movlb	0	; () banked
 10978  0121CC  6F62               	movwf	my_strcmp@str2& (0+255),b
 10979  0121CE  0EFF               	movlw	high STR_22
 10980  0121D0  0100               	movlb	0	; () banked
 10981  0121D2  6F63               	movwf	(my_strcmp@str2+1)& (0+255),b
 10982  0121D4  ECD5  F0AA         	call	_my_strcmp	;wreg free
 10983  0121D8  0900               	iorlw	0
 10984  0121DA  A4D8               	btfss	status,2,c
 10985  0121DC  0012               	return	
 10986  0121DE                     l10484:
 10987                           
 10988                           ;My_header\My_terminal.h: 128: command_at_hand(tx, &caltime_now.ss, 0, 59, my_atoi(op2))
      +                          ;
 10989  0121DE  C0CD  F0C6         	movff	command_time@tx,command_at_hand@tx
 10990  0121E2  C0CE  F0C7         	movff	command_time@tx+1,command_at_hand@tx+1
 10991  0121E6  0E80               	movlw	low _caltime_now
 10992  0121E8  0100               	movlb	0	; () banked
 10993  0121EA  6FC8               	movwf	command_at_hand@hand& (0+255),b
 10994  0121EC  0E01               	movlw	high _caltime_now
 10995  0121EE  0100               	movlb	0	; () banked
 10996  0121F0  6FC9               	movwf	(command_at_hand@hand+1)& (0+255),b
 10997  0121F2  0E00               	movlw	0
 10998  0121F4  0100               	movlb	0	; () banked
 10999  0121F6  6FCA               	movwf	command_at_hand@min& (0+255),b
 11000  0121F8  0E3B               	movlw	59
 11001  0121FA  0100               	movlb	0	; () banked
 11002  0121FC  6FCB               	movwf	command_at_hand@max& (0+255),b
 11003  0121FE  C0D3  F07C         	movff	command_time@op2,my_atoi@str
 11004  012202  C0D4  F07D         	movff	command_time@op2+1,my_atoi@str+1
 11005  012206  EC78  F0AB         	call	_my_atoi	;wreg free
 11006  01220A  0100               	movlb	0	; () banked
 11007  01220C  517C               	movf	?_my_atoi& (0+255),w,b
 11008  01220E  0100               	movlb	0	; () banked
 11009  012210  6FCC               	movwf	command_at_hand@value& (0+255),b
 11010  012212  EC87  F0B0         	call	_command_at_hand	;wreg free
 11011  012216  0012               	return	
 11012  012218                     __end_of_command_time:
 11013                           	opt stack 0
 11014                           tblptru	equ	0xFF8
 11015                           tblptrh	equ	0xFF7
 11016                           tblptrl	equ	0xFF6
 11017                           tablat	equ	0xFF5
 11018                           prodh	equ	0xFF4
 11019                           prodl	equ	0xFF3
 11020                           intcon	equ	0xFF2
 11021                           postinc0	equ	0xFEE
 11022                           wreg	equ	0xFE8
 11023                           indf1	equ	0xFE7
 11024                           postinc1	equ	0xFE6
 11025                           postdec1	equ	0xFE5
 11026                           fsr1h	equ	0xFE2
 11027                           fsr1l	equ	0xFE1
 11028                           indf2	equ	0xFDF
 11029                           postinc2	equ	0xFDE
 11030                           postdec2	equ	0xFDD
 11031                           plusw2	equ	0xFDB
 11032                           fsr2h	equ	0xFDA
 11033                           fsr2l	equ	0xFD9
 11034                           status	equ	0xFD8
 11035                           
 11036 ;; *************** function _my_strcmp *****************
 11037 ;; Defined at:
 11038 ;;		line 53 in file "../My_header\My_stdlib.h"
 11039 ;; Parameters:    Size  Location     Type
 11040 ;;  str1            2    0[BANK0 ] PTR const unsigned char 
 11041 ;;		 -> my_terminal_loop@op2(20), my_terminal_loop@op1(20), my_terminal_loop@op0(20), 
 11042 ;;  str2            2    2[BANK0 ] PTR const unsigned char 
 11043 ;;		 -> STR_98(2), STR_97(11), STR_96(3), STR_95(16), 
 11044 ;;		 -> STR_94(3), STR_93(19), STR_92(2), STR_91(8), 
 11045 ;;		 -> STR_90(2), STR_89(6), STR_88(3), STR_87(16), 
 11046 ;;		 -> STR_86(3), STR_85(19), STR_84(2), STR_83(8), 
 11047 ;;		 -> STR_82(2), STR_81(7), STR_80(3), STR_79(16), 
 11048 ;;		 -> STR_78(3), STR_77(19), STR_76(2), STR_75(8), 
 11049 ;;		 -> STR_74(2), STR_73(5), STR_72(2), STR_71(8), 
 11050 ;;		 -> STR_69(2), STR_68(6), STR_65(5), STR_64(11), 
 11051 ;;		 -> STR_63(6), STR_62(9), STR_61(9), STR_60(10), 
 11052 ;;		 -> STR_59(4), STR_58(9), STR_56(2), STR_55(5), 
 11053 ;;		 -> STR_22(7), STR_21(2), STR_20(7), STR_19(2), 
 11054 ;;		 -> STR_18(5), STR_17(2), STR_16(4), STR_15(2), 
 11055 ;;		 -> STR_14(6), STR_13(2), STR_12(5), STR_11(2), 
 11056 ;;		 -> STR_10(12), STR_9(3), STR_8(2), STR_7(11), 
 11057 ;; Auto vars:     Size  Location     Type
 11058 ;;		None
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1    wreg      char 
 11061 ;; Registers used:
 11062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11071 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11072 ;;Total ram usage:        5 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:   11
 11075 ;; This function calls:
 11076 ;;		Nothing
 11077 ;; This function is called by:
 11078 ;;		_command_time
 11079 ;;		_command_operation
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text29
 11084  0155AA                     __ptext29:
 11085                           	opt stack 0
 11086  0155AA                     _my_strcmp:
 11087                           	opt stack 17
 11088                           
 11089                           ;My_header\My_stdlib.h: 54: while (*str1 && *str2) {
 11090                           
 11091                           ;incstack = 0
 11092  0155AA  D02C               	goto	l10172
 11093  0155AC                     l10164:
 11094                           
 11095                           ;My_header\My_stdlib.h: 55: if (*str1 != *str2)return (*str1 - *str2);
 11096  0155AC  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 11097  0155B0  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 11098  0155B4  50DF               	movf	indf2,w,c
 11099  0155B6  0100               	movlb	0	; () banked
 11100  0155B8  6F64               	movwf	??_my_strcmp& (0+255),b
 11101  0155BA  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 11102  0155BE  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 11103  0155C2                     	if	0	;tblptru may be non-zero
 11104  0155C2                     	endif
 11105  0155C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11106  0155C2  0E00               	movlw	low (__mediumconst shr (0+16))
 11107  0155C4  6EF8               	movwf	tblptru,c
 11108  0155C6                     	endif
 11109  0155C6  0008               	tblrd		*
 11110  0155C8  50F5               	movf	tablat,w,c
 11111  0155CA  0100               	movlb	0	; () banked
 11112  0155CC  1964               	xorwf	??_my_strcmp& (0+255),w,b
 11113  0155CE  B4D8               	btfsc	status,2,c
 11114  0155D0  D013               	goto	l10170
 11115                           
 11116                           ; BSR set to: 0
 11117  0155D2  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 11118  0155D6  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 11119  0155DA  50DF               	movf	indf2,w,c
 11120  0155DC  0100               	movlb	0	; () banked
 11121  0155DE  6F64               	movwf	??_my_strcmp& (0+255),b
 11122  0155E0  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 11123  0155E4  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 11124  0155E8                     	if	0	;tblptru may be non-zero
 11125  0155E8                     	endif
 11126  0155E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11127  0155E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11128  0155EA  6EF8               	movwf	tblptru,c
 11129  0155EC                     	endif
 11130  0155EC  0008               	tblrd		*
 11131  0155EE  50F5               	movf	tablat,w,c
 11132  0155F0  0800               	sublw	0
 11133  0155F2  0100               	movlb	0	; () banked
 11134  0155F4  2564               	addwf	??_my_strcmp& (0+255),w,b
 11135                           
 11136                           ; BSR set to: 0
 11137  0155F6  0012               	return	
 11138  0155F8                     l10170:
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;My_header\My_stdlib.h: 56: str1++;
 11142  0155F8  0100               	movlb	0	; () banked
 11143  0155FA  4B60               	infsnz	my_strcmp@str1& (0+255),f,b
 11144  0155FC  2B61               	incf	(my_strcmp@str1+1)& (0+255),f,b
 11145                           
 11146                           ;My_header\My_stdlib.h: 57: str2++;
 11147  0155FE  0100               	movlb	0	; () banked
 11148  015600  4B62               	infsnz	my_strcmp@str2& (0+255),f,b
 11149  015602  2B63               	incf	(my_strcmp@str2+1)& (0+255),f,b
 11150  015604                     l10172:
 11151  015604  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 11152  015608  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 11153  01560C  50DF               	movf	indf2,w,c
 11154  01560E  B4D8               	btfsc	status,2,c
 11155  015610  D00B               	goto	l10176
 11156  015612  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 11157  015616  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 11158  01561A                     	if	0	;tblptru may be non-zero
 11159  01561A                     	endif
 11160  01561A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11161  01561A  0E00               	movlw	low (__mediumconst shr (0+16))
 11162  01561C  6EF8               	movwf	tblptru,c
 11163  01561E                     	endif
 11164  01561E  0008               	tblrd		*
 11165  015620  50F5               	movf	tablat,w,c
 11166  015622  0900               	iorlw	0
 11167  015624  A4D8               	btfss	status,2,c
 11168  015626  D7C2               	goto	l10164
 11169  015628                     l10176:
 11170                           
 11171                           ;My_header\My_stdlib.h: 58: }
 11172                           ;My_header\My_stdlib.h: 59: return (*str1 - *str2);
 11173  015628  C060  FFD9         	movff	my_strcmp@str1,fsr2l
 11174  01562C  C061  FFDA         	movff	my_strcmp@str1+1,fsr2h
 11175  015630  50DF               	movf	indf2,w,c
 11176  015632  0100               	movlb	0	; () banked
 11177  015634  6F64               	movwf	??_my_strcmp& (0+255),b
 11178  015636  C062  FFF6         	movff	my_strcmp@str2,tblptrl
 11179  01563A  C063  FFF7         	movff	my_strcmp@str2+1,tblptrh
 11180  01563E                     	if	0	;tblptru may be non-zero
 11181  01563E                     	endif
 11182  01563E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11183  01563E  0E00               	movlw	low (__mediumconst shr (0+16))
 11184  015640  6EF8               	movwf	tblptru,c
 11185  015642                     	endif
 11186  015642  0008               	tblrd		*
 11187  015644  50F5               	movf	tablat,w,c
 11188  015646  0800               	sublw	0
 11189  015648  0100               	movlb	0	; () banked
 11190  01564A  2564               	addwf	??_my_strcmp& (0+255),w,b
 11191  01564C  0012               	return	
 11192  01564E                     __end_of_my_strcmp:
 11193                           	opt stack 0
 11194                           tblptru	equ	0xFF8
 11195                           tblptrh	equ	0xFF7
 11196                           tblptrl	equ	0xFF6
 11197                           tablat	equ	0xFF5
 11198                           prodh	equ	0xFF4
 11199                           prodl	equ	0xFF3
 11200                           intcon	equ	0xFF2
 11201                           postinc0	equ	0xFEE
 11202                           wreg	equ	0xFE8
 11203                           indf1	equ	0xFE7
 11204                           postinc1	equ	0xFE6
 11205                           postdec1	equ	0xFE5
 11206                           fsr1h	equ	0xFE2
 11207                           fsr1l	equ	0xFE1
 11208                           indf2	equ	0xFDF
 11209                           postinc2	equ	0xFDE
 11210                           postdec2	equ	0xFDD
 11211                           plusw2	equ	0xFDB
 11212                           fsr2h	equ	0xFDA
 11213                           fsr2l	equ	0xFD9
 11214                           status	equ	0xFD8
 11215                           
 11216 ;; *************** function _my_atoi *****************
 11217 ;; Defined at:
 11218 ;;		line 41 in file "../My_header\My_stdlib.h"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;  str             2   28[BANK0 ] PTR const unsigned char 
 11221 ;;		 -> my_terminal_loop@op2(20), 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;  ret             2   34[BANK0 ] unsigned int 
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  2   28[BANK0 ] unsigned int 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11235 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11236 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11237 ;;Total ram usage:        8 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:   12
 11240 ;; This function calls:
 11241 ;;		___wmul
 11242 ;; This function is called by:
 11243 ;;		_command_time
 11244 ;;		_command_operation
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text30
 11249  0156F0                     __ptext30:
 11250                           	opt stack 0
 11251  0156F0                     _my_atoi:
 11252                           	opt stack 16
 11253                           
 11254                           ;My_header\My_stdlib.h: 42: uint16_t ret = 0;
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;incstack = 0
 11258  0156F0  0E00               	movlw	0
 11259  0156F2  0100               	movlb	0	; () banked
 11260  0156F4  6F83               	movwf	(my_atoi@ret+1)& (0+255),b
 11261  0156F6  0E00               	movlw	0
 11262  0156F8  6F82               	movwf	my_atoi@ret& (0+255),b
 11263                           
 11264                           ;My_header\My_stdlib.h: 43: while (*str) {
 11265  0156FA  D03E               	goto	l10160
 11266  0156FC                     l10150:
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;My_header\My_stdlib.h: 44: if (*str >= '0' && *str <= '9') {
 11270  0156FC  C07C  FFD9         	movff	my_atoi@str,fsr2l
 11271  015700  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 11272  015704  0E2F               	movlw	47
 11273  015706  64DF               	cpfsgt	indf2,c
 11274  015708  D034               	goto	l10158
 11275                           
 11276                           ; BSR set to: 0
 11277  01570A  C07C  FFD9         	movff	my_atoi@str,fsr2l
 11278  01570E  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 11279  015712  0E3A               	movlw	58
 11280  015714  60DF               	cpfslt	indf2,c
 11281  015716  D02D               	goto	l10158
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;My_header\My_stdlib.h: 45: ret *= 10;
 11285  015718  C082  F076         	movff	my_atoi@ret,___wmul@multiplier
 11286  01571C  C083  F077         	movff	my_atoi@ret+1,___wmul@multiplier+1
 11287  015720  0E00               	movlw	0
 11288  015722  0100               	movlb	0	; () banked
 11289  015724  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11290  015726  0E0A               	movlw	10
 11291  015728  6F78               	movwf	___wmul@multiplicand& (0+255),b
 11292  01572A  ECED  F0B3         	call	___wmul	;wreg free
 11293  01572E  C076  F082         	movff	?___wmul,my_atoi@ret
 11294  015732  C077  F083         	movff	?___wmul+1,my_atoi@ret+1
 11295                           
 11296                           ;My_header\My_stdlib.h: 46: ret += *str - '0';
 11297  015736  0ED0               	movlw	208
 11298  015738  0100               	movlb	0	; () banked
 11299  01573A  6F7E               	movwf	??_my_atoi& (0+255),b
 11300  01573C  0EFF               	movlw	255
 11301  01573E  0100               	movlb	0	; () banked
 11302  015740  6F7F               	movwf	(??_my_atoi+1)& (0+255),b
 11303  015742  C07C  FFD9         	movff	my_atoi@str,fsr2l
 11304  015746  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 11305  01574A  50DF               	movf	indf2,w,c
 11306  01574C  0100               	movlb	0	; () banked
 11307  01574E  6F80               	movwf	(??_my_atoi+2)& (0+255),b
 11308  015750  6B81               	clrf	(??_my_atoi+3)& (0+255),b
 11309  015752  0100               	movlb	0	; () banked
 11310  015754  517E               	movf	??_my_atoi& (0+255),w,b
 11311  015756  0100               	movlb	0	; () banked
 11312  015758  2780               	addwf	(??_my_atoi+2)& (0+255),f,b
 11313  01575A  0100               	movlb	0	; () banked
 11314  01575C  517F               	movf	(??_my_atoi+1)& (0+255),w,b
 11315  01575E  0100               	movlb	0	; () banked
 11316  015760  2381               	addwfc	(??_my_atoi+3)& (0+255),f,b
 11317  015762  0100               	movlb	0	; () banked
 11318  015764  5180               	movf	(??_my_atoi+2)& (0+255),w,b
 11319  015766  0100               	movlb	0	; () banked
 11320  015768  2782               	addwf	my_atoi@ret& (0+255),f,b
 11321  01576A  0100               	movlb	0	; () banked
 11322  01576C  5181               	movf	(??_my_atoi+3)& (0+255),w,b
 11323  01576E  0100               	movlb	0	; () banked
 11324  015770  2383               	addwfc	(my_atoi@ret+1)& (0+255),f,b
 11325  015772                     l10158:
 11326                           
 11327                           ; BSR set to: 0
 11328                           ;My_header\My_stdlib.h: 47: }
 11329                           ;My_header\My_stdlib.h: 48: str++;
 11330  015772  0100               	movlb	0	; () banked
 11331  015774  4B7C               	infsnz	my_atoi@str& (0+255),f,b
 11332  015776  2B7D               	incf	(my_atoi@str+1)& (0+255),f,b
 11333  015778                     l10160:
 11334                           
 11335                           ; BSR set to: 0
 11336  015778  C07C  FFD9         	movff	my_atoi@str,fsr2l
 11337  01577C  C07D  FFDA         	movff	my_atoi@str+1,fsr2h
 11338  015780  50DF               	movf	indf2,w,c
 11339  015782  A4D8               	btfss	status,2,c
 11340  015784  D7BB               	goto	l10150
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;My_header\My_stdlib.h: 49: }
 11344                           ;My_header\My_stdlib.h: 50: return ret;
 11345  015786  C082  F07C         	movff	my_atoi@ret,?_my_atoi
 11346  01578A  C083  F07D         	movff	my_atoi@ret+1,?_my_atoi+1
 11347                           
 11348                           ; BSR set to: 0
 11349  01578E  0012               	return		;funcret
 11350  015790                     __end_of_my_atoi:
 11351                           	opt stack 0
 11352                           tblptru	equ	0xFF8
 11353                           tblptrh	equ	0xFF7
 11354                           tblptrl	equ	0xFF6
 11355                           tablat	equ	0xFF5
 11356                           prodh	equ	0xFF4
 11357                           prodl	equ	0xFF3
 11358                           intcon	equ	0xFF2
 11359                           postinc0	equ	0xFEE
 11360                           wreg	equ	0xFE8
 11361                           indf1	equ	0xFE7
 11362                           postinc1	equ	0xFE6
 11363                           postdec1	equ	0xFE5
 11364                           fsr1h	equ	0xFE2
 11365                           fsr1l	equ	0xFE1
 11366                           indf2	equ	0xFDF
 11367                           postinc2	equ	0xFDE
 11368                           postdec2	equ	0xFDD
 11369                           plusw2	equ	0xFDB
 11370                           fsr2h	equ	0xFDA
 11371                           fsr2l	equ	0xFD9
 11372                           status	equ	0xFD8
 11373                           
 11374 ;; *************** function _command_at_hand *****************
 11375 ;; Defined at:
 11376 ;;		line 96 in file "../My_header\My_terminal.h"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;  tx              2  102[BANK0 ] PTR struct ringbuf
 11379 ;;		 -> usb_tx(8), 
 11380 ;;  hand            2  104[BANK0 ] PTR unsigned char 
 11381 ;;		 -> caltime_now(7), 
 11382 ;;  min             1  106[BANK0 ] unsigned char 
 11383 ;;  max             1  107[BANK0 ] unsigned char 
 11384 ;;  value           1  108[BANK0 ] unsigned char 
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;		None
 11387 ;; Return value:  Size  Location     Type
 11388 ;;		None               void
 11389 ;; Registers used:
 11390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11396 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11399 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11400 ;;Total ram usage:        7 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:   16
 11403 ;; This function calls:
 11404 ;;		_RTCC_from_caltime
 11405 ;;		_print_time
 11406 ;;		_ringbuf_put_str
 11407 ;; This function is called by:
 11408 ;;		_command_time
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text31
 11413  01610E                     __ptext31:
 11414                           	opt stack 0
 11415  01610E                     _command_at_hand:
 11416                           	opt stack 11
 11417                           
 11418                           ;My_header\My_terminal.h: 97: if (value >= min && value <= max) {
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;incstack = 0
 11422  01610E  0100               	movlb	0	; () banked
 11423  016110  51CA               	movf	command_at_hand@min& (0+255),w,b
 11424  016112  0100               	movlb	0	; () banked
 11425  016114  5DCC               	subwf	command_at_hand@value& (0+255),w,b
 11426  016116  A0D8               	btfss	status,0,c
 11427  016118  D023               	goto	l10202
 11428                           
 11429                           ; BSR set to: 0
 11430  01611A  0100               	movlb	0	; () banked
 11431  01611C  51CC               	movf	command_at_hand@value& (0+255),w,b
 11432  01611E  0100               	movlb	0	; () banked
 11433  016120  5DCB               	subwf	command_at_hand@max& (0+255),w,b
 11434  016122  A0D8               	btfss	status,0,c
 11435  016124  D01D               	goto	l10202
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;My_header\My_terminal.h: 98: *hand = value;
 11439  016126  C0C8  FFD9         	movff	command_at_hand@hand,fsr2l
 11440  01612A  C0C9  FFDA         	movff	command_at_hand@hand+1,fsr2h
 11441  01612E  C0CC  FFDF         	movff	command_at_hand@value,indf2
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;My_header\My_terminal.h: 99: RTCC_from_caltime(&caltime_now, &epoch_now);
 11445  016132  0E80               	movlw	low _caltime_now
 11446  016134  0100               	movlb	0	; () banked
 11447  016136  6F91               	movwf	RTCC_from_caltime@ct& (0+255),b
 11448  016138  0E01               	movlw	high _caltime_now
 11449  01613A  0100               	movlb	0	; () banked
 11450  01613C  6F92               	movwf	(RTCC_from_caltime@ct+1)& (0+255),b
 11451  01613E  0EFC               	movlw	low _epoch_now
 11452  016140  0100               	movlb	0	; () banked
 11453  016142  6F93               	movwf	RTCC_from_caltime@ep& (0+255),b
 11454  016144  0E00               	movlw	high _epoch_now
 11455  016146  0100               	movlb	0	; () banked
 11456  016148  6F94               	movwf	(RTCC_from_caltime@ep+1)& (0+255),b
 11457  01614A  EC08  F0B4         	call	_RTCC_from_caltime	;wreg free
 11458                           
 11459                           ;My_header\My_terminal.h: 100: time_change_flag = 1;
 11460  01614E  0E01               	movlw	1
 11461  016150  6E50               	movwf	_time_change_flag,c
 11462                           
 11463                           ;My_header\My_terminal.h: 101: print_time(tx);
 11464  016152  C0C6  F0A6         	movff	command_at_hand@tx,print_time@tx
 11465  016156  C0C7  F0A7         	movff	command_at_hand@tx+1,print_time@tx+1
 11466  01615A  ECB1  F0AC         	call	_print_time	;wreg free
 11467                           
 11468                           ;My_header\My_terminal.h: 102: } else {
 11469  01615E  0012               	return	
 11470  016160                     l10202:
 11471                           
 11472                           ;My_header\My_terminal.h: 103: ringbuf_put_str(tx, "\terror\n");
 11473  016160  C0C6  F08A         	movff	command_at_hand@tx,ringbuf_put_str@rb
 11474  016164  C0C7  F08B         	movff	command_at_hand@tx+1,ringbuf_put_str@rb+1
 11475  016168  0E64               	movlw	low STR_6
 11476  01616A  0100               	movlb	0	; () banked
 11477  01616C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11478  01616E  0EFF               	movlw	high STR_6
 11479  016170  0100               	movlb	0	; () banked
 11480  016172  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11481  016174  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 11482  016178  0012               	return	
 11483  01617A                     __end_of_command_at_hand:
 11484                           	opt stack 0
 11485                           tblptru	equ	0xFF8
 11486                           tblptrh	equ	0xFF7
 11487                           tblptrl	equ	0xFF6
 11488                           tablat	equ	0xFF5
 11489                           prodh	equ	0xFF4
 11490                           prodl	equ	0xFF3
 11491                           intcon	equ	0xFF2
 11492                           postinc0	equ	0xFEE
 11493                           wreg	equ	0xFE8
 11494                           indf1	equ	0xFE7
 11495                           postinc1	equ	0xFE6
 11496                           postdec1	equ	0xFE5
 11497                           fsr1h	equ	0xFE2
 11498                           fsr1l	equ	0xFE1
 11499                           indf2	equ	0xFDF
 11500                           postinc2	equ	0xFDE
 11501                           postdec2	equ	0xFDD
 11502                           plusw2	equ	0xFDB
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function _print_time *****************
 11508 ;; Defined at:
 11509 ;;		line 82 in file "../My_header\My_terminal.h"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  tx              2   70[BANK0 ] PTR struct ringbuf
 11512 ;;		 -> usb_tx(8), 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  str            30   72[BANK0 ] unsigned char [30]
 11515 ;; Return value:  Size  Location     Type
 11516 ;;		None               void
 11517 ;; Registers used:
 11518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11525 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;Total ram usage:       32 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:   15
 11531 ;; This function calls:
 11532 ;;		_RTCC_from_RTCC
 11533 ;;		_ringbuf_put_str
 11534 ;;		_sprintf
 11535 ;; This function is called by:
 11536 ;;		_command_at_hand
 11537 ;;		_command_time
 11538 ;;		_command_operation
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text32
 11543  015962                     __ptext32:
 11544                           	opt stack 0
 11545  015962                     _print_time:
 11546                           	opt stack 13
 11547                           
 11548                           ;My_header\My_terminal.h: 83: RTCC_from_RTCC(&caltime_now, &epoch_now);
 11549                           
 11550                           ;incstack = 0
 11551  015962  0E80               	movlw	low _caltime_now
 11552  015964  0100               	movlb	0	; () banked
 11553  015966  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 11554  015968  0E01               	movlw	high _caltime_now
 11555  01596A  0100               	movlb	0	; () banked
 11556  01596C  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 11557  01596E  0EFC               	movlw	low _epoch_now
 11558  015970  0100               	movlb	0	; () banked
 11559  015972  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 11560  015974  0E00               	movlw	high _epoch_now
 11561  015976  0100               	movlb	0	; () banked
 11562  015978  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 11563  01597A  ECBC  F0B5         	call	_RTCC_from_RTCC	;wreg free
 11564                           
 11565                           ;My_header\My_terminal.h: 84: char str[30];
 11566                           ;My_header\My_terminal.h: 85: sprintf(str, "\t20%02d/%02d/%02d(%s)%02d:%02d-%02d\n",
 11567                           ;My_header\My_terminal.h: 86: caltime_now.YY,
 11568                           ;My_header\My_terminal.h: 87: caltime_now.MM,
 11569                           ;My_header\My_terminal.h: 88: caltime_now.DD,
 11570                           ;My_header\My_terminal.h: 89: weekday_3char[caltime_now.EE],
 11571                           ;My_header\My_terminal.h: 90: caltime_now.hh,
 11572                           ;My_header\My_terminal.h: 91: caltime_now.mm,
 11573                           ;My_header\My_terminal.h: 92: caltime_now.ss);
 11574  01597E  0EA8               	movlw	low print_time@str
 11575  015980  0100               	movlb	0	; () banked
 11576  015982  6F83               	movwf	sprintf@sp& (0+255),b
 11577  015984  0E00               	movlw	high print_time@str
 11578  015986  0100               	movlb	0	; () banked
 11579  015988  6F84               	movwf	(sprintf@sp+1)& (0+255),b
 11580  01598A  0EA6               	movlw	low STR_5
 11581  01598C  0100               	movlb	0	; () banked
 11582  01598E  6F85               	movwf	sprintf@f& (0+255),b
 11583  015990  0EFD               	movlw	high STR_5
 11584  015992  0100               	movlb	0	; () banked
 11585  015994  6F86               	movwf	(sprintf@f+1)& (0+255),b
 11586  015996  C186  F087         	movff	_caltime_now+6,?_sprintf+4
 11587  01599A  0100               	movlb	0	; () banked
 11588  01599C  6B88               	clrf	(?_sprintf+5)& (0+255),b
 11589  01599E  C185  F089         	movff	_caltime_now+5,?_sprintf+6
 11590  0159A2  0100               	movlb	0	; () banked
 11591  0159A4  6B8A               	clrf	(?_sprintf+7)& (0+255),b
 11592  0159A6  C184  F08B         	movff	_caltime_now+4,?_sprintf+8
 11593  0159AA  0100               	movlb	0	; () banked
 11594  0159AC  6B8C               	clrf	(?_sprintf+9)& (0+255),b
 11595  0159AE  0101               	movlb	1	; () banked
 11596  0159B0  5183               	movf	(_caltime_now+3)& (0+255),w,b
 11597  0159B2  0D04               	mullw	4
 11598  0159B4  0E8A               	movlw	low _weekday_3char
 11599  0159B6  24F3               	addwf	prodl,w,c
 11600  0159B8  0100               	movlb	0	; () banked
 11601  0159BA  6F8D               	movwf	(?_sprintf+10)& (0+255),b
 11602  0159BC  0EFB               	movlw	high _weekday_3char
 11603  0159BE  20F4               	addwfc	prodh,w,c
 11604  0159C0  0100               	movlb	0	; () banked
 11605  0159C2  6F8E               	movwf	(?_sprintf+11)& (0+255),b
 11606  0159C4  C182  F08F         	movff	_caltime_now+2,?_sprintf+12
 11607  0159C8  0100               	movlb	0	; () banked
 11608  0159CA  6B90               	clrf	(?_sprintf+13)& (0+255),b
 11609  0159CC  C181  F091         	movff	_caltime_now+1,?_sprintf+14
 11610  0159D0  0100               	movlb	0	; () banked
 11611  0159D2  6B92               	clrf	(?_sprintf+15)& (0+255),b
 11612  0159D4  C180  F093         	movff	_caltime_now,?_sprintf+16
 11613  0159D8  0100               	movlb	0	; () banked
 11614  0159DA  6B94               	clrf	(?_sprintf+17)& (0+255),b
 11615  0159DC  EC84  F08B         	call	_sprintf	;wreg free
 11616                           
 11617                           ;My_header\My_terminal.h: 93: ringbuf_put_str(tx, str);
 11618  0159E0  C0A6  F08A         	movff	print_time@tx,ringbuf_put_str@rb
 11619  0159E4  C0A7  F08B         	movff	print_time@tx+1,ringbuf_put_str@rb+1
 11620  0159E8  0EA8               	movlw	low print_time@str
 11621  0159EA  0100               	movlb	0	; () banked
 11622  0159EC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 11623  0159EE  0E00               	movlw	high print_time@str
 11624  0159F0  0100               	movlb	0	; () banked
 11625  0159F2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 11626  0159F4  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 11627  0159F8  0012               	return		;funcret
 11628  0159FA                     __end_of_print_time:
 11629                           	opt stack 0
 11630                           tblptru	equ	0xFF8
 11631                           tblptrh	equ	0xFF7
 11632                           tblptrl	equ	0xFF6
 11633                           tablat	equ	0xFF5
 11634                           prodh	equ	0xFF4
 11635                           prodl	equ	0xFF3
 11636                           intcon	equ	0xFF2
 11637                           postinc0	equ	0xFEE
 11638                           wreg	equ	0xFE8
 11639                           indf1	equ	0xFE7
 11640                           postinc1	equ	0xFE6
 11641                           postdec1	equ	0xFE5
 11642                           fsr1h	equ	0xFE2
 11643                           fsr1l	equ	0xFE1
 11644                           indf2	equ	0xFDF
 11645                           postinc2	equ	0xFDE
 11646                           postdec2	equ	0xFDD
 11647                           plusw2	equ	0xFDB
 11648                           fsr2h	equ	0xFDA
 11649                           fsr2l	equ	0xFD9
 11650                           status	equ	0xFD8
 11651                           
 11652 ;; *************** function _sprintf *****************
 11653 ;; Defined at:
 11654 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;  sp              2   35[BANK0 ] PTR unsigned char 
 11657 ;;		 -> print_time@str(30), 
 11658 ;;  f               2   37[BANK0 ] PTR const unsigned char 
 11659 ;;		 -> STR_5(37), 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;  tmpval          4    0        struct .
 11662 ;;  width           2   68[BANK0 ] int 
 11663 ;;  len             2   64[BANK0 ] unsigned int 
 11664 ;;  val             2   62[BANK0 ] unsigned int 
 11665 ;;  cp              2   60[BANK0 ] PTR const unsigned char 
 11666 ;;		 -> STR_101(7), weekday_3char(28), 
 11667 ;;  ap              2   58[BANK0 ] PTR void [1]
 11668 ;;		 -> ?_sprintf(2), 
 11669 ;;  c               1   67[BANK0 ] char 
 11670 ;;  flag            1   66[BANK0 ] unsigned char 
 11671 ;;  prec            1   57[BANK0 ] char 
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  2   35[BANK0 ] int 
 11674 ;; Registers used:
 11675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11681 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11682 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11683 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11684 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11685 ;;Total ram usage:       35 bytes
 11686 ;; Hardware stack levels used:    1
 11687 ;; Hardware stack levels required when called:   12
 11688 ;; This function calls:
 11689 ;;		___lwdiv
 11690 ;;		___lwmod
 11691 ;;		___wmul
 11692 ;;		_isdigit
 11693 ;; This function is called by:
 11694 ;;		_print_time
 11695 ;; This function uses a non-reentrant model
 11696 ;;
 11697                           
 11698                           	psect	text33
 11699  011708                     __ptext33:
 11700                           	opt stack 0
 11701  011708                     _sprintf:
 11702                           	opt stack 15
 11703                           
 11704                           ;doprnt.c: 494: va_list ap;
 11705                           ;doprnt.c: 499: signed char c;
 11706                           ;doprnt.c: 501: int width;
 11707                           ;doprnt.c: 506: signed char prec;
 11708                           ;doprnt.c: 508: unsigned char flag;
 11709                           ;doprnt.c: 523: union {
 11710                           ;doprnt.c: 524: unsigned long vd;
 11711                           ;doprnt.c: 525: double integ;
 11712                           ;doprnt.c: 526: } tmpval;
 11713                           ;doprnt.c: 528: unsigned int val;
 11714                           ;doprnt.c: 529: unsigned len;
 11715                           ;doprnt.c: 530: const char * cp;
 11716                           ;doprnt.c: 533: *ap = __va_start();
 11717                           
 11718                           ;incstack = 0
 11719  011708  0E87               	movlw	low (?_sprintf+4)
 11720  01170A  0100               	movlb	0	; () banked
 11721  01170C  6F9A               	movwf	sprintf@ap& (0+255),b
 11722  01170E  0E00               	movlw	high (?_sprintf+4)
 11723  011710  0100               	movlb	0	; () banked
 11724  011712  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
 11725                           
 11726                           ;doprnt.c: 536: while(c = *f++) {
 11727  011714  D20F               	goto	l10022
 11728  011716                     l9882:
 11729                           
 11730                           ; BSR set to: 0
 11731                           ;doprnt.c: 538: if(c != '%')
 11732  011716  0E25               	movlw	37
 11733  011718  0100               	movlb	0	; () banked
 11734  01171A  19A3               	xorwf	sprintf@c& (0+255),w,b
 11735  01171C  B4D8               	btfsc	status,2,c
 11736  01171E  D00A               	goto	l9888
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;doprnt.c: 540: {
 11740                           ;doprnt.c: 541: ((*sp++ = (c)));
 11741  011720  C083  FFD9         	movff	sprintf@sp,fsr2l
 11742  011724  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 11743  011728  C0A3  FFDF         	movff	sprintf@c,indf2
 11744                           
 11745                           ; BSR set to: 0
 11746  01172C  0100               	movlb	0	; () banked
 11747  01172E  4B83               	infsnz	sprintf@sp& (0+255),f,b
 11748  011730  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 11749                           
 11750                           ;doprnt.c: 542: continue;
 11751  011732  D200               	goto	l10022
 11752  011734                     l9888:
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;doprnt.c: 543: }
 11756                           ;doprnt.c: 546: width = 0;
 11757  011734  0E00               	movlw	0
 11758  011736  0100               	movlb	0	; () banked
 11759  011738  6FA5               	movwf	(sprintf@width+1)& (0+255),b
 11760  01173A  0E00               	movlw	0
 11761  01173C  6FA4               	movwf	sprintf@width& (0+255),b
 11762                           
 11763                           ;doprnt.c: 548: flag = 0;
 11764  01173E  0E00               	movlw	0
 11765  011740  0100               	movlb	0	; () banked
 11766  011742  6FA2               	movwf	sprintf@flag& (0+255),b
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;doprnt.c: 551: switch(*f) {
 11770                           
 11771                           ;doprnt.c: 550: for(;;) {
 11772  011744  D005               	goto	l9894
 11773  011746                     l9890:
 11774                           
 11775                           ;doprnt.c: 580: flag |= 0x04;
 11776  011746  0100               	movlb	0	; () banked
 11777  011748  85A2               	bsf	sprintf@flag& (0+255),2,b
 11778                           
 11779                           ;doprnt.c: 581: f++;
 11780  01174A  0100               	movlb	0	; () banked
 11781  01174C  4B85               	infsnz	sprintf@f& (0+255),f,b
 11782  01174E  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 11783  011750                     l9894:
 11784  011750  C085  FFF6         	movff	sprintf@f,tblptrl
 11785  011754  C086  FFF7         	movff	sprintf@f+1,tblptrh
 11786  011758                     	if	0	;tblptru may be non-zero
 11787  011758                     	endif
 11788  011758                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11789  011758  0E00               	movlw	low (__mediumconst shr (0+16))
 11790  01175A  6EF8               	movwf	tblptru,c
 11791  01175C                     	endif
 11792  01175C  0008               	tblrd		*
 11793  01175E  50F5               	movf	tablat,w,c
 11794                           
 11795                           ; Switch size 1, requested type "space"
 11796                           ; Number of cases is 1, Range of values is 48 to 48
 11797                           ; switch strategies available:
 11798                           ; Name         Instructions Cycles
 11799                           ; simple_byte            4     3 (average)
 11800                           ;	Chosen strategy is simple_byte
 11801  011760  0A30               	xorlw	48	; case 48
 11802  011762  B4D8               	btfsc	status,2,c
 11803  011764  D7F0               	goto	l9890
 11804                           
 11805                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11806                           
 11807                           ;doprnt.c: 586: }
 11808                           
 11809                           ;doprnt.c: 585: break;
 11810  011766  C085  FFF6         	movff	sprintf@f,tblptrl
 11811  01176A  C086  FFF7         	movff	sprintf@f+1,tblptrh
 11812  01176E                     	if	0	;tblptru may be non-zero
 11813  01176E                     	endif
 11814  01176E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11815  01176E  0E00               	movlw	low (__mediumconst shr (0+16))
 11816  011770  6EF8               	movwf	tblptru,c
 11817  011772                     	endif
 11818  011772  0008               	tblrd		*
 11819  011774  50F5               	movf	tablat,w,c
 11820  011776  EC37  F0B5         	call	_isdigit
 11821  01177A  A0D8               	btfss	status,0,c
 11822  01177C  D0CB               	goto	l9944
 11823                           
 11824                           ;doprnt.c: 598: width = 0;
 11825  01177E  0E00               	movlw	0
 11826  011780  0100               	movlb	0	; () banked
 11827  011782  6FA5               	movwf	(sprintf@width+1)& (0+255),b
 11828  011784  0E00               	movlw	0
 11829  011786  6FA4               	movwf	sprintf@width& (0+255),b
 11830  011788                     l9900:
 11831                           
 11832                           ;doprnt.c: 600: width *= 10;
 11833  011788  C0A4  F076         	movff	sprintf@width,___wmul@multiplier
 11834  01178C  C0A5  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 11835  011790  0E00               	movlw	0
 11836  011792  0100               	movlb	0	; () banked
 11837  011794  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11838  011796  0E0A               	movlw	10
 11839  011798  6F78               	movwf	___wmul@multiplicand& (0+255),b
 11840  01179A  ECED  F0B3         	call	___wmul	;wreg free
 11841  01179E  C076  F0A4         	movff	?___wmul,sprintf@width
 11842  0117A2  C077  F0A5         	movff	?___wmul+1,sprintf@width+1
 11843                           
 11844                           ;doprnt.c: 601: width += *f++ - '0';
 11845  0117A6  0ED0               	movlw	208
 11846  0117A8  0100               	movlb	0	; () banked
 11847  0117AA  6F95               	movwf	??_sprintf& (0+255),b
 11848  0117AC  0EFF               	movlw	255
 11849  0117AE  0100               	movlb	0	; () banked
 11850  0117B0  6F96               	movwf	(??_sprintf+1)& (0+255),b
 11851  0117B2  C085  FFF6         	movff	sprintf@f,tblptrl
 11852  0117B6  C086  FFF7         	movff	sprintf@f+1,tblptrh
 11853  0117BA                     	if	0	;tblptru may be non-zero
 11854  0117BA                     	endif
 11855  0117BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11856  0117BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11857  0117BC  6EF8               	movwf	tblptru,c
 11858  0117BE                     	endif
 11859  0117BE  0008               	tblrd		*
 11860  0117C0  50F5               	movf	tablat,w,c
 11861  0117C2  0100               	movlb	0	; () banked
 11862  0117C4  6F97               	movwf	(??_sprintf+2)& (0+255),b
 11863  0117C6  6B98               	clrf	(??_sprintf+3)& (0+255),b
 11864  0117C8  0100               	movlb	0	; () banked
 11865  0117CA  5195               	movf	??_sprintf& (0+255),w,b
 11866  0117CC  0100               	movlb	0	; () banked
 11867  0117CE  2797               	addwf	(??_sprintf+2)& (0+255),f,b
 11868  0117D0  0100               	movlb	0	; () banked
 11869  0117D2  5196               	movf	(??_sprintf+1)& (0+255),w,b
 11870  0117D4  0100               	movlb	0	; () banked
 11871  0117D6  2398               	addwfc	(??_sprintf+3)& (0+255),f,b
 11872  0117D8  0100               	movlb	0	; () banked
 11873  0117DA  5197               	movf	(??_sprintf+2)& (0+255),w,b
 11874  0117DC  0100               	movlb	0	; () banked
 11875  0117DE  27A4               	addwf	sprintf@width& (0+255),f,b
 11876  0117E0  0100               	movlb	0	; () banked
 11877  0117E2  5198               	movf	(??_sprintf+3)& (0+255),w,b
 11878  0117E4  0100               	movlb	0	; () banked
 11879  0117E6  23A5               	addwfc	(sprintf@width+1)& (0+255),f,b
 11880                           
 11881                           ; BSR set to: 0
 11882  0117E8  0100               	movlb	0	; () banked
 11883  0117EA  4B85               	infsnz	sprintf@f& (0+255),f,b
 11884  0117EC  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11888  0117EE  C085  FFF6         	movff	sprintf@f,tblptrl
 11889  0117F2  C086  FFF7         	movff	sprintf@f+1,tblptrh
 11890  0117F6                     	if	0	;tblptru may be non-zero
 11891  0117F6                     	endif
 11892  0117F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11893  0117F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11894  0117F8  6EF8               	movwf	tblptru,c
 11895  0117FA                     	endif
 11896  0117FA  0008               	tblrd		*
 11897  0117FC  50F5               	movf	tablat,w,c
 11898  0117FE  EC37  F0B5         	call	_isdigit
 11899  011802  A0D8               	btfss	status,0,c
 11900  011804  D087               	goto	l9944
 11901  011806  D7C0               	goto	l9900
 11902  011808                     l9908:
 11903                           
 11904                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11905  011808  C09A  FFD9         	movff	sprintf@ap,fsr2l
 11906  01180C  C09B  FFDA         	movff	sprintf@ap+1,fsr2h
 11907  011810  CFDE F09C          	movff	postinc2,sprintf@cp
 11908  011814  CFDD F09D          	movff	postdec2,sprintf@cp+1
 11909  011818  0E02               	movlw	2
 11910  01181A  0100               	movlb	0	; () banked
 11911  01181C  279A               	addwf	sprintf@ap& (0+255),f,b
 11912  01181E  0E00               	movlw	0
 11913  011820  239B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;doprnt.c: 740: if(!cp)
 11917  011822  0100               	movlb	0	; () banked
 11918  011824  519C               	movf	sprintf@cp& (0+255),w,b
 11919  011826  0100               	movlb	0	; () banked
 11920  011828  119D               	iorwf	(sprintf@cp+1)& (0+255),w,b
 11921  01182A  A4D8               	btfss	status,2,c
 11922  01182C  D006               	goto	l9916
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;doprnt.c: 741: cp = "(null)";
 11926  01182E  0E7C               	movlw	low STR_101
 11927  011830  0100               	movlb	0	; () banked
 11928  011832  6F9C               	movwf	sprintf@cp& (0+255),b
 11929  011834  0EFF               	movlw	high STR_101
 11930  011836  0100               	movlb	0	; () banked
 11931  011838  6F9D               	movwf	(sprintf@cp+1)& (0+255),b
 11932  01183A                     l9916:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;doprnt.c: 745: len = 0;
 11936  01183A  0E00               	movlw	0
 11937  01183C  0100               	movlb	0	; () banked
 11938  01183E  6FA1               	movwf	(sprintf@len+1)& (0+255),b
 11939  011840  0E00               	movlw	0
 11940  011842  6FA0               	movwf	sprintf@len& (0+255),b
 11941                           
 11942                           ;doprnt.c: 746: while(cp[len])
 11943  011844  D003               	goto	l9920
 11944  011846                     l9918:
 11945                           
 11946                           ; BSR set to: 0
 11947                           ;doprnt.c: 747: len++;
 11948  011846  0100               	movlb	0	; () banked
 11949  011848  4BA0               	infsnz	sprintf@len& (0+255),f,b
 11950  01184A  2BA1               	incf	(sprintf@len+1)& (0+255),f,b
 11951  01184C                     l9920:
 11952                           
 11953                           ; BSR set to: 0
 11954  01184C  0100               	movlb	0	; () banked
 11955  01184E  51A0               	movf	sprintf@len& (0+255),w,b
 11956  011850  0100               	movlb	0	; () banked
 11957  011852  259C               	addwf	sprintf@cp& (0+255),w,b
 11958  011854  0100               	movlb	0	; () banked
 11959  011856  6F95               	movwf	??_sprintf& (0+255),b
 11960  011858  0100               	movlb	0	; () banked
 11961  01185A  51A1               	movf	(sprintf@len+1)& (0+255),w,b
 11962  01185C  0100               	movlb	0	; () banked
 11963  01185E  219D               	addwfc	(sprintf@cp+1)& (0+255),w,b
 11964  011860  0100               	movlb	0	; () banked
 11965  011862  6F96               	movwf	(??_sprintf+1)& (0+255),b
 11966  011864  C095  FFF6         	movff	??_sprintf,tblptrl
 11967  011868  C096  FFF7         	movff	??_sprintf+1,tblptrh
 11968  01186C                     	if	0	;tblptru may be non-zero
 11969  01186C                     	endif
 11970  01186C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11971  01186C  0E00               	movlw	low (__mediumconst shr (0+16))
 11972  01186E  6EF8               	movwf	tblptru,c
 11973  011870                     	endif
 11974  011870  0008               	tblrd		*
 11975  011872  50F5               	movf	tablat,w,c
 11976  011874  0900               	iorlw	0
 11977  011876  A4D8               	btfss	status,2,c
 11978  011878  D7E6               	goto	l9918
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;doprnt.c: 757: if(width > len)
 11982                           
 11983                           ; BSR set to: 0
 11984  01187A  0100               	movlb	0	; () banked
 11985  01187C  51A4               	movf	sprintf@width& (0+255),w,b
 11986  01187E  0100               	movlb	0	; () banked
 11987  011880  5DA0               	subwf	sprintf@len& (0+255),w,b
 11988  011882  0100               	movlb	0	; () banked
 11989  011884  51A5               	movf	(sprintf@width+1)& (0+255),w,b
 11990  011886  0100               	movlb	0	; () banked
 11991  011888  59A1               	subwfb	(sprintf@len+1)& (0+255),w,b
 11992  01188A  B0D8               	btfsc	status,0,c
 11993  01188C  D009               	goto	l9926
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;doprnt.c: 758: width -= len;
 11997  01188E  0100               	movlb	0	; () banked
 11998  011890  51A0               	movf	sprintf@len& (0+255),w,b
 11999  011892  0100               	movlb	0	; () banked
 12000  011894  5FA4               	subwf	sprintf@width& (0+255),f,b
 12001  011896  0100               	movlb	0	; () banked
 12002  011898  51A1               	movf	(sprintf@len+1)& (0+255),w,b
 12003  01189A  0100               	movlb	0	; () banked
 12004  01189C  5BA5               	subwfb	(sprintf@width+1)& (0+255),f,b
 12005  01189E  D00F               	goto	l9932
 12006  0118A0                     l9926:
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;doprnt.c: 759: else
 12010                           ;doprnt.c: 760: width = 0;
 12011  0118A0  0E00               	movlw	0
 12012  0118A2  0100               	movlb	0	; () banked
 12013  0118A4  6FA5               	movwf	(sprintf@width+1)& (0+255),b
 12014  0118A6  0E00               	movlw	0
 12015  0118A8  6FA4               	movwf	sprintf@width& (0+255),b
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;doprnt.c: 764: while(width--)
 12019  0118AA  D009               	goto	l9932
 12020  0118AC                     l9928:
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;doprnt.c: 765: ((*sp++ = (' ')));
 12024  0118AC  C083  FFD9         	movff	sprintf@sp,fsr2l
 12025  0118B0  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12026  0118B4  0E20               	movlw	32
 12027  0118B6  6EDF               	movwf	indf2,c
 12028                           
 12029                           ; BSR set to: 0
 12030  0118B8  0100               	movlb	0	; () banked
 12031  0118BA  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12032  0118BC  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12033  0118BE                     l9932:
 12034                           
 12035                           ; BSR set to: 0
 12036  0118BE  0100               	movlb	0	; () banked
 12037  0118C0  07A4               	decf	sprintf@width& (0+255),f,b
 12038  0118C2  A0D8               	btfss	status,0,c
 12039  0118C4  07A5               	decf	(sprintf@width+1)& (0+255),f,b
 12040  0118C6  0100               	movlb	0	; () banked
 12041  0118C8  29A4               	incf	sprintf@width& (0+255),w,b
 12042  0118CA  E1F0               	bnz	l9928
 12043  0118CC  0100               	movlb	0	; () banked
 12044  0118CE  29A5               	incf	(sprintf@width+1)& (0+255),w,b
 12045  0118D0  B4D8               	btfsc	status,2,c
 12046  0118D2  D014               	goto	l9940
 12047  0118D4  D7EB               	goto	l9928
 12048  0118D6                     l9934:
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 12052  0118D6  C09C  FFF6         	movff	sprintf@cp,tblptrl
 12053  0118DA  C09D  FFF7         	movff	sprintf@cp+1,tblptrh
 12054  0118DE                     	if	0	;tblptru may be non-zero
 12055  0118DE                     	endif
 12056  0118DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12057  0118DE  0E00               	movlw	low (__mediumconst shr (0+16))
 12058  0118E0  6EF8               	movwf	tblptru,c
 12059  0118E2                     	endif
 12060  0118E2  C083  FFD9         	movff	sprintf@sp,fsr2l
 12061  0118E6  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12062  0118EA  0008               	tblrd		*
 12063  0118EC  CFF5 FFDF          	movff	tablat,indf2
 12064                           
 12065                           ; BSR set to: 0
 12066  0118F0  0100               	movlb	0	; () banked
 12067  0118F2  4B9C               	infsnz	sprintf@cp& (0+255),f,b
 12068  0118F4  2B9D               	incf	(sprintf@cp+1)& (0+255),f,b
 12069                           
 12070                           ; BSR set to: 0
 12071  0118F6  0100               	movlb	0	; () banked
 12072  0118F8  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12073  0118FA  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12074  0118FC                     l9940:
 12075                           
 12076                           ; BSR set to: 0
 12077  0118FC  0100               	movlb	0	; () banked
 12078  0118FE  07A0               	decf	sprintf@len& (0+255),f,b
 12079  011900  A0D8               	btfss	status,0,c
 12080  011902  07A1               	decf	(sprintf@len+1)& (0+255),f,b
 12081  011904  0100               	movlb	0	; () banked
 12082  011906  29A0               	incf	sprintf@len& (0+255),w,b
 12083  011908  E1E6               	bnz	l9934
 12084  01190A  0100               	movlb	0	; () banked
 12085  01190C  29A1               	incf	(sprintf@len+1)& (0+255),w,b
 12086  01190E  B4D8               	btfsc	status,2,c
 12087  011910  D111               	goto	l10022
 12088  011912  D7E1               	goto	l9934
 12089  011914                     l9944:
 12090  011914  C085  FFF6         	movff	sprintf@f,tblptrl
 12091  011918  C086  FFF7         	movff	sprintf@f+1,tblptrh
 12092  01191C  0100               	movlb	0	; () banked
 12093  01191E  4B85               	infsnz	sprintf@f& (0+255),f,b
 12094  011920  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 12095  011922                     	if	0	;tblptru may be non-zero
 12096  011922                     	endif
 12097  011922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12098  011922  0E00               	movlw	low (__mediumconst shr (0+16))
 12099  011924  6EF8               	movwf	tblptru,c
 12100  011926                     	endif
 12101  011926  0008               	tblrd		*
 12102  011928  CFF5 F0A3          	movff	tablat,sprintf@c
 12103  01192C  0100               	movlb	0	; () banked
 12104  01192E  51A3               	movf	sprintf@c& (0+255),w,b
 12105                           
 12106                           ; Switch size 1, requested type "space"
 12107                           ; Number of cases is 4, Range of values is 0 to 115
 12108                           ; switch strategies available:
 12109                           ; Name         Instructions Cycles
 12110                           ; simple_byte           13     7 (average)
 12111                           ;	Chosen strategy is simple_byte
 12112  011930  0A00               	xorlw	0	; case 0
 12113  011932  B4D8               	btfsc	status,2,c
 12114  011934  D10F               	goto	l10024
 12115  011936  0A64               	xorlw	100	; case 100
 12116  011938  B4D8               	btfsc	status,2,c
 12117  01193A  D007               	goto	l9946
 12118  01193C  0A0D               	xorlw	13	; case 105
 12119  01193E  B4D8               	btfsc	status,2,c
 12120  011940  D004               	goto	l9946
 12121  011942  0A1A               	xorlw	26	; case 115
 12122  011944  B4D8               	btfsc	status,2,c
 12123  011946  D760               	goto	l9908
 12124  011948  D0F5               	goto	l10022
 12125  01194A                     l9946:
 12126                           
 12127                           ;doprnt.c: 1253: {
 12128                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 12129  01194A  C09A  FFD9         	movff	sprintf@ap,fsr2l
 12130  01194E  C09B  FFDA         	movff	sprintf@ap+1,fsr2h
 12131  011952  CFDE F09E          	movff	postinc2,sprintf@val
 12132  011956  CFDD F09F          	movff	postdec2,sprintf@val+1
 12133  01195A  0E02               	movlw	2
 12134  01195C  0100               	movlb	0	; () banked
 12135  01195E  279A               	addwf	sprintf@ap& (0+255),f,b
 12136  011960  0E00               	movlw	0
 12137  011962  239B               	addwfc	(sprintf@ap+1)& (0+255),f,b
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;doprnt.c: 1261: if((int)val < 0) {
 12141  011964  0100               	movlb	0	; () banked
 12142  011966  AF9F               	btfss	(sprintf@val+1)& (0+255),7,b
 12143  011968  D008               	goto	l9956
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;doprnt.c: 1262: flag |= 0x03;
 12147  01196A  0E03               	movlw	3
 12148  01196C  0100               	movlb	0	; () banked
 12149  01196E  13A2               	iorwf	sprintf@flag& (0+255),f,b
 12150                           
 12151                           ; BSR set to: 0
 12152                           ;doprnt.c: 1263: val = -val;
 12153  011970  0100               	movlb	0	; () banked
 12154  011972  6D9E               	negf	sprintf@val& (0+255),b
 12155  011974  1F9F               	comf	(sprintf@val+1)& (0+255),f,b
 12156  011976  B0D8               	btfsc	status,0,c
 12157  011978  2B9F               	incf	(sprintf@val+1)& (0+255),f,b
 12158  01197A                     l9956:
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;doprnt.c: 1264: }
 12162                           ;doprnt.c: 1266: }
 12163                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12164  01197A  0E01               	movlw	1
 12165  01197C  0100               	movlb	0	; () banked
 12166  01197E  6FA3               	movwf	sprintf@c& (0+255),b
 12167  011980                     l9958:
 12168                           
 12169                           ; BSR set to: 0
 12170  011980  0E05               	movlw	5
 12171  011982  0100               	movlb	0	; () banked
 12172  011984  19A3               	xorwf	sprintf@c& (0+255),w,b
 12173  011986  B4D8               	btfsc	status,2,c
 12174  011988  D019               	goto	l9970
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;doprnt.c: 1306: if(val < dpowers[c])
 12178                           
 12179                           ; BSR set to: 0
 12180                           
 12181                           ; BSR set to: 0
 12182  01198A  0100               	movlb	0	; () banked
 12183  01198C  51A3               	movf	sprintf@c& (0+255),w,b
 12184  01198E  0D02               	mullw	2
 12185  011990  0ECD               	movlw	low _dpowers
 12186  011992  24F3               	addwf	prodl,w,c
 12187  011994  6EF6               	movwf	tblptrl,c
 12188  011996  0EFA               	movlw	high _dpowers
 12189  011998  20F4               	addwfc	prodh,w,c
 12190  01199A  6EF7               	movwf	tblptrh,c
 12191  01199C                     	if	1	;There are 3 active tblptr bytes
 12192  01199C  6AF8               	clrf	tblptru,c
 12193  01199E  0E00               	movlw	low (__mediumconst shr (0+16))
 12194  0119A0  22F8               	addwfc	tblptru,f,c
 12195  0119A2                     	endif
 12196  0119A2  0009               	tblrd		*+
 12197  0119A4  50F5               	movf	tablat,w,c
 12198  0119A6  0100               	movlb	0	; () banked
 12199  0119A8  5D9E               	subwf	sprintf@val& (0+255),w,b
 12200  0119AA  0009               	tblrd		*+
 12201  0119AC  50F5               	movf	tablat,w,c
 12202  0119AE  0100               	movlb	0	; () banked
 12203  0119B0  599F               	subwfb	(sprintf@val+1)& (0+255),w,b
 12204  0119B2  A0D8               	btfss	status,0,c
 12205  0119B4  D003               	goto	l9970
 12206                           
 12207                           ; BSR set to: 0
 12208                           
 12209                           ; BSR set to: 0
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;doprnt.c: 1307: break;
 12213  0119B6  0100               	movlb	0	; () banked
 12214  0119B8  2BA3               	incf	sprintf@c& (0+255),f,b
 12215  0119BA  D7E2               	goto	l9958
 12216  0119BC                     l9970:
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12220  0119BC  0100               	movlb	0	; () banked
 12221  0119BE  51A4               	movf	sprintf@width& (0+255),w,b
 12222  0119C0  0100               	movlb	0	; () banked
 12223  0119C2  11A5               	iorwf	(sprintf@width+1)& (0+255),w,b
 12224  0119C4  B4D8               	btfsc	status,2,c
 12225  0119C6  D00B               	goto	l9976
 12226                           
 12227                           ; BSR set to: 0
 12228  0119C8  C0A2  F095         	movff	sprintf@flag,??_sprintf
 12229  0119CC  0E03               	movlw	3
 12230  0119CE  0100               	movlb	0	; () banked
 12231  0119D0  1795               	andwf	??_sprintf& (0+255),f,b
 12232  0119D2  B4D8               	btfsc	status,2,c
 12233  0119D4  D004               	goto	l9976
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;doprnt.c: 1346: width--;
 12237  0119D6  0100               	movlb	0	; () banked
 12238  0119D8  07A4               	decf	sprintf@width& (0+255),f,b
 12239  0119DA  A0D8               	btfss	status,0,c
 12240  0119DC  07A5               	decf	(sprintf@width+1)& (0+255),f,b
 12241  0119DE                     l9976:
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;doprnt.c: 1381: if(width > c)
 12245  0119DE  0E80               	movlw	128
 12246  0119E0  0100               	movlb	0	; () banked
 12247  0119E2  BFA3               	btfsc	sprintf@c& (0+255),7,b
 12248  0119E4  0E7F               	movlw	127
 12249  0119E6  0100               	movlb	0	; () banked
 12250  0119E8  6F95               	movwf	??_sprintf& (0+255),b
 12251  0119EA  0100               	movlb	0	; () banked
 12252  0119EC  51A4               	movf	sprintf@width& (0+255),w,b
 12253  0119EE  0100               	movlb	0	; () banked
 12254  0119F0  5DA3               	subwf	sprintf@c& (0+255),w,b
 12255  0119F2  0100               	movlb	0	; () banked
 12256  0119F4  51A5               	movf	(sprintf@width+1)& (0+255),w,b
 12257  0119F6  0A80               	xorlw	128
 12258  0119F8  0100               	movlb	0	; () banked
 12259  0119FA  5995               	subwfb	??_sprintf& (0+255),w,b
 12260  0119FC  B0D8               	btfsc	status,0,c
 12261  0119FE  D00B               	goto	l9980
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;doprnt.c: 1382: width -= c;
 12265  011A00  0100               	movlb	0	; () banked
 12266  011A02  51A3               	movf	sprintf@c& (0+255),w,b
 12267  011A04  0100               	movlb	0	; () banked
 12268  011A06  5FA4               	subwf	sprintf@width& (0+255),f,b
 12269  011A08  0E00               	movlw	0
 12270  011A0A  0100               	movlb	0	; () banked
 12271  011A0C  BFA3               	btfsc	sprintf@c& (0+255),7,b
 12272  011A0E  0EFF               	movlw	255
 12273  011A10  0100               	movlb	0	; () banked
 12274  011A12  5BA5               	subwfb	(sprintf@width+1)& (0+255),f,b
 12275  011A14  D005               	goto	l9982
 12276  011A16                     l9980:
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;doprnt.c: 1383: else
 12280                           ;doprnt.c: 1384: width = 0;
 12281  011A16  0E00               	movlw	0
 12282  011A18  0100               	movlb	0	; () banked
 12283  011A1A  6FA5               	movwf	(sprintf@width+1)& (0+255),b
 12284  011A1C  0E00               	movlw	0
 12285  011A1E  6FA4               	movwf	sprintf@width& (0+255),b
 12286  011A20                     l9982:
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;doprnt.c: 1387: if(flag & 0x04) {
 12290  011A20  0100               	movlb	0	; () banked
 12291  011A22  A5A2               	btfss	sprintf@flag& (0+255),2,b
 12292  011A24  D024               	goto	l9998
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;doprnt.c: 1392: if(flag & 0x03)
 12296  011A26  C0A2  F095         	movff	sprintf@flag,??_sprintf
 12297  011A2A  0E03               	movlw	3
 12298  011A2C  0100               	movlb	0	; () banked
 12299  011A2E  1795               	andwf	??_sprintf& (0+255),f,b
 12300  011A30  B4D8               	btfsc	status,2,c
 12301  011A32  D009               	goto	l9990
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 12305  011A34  C083  FFD9         	movff	sprintf@sp,fsr2l
 12306  011A38  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12307  011A3C  0E2D               	movlw	45
 12308  011A3E  6EDF               	movwf	indf2,c
 12309                           
 12310                           ; BSR set to: 0
 12311  011A40  0100               	movlb	0	; () banked
 12312  011A42  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12313  011A44  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12314  011A46                     l9990:
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;doprnt.c: 1415: if(width)
 12318  011A46  0100               	movlb	0	; () banked
 12319  011A48  51A4               	movf	sprintf@width& (0+255),w,b
 12320  011A4A  0100               	movlb	0	; () banked
 12321  011A4C  11A5               	iorwf	(sprintf@width+1)& (0+255),w,b
 12322  011A4E  B4D8               	btfsc	status,2,c
 12323  011A50  D037               	goto	l10012
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12327                           
 12328                           ; BSR set to: 0
 12329                           
 12330                           ;doprnt.c: 1416: do
 12331  011A52  C083  FFD9         	movff	sprintf@sp,fsr2l
 12332  011A56  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12333  011A5A  0E30               	movlw	48
 12334  011A5C  6EDF               	movwf	indf2,c
 12335                           
 12336                           ; BSR set to: 0
 12337  011A5E  0100               	movlb	0	; () banked
 12338  011A60  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12339  011A62  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;doprnt.c: 1418: while(--width);
 12343  011A64  0100               	movlb	0	; () banked
 12344  011A66  07A4               	decf	sprintf@width& (0+255),f,b
 12345  011A68  A0D8               	btfss	status,0,c
 12346  011A6A  07A5               	decf	(sprintf@width+1)& (0+255),f,b
 12347  011A6C  D7EC               	goto	l9990
 12348  011A6E                     l9998:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;doprnt.c: 1422: {
 12352                           ;doprnt.c: 1424: if(width
 12353                           ;doprnt.c: 1428: )
 12354  011A6E  0100               	movlb	0	; () banked
 12355  011A70  51A4               	movf	sprintf@width& (0+255),w,b
 12356  011A72  0100               	movlb	0	; () banked
 12357  011A74  11A5               	iorwf	(sprintf@width+1)& (0+255),w,b
 12358  011A76  B4D8               	btfsc	status,2,c
 12359  011A78  D013               	goto	l10006
 12360  011A7A                     l10000:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12364  011A7A  C083  FFD9         	movff	sprintf@sp,fsr2l
 12365  011A7E  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12366  011A82  0E20               	movlw	32
 12367  011A84  6EDF               	movwf	indf2,c
 12368                           
 12369                           ; BSR set to: 0
 12370  011A86  0100               	movlb	0	; () banked
 12371  011A88  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12372  011A8A  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;doprnt.c: 1431: while(--width);
 12376  011A8C  0100               	movlb	0	; () banked
 12377  011A8E  07A4               	decf	sprintf@width& (0+255),f,b
 12378  011A90  A0D8               	btfss	status,0,c
 12379  011A92  07A5               	decf	(sprintf@width+1)& (0+255),f,b
 12380  011A94  0100               	movlb	0	; () banked
 12381  011A96  51A4               	movf	sprintf@width& (0+255),w,b
 12382  011A98  0100               	movlb	0	; () banked
 12383  011A9A  11A5               	iorwf	(sprintf@width+1)& (0+255),w,b
 12384  011A9C  A4D8               	btfss	status,2,c
 12385  011A9E  D7ED               	goto	l10000
 12386  011AA0                     l10006:
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;doprnt.c: 1438: if(flag & 0x03)
 12390  011AA0  C0A2  F095         	movff	sprintf@flag,??_sprintf
 12391  011AA4  0E03               	movlw	3
 12392  011AA6  0100               	movlb	0	; () banked
 12393  011AA8  1795               	andwf	??_sprintf& (0+255),f,b
 12394  011AAA  B4D8               	btfsc	status,2,c
 12395  011AAC  D009               	goto	l10012
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 12399  011AAE  C083  FFD9         	movff	sprintf@sp,fsr2l
 12400  011AB2  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12401  011AB6  0E2D               	movlw	45
 12402  011AB8  6EDF               	movwf	indf2,c
 12403                           
 12404                           ; BSR set to: 0
 12405  011ABA  0100               	movlb	0	; () banked
 12406  011ABC  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12407  011ABE  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12408  011AC0                     l10012:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;doprnt.c: 1469: }
 12412                           ;doprnt.c: 1472: prec = c;
 12413  011AC0  C0A3  F099         	movff	sprintf@c,sprintf@prec
 12414                           
 12415                           ;doprnt.c: 1474: while(prec--) {
 12416  011AC4  D031               	goto	l10020
 12417  011AC6                     l10014:
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;doprnt.c: 1478: {
 12421                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12422  011AC6  0100               	movlb	0	; () banked
 12423  011AC8  5199               	movf	sprintf@prec& (0+255),w,b
 12424  011ACA  0D02               	mullw	2
 12425  011ACC  0ECD               	movlw	low _dpowers
 12426  011ACE  24F3               	addwf	prodl,w,c
 12427  011AD0  6EF6               	movwf	tblptrl,c
 12428  011AD2  0EFA               	movlw	high _dpowers
 12429  011AD4  20F4               	addwfc	prodh,w,c
 12430  011AD6  6EF7               	movwf	tblptrh,c
 12431  011AD8                     	if	1	;There are 3 active tblptr bytes
 12432  011AD8  6AF8               	clrf	tblptru,c
 12433  011ADA  0E00               	movlw	low (__mediumconst shr (0+16))
 12434  011ADC  22F8               	addwfc	tblptru,f,c
 12435  011ADE                     	endif
 12436  011ADE  0009               	tblrd		*+
 12437  011AE0  CFF5 F07E          	movff	tablat,___lwdiv@divisor
 12438  011AE4  000A               	tblrd		*-
 12439  011AE6  CFF5 F07F          	movff	tablat,___lwdiv@divisor+1
 12440  011AEA  C09E  F07C         	movff	sprintf@val,___lwdiv@dividend
 12441  011AEE  C09F  F07D         	movff	sprintf@val+1,___lwdiv@dividend+1
 12442  011AF2  EC66  F0AF         	call	___lwdiv	;wreg free
 12443  011AF6  C07C  F060         	movff	?___lwdiv,___lwmod@dividend
 12444  011AFA  C07D  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
 12445  011AFE  0E00               	movlw	0
 12446  011B00  0100               	movlb	0	; () banked
 12447  011B02  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12448  011B04  0E0A               	movlw	10
 12449  011B06  6F62               	movwf	___lwmod@divisor& (0+255),b
 12450  011B08  EC21  F0B1         	call	___lwmod	;wreg free
 12451  011B0C  0100               	movlb	0	; () banked
 12452  011B0E  5160               	movf	?___lwmod& (0+255),w,b
 12453  011B10  0F30               	addlw	48
 12454  011B12  0100               	movlb	0	; () banked
 12455  011B14  6FA3               	movwf	sprintf@c& (0+255),b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;doprnt.c: 1523: }
 12459                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12460  011B16  C083  FFD9         	movff	sprintf@sp,fsr2l
 12461  011B1A  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12462  011B1E  C0A3  FFDF         	movff	sprintf@c,indf2
 12463                           
 12464                           ; BSR set to: 0
 12465  011B22  0100               	movlb	0	; () banked
 12466  011B24  4B83               	infsnz	sprintf@sp& (0+255),f,b
 12467  011B26  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
 12468  011B28                     l10020:
 12469                           
 12470                           ; BSR set to: 0
 12471  011B28  0100               	movlb	0	; () banked
 12472  011B2A  0799               	decf	sprintf@prec& (0+255),f,b
 12473  011B2C  0100               	movlb	0	; () banked
 12474  011B2E  2999               	incf	sprintf@prec& (0+255),w,b
 12475  011B30  A4D8               	btfss	status,2,c
 12476  011B32  D7C9               	goto	l10014
 12477  011B34                     l10022:
 12478                           
 12479                           ; BSR set to: 0
 12480  011B34  C085  FFF6         	movff	sprintf@f,tblptrl
 12481  011B38  C086  FFF7         	movff	sprintf@f+1,tblptrh
 12482  011B3C  0100               	movlb	0	; () banked
 12483  011B3E  4B85               	infsnz	sprintf@f& (0+255),f,b
 12484  011B40  2B86               	incf	(sprintf@f+1)& (0+255),f,b
 12485  011B42                     	if	0	;tblptru may be non-zero
 12486  011B42                     	endif
 12487  011B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12488  011B42  0E00               	movlw	low (__mediumconst shr (0+16))
 12489  011B44  6EF8               	movwf	tblptru,c
 12490  011B46                     	endif
 12491  011B46  0008               	tblrd		*
 12492  011B48  CFF5 F0A3          	movff	tablat,sprintf@c
 12493  011B4C  0100               	movlb	0	; () banked
 12494  011B4E  51A3               	movf	sprintf@c& (0+255),w,b
 12495  011B50  A4D8               	btfss	status,2,c
 12496  011B52  D5E1               	goto	l9882
 12497  011B54                     l10024:
 12498                           
 12499                           ;doprnt.c: 1538: *sp = 0;
 12500  011B54  C083  FFD9         	movff	sprintf@sp,fsr2l
 12501  011B58  C084  FFDA         	movff	sprintf@sp+1,fsr2h
 12502  011B5C  0E00               	movlw	0
 12503  011B5E  6EDF               	movwf	indf2,c
 12504  011B60  0012               	return	
 12505  011B62                     __end_of_sprintf:
 12506                           	opt stack 0
 12507                           tblptru	equ	0xFF8
 12508                           tblptrh	equ	0xFF7
 12509                           tblptrl	equ	0xFF6
 12510                           tablat	equ	0xFF5
 12511                           prodh	equ	0xFF4
 12512                           prodl	equ	0xFF3
 12513                           intcon	equ	0xFF2
 12514                           postinc0	equ	0xFEE
 12515                           wreg	equ	0xFE8
 12516                           indf1	equ	0xFE7
 12517                           postinc1	equ	0xFE6
 12518                           postdec1	equ	0xFE5
 12519                           fsr1h	equ	0xFE2
 12520                           fsr1l	equ	0xFE1
 12521                           indf2	equ	0xFDF
 12522                           postinc2	equ	0xFDE
 12523                           postdec2	equ	0xFDD
 12524                           plusw2	equ	0xFDB
 12525                           fsr2h	equ	0xFDA
 12526                           fsr2l	equ	0xFD9
 12527                           status	equ	0xFD8
 12528                           
 12529 ;; *************** function _isdigit *****************
 12530 ;; Defined at:
 12531 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;  c               1    wreg     unsigned char 
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;  c               1    2[BANK0 ] unsigned char 
 12536 ;; Return value:  Size  Location     Type
 12537 ;;		None               void
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0
 12540 ;; Tracked objects:
 12541 ;;		On entry : 0/0
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12546 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12547 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12548 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12549 ;;Total ram usage:        3 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; Hardware stack levels required when called:   11
 12552 ;; This function calls:
 12553 ;;		Nothing
 12554 ;; This function is called by:
 12555 ;;		_sprintf
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text34
 12560  016A6E                     __ptext34:
 12561                           	opt stack 0
 12562  016A6E                     _isdigit:
 12563                           	opt stack 15
 12564                           
 12565                           ;incstack = 0
 12566                           ;isdigit@c stored from wreg
 12567  016A6E  0100               	movlb	0	; () banked
 12568  016A70  6F62               	movwf	isdigit@c& (0+255),b
 12569  016A72  0E00               	movlw	0
 12570  016A74  0100               	movlb	0	; () banked
 12571  016A76  6F61               	movwf	_isdigit$4728& (0+255),b
 12572                           
 12573                           ; BSR set to: 0
 12574  016A78  0E3A               	movlw	58
 12575  016A7A  0100               	movlb	0	; () banked
 12576  016A7C  6162               	cpfslt	isdigit@c& (0+255),b
 12577  016A7E  D007               	goto	l9714
 12578                           
 12579                           ; BSR set to: 0
 12580  016A80  0E2F               	movlw	47
 12581  016A82  0100               	movlb	0	; () banked
 12582  016A84  6562               	cpfsgt	isdigit@c& (0+255),b
 12583  016A86  D003               	goto	l9714
 12584                           
 12585                           ; BSR set to: 0
 12586  016A88  0E01               	movlw	1
 12587  016A8A  0100               	movlb	0	; () banked
 12588  016A8C  6F61               	movwf	_isdigit$4728& (0+255),b
 12589  016A8E                     l9714:
 12590                           
 12591                           ; BSR set to: 0
 12592  016A8E  C061  F060         	movff	_isdigit$4728,??_isdigit
 12593  016A92  0100               	movlb	0	; () banked
 12594  016A94  3160               	rrcf	??_isdigit& (0+255),w,b
 12595  016A96  0012               	return	
 12596  016A98                     __end_of_isdigit:
 12597                           	opt stack 0
 12598                           tblptru	equ	0xFF8
 12599                           tblptrh	equ	0xFF7
 12600                           tblptrl	equ	0xFF6
 12601                           tablat	equ	0xFF5
 12602                           prodh	equ	0xFF4
 12603                           prodl	equ	0xFF3
 12604                           intcon	equ	0xFF2
 12605                           postinc0	equ	0xFEE
 12606                           wreg	equ	0xFE8
 12607                           indf1	equ	0xFE7
 12608                           postinc1	equ	0xFE6
 12609                           postdec1	equ	0xFE5
 12610                           fsr1h	equ	0xFE2
 12611                           fsr1l	equ	0xFE1
 12612                           indf2	equ	0xFDF
 12613                           postinc2	equ	0xFDE
 12614                           postdec2	equ	0xFDD
 12615                           plusw2	equ	0xFDB
 12616                           fsr2h	equ	0xFDA
 12617                           fsr2l	equ	0xFD9
 12618                           status	equ	0xFD8
 12619                           
 12620 ;; *************** function ___wmul *****************
 12621 ;; Defined at:
 12622 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;  multiplier      2   22[BANK0 ] unsigned int 
 12625 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 12626 ;; Auto vars:     Size  Location     Type
 12627 ;;  product         2   26[BANK0 ] unsigned int 
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  2   22[BANK0 ] unsigned int 
 12630 ;; Registers used:
 12631 ;;		wreg, status,2, status,0, prodl, prodh
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12637 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12638 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12640 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12641 ;;Total ram usage:        6 bytes
 12642 ;; Hardware stack levels used:    1
 12643 ;; Hardware stack levels required when called:   11
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_my_atoi
 12648 ;;		_Auto_cut
 12649 ;;		_ctmu_set_ratio
 12650 ;;		_sprintf
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           	psect	text35
 12655  0167DA                     __ptext35:
 12656                           	opt stack 0
 12657  0167DA                     ___wmul:
 12658                           	opt stack 17
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;incstack = 0
 12662  0167DA  0100               	movlb	0	; () banked
 12663  0167DC  5176               	movf	___wmul@multiplier& (0+255),w,b
 12664  0167DE  0100               	movlb	0	; () banked
 12665  0167E0  0378               	mulwf	___wmul@multiplicand& (0+255),b
 12666  0167E2  CFF3 F07A          	movff	prodl,___wmul@product
 12667  0167E6  CFF4 F07B          	movff	prodh,___wmul@product+1
 12668  0167EA  0100               	movlb	0	; () banked
 12669  0167EC  5176               	movf	___wmul@multiplier& (0+255),w,b
 12670  0167EE  0100               	movlb	0	; () banked
 12671  0167F0  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12672  0167F2  50F3               	movf	prodl,w,c
 12673  0167F4  0100               	movlb	0	; () banked
 12674  0167F6  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 12675  0167F8  0100               	movlb	0	; () banked
 12676  0167FA  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12677  0167FC  0100               	movlb	0	; () banked
 12678  0167FE  0378               	mulwf	___wmul@multiplicand& (0+255),b
 12679  016800  50F3               	movf	prodl,w,c
 12680  016802  0100               	movlb	0	; () banked
 12681  016804  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 12682                           
 12683                           ; BSR set to: 0
 12684  016806  C07A  F076         	movff	___wmul@product,?___wmul
 12685  01680A  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 12686  01680E  0012               	return	
 12687  016810                     __end_of___wmul:
 12688                           	opt stack 0
 12689                           tblptru	equ	0xFF8
 12690                           tblptrh	equ	0xFF7
 12691                           tblptrl	equ	0xFF6
 12692                           tablat	equ	0xFF5
 12693                           prodh	equ	0xFF4
 12694                           prodl	equ	0xFF3
 12695                           intcon	equ	0xFF2
 12696                           postinc0	equ	0xFEE
 12697                           wreg	equ	0xFE8
 12698                           indf1	equ	0xFE7
 12699                           postinc1	equ	0xFE6
 12700                           postdec1	equ	0xFE5
 12701                           fsr1h	equ	0xFE2
 12702                           fsr1l	equ	0xFE1
 12703                           indf2	equ	0xFDF
 12704                           postinc2	equ	0xFDE
 12705                           postdec2	equ	0xFDD
 12706                           plusw2	equ	0xFDB
 12707                           fsr2h	equ	0xFDA
 12708                           fsr2l	equ	0xFD9
 12709                           status	equ	0xFD8
 12710                           
 12711 ;; *************** function _RTCC_from_caltime *****************
 12712 ;; Defined at:
 12713 ;;		line 236 in file "../My_header\My_RTCC.h"
 12714 ;; Parameters:    Size  Location     Type
 12715 ;;  ct              2   49[BANK0 ] PTR struct .
 12716 ;;		 -> caltime_now(7), 
 12717 ;;  ep              2   51[BANK0 ] PTR unsigned long 
 12718 ;;		 -> epoch_now(4), 
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;		None               void
 12723 ;; Registers used:
 12724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12730 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12733 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12734 ;;Total ram usage:        4 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:   14
 12737 ;; This function calls:
 12738 ;;		_caltime_to_RTCC
 12739 ;;		_caltime_to_epoch
 12740 ;;		_epoch_to_caltime
 12741 ;; This function is called by:
 12742 ;;		_command_at_hand
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           	psect	text36
 12747  016810                     __ptext36:
 12748                           	opt stack 0
 12749  016810                     _RTCC_from_caltime:
 12750                           	opt stack 12
 12751                           
 12752                           ;My_header\My_RTCC.h: 237: caltime_to_epoch(ct, ep);
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;incstack = 0
 12756  016810  C091  F079         	movff	RTCC_from_caltime@ct,caltime_to_epoch@ct
 12757  016814  C092  F07A         	movff	RTCC_from_caltime@ct+1,caltime_to_epoch@ct+1
 12758  016818  C093  F07B         	movff	RTCC_from_caltime@ep,caltime_to_epoch@ep
 12759  01681C  C094  F07C         	movff	RTCC_from_caltime@ep+1,caltime_to_epoch@ep+1
 12760  016820  EC70  F092         	call	_caltime_to_epoch	;wreg free
 12761                           
 12762                           ;My_header\My_RTCC.h: 238: epoch_to_caltime(ct, ep);
 12763  016824  C091  F081         	movff	RTCC_from_caltime@ct,epoch_to_caltime@ct
 12764  016828  C092  F082         	movff	RTCC_from_caltime@ct+1,epoch_to_caltime@ct+1
 12765  01682C  C093  F083         	movff	RTCC_from_caltime@ep,epoch_to_caltime@ep
 12766  016830  C094  F084         	movff	RTCC_from_caltime@ep+1,epoch_to_caltime@ep+1
 12767  016834  EC58  F097         	call	_epoch_to_caltime	;wreg free
 12768                           
 12769                           ;My_header\My_RTCC.h: 239: caltime_to_RTCC(ct);
 12770  016838  C091  F069         	movff	RTCC_from_caltime@ct,caltime_to_RTCC@ct
 12771  01683C  C092  F06A         	movff	RTCC_from_caltime@ct+1,caltime_to_RTCC@ct+1
 12772  016840  EC49  F0A5         	call	_caltime_to_RTCC	;wreg free
 12773  016844  0012               	return		;funcret
 12774  016846                     __end_of_RTCC_from_caltime:
 12775                           	opt stack 0
 12776                           tblptru	equ	0xFF8
 12777                           tblptrh	equ	0xFF7
 12778                           tblptrl	equ	0xFF6
 12779                           tablat	equ	0xFF5
 12780                           prodh	equ	0xFF4
 12781                           prodl	equ	0xFF3
 12782                           intcon	equ	0xFF2
 12783                           postinc0	equ	0xFEE
 12784                           wreg	equ	0xFE8
 12785                           indf1	equ	0xFE7
 12786                           postinc1	equ	0xFE6
 12787                           postdec1	equ	0xFE5
 12788                           fsr1h	equ	0xFE2
 12789                           fsr1l	equ	0xFE1
 12790                           indf2	equ	0xFDF
 12791                           postinc2	equ	0xFDE
 12792                           postdec2	equ	0xFDD
 12793                           plusw2	equ	0xFDB
 12794                           fsr2h	equ	0xFDA
 12795                           fsr2l	equ	0xFD9
 12796                           status	equ	0xFD8
 12797                           
 12798 ;; *************** function _epoch_to_caltime *****************
 12799 ;; Defined at:
 12800 ;;		line 157 in file "../My_header\My_RTCC.h"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;  ct              2   33[BANK0 ] PTR struct .
 12803 ;;		 -> caltime_now(7), 
 12804 ;;  ep              2   35[BANK0 ] PTR unsigned long 
 12805 ;;		 -> epoch_now(4), 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  num             4   45[BANK0 ] unsigned long 
 12808 ;;  day             2   41[BANK0 ] unsigned int 
 12809 ;;  day_since_ep    2   39[BANK0 ] unsigned int 
 12810 ;;  month           1   44[BANK0 ] unsigned char 
 12811 ;;  year            1   43[BANK0 ] unsigned char 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;		None               void
 12814 ;; Registers used:
 12815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12821 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12822 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12824 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12825 ;;Total ram usage:       16 bytes
 12826 ;; Hardware stack levels used:    1
 12827 ;; Hardware stack levels required when called:   13
 12828 ;; This function calls:
 12829 ;;		_get_quot_rem
 12830 ;;		_month_length
 12831 ;; This function is called by:
 12832 ;;		_RTCC_from_caltime
 12833 ;;		_RTCC_from_epoch
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text37
 12838  012EB0                     __ptext37:
 12839                           	opt stack 0
 12840  012EB0                     _epoch_to_caltime:
 12841                           	opt stack 13
 12842                           
 12843                           ;My_header\My_RTCC.h: 160: static uint16_t day_cache = 0;
 12844                           ;My_header\My_RTCC.h: 161: static uint8_t month_cache = 1;
 12845                           ;My_header\My_RTCC.h: 162: static uint8_t year_cache = 0;
 12846                           ;My_header\My_RTCC.h: 163: uint16_t day_since_epoch;
 12847                           ;My_header\My_RTCC.h: 164: uint16_t day;
 12848                           ;My_header\My_RTCC.h: 165: uint8_t year = 0;
 12849                           
 12850                           ;incstack = 0
 12851  012EB0  0E00               	movlw	0
 12852  012EB2  0100               	movlb	0	; () banked
 12853  012EB4  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 12854                           
 12855                           ;My_header\My_RTCC.h: 166: uint8_t month = 1;
 12856  012EB6  0E01               	movlw	1
 12857  012EB8  0100               	movlb	0	; () banked
 12858  012EBA  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;My_header\My_RTCC.h: 167: epoch_t num;
 12862                           ;My_header\My_RTCC.h: 169: num = *ep;
 12863  012EBC  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 12864  012EC0  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 12865  012EC4  CFDE F08D          	movff	postinc2,epoch_to_caltime@num
 12866  012EC8  CFDE F08E          	movff	postinc2,epoch_to_caltime@num+1
 12867  012ECC  CFDE F08F          	movff	postinc2,epoch_to_caltime@num+2
 12868  012ED0  CFDE F090          	movff	postinc2,epoch_to_caltime@num+3
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;My_header\My_RTCC.h: 170: ct->ss = get_quot_rem(&num, 60);
 12872  012ED4  0E8D               	movlw	low epoch_to_caltime@num
 12873  012ED6  0100               	movlb	0	; () banked
 12874  012ED8  6F79               	movwf	get_quot_rem@quot& (0+255),b
 12875  012EDA  0E00               	movlw	high epoch_to_caltime@num
 12876  012EDC  0100               	movlb	0	; () banked
 12877  012EDE  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12878  012EE0  0E3C               	movlw	60
 12879  012EE2  0100               	movlb	0	; () banked
 12880  012EE4  6F7B               	movwf	get_quot_rem@div& (0+255),b
 12881  012EE6  EC0D  F0A4         	call	_get_quot_rem	;wreg free
 12882  012EEA  0100               	movlb	0	; () banked
 12883  012EEC  5179               	movf	?_get_quot_rem& (0+255),w,b
 12884  012EEE  C081  FFD9         	movff	epoch_to_caltime@ct,fsr2l
 12885  012EF2  C082  FFDA         	movff	epoch_to_caltime@ct+1,fsr2h
 12886  012EF6  6EDF               	movwf	indf2,c
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;My_header\My_RTCC.h: 171: ct->mm = get_quot_rem(&num, 60);
 12890  012EF8  0E8D               	movlw	low epoch_to_caltime@num
 12891  012EFA  0100               	movlb	0	; () banked
 12892  012EFC  6F79               	movwf	get_quot_rem@quot& (0+255),b
 12893  012EFE  0E00               	movlw	high epoch_to_caltime@num
 12894  012F00  0100               	movlb	0	; () banked
 12895  012F02  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12896  012F04  0E3C               	movlw	60
 12897  012F06  0100               	movlb	0	; () banked
 12898  012F08  6F7B               	movwf	get_quot_rem@div& (0+255),b
 12899  012F0A  EC0D  F0A4         	call	_get_quot_rem	;wreg free
 12900  012F0E  0100               	movlb	0	; () banked
 12901  012F10  EE20 F001          	lfsr	2,1
 12902  012F14  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 12903  012F16  26D9               	addwf	fsr2l,f,c
 12904  012F18  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12905  012F1A  22DA               	addwfc	fsr2h,f,c
 12906  012F1C  0100               	movlb	0	; () banked
 12907  012F1E  C079  FFDF         	movff	?_get_quot_rem,indf2
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;My_header\My_RTCC.h: 172: ct->hh = get_quot_rem(&num, 24);
 12911  012F22  0E8D               	movlw	low epoch_to_caltime@num
 12912  012F24  0100               	movlb	0	; () banked
 12913  012F26  6F79               	movwf	get_quot_rem@quot& (0+255),b
 12914  012F28  0E00               	movlw	high epoch_to_caltime@num
 12915  012F2A  0100               	movlb	0	; () banked
 12916  012F2C  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12917  012F2E  0E18               	movlw	24
 12918  012F30  0100               	movlb	0	; () banked
 12919  012F32  6F7B               	movwf	get_quot_rem@div& (0+255),b
 12920  012F34  EC0D  F0A4         	call	_get_quot_rem	;wreg free
 12921  012F38  0100               	movlb	0	; () banked
 12922  012F3A  EE20 F002          	lfsr	2,2
 12923  012F3E  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 12924  012F40  26D9               	addwf	fsr2l,f,c
 12925  012F42  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12926  012F44  22DA               	addwfc	fsr2h,f,c
 12927  012F46  0100               	movlb	0	; () banked
 12928  012F48  C079  FFDF         	movff	?_get_quot_rem,indf2
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;My_header\My_RTCC.h: 173: day = num;
 12932  012F4C  C08D  F089         	movff	epoch_to_caltime@num,epoch_to_caltime@day
 12933  012F50  C08E  F08A         	movff	epoch_to_caltime@num+1,epoch_to_caltime@day+1
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;My_header\My_RTCC.h: 174: day_since_epoch = day;
 12937  012F54  C089  F087         	movff	epoch_to_caltime@day,epoch_to_caltime@day_since_epoch
 12938  012F58  C08A  F088         	movff	epoch_to_caltime@day+1,epoch_to_caltime@day_since_epoch+1
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;My_header\My_RTCC.h: 176: num += 6;
 12942  012F5C  0E06               	movlw	6
 12943  012F5E  0100               	movlb	0	; () banked
 12944  012F60  278D               	addwf	epoch_to_caltime@num& (0+255),f,b
 12945  012F62  0E00               	movlw	0
 12946  012F64  238E               	addwfc	(epoch_to_caltime@num+1)& (0+255),f,b
 12947  012F66  238F               	addwfc	(epoch_to_caltime@num+2)& (0+255),f,b
 12948  012F68  2390               	addwfc	(epoch_to_caltime@num+3)& (0+255),f,b
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;My_header\My_RTCC.h: 177: ct->EE = get_quot_rem(&num, 7);
 12952  012F6A  0E8D               	movlw	low epoch_to_caltime@num
 12953  012F6C  0100               	movlb	0	; () banked
 12954  012F6E  6F79               	movwf	get_quot_rem@quot& (0+255),b
 12955  012F70  0E00               	movlw	high epoch_to_caltime@num
 12956  012F72  0100               	movlb	0	; () banked
 12957  012F74  6F7A               	movwf	(get_quot_rem@quot+1)& (0+255),b
 12958  012F76  0E07               	movlw	7
 12959  012F78  0100               	movlb	0	; () banked
 12960  012F7A  6F7B               	movwf	get_quot_rem@div& (0+255),b
 12961  012F7C  EC0D  F0A4         	call	_get_quot_rem	;wreg free
 12962  012F80  0100               	movlb	0	; () banked
 12963  012F82  EE20 F003          	lfsr	2,3
 12964  012F86  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 12965  012F88  26D9               	addwf	fsr2l,f,c
 12966  012F8A  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 12967  012F8C  22DA               	addwfc	fsr2h,f,c
 12968  012F8E  0100               	movlb	0	; () banked
 12969  012F90  C079  FFDF         	movff	?_get_quot_rem,indf2
 12970                           
 12971                           ;My_header\My_RTCC.h: 186: while (day >= month_length(year, month)) {
 12972  012F94  D03F               	goto	l9864
 12973  012F96                     l428:
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;My_header\My_RTCC.h: 187: LATB2 = 1;
 12977  012F96  848A               	bsf	3978,2,c	;volatile
 12978                           
 12979                           ; BSR set to: 0
 12980                           ;My_header\My_RTCC.h: 188: day = day - month_length(year, month);
 12981  012F98  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 12982  012F9C  0100               	movlb	0	; () banked
 12983  012F9E  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 12984  012FA0  ECC7  F0A2         	call	_month_length
 12985  012FA4  0100               	movlb	0	; () banked
 12986  012FA6  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 12987  012FA8  6B86               	clrf	(??_epoch_to_caltime+1)& (0+255),b
 12988  012FAA  0100               	movlb	0	; () banked
 12989  012FAC  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 12990  012FAE  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 12991  012FB0  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 12992  012FB2  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 12993  012FB4  0100               	movlb	0	; () banked
 12994  012FB6  5189               	movf	epoch_to_caltime@day& (0+255),w,b
 12995  012FB8  0100               	movlb	0	; () banked
 12996  012FBA  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 12997  012FBC  0100               	movlb	0	; () banked
 12998  012FBE  6F89               	movwf	epoch_to_caltime@day& (0+255),b
 12999  012FC0  0100               	movlb	0	; () banked
 13000  012FC2  518A               	movf	(epoch_to_caltime@day+1)& (0+255),w,b
 13001  012FC4  0100               	movlb	0	; () banked
 13002  012FC6  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 13003  012FC8  0100               	movlb	0	; () banked
 13004  012FCA  6F8A               	movwf	(epoch_to_caltime@day+1)& (0+255),b
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;My_header\My_RTCC.h: 189: if (month == 12) {
 13008  012FCC  0E0C               	movlw	12
 13009  012FCE  0100               	movlb	0	; () banked
 13010  012FD0  198C               	xorwf	epoch_to_caltime@month& (0+255),w,b
 13011  012FD2  A4D8               	btfss	status,2,c
 13012  012FD4  D019               	goto	l9858
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;My_header\My_RTCC.h: 190: month = 1;
 13016  012FD6  0E01               	movlw	1
 13017  012FD8  0100               	movlb	0	; () banked
 13018  012FDA  6F8C               	movwf	epoch_to_caltime@month& (0+255),b
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;My_header\My_RTCC.h: 191: year++;
 13022  012FDC  0100               	movlb	0	; () banked
 13023  012FDE  2B8B               	incf	epoch_to_caltime@year& (0+255),f,b
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;My_header\My_RTCC.h: 193: if (year >= 100) {
 13027  012FE0  0E63               	movlw	99
 13028  012FE2  0100               	movlb	0	; () banked
 13029  012FE4  658B               	cpfsgt	epoch_to_caltime@year& (0+255),b
 13030  012FE6  D012               	goto	l9860
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;My_header\My_RTCC.h: 194: *ep -= 3155760000;
 13034  012FE8  C083  FFD9         	movff	epoch_to_caltime@ep,fsr2l
 13035  012FEC  C084  FFDA         	movff	epoch_to_caltime@ep+1,fsr2h
 13036  012FF0  0E80               	movlw	128
 13037  012FF2  5EDE               	subwf	postinc2,f,c
 13038  012FF4  0E13               	movlw	19
 13039  012FF6  5ADE               	subwfb	postinc2,f,c
 13040  012FF8  0E19               	movlw	25
 13041  012FFA  5ADE               	subwfb	postinc2,f,c
 13042  012FFC  0EBC               	movlw	188
 13043  012FFE  5ADE               	subwfb	postinc2,f,c
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;My_header\My_RTCC.h: 195: year = 0;
 13047  013000  0E00               	movlw	0
 13048  013002  0100               	movlb	0	; () banked
 13049  013004  6F8B               	movwf	epoch_to_caltime@year& (0+255),b
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;My_header\My_RTCC.h: 196: }
 13053                           ;My_header\My_RTCC.h: 197: } else {
 13054  013006  D002               	goto	l9860
 13055  013008                     l9858:
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;My_header\My_RTCC.h: 198: month++;
 13059  013008  0100               	movlb	0	; () banked
 13060  01300A  2B8C               	incf	epoch_to_caltime@month& (0+255),f,b
 13061  01300C                     l9860:
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;My_header\My_RTCC.h: 199: }
 13065                           ;My_header\My_RTCC.h: 200: month_cache = month;
 13066  01300C  C08C  F058         	movff	epoch_to_caltime@month,epoch_to_caltime@month_cache
 13067                           
 13068                           ; BSR set to: 0
 13069                           ;My_header\My_RTCC.h: 201: year_cache = year;
 13070  013010  C08B  F129         	movff	epoch_to_caltime@year,epoch_to_caltime@year_cache
 13071  013014                     l9864:
 13072                           
 13073                           ; BSR set to: 0
 13074  013014  C08C  F066         	movff	epoch_to_caltime@month,month_length@month
 13075  013018  0100               	movlb	0	; () banked
 13076  01301A  518B               	movf	epoch_to_caltime@year& (0+255),w,b
 13077  01301C  ECC7  F0A2         	call	_month_length
 13078  013020  0100               	movlb	0	; () banked
 13079  013022  6F85               	movwf	??_epoch_to_caltime& (0+255),b
 13080  013024  0100               	movlb	0	; () banked
 13081  013026  5185               	movf	??_epoch_to_caltime& (0+255),w,b
 13082  013028  0100               	movlb	0	; () banked
 13083  01302A  5D89               	subwf	epoch_to_caltime@day& (0+255),w,b
 13084  01302C  0E00               	movlw	0
 13085  01302E  598A               	subwfb	(epoch_to_caltime@day+1)& (0+255),w,b
 13086  013030  B0D8               	btfsc	status,0,c
 13087  013032  D7B1               	goto	l428
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;My_header\My_RTCC.h: 202: }
 13091                           ;My_header\My_RTCC.h: 203: day_cache = day_since_epoch - day;
 13092                           
 13093                           ; BSR set to: 0
 13094  013034  C089  F085         	movff	epoch_to_caltime@day,??_epoch_to_caltime
 13095  013038  C08A  F086         	movff	epoch_to_caltime@day+1,??_epoch_to_caltime+1
 13096  01303C  0100               	movlb	0	; () banked
 13097  01303E  1F85               	comf	??_epoch_to_caltime& (0+255),f,b
 13098  013040  1F86               	comf	(??_epoch_to_caltime+1)& (0+255),f,b
 13099  013042  4B85               	infsnz	??_epoch_to_caltime& (0+255),f,b
 13100  013044  2B86               	incf	(??_epoch_to_caltime+1)& (0+255),f,b
 13101  013046  0100               	movlb	0	; () banked
 13102  013048  5187               	movf	epoch_to_caltime@day_since_epoch& (0+255),w,b
 13103  01304A  0100               	movlb	0	; () banked
 13104  01304C  2585               	addwf	??_epoch_to_caltime& (0+255),w,b
 13105  01304E  0101               	movlb	1	; () banked
 13106  013050  6F23               	movwf	epoch_to_caltime@day_cache& (0+255),b
 13107  013052  0100               	movlb	0	; () banked
 13108  013054  5188               	movf	(epoch_to_caltime@day_since_epoch+1)& (0+255),w,b
 13109  013056  0100               	movlb	0	; () banked
 13110  013058  2186               	addwfc	(??_epoch_to_caltime+1)& (0+255),w,b
 13111  01305A  0101               	movlb	1	; () banked
 13112  01305C  6F24               	movwf	(epoch_to_caltime@day_cache+1)& (0+255),b
 13113                           
 13114                           ; BSR set to: 1
 13115                           ;My_header\My_RTCC.h: 204: day++;
 13116  01305E  0100               	movlb	0	; () banked
 13117  013060  4B89               	infsnz	epoch_to_caltime@day& (0+255),f,b
 13118  013062  2B8A               	incf	(epoch_to_caltime@day+1)& (0+255),f,b
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;My_header\My_RTCC.h: 206: ct->YY = year;
 13122  013064  0100               	movlb	0	; () banked
 13123  013066  EE20 F006          	lfsr	2,6
 13124  01306A  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 13125  01306C  26D9               	addwf	fsr2l,f,c
 13126  01306E  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 13127  013070  22DA               	addwfc	fsr2h,f,c
 13128  013072  C08B  FFDF         	movff	epoch_to_caltime@year,indf2
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;My_header\My_RTCC.h: 207: ct->MM = month;
 13132  013076  0100               	movlb	0	; () banked
 13133  013078  EE20 F005          	lfsr	2,5
 13134  01307C  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 13135  01307E  26D9               	addwf	fsr2l,f,c
 13136  013080  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 13137  013082  22DA               	addwfc	fsr2h,f,c
 13138  013084  C08C  FFDF         	movff	epoch_to_caltime@month,indf2
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;My_header\My_RTCC.h: 208: ct->DD = day;
 13142  013088  0100               	movlb	0	; () banked
 13143  01308A  EE20 F004          	lfsr	2,4
 13144  01308E  5181               	movf	epoch_to_caltime@ct& (0+255),w,b
 13145  013090  26D9               	addwf	fsr2l,f,c
 13146  013092  5182               	movf	(epoch_to_caltime@ct+1)& (0+255),w,b
 13147  013094  22DA               	addwfc	fsr2h,f,c
 13148  013096  C089  FFDF         	movff	epoch_to_caltime@day,indf2
 13149                           
 13150                           ; BSR set to: 0
 13151  01309A  0012               	return		;funcret
 13152  01309C                     __end_of_epoch_to_caltime:
 13153                           	opt stack 0
 13154                           tblptru	equ	0xFF8
 13155                           tblptrh	equ	0xFF7
 13156                           tblptrl	equ	0xFF6
 13157                           tablat	equ	0xFF5
 13158                           prodh	equ	0xFF4
 13159                           prodl	equ	0xFF3
 13160                           intcon	equ	0xFF2
 13161                           postinc0	equ	0xFEE
 13162                           wreg	equ	0xFE8
 13163                           indf1	equ	0xFE7
 13164                           postinc1	equ	0xFE6
 13165                           postdec1	equ	0xFE5
 13166                           fsr1h	equ	0xFE2
 13167                           fsr1l	equ	0xFE1
 13168                           indf2	equ	0xFDF
 13169                           postinc2	equ	0xFDE
 13170                           postdec2	equ	0xFDD
 13171                           plusw2	equ	0xFDB
 13172                           fsr2h	equ	0xFDA
 13173                           fsr2l	equ	0xFD9
 13174                           status	equ	0xFD8
 13175                           
 13176 ;; *************** function _get_quot_rem *****************
 13177 ;; Defined at:
 13178 ;;		line 112 in file "../My_header\My_RTCC.h"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  quot            2   25[BANK0 ] PTR unsigned long 
 13181 ;;		 -> epoch_to_caltime@num(4), 
 13182 ;;  div             1   27[BANK0 ] unsigned char 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  num             4   29[BANK0 ] unsigned long 
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  4   25[BANK0 ] unsigned long 
 13187 ;; Registers used:
 13188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13195 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13198 ;;Total ram usage:        8 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; Hardware stack levels required when called:   12
 13201 ;; This function calls:
 13202 ;;		___lldiv
 13203 ;;		___lmul
 13204 ;; This function is called by:
 13205 ;;		_epoch_to_caltime
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209                           	psect	text38
 13210  01481A                     __ptext38:
 13211                           	opt stack 0
 13212  01481A                     _get_quot_rem:
 13213                           	opt stack 13
 13214                           
 13215                           ;My_header\My_RTCC.h: 115: epoch_t num = *quot;
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;incstack = 0
 13219  01481A  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 13220  01481E  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 13221  014822  CFDE F07D          	movff	postinc2,get_quot_rem@num
 13222  014826  CFDE F07E          	movff	postinc2,get_quot_rem@num+1
 13223  01482A  CFDE F07F          	movff	postinc2,get_quot_rem@num+2
 13224  01482E  CFDE F080          	movff	postinc2,get_quot_rem@num+3
 13225                           
 13226                           ;My_header\My_RTCC.h: 116: return num - (*quot = num / div) * div;
 13227  014832  0100               	movlb	0	; () banked
 13228  014834  517B               	movf	get_quot_rem@div& (0+255),w,b
 13229  014836  0100               	movlb	0	; () banked
 13230  014838  6F64               	movwf	___lldiv@divisor& (0+255),b
 13231  01483A  6B65               	clrf	(___lldiv@divisor+1)& (0+255),b
 13232  01483C  6B66               	clrf	(___lldiv@divisor+2)& (0+255),b
 13233  01483E  6B67               	clrf	(___lldiv@divisor+3)& (0+255),b
 13234  014840  C07D  F060         	movff	get_quot_rem@num,___lldiv@dividend
 13235  014844  C07E  F061         	movff	get_quot_rem@num+1,___lldiv@dividend+1
 13236  014848  C07F  F062         	movff	get_quot_rem@num+2,___lldiv@dividend+2
 13237  01484C  C080  F063         	movff	get_quot_rem@num+3,___lldiv@dividend+3
 13238  014850  EC02  F0A8         	call	___lldiv	;wreg free
 13239  014854  C079  FFD9         	movff	get_quot_rem@quot,fsr2l
 13240  014858  C07A  FFDA         	movff	get_quot_rem@quot+1,fsr2h
 13241  01485C  0100               	movlb	0	; () banked
 13242  01485E  C060  FFDE         	movff	?___lldiv,postinc2
 13243  014862  0100               	movlb	0	; () banked
 13244  014864  C061  FFDE         	movff	?___lldiv+1,postinc2
 13245  014868  0100               	movlb	0	; () banked
 13246  01486A  C062  FFDE         	movff	?___lldiv+2,postinc2
 13247  01486E  0100               	movlb	0	; () banked
 13248  014870  C063  FFDD         	movff	?___lldiv+3,postdec2
 13249  014874  52DD               	movf	postdec2,f,c
 13250  014876  52DD               	movf	postdec2,f,c
 13251  014878  CFDE F06D          	movff	postinc2,___lmul@multiplier
 13252  01487C  CFDE F06E          	movff	postinc2,___lmul@multiplier+1
 13253  014880  CFDE F06F          	movff	postinc2,___lmul@multiplier+2
 13254  014884  CFDE F070          	movff	postinc2,___lmul@multiplier+3
 13255  014888  0100               	movlb	0	; () banked
 13256  01488A  517B               	movf	get_quot_rem@div& (0+255),w,b
 13257  01488C  0100               	movlb	0	; () banked
 13258  01488E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 13259  014890  6B72               	clrf	(___lmul@multiplicand+1)& (0+255),b
 13260  014892  6B73               	clrf	(___lmul@multiplicand+2)& (0+255),b
 13261  014894  6B74               	clrf	(___lmul@multiplicand+3)& (0+255),b
 13262  014896  ECA2  F0AF         	call	___lmul	;wreg free
 13263  01489A  0100               	movlb	0	; () banked
 13264  01489C  1F6D               	comf	?___lmul& (0+255),f,b
 13265  01489E  0100               	movlb	0	; () banked
 13266  0148A0  1F6E               	comf	(?___lmul+1)& (0+255),f,b
 13267  0148A2  0100               	movlb	0	; () banked
 13268  0148A4  1F6F               	comf	(?___lmul+2)& (0+255),f,b
 13269  0148A6  0100               	movlb	0	; () banked
 13270  0148A8  1F70               	comf	(?___lmul+3)& (0+255),f,b
 13271  0148AA  0100               	movlb	0	; () banked
 13272  0148AC  2B6D               	incf	?___lmul& (0+255),f,b
 13273  0148AE  0E00               	movlw	0
 13274  0148B0  0100               	movlb	0	; () banked
 13275  0148B2  236E               	addwfc	(?___lmul+1)& (0+255),f,b
 13276  0148B4  0100               	movlb	0	; () banked
 13277  0148B6  236F               	addwfc	(?___lmul+2)& (0+255),f,b
 13278  0148B8  0100               	movlb	0	; () banked
 13279  0148BA  2370               	addwfc	(?___lmul+3)& (0+255),f,b
 13280  0148BC  0100               	movlb	0	; () banked
 13281  0148BE  517D               	movf	get_quot_rem@num& (0+255),w,b
 13282  0148C0  0100               	movlb	0	; () banked
 13283  0148C2  256D               	addwf	?___lmul& (0+255),w,b
 13284  0148C4  0100               	movlb	0	; () banked
 13285  0148C6  6F79               	movwf	?_get_quot_rem& (0+255),b
 13286  0148C8  0100               	movlb	0	; () banked
 13287  0148CA  517E               	movf	(get_quot_rem@num+1)& (0+255),w,b
 13288  0148CC  0100               	movlb	0	; () banked
 13289  0148CE  216E               	addwfc	(?___lmul+1)& (0+255),w,b
 13290  0148D0  0100               	movlb	0	; () banked
 13291  0148D2  6F7A               	movwf	(?_get_quot_rem+1)& (0+255),b
 13292  0148D4  0100               	movlb	0	; () banked
 13293  0148D6  517F               	movf	(get_quot_rem@num+2)& (0+255),w,b
 13294  0148D8  0100               	movlb	0	; () banked
 13295  0148DA  216F               	addwfc	(?___lmul+2)& (0+255),w,b
 13296  0148DC  0100               	movlb	0	; () banked
 13297  0148DE  6F7B               	movwf	(?_get_quot_rem+2)& (0+255),b
 13298  0148E0  0100               	movlb	0	; () banked
 13299  0148E2  5180               	movf	(get_quot_rem@num+3)& (0+255),w,b
 13300  0148E4  0100               	movlb	0	; () banked
 13301  0148E6  2170               	addwfc	(?___lmul+3)& (0+255),w,b
 13302  0148E8  0100               	movlb	0	; () banked
 13303  0148EA  6F7C               	movwf	(?_get_quot_rem+3)& (0+255),b
 13304  0148EC  0012               	return	
 13305  0148EE                     __end_of_get_quot_rem:
 13306                           	opt stack 0
 13307                           tblptru	equ	0xFF8
 13308                           tblptrh	equ	0xFF7
 13309                           tblptrl	equ	0xFF6
 13310                           tablat	equ	0xFF5
 13311                           prodh	equ	0xFF4
 13312                           prodl	equ	0xFF3
 13313                           intcon	equ	0xFF2
 13314                           postinc0	equ	0xFEE
 13315                           wreg	equ	0xFE8
 13316                           indf1	equ	0xFE7
 13317                           postinc1	equ	0xFE6
 13318                           postdec1	equ	0xFE5
 13319                           fsr1h	equ	0xFE2
 13320                           fsr1l	equ	0xFE1
 13321                           indf2	equ	0xFDF
 13322                           postinc2	equ	0xFDE
 13323                           postdec2	equ	0xFDD
 13324                           plusw2	equ	0xFDB
 13325                           fsr2h	equ	0xFDA
 13326                           fsr2l	equ	0xFD9
 13327                           status	equ	0xFD8
 13328                           
 13329 ;; *************** function _caltime_to_RTCC *****************
 13330 ;; Defined at:
 13331 ;;		line 137 in file "../My_header\My_RTCC.h"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;  ct              2    9[BANK0 ] PTR struct .
 13334 ;;		 -> caltime_now(7), 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;		None
 13337 ;; Return value:  Size  Location     Type
 13338 ;;		None               void
 13339 ;; Registers used:
 13340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13350 ;;Total ram usage:        2 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:   13
 13353 ;; This function calls:
 13354 ;;		_d_to_x
 13355 ;; This function is called by:
 13356 ;;		_RTCC_from_caltime
 13357 ;;		_RTCC_from_epoch
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text39
 13362  014A92                     __ptext39:
 13363                           	opt stack 0
 13364  014A92                     _caltime_to_RTCC:
 13365                           	opt stack 13
 13366  014A92                     l415:
 13367  014A92  010F               	movlb	15	; () banked
 13368  014A94  B93F               	btfsc	63,4,b	;volatile
 13369  014A96  D7FD               	goto	l415
 13370                           
 13371                           ; BSR set to: 15
 13372                           ;My_header\My_RTCC.h: 139: RTCCFGbits.RTCPTR0 = 1;
 13373  014A98  010F               	movlb	15	; () banked
 13374  014A9A  813F               	bsf	63,0,b	;volatile
 13375                           
 13376                           ;My_header\My_RTCC.h: 140: RTCCFGbits.RTCPTR1 = 1;
 13377  014A9C  010F               	movlb	15	; () banked
 13378  014A9E  833F               	bsf	63,1,b	;volatile
 13379                           
 13380                           ; BSR set to: 15
 13381                           ;My_header\My_RTCC.h: 141: RTCVALL = d_to_x(ct->YY);
 13382  014AA0  0100               	movlb	0	; () banked
 13383  014AA2  EE20 F006          	lfsr	2,6
 13384  014AA6  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13385  014AA8  26D9               	addwf	fsr2l,f,c
 13386  014AAA  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13387  014AAC  22DA               	addwfc	fsr2h,f,c
 13388  014AAE  50DF               	movf	indf2,w,c
 13389  014AB0  EC4C  F0B5         	call	_d_to_x
 13390  014AB4  010F               	movlb	15	; () banked
 13391  014AB6  6F3A               	movwf	58,b	;volatile
 13392                           
 13393                           ; BSR set to: 15
 13394                           ;My_header\My_RTCC.h: 142: RTCVALH = 0x00;
 13395  014AB8  0E00               	movlw	0
 13396  014ABA  010F               	movlb	15	; () banked
 13397  014ABC  6F3B               	movwf	59,b	;volatile
 13398                           
 13399                           ; BSR set to: 15
 13400                           ;My_header\My_RTCC.h: 143: RTCCFGbits.RTCPTR0 = 0;
 13401  014ABE  010F               	movlb	15	; () banked
 13402  014AC0  913F               	bcf	63,0,b	;volatile
 13403                           
 13404                           ; BSR set to: 15
 13405                           ;My_header\My_RTCC.h: 144: RTCCFGbits.RTCPTR1 = 1;
 13406  014AC2  010F               	movlb	15	; () banked
 13407  014AC4  833F               	bsf	63,1,b	;volatile
 13408                           
 13409                           ; BSR set to: 15
 13410                           ;My_header\My_RTCC.h: 145: RTCVALL = d_to_x(ct->DD);
 13411  014AC6  0100               	movlb	0	; () banked
 13412  014AC8  EE20 F004          	lfsr	2,4
 13413  014ACC  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13414  014ACE  26D9               	addwf	fsr2l,f,c
 13415  014AD0  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13416  014AD2  22DA               	addwfc	fsr2h,f,c
 13417  014AD4  50DF               	movf	indf2,w,c
 13418  014AD6  EC4C  F0B5         	call	_d_to_x
 13419  014ADA  010F               	movlb	15	; () banked
 13420  014ADC  6F3A               	movwf	58,b	;volatile
 13421                           
 13422                           ; BSR set to: 15
 13423                           ;My_header\My_RTCC.h: 146: RTCVALH = d_to_x(ct->MM);
 13424  014ADE  0100               	movlb	0	; () banked
 13425  014AE0  EE20 F005          	lfsr	2,5
 13426  014AE4  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13427  014AE6  26D9               	addwf	fsr2l,f,c
 13428  014AE8  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13429  014AEA  22DA               	addwfc	fsr2h,f,c
 13430  014AEC  50DF               	movf	indf2,w,c
 13431  014AEE  EC4C  F0B5         	call	_d_to_x
 13432  014AF2  010F               	movlb	15	; () banked
 13433  014AF4  6F3B               	movwf	59,b	;volatile
 13434                           
 13435                           ; BSR set to: 15
 13436                           ;My_header\My_RTCC.h: 147: RTCCFGbits.RTCPTR0 = 1;
 13437  014AF6  010F               	movlb	15	; () banked
 13438  014AF8  813F               	bsf	63,0,b	;volatile
 13439                           
 13440                           ; BSR set to: 15
 13441                           ;My_header\My_RTCC.h: 148: RTCCFGbits.RTCPTR1 = 0;
 13442  014AFA  010F               	movlb	15	; () banked
 13443  014AFC  933F               	bcf	63,1,b	;volatile
 13444                           
 13445                           ; BSR set to: 15
 13446                           ;My_header\My_RTCC.h: 149: RTCVALL = d_to_x(ct->hh);
 13447  014AFE  0100               	movlb	0	; () banked
 13448  014B00  EE20 F002          	lfsr	2,2
 13449  014B04  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13450  014B06  26D9               	addwf	fsr2l,f,c
 13451  014B08  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13452  014B0A  22DA               	addwfc	fsr2h,f,c
 13453  014B0C  50DF               	movf	indf2,w,c
 13454  014B0E  EC4C  F0B5         	call	_d_to_x
 13455  014B12  010F               	movlb	15	; () banked
 13456  014B14  6F3A               	movwf	58,b	;volatile
 13457                           
 13458                           ; BSR set to: 15
 13459                           ;My_header\My_RTCC.h: 150: RTCVALH = d_to_x(ct->EE);
 13460  014B16  0100               	movlb	0	; () banked
 13461  014B18  EE20 F003          	lfsr	2,3
 13462  014B1C  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13463  014B1E  26D9               	addwf	fsr2l,f,c
 13464  014B20  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13465  014B22  22DA               	addwfc	fsr2h,f,c
 13466  014B24  50DF               	movf	indf2,w,c
 13467  014B26  EC4C  F0B5         	call	_d_to_x
 13468  014B2A  010F               	movlb	15	; () banked
 13469  014B2C  6F3B               	movwf	59,b	;volatile
 13470                           
 13471                           ; BSR set to: 15
 13472                           ;My_header\My_RTCC.h: 151: RTCCFGbits.RTCPTR0 = 0;
 13473  014B2E  010F               	movlb	15	; () banked
 13474  014B30  913F               	bcf	63,0,b	;volatile
 13475                           
 13476                           ; BSR set to: 15
 13477                           ;My_header\My_RTCC.h: 152: RTCCFGbits.RTCPTR1 = 0;
 13478  014B32  010F               	movlb	15	; () banked
 13479  014B34  933F               	bcf	63,1,b	;volatile
 13480                           
 13481                           ; BSR set to: 15
 13482                           ;My_header\My_RTCC.h: 153: RTCVALL = d_to_x(ct->ss);
 13483  014B36  C069  FFD9         	movff	caltime_to_RTCC@ct,fsr2l
 13484  014B3A  C06A  FFDA         	movff	caltime_to_RTCC@ct+1,fsr2h
 13485  014B3E  50DF               	movf	indf2,w,c
 13486  014B40  EC4C  F0B5         	call	_d_to_x
 13487  014B44  010F               	movlb	15	; () banked
 13488  014B46  6F3A               	movwf	58,b	;volatile
 13489                           
 13490                           ; BSR set to: 15
 13491                           ;My_header\My_RTCC.h: 154: RTCVALH = d_to_x(ct->mm);
 13492  014B48  0100               	movlb	0	; () banked
 13493  014B4A  EE20 F001          	lfsr	2,1
 13494  014B4E  5169               	movf	caltime_to_RTCC@ct& (0+255),w,b
 13495  014B50  26D9               	addwf	fsr2l,f,c
 13496  014B52  516A               	movf	(caltime_to_RTCC@ct+1)& (0+255),w,b
 13497  014B54  22DA               	addwfc	fsr2h,f,c
 13498  014B56  50DF               	movf	indf2,w,c
 13499  014B58  EC4C  F0B5         	call	_d_to_x
 13500  014B5C  010F               	movlb	15	; () banked
 13501  014B5E  6F3B               	movwf	59,b	;volatile
 13502                           
 13503                           ; BSR set to: 15
 13504  014B60  0012               	return		;funcret
 13505  014B62                     __end_of_caltime_to_RTCC:
 13506                           	opt stack 0
 13507                           tblptru	equ	0xFF8
 13508                           tblptrh	equ	0xFF7
 13509                           tblptrl	equ	0xFF6
 13510                           tablat	equ	0xFF5
 13511                           prodh	equ	0xFF4
 13512                           prodl	equ	0xFF3
 13513                           intcon	equ	0xFF2
 13514                           postinc0	equ	0xFEE
 13515                           wreg	equ	0xFE8
 13516                           indf1	equ	0xFE7
 13517                           postinc1	equ	0xFE6
 13518                           postdec1	equ	0xFE5
 13519                           fsr1h	equ	0xFE2
 13520                           fsr1l	equ	0xFE1
 13521                           indf2	equ	0xFDF
 13522                           postinc2	equ	0xFDE
 13523                           postdec2	equ	0xFDD
 13524                           plusw2	equ	0xFDB
 13525                           fsr2h	equ	0xFDA
 13526                           fsr2l	equ	0xFD9
 13527                           status	equ	0xFD8
 13528                           
 13529 ;; *************** function _d_to_x *****************
 13530 ;; Defined at:
 13531 ;;		line 73 in file "../My_header\My_RTCC.h"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  dec             1    wreg     unsigned char 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;  dec             1    8[BANK0 ] unsigned char 
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      unsigned char 
 13538 ;; Registers used:
 13539 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13549 ;;Total ram usage:        1 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:   12
 13552 ;; This function calls:
 13553 ;;		___awdiv
 13554 ;; This function is called by:
 13555 ;;		_caltime_to_RTCC
 13556 ;; This function uses a non-reentrant model
 13557 ;;
 13558                           
 13559                           	psect	text40
 13560  016A98                     __ptext40:
 13561                           	opt stack 0
 13562  016A98                     _d_to_x:
 13563                           	opt stack 13
 13564                           
 13565                           ; BSR set to: 15
 13566                           ;incstack = 0
 13567                           ;d_to_x@dec stored from wreg
 13568  016A98  0100               	movlb	0	; () banked
 13569  016A9A  6F68               	movwf	d_to_x@dec& (0+255),b
 13570                           
 13571                           ;My_header\My_RTCC.h: 76: return dec / 10 * 6 + dec;
 13572  016A9C  C068  F060         	movff	d_to_x@dec,___awdiv@dividend
 13573  016AA0  0100               	movlb	0	; () banked
 13574  016AA2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 13575  016AA4  0E00               	movlw	0
 13576  016AA6  0100               	movlb	0	; () banked
 13577  016AA8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 13578  016AAA  0E0A               	movlw	10
 13579  016AAC  6F62               	movwf	___awdiv@divisor& (0+255),b
 13580  016AAE  ECA3  F0A7         	call	___awdiv	;wreg free
 13581  016AB2  0100               	movlb	0	; () banked
 13582  016AB4  5160               	movf	?___awdiv& (0+255),w,b
 13583  016AB6  0D06               	mullw	6
 13584  016AB8  50F3               	movf	prodl,w,c
 13585  016ABA  0100               	movlb	0	; () banked
 13586  016ABC  2568               	addwf	d_to_x@dec& (0+255),w,b
 13587  016ABE  0012               	return	
 13588  016AC0                     __end_of_d_to_x:
 13589                           	opt stack 0
 13590                           tblptru	equ	0xFF8
 13591                           tblptrh	equ	0xFF7
 13592                           tblptrl	equ	0xFF6
 13593                           tablat	equ	0xFF5
 13594                           prodh	equ	0xFF4
 13595                           prodl	equ	0xFF3
 13596                           intcon	equ	0xFF2
 13597                           postinc0	equ	0xFEE
 13598                           wreg	equ	0xFE8
 13599                           indf1	equ	0xFE7
 13600                           postinc1	equ	0xFE6
 13601                           postdec1	equ	0xFE5
 13602                           fsr1h	equ	0xFE2
 13603                           fsr1l	equ	0xFE1
 13604                           indf2	equ	0xFDF
 13605                           postinc2	equ	0xFDE
 13606                           postdec2	equ	0xFDD
 13607                           plusw2	equ	0xFDB
 13608                           fsr2h	equ	0xFDA
 13609                           fsr2l	equ	0xFD9
 13610                           status	equ	0xFD8
 13611                           
 13612 ;; *************** function ___awdiv *****************
 13613 ;; Defined at:
 13614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;  dividend        2    0[BANK0 ] int 
 13617 ;;  divisor         2    2[BANK0 ] int 
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;  quotient        2    6[BANK0 ] int 
 13620 ;;  sign            1    5[BANK0 ] unsigned char 
 13621 ;;  counter         1    4[BANK0 ] unsigned char 
 13622 ;; Return value:  Size  Location     Type
 13623 ;;                  2    0[BANK0 ] int 
 13624 ;; Registers used:
 13625 ;;		wreg, status,2, status,0
 13626 ;; Tracked objects:
 13627 ;;		On entry : 0/0
 13628 ;;		On exit  : 0/0
 13629 ;;		Unchanged: 0/0
 13630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13632 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13634 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13635 ;;Total ram usage:        8 bytes
 13636 ;; Hardware stack levels used:    1
 13637 ;; Hardware stack levels required when called:   11
 13638 ;; This function calls:
 13639 ;;		Nothing
 13640 ;; This function is called by:
 13641 ;;		_d_to_x
 13642 ;; This function uses a non-reentrant model
 13643 ;;
 13644                           
 13645                           	psect	text41
 13646  014F46                     __ptext41:
 13647                           	opt stack 0
 13648  014F46                     ___awdiv:
 13649                           	opt stack 13
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;incstack = 0
 13653  014F46  0E00               	movlw	0
 13654  014F48  0100               	movlb	0	; () banked
 13655  014F4A  6F65               	movwf	___awdiv@sign& (0+255),b
 13656                           
 13657                           ; BSR set to: 0
 13658  014F4C  0100               	movlb	0	; () banked
 13659  014F4E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13660  014F50  D008               	goto	l9586
 13661                           
 13662                           ; BSR set to: 0
 13663  014F52  0100               	movlb	0	; () banked
 13664  014F54  6D62               	negf	___awdiv@divisor& (0+255),b
 13665  014F56  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13666  014F58  B0D8               	btfsc	status,0,c
 13667  014F5A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13668                           
 13669                           ; BSR set to: 0
 13670  014F5C  0E01               	movlw	1
 13671  014F5E  0100               	movlb	0	; () banked
 13672  014F60  6F65               	movwf	___awdiv@sign& (0+255),b
 13673  014F62                     l9586:
 13674                           
 13675                           ; BSR set to: 0
 13676  014F62  0100               	movlb	0	; () banked
 13677  014F64  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13678  014F66  D008               	goto	l9592
 13679                           
 13680                           ; BSR set to: 0
 13681  014F68  0100               	movlb	0	; () banked
 13682  014F6A  6D60               	negf	___awdiv@dividend& (0+255),b
 13683  014F6C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13684  014F6E  B0D8               	btfsc	status,0,c
 13685  014F70  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13686                           
 13687                           ; BSR set to: 0
 13688  014F72  0E01               	movlw	1
 13689  014F74  0100               	movlb	0	; () banked
 13690  014F76  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13691  014F78                     l9592:
 13692                           
 13693                           ; BSR set to: 0
 13694  014F78  0E00               	movlw	0
 13695  014F7A  0100               	movlb	0	; () banked
 13696  014F7C  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13697  014F7E  0E00               	movlw	0
 13698  014F80  6F66               	movwf	___awdiv@quotient& (0+255),b
 13699                           
 13700                           ; BSR set to: 0
 13701  014F82  0100               	movlb	0	; () banked
 13702  014F84  5162               	movf	___awdiv@divisor& (0+255),w,b
 13703  014F86  0100               	movlb	0	; () banked
 13704  014F88  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13705  014F8A  B4D8               	btfsc	status,2,c
 13706  014F8C  D02C               	goto	l9614
 13707                           
 13708                           ; BSR set to: 0
 13709  014F8E  0E01               	movlw	1
 13710  014F90  0100               	movlb	0	; () banked
 13711  014F92  6F64               	movwf	___awdiv@counter& (0+255),b
 13712  014F94  D006               	goto	l9600
 13713  014F96                     l9598:
 13714                           
 13715                           ; BSR set to: 0
 13716  014F96  0100               	movlb	0	; () banked
 13717  014F98  90D8               	bcf	status,0,c
 13718  014F9A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13719  014F9C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13720  014F9E  0100               	movlb	0	; () banked
 13721  014FA0  2B64               	incf	___awdiv@counter& (0+255),f,b
 13722  014FA2                     l9600:
 13723                           
 13724                           ; BSR set to: 0
 13725  014FA2  0100               	movlb	0	; () banked
 13726  014FA4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13727  014FA6  D7F7               	goto	l9598
 13728  014FA8                     l9602:
 13729                           
 13730                           ; BSR set to: 0
 13731  014FA8  0100               	movlb	0	; () banked
 13732  014FAA  90D8               	bcf	status,0,c
 13733  014FAC  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13734  014FAE  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13735                           
 13736                           ; BSR set to: 0
 13737  014FB0  0100               	movlb	0	; () banked
 13738  014FB2  5162               	movf	___awdiv@divisor& (0+255),w,b
 13739  014FB4  0100               	movlb	0	; () banked
 13740  014FB6  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13741  014FB8  0100               	movlb	0	; () banked
 13742  014FBA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13743  014FBC  0100               	movlb	0	; () banked
 13744  014FBE  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13745  014FC0  A0D8               	btfss	status,0,c
 13746  014FC2  D00A               	goto	l9610
 13747                           
 13748                           ; BSR set to: 0
 13749  014FC4  0100               	movlb	0	; () banked
 13750  014FC6  5162               	movf	___awdiv@divisor& (0+255),w,b
 13751  014FC8  0100               	movlb	0	; () banked
 13752  014FCA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13753  014FCC  0100               	movlb	0	; () banked
 13754  014FCE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13755  014FD0  0100               	movlb	0	; () banked
 13756  014FD2  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13757                           
 13758                           ; BSR set to: 0
 13759  014FD4  0100               	movlb	0	; () banked
 13760  014FD6  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13761  014FD8                     l9610:
 13762                           
 13763                           ; BSR set to: 0
 13764  014FD8  0100               	movlb	0	; () banked
 13765  014FDA  90D8               	bcf	status,0,c
 13766  014FDC  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13767  014FDE  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13768                           
 13769                           ; BSR set to: 0
 13770  014FE0  0100               	movlb	0	; () banked
 13771  014FE2  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13772  014FE4  D7E1               	goto	l9602
 13773  014FE6                     l9614:
 13774                           
 13775                           ; BSR set to: 0
 13776  014FE6  0100               	movlb	0	; () banked
 13777  014FE8  5165               	movf	___awdiv@sign& (0+255),w,b
 13778  014FEA  0100               	movlb	0	; () banked
 13779  014FEC  B4D8               	btfsc	status,2,c
 13780  014FEE  D005               	goto	l9618
 13781                           
 13782                           ; BSR set to: 0
 13783  014FF0  0100               	movlb	0	; () banked
 13784  014FF2  6D66               	negf	___awdiv@quotient& (0+255),b
 13785  014FF4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13786  014FF6  B0D8               	btfsc	status,0,c
 13787  014FF8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13788  014FFA                     l9618:
 13789                           
 13790                           ; BSR set to: 0
 13791  014FFA  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13792  014FFE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13793  015002  0012               	return	
 13794  015004                     __end_of___awdiv:
 13795                           	opt stack 0
 13796                           tblptru	equ	0xFF8
 13797                           tblptrh	equ	0xFF7
 13798                           tblptrl	equ	0xFF6
 13799                           tablat	equ	0xFF5
 13800                           prodh	equ	0xFF4
 13801                           prodl	equ	0xFF3
 13802                           intcon	equ	0xFF2
 13803                           postinc0	equ	0xFEE
 13804                           wreg	equ	0xFE8
 13805                           indf1	equ	0xFE7
 13806                           postinc1	equ	0xFE6
 13807                           postdec1	equ	0xFE5
 13808                           fsr1h	equ	0xFE2
 13809                           fsr1l	equ	0xFE1
 13810                           indf2	equ	0xFDF
 13811                           postinc2	equ	0xFDE
 13812                           postdec2	equ	0xFDD
 13813                           plusw2	equ	0xFDB
 13814                           fsr2h	equ	0xFDA
 13815                           fsr2l	equ	0xFD9
 13816                           status	equ	0xFD8
 13817                           
 13818 ;; *************** function _command_get_data *****************
 13819 ;; Defined at:
 13820 ;;		line 327 in file "tasks.h"
 13821 ;; Parameters:    Size  Location     Type
 13822 ;;  tx              2   50[BANK0 ] PTR struct ringbuf
 13823 ;;		 -> usb_tx(8), 
 13824 ;;  content         1   52[BANK0 ] unsigned char 
 13825 ;;  i               1   53[BANK0 ] unsigned char 
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;  str            10   54[BANK0 ] unsigned char [10]
 13828 ;; Return value:  Size  Location     Type
 13829 ;;		None               void
 13830 ;; Registers used:
 13831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13832 ;; Tracked objects:
 13833 ;;		On entry : 0/0
 13834 ;;		On exit  : 0/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13838 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13840 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13841 ;;Total ram usage:       18 bytes
 13842 ;; Hardware stack levels used:    1
 13843 ;; Hardware stack levels required when called:   14
 13844 ;; This function calls:
 13845 ;;		___lldiv
 13846 ;;		___llmod
 13847 ;;		___lwdiv
 13848 ;;		___lwmod
 13849 ;;		_my_utoa
 13850 ;;		_ringbuf_put
 13851 ;;		_ringbuf_put_num
 13852 ;;		_ringbuf_put_str
 13853 ;; This function is called by:
 13854 ;;		_command_operation
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text42
 13859  011216                     __ptext42:
 13860                           	opt stack 0
 13861  011216                     _command_get_data:
 13862                           	opt stack 14
 13863                           
 13864                           ;tasks.h: 328: switch (content) {
 13865                           
 13866                           ; BSR set to: 0
 13867                           ;incstack = 0
 13868  011216  D26C               	goto	l10598
 13869  011218                     l10548:
 13870                           
 13871                           ;tasks.h: 330: ringbuf_put_str(tx, "\t");
 13872  011218  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 13873  01121C  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 13874  011220  0EF6               	movlw	low STR_46
 13875  011222  0100               	movlb	0	; () banked
 13876  011224  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 13877  011226  0EFF               	movlw	high STR_46
 13878  011228  0100               	movlb	0	; () banked
 13879  01122A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 13880  01122C  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 13881                           
 13882                           ;tasks.h: 331: ringbuf_put(tx, (port[i].current % 10000) / 1000 + '0');
 13883  011230  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 13884  011234  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 13885  011238  0E27               	movlw	39
 13886  01123A  0100               	movlb	0	; () banked
 13887  01123C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13888  01123E  0E10               	movlw	16
 13889  011240  6F62               	movwf	___lwmod@divisor& (0+255),b
 13890  011242  0100               	movlb	0	; () banked
 13891  011244  5195               	movf	command_get_data@i& (0+255),w,b
 13892  011246  0D17               	mullw	23
 13893  011248  0E06               	movlw	6
 13894  01124A  26F3               	addwf	prodl,f,c
 13895  01124C  0E00               	movlw	0
 13896  01124E  22F4               	addwfc	prodh,f,c
 13897  011250  0E2B               	movlw	low _port
 13898  011252  24F3               	addwf	prodl,w,c
 13899  011254  6ED9               	movwf	fsr2l,c
 13900  011256  0E01               	movlw	high _port
 13901  011258  20F4               	addwfc	prodh,w,c
 13902  01125A  6EDA               	movwf	fsr2h,c
 13903  01125C  CFDE F060          	movff	postinc2,___lwmod@dividend
 13904  011260  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13905  011264  EC21  F0B1         	call	___lwmod	;wreg free
 13906  011268  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 13907  01126C  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 13908  011270  0E03               	movlw	3
 13909  011272  0100               	movlb	0	; () banked
 13910  011274  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13911  011276  0EE8               	movlw	232
 13912  011278  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13913  01127A  EC66  F0AF         	call	___lwdiv	;wreg free
 13914  01127E  0100               	movlb	0	; () banked
 13915  011280  517C               	movf	?___lwdiv& (0+255),w,b
 13916  011282  0F30               	addlw	48
 13917  011284  0100               	movlb	0	; () banked
 13918  011286  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 13919  011288  EC77  F0A4         	call	_ringbuf_put	;wreg free
 13920                           
 13921                           ;tasks.h: 332: ringbuf_put(tx, '.');
 13922  01128C  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 13923  011290  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 13924  011294  0E2E               	movlw	46
 13925  011296  0100               	movlb	0	; () banked
 13926  011298  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 13927  01129A  EC77  F0A4         	call	_ringbuf_put	;wreg free
 13928                           
 13929                           ;tasks.h: 333: ringbuf_put(tx, (port[i].current % 1000) / 100 + '0');
 13930  01129E  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 13931  0112A2  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 13932  0112A6  0E03               	movlw	3
 13933  0112A8  0100               	movlb	0	; () banked
 13934  0112AA  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13935  0112AC  0EE8               	movlw	232
 13936  0112AE  6F62               	movwf	___lwmod@divisor& (0+255),b
 13937  0112B0  0100               	movlb	0	; () banked
 13938  0112B2  5195               	movf	command_get_data@i& (0+255),w,b
 13939  0112B4  0D17               	mullw	23
 13940  0112B6  0E06               	movlw	6
 13941  0112B8  26F3               	addwf	prodl,f,c
 13942  0112BA  0E00               	movlw	0
 13943  0112BC  22F4               	addwfc	prodh,f,c
 13944  0112BE  0E2B               	movlw	low _port
 13945  0112C0  24F3               	addwf	prodl,w,c
 13946  0112C2  6ED9               	movwf	fsr2l,c
 13947  0112C4  0E01               	movlw	high _port
 13948  0112C6  20F4               	addwfc	prodh,w,c
 13949  0112C8  6EDA               	movwf	fsr2h,c
 13950  0112CA  CFDE F060          	movff	postinc2,___lwmod@dividend
 13951  0112CE  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13952  0112D2  EC21  F0B1         	call	___lwmod	;wreg free
 13953  0112D6  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 13954  0112DA  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 13955  0112DE  0E00               	movlw	0
 13956  0112E0  0100               	movlb	0	; () banked
 13957  0112E2  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13958  0112E4  0E64               	movlw	100
 13959  0112E6  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13960  0112E8  EC66  F0AF         	call	___lwdiv	;wreg free
 13961  0112EC  0100               	movlb	0	; () banked
 13962  0112EE  517C               	movf	?___lwdiv& (0+255),w,b
 13963  0112F0  0F30               	addlw	48
 13964  0112F2  0100               	movlb	0	; () banked
 13965  0112F4  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 13966  0112F6  EC77  F0A4         	call	_ringbuf_put	;wreg free
 13967                           
 13968                           ;tasks.h: 334: ringbuf_put(tx, (port[i].current % 100) / 10 + '0');
 13969  0112FA  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 13970  0112FE  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 13971  011302  0E00               	movlw	0
 13972  011304  0100               	movlb	0	; () banked
 13973  011306  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 13974  011308  0E64               	movlw	100
 13975  01130A  6F62               	movwf	___lwmod@divisor& (0+255),b
 13976  01130C  0100               	movlb	0	; () banked
 13977  01130E  5195               	movf	command_get_data@i& (0+255),w,b
 13978  011310  0D17               	mullw	23
 13979  011312  0E06               	movlw	6
 13980  011314  26F3               	addwf	prodl,f,c
 13981  011316  0E00               	movlw	0
 13982  011318  22F4               	addwfc	prodh,f,c
 13983  01131A  0E2B               	movlw	low _port
 13984  01131C  24F3               	addwf	prodl,w,c
 13985  01131E  6ED9               	movwf	fsr2l,c
 13986  011320  0E01               	movlw	high _port
 13987  011322  20F4               	addwfc	prodh,w,c
 13988  011324  6EDA               	movwf	fsr2h,c
 13989  011326  CFDE F060          	movff	postinc2,___lwmod@dividend
 13990  01132A  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 13991  01132E  EC21  F0B1         	call	___lwmod	;wreg free
 13992  011332  C060  F07C         	movff	?___lwmod,___lwdiv@dividend
 13993  011336  C061  F07D         	movff	?___lwmod+1,___lwdiv@dividend+1
 13994  01133A  0E00               	movlw	0
 13995  01133C  0100               	movlb	0	; () banked
 13996  01133E  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13997  011340  0E0A               	movlw	10
 13998  011342  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 13999  011344  EC66  F0AF         	call	___lwdiv	;wreg free
 14000  011348  0100               	movlb	0	; () banked
 14001  01134A  517C               	movf	?___lwdiv& (0+255),w,b
 14002  01134C  0F30               	addlw	48
 14003  01134E  0100               	movlb	0	; () banked
 14004  011350  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 14005  011352  EC77  F0A4         	call	_ringbuf_put	;wreg free
 14006                           
 14007                           ;tasks.h: 335: ringbuf_put(tx, (port[i].current % 10) / 1 + '0');
 14008  011356  C092  F083         	movff	command_get_data@tx,ringbuf_put@rb
 14009  01135A  C093  F084         	movff	command_get_data@tx+1,ringbuf_put@rb+1
 14010  01135E  0100               	movlb	0	; () banked
 14011  011360  5195               	movf	command_get_data@i& (0+255),w,b
 14012  011362  0D17               	mullw	23
 14013  011364  0E06               	movlw	6
 14014  011366  26F3               	addwf	prodl,f,c
 14015  011368  0E00               	movlw	0
 14016  01136A  22F4               	addwfc	prodh,f,c
 14017  01136C  0E2B               	movlw	low _port
 14018  01136E  24F3               	addwf	prodl,w,c
 14019  011370  6ED9               	movwf	fsr2l,c
 14020  011372  0E01               	movlw	high _port
 14021  011374  20F4               	addwfc	prodh,w,c
 14022  011376  6EDA               	movwf	fsr2h,c
 14023  011378  CFDE F060          	movff	postinc2,___lwmod@dividend
 14024  01137C  CFDD F061          	movff	postdec2,___lwmod@dividend+1
 14025  011380  0E00               	movlw	0
 14026  011382  0100               	movlb	0	; () banked
 14027  011384  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 14028  011386  0E0A               	movlw	10
 14029  011388  6F62               	movwf	___lwmod@divisor& (0+255),b
 14030  01138A  EC21  F0B1         	call	___lwmod	;wreg free
 14031  01138E  0100               	movlb	0	; () banked
 14032  011390  5160               	movf	?___lwmod& (0+255),w,b
 14033  011392  0F30               	addlw	48
 14034  011394  0100               	movlb	0	; () banked
 14035  011396  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 14036  011398  EC77  F0A4         	call	_ringbuf_put	;wreg free
 14037                           
 14038                           ;tasks.h: 336: ringbuf_put_str(tx, "A\n");
 14039  01139C  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14040  0113A0  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14041  0113A4  0EE1               	movlw	low STR_47
 14042  0113A6  0100               	movlb	0	; () banked
 14043  0113A8  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14044  0113AA  0EFF               	movlw	high STR_47
 14045  0113AC  0100               	movlb	0	; () banked
 14046  0113AE  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14047  0113B0  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14048                           
 14049                           ;tasks.h: 337: break;
 14050  0113B4  0012               	return	
 14051  0113B6                     l10562:
 14052                           
 14053                           ;tasks.h: 339: ringbuf_put_str(tx, "\t");
 14054  0113B6  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14055  0113BA  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14056  0113BE  0EF6               	movlw	low STR_46
 14057  0113C0  0100               	movlb	0	; () banked
 14058  0113C2  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14059  0113C4  0EFF               	movlw	high STR_46
 14060  0113C6  0100               	movlb	0	; () banked
 14061  0113C8  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14062  0113CA  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14063                           
 14064                           ;tasks.h: 340: ringbuf_put_num(tx, port[i].integrated_current, 5);
 14065  0113CE  C092  F08A         	movff	command_get_data@tx,ringbuf_put_num@rb
 14066  0113D2  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_num@rb+1
 14067  0113D6  0100               	movlb	0	; () banked
 14068  0113D8  5195               	movf	command_get_data@i& (0+255),w,b
 14069  0113DA  0D17               	mullw	23
 14070  0113DC  0E08               	movlw	8
 14071  0113DE  26F3               	addwf	prodl,f,c
 14072  0113E0  0E00               	movlw	0
 14073  0113E2  22F4               	addwfc	prodh,f,c
 14074  0113E4  0E2B               	movlw	low _port
 14075  0113E6  24F3               	addwf	prodl,w,c
 14076  0113E8  6ED9               	movwf	fsr2l,c
 14077  0113EA  0E01               	movlw	high _port
 14078  0113EC  20F4               	addwfc	prodh,w,c
 14079  0113EE  6EDA               	movwf	fsr2h,c
 14080  0113F0  CFDE F08C          	movff	postinc2,ringbuf_put_num@value
 14081  0113F4  CFDD F08D          	movff	postdec2,ringbuf_put_num@value+1
 14082  0113F8  0E05               	movlw	5
 14083  0113FA  0100               	movlb	0	; () banked
 14084  0113FC  6F8E               	movwf	ringbuf_put_num@digits& (0+255),b
 14085  0113FE  ECE4  F0AE         	call	_ringbuf_put_num	;wreg free
 14086                           
 14087                           ;tasks.h: 341: ringbuf_put_str(tx, "mAh\n");
 14088  011402  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14089  011406  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14090  01140A  0EB7               	movlw	low STR_49
 14091  01140C  0100               	movlb	0	; () banked
 14092  01140E  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14093  011410  0EFF               	movlw	high STR_49
 14094  011412  0100               	movlb	0	; () banked
 14095  011414  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14096  011416  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14097                           
 14098                           ;tasks.h: 342: break;
 14099  01141A  0012               	return	
 14100  01141C                     l10568:
 14101                           
 14102                           ;tasks.h: 344: ringbuf_put_str(tx, "\t");
 14103  01141C  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14104  011420  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14105  011424  0EF6               	movlw	low STR_46
 14106  011426  0100               	movlb	0	; () banked
 14107  011428  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14108  01142A  0EFF               	movlw	high STR_46
 14109  01142C  0100               	movlb	0	; () banked
 14110  01142E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14111  011430  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14112                           
 14113                           ;tasks.h: 345: char str[10];
 14114                           ;tasks.h: 346: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 14115  011434  0E10               	movlw	16
 14116  011436  0100               	movlb	0	; () banked
 14117  011438  6F64               	movwf	___lldiv@divisor& (0+255),b
 14118  01143A  0E0E               	movlw	14
 14119  01143C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14120  01143E  0E00               	movlw	0
 14121  011440  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14122  011442  0E00               	movlw	0
 14123  011444  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14124  011446  0100               	movlb	0	; () banked
 14125  011448  5195               	movf	command_get_data@i& (0+255),w,b
 14126  01144A  0D17               	mullw	23
 14127  01144C  0E10               	movlw	16
 14128  01144E  26F3               	addwf	prodl,f,c
 14129  011450  0E00               	movlw	0
 14130  011452  22F4               	addwfc	prodh,f,c
 14131  011454  0E2B               	movlw	low _port
 14132  011456  24F3               	addwf	prodl,w,c
 14133  011458  6ED9               	movwf	fsr2l,c
 14134  01145A  0E01               	movlw	high _port
 14135  01145C  20F4               	addwfc	prodh,w,c
 14136  01145E  6EDA               	movwf	fsr2h,c
 14137  011460  CFDE F060          	movff	postinc2,___lldiv@dividend
 14138  011464  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 14139  011468  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 14140  01146C  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 14141  011470  EC02  F0A8         	call	___lldiv	;wreg free
 14142  011474  C060  F0A0         	movff	?___lldiv,_command_get_data$5283
 14143  011478  C061  F0A1         	movff	?___lldiv+1,_command_get_data$5283+1
 14144  01147C  C062  F0A2         	movff	?___lldiv+2,_command_get_data$5283+2
 14145  011480  C063  F0A3         	movff	?___lldiv+3,_command_get_data$5283+3
 14146                           
 14147                           ;tasks.h: 345: char str[10];
 14148                           ;tasks.h: 346: my_utoa(str, port[i].integrated_time / 3600 / 24, 2);
 14149  011484  0E96               	movlw	low command_get_data@str
 14150  011486  0100               	movlb	0	; () banked
 14151  011488  6F83               	movwf	my_utoa@str& (0+255),b
 14152  01148A  0E00               	movlw	high command_get_data@str
 14153  01148C  0100               	movlb	0	; () banked
 14154  01148E  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 14155  011490  C0A0  F060         	movff	_command_get_data$5283,___lldiv@dividend
 14156  011494  C0A1  F061         	movff	_command_get_data$5283+1,___lldiv@dividend+1
 14157  011498  C0A2  F062         	movff	_command_get_data$5283+2,___lldiv@dividend+2
 14158  01149C  C0A3  F063         	movff	_command_get_data$5283+3,___lldiv@dividend+3
 14159  0114A0  0E18               	movlw	24
 14160  0114A2  0100               	movlb	0	; () banked
 14161  0114A4  6F64               	movwf	___lldiv@divisor& (0+255),b
 14162  0114A6  0E00               	movlw	0
 14163  0114A8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14164  0114AA  0E00               	movlw	0
 14165  0114AC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14166  0114AE  0E00               	movlw	0
 14167  0114B0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14168  0114B2  EC02  F0A8         	call	___lldiv	;wreg free
 14169  0114B6  C060  F085         	movff	?___lldiv,my_utoa@value
 14170  0114BA  C061  F086         	movff	?___lldiv+1,my_utoa@value+1
 14171  0114BE  0E02               	movlw	2
 14172  0114C0  0100               	movlb	0	; () banked
 14173  0114C2  6F87               	movwf	my_utoa@digits& (0+255),b
 14174  0114C4  EC1C  F0AE         	call	_my_utoa	;wreg free
 14175                           
 14176                           ;tasks.h: 347: ringbuf_put_str(tx, str);
 14177  0114C8  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14178  0114CC  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14179  0114D0  0E96               	movlw	low command_get_data@str
 14180  0114D2  0100               	movlb	0	; () banked
 14181  0114D4  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14182  0114D6  0E00               	movlw	high command_get_data@str
 14183  0114D8  0100               	movlb	0	; () banked
 14184  0114DA  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14185  0114DC  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14186                           
 14187                           ;tasks.h: 348: ringbuf_put_str(tx, "d ");
 14188  0114E0  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14189  0114E4  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14190  0114E8  0EE7               	movlw	low STR_33
 14191  0114EA  0100               	movlb	0	; () banked
 14192  0114EC  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14193  0114EE  0EFF               	movlw	high STR_33
 14194  0114F0  0100               	movlb	0	; () banked
 14195  0114F2  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14196  0114F4  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14197                           
 14198                           ;tasks.h: 349: my_utoa(str, (port[i].integrated_time / 3600) % 24, 2);
 14199  0114F8  0E96               	movlw	low command_get_data@str
 14200  0114FA  0100               	movlb	0	; () banked
 14201  0114FC  6F83               	movwf	my_utoa@str& (0+255),b
 14202  0114FE  0E00               	movlw	high command_get_data@str
 14203  011500  0100               	movlb	0	; () banked
 14204  011502  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 14205  011504  0E10               	movlw	16
 14206  011506  0100               	movlb	0	; () banked
 14207  011508  6F64               	movwf	___lldiv@divisor& (0+255),b
 14208  01150A  0E0E               	movlw	14
 14209  01150C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14210  01150E  0E00               	movlw	0
 14211  011510  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14212  011512  0E00               	movlw	0
 14213  011514  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14214  011516  0100               	movlb	0	; () banked
 14215  011518  5195               	movf	command_get_data@i& (0+255),w,b
 14216  01151A  0D17               	mullw	23
 14217  01151C  0E10               	movlw	16
 14218  01151E  26F3               	addwf	prodl,f,c
 14219  011520  0E00               	movlw	0
 14220  011522  22F4               	addwfc	prodh,f,c
 14221  011524  0E2B               	movlw	low _port
 14222  011526  24F3               	addwf	prodl,w,c
 14223  011528  6ED9               	movwf	fsr2l,c
 14224  01152A  0E01               	movlw	high _port
 14225  01152C  20F4               	addwfc	prodh,w,c
 14226  01152E  6EDA               	movwf	fsr2h,c
 14227  011530  CFDE F060          	movff	postinc2,___lldiv@dividend
 14228  011534  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 14229  011538  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 14230  01153C  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 14231  011540  EC02  F0A8         	call	___lldiv	;wreg free
 14232  011544  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14233  011548  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14234  01154C  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14235  011550  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14236  011554  0E18               	movlw	24
 14237  011556  0100               	movlb	0	; () banked
 14238  011558  6F71               	movwf	___llmod@divisor& (0+255),b
 14239  01155A  0E00               	movlw	0
 14240  01155C  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14241  01155E  0E00               	movlw	0
 14242  011560  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14243  011562  0E00               	movlw	0
 14244  011564  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14245  011566  EC17  F0AC         	call	___llmod	;wreg free
 14246  01156A  C06D  F085         	movff	?___llmod,my_utoa@value
 14247  01156E  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 14248  011572  0E02               	movlw	2
 14249  011574  0100               	movlb	0	; () banked
 14250  011576  6F87               	movwf	my_utoa@digits& (0+255),b
 14251  011578  EC1C  F0AE         	call	_my_utoa	;wreg free
 14252                           
 14253                           ;tasks.h: 350: ringbuf_put_str(tx, str);
 14254  01157C  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14255  011580  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14256  011584  0E96               	movlw	low command_get_data@str
 14257  011586  0100               	movlb	0	; () banked
 14258  011588  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14259  01158A  0E00               	movlw	high command_get_data@str
 14260  01158C  0100               	movlb	0	; () banked
 14261  01158E  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14262  011590  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14263                           
 14264                           ;tasks.h: 351: ringbuf_put_str(tx, "h ");
 14265  011594  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14266  011598  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14267  01159C  0EEA               	movlw	low STR_34
 14268  01159E  0100               	movlb	0	; () banked
 14269  0115A0  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14270  0115A2  0EFF               	movlw	high STR_34
 14271  0115A4  0100               	movlb	0	; () banked
 14272  0115A6  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14273  0115A8  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14274                           
 14275                           ;tasks.h: 352: my_utoa(str, (port[i].integrated_time / 60) % 60, 2);
 14276  0115AC  0E96               	movlw	low command_get_data@str
 14277  0115AE  0100               	movlb	0	; () banked
 14278  0115B0  6F83               	movwf	my_utoa@str& (0+255),b
 14279  0115B2  0E00               	movlw	high command_get_data@str
 14280  0115B4  0100               	movlb	0	; () banked
 14281  0115B6  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 14282  0115B8  0E3C               	movlw	60
 14283  0115BA  0100               	movlb	0	; () banked
 14284  0115BC  6F64               	movwf	___lldiv@divisor& (0+255),b
 14285  0115BE  0E00               	movlw	0
 14286  0115C0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14287  0115C2  0E00               	movlw	0
 14288  0115C4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14289  0115C6  0E00               	movlw	0
 14290  0115C8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14291  0115CA  0100               	movlb	0	; () banked
 14292  0115CC  5195               	movf	command_get_data@i& (0+255),w,b
 14293  0115CE  0D17               	mullw	23
 14294  0115D0  0E10               	movlw	16
 14295  0115D2  26F3               	addwf	prodl,f,c
 14296  0115D4  0E00               	movlw	0
 14297  0115D6  22F4               	addwfc	prodh,f,c
 14298  0115D8  0E2B               	movlw	low _port
 14299  0115DA  24F3               	addwf	prodl,w,c
 14300  0115DC  6ED9               	movwf	fsr2l,c
 14301  0115DE  0E01               	movlw	high _port
 14302  0115E0  20F4               	addwfc	prodh,w,c
 14303  0115E2  6EDA               	movwf	fsr2h,c
 14304  0115E4  CFDE F060          	movff	postinc2,___lldiv@dividend
 14305  0115E8  CFDE F061          	movff	postinc2,___lldiv@dividend+1
 14306  0115EC  CFDE F062          	movff	postinc2,___lldiv@dividend+2
 14307  0115F0  CFDE F063          	movff	postinc2,___lldiv@dividend+3
 14308  0115F4  EC02  F0A8         	call	___lldiv	;wreg free
 14309  0115F8  C060  F06D         	movff	?___lldiv,___llmod@dividend
 14310  0115FC  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
 14311  011600  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
 14312  011604  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
 14313  011608  0E3C               	movlw	60
 14314  01160A  0100               	movlb	0	; () banked
 14315  01160C  6F71               	movwf	___llmod@divisor& (0+255),b
 14316  01160E  0E00               	movlw	0
 14317  011610  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14318  011612  0E00               	movlw	0
 14319  011614  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14320  011616  0E00               	movlw	0
 14321  011618  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14322  01161A  EC17  F0AC         	call	___llmod	;wreg free
 14323  01161E  C06D  F085         	movff	?___llmod,my_utoa@value
 14324  011622  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 14325  011626  0E02               	movlw	2
 14326  011628  0100               	movlb	0	; () banked
 14327  01162A  6F87               	movwf	my_utoa@digits& (0+255),b
 14328  01162C  EC1C  F0AE         	call	_my_utoa	;wreg free
 14329                           
 14330                           ;tasks.h: 353: ringbuf_put_str(tx, str);
 14331  011630  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14332  011634  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14333  011638  0E96               	movlw	low command_get_data@str
 14334  01163A  0100               	movlb	0	; () banked
 14335  01163C  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14336  01163E  0E00               	movlw	high command_get_data@str
 14337  011640  0100               	movlb	0	; () banked
 14338  011642  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14339  011644  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14340                           
 14341                           ;tasks.h: 354: ringbuf_put_str(tx, "m ");
 14342  011648  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14343  01164C  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14344  011650  0EED               	movlw	low STR_35
 14345  011652  0100               	movlb	0	; () banked
 14346  011654  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14347  011656  0EFF               	movlw	high STR_35
 14348  011658  0100               	movlb	0	; () banked
 14349  01165A  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14350  01165C  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14351                           
 14352                           ;tasks.h: 355: my_utoa(str, port[i].integrated_time % 60, 2);
 14353  011660  0E96               	movlw	low command_get_data@str
 14354  011662  0100               	movlb	0	; () banked
 14355  011664  6F83               	movwf	my_utoa@str& (0+255),b
 14356  011666  0E00               	movlw	high command_get_data@str
 14357  011668  0100               	movlb	0	; () banked
 14358  01166A  6F84               	movwf	(my_utoa@str+1)& (0+255),b
 14359  01166C  0100               	movlb	0	; () banked
 14360  01166E  5195               	movf	command_get_data@i& (0+255),w,b
 14361  011670  0D17               	mullw	23
 14362  011672  0E10               	movlw	16
 14363  011674  26F3               	addwf	prodl,f,c
 14364  011676  0E00               	movlw	0
 14365  011678  22F4               	addwfc	prodh,f,c
 14366  01167A  0E2B               	movlw	low _port
 14367  01167C  24F3               	addwf	prodl,w,c
 14368  01167E  6ED9               	movwf	fsr2l,c
 14369  011680  0E01               	movlw	high _port
 14370  011682  20F4               	addwfc	prodh,w,c
 14371  011684  6EDA               	movwf	fsr2h,c
 14372  011686  CFDE F06D          	movff	postinc2,___llmod@dividend
 14373  01168A  CFDE F06E          	movff	postinc2,___llmod@dividend+1
 14374  01168E  CFDE F06F          	movff	postinc2,___llmod@dividend+2
 14375  011692  CFDE F070          	movff	postinc2,___llmod@dividend+3
 14376  011696  0E3C               	movlw	60
 14377  011698  0100               	movlb	0	; () banked
 14378  01169A  6F71               	movwf	___llmod@divisor& (0+255),b
 14379  01169C  0E00               	movlw	0
 14380  01169E  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
 14381  0116A0  0E00               	movlw	0
 14382  0116A2  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
 14383  0116A4  0E00               	movlw	0
 14384  0116A6  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
 14385  0116A8  EC17  F0AC         	call	___llmod	;wreg free
 14386  0116AC  C06D  F085         	movff	?___llmod,my_utoa@value
 14387  0116B0  C06E  F086         	movff	?___llmod+1,my_utoa@value+1
 14388  0116B4  0E02               	movlw	2
 14389  0116B6  0100               	movlb	0	; () banked
 14390  0116B8  6F87               	movwf	my_utoa@digits& (0+255),b
 14391  0116BA  EC1C  F0AE         	call	_my_utoa	;wreg free
 14392                           
 14393                           ;tasks.h: 356: ringbuf_put_str(tx, str);
 14394  0116BE  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14395  0116C2  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14396  0116C6  0E96               	movlw	low command_get_data@str
 14397  0116C8  0100               	movlb	0	; () banked
 14398  0116CA  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14399  0116CC  0E00               	movlw	high command_get_data@str
 14400  0116CE  0100               	movlb	0	; () banked
 14401  0116D0  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14402  0116D2  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14403                           
 14404                           ;tasks.h: 357: ringbuf_put_str(tx, "s");
 14405  0116D6  C092  F08A         	movff	command_get_data@tx,ringbuf_put_str@rb
 14406  0116DA  C093  F08B         	movff	command_get_data@tx+1,ringbuf_put_str@rb+1
 14407  0116DE  0E62               	movlw	low (STR_58+7)
 14408  0116E0  0100               	movlb	0	; () banked
 14409  0116E2  6F8C               	movwf	ringbuf_put_str@str& (0+255),b
 14410  0116E4  0EFF               	movlw	high (STR_58+7)
 14411  0116E6  0100               	movlb	0	; () banked
 14412  0116E8  6F8D               	movwf	(ringbuf_put_str@str+1)& (0+255),b
 14413  0116EA  ECBD  F0B0         	call	_ringbuf_put_str	;wreg free
 14414                           
 14415                           ;tasks.h: 359: }
 14416                           
 14417                           ;tasks.h: 358: break;
 14418  0116EE  0012               	return	
 14419  0116F0                     l10598:
 14420  0116F0  0100               	movlb	0	; () banked
 14421  0116F2  5194               	movf	command_get_data@content& (0+255),w,b
 14422                           
 14423                           ; Switch size 1, requested type "space"
 14424                           ; Number of cases is 3, Range of values is 0 to 2
 14425                           ; switch strategies available:
 14426                           ; Name         Instructions Cycles
 14427                           ; simple_byte           10     6 (average)
 14428                           ;	Chosen strategy is simple_byte
 14429  0116F4  0A00               	xorlw	0	; case 0
 14430  0116F6  B4D8               	btfsc	status,2,c
 14431  0116F8  D58F               	goto	l10548
 14432  0116FA  0A01               	xorlw	1	; case 1
 14433  0116FC  B4D8               	btfsc	status,2,c
 14434  0116FE  D65B               	goto	l10562
 14435  011700  0A03               	xorlw	3	; case 2
 14436  011702  A4D8               	btfss	status,2,c
 14437  011704  0012               	return	
 14438  011706  D68A               	goto	l10568
 14439  011708                     __end_of_command_get_data:
 14440                           	opt stack 0
 14441                           tblptru	equ	0xFF8
 14442                           tblptrh	equ	0xFF7
 14443                           tblptrl	equ	0xFF6
 14444                           tablat	equ	0xFF5
 14445                           prodh	equ	0xFF4
 14446                           prodl	equ	0xFF3
 14447                           intcon	equ	0xFF2
 14448                           postinc0	equ	0xFEE
 14449                           wreg	equ	0xFE8
 14450                           indf1	equ	0xFE7
 14451                           postinc1	equ	0xFE6
 14452                           postdec1	equ	0xFE5
 14453                           fsr1h	equ	0xFE2
 14454                           fsr1l	equ	0xFE1
 14455                           indf2	equ	0xFDF
 14456                           postinc2	equ	0xFDE
 14457                           postdec2	equ	0xFDD
 14458                           plusw2	equ	0xFDB
 14459                           fsr2h	equ	0xFDA
 14460                           fsr2l	equ	0xFD9
 14461                           status	equ	0xFD8
 14462                           
 14463 ;; *************** function _ringbuf_put_str *****************
 14464 ;; Defined at:
 14465 ;;		line 58 in file "../My_header\My_ringbuf.h"
 14466 ;; Parameters:    Size  Location     Type
 14467 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 14468 ;;		 -> usb_tx(8), 
 14469 ;;  str             2   44[BANK0 ] PTR const unsigned char 
 14470 ;;		 -> STR_70(18), STR_67(36), STR_66(24), STR_57(490), 
 14471 ;;		 -> STR_54(2), STR_53(3), STR_52(3), STR_51(3), 
 14472 ;;		 -> command_get_data@str(10), STR_50(2), STR_49(5), STR_48(2), 
 14473 ;;		 -> STR_47(3), STR_46(2), STR_6(8), print_time@str(30), 
 14474 ;;		 -> STR_4(3), print_time_dec@str(10), STR_3(4), STR_2(4), 
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;		None
 14477 ;; Return value:  Size  Location     Type
 14478 ;;		None               void
 14479 ;; Registers used:
 14480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 0/0
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14489 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14490 ;;Total ram usage:        4 bytes
 14491 ;; Hardware stack levels used:    1
 14492 ;; Hardware stack levels required when called:   13
 14493 ;; This function calls:
 14494 ;;		_ringbuf_put
 14495 ;; This function is called by:
 14496 ;;		_my_terminal_loop
 14497 ;;		_print_time
 14498 ;;		_command_at_hand
 14499 ;;		_command_get_data
 14500 ;;		_command_operation
 14501 ;;		_print_time_dec
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505                           	psect	text43
 14506  01617A                     __ptext43:
 14507                           	opt stack 0
 14508  01617A                     _ringbuf_put_str:
 14509                           	opt stack 16
 14510                           
 14511                           ;My_header\My_ringbuf.h: 59: while (*str) {
 14512                           
 14513                           ;incstack = 0
 14514  01617A  D01C               	goto	l9768
 14515  01617C                     l9764:
 14516                           
 14517                           ;My_header\My_ringbuf.h: 60: ringbuf_put(rb, *str++);
 14518  01617C  C08A  F083         	movff	ringbuf_put_str@rb,ringbuf_put@rb
 14519  016180  C08B  F084         	movff	ringbuf_put_str@rb+1,ringbuf_put@rb+1
 14520  016184  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14521  016188  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14522  01618C  0E00               	movlw	low (__mediumconst shr (0+16))
 14523  01618E  6EF8               	movwf	tblptru,c
 14524  016190  0E0E               	movlw	(high __ramtop+-1)
 14525  016192  64F7               	cpfsgt	tblptrh,c
 14526  016194  D003               	bra	u10787
 14527  016196  0008               	tblrd		*
 14528  016198  50F5               	movf	tablat,w,c
 14529  01619A  D005               	bra	u10780
 14530  01619C                     u10787:
 14531  01619C  CFF6 FFE1          	movff	tblptrl,fsr1l
 14532  0161A0  CFF7 FFE2          	movff	tblptrh,fsr1h
 14533  0161A4  50E7               	movf	indf1,w,c
 14534  0161A6                     u10780:
 14535  0161A6  0100               	movlb	0	; () banked
 14536  0161A8  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 14537  0161AA  EC77  F0A4         	call	_ringbuf_put	;wreg free
 14538  0161AE  0100               	movlb	0	; () banked
 14539  0161B0  4B8C               	infsnz	ringbuf_put_str@str& (0+255),f,b
 14540  0161B2  2B8D               	incf	(ringbuf_put_str@str+1)& (0+255),f,b
 14541  0161B4                     l9768:
 14542  0161B4  C08C  FFF6         	movff	ringbuf_put_str@str,tblptrl
 14543  0161B8  C08D  FFF7         	movff	ringbuf_put_str@str+1,tblptrh
 14544  0161BC  0E00               	movlw	low (__mediumconst shr (0+16))
 14545  0161BE  6EF8               	movwf	tblptru,c
 14546  0161C0  0E0E               	movlw	(high __ramtop+-1)
 14547  0161C2  64F7               	cpfsgt	tblptrh,c
 14548  0161C4  D003               	bra	u10797
 14549  0161C6  0008               	tblrd		*
 14550  0161C8  50F5               	movf	tablat,w,c
 14551  0161CA  D005               	bra	u10790
 14552  0161CC                     u10797:
 14553  0161CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 14554  0161D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 14555  0161D4  50E7               	movf	indf1,w,c
 14556  0161D6                     u10790:
 14557  0161D6  0900               	iorlw	0
 14558  0161D8  B4D8               	btfsc	status,2,c
 14559  0161DA  0012               	return	
 14560  0161DC  D7CF               	goto	l9764
 14561  0161DE                     __end_of_ringbuf_put_str:
 14562                           	opt stack 0
 14563                           tblptru	equ	0xFF8
 14564                           tblptrh	equ	0xFF7
 14565                           tblptrl	equ	0xFF6
 14566                           tablat	equ	0xFF5
 14567                           prodh	equ	0xFF4
 14568                           prodl	equ	0xFF3
 14569                           intcon	equ	0xFF2
 14570                           postinc0	equ	0xFEE
 14571                           wreg	equ	0xFE8
 14572                           indf1	equ	0xFE7
 14573                           postinc1	equ	0xFE6
 14574                           postdec1	equ	0xFE5
 14575                           fsr1h	equ	0xFE2
 14576                           fsr1l	equ	0xFE1
 14577                           indf2	equ	0xFDF
 14578                           postinc2	equ	0xFDE
 14579                           postdec2	equ	0xFDD
 14580                           plusw2	equ	0xFDB
 14581                           fsr2h	equ	0xFDA
 14582                           fsr2l	equ	0xFD9
 14583                           status	equ	0xFD8
 14584                           
 14585 ;; *************** function _ringbuf_put_num *****************
 14586 ;; Defined at:
 14587 ;;		line 47 in file "../My_header\My_ringbuf.h"
 14588 ;; Parameters:    Size  Location     Type
 14589 ;;  rb              2   42[BANK0 ] PTR struct ringbuf
 14590 ;;		 -> usb_tx(8), 
 14591 ;;  value           2   44[BANK0 ] const unsigned int 
 14592 ;;  digits          1   46[BANK0 ] unsigned char 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;  i               1   47[BANK0 ] unsigned char 
 14595 ;;  temp            2   48[BANK0 ] unsigned int 
 14596 ;; Return value:  Size  Location     Type
 14597 ;;		None               void
 14598 ;; Registers used:
 14599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14600 ;; Tracked objects:
 14601 ;;		On entry : 0/0
 14602 ;;		On exit  : 0/0
 14603 ;;		Unchanged: 0/0
 14604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14605 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14606 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14608 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14609 ;;Total ram usage:        8 bytes
 14610 ;; Hardware stack levels used:    1
 14611 ;; Hardware stack levels required when called:   13
 14612 ;; This function calls:
 14613 ;;		___lwdiv
 14614 ;;		___lwmod
 14615 ;;		_ringbuf_put
 14616 ;; This function is called by:
 14617 ;;		_my_terminal_loop
 14618 ;;		_command_get_data
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text44
 14623  015DC8                     __ptext44:
 14624                           	opt stack 0
 14625  015DC8                     _ringbuf_put_num:
 14626                           	opt stack 16
 14627                           
 14628                           ;My_header\My_ringbuf.h: 48: while (digits--) {
 14629                           
 14630                           ;incstack = 0
 14631  015DC8  D039               	goto	l10092
 14632  015DCA                     l182:
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;My_header\My_ringbuf.h: 49: uint16_t temp = value;
 14636  015DCA  C08C  F090         	movff	ringbuf_put_num@value,ringbuf_put_num@temp
 14637  015DCE  C08D  F091         	movff	ringbuf_put_num@value+1,ringbuf_put_num@temp+1
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;My_header\My_ringbuf.h: 50: for (uint8_t i = 0; i < digits; i++) {
 14641  015DD2  0E00               	movlw	0
 14642  015DD4  0100               	movlb	0	; () banked
 14643  015DD6  6F8F               	movwf	ringbuf_put_num@i& (0+255),b
 14644  015DD8  D011               	goto	l10086
 14645  015DDA                     l10082:
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;My_header\My_ringbuf.h: 51: temp /= 10;
 14649  015DDA  C090  F07C         	movff	ringbuf_put_num@temp,___lwdiv@dividend
 14650  015DDE  C091  F07D         	movff	ringbuf_put_num@temp+1,___lwdiv@dividend+1
 14651  015DE2  0E00               	movlw	0
 14652  015DE4  0100               	movlb	0	; () banked
 14653  015DE6  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 14654  015DE8  0E0A               	movlw	10
 14655  015DEA  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 14656  015DEC  EC66  F0AF         	call	___lwdiv	;wreg free
 14657  015DF0  C07C  F090         	movff	?___lwdiv,ringbuf_put_num@temp
 14658  015DF4  C07D  F091         	movff	?___lwdiv+1,ringbuf_put_num@temp+1
 14659  015DF8  0100               	movlb	0	; () banked
 14660  015DFA  2B8F               	incf	ringbuf_put_num@i& (0+255),f,b
 14661  015DFC                     l10086:
 14662                           
 14663                           ; BSR set to: 0
 14664  015DFC  0100               	movlb	0	; () banked
 14665  015DFE  518E               	movf	ringbuf_put_num@digits& (0+255),w,b
 14666  015E00  0100               	movlb	0	; () banked
 14667  015E02  5D8F               	subwf	ringbuf_put_num@i& (0+255),w,b
 14668  015E04  A0D8               	btfss	status,0,c
 14669  015E06  D7E9               	goto	l10082
 14670                           
 14671                           ; BSR set to: 0
 14672                           ;My_header\My_ringbuf.h: 52: }
 14673                           ;My_header\My_ringbuf.h: 53: temp %= 10;
 14674                           
 14675                           ; BSR set to: 0
 14676  015E08  C090  F060         	movff	ringbuf_put_num@temp,___lwmod@dividend
 14677  015E0C  C091  F061         	movff	ringbuf_put_num@temp+1,___lwmod@dividend+1
 14678  015E10  0E00               	movlw	0
 14679  015E12  0100               	movlb	0	; () banked
 14680  015E14  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 14681  015E16  0E0A               	movlw	10
 14682  015E18  6F62               	movwf	___lwmod@divisor& (0+255),b
 14683  015E1A  EC21  F0B1         	call	___lwmod	;wreg free
 14684  015E1E  C060  F090         	movff	?___lwmod,ringbuf_put_num@temp
 14685  015E22  C061  F091         	movff	?___lwmod+1,ringbuf_put_num@temp+1
 14686                           
 14687                           ;My_header\My_ringbuf.h: 54: ringbuf_put(rb, temp + '0');
 14688  015E26  C08A  F083         	movff	ringbuf_put_num@rb,ringbuf_put@rb
 14689  015E2A  C08B  F084         	movff	ringbuf_put_num@rb+1,ringbuf_put@rb+1
 14690  015E2E  0100               	movlb	0	; () banked
 14691  015E30  5190               	movf	ringbuf_put_num@temp& (0+255),w,b
 14692  015E32  0F30               	addlw	48
 14693  015E34  0100               	movlb	0	; () banked
 14694  015E36  6F85               	movwf	ringbuf_put@asciicode& (0+255),b
 14695  015E38  EC77  F0A4         	call	_ringbuf_put	;wreg free
 14696  015E3C                     l10092:
 14697  015E3C  0100               	movlb	0	; () banked
 14698  015E3E  078E               	decf	ringbuf_put_num@digits& (0+255),f,b
 14699  015E40  0100               	movlb	0	; () banked
 14700  015E42  298E               	incf	ringbuf_put_num@digits& (0+255),w,b
 14701  015E44  B4D8               	btfsc	status,2,c
 14702  015E46  0012               	return	
 14703  015E48  D7C0               	goto	l182
 14704  015E4A                     __end_of_ringbuf_put_num:
 14705                           	opt stack 0
 14706                           tblptru	equ	0xFF8
 14707                           tblptrh	equ	0xFF7
 14708                           tblptrl	equ	0xFF6
 14709                           tablat	equ	0xFF5
 14710                           prodh	equ	0xFF4
 14711                           prodl	equ	0xFF3
 14712                           intcon	equ	0xFF2
 14713                           postinc0	equ	0xFEE
 14714                           wreg	equ	0xFE8
 14715                           indf1	equ	0xFE7
 14716                           postinc1	equ	0xFE6
 14717                           postdec1	equ	0xFE5
 14718                           fsr1h	equ	0xFE2
 14719                           fsr1l	equ	0xFE1
 14720                           indf2	equ	0xFDF
 14721                           postinc2	equ	0xFDE
 14722                           postdec2	equ	0xFDD
 14723                           plusw2	equ	0xFDB
 14724                           fsr2h	equ	0xFDA
 14725                           fsr2l	equ	0xFD9
 14726                           status	equ	0xFD8
 14727                           
 14728 ;; *************** function _my_utoa *****************
 14729 ;; Defined at:
 14730 ;;		line 11 in file "../My_header\My_stdlib.h"
 14731 ;; Parameters:    Size  Location     Type
 14732 ;;  str             2   35[BANK0 ] PTR unsigned char 
 14733 ;;		 -> command_get_data@str(10), display_LCD@str(10), print_time_dec@str(10), display_dec@str(10), 
 14734 ;;  value           2   37[BANK0 ] unsigned int 
 14735 ;;  digits          1   39[BANK0 ] unsigned char 
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;  v               2   41[BANK0 ] unsigned int 
 14738 ;;  d               1   40[BANK0 ] unsigned char 
 14739 ;; Return value:  Size  Location     Type
 14740 ;;		None               void
 14741 ;; Registers used:
 14742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14743 ;; Tracked objects:
 14744 ;;		On entry : 0/0
 14745 ;;		On exit  : 0/0
 14746 ;;		Unchanged: 0/0
 14747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14748 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14749 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;Total ram usage:        8 bytes
 14753 ;; Hardware stack levels used:    1
 14754 ;; Hardware stack levels required when called:   12
 14755 ;; This function calls:
 14756 ;;		___lwdiv
 14757 ;;		___lwmod
 14758 ;; This function is called by:
 14759 ;;		_display_dec
 14760 ;;		_display_LCD
 14761 ;;		_command_get_data
 14762 ;;		_print_time_dec
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           	psect	text45
 14767  015C38                     __ptext45:
 14768                           	opt stack 0
 14769  015C38                     _my_utoa:
 14770                           	opt stack 16
 14771                           
 14772                           ;My_header\My_stdlib.h: 12: uint16_t v;
 14773                           ;My_header\My_stdlib.h: 13: uint8_t d;
 14774                           ;My_header\My_stdlib.h: 14: while (digits--) {
 14775                           
 14776                           ; BSR set to: 0
 14777                           ;incstack = 0
 14778  015C38  D036               	goto	l10068
 14779  015C3A                     l457:
 14780                           
 14781                           ; BSR set to: 0
 14782                           ;My_header\My_stdlib.h: 15: v = value;
 14783  015C3A  C085  F089         	movff	my_utoa@value,my_utoa@v
 14784  015C3E  C086  F08A         	movff	my_utoa@value+1,my_utoa@v+1
 14785                           
 14786                           ;My_header\My_stdlib.h: 16: d = digits;
 14787  015C42  C087  F088         	movff	my_utoa@digits,my_utoa@d
 14788                           
 14789                           ;My_header\My_stdlib.h: 17: while (d--) {
 14790  015C46  D00F               	goto	l10060
 14791  015C48                     l10058:
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;My_header\My_stdlib.h: 18: v /= 10;
 14795  015C48  C089  F07C         	movff	my_utoa@v,___lwdiv@dividend
 14796  015C4C  C08A  F07D         	movff	my_utoa@v+1,___lwdiv@dividend+1
 14797  015C50  0E00               	movlw	0
 14798  015C52  0100               	movlb	0	; () banked
 14799  015C54  6F7F               	movwf	(___lwdiv@divisor+1)& (0+255),b
 14800  015C56  0E0A               	movlw	10
 14801  015C58  6F7E               	movwf	___lwdiv@divisor& (0+255),b
 14802  015C5A  EC66  F0AF         	call	___lwdiv	;wreg free
 14803  015C5E  C07C  F089         	movff	?___lwdiv,my_utoa@v
 14804  015C62  C07D  F08A         	movff	?___lwdiv+1,my_utoa@v+1
 14805  015C66                     l10060:
 14806  015C66  0100               	movlb	0	; () banked
 14807  015C68  0788               	decf	my_utoa@d& (0+255),f,b
 14808  015C6A  0100               	movlb	0	; () banked
 14809  015C6C  2988               	incf	my_utoa@d& (0+255),w,b
 14810  015C6E  A4D8               	btfss	status,2,c
 14811  015C70  D7EB               	goto	l10058
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;My_header\My_stdlib.h: 19: }
 14815                           ;My_header\My_stdlib.h: 20: v %= 10;
 14816                           
 14817                           ; BSR set to: 0
 14818  015C72  C089  F060         	movff	my_utoa@v,___lwmod@dividend
 14819  015C76  C08A  F061         	movff	my_utoa@v+1,___lwmod@dividend+1
 14820  015C7A  0E00               	movlw	0
 14821  015C7C  0100               	movlb	0	; () banked
 14822  015C7E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 14823  015C80  0E0A               	movlw	10
 14824  015C82  6F62               	movwf	___lwmod@divisor& (0+255),b
 14825  015C84  EC21  F0B1         	call	___lwmod	;wreg free
 14826  015C88  C060  F089         	movff	?___lwmod,my_utoa@v
 14827  015C8C  C061  F08A         	movff	?___lwmod+1,my_utoa@v+1
 14828                           
 14829                           ;My_header\My_stdlib.h: 21: *str++ = '0' + v;
 14830  015C90  0100               	movlb	0	; () banked
 14831  015C92  5189               	movf	my_utoa@v& (0+255),w,b
 14832  015C94  0F30               	addlw	48
 14833  015C96  C083  FFD9         	movff	my_utoa@str,fsr2l
 14834  015C9A  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 14835  015C9E  6EDF               	movwf	indf2,c
 14836                           
 14837                           ; BSR set to: 0
 14838  015CA0  0100               	movlb	0	; () banked
 14839  015CA2  4B83               	infsnz	my_utoa@str& (0+255),f,b
 14840  015CA4  2B84               	incf	(my_utoa@str+1)& (0+255),f,b
 14841  015CA6                     l10068:
 14842  015CA6  0100               	movlb	0	; () banked
 14843  015CA8  0787               	decf	my_utoa@digits& (0+255),f,b
 14844  015CAA  0100               	movlb	0	; () banked
 14845  015CAC  2987               	incf	my_utoa@digits& (0+255),w,b
 14846  015CAE  A4D8               	btfss	status,2,c
 14847  015CB0  D7C4               	goto	l457
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;My_header\My_stdlib.h: 22: }
 14851                           ;My_header\My_stdlib.h: 23: *str = '\0';
 14852                           
 14853                           ; BSR set to: 0
 14854  015CB2  C083  FFD9         	movff	my_utoa@str,fsr2l
 14855  015CB6  C084  FFDA         	movff	my_utoa@str+1,fsr2h
 14856  015CBA  0E00               	movlw	0
 14857  015CBC  6EDF               	movwf	indf2,c
 14858                           
 14859                           ; BSR set to: 0
 14860  015CBE  0012               	return		;funcret
 14861  015CC0                     __end_of_my_utoa:
 14862                           	opt stack 0
 14863                           tblptru	equ	0xFF8
 14864                           tblptrh	equ	0xFF7
 14865                           tblptrl	equ	0xFF6
 14866                           tablat	equ	0xFF5
 14867                           prodh	equ	0xFF4
 14868                           prodl	equ	0xFF3
 14869                           intcon	equ	0xFF2
 14870                           postinc0	equ	0xFEE
 14871                           wreg	equ	0xFE8
 14872                           indf1	equ	0xFE7
 14873                           postinc1	equ	0xFE6
 14874                           postdec1	equ	0xFE5
 14875                           fsr1h	equ	0xFE2
 14876                           fsr1l	equ	0xFE1
 14877                           indf2	equ	0xFDF
 14878                           postinc2	equ	0xFDE
 14879                           postdec2	equ	0xFDD
 14880                           plusw2	equ	0xFDB
 14881                           fsr2h	equ	0xFDA
 14882                           fsr2l	equ	0xFD9
 14883                           status	equ	0xFD8
 14884                           
 14885 ;; *************** function ___lwmod *****************
 14886 ;; Defined at:
 14887 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  dividend        2    0[BANK0 ] unsigned int 
 14890 ;;  divisor         2    2[BANK0 ] unsigned int 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  counter         1    4[BANK0 ] unsigned char 
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  2    0[BANK0 ] unsigned int 
 14895 ;; Registers used:
 14896 ;;		wreg, status,2, status,0
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14905 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14906 ;;Total ram usage:        5 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; Hardware stack levels required when called:   11
 14909 ;; This function calls:
 14910 ;;		Nothing
 14911 ;; This function is called by:
 14912 ;;		_ringbuf_put_num
 14913 ;;		_my_utoa
 14914 ;;		_display_LCD
 14915 ;;		_command_get_data
 14916 ;;		_sprintf
 14917 ;;		_tx_sendn
 14918 ;; This function uses a non-reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text46
 14922  016242                     __ptext46:
 14923                           	opt stack 0
 14924  016242                     ___lwmod:
 14925                           	opt stack 16
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;incstack = 0
 14929  016242  0100               	movlb	0	; () banked
 14930  016244  5162               	movf	___lwmod@divisor& (0+255),w,b
 14931  016246  0100               	movlb	0	; () banked
 14932  016248  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14933  01624A  B4D8               	btfsc	status,2,c
 14934  01624C  D026               	goto	l2001
 14935                           
 14936                           ; BSR set to: 0
 14937  01624E  0E01               	movlw	1
 14938  016250  0100               	movlb	0	; () banked
 14939  016252  6F64               	movwf	___lwmod@counter& (0+255),b
 14940  016254  D006               	goto	l9752
 14941  016256                     l9750:
 14942                           
 14943                           ; BSR set to: 0
 14944  016256  0100               	movlb	0	; () banked
 14945  016258  90D8               	bcf	status,0,c
 14946  01625A  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 14947  01625C  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14948  01625E  0100               	movlb	0	; () banked
 14949  016260  2B64               	incf	___lwmod@counter& (0+255),f,b
 14950  016262                     l9752:
 14951                           
 14952                           ; BSR set to: 0
 14953  016262  0100               	movlb	0	; () banked
 14954  016264  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14955  016266  D7F7               	goto	l9750
 14956  016268                     l9754:
 14957                           
 14958                           ; BSR set to: 0
 14959  016268  0100               	movlb	0	; () banked
 14960  01626A  5162               	movf	___lwmod@divisor& (0+255),w,b
 14961  01626C  0100               	movlb	0	; () banked
 14962  01626E  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 14963  016270  0100               	movlb	0	; () banked
 14964  016272  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14965  016274  0100               	movlb	0	; () banked
 14966  016276  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14967  016278  A0D8               	btfss	status,0,c
 14968  01627A  D008               	goto	l9758
 14969                           
 14970                           ; BSR set to: 0
 14971  01627C  0100               	movlb	0	; () banked
 14972  01627E  5162               	movf	___lwmod@divisor& (0+255),w,b
 14973  016280  0100               	movlb	0	; () banked
 14974  016282  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 14975  016284  0100               	movlb	0	; () banked
 14976  016286  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14977  016288  0100               	movlb	0	; () banked
 14978  01628A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14979  01628C                     l9758:
 14980                           
 14981                           ; BSR set to: 0
 14982  01628C  0100               	movlb	0	; () banked
 14983  01628E  90D8               	bcf	status,0,c
 14984  016290  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14985  016292  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 14986                           
 14987                           ; BSR set to: 0
 14988  016294  0100               	movlb	0	; () banked
 14989  016296  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 14990  016298  D7E7               	goto	l9754
 14991  01629A                     l2001:
 14992                           
 14993                           ; BSR set to: 0
 14994  01629A  C060  F060         	movff	___lwmod@dividend,?___lwmod
 14995  01629E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 14996                           
 14997                           ; BSR set to: 0
 14998  0162A2  0012               	return		;funcret
 14999  0162A4                     __end_of___lwmod:
 15000                           	opt stack 0
 15001                           tblptru	equ	0xFF8
 15002                           tblptrh	equ	0xFF7
 15003                           tblptrl	equ	0xFF6
 15004                           tablat	equ	0xFF5
 15005                           prodh	equ	0xFF4
 15006                           prodl	equ	0xFF3
 15007                           intcon	equ	0xFF2
 15008                           postinc0	equ	0xFEE
 15009                           wreg	equ	0xFE8
 15010                           indf1	equ	0xFE7
 15011                           postinc1	equ	0xFE6
 15012                           postdec1	equ	0xFE5
 15013                           fsr1h	equ	0xFE2
 15014                           fsr1l	equ	0xFE1
 15015                           indf2	equ	0xFDF
 15016                           postinc2	equ	0xFDE
 15017                           postdec2	equ	0xFDD
 15018                           plusw2	equ	0xFDB
 15019                           fsr2h	equ	0xFDA
 15020                           fsr2l	equ	0xFD9
 15021                           status	equ	0xFD8
 15022                           
 15023 ;; *************** function ___llmod *****************
 15024 ;; Defined at:
 15025 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  dividend        4   13[BANK0 ] unsigned long 
 15028 ;;  divisor         4   17[BANK0 ] unsigned long 
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;  counter         1   21[BANK0 ] unsigned char 
 15031 ;; Return value:  Size  Location     Type
 15032 ;;                  4   13[BANK0 ] unsigned long 
 15033 ;; Registers used:
 15034 ;;		wreg, status,2, status,0
 15035 ;; Tracked objects:
 15036 ;;		On entry : 0/0
 15037 ;;		On exit  : 0/0
 15038 ;;		Unchanged: 0/0
 15039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15040 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15043 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15044 ;;Total ram usage:        9 bytes
 15045 ;; Hardware stack levels used:    1
 15046 ;; Hardware stack levels required when called:   11
 15047 ;; This function calls:
 15048 ;;		Nothing
 15049 ;; This function is called by:
 15050 ;;		_display_LCD
 15051 ;;		_command_get_data
 15052 ;;		_my_utoa32
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           	psect	text47
 15057  01582E                     __ptext47:
 15058                           	opt stack 0
 15059  01582E                     ___llmod:
 15060                           	opt stack 17
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;incstack = 0
 15064  01582E  0100               	movlb	0	; () banked
 15065  015830  5171               	movf	___llmod@divisor& (0+255),w,b
 15066  015832  0100               	movlb	0	; () banked
 15067  015834  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15068  015836  0100               	movlb	0	; () banked
 15069  015838  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15070  01583A  0100               	movlb	0	; () banked
 15071  01583C  1174               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15072  01583E  B4D8               	btfsc	status,2,c
 15073  015840  D03A               	goto	l1948
 15074                           
 15075                           ; BSR set to: 0
 15076  015842  0E01               	movlw	1
 15077  015844  0100               	movlb	0	; () banked
 15078  015846  6F75               	movwf	___llmod@counter& (0+255),b
 15079  015848  D008               	goto	l10248
 15080  01584A                     l10246:
 15081                           
 15082                           ; BSR set to: 0
 15083  01584A  0100               	movlb	0	; () banked
 15084  01584C  90D8               	bcf	status,0,c
 15085  01584E  3771               	rlcf	___llmod@divisor& (0+255),f,b
 15086  015850  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15087  015852  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15088  015854  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15089  015856  0100               	movlb	0	; () banked
 15090  015858  2B75               	incf	___llmod@counter& (0+255),f,b
 15091  01585A                     l10248:
 15092                           
 15093                           ; BSR set to: 0
 15094  01585A  0100               	movlb	0	; () banked
 15095  01585C  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15096  01585E  D7F5               	goto	l10246
 15097  015860                     l10250:
 15098                           
 15099                           ; BSR set to: 0
 15100  015860  0100               	movlb	0	; () banked
 15101  015862  5171               	movf	___llmod@divisor& (0+255),w,b
 15102  015864  0100               	movlb	0	; () banked
 15103  015866  5D6D               	subwf	___llmod@dividend& (0+255),w,b
 15104  015868  0100               	movlb	0	; () banked
 15105  01586A  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15106  01586C  0100               	movlb	0	; () banked
 15107  01586E  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15108  015870  0100               	movlb	0	; () banked
 15109  015872  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15110  015874  0100               	movlb	0	; () banked
 15111  015876  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15112  015878  0100               	movlb	0	; () banked
 15113  01587A  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15114  01587C  0100               	movlb	0	; () banked
 15115  01587E  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15116  015880  A0D8               	btfss	status,0,c
 15117  015882  D010               	goto	l10254
 15118                           
 15119                           ; BSR set to: 0
 15120  015884  0100               	movlb	0	; () banked
 15121  015886  5171               	movf	___llmod@divisor& (0+255),w,b
 15122  015888  0100               	movlb	0	; () banked
 15123  01588A  5F6D               	subwf	___llmod@dividend& (0+255),f,b
 15124  01588C  0100               	movlb	0	; () banked
 15125  01588E  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
 15126  015890  0100               	movlb	0	; () banked
 15127  015892  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15128  015894  0100               	movlb	0	; () banked
 15129  015896  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
 15130  015898  0100               	movlb	0	; () banked
 15131  01589A  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15132  01589C  0100               	movlb	0	; () banked
 15133  01589E  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
 15134  0158A0  0100               	movlb	0	; () banked
 15135  0158A2  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15136  0158A4                     l10254:
 15137                           
 15138                           ; BSR set to: 0
 15139  0158A4  0100               	movlb	0	; () banked
 15140  0158A6  90D8               	bcf	status,0,c
 15141  0158A8  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15142  0158AA  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15143  0158AC  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15144  0158AE  3371               	rrcf	___llmod@divisor& (0+255),f,b
 15145                           
 15146                           ; BSR set to: 0
 15147  0158B0  0100               	movlb	0	; () banked
 15148  0158B2  2F75               	decfsz	___llmod@counter& (0+255),f,b
 15149  0158B4  D7D5               	goto	l10250
 15150  0158B6                     l1948:
 15151                           
 15152                           ; BSR set to: 0
 15153  0158B6  C06D  F06D         	movff	___llmod@dividend,?___llmod
 15154  0158BA  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
 15155  0158BE  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
 15156  0158C2  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
 15157                           
 15158                           ; BSR set to: 0
 15159  0158C6  0012               	return		;funcret
 15160  0158C8                     __end_of___llmod:
 15161                           	opt stack 0
 15162                           tblptru	equ	0xFF8
 15163                           tblptrh	equ	0xFF7
 15164                           tblptrl	equ	0xFF6
 15165                           tablat	equ	0xFF5
 15166                           prodh	equ	0xFF4
 15167                           prodl	equ	0xFF3
 15168                           intcon	equ	0xFF2
 15169                           postinc0	equ	0xFEE
 15170                           wreg	equ	0xFE8
 15171                           indf1	equ	0xFE7
 15172                           postinc1	equ	0xFE6
 15173                           postdec1	equ	0xFE5
 15174                           fsr1h	equ	0xFE2
 15175                           fsr1l	equ	0xFE1
 15176                           indf2	equ	0xFDF
 15177                           postinc2	equ	0xFDE
 15178                           postdec2	equ	0xFDD
 15179                           plusw2	equ	0xFDB
 15180                           fsr2h	equ	0xFDA
 15181                           fsr2l	equ	0xFD9
 15182                           status	equ	0xFD8
 15183                           
 15184 ;; *************** function _main_init *****************
 15185 ;; Defined at:
 15186 ;;		line 82 in file "main.c"
 15187 ;; Parameters:    Size  Location     Type
 15188 ;;		None
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;		None
 15191 ;; Return value:  Size  Location     Type
 15192 ;;		None               void
 15193 ;; Registers used:
 15194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15195 ;; Tracked objects:
 15196 ;;		On entry : 0/0
 15197 ;;		On exit  : 0/0
 15198 ;;		Unchanged: 0/0
 15199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15204 ;;Total ram usage:        0 bytes
 15205 ;; Hardware stack levels used:    1
 15206 ;; Hardware stack levels required when called:   16
 15207 ;; This function calls:
 15208 ;;		_ADC_init
 15209 ;;		_CTMU_init
 15210 ;;		_I2C_LCD_init
 15211 ;;		_I2C_init
 15212 ;;		_RTCC_init
 15213 ;;		_USB_init
 15214 ;;		_ringbuf_init
 15215 ;;		_timer0_init
 15216 ;;		_timer1_init
 15217 ;;		_timer3_init
 15218 ;; This function is called by:
 15219 ;;		_main
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text48
 15224  015504                     __ptext48:
 15225                           	opt stack 0
 15226  015504                     _main_init:
 15227                           	opt stack 14
 15228                           
 15229                           ;main.c: 83: OSCCONbits.IRCF = 7;
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;incstack = 0
 15233  015504  88D3               	bsf	4051,4,c	;volatile
 15234  015506  8AD3               	bsf	4051,5,c	;volatile
 15235  015508  8CD3               	bsf	4051,6,c	;volatile
 15236                           
 15237                           ;main.c: 84: OSCTUNEbits.PLLEN = 1;
 15238  01550A  8C9B               	bsf	3995,6,c	;volatile
 15239                           
 15240                           ;main.c: 85: OSCCONbits.SCS = 0;
 15241  01550C  0EFC               	movlw	-4
 15242  01550E  16D3               	andwf	4051,f,c	;volatile
 15243                           
 15244                           ;main.c: 86: TRISA = 0b00011111;
 15245  015510  0E1F               	movlw	31
 15246  015512  6E92               	movwf	3986,c	;volatile
 15247                           
 15248                           ;main.c: 87: TRISB = 0b00111111;
 15249  015514  0E3F               	movlw	63
 15250  015516  6E93               	movwf	3987,c	;volatile
 15251                           
 15252                           ;main.c: 88: TRISC = 0b10110010;
 15253  015518  0EB2               	movlw	178
 15254  01551A  6E94               	movwf	3988,c	;volatile
 15255                           
 15256                           ;main.c: 89: ANCON0 = 0b11110000;
 15257  01551C  0EF0               	movlw	240
 15258  01551E  010F               	movlb	15	; () banked
 15259  015520  6F48               	movwf	72,b	;volatile
 15260                           
 15261                           ;main.c: 90: ANCON1 = 0b00001000;
 15262  015522  0E08               	movlw	8
 15263  015524  010F               	movlb	15	; () banked
 15264  015526  6F49               	movwf	73,b	;volatile
 15265                           
 15266                           ; BSR set to: 15
 15267                           ;main.c: 91: INTCON2bits.RBPU = 0;
 15268  015528  9EF1               	bcf	intcon2,7,c	;volatile
 15269                           
 15270                           ; BSR set to: 15
 15271                           ;main.c: 93: timer0_init(6);
 15272  01552A  0E06               	movlw	6
 15273  01552C  EC7C  F0B3         	call	_timer0_init
 15274                           
 15275                           ;main.c: 94: timer1_init(0, 2);
 15276  015530  0E02               	movlw	2
 15277  015532  0100               	movlb	0	; () banked
 15278  015534  6F60               	movwf	timer1_init@clock_select& (0+255),b
 15279  015536  0E00               	movlw	0
 15280  015538  EC85  F0B2         	call	_timer1_init
 15281                           
 15282                           ;main.c: 95: timer3_init(2);
 15283  01553C  0E02               	movlw	2
 15284  01553E  ECDF  F0B4         	call	_timer3_init
 15285                           
 15286                           ;main.c: 96: I2C_init();
 15287  015542  EC2E  F0B6         	call	_I2C_init	;wreg free
 15288                           
 15289                           ;main.c: 97: I2C_LCD_init();
 15290  015546  ECDA  F0B1         	call	_I2C_LCD_init	;wreg free
 15291                           
 15292                           ;main.c: 98: RTCC_init();
 15293  01554A  EC85  F0B4         	call	_RTCC_init	;wreg free
 15294                           
 15295                           ;main.c: 99: ADC_init(0);
 15296  01554E  0E00               	movlw	0
 15297  015550  ECCD  F0B5         	call	_ADC_init
 15298                           
 15299                           ;main.c: 100: CTMU_init();
 15300  015554  EC60  F0B5         	call	_CTMU_init	;wreg free
 15301                           
 15302                           ;main.c: 102: USB_init();
 15303  015558  EC37  F0B6         	call	_USB_init	;wreg free
 15304                           
 15305                           ;main.c: 103: static uint8_t usbtx[2000];
 15306                           ;main.c: 104: ringbuf_init(&usb_tx, usbtx, sizeof (usbtx));
 15307  01555C  0EF6               	movlw	low _usb_tx
 15308  01555E  0100               	movlb	0	; () banked
 15309  015560  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15310  015562  0E02               	movlw	high _usb_tx
 15311  015564  0100               	movlb	0	; () banked
 15312  015566  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15313  015568  0ECD               	movlw	low main_init@usbtx
 15314  01556A  0100               	movlb	0	; () banked
 15315  01556C  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15316  01556E  0E03               	movlw	high main_init@usbtx
 15317  015570  0100               	movlb	0	; () banked
 15318  015572  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15319  015574  0E07               	movlw	7
 15320  015576  0100               	movlb	0	; () banked
 15321  015578  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15322  01557A  0ED0               	movlw	208
 15323  01557C  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15324  01557E  EC32  F0B2         	call	_ringbuf_init	;wreg free
 15325                           
 15326                           ;main.c: 105: static uint8_t usbrx[100];
 15327                           ;main.c: 106: ringbuf_init(&usb_rx, usbrx, sizeof (usbrx));
 15328  015582  0EEE               	movlw	low _usb_rx
 15329  015584  0100               	movlb	0	; () banked
 15330  015586  6F60               	movwf	ringbuf_init@rb& (0+255),b
 15331  015588  0E02               	movlw	high _usb_rx
 15332  01558A  0100               	movlb	0	; () banked
 15333  01558C  6F61               	movwf	(ringbuf_init@rb+1)& (0+255),b
 15334  01558E  0E69               	movlw	low main_init@usbrx
 15335  015590  0100               	movlb	0	; () banked
 15336  015592  6F62               	movwf	ringbuf_init@internal_buf& (0+255),b
 15337  015594  0E03               	movlw	high main_init@usbrx
 15338  015596  0100               	movlb	0	; () banked
 15339  015598  6F63               	movwf	(ringbuf_init@internal_buf+1)& (0+255),b
 15340  01559A  0E00               	movlw	0
 15341  01559C  0100               	movlb	0	; () banked
 15342  01559E  6F65               	movwf	(ringbuf_init@bufsize+1)& (0+255),b
 15343  0155A0  0E64               	movlw	100
 15344  0155A2  6F64               	movwf	ringbuf_init@bufsize& (0+255),b
 15345  0155A4  EC32  F0B2         	call	_ringbuf_init	;wreg free
 15346  0155A8  0012               	return		;funcret
 15347  0155AA                     __end_of_main_init:
 15348                           	opt stack 0
 15349                           tblptru	equ	0xFF8
 15350                           tblptrh	equ	0xFF7
 15351                           tblptrl	equ	0xFF6
 15352                           tablat	equ	0xFF5
 15353                           prodh	equ	0xFF4
 15354                           prodl	equ	0xFF3
 15355                           intcon	equ	0xFF2
 15356                           intcon2	equ	0xFF1
 15357                           postinc0	equ	0xFEE
 15358                           wreg	equ	0xFE8
 15359                           indf1	equ	0xFE7
 15360                           postinc1	equ	0xFE6
 15361                           postdec1	equ	0xFE5
 15362                           fsr1h	equ	0xFE2
 15363                           fsr1l	equ	0xFE1
 15364                           indf2	equ	0xFDF
 15365                           postinc2	equ	0xFDE
 15366                           postdec2	equ	0xFDD
 15367                           plusw2	equ	0xFDB
 15368                           fsr2h	equ	0xFDA
 15369                           fsr2l	equ	0xFD9
 15370                           status	equ	0xFD8
 15371                           
 15372 ;; *************** function _timer3_init *****************
 15373 ;; Defined at:
 15374 ;;		line 85 in file "../My_header\My_header.h"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;  prescaler       1    wreg     unsigned char 
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15379 ;; Return value:  Size  Location     Type
 15380 ;;		None               void
 15381 ;; Registers used:
 15382 ;;		wreg, status,2, status,0
 15383 ;; Tracked objects:
 15384 ;;		On entry : 0/0
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15392 ;;Total ram usage:        2 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; Hardware stack levels required when called:   11
 15395 ;; This function calls:
 15396 ;;		Nothing
 15397 ;; This function is called by:
 15398 ;;		_main_init
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           	psect	text49
 15403  0169BE                     __ptext49:
 15404                           	opt stack 0
 15405  0169BE                     _timer3_init:
 15406                           	opt stack 18
 15407                           
 15408                           ;incstack = 0
 15409                           ;timer3_init@prescaler stored from wreg
 15410  0169BE  0100               	movlb	0	; () banked
 15411  0169C0  6F61               	movwf	timer3_init@prescaler& (0+255),b
 15412                           
 15413                           ;My_header\My_header.h: 86: T3CONbits.TMR3CS = 0;
 15414  0169C2  0E3F               	movlw	-193
 15415  0169C4  1679               	andwf	3961,f,c	;volatile
 15416                           
 15417                           ;My_header\My_header.h: 87: T3CONbits.T3OSCEN = 0;
 15418  0169C6  9679               	bcf	3961,3,c	;volatile
 15419                           
 15420                           ;My_header\My_header.h: 88: T3CONbits.T3CKPS = prescaler;
 15421  0169C8  C061  F060         	movff	timer3_init@prescaler,??_timer3_init
 15422  0169CC  0100               	movlb	0	; () banked
 15423  0169CE  3B60               	swapf	??_timer3_init& (0+255),f,b
 15424  0169D0  5079               	movf	3961,w,c	;volatile
 15425  0169D2  0100               	movlb	0	; () banked
 15426  0169D4  1960               	xorwf	??_timer3_init& (0+255),w,b
 15427  0169D6  0BCF               	andlw	-49
 15428  0169D8  1960               	xorwf	??_timer3_init& (0+255),w,b
 15429  0169DA  6E79               	movwf	3961,c	;volatile
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;My_header\My_header.h: 89: T3CONbits.RD163 = 0;
 15433  0169DC  9E79               	bcf	3961,7,c	;volatile
 15434                           
 15435                           ; BSR set to: 0
 15436                           ;My_header\My_header.h: 90: T3CONbits.TMR3ON = 1;
 15437  0169DE  8079               	bsf	3961,0,c	;volatile
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;My_header\My_header.h: 91: IPR2bits.TMR3IP = 0;
 15441  0169E0  92A2               	bcf	4002,1,c	;volatile
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;My_header\My_header.h: 92: PIR2bits.TMR3IF = 0;
 15445  0169E2  92A1               	bcf	4001,1,c	;volatile
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;My_header\My_header.h: 93: PIE2bits.TMR3IE = 1;
 15449  0169E4  82A0               	bsf	4000,1,c	;volatile
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;My_header\My_header.h: 94: INTCONbits.PEIE = 1;
 15453  0169E6  8CF2               	bsf	intcon,6,c	;volatile
 15454                           
 15455                           ; BSR set to: 0
 15456  0169E8  0012               	return		;funcret
 15457  0169EA                     __end_of_timer3_init:
 15458                           	opt stack 0
 15459                           tblptru	equ	0xFF8
 15460                           tblptrh	equ	0xFF7
 15461                           tblptrl	equ	0xFF6
 15462                           tablat	equ	0xFF5
 15463                           prodh	equ	0xFF4
 15464                           prodl	equ	0xFF3
 15465                           intcon	equ	0xFF2
 15466                           intcon2	equ	0xFF1
 15467                           postinc0	equ	0xFEE
 15468                           wreg	equ	0xFE8
 15469                           indf1	equ	0xFE7
 15470                           postinc1	equ	0xFE6
 15471                           postdec1	equ	0xFE5
 15472                           fsr1h	equ	0xFE2
 15473                           fsr1l	equ	0xFE1
 15474                           indf2	equ	0xFDF
 15475                           postinc2	equ	0xFDE
 15476                           postdec2	equ	0xFDD
 15477                           plusw2	equ	0xFDB
 15478                           fsr2h	equ	0xFDA
 15479                           fsr2l	equ	0xFD9
 15480                           status	equ	0xFD8
 15481                           
 15482 ;; *************** function _timer1_init *****************
 15483 ;; Defined at:
 15484 ;;		line 54 in file "../My_header\My_header.h"
 15485 ;; Parameters:    Size  Location     Type
 15486 ;;  prescaler       1    wreg     unsigned char 
 15487 ;;  clock_select    1    0[BANK0 ] unsigned char 
 15488 ;; Auto vars:     Size  Location     Type
 15489 ;;  prescaler       1    2[BANK0 ] unsigned char 
 15490 ;; Return value:  Size  Location     Type
 15491 ;;		None               void
 15492 ;; Registers used:
 15493 ;;		wreg, status,2, status,0
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15499 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15501 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15502 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15503 ;;Total ram usage:        3 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:   11
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_main_init
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text50
 15514  01650A                     __ptext50:
 15515                           	opt stack 0
 15516  01650A                     _timer1_init:
 15517                           	opt stack 18
 15518                           
 15519                           ; BSR set to: 0
 15520                           ;incstack = 0
 15521                           ;timer1_init@prescaler stored from wreg
 15522  01650A  0100               	movlb	0	; () banked
 15523  01650C  6F62               	movwf	timer1_init@prescaler& (0+255),b
 15524                           
 15525                           ;My_header\My_header.h: 55: T1CONbits.TMR1CS = clock_select;
 15526  01650E  C060  F061         	movff	timer1_init@clock_select,??_timer1_init
 15527  016512  0100               	movlb	0	; () banked
 15528  016514  3B61               	swapf	??_timer1_init& (0+255),f,b
 15529  016516  4761               	rlncf	??_timer1_init& (0+255),f,b
 15530  016518  4761               	rlncf	??_timer1_init& (0+255),f,b
 15531  01651A  50CD               	movf	4045,w,c	;volatile
 15532  01651C  0100               	movlb	0	; () banked
 15533  01651E  1961               	xorwf	??_timer1_init& (0+255),w,b
 15534  016520  0B3F               	andlw	-193
 15535  016522  1961               	xorwf	??_timer1_init& (0+255),w,b
 15536  016524  6ECD               	movwf	4045,c	;volatile
 15537                           
 15538                           ;My_header\My_header.h: 56: if (clock_select == 2) T1CONbits.T1OSCEN = 1;
 15539  016526  0E02               	movlw	2
 15540  016528  0100               	movlb	0	; () banked
 15541  01652A  1960               	xorwf	timer1_init@clock_select& (0+255),w,b
 15542  01652C  A4D8               	btfss	status,2,c
 15543  01652E  D002               	goto	l144
 15544                           
 15545                           ; BSR set to: 0
 15546  016530  86CD               	bsf	4045,3,c	;volatile
 15547  016532  D001               	goto	l10824
 15548  016534                     l144:
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;My_header\My_header.h: 57: else T1CONbits.T1OSCEN = 0;
 15552  016534  96CD               	bcf	4045,3,c	;volatile
 15553  016536                     l10824:
 15554                           
 15555                           ; BSR set to: 0
 15556                           ;My_header\My_header.h: 58: T1CONbits.T1CKPS = prescaler;
 15557  016536  C062  F061         	movff	timer1_init@prescaler,??_timer1_init
 15558  01653A  0100               	movlb	0	; () banked
 15559  01653C  3B61               	swapf	??_timer1_init& (0+255),f,b
 15560  01653E  50CD               	movf	4045,w,c	;volatile
 15561  016540  0100               	movlb	0	; () banked
 15562  016542  1961               	xorwf	??_timer1_init& (0+255),w,b
 15563  016544  0BCF               	andlw	-49
 15564  016546  1961               	xorwf	??_timer1_init& (0+255),w,b
 15565  016548  6ECD               	movwf	4045,c	;volatile
 15566                           
 15567                           ; BSR set to: 0
 15568                           ;My_header\My_header.h: 59: T1CONbits.nT1SYNC = 1;
 15569  01654A  84CD               	bsf	4045,2,c	;volatile
 15570                           
 15571                           ; BSR set to: 0
 15572                           ;My_header\My_header.h: 60: T1CONbits.RD16 = 0;
 15573  01654C  92CD               	bcf	4045,1,c	;volatile
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;My_header\My_header.h: 61: T1CONbits.TMR1ON = 1;
 15577  01654E  80CD               	bsf	4045,0,c	;volatile
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;My_header\My_header.h: 62: IPR1bits.TMR1IP = 0;
 15581  016550  909F               	bcf	3999,0,c	;volatile
 15582                           
 15583                           ; BSR set to: 0
 15584                           ;My_header\My_header.h: 63: PIR1bits.TMR1IF = 0;
 15585  016552  909E               	bcf	3998,0,c	;volatile
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;My_header\My_header.h: 64: PIE1bits.TMR1IE = 1;
 15589  016554  809D               	bsf	3997,0,c	;volatile
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;My_header\My_header.h: 65: INTCONbits.PEIE = 1;
 15593  016556  8CF2               	bsf	intcon,6,c	;volatile
 15594                           
 15595                           ; BSR set to: 0
 15596  016558  0012               	return		;funcret
 15597  01655A                     __end_of_timer1_init:
 15598                           	opt stack 0
 15599                           tblptru	equ	0xFF8
 15600                           tblptrh	equ	0xFF7
 15601                           tblptrl	equ	0xFF6
 15602                           tablat	equ	0xFF5
 15603                           prodh	equ	0xFF4
 15604                           prodl	equ	0xFF3
 15605                           intcon	equ	0xFF2
 15606                           intcon2	equ	0xFF1
 15607                           postinc0	equ	0xFEE
 15608                           wreg	equ	0xFE8
 15609                           indf1	equ	0xFE7
 15610                           postinc1	equ	0xFE6
 15611                           postdec1	equ	0xFE5
 15612                           fsr1h	equ	0xFE2
 15613                           fsr1l	equ	0xFE1
 15614                           indf2	equ	0xFDF
 15615                           postinc2	equ	0xFDE
 15616                           postdec2	equ	0xFDD
 15617                           plusw2	equ	0xFDB
 15618                           fsr2h	equ	0xFDA
 15619                           fsr2l	equ	0xFD9
 15620                           status	equ	0xFD8
 15621                           
 15622 ;; *************** function _timer0_init *****************
 15623 ;; Defined at:
 15624 ;;		line 15 in file "../My_header\My_header.h"
 15625 ;; Parameters:    Size  Location     Type
 15626 ;;  prescaler       1    wreg     unsigned char 
 15627 ;; Auto vars:     Size  Location     Type
 15628 ;;  prescaler       1    1[BANK0 ] unsigned char 
 15629 ;; Return value:  Size  Location     Type
 15630 ;;		None               void
 15631 ;; Registers used:
 15632 ;;		wreg, status,2, status,0
 15633 ;; Tracked objects:
 15634 ;;		On entry : 0/0
 15635 ;;		On exit  : 0/0
 15636 ;;		Unchanged: 0/0
 15637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;Total ram usage:        2 bytes
 15643 ;; Hardware stack levels used:    1
 15644 ;; Hardware stack levels required when called:   11
 15645 ;; This function calls:
 15646 ;;		Nothing
 15647 ;; This function is called by:
 15648 ;;		_main_init
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           	psect	text51
 15653  0166F8                     __ptext51:
 15654                           	opt stack 0
 15655  0166F8                     _timer0_init:
 15656                           	opt stack 18
 15657                           
 15658                           ; BSR set to: 0
 15659                           ;incstack = 0
 15660                           ;timer0_init@prescaler stored from wreg
 15661  0166F8  0100               	movlb	0	; () banked
 15662  0166FA  6F61               	movwf	timer0_init@prescaler& (0+255),b
 15663                           
 15664                           ;My_header\My_header.h: 16: T0CONbits.TMR0ON = 1;
 15665  0166FC  8ED5               	bsf	4053,7,c	;volatile
 15666                           
 15667                           ;My_header\My_header.h: 17: T0CONbits.T08BIT = 1;
 15668  0166FE  8CD5               	bsf	4053,6,c	;volatile
 15669                           
 15670                           ;My_header\My_header.h: 18: T0CONbits.T0CS = 0;
 15671  016700  9AD5               	bcf	4053,5,c	;volatile
 15672                           
 15673                           ;My_header\My_header.h: 19: if (prescaler == 0) {
 15674  016702  0100               	movlb	0	; () banked
 15675  016704  5161               	movf	timer0_init@prescaler& (0+255),w,b
 15676  016706  0100               	movlb	0	; () banked
 15677  016708  A4D8               	btfss	status,2,c
 15678  01670A  D002               	goto	l139
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;My_header\My_header.h: 20: T0CONbits.PSA = 1;
 15682  01670C  86D5               	bsf	4053,3,c	;volatile
 15683                           
 15684                           ;My_header\My_header.h: 21: } else {
 15685  01670E  D00C               	goto	l10812
 15686  016710                     l139:
 15687                           
 15688                           ; BSR set to: 0
 15689                           ;My_header\My_header.h: 22: T0CONbits.PSA = 0;
 15690  016710  96D5               	bcf	4053,3,c	;volatile
 15691                           
 15692                           ; BSR set to: 0
 15693                           ;My_header\My_header.h: 23: T0CONbits.T0PS = prescaler - 1;
 15694  016712  C061  F060         	movff	timer0_init@prescaler,??_timer0_init
 15695  016716  0EFF               	movlw	255
 15696  016718  0100               	movlb	0	; () banked
 15697  01671A  2760               	addwf	??_timer0_init& (0+255),f,b
 15698  01671C  50D5               	movf	4053,w,c	;volatile
 15699  01671E  0100               	movlb	0	; () banked
 15700  016720  1960               	xorwf	??_timer0_init& (0+255),w,b
 15701  016722  0BF8               	andlw	-8
 15702  016724  1960               	xorwf	??_timer0_init& (0+255),w,b
 15703  016726  6ED5               	movwf	4053,c	;volatile
 15704  016728                     l10812:
 15705                           
 15706                           ; BSR set to: 0
 15707                           ;My_header\My_header.h: 24: }
 15708                           ;My_header\My_header.h: 25: INTCONbits.T0IE = 1;
 15709  016728  8AF2               	bsf	intcon,5,c	;volatile
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;My_header\My_header.h: 26: INTCONbits.TMR0IF = 0;
 15713  01672A  94F2               	bcf	intcon,2,c	;volatile
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;My_header\My_header.h: 27: INTCON2bits.TMR0IP = 0;
 15717  01672C  94F1               	bcf	intcon2,2,c	;volatile
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;My_header\My_header.h: 28: INTCONbits.PEIE = 1;
 15721  01672E  8CF2               	bsf	intcon,6,c	;volatile
 15722                           
 15723                           ; BSR set to: 0
 15724  016730  0012               	return		;funcret
 15725  016732                     __end_of_timer0_init:
 15726                           	opt stack 0
 15727                           tblptru	equ	0xFF8
 15728                           tblptrh	equ	0xFF7
 15729                           tblptrl	equ	0xFF6
 15730                           tablat	equ	0xFF5
 15731                           prodh	equ	0xFF4
 15732                           prodl	equ	0xFF3
 15733                           intcon	equ	0xFF2
 15734                           intcon2	equ	0xFF1
 15735                           postinc0	equ	0xFEE
 15736                           wreg	equ	0xFE8
 15737                           indf1	equ	0xFE7
 15738                           postinc1	equ	0xFE6
 15739                           postdec1	equ	0xFE5
 15740                           fsr1h	equ	0xFE2
 15741                           fsr1l	equ	0xFE1
 15742                           indf2	equ	0xFDF
 15743                           postinc2	equ	0xFDE
 15744                           postdec2	equ	0xFDD
 15745                           plusw2	equ	0xFDB
 15746                           fsr2h	equ	0xFDA
 15747                           fsr2l	equ	0xFD9
 15748                           status	equ	0xFD8
 15749                           
 15750 ;; *************** function _ringbuf_init *****************
 15751 ;; Defined at:
 15752 ;;		line 24 in file "../My_header\My_ringbuf.h"
 15753 ;; Parameters:    Size  Location     Type
 15754 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 15755 ;;		 -> usb_tx(8), usb_rx(8), my_terminal_loop@command(8), 
 15756 ;;  internal_buf    2    2[BANK0 ] PTR unsigned char 
 15757 ;;		 -> main_init@usbrx(100), main_init@usbtx(2000), my_terminal_loop@buf(100), 
 15758 ;;  bufsize         2    4[BANK0 ] unsigned int 
 15759 ;; Auto vars:     Size  Location     Type
 15760 ;;		None
 15761 ;; Return value:  Size  Location     Type
 15762 ;;		None               void
 15763 ;; Registers used:
 15764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/0
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15770 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15773 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15774 ;;Total ram usage:        6 bytes
 15775 ;; Hardware stack levels used:    1
 15776 ;; Hardware stack levels required when called:   11
 15777 ;; This function calls:
 15778 ;;		Nothing
 15779 ;; This function is called by:
 15780 ;;		_my_terminal_loop
 15781 ;;		_main_init
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           	psect	text52
 15786  016464                     __ptext52:
 15787                           	opt stack 0
 15788  016464                     _ringbuf_init:
 15789                           	opt stack 18
 15790                           
 15791                           ;My_header\My_ringbuf.h: 25: rb->buf = internal_buf;
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;incstack = 0
 15795  016464  C060  FFD9         	movff	ringbuf_init@rb,fsr2l
 15796  016468  C061  FFDA         	movff	ringbuf_init@rb+1,fsr2h
 15797  01646C  C062  FFDE         	movff	ringbuf_init@internal_buf,postinc2
 15798  016470  C063  FFDD         	movff	ringbuf_init@internal_buf+1,postdec2
 15799                           
 15800                           ;My_header\My_ringbuf.h: 26: rb->size = bufsize;
 15801  016474  0100               	movlb	0	; () banked
 15802  016476  EE20 F002          	lfsr	2,2
 15803  01647A  5160               	movf	ringbuf_init@rb& (0+255),w,b
 15804  01647C  26D9               	addwf	fsr2l,f,c
 15805  01647E  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 15806  016480  22DA               	addwfc	fsr2h,f,c
 15807  016482  C064  FFDE         	movff	ringbuf_init@bufsize,postinc2
 15808  016486  C065  FFDD         	movff	ringbuf_init@bufsize+1,postdec2
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;My_header\My_ringbuf.h: 27: rb->head = 0;
 15812  01648A  0100               	movlb	0	; () banked
 15813  01648C  EE20 F004          	lfsr	2,4
 15814  016490  5160               	movf	ringbuf_init@rb& (0+255),w,b
 15815  016492  26D9               	addwf	fsr2l,f,c
 15816  016494  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 15817  016496  22DA               	addwfc	fsr2h,f,c
 15818  016498  0E00               	movlw	0
 15819  01649A  6EDE               	movwf	postinc2,c
 15820  01649C  0E00               	movlw	0
 15821  01649E  6EDD               	movwf	postdec2,c
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;My_header\My_ringbuf.h: 28: rb->tail = 0;
 15825  0164A0  0100               	movlb	0	; () banked
 15826  0164A2  EE20 F006          	lfsr	2,6
 15827  0164A6  5160               	movf	ringbuf_init@rb& (0+255),w,b
 15828  0164A8  26D9               	addwf	fsr2l,f,c
 15829  0164AA  5161               	movf	(ringbuf_init@rb+1)& (0+255),w,b
 15830  0164AC  22DA               	addwfc	fsr2h,f,c
 15831  0164AE  0E00               	movlw	0
 15832  0164B0  6EDE               	movwf	postinc2,c
 15833  0164B2  0E00               	movlw	0
 15834  0164B4  6EDD               	movwf	postdec2,c
 15835                           
 15836                           ; BSR set to: 0
 15837  0164B6  0012               	return		;funcret
 15838  0164B8                     __end_of_ringbuf_init:
 15839                           	opt stack 0
 15840                           tblptru	equ	0xFF8
 15841                           tblptrh	equ	0xFF7
 15842                           tblptrl	equ	0xFF6
 15843                           tablat	equ	0xFF5
 15844                           prodh	equ	0xFF4
 15845                           prodl	equ	0xFF3
 15846                           intcon	equ	0xFF2
 15847                           intcon2	equ	0xFF1
 15848                           postinc0	equ	0xFEE
 15849                           wreg	equ	0xFE8
 15850                           indf1	equ	0xFE7
 15851                           postinc1	equ	0xFE6
 15852                           postdec1	equ	0xFE5
 15853                           fsr1h	equ	0xFE2
 15854                           fsr1l	equ	0xFE1
 15855                           indf2	equ	0xFDF
 15856                           postinc2	equ	0xFDE
 15857                           postdec2	equ	0xFDD
 15858                           plusw2	equ	0xFDB
 15859                           fsr2h	equ	0xFDA
 15860                           fsr2l	equ	0xFD9
 15861                           status	equ	0xFD8
 15862                           
 15863 ;; *************** function _USB_init *****************
 15864 ;; Defined at:
 15865 ;;		line 7 in file "../My_header/usb_cdc/My_usb_cdc.c"
 15866 ;; Parameters:    Size  Location     Type
 15867 ;;		None
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;		None
 15870 ;; Return value:  Size  Location     Type
 15871 ;;		None               void
 15872 ;; Registers used:
 15873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15883 ;;Total ram usage:        0 bytes
 15884 ;; Hardware stack levels used:    1
 15885 ;; Hardware stack levels required when called:   13
 15886 ;; This function calls:
 15887 ;;		_USBDeviceAttach
 15888 ;;		_USBDeviceInit
 15889 ;; This function is called by:
 15890 ;;		_main_init
 15891 ;; This function uses a non-reentrant model
 15892 ;;
 15893                           
 15894                           	psect	text53
 15895  016C6E                     __ptext53:
 15896                           	opt stack 0
 15897  016C6E                     _USB_init:
 15898                           	opt stack 16
 15899                           
 15900                           ;My_usb_cdc.c: 8: USBDeviceInit();
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;incstack = 0
 15904  016C6E  EC0D  F099         	call	_USBDeviceInit	;wreg free
 15905                           
 15906                           ;My_usb_cdc.c: 9: USBDeviceAttach();
 15907  016C72  ECB5  F0B3         	call	_USBDeviceAttach	;wreg free
 15908  016C76  0012               	return		;funcret
 15909  016C78                     __end_of_USB_init:
 15910                           	opt stack 0
 15911                           tblptru	equ	0xFF8
 15912                           tblptrh	equ	0xFF7
 15913                           tblptrl	equ	0xFF6
 15914                           tablat	equ	0xFF5
 15915                           prodh	equ	0xFF4
 15916                           prodl	equ	0xFF3
 15917                           intcon	equ	0xFF2
 15918                           intcon2	equ	0xFF1
 15919                           postinc0	equ	0xFEE
 15920                           wreg	equ	0xFE8
 15921                           indf1	equ	0xFE7
 15922                           postinc1	equ	0xFE6
 15923                           postdec1	equ	0xFE5
 15924                           fsr1h	equ	0xFE2
 15925                           fsr1l	equ	0xFE1
 15926                           indf2	equ	0xFDF
 15927                           postinc2	equ	0xFDE
 15928                           postdec2	equ	0xFDD
 15929                           plusw2	equ	0xFDB
 15930                           fsr2h	equ	0xFDA
 15931                           fsr2l	equ	0xFD9
 15932                           status	equ	0xFD8
 15933                           
 15934 ;; *************** function _USBDeviceInit *****************
 15935 ;; Defined at:
 15936 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;		None
 15939 ;; Auto vars:     Size  Location     Type
 15940 ;;  i               1    8[BANK0 ] unsigned char 
 15941 ;; Return value:  Size  Location     Type
 15942 ;;		None               void
 15943 ;; Registers used:
 15944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15945 ;; Tracked objects:
 15946 ;;		On entry : 0/0
 15947 ;;		On exit  : 0/0
 15948 ;;		Unchanged: 0/0
 15949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15954 ;;Total ram usage:        1 bytes
 15955 ;; Hardware stack levels used:    1
 15956 ;; Hardware stack levels required when called:   12
 15957 ;; This function calls:
 15958 ;;		_memset
 15959 ;; This function is called by:
 15960 ;;		_USB_init
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           
 15964                           	psect	text54
 15965  01321A                     __ptext54:
 15966                           	opt stack 0
 15967  01321A                     _USBDeviceInit:
 15968                           	opt stack 16
 15969                           
 15970                           ;usb_device.c: 300: uint8_t i;
 15971                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 15972                           
 15973                           ;incstack = 0
 15974  01321A  98A0               	bcf	4000,4,c	;volatile
 15975                           
 15976                           ;usb_device.c: 305: {UEIR = 0;};
 15977  01321C  0E00               	movlw	0
 15978  01321E  6E63               	movwf	3939,c	;volatile
 15979                           
 15980                           ;usb_device.c: 308: {UIR = 0;};
 15981  013220  0E00               	movlw	0
 15982  013222  6E62               	movwf	3938,c	;volatile
 15983                           
 15984                           ;usb_device.c: 311: UEP0 = 0;
 15985  013224  0E00               	movlw	0
 15986  013226  010F               	movlb	15	; () banked
 15987  013228  6F26               	movwf	38,b	;volatile
 15988                           
 15989                           ; BSR set to: 15
 15990                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 15991  01322A  0E27               	movlw	39
 15992  01322C  0100               	movlb	0	; () banked
 15993  01322E  6F60               	movwf	memset@p1& (0+255),b
 15994  013230  0E0F               	movlw	15
 15995  013232  0100               	movlb	0	; () banked
 15996  013234  6F61               	movwf	(memset@p1+1)& (0+255),b
 15997  013236  0E00               	movlw	0
 15998  013238  0100               	movlb	0	; () banked
 15999  01323A  6F63               	movwf	(memset@c+1)& (0+255),b
 16000  01323C  0E00               	movlw	0
 16001  01323E  6F62               	movwf	memset@c& (0+255),b
 16002  013240  0E00               	movlw	0
 16003  013242  0100               	movlb	0	; () banked
 16004  013244  6F65               	movwf	(memset@n+1)& (0+255),b
 16005  013246  0E02               	movlw	2
 16006  013248  6F64               	movwf	memset@n& (0+255),b
 16007  01324A  EC23  F0B4         	call	_memset	;wreg free
 16008                           
 16009                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16010  01324E  0E16               	movlw	22
 16011  013250  010F               	movlb	15	; () banked
 16012  013252  6F39               	movwf	57,b	;volatile
 16013                           
 16014                           ; BSR set to: 15
 16015  013254  0E9F               	movlw	159
 16016  013256  010F               	movlb	15	; () banked
 16017  013258  6F37               	movwf	55,b	;volatile
 16018                           
 16019                           ; BSR set to: 15
 16020  01325A  0E7B               	movlw	123
 16021  01325C  010F               	movlb	15	; () banked
 16022  01325E  6F36               	movwf	54,b	;volatile
 16023                           
 16024                           ; BSR set to: 15
 16025                           ;usb_device.c: 318: ;
 16026                           ;usb_device.c: 321: ;
 16027                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 16028  013260  0E00               	movlw	0
 16029  013262  0100               	movlb	0	; () banked
 16030  013264  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16031  013266                     l10614:
 16032                           
 16033                           ; BSR set to: 0
 16034  013266  0E0B               	movlw	11
 16035  013268  0100               	movlb	0	; () banked
 16036  01326A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16037  01326C  D001               	goto	l10618
 16038  01326E  D010               	goto	l1130
 16039  013270                     l10618:
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;usb_device.c: 325: {
 16043                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 16044  013270  0100               	movlb	0	; () banked
 16045  013272  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16046  013274  0D04               	mullw	4
 16047  013276  0E00               	movlw	0
 16048  013278  24F3               	addwf	prodl,w,c
 16049  01327A  6ED9               	movwf	fsr2l,c
 16050  01327C  0E0D               	movlw	13
 16051  01327E  20F4               	addwfc	prodh,w,c
 16052  013280  6EDA               	movwf	fsr2h,c
 16053  013282  6ADE               	clrf	postinc2,c
 16054  013284  6ADE               	clrf	postinc2,c
 16055  013286  6ADE               	clrf	postinc2,c
 16056  013288  6ADD               	clrf	postdec2,c
 16057                           
 16058                           ; BSR set to: 0
 16059  01328A  0100               	movlb	0	; () banked
 16060  01328C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16061  01328E  D7EB               	goto	l10614
 16062  013290                     l1130:
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;usb_device.c: 327: }
 16066                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 16067  013290  8C65               	bsf	3941,6,c	;volatile
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;usb_device.c: 333: UADDR = 0x00;
 16071  013292  0E00               	movlw	0
 16072  013294  010F               	movlb	15	; () banked
 16073  013296  6F38               	movwf	56,b	;volatile
 16074                           
 16075                           ; BSR set to: 15
 16076                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 16077  013298  9865               	bcf	3941,4,c	;volatile
 16078                           
 16079                           ; BSR set to: 15
 16080                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 16081  01329A  9C65               	bcf	3941,6,c	;volatile
 16082                           
 16083                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 16084  01329C  D00C               	goto	l10638
 16085  01329E                     l10630:
 16086                           
 16087                           ;usb_device.c: 343: {
 16088                           ;usb_device.c: 344: (UIR &= 0xF7);
 16089  01329E  9662               	bcf	3938,3,c	;volatile
 16090                           
 16091                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 16092  0132A0  0E00               	movlw	0
 16093  0132A2  0100               	movlb	0	; () banked
 16094  0132A4  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 16098  0132A6  0E00               	movlw	0
 16099  0132A8  0100               	movlb	0	; () banked
 16100  0132AA  6FE4               	movwf	(_outPipes+3)& (0+255),b	;volatile
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 16104  0132AC  0E00               	movlw	0
 16105  0132AE  0100               	movlb	0	; () banked
 16106  0132B0  6FE6               	movwf	(_outPipes+5)& (0+255),b	;volatile
 16107  0132B2  0E00               	movlw	0
 16108  0132B4  6FE5               	movwf	(_outPipes+4)& (0+255),b	;volatile
 16109  0132B6                     l10638:
 16110  0132B6  B662               	btfsc	3938,3,c	;volatile
 16111  0132B8  D7F2               	goto	l10630
 16112                           
 16113                           ;usb_device.c: 349: }
 16114                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 16115  0132BA  0E01               	movlw	1
 16116  0132BC  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 16117                           
 16118                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 16119  0132BE  0E01               	movlw	1
 16120  0132C0  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 16121                           
 16122                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 16123  0132C2  0E00               	movlw	0
 16124  0132C4  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 16125                           
 16126                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 16127  0132C6  0E00               	movlw	0
 16128  0132C8  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 16129                           
 16130                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 16131  0132CA  0E00               	movlw	0
 16132  0132CC  0101               	movlb	1	; () banked
 16133  0132CE  6F27               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 16134                           
 16135                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 16136  0132D0  0E00               	movlw	0
 16137  0132D2  0100               	movlb	0	; () banked
 16138  0132D4  6F68               	movwf	USBDeviceInit@i& (0+255),b
 16139  0132D6                     l10642:
 16140                           
 16141                           ; BSR set to: 0
 16142  0132D6  0E02               	movlw	2
 16143  0132D8  0100               	movlb	0	; () banked
 16144  0132DA  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 16145  0132DC  D001               	goto	l10646
 16146  0132DE  D033               	goto	l10652
 16147  0132E0                     l10646:
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;usb_device.c: 363: {
 16151                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 16152  0132E0  0100               	movlb	0	; () banked
 16153  0132E2  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16154  0132E4  0D02               	mullw	2
 16155  0132E6  0EF0               	movlw	low _pBDTEntryIn
 16156  0132E8  24F3               	addwf	prodl,w,c
 16157  0132EA  6ED9               	movwf	fsr2l,c
 16158  0132EC  0E00               	movlw	high _pBDTEntryIn
 16159  0132EE  20F4               	addwfc	prodh,w,c
 16160  0132F0  6EDA               	movwf	fsr2h,c
 16161  0132F2  0E00               	movlw	0
 16162  0132F4  6EDE               	movwf	postinc2,c
 16163  0132F6  0E00               	movlw	0
 16164  0132F8  6EDD               	movwf	postdec2,c
 16165                           
 16166                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 16167  0132FA  0100               	movlb	0	; () banked
 16168  0132FC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16169  0132FE  0D02               	mullw	2
 16170  013300  0E00               	movlw	low _pBDTEntryOut
 16171  013302  24F3               	addwf	prodl,w,c
 16172  013304  6ED9               	movwf	fsr2l,c
 16173  013306  0E01               	movlw	high _pBDTEntryOut
 16174  013308  20F4               	addwfc	prodh,w,c
 16175  01330A  6EDA               	movwf	fsr2h,c
 16176  01330C  0E00               	movlw	0
 16177  01330E  6EDE               	movwf	postinc2,c
 16178  013310  0E00               	movlw	0
 16179  013312  6EDD               	movwf	postdec2,c
 16180                           
 16181                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 16182  013314  0100               	movlb	0	; () banked
 16183  013316  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16184  013318  0D01               	mullw	1
 16185  01331A  0E2D               	movlw	low _ep_data_in
 16186  01331C  24F3               	addwf	prodl,w,c
 16187  01331E  6ED9               	movwf	fsr2l,c
 16188  013320  0E00               	movlw	high _ep_data_in
 16189  013322  20F4               	addwfc	prodh,w,c
 16190  013324  6EDA               	movwf	fsr2h,c
 16191  013326  0E00               	movlw	0
 16192  013328  6EDF               	movwf	indf2,c
 16193                           
 16194                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 16195  01332A  0100               	movlb	0	; () banked
 16196  01332C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 16197  01332E  0D01               	mullw	1
 16198  013330  0E30               	movlw	low _ep_data_out
 16199  013332  24F3               	addwf	prodl,w,c
 16200  013334  6ED9               	movwf	fsr2l,c
 16201  013336  0E00               	movlw	high _ep_data_out
 16202  013338  20F4               	addwfc	prodh,w,c
 16203  01333A  6EDA               	movwf	fsr2h,c
 16204  01333C  0E00               	movlw	0
 16205  01333E  6EDF               	movwf	indf2,c
 16206                           
 16207                           ; BSR set to: 0
 16208  013340  0100               	movlb	0	; () banked
 16209  013342  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 16210  013344  D7C8               	goto	l10642
 16211  013346                     l10652:
 16212                           
 16213                           ; BSR set to: 0
 16214                           ;usb_device.c: 368: }
 16215                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16216  013346  0E08               	movlw	8
 16217  013348  0100               	movlb	0	; () banked
 16218  01334A  6FF0               	movwf	_pBDTEntryIn& (0+255),b
 16219  01334C  0E0D               	movlw	13
 16220  01334E  0100               	movlb	0	; () banked
 16221  013350  6FF1               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16222                           
 16223                           ; BSR set to: 0
 16224                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 16225  013352  0E16               	movlw	22
 16226  013354  010F               	movlb	15	; () banked
 16227  013356  6F26               	movwf	38,b	;volatile
 16228                           
 16229                           ; BSR set to: 15
 16230                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16231  013358  0E0D               	movlw	13
 16232  01335A  010D               	movlb	13	; () banked
 16233  01335C  6F03               	movwf	3,b	;volatile
 16234  01335E  0E30               	movlw	48
 16235  013360  6F02               	movwf	2,b	;volatile
 16236                           
 16237                           ; BSR set to: 13
 16238                           ;usb_device.c: 376: BDT[0].CNT = 8;
 16239  013362  0E08               	movlw	8
 16240  013364  010D               	movlb	13	; () banked
 16241  013366  6F01               	movwf	1,b	;volatile
 16242                           
 16243                           ; BSR set to: 13
 16244                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 16245  013368  0E04               	movlw	4
 16246  01336A  010D               	movlb	13	; () banked
 16247  01336C  6F00               	movwf	0,b	;volatile
 16248                           
 16249                           ; BSR set to: 13
 16250                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 16251  01336E  010D               	movlb	13	; () banked
 16252  013370  8F00               	bsf	0,7,b	;volatile
 16253                           
 16254                           ; BSR set to: 13
 16255                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 16256  013372  0E00               	movlw	0
 16257  013374  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 16258                           
 16259                           ; BSR set to: 13
 16260                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 16261  013376  0E00               	movlw	0
 16262  013378  6E40               	movwf	_USBDeviceState,c	;volatile
 16263                           
 16264                           ; BSR set to: 13
 16265  01337A  0012               	return		;funcret
 16266  01337C                     __end_of_USBDeviceInit:
 16267                           	opt stack 0
 16268                           tblptru	equ	0xFF8
 16269                           tblptrh	equ	0xFF7
 16270                           tblptrl	equ	0xFF6
 16271                           tablat	equ	0xFF5
 16272                           prodh	equ	0xFF4
 16273                           prodl	equ	0xFF3
 16274                           intcon	equ	0xFF2
 16275                           intcon2	equ	0xFF1
 16276                           postinc0	equ	0xFEE
 16277                           wreg	equ	0xFE8
 16278                           indf1	equ	0xFE7
 16279                           postinc1	equ	0xFE6
 16280                           postdec1	equ	0xFE5
 16281                           fsr1h	equ	0xFE2
 16282                           fsr1l	equ	0xFE1
 16283                           indf2	equ	0xFDF
 16284                           postinc2	equ	0xFDE
 16285                           postdec2	equ	0xFDD
 16286                           plusw2	equ	0xFDB
 16287                           fsr2h	equ	0xFDA
 16288                           fsr2l	equ	0xFD9
 16289                           status	equ	0xFD8
 16290                           
 16291 ;; *************** function _memset *****************
 16292 ;; Defined at:
 16293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  p1              2    0[BANK0 ] PTR void 
 16296 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16297 ;;  c               2    2[BANK0 ] int 
 16298 ;;  n               2    4[BANK0 ] unsigned int 
 16299 ;; Auto vars:     Size  Location     Type
 16300 ;;  p               2    6[BANK0 ] PTR unsigned char 
 16301 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 16302 ;; Return value:  Size  Location     Type
 16303 ;;                  2    0[BANK0 ] PTR void 
 16304 ;; Registers used:
 16305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16306 ;; Tracked objects:
 16307 ;;		On entry : 0/0
 16308 ;;		On exit  : 0/0
 16309 ;;		Unchanged: 0/0
 16310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16311 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16314 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16315 ;;Total ram usage:        8 bytes
 16316 ;; Hardware stack levels used:    1
 16317 ;; Hardware stack levels required when called:   11
 16318 ;; This function calls:
 16319 ;;		Nothing
 16320 ;; This function is called by:
 16321 ;;		_USBDeviceInit
 16322 ;; This function uses a non-reentrant model
 16323 ;;
 16324                           
 16325                           	psect	text55
 16326  016846                     __ptext55:
 16327                           	opt stack 0
 16328  016846                     _memset:
 16329                           	opt stack 16
 16330                           
 16331                           ; BSR set to: 13
 16332                           ;incstack = 0
 16333  016846  C060  F066         	movff	memset@p1,memset@p
 16334  01684A  C061  F067         	movff	memset@p1+1,memset@p+1
 16335  01684E  D009               	goto	l10210
 16336  016850                     l10206:
 16337  016850  C066  FFD9         	movff	memset@p,fsr2l
 16338  016854  C067  FFDA         	movff	memset@p+1,fsr2h
 16339  016858  C062  FFDF         	movff	memset@c,indf2
 16340  01685C  0100               	movlb	0	; () banked
 16341  01685E  4B66               	infsnz	memset@p& (0+255),f,b
 16342  016860  2B67               	incf	(memset@p+1)& (0+255),f,b
 16343  016862                     l10210:
 16344  016862  0100               	movlb	0	; () banked
 16345  016864  0764               	decf	memset@n& (0+255),f,b
 16346  016866  A0D8               	btfss	status,0,c
 16347  016868  0765               	decf	(memset@n+1)& (0+255),f,b
 16348  01686A  0100               	movlb	0	; () banked
 16349  01686C  2964               	incf	memset@n& (0+255),w,b
 16350  01686E  E1F0               	bnz	l10206
 16351  016870  0100               	movlb	0	; () banked
 16352  016872  2965               	incf	(memset@n+1)& (0+255),w,b
 16353  016874  B4D8               	btfsc	status,2,c
 16354  016876  0012               	return	
 16355  016878  D7EB               	goto	l10206
 16356  01687A                     __end_of_memset:
 16357                           	opt stack 0
 16358                           tblptru	equ	0xFF8
 16359                           tblptrh	equ	0xFF7
 16360                           tblptrl	equ	0xFF6
 16361                           tablat	equ	0xFF5
 16362                           prodh	equ	0xFF4
 16363                           prodl	equ	0xFF3
 16364                           intcon	equ	0xFF2
 16365                           intcon2	equ	0xFF1
 16366                           postinc0	equ	0xFEE
 16367                           wreg	equ	0xFE8
 16368                           indf1	equ	0xFE7
 16369                           postinc1	equ	0xFE6
 16370                           postdec1	equ	0xFE5
 16371                           fsr1h	equ	0xFE2
 16372                           fsr1l	equ	0xFE1
 16373                           indf2	equ	0xFDF
 16374                           postinc2	equ	0xFDE
 16375                           postdec2	equ	0xFDD
 16376                           plusw2	equ	0xFDB
 16377                           fsr2h	equ	0xFDA
 16378                           fsr2l	equ	0xFD9
 16379                           status	equ	0xFD8
 16380                           
 16381 ;; *************** function _USBDeviceAttach *****************
 16382 ;; Defined at:
 16383 ;;		line 1352 in file "../My_header/usb_cdc/usb/usb_device.c"
 16384 ;; Parameters:    Size  Location     Type
 16385 ;;		None
 16386 ;; Auto vars:     Size  Location     Type
 16387 ;;		None
 16388 ;; Return value:  Size  Location     Type
 16389 ;;		None               void
 16390 ;; Registers used:
 16391 ;;		wreg, status,2
 16392 ;; Tracked objects:
 16393 ;;		On entry : 0/0
 16394 ;;		On exit  : 0/0
 16395 ;;		Unchanged: 0/0
 16396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16401 ;;Total ram usage:        0 bytes
 16402 ;; Hardware stack levels used:    1
 16403 ;; Hardware stack levels required when called:   11
 16404 ;; This function calls:
 16405 ;;		Nothing
 16406 ;; This function is called by:
 16407 ;;		_USB_init
 16408 ;; This function uses a non-reentrant model
 16409 ;;
 16410                           
 16411                           	psect	text56
 16412  01676A                     __ptext56:
 16413                           	opt stack 0
 16414  01676A                     _USBDeviceAttach:
 16415                           	opt stack 17
 16416                           
 16417                           ;usb_device.c: 1356: {
 16418                           ;usb_device.c: 1357: if(1 == 1)
 16419                           
 16420                           ; BSR set to: 0
 16421                           ;incstack = 0
 16422  01676A  5040               	movf	_USBDeviceState,w,c	;volatile
 16423  01676C  A4D8               	btfss	status,2,c
 16424  01676E  0012               	return	
 16425                           
 16426                           ;usb_device.c: 1358: {
 16427                           ;usb_device.c: 1360: UCON = 0;
 16428  016770  0E00               	movlw	0
 16429  016772  6E65               	movwf	3941,c	;volatile
 16430                           
 16431                           ;usb_device.c: 1363: UIE = 0;
 16432  016774  0E00               	movlw	0
 16433  016776  010F               	movlb	15	; () banked
 16434  016778  6F36               	movwf	54,b	;volatile
 16435                           
 16436                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 16437  01677A  0E16               	movlw	22
 16438  01677C  010F               	movlb	15	; () banked
 16439  01677E  6F39               	movwf	57,b	;volatile
 16440  016780  0E9F               	movlw	159
 16441  016782  010F               	movlb	15	; () banked
 16442  016784  6F37               	movwf	55,b	;volatile
 16443  016786  0E7B               	movlw	123
 16444  016788  010F               	movlb	15	; () banked
 16445  01678A  6F36               	movwf	54,b	;volatile
 16446                           
 16447                           ; BSR set to: 15
 16448                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 16449  01678C  8ED0               	bsf	4048,7,c	;volatile
 16450                           
 16451                           ; BSR set to: 15
 16452  01678E  88A2               	bsf	4002,4,c	;volatile
 16453                           
 16454                           ; BSR set to: 15
 16455  016790  88A0               	bsf	4000,4,c	;volatile
 16456                           
 16457                           ; BSR set to: 15
 16458  016792  8EF2               	bsf	intcon,7,c	;volatile
 16459                           
 16460                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16461  016794  D001               	goto	l1191
 16462  016796                     l1192:
 16463  016796  8665               	bsf	3941,3,c	;volatile
 16464  016798                     l1191:
 16465  016798  A665               	btfss	3941,3,c	;volatile
 16466  01679A  D7FD               	goto	l1192
 16467                           
 16468                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 16469  01679C  0E01               	movlw	1
 16470  01679E  6E40               	movwf	_USBDeviceState,c	;volatile
 16471  0167A0  0012               	return	
 16472  0167A2                     __end_of_USBDeviceAttach:
 16473                           	opt stack 0
 16474                           tblptru	equ	0xFF8
 16475                           tblptrh	equ	0xFF7
 16476                           tblptrl	equ	0xFF6
 16477                           tablat	equ	0xFF5
 16478                           prodh	equ	0xFF4
 16479                           prodl	equ	0xFF3
 16480                           intcon	equ	0xFF2
 16481                           intcon2	equ	0xFF1
 16482                           postinc0	equ	0xFEE
 16483                           wreg	equ	0xFE8
 16484                           indf1	equ	0xFE7
 16485                           postinc1	equ	0xFE6
 16486                           postdec1	equ	0xFE5
 16487                           fsr1h	equ	0xFE2
 16488                           fsr1l	equ	0xFE1
 16489                           indf2	equ	0xFDF
 16490                           postinc2	equ	0xFDE
 16491                           postdec2	equ	0xFDD
 16492                           plusw2	equ	0xFDB
 16493                           fsr2h	equ	0xFDA
 16494                           fsr2l	equ	0xFD9
 16495                           status	equ	0xFD8
 16496                           
 16497 ;; *************** function _RTCC_init *****************
 16498 ;; Defined at:
 16499 ;;		line 56 in file "../My_header\My_RTCC.h"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;		None
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;		None
 16504 ;; Return value:  Size  Location     Type
 16505 ;;		None               void
 16506 ;; Registers used:
 16507 ;;		wreg, status,2
 16508 ;; Tracked objects:
 16509 ;;		On entry : 0/0
 16510 ;;		On exit  : 0/0
 16511 ;;		Unchanged: 0/0
 16512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16517 ;;Total ram usage:        0 bytes
 16518 ;; Hardware stack levels used:    1
 16519 ;; Hardware stack levels required when called:   11
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_main_init
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text57
 16528  01690A                     __ptext57:
 16529                           	opt stack 0
 16530  01690A                     _RTCC_init:
 16531                           	opt stack 18
 16532                           
 16533                           ;My_header\My_RTCC.h: 57: RTCCFGbits.RTCWREN = 1;
 16534                           
 16535                           ;incstack = 0
 16536  01690A  010F               	movlb	15	; () banked
 16537  01690C  8B3F               	bsf	63,5,b	;volatile
 16538                           
 16539                           ;My_header\My_RTCC.h: 58: if (RTCCFGbits.RTCWREN != 1) {
 16540  01690E  010F               	movlb	15	; () banked
 16541  016910  BB3F               	btfsc	63,5,b	;volatile
 16542  016912  D006               	goto	l10932
 16543                           
 16544                           ; BSR set to: 15
 16545                           ;My_header\My_RTCC.h: 59: EECON2 = 0x55;
 16546  016914  0E55               	movlw	85
 16547  016916  6EA7               	movwf	4007,c	;volatile
 16548                           
 16549                           ;My_header\My_RTCC.h: 60: EECON2 = 0xAA;
 16550  016918  0EAA               	movlw	170
 16551  01691A  6EA7               	movwf	4007,c	;volatile
 16552                           
 16553                           ; BSR set to: 15
 16554                           ;My_header\My_RTCC.h: 61: RTCCFGbits.RTCWREN = 1;
 16555  01691C  010F               	movlb	15	; () banked
 16556  01691E  8B3F               	bsf	63,5,b	;volatile
 16557  016920                     l10932:
 16558                           
 16559                           ; BSR set to: 15
 16560                           ;My_header\My_RTCC.h: 62: }
 16561                           ;My_header\My_RTCC.h: 63: RTCCFGbits.RTCEN = 1;
 16562  016920  010F               	movlb	15	; () banked
 16563  016922  8F3F               	bsf	63,7,b	;volatile
 16564                           
 16565                           ; BSR set to: 15
 16566                           ;My_header\My_RTCC.h: 64: RTCCFGbits.RTCOE = 0;
 16567  016924  010F               	movlb	15	; () banked
 16568  016926  953F               	bcf	63,2,b	;volatile
 16569                           
 16570                           ; BSR set to: 15
 16571                           ;My_header\My_RTCC.h: 65: PADCFG1bits.RTSECSEL0 = 1;
 16572  016928  010F               	movlb	15	; () banked
 16573  01692A  833C               	bsf	60,1,b	;volatile
 16574                           
 16575                           ; BSR set to: 15
 16576                           ;My_header\My_RTCC.h: 66: PADCFG1bits.RTSECSEL1 = 1;
 16577  01692C  010F               	movlb	15	; () banked
 16578  01692E  853C               	bsf	60,2,b	;volatile
 16579                           
 16580                           ;My_header\My_RTCC.h: 67: RTCCAL = 0x00;
 16581  016930  0E00               	movlw	0
 16582  016932  010F               	movlb	15	; () banked
 16583  016934  6F3E               	movwf	62,b	;volatile
 16584                           
 16585                           ; BSR set to: 15
 16586  016936  0012               	return		;funcret
 16587  016938                     __end_of_RTCC_init:
 16588                           	opt stack 0
 16589                           tblptru	equ	0xFF8
 16590                           tblptrh	equ	0xFF7
 16591                           tblptrl	equ	0xFF6
 16592                           tablat	equ	0xFF5
 16593                           prodh	equ	0xFF4
 16594                           prodl	equ	0xFF3
 16595                           intcon	equ	0xFF2
 16596                           intcon2	equ	0xFF1
 16597                           postinc0	equ	0xFEE
 16598                           wreg	equ	0xFE8
 16599                           indf1	equ	0xFE7
 16600                           postinc1	equ	0xFE6
 16601                           postdec1	equ	0xFE5
 16602                           fsr1h	equ	0xFE2
 16603                           fsr1l	equ	0xFE1
 16604                           indf2	equ	0xFDF
 16605                           postinc2	equ	0xFDE
 16606                           postdec2	equ	0xFDD
 16607                           plusw2	equ	0xFDB
 16608                           fsr2h	equ	0xFDA
 16609                           fsr2l	equ	0xFD9
 16610                           status	equ	0xFD8
 16611                           
 16612 ;; *************** function _I2C_init *****************
 16613 ;; Defined at:
 16614 ;;		line 25 in file "../My_header\My_I2C.h"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;		None
 16617 ;; Auto vars:     Size  Location     Type
 16618 ;;		None
 16619 ;; Return value:  Size  Location     Type
 16620 ;;		None               void
 16621 ;; Registers used:
 16622 ;;		wreg, status,2
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16632 ;;Total ram usage:        0 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:   11
 16635 ;; This function calls:
 16636 ;;		Nothing
 16637 ;; This function is called by:
 16638 ;;		_main_init
 16639 ;; This function uses a non-reentrant model
 16640 ;;
 16641                           
 16642                           	psect	text58
 16643  016C5C                     __ptext58:
 16644                           	opt stack 0
 16645  016C5C                     _I2C_init:
 16646                           	opt stack 18
 16647                           
 16648                           ;My_header\My_I2C.h: 26: SSP1STAT = 0b10000000;
 16649                           
 16650                           ; BSR set to: 15
 16651                           ;incstack = 0
 16652  016C5C  0E80               	movlw	128
 16653  016C5E  6EC7               	movwf	4039,c	;volatile
 16654                           
 16655                           ;My_header\My_I2C.h: 27: SSP1CON1 = 0b00101000;
 16656  016C60  0E28               	movlw	40
 16657  016C62  6EC6               	movwf	4038,c	;volatile
 16658                           
 16659                           ;My_header\My_I2C.h: 28: SSP1ADD = 0x13;
 16660  016C64  0E13               	movlw	19
 16661  016C66  6EC8               	movwf	4040,c	;volatile
 16662                           
 16663                           ;My_header\My_I2C.h: 31: SSP1IF = 0;
 16664  016C68  969E               	bcf	3998,3,c	;volatile
 16665                           
 16666                           ;My_header\My_I2C.h: 32: BCL1IF = 0;
 16667  016C6A  96A1               	bcf	4001,3,c	;volatile
 16668  016C6C  0012               	return		;funcret
 16669  016C6E                     __end_of_I2C_init:
 16670                           	opt stack 0
 16671                           tblptru	equ	0xFF8
 16672                           tblptrh	equ	0xFF7
 16673                           tblptrl	equ	0xFF6
 16674                           tablat	equ	0xFF5
 16675                           prodh	equ	0xFF4
 16676                           prodl	equ	0xFF3
 16677                           intcon	equ	0xFF2
 16678                           intcon2	equ	0xFF1
 16679                           postinc0	equ	0xFEE
 16680                           wreg	equ	0xFE8
 16681                           indf1	equ	0xFE7
 16682                           postinc1	equ	0xFE6
 16683                           postdec1	equ	0xFE5
 16684                           fsr1h	equ	0xFE2
 16685                           fsr1l	equ	0xFE1
 16686                           indf2	equ	0xFDF
 16687                           postinc2	equ	0xFDE
 16688                           postdec2	equ	0xFDD
 16689                           plusw2	equ	0xFDB
 16690                           fsr2h	equ	0xFDA
 16691                           fsr2l	equ	0xFD9
 16692                           status	equ	0xFD8
 16693                           
 16694 ;; *************** function _I2C_LCD_init *****************
 16695 ;; Defined at:
 16696 ;;		line 164 in file "../My_header\My_I2C.h"
 16697 ;; Parameters:    Size  Location     Type
 16698 ;;		None
 16699 ;; Auto vars:     Size  Location     Type
 16700 ;;		None
 16701 ;; Return value:  Size  Location     Type
 16702 ;;		None               void
 16703 ;; Registers used:
 16704 ;;		wreg, status,2, status,0, cstack
 16705 ;; Tracked objects:
 16706 ;;		On entry : 0/0
 16707 ;;		On exit  : 0/0
 16708 ;;		Unchanged: 0/0
 16709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16714 ;;Total ram usage:        0 bytes
 16715 ;; Hardware stack levels used:    1
 16716 ;; Hardware stack levels required when called:   15
 16717 ;; This function calls:
 16718 ;;		_Delay_ms
 16719 ;;		_I2C_LCD_Clear
 16720 ;;		_I2C_LCD_Command
 16721 ;; This function is called by:
 16722 ;;		_main_init
 16723 ;; This function uses a non-reentrant model
 16724 ;;
 16725                           
 16726                           	psect	text59
 16727  0163B4                     __ptext59:
 16728                           	opt stack 0
 16729  0163B4                     _I2C_LCD_init:
 16730                           	opt stack 14
 16731                           
 16732                           ;My_header\My_I2C.h: 165: Delay_ms(40);
 16733                           
 16734                           ;incstack = 0
 16735  0163B4  0E00               	movlw	0
 16736  0163B6  0100               	movlb	0	; () banked
 16737  0163B8  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 16738  0163BA  0E28               	movlw	40
 16739  0163BC  6F60               	movwf	Delay_ms@ms& (0+255),b
 16740  0163BE  ECF5  F0B4         	call	_Delay_ms	;wreg free
 16741                           
 16742                           ;My_header\My_I2C.h: 166: I2C_LCD_Command(0x38);
 16743  0163C2  0E38               	movlw	56
 16744  0163C4  ECD1  F0B3         	call	_I2C_LCD_Command
 16745                           
 16746                           ;My_header\My_I2C.h: 167: I2C_LCD_Command(0x39);
 16747  0163C8  0E39               	movlw	57
 16748  0163CA  ECD1  F0B3         	call	_I2C_LCD_Command
 16749                           
 16750                           ;My_header\My_I2C.h: 168: I2C_LCD_Command(0x14);
 16751  0163CE  0E14               	movlw	20
 16752  0163D0  ECD1  F0B3         	call	_I2C_LCD_Command
 16753                           
 16754                           ;My_header\My_I2C.h: 169: I2C_LCD_Command(0x70);
 16755  0163D4  0E70               	movlw	112
 16756  0163D6  ECD1  F0B3         	call	_I2C_LCD_Command
 16757                           
 16758                           ;My_header\My_I2C.h: 170: I2C_LCD_Command(0x56);
 16759  0163DA  0E56               	movlw	86
 16760  0163DC  ECD1  F0B3         	call	_I2C_LCD_Command
 16761                           
 16762                           ;My_header\My_I2C.h: 171: I2C_LCD_Command(0x6C);
 16763  0163E0  0E6C               	movlw	108
 16764  0163E2  ECD1  F0B3         	call	_I2C_LCD_Command
 16765                           
 16766                           ;My_header\My_I2C.h: 172: Delay_ms(200);
 16767  0163E6  0E00               	movlw	0
 16768  0163E8  0100               	movlb	0	; () banked
 16769  0163EA  6F61               	movwf	(Delay_ms@ms+1)& (0+255),b
 16770  0163EC  0EC8               	movlw	200
 16771  0163EE  6F60               	movwf	Delay_ms@ms& (0+255),b
 16772  0163F0  ECF5  F0B4         	call	_Delay_ms	;wreg free
 16773                           
 16774                           ;My_header\My_I2C.h: 173: I2C_LCD_Command(0x38);
 16775  0163F4  0E38               	movlw	56
 16776  0163F6  ECD1  F0B3         	call	_I2C_LCD_Command
 16777                           
 16778                           ;My_header\My_I2C.h: 174: I2C_LCD_Command(0x0C);
 16779  0163FA  0E0C               	movlw	12
 16780  0163FC  ECD1  F0B3         	call	_I2C_LCD_Command
 16781                           
 16782                           ;My_header\My_I2C.h: 175: I2C_LCD_Command(0x06);
 16783  016400  0E06               	movlw	6
 16784  016402  ECD1  F0B3         	call	_I2C_LCD_Command
 16785                           
 16786                           ;My_header\My_I2C.h: 176: I2C_LCD_Clear();
 16787  016406  EC0A  F0B6         	call	_I2C_LCD_Clear	;wreg free
 16788  01640A  0012               	return		;funcret
 16789  01640C                     __end_of_I2C_LCD_init:
 16790                           	opt stack 0
 16791                           tblptru	equ	0xFF8
 16792                           tblptrh	equ	0xFF7
 16793                           tblptrl	equ	0xFF6
 16794                           tablat	equ	0xFF5
 16795                           prodh	equ	0xFF4
 16796                           prodl	equ	0xFF3
 16797                           intcon	equ	0xFF2
 16798                           intcon2	equ	0xFF1
 16799                           postinc0	equ	0xFEE
 16800                           wreg	equ	0xFE8
 16801                           indf1	equ	0xFE7
 16802                           postinc1	equ	0xFE6
 16803                           postdec1	equ	0xFE5
 16804                           fsr1h	equ	0xFE2
 16805                           fsr1l	equ	0xFE1
 16806                           indf2	equ	0xFDF
 16807                           postinc2	equ	0xFDE
 16808                           postdec2	equ	0xFDD
 16809                           plusw2	equ	0xFDB
 16810                           fsr2h	equ	0xFDA
 16811                           fsr2l	equ	0xFD9
 16812                           status	equ	0xFD8
 16813                           
 16814 ;; *************** function _I2C_LCD_Clear *****************
 16815 ;; Defined at:
 16816 ;;		line 107 in file "../My_header\My_I2C.h"
 16817 ;; Parameters:    Size  Location     Type
 16818 ;;		None
 16819 ;; Auto vars:     Size  Location     Type
 16820 ;;		None
 16821 ;; Return value:  Size  Location     Type
 16822 ;;		None               void
 16823 ;; Registers used:
 16824 ;;		wreg, status,2, status,0, cstack
 16825 ;; Tracked objects:
 16826 ;;		On entry : 0/0
 16827 ;;		On exit  : 0/0
 16828 ;;		Unchanged: 0/0
 16829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16834 ;;Total ram usage:        1 bytes
 16835 ;; Hardware stack levels used:    1
 16836 ;; Hardware stack levels required when called:   14
 16837 ;; This function calls:
 16838 ;;		_I2C_LCD_Command
 16839 ;; This function is called by:
 16840 ;;		_I2C_LCD_init
 16841 ;;		_display_LCD
 16842 ;;		_sleep_loop
 16843 ;; This function uses a non-reentrant model
 16844 ;;
 16845                           
 16846                           	psect	text60
 16847  016C14                     __ptext60:
 16848                           	opt stack 0
 16849  016C14                     _I2C_LCD_Clear:
 16850                           	opt stack 15
 16851                           
 16852                           ;My_header\My_I2C.h: 108: I2C_LCD_Command(0x01);
 16853                           
 16854                           ;incstack = 0
 16855  016C14  0E01               	movlw	1
 16856  016C16  ECD1  F0B3         	call	_I2C_LCD_Command
 16857                           
 16858                           ;My_header\My_I2C.h: 109: _delay((unsigned long)((1100)*(48000000/4000000.0)));
 16859  016C1A  0E12               	movlw	18
 16860  016C1C  0100               	movlb	0	; () banked
 16861  016C1E  6F66               	movwf	??_I2C_LCD_Clear& (0+255),b
 16862  016C20  0E23               	movlw	35
 16863  016C22                     u13707:
 16864  016C22  2EE8               	decfsz	wreg,f,c
 16865  016C24  D7FE               	goto	u13707
 16866  016C26  2F66               	decfsz	??_I2C_LCD_Clear& (0+255),f,b
 16867  016C28  D7FC               	goto	u13707
 16868  016C2A  F000               	nop	
 16869  016C2C  0012               	return		;funcret
 16870  016C2E                     __end_of_I2C_LCD_Clear:
 16871                           	opt stack 0
 16872                           tblptru	equ	0xFF8
 16873                           tblptrh	equ	0xFF7
 16874                           tblptrl	equ	0xFF6
 16875                           tablat	equ	0xFF5
 16876                           prodh	equ	0xFF4
 16877                           prodl	equ	0xFF3
 16878                           intcon	equ	0xFF2
 16879                           intcon2	equ	0xFF1
 16880                           postinc0	equ	0xFEE
 16881                           wreg	equ	0xFE8
 16882                           indf1	equ	0xFE7
 16883                           postinc1	equ	0xFE6
 16884                           postdec1	equ	0xFE5
 16885                           fsr1h	equ	0xFE2
 16886                           fsr1l	equ	0xFE1
 16887                           indf2	equ	0xFDF
 16888                           postinc2	equ	0xFDE
 16889                           postdec2	equ	0xFDD
 16890                           plusw2	equ	0xFDB
 16891                           fsr2h	equ	0xFDA
 16892                           fsr2l	equ	0xFD9
 16893                           status	equ	0xFD8
 16894                           
 16895 ;; *************** function _I2C_LCD_Command *****************
 16896 ;; Defined at:
 16897 ;;		line 94 in file "../My_header\My_I2C.h"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;  c               1    wreg     unsigned char 
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;  c               1    4[BANK0 ] unsigned char 
 16902 ;;  ans             1    5[BANK0 ] unsigned char 
 16903 ;; Return value:  Size  Location     Type
 16904 ;;		None               void
 16905 ;; Registers used:
 16906 ;;		wreg, status,2, status,0, cstack
 16907 ;; Tracked objects:
 16908 ;;		On entry : 0/0
 16909 ;;		On exit  : 0/0
 16910 ;;		Unchanged: 0/0
 16911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16916 ;;Total ram usage:        2 bytes
 16917 ;; Hardware stack levels used:    1
 16918 ;; Hardware stack levels required when called:   13
 16919 ;; This function calls:
 16920 ;;		_I2C_Send
 16921 ;;		_I2C_Start
 16922 ;;		_I2C_Stop
 16923 ;; This function is called by:
 16924 ;;		_I2C_LCD_Clear
 16925 ;;		_I2C_LCD_SetCursor
 16926 ;;		_I2C_LCD_init
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930                           	psect	text61
 16931  0167A2                     __ptext61:
 16932                           	opt stack 0
 16933  0167A2                     _I2C_LCD_Command:
 16934                           	opt stack 15
 16935                           
 16936                           ;incstack = 0
 16937                           ;I2C_LCD_Command@c stored from wreg
 16938  0167A2  0100               	movlb	0	; () banked
 16939  0167A4  6F64               	movwf	I2C_LCD_Command@c& (0+255),b
 16940                           
 16941                           ;My_header\My_I2C.h: 95: uint8_t ans;
 16942                           ;My_header\My_I2C.h: 97: ans = I2C_Start(0x3E, 0);
 16943  0167A6  0E00               	movlw	0
 16944  0167A8  0100               	movlb	0	; () banked
 16945  0167AA  6F62               	movwf	I2C_Start@rw& (0+255),b
 16946  0167AC  0E3E               	movlw	62
 16947  0167AE  EC56  F0B4         	call	_I2C_Start
 16948  0167B2  0100               	movlb	0	; () banked
 16949  0167B4  6F65               	movwf	I2C_LCD_Command@ans& (0+255),b
 16950                           
 16951                           ; BSR set to: 0
 16952                           ;My_header\My_I2C.h: 98: if (ans == 0) {
 16953  0167B6  0100               	movlb	0	; () banked
 16954  0167B8  5165               	movf	I2C_LCD_Command@ans& (0+255),w,b
 16955  0167BA  0100               	movlb	0	; () banked
 16956  0167BC  A4D8               	btfss	status,2,c
 16957  0167BE  D007               	goto	l345
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;My_header\My_I2C.h: 100: I2C_Send(0b10000000);
 16961  0167C0  0E80               	movlw	128
 16962  0167C2  EC17  F0B6         	call	_I2C_Send
 16963                           
 16964                           ;My_header\My_I2C.h: 101: I2C_Send(c);
 16965  0167C6  0100               	movlb	0	; () banked
 16966  0167C8  5164               	movf	I2C_LCD_Command@c& (0+255),w,b
 16967  0167CA  EC17  F0B6         	call	_I2C_Send
 16968  0167CE                     l345:
 16969                           
 16970                           ;My_header\My_I2C.h: 102: }
 16971                           ;My_header\My_I2C.h: 103: I2C_Stop();
 16972  0167CE  EC3C  F0B6         	call	_I2C_Stop	;wreg free
 16973                           
 16974                           ;My_header\My_I2C.h: 104: _delay((unsigned long)((26)*(48000000/4000000.0)));
 16975  0167D2  0E68               	movlw	104
 16976  0167D4                     u13717:
 16977  0167D4  2EE8               	decfsz	wreg,f,c
 16978  0167D6  D7FE               	goto	u13717
 16979  0167D8  0012               	return		;funcret
 16980  0167DA                     __end_of_I2C_LCD_Command:
 16981                           	opt stack 0
 16982                           tblptru	equ	0xFF8
 16983                           tblptrh	equ	0xFF7
 16984                           tblptrl	equ	0xFF6
 16985                           tablat	equ	0xFF5
 16986                           prodh	equ	0xFF4
 16987                           prodl	equ	0xFF3
 16988                           intcon	equ	0xFF2
 16989                           intcon2	equ	0xFF1
 16990                           postinc0	equ	0xFEE
 16991                           wreg	equ	0xFE8
 16992                           indf1	equ	0xFE7
 16993                           postinc1	equ	0xFE6
 16994                           postdec1	equ	0xFE5
 16995                           fsr1h	equ	0xFE2
 16996                           fsr1l	equ	0xFE1
 16997                           indf2	equ	0xFDF
 16998                           postinc2	equ	0xFDE
 16999                           postdec2	equ	0xFDD
 17000                           plusw2	equ	0xFDB
 17001                           fsr2h	equ	0xFDA
 17002                           fsr2l	equ	0xFD9
 17003                           status	equ	0xFD8
 17004                           
 17005 ;; *************** function _I2C_Stop *****************
 17006 ;; Defined at:
 17007 ;;		line 59 in file "../My_header\My_I2C.h"
 17008 ;; Parameters:    Size  Location     Type
 17009 ;;		None
 17010 ;; Auto vars:     Size  Location     Type
 17011 ;;		None
 17012 ;; Return value:  Size  Location     Type
 17013 ;;		None               void
 17014 ;; Registers used:
 17015 ;;		wreg, status,2, status,0, cstack
 17016 ;; Tracked objects:
 17017 ;;		On entry : 0/0
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;Total ram usage:        0 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; Hardware stack levels required when called:   12
 17028 ;; This function calls:
 17029 ;;		_I2C_IdleCheck
 17030 ;; This function is called by:
 17031 ;;		_I2C_LCD_Command
 17032 ;;		_I2C_LCD_Putc
 17033 ;;		_I2C_LCD_Puts
 17034 ;;		_I2C_LCD_CreateChar
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           	psect	text62
 17039  016C78                     __ptext62:
 17040                           	opt stack 0
 17041  016C78                     _I2C_Stop:
 17042                           	opt stack 15
 17043                           
 17044                           ;My_header\My_I2C.h: 61: I2C_IdleCheck(0x5);
 17045                           
 17046                           ;incstack = 0
 17047  016C78  0E05               	movlw	5
 17048  016C7A  ECED  F0B5         	call	_I2C_IdleCheck
 17049                           
 17050                           ;My_header\My_I2C.h: 62: SSP1CON2bits.PEN = 1;
 17051  016C7E  84C5               	bsf	4037,2,c	;volatile
 17052  016C80  0012               	return		;funcret
 17053  016C82                     __end_of_I2C_Stop:
 17054                           	opt stack 0
 17055                           tblptru	equ	0xFF8
 17056                           tblptrh	equ	0xFF7
 17057                           tblptrl	equ	0xFF6
 17058                           tablat	equ	0xFF5
 17059                           prodh	equ	0xFF4
 17060                           prodl	equ	0xFF3
 17061                           intcon	equ	0xFF2
 17062                           intcon2	equ	0xFF1
 17063                           postinc0	equ	0xFEE
 17064                           wreg	equ	0xFE8
 17065                           indf1	equ	0xFE7
 17066                           postinc1	equ	0xFE6
 17067                           postdec1	equ	0xFE5
 17068                           fsr1h	equ	0xFE2
 17069                           fsr1l	equ	0xFE1
 17070                           indf2	equ	0xFDF
 17071                           postinc2	equ	0xFDE
 17072                           postdec2	equ	0xFDD
 17073                           plusw2	equ	0xFDB
 17074                           fsr2h	equ	0xFDA
 17075                           fsr2l	equ	0xFD9
 17076                           status	equ	0xFD8
 17077                           
 17078 ;; *************** function _I2C_Start *****************
 17079 ;; Defined at:
 17080 ;;		line 35 in file "../My_header\My_I2C.h"
 17081 ;; Parameters:    Size  Location     Type
 17082 ;;  adrs            1    wreg     unsigned char 
 17083 ;;  rw              1    2[BANK0 ] unsigned char 
 17084 ;; Auto vars:     Size  Location     Type
 17085 ;;  adrs            1    3[BANK0 ] unsigned char 
 17086 ;; Return value:  Size  Location     Type
 17087 ;;                  1    wreg      unsigned char 
 17088 ;; Registers used:
 17089 ;;		wreg, status,2, status,0, cstack
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17095 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17099 ;;Total ram usage:        2 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:   12
 17102 ;; This function calls:
 17103 ;;		_I2C_IdleCheck
 17104 ;; This function is called by:
 17105 ;;		_I2C_LCD_Command
 17106 ;;		_I2C_LCD_Putc
 17107 ;;		_I2C_LCD_Puts
 17108 ;;		_I2C_LCD_CreateChar
 17109 ;; This function uses a non-reentrant model
 17110 ;;
 17111                           
 17112                           	psect	text63
 17113  0168AC                     __ptext63:
 17114                           	opt stack 0
 17115  0168AC                     _I2C_Start:
 17116                           	opt stack 15
 17117                           
 17118                           ;incstack = 0
 17119                           ;I2C_Start@adrs stored from wreg
 17120  0168AC  0100               	movlb	0	; () banked
 17121  0168AE  6F63               	movwf	I2C_Start@adrs& (0+255),b
 17122                           
 17123                           ;My_header\My_I2C.h: 37: I2C_IdleCheck(0x5);
 17124  0168B0  0E05               	movlw	5
 17125  0168B2  ECED  F0B5         	call	_I2C_IdleCheck
 17126                           
 17127                           ;My_header\My_I2C.h: 38: SSP1CON2bits.SEN = 1;
 17128  0168B6  80C5               	bsf	4037,0,c	;volatile
 17129                           
 17130                           ;My_header\My_I2C.h: 40: I2C_IdleCheck(0x5);
 17131  0168B8  0E05               	movlw	5
 17132  0168BA  ECED  F0B5         	call	_I2C_IdleCheck
 17133                           
 17134                           ;My_header\My_I2C.h: 41: SSP1IF = 0;
 17135  0168BE  969E               	bcf	3998,3,c	;volatile
 17136                           
 17137                           ;My_header\My_I2C.h: 42: SSP1BUF = (uint8_t) ((adrs << 1) + rw);
 17138  0168C0  0100               	movlb	0	; () banked
 17139  0168C2  5163               	movf	I2C_Start@adrs& (0+255),w,b
 17140  0168C4  2563               	addwf	I2C_Start@adrs& (0+255),w,b
 17141  0168C6  0100               	movlb	0	; () banked
 17142  0168C8  2562               	addwf	I2C_Start@rw& (0+255),w,b
 17143  0168CA  6EC9               	movwf	4041,c	;volatile
 17144  0168CC                     l321:
 17145  0168CC  A69E               	btfss	3998,3,c	;volatile
 17146  0168CE  D7FE               	goto	l321
 17147                           
 17148                           ;My_header\My_I2C.h: 44: return SSP1CON2bits.ACKSTAT;
 17149  0168D0  ACC5               	btfss	4037,6,c	;volatile
 17150  0168D2  D002               	goto	u10820
 17151  0168D4  0E01               	movlw	1
 17152  0168D6  0012               	return	
 17153  0168D8                     u10820:
 17154  0168D8  0E00               	movlw	0
 17155  0168DA  0012               	return	
 17156  0168DC                     __end_of_I2C_Start:
 17157                           	opt stack 0
 17158                           tblptru	equ	0xFF8
 17159                           tblptrh	equ	0xFF7
 17160                           tblptrl	equ	0xFF6
 17161                           tablat	equ	0xFF5
 17162                           prodh	equ	0xFF4
 17163                           prodl	equ	0xFF3
 17164                           intcon	equ	0xFF2
 17165                           intcon2	equ	0xFF1
 17166                           postinc0	equ	0xFEE
 17167                           wreg	equ	0xFE8
 17168                           indf1	equ	0xFE7
 17169                           postinc1	equ	0xFE6
 17170                           postdec1	equ	0xFE5
 17171                           fsr1h	equ	0xFE2
 17172                           fsr1l	equ	0xFE1
 17173                           indf2	equ	0xFDF
 17174                           postinc2	equ	0xFDE
 17175                           postdec2	equ	0xFDD
 17176                           plusw2	equ	0xFDB
 17177                           fsr2h	equ	0xFDA
 17178                           fsr2l	equ	0xFD9
 17179                           status	equ	0xFD8
 17180                           
 17181 ;; *************** function _I2C_Send *****************
 17182 ;; Defined at:
 17183 ;;		line 65 in file "../My_header\My_I2C.h"
 17184 ;; Parameters:    Size  Location     Type
 17185 ;;  data            1    wreg     unsigned char 
 17186 ;; Auto vars:     Size  Location     Type
 17187 ;;  data            1    2[BANK0 ] unsigned char 
 17188 ;; Return value:  Size  Location     Type
 17189 ;;                  1    wreg      unsigned char 
 17190 ;; Registers used:
 17191 ;;		wreg, status,2, status,0, cstack
 17192 ;; Tracked objects:
 17193 ;;		On entry : 0/0
 17194 ;;		On exit  : 0/0
 17195 ;;		Unchanged: 0/0
 17196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17201 ;;Total ram usage:        1 bytes
 17202 ;; Hardware stack levels used:    1
 17203 ;; Hardware stack levels required when called:   12
 17204 ;; This function calls:
 17205 ;;		_I2C_IdleCheck
 17206 ;; This function is called by:
 17207 ;;		_I2C_LCD_Command
 17208 ;;		_I2C_LCD_Putc
 17209 ;;		_I2C_LCD_Puts
 17210 ;;		_I2C_LCD_CreateChar
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           	psect	text64
 17215  016C2E                     __ptext64:
 17216                           	opt stack 0
 17217  016C2E                     _I2C_Send:
 17218                           	opt stack 15
 17219                           
 17220                           ;incstack = 0
 17221                           ;I2C_Send@data stored from wreg
 17222  016C2E  0100               	movlb	0	; () banked
 17223  016C30  6F62               	movwf	I2C_Send@data& (0+255),b
 17224                           
 17225                           ;My_header\My_I2C.h: 66: I2C_IdleCheck(0x5);
 17226  016C32  0E05               	movlw	5
 17227  016C34  ECED  F0B5         	call	_I2C_IdleCheck
 17228                           
 17229                           ;My_header\My_I2C.h: 67: SSP1IF = 0;
 17230  016C38  969E               	bcf	3998,3,c	;volatile
 17231                           
 17232                           ;My_header\My_I2C.h: 68: SSP1BUF = data;
 17233  016C3A  C062  FFC9         	movff	I2C_Send@data,4041	;volatile
 17234  016C3E                     l336:
 17235  016C3E  A69E               	btfss	3998,3,c	;volatile
 17236  016C40  D7FE               	goto	l336
 17237                           
 17238                           ;My_header\My_I2C.h: 70: return SSP1CON2bits.ACKSTAT;
 17239                           ;	Return value of _I2C_Send is never used
 17240  016C42  50C5               	movf	4037,w,c	;volatile
 17241  016C44  0012               	return	
 17242  016C46                     __end_of_I2C_Send:
 17243                           	opt stack 0
 17244                           tblptru	equ	0xFF8
 17245                           tblptrh	equ	0xFF7
 17246                           tblptrl	equ	0xFF6
 17247                           tablat	equ	0xFF5
 17248                           prodh	equ	0xFF4
 17249                           prodl	equ	0xFF3
 17250                           intcon	equ	0xFF2
 17251                           intcon2	equ	0xFF1
 17252                           postinc0	equ	0xFEE
 17253                           wreg	equ	0xFE8
 17254                           indf1	equ	0xFE7
 17255                           postinc1	equ	0xFE6
 17256                           postdec1	equ	0xFE5
 17257                           fsr1h	equ	0xFE2
 17258                           fsr1l	equ	0xFE1
 17259                           indf2	equ	0xFDF
 17260                           postinc2	equ	0xFDE
 17261                           postdec2	equ	0xFDD
 17262                           plusw2	equ	0xFDB
 17263                           fsr2h	equ	0xFDA
 17264                           fsr2l	equ	0xFD9
 17265                           status	equ	0xFD8
 17266                           
 17267 ;; *************** function _I2C_IdleCheck *****************
 17268 ;; Defined at:
 17269 ;;		line 21 in file "../My_header\My_I2C.h"
 17270 ;; Parameters:    Size  Location     Type
 17271 ;;  mask            1    wreg     unsigned char 
 17272 ;; Auto vars:     Size  Location     Type
 17273 ;;  mask            1    1[BANK0 ] unsigned char 
 17274 ;; Return value:  Size  Location     Type
 17275 ;;		None               void
 17276 ;; Registers used:
 17277 ;;		wreg, status,2, status,0
 17278 ;; Tracked objects:
 17279 ;;		On entry : 0/0
 17280 ;;		On exit  : 0/0
 17281 ;;		Unchanged: 0/0
 17282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17284 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17286 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17287 ;;Total ram usage:        2 bytes
 17288 ;; Hardware stack levels used:    1
 17289 ;; Hardware stack levels required when called:   11
 17290 ;; This function calls:
 17291 ;;		Nothing
 17292 ;; This function is called by:
 17293 ;;		_I2C_Start
 17294 ;;		_I2C_Stop
 17295 ;;		_I2C_Send
 17296 ;;		_I2C_rStart
 17297 ;;		_I2C_Receive
 17298 ;; This function uses a non-reentrant model
 17299 ;;
 17300                           
 17301                           	psect	text65
 17302  016BDA                     __ptext65:
 17303                           	opt stack 0
 17304  016BDA                     _I2C_IdleCheck:
 17305                           	opt stack 15
 17306                           
 17307                           ;incstack = 0
 17308                           ;I2C_IdleCheck@mask stored from wreg
 17309  016BDA  0100               	movlb	0	; () banked
 17310  016BDC  6F61               	movwf	I2C_IdleCheck@mask& (0+255),b
 17311  016BDE                     l9656:
 17312  016BDE  50C7               	movf	4039,w,c	;volatile
 17313  016BE0  0100               	movlb	0	; () banked
 17314  016BE2  1561               	andwf	I2C_IdleCheck@mask& (0+255),w,b
 17315  016BE4  0100               	movlb	0	; () banked
 17316  016BE6  6F60               	movwf	??_I2C_IdleCheck& (0+255),b
 17317  016BE8  50C5               	movf	4037,w,c	;volatile
 17318  016BEA  0B1F               	andlw	31
 17319  016BEC  0100               	movlb	0	; () banked
 17320  016BEE  1160               	iorwf	??_I2C_IdleCheck& (0+255),w,b
 17321  016BF0  0900               	iorlw	0
 17322  016BF2  B4D8               	btfsc	status,2,c
 17323  016BF4  0012               	return	
 17324  016BF6  D7F3               	goto	l9656
 17325  016BF8                     __end_of_I2C_IdleCheck:
 17326                           	opt stack 0
 17327                           tblptru	equ	0xFF8
 17328                           tblptrh	equ	0xFF7
 17329                           tblptrl	equ	0xFF6
 17330                           tablat	equ	0xFF5
 17331                           prodh	equ	0xFF4
 17332                           prodl	equ	0xFF3
 17333                           intcon	equ	0xFF2
 17334                           intcon2	equ	0xFF1
 17335                           postinc0	equ	0xFEE
 17336                           wreg	equ	0xFE8
 17337                           indf1	equ	0xFE7
 17338                           postinc1	equ	0xFE6
 17339                           postdec1	equ	0xFE5
 17340                           fsr1h	equ	0xFE2
 17341                           fsr1l	equ	0xFE1
 17342                           indf2	equ	0xFDF
 17343                           postinc2	equ	0xFDE
 17344                           postdec2	equ	0xFDD
 17345                           plusw2	equ	0xFDB
 17346                           fsr2h	equ	0xFDA
 17347                           fsr2l	equ	0xFD9
 17348                           status	equ	0xFD8
 17349                           
 17350 ;; *************** function _Delay_ms *****************
 17351 ;; Defined at:
 17352 ;;		line 333 in file "../My_header\My_header.h"
 17353 ;; Parameters:    Size  Location     Type
 17354 ;;  ms              2    0[BANK0 ] unsigned int 
 17355 ;; Auto vars:     Size  Location     Type
 17356 ;;		None
 17357 ;; Return value:  Size  Location     Type
 17358 ;;		None               void
 17359 ;; Registers used:
 17360 ;;		wreg, status,2, status,0
 17361 ;; Tracked objects:
 17362 ;;		On entry : 0/0
 17363 ;;		On exit  : 0/0
 17364 ;;		Unchanged: 0/0
 17365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17368 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17370 ;;Total ram usage:        3 bytes
 17371 ;; Hardware stack levels used:    1
 17372 ;; Hardware stack levels required when called:   11
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_I2C_LCD_init
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           	psect	text66
 17381  0169EA                     __ptext66:
 17382                           	opt stack 0
 17383  0169EA                     _Delay_ms:
 17384                           	opt stack 17
 17385                           
 17386                           ;My_header\My_header.h: 334: while (ms--)_delay((unsigned long)((1)*(48000000/4000.0)));
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;incstack = 0
 17390  0169EA  D009               	goto	l10270
 17391  0169EC                     l10268:
 17392  0169EC  0E10               	movlw	16
 17393  0169EE  0100               	movlb	0	; () banked
 17394  0169F0  6F62               	movwf	??_Delay_ms& (0+255),b
 17395  0169F2  0E94               	movlw	148
 17396  0169F4                     u13727:
 17397  0169F4  2EE8               	decfsz	wreg,f,c
 17398  0169F6  D7FE               	goto	u13727
 17399  0169F8  2F62               	decfsz	??_Delay_ms& (0+255),f,b
 17400  0169FA  D7FC               	goto	u13727
 17401  0169FC  D000               	nop2	
 17402  0169FE                     l10270:
 17403  0169FE  0100               	movlb	0	; () banked
 17404  016A00  0760               	decf	Delay_ms@ms& (0+255),f,b
 17405  016A02  A0D8               	btfss	status,0,c
 17406  016A04  0761               	decf	(Delay_ms@ms+1)& (0+255),f,b
 17407  016A06  0100               	movlb	0	; () banked
 17408  016A08  2960               	incf	Delay_ms@ms& (0+255),w,b
 17409  016A0A  E1F0               	bnz	l10268
 17410  016A0C  0100               	movlb	0	; () banked
 17411  016A0E  2961               	incf	(Delay_ms@ms+1)& (0+255),w,b
 17412  016A10  B4D8               	btfsc	status,2,c
 17413  016A12  0012               	return	
 17414  016A14  D7EB               	goto	l10268
 17415  016A16                     __end_of_Delay_ms:
 17416                           	opt stack 0
 17417                           tblptru	equ	0xFF8
 17418                           tblptrh	equ	0xFF7
 17419                           tblptrl	equ	0xFF6
 17420                           tablat	equ	0xFF5
 17421                           prodh	equ	0xFF4
 17422                           prodl	equ	0xFF3
 17423                           intcon	equ	0xFF2
 17424                           intcon2	equ	0xFF1
 17425                           postinc0	equ	0xFEE
 17426                           wreg	equ	0xFE8
 17427                           indf1	equ	0xFE7
 17428                           postinc1	equ	0xFE6
 17429                           postdec1	equ	0xFE5
 17430                           fsr1h	equ	0xFE2
 17431                           fsr1l	equ	0xFE1
 17432                           indf2	equ	0xFDF
 17433                           postinc2	equ	0xFDE
 17434                           postdec2	equ	0xFDD
 17435                           plusw2	equ	0xFDB
 17436                           fsr2h	equ	0xFDA
 17437                           fsr2l	equ	0xFD9
 17438                           status	equ	0xFD8
 17439                           
 17440 ;; *************** function _CTMU_init *****************
 17441 ;; Defined at:
 17442 ;;		line 289 in file "../My_header\My_header.h"
 17443 ;; Parameters:    Size  Location     Type
 17444 ;;		None
 17445 ;; Auto vars:     Size  Location     Type
 17446 ;;		None
 17447 ;; Return value:  Size  Location     Type
 17448 ;;		None               void
 17449 ;; Registers used:
 17450 ;;		wreg, status,2
 17451 ;; Tracked objects:
 17452 ;;		On entry : 0/0
 17453 ;;		On exit  : 0/0
 17454 ;;		Unchanged: 0/0
 17455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17460 ;;Total ram usage:        0 bytes
 17461 ;; Hardware stack levels used:    1
 17462 ;; Hardware stack levels required when called:   11
 17463 ;; This function calls:
 17464 ;;		Nothing
 17465 ;; This function is called by:
 17466 ;;		_main_init
 17467 ;; This function uses a non-reentrant model
 17468 ;;
 17469                           
 17470                           	psect	text67
 17471  016AC0                     __ptext67:
 17472                           	opt stack 0
 17473  016AC0                     _CTMU_init:
 17474                           	opt stack 18
 17475                           
 17476                           ;My_header\My_header.h: 290: CTMUCONH = 0x00;
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;incstack = 0
 17480  016AC0  0E00               	movlw	0
 17481  016AC2  6EB3               	movwf	4019,c	;volatile
 17482                           
 17483                           ;My_header\My_header.h: 291: CTMUCONL = 0x90;
 17484  016AC4  0E90               	movlw	144
 17485  016AC6  6EB2               	movwf	4018,c	;volatile
 17486                           
 17487                           ;My_header\My_header.h: 292: CTMUICON = 0x01;
 17488  016AC8  0E01               	movlw	1
 17489  016ACA  6EB1               	movwf	4017,c	;volatile
 17490                           
 17491                           ;My_header\My_header.h: 294: ADCON1bits.ADFM = 1;
 17492  016ACC  8EC1               	bsf	4033,7,c	;volatile
 17493                           
 17494                           ;My_header\My_header.h: 295: ADCON1bits.ADCAL = 0;
 17495  016ACE  9CC1               	bcf	4033,6,c	;volatile
 17496                           
 17497                           ;My_header\My_header.h: 296: ADCON1bits.ACQT = 1;
 17498  016AD0  50C1               	movf	4033,w,c	;volatile
 17499  016AD2  0BC7               	andlw	-57
 17500  016AD4  0908               	iorlw	8
 17501  016AD6  6EC1               	movwf	4033,c	;volatile
 17502                           
 17503                           ;My_header\My_header.h: 297: ADCON1bits.ADCS = 6;
 17504  016AD8  50C1               	movf	4033,w,c	;volatile
 17505  016ADA  0BF8               	andlw	-8
 17506  016ADC  0906               	iorlw	6
 17507  016ADE  6EC1               	movwf	4033,c	;volatile
 17508                           
 17509                           ;My_header\My_header.h: 299: ADCON0bits.VCFG0 = 0;
 17510  016AE0  9CC2               	bcf	4034,6,c	;volatile
 17511                           
 17512                           ;My_header\My_header.h: 300: ADCON0bits.VCFG1 = 0;
 17513  016AE2  9EC2               	bcf	4034,7,c	;volatile
 17514                           
 17515                           ;My_header\My_header.h: 301: ADCON0bits.ADON = 1;
 17516  016AE4  80C2               	bsf	4034,0,c	;volatile
 17517  016AE6  0012               	return		;funcret
 17518  016AE8                     __end_of_CTMU_init:
 17519                           	opt stack 0
 17520                           tblptru	equ	0xFF8
 17521                           tblptrh	equ	0xFF7
 17522                           tblptrl	equ	0xFF6
 17523                           tablat	equ	0xFF5
 17524                           prodh	equ	0xFF4
 17525                           prodl	equ	0xFF3
 17526                           intcon	equ	0xFF2
 17527                           intcon2	equ	0xFF1
 17528                           postinc0	equ	0xFEE
 17529                           wreg	equ	0xFE8
 17530                           indf1	equ	0xFE7
 17531                           postinc1	equ	0xFE6
 17532                           postdec1	equ	0xFE5
 17533                           fsr1h	equ	0xFE2
 17534                           fsr1l	equ	0xFE1
 17535                           indf2	equ	0xFDF
 17536                           postinc2	equ	0xFDE
 17537                           postdec2	equ	0xFDD
 17538                           plusw2	equ	0xFDB
 17539                           fsr2h	equ	0xFDA
 17540                           fsr2l	equ	0xFD9
 17541                           status	equ	0xFD8
 17542                           
 17543 ;; *************** function _ADC_init *****************
 17544 ;; Defined at:
 17545 ;;		line 149 in file "../My_header\My_header.h"
 17546 ;; Parameters:    Size  Location     Type
 17547 ;;  p_ref           1    wreg     unsigned char 
 17548 ;; Auto vars:     Size  Location     Type
 17549 ;;  p_ref           1    0[BANK0 ] unsigned char 
 17550 ;; Return value:  Size  Location     Type
 17551 ;;		None               void
 17552 ;; Registers used:
 17553 ;;		wreg, status,2
 17554 ;; Tracked objects:
 17555 ;;		On entry : 0/0
 17556 ;;		On exit  : 0/0
 17557 ;;		Unchanged: 0/0
 17558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17562 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17563 ;;Total ram usage:        1 bytes
 17564 ;; Hardware stack levels used:    1
 17565 ;; Hardware stack levels required when called:   11
 17566 ;; This function calls:
 17567 ;;		Nothing
 17568 ;; This function is called by:
 17569 ;;		_main_init
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           	psect	text68
 17574  016B9A                     __ptext68:
 17575                           	opt stack 0
 17576  016B9A                     _ADC_init:
 17577                           	opt stack 18
 17578                           
 17579                           ;incstack = 0
 17580                           ;ADC_init@p_ref stored from wreg
 17581  016B9A  0100               	movlb	0	; () banked
 17582  016B9C  6F60               	movwf	ADC_init@p_ref& (0+255),b
 17583                           
 17584                           ;My_header\My_header.h: 150: ADCON0bits.VCFG1 = 0;
 17585  016B9E  9EC2               	bcf	4034,7,c	;volatile
 17586                           
 17587                           ;My_header\My_header.h: 151: ADCON0bits.VCFG0 = p_ref;
 17588  016BA0  0100               	movlb	0	; () banked
 17589  016BA2  B160               	btfsc	ADC_init@p_ref& (0+255),0,b
 17590  016BA4  D002               	bra	u12365
 17591  016BA6  9CC2               	bcf	4034,6,c	;volatile
 17592  016BA8  D001               	bra	u12366
 17593  016BAA                     u12365:
 17594  016BAA  8CC2               	bsf	4034,6,c	;volatile
 17595  016BAC                     u12366:
 17596                           
 17597                           ;My_header\My_header.h: 153: ADCON1bits.ADFM = 1;
 17598  016BAC  8EC1               	bsf	4033,7,c	;volatile
 17599                           
 17600                           ;My_header\My_header.h: 154: ADCON1bits.ADCAL = 0;
 17601  016BAE  9CC1               	bcf	4033,6,c	;volatile
 17602                           
 17603                           ;My_header\My_header.h: 155: ADCON1bits.ADCS = 6;
 17604  016BB0  50C1               	movf	4033,w,c	;volatile
 17605  016BB2  0BF8               	andlw	-8
 17606  016BB4  0906               	iorlw	6
 17607  016BB6  6EC1               	movwf	4033,c	;volatile
 17608  016BB8  0012               	return		;funcret
 17609  016BBA                     __end_of_ADC_init:
 17610                           	opt stack 0
 17611                           tblptru	equ	0xFF8
 17612                           tblptrh	equ	0xFF7
 17613                           tblptrl	equ	0xFF6
 17614                           tablat	equ	0xFF5
 17615                           prodh	equ	0xFF4
 17616                           prodl	equ	0xFF3
 17617                           intcon	equ	0xFF2
 17618                           intcon2	equ	0xFF1
 17619                           postinc0	equ	0xFEE
 17620                           wreg	equ	0xFE8
 17621                           indf1	equ	0xFE7
 17622                           postinc1	equ	0xFE6
 17623                           postdec1	equ	0xFE5
 17624                           fsr1h	equ	0xFE2
 17625                           fsr1l	equ	0xFE1
 17626                           indf2	equ	0xFDF
 17627                           postinc2	equ	0xFDE
 17628                           postdec2	equ	0xFDD
 17629                           plusw2	equ	0xFDB
 17630                           fsr2h	equ	0xFDA
 17631                           fsr2l	equ	0xFD9
 17632                           status	equ	0xFD8
 17633                           
 17634 ;; *************** function _ctmu_loop *****************
 17635 ;; Defined at:
 17636 ;;		line 567 in file "tasks.h"
 17637 ;; Parameters:    Size  Location     Type
 17638 ;;		None
 17639 ;; Auto vars:     Size  Location     Type
 17640 ;;		None
 17641 ;; Return value:  Size  Location     Type
 17642 ;;		None               void
 17643 ;; Registers used:
 17644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17645 ;; Tracked objects:
 17646 ;;		On entry : 0/0
 17647 ;;		On exit  : 0/0
 17648 ;;		Unchanged: 0/0
 17649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17654 ;;Total ram usage:        0 bytes
 17655 ;; Hardware stack levels used:    1
 17656 ;; Hardware stack levels required when called:   13
 17657 ;; This function calls:
 17658 ;;		_CTMU_read
 17659 ;;		___lwdiv
 17660 ;;		_button_timer_interrupt
 17661 ;; This function is called by:
 17662 ;;		_main
 17663 ;; This function uses a non-reentrant model
 17664 ;;
 17665                           
 17666                           	psect	text69
 17667  013D34                     __ptext69:
 17668                           	opt stack 0
 17669  013D34                     _ctmu_loop:
 17670                           	opt stack 17
 17671                           
 17672                           ;tasks.h: 568: if (ctmu_flag) {
 17673                           
 17674                           ;incstack = 0
 17675  013D34  5048               	movf	_ctmu_flag,w,c
 17676  013D36  B4D8               	btfsc	status,2,c
 17677  013D38  0012               	return	
 17678                           
 17679                           ;tasks.h: 569: ctmu_flag = 0;
 17680  013D3A  0E00               	movlw	0
 17681  013D3C  6E48               	movwf	_ctmu_flag,c
 17682                           
 17683                           ;tasks.h: 570: button_timer_interrupt(&port[0].ctmu, !(CTMU_read(0) / port[0].ctmu_value
      +                          ));
 17684  013D3E  0E2B               	movlw	low _port
 17685  013D40  0100               	movlb	0	; () banked
 17686  013D42  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 17687  013D44  0E01               	movlw	high _port
 17688  013D46  0100               	movlb	0	; () banked
 17689  013D48  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 17690  013D4A  0E00               	movlw	0
 17691  013D4C  EC42  F0A7         	call	_CTMU_read
 17692  013D50  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 17693  013D54  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 17694  013D58  C12F  F07E         	movff	_port+4,___lwdiv@divisor
 17695  013D5C  C130  F07F         	movff	_port+5,___lwdiv@divisor+1
 17696  013D60  EC66  F0AF         	call	___lwdiv	;wreg free
 17697  013D64  0100               	movlb	0	; () banked
 17698  013D66  517C               	movf	?___lwdiv& (0+255),w,b
 17699  013D68  0100               	movlb	0	; () banked
 17700  013D6A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 17701  013D6C  A4D8               	btfss	status,2,c
 17702  013D6E  D002               	goto	u13240
 17703  013D70  0E01               	movlw	1
 17704  013D72  D001               	goto	u13250
 17705  013D74                     u13240:
 17706  013D74  0E00               	movlw	0
 17707  013D76                     u13250:
 17708  013D76  0100               	movlb	0	; () banked
 17709  013D78  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 17710  013D7A  EC0C  F091         	call	_button_timer_interrupt	;wreg free
 17711                           
 17712                           ;tasks.h: 571: button_timer_interrupt(&port[1].ctmu, !(CTMU_read(1) / port[1].ctmu_value
      +                          ));
 17713  013D7E  0E42               	movlw	low (_port+23)
 17714  013D80  0100               	movlb	0	; () banked
 17715  013D82  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 17716  013D84  0E01               	movlw	high (_port+23)
 17717  013D86  0100               	movlb	0	; () banked
 17718  013D88  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 17719  013D8A  0E01               	movlw	1
 17720  013D8C  EC42  F0A7         	call	_CTMU_read
 17721  013D90  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 17722  013D94  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 17723  013D98  C146  F07E         	movff	_port+27,___lwdiv@divisor
 17724  013D9C  C147  F07F         	movff	_port+28,___lwdiv@divisor+1
 17725  013DA0  EC66  F0AF         	call	___lwdiv	;wreg free
 17726  013DA4  0100               	movlb	0	; () banked
 17727  013DA6  517C               	movf	?___lwdiv& (0+255),w,b
 17728  013DA8  0100               	movlb	0	; () banked
 17729  013DAA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 17730  013DAC  A4D8               	btfss	status,2,c
 17731  013DAE  D002               	goto	u13260
 17732  013DB0  0E01               	movlw	1
 17733  013DB2  D001               	goto	u13270
 17734  013DB4                     u13260:
 17735  013DB4  0E00               	movlw	0
 17736  013DB6                     u13270:
 17737  013DB6  0100               	movlb	0	; () banked
 17738  013DB8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 17739  013DBA  EC0C  F091         	call	_button_timer_interrupt	;wreg free
 17740                           
 17741                           ;tasks.h: 572: button_timer_interrupt(&port[2].ctmu, !(CTMU_read(2) / port[2].ctmu_value
      +                          ));
 17742  013DBE  0E59               	movlw	low (_port+46)
 17743  013DC0  0100               	movlb	0	; () banked
 17744  013DC2  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 17745  013DC4  0E01               	movlw	high (_port+46)
 17746  013DC6  0100               	movlb	0	; () banked
 17747  013DC8  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 17748  013DCA  0E02               	movlw	2
 17749  013DCC  EC42  F0A7         	call	_CTMU_read
 17750  013DD0  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 17751  013DD4  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 17752  013DD8  C15D  F07E         	movff	_port+50,___lwdiv@divisor
 17753  013DDC  C15E  F07F         	movff	_port+51,___lwdiv@divisor+1
 17754  013DE0  EC66  F0AF         	call	___lwdiv	;wreg free
 17755  013DE4  0100               	movlb	0	; () banked
 17756  013DE6  517C               	movf	?___lwdiv& (0+255),w,b
 17757  013DE8  0100               	movlb	0	; () banked
 17758  013DEA  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 17759  013DEC  A4D8               	btfss	status,2,c
 17760  013DEE  D002               	goto	u13280
 17761  013DF0  0E01               	movlw	1
 17762  013DF2  D001               	goto	u13290
 17763  013DF4                     u13280:
 17764  013DF4  0E00               	movlw	0
 17765  013DF6                     u13290:
 17766  013DF6  0100               	movlb	0	; () banked
 17767  013DF8  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 17768  013DFA  EC0C  F091         	call	_button_timer_interrupt	;wreg free
 17769                           
 17770                           ;tasks.h: 573: button_timer_interrupt(&ctmu_m, !(CTMU_read(3) / ctmu_value_m));
 17771  013DFE  0E8E               	movlw	low _ctmu_m
 17772  013E00  0100               	movlb	0	; () banked
 17773  013E02  6F83               	movwf	button_timer_interrupt@bt& (0+255),b
 17774  013E04  0E01               	movlw	high _ctmu_m
 17775  013E06  0100               	movlb	0	; () banked
 17776  013E08  6F84               	movwf	(button_timer_interrupt@bt+1)& (0+255),b
 17777  013E0A  0E03               	movlw	3
 17778  013E0C  EC42  F0A7         	call	_CTMU_read
 17779  013E10  C06D  F07C         	movff	?_CTMU_read,___lwdiv@dividend
 17780  013E14  C06E  F07D         	movff	?_CTMU_read+1,___lwdiv@dividend+1
 17781  013E18  C11F  F07E         	movff	_ctmu_value_m,___lwdiv@divisor
 17782  013E1C  C120  F07F         	movff	_ctmu_value_m+1,___lwdiv@divisor+1
 17783  013E20  EC66  F0AF         	call	___lwdiv	;wreg free
 17784  013E24  0100               	movlb	0	; () banked
 17785  013E26  517C               	movf	?___lwdiv& (0+255),w,b
 17786  013E28  0100               	movlb	0	; () banked
 17787  013E2A  117D               	iorwf	(?___lwdiv+1)& (0+255),w,b
 17788  013E2C  A4D8               	btfss	status,2,c
 17789  013E2E  D002               	goto	u13300
 17790  013E30  0E01               	movlw	1
 17791  013E32  D001               	goto	u13310
 17792  013E34                     u13300:
 17793  013E34  0E00               	movlw	0
 17794  013E36                     u13310:
 17795  013E36  0100               	movlb	0	; () banked
 17796  013E38  6F85               	movwf	button_timer_interrupt@sw_value& (0+255),b
 17797  013E3A  EC0C  F091         	call	_button_timer_interrupt	;wreg free
 17798  013E3E  0012               	return	
 17799  013E40                     __end_of_ctmu_loop:
 17800                           	opt stack 0
 17801                           tblptru	equ	0xFF8
 17802                           tblptrh	equ	0xFF7
 17803                           tblptrl	equ	0xFF6
 17804                           tablat	equ	0xFF5
 17805                           prodh	equ	0xFF4
 17806                           prodl	equ	0xFF3
 17807                           intcon	equ	0xFF2
 17808                           intcon2	equ	0xFF1
 17809                           postinc0	equ	0xFEE
 17810                           wreg	equ	0xFE8
 17811                           indf1	equ	0xFE7
 17812                           postinc1	equ	0xFE6
 17813                           postdec1	equ	0xFE5
 17814                           fsr1h	equ	0xFE2
 17815                           fsr1l	equ	0xFE1
 17816                           indf2	equ	0xFDF
 17817                           postinc2	equ	0xFDE
 17818                           postdec2	equ	0xFDD
 17819                           plusw2	equ	0xFDB
 17820                           fsr2h	equ	0xFDA
 17821                           fsr2l	equ	0xFD9
 17822                           status	equ	0xFD8
 17823                           
 17824 ;; *************** function _button_timer_interrupt *****************
 17825 ;; Defined at:
 17826 ;;		line 51 in file "../My_header\My_button.h"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;  bt              2   35[BANK0 ] PTR struct button
 17829 ;;		 -> ctmu_m(4), port(69), 
 17830 ;;  sw_value        1   37[BANK0 ] unsigned char 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;		None
 17833 ;; Return value:  Size  Location     Type
 17834 ;;		None               void
 17835 ;; Registers used:
 17836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17837 ;; Tracked objects:
 17838 ;;		On entry : 0/0
 17839 ;;		On exit  : 0/0
 17840 ;;		Unchanged: 0/0
 17841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17842 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17845 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17846 ;;Total ram usage:        5 bytes
 17847 ;; Hardware stack levels used:    1
 17848 ;; Hardware stack levels required when called:   11
 17849 ;; This function calls:
 17850 ;;		Nothing
 17851 ;; This function is called by:
 17852 ;;		_ctmu_loop
 17853 ;; This function uses a non-reentrant model
 17854 ;;
 17855                           
 17856                           	psect	text70
 17857  012218                     __ptext70:
 17858                           	opt stack 0
 17859  012218                     _button_timer_interrupt:
 17860                           	opt stack 18
 17861                           
 17862                           ;My_header\My_button.h: 52: if (sw_value) {
 17863                           
 17864                           ;incstack = 0
 17865  012218  0100               	movlb	0	; () banked
 17866  01221A  5185               	movf	button_timer_interrupt@sw_value& (0+255),w,b
 17867  01221C  0100               	movlb	0	; () banked
 17868  01221E  B4D8               	btfsc	status,2,c
 17869  012220  D0A8               	goto	l8086
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;My_header\My_button.h: 53: if (bt->cnt_sw == 900)bt->flag.long_holding_7 = 1;
 17873  012222  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17874  012226  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17875  01222A  0E84               	movlw	132
 17876  01222C  18DE               	xorwf	postinc2,w,c
 17877  01222E  E10D               	bnz	l284
 17878  012230  0E03               	movlw	3
 17879  012232  18DE               	xorwf	postinc2,w,c
 17880  012234  A4D8               	btfss	status,2,c
 17881  012236  D009               	goto	l284
 17882                           
 17883                           ; BSR set to: 0
 17884  012238  0100               	movlb	0	; () banked
 17885  01223A  EE20 F003          	lfsr	2,3
 17886  01223E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 17887  012240  26D9               	addwf	fsr2l,f,c
 17888  012242  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17889  012244  22DA               	addwfc	fsr2h,f,c
 17890  012246  0100               	movlb	0	; () banked
 17891  012248  8EDF               	bsf	indf2,7,c
 17892  01224A                     l284:
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;My_header\My_button.h: 54: if (bt->cnt_sw == 700)bt->flag.long_holding_6 = 1;
 17896  01224A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17897  01224E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17898  012252  0EBC               	movlw	188
 17899  012254  18DE               	xorwf	postinc2,w,c
 17900  012256  E10D               	bnz	l285
 17901  012258  0E02               	movlw	2
 17902  01225A  18DE               	xorwf	postinc2,w,c
 17903  01225C  A4D8               	btfss	status,2,c
 17904  01225E  D009               	goto	l285
 17905                           
 17906                           ; BSR set to: 0
 17907  012260  0100               	movlb	0	; () banked
 17908  012262  EE20 F003          	lfsr	2,3
 17909  012266  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 17910  012268  26D9               	addwf	fsr2l,f,c
 17911  01226A  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17912  01226C  22DA               	addwfc	fsr2h,f,c
 17913  01226E  0100               	movlb	0	; () banked
 17914  012270  8CDF               	bsf	indf2,6,c
 17915  012272                     l285:
 17916                           
 17917                           ; BSR set to: 0
 17918                           ;My_header\My_button.h: 55: if (bt->cnt_sw == 500)bt->flag.long_holding_5 = 1;
 17919  012272  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17920  012276  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17921  01227A  0EF4               	movlw	244
 17922  01227C  18DE               	xorwf	postinc2,w,c
 17923  01227E  E10C               	bnz	l286
 17924  012280  04DE               	decf	postinc2,w,c
 17925  012282  A4D8               	btfss	status,2,c
 17926  012284  D009               	goto	l286
 17927                           
 17928                           ; BSR set to: 0
 17929  012286  0100               	movlb	0	; () banked
 17930  012288  EE20 F003          	lfsr	2,3
 17931  01228C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 17932  01228E  26D9               	addwf	fsr2l,f,c
 17933  012290  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17934  012292  22DA               	addwfc	fsr2h,f,c
 17935  012294  0100               	movlb	0	; () banked
 17936  012296  8ADF               	bsf	indf2,5,c
 17937  012298                     l286:
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;My_header\My_button.h: 56: if (bt->cnt_sw == 300)bt->flag.long_holding_4 = 1;
 17941  012298  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17942  01229C  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17943  0122A0  0E2C               	movlw	44
 17944  0122A2  18DE               	xorwf	postinc2,w,c
 17945  0122A4  E10C               	bnz	l287
 17946  0122A6  04DE               	decf	postinc2,w,c
 17947  0122A8  A4D8               	btfss	status,2,c
 17948  0122AA  D009               	goto	l287
 17949                           
 17950                           ; BSR set to: 0
 17951  0122AC  0100               	movlb	0	; () banked
 17952  0122AE  EE20 F003          	lfsr	2,3
 17953  0122B2  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 17954  0122B4  26D9               	addwf	fsr2l,f,c
 17955  0122B6  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17956  0122B8  22DA               	addwfc	fsr2h,f,c
 17957  0122BA  0100               	movlb	0	; () banked
 17958  0122BC  88DF               	bsf	indf2,4,c
 17959  0122BE                     l287:
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;My_header\My_button.h: 57: if (bt->cnt_sw == 150)bt->flag.long_holding_3 = 1;
 17963  0122BE  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17964  0122C2  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17965  0122C6  0E96               	movlw	150
 17966  0122C8  18DE               	xorwf	postinc2,w,c
 17967  0122CA  10DE               	iorwf	postinc2,w,c
 17968  0122CC  A4D8               	btfss	status,2,c
 17969  0122CE  D009               	goto	l288
 17970                           
 17971                           ; BSR set to: 0
 17972  0122D0  0100               	movlb	0	; () banked
 17973  0122D2  EE20 F003          	lfsr	2,3
 17974  0122D6  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 17975  0122D8  26D9               	addwf	fsr2l,f,c
 17976  0122DA  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17977  0122DC  22DA               	addwfc	fsr2h,f,c
 17978  0122DE  0100               	movlb	0	; () banked
 17979  0122E0  86DF               	bsf	indf2,3,c
 17980  0122E2                     l288:
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;My_header\My_button.h: 58: if (bt->cnt_sw == 60)bt->flag.long_holding_2 = 1;
 17984  0122E2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 17985  0122E6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 17986  0122EA  0E3C               	movlw	60
 17987  0122EC  18DE               	xorwf	postinc2,w,c
 17988  0122EE  10DE               	iorwf	postinc2,w,c
 17989  0122F0  A4D8               	btfss	status,2,c
 17990  0122F2  D009               	goto	l289
 17991                           
 17992                           ; BSR set to: 0
 17993  0122F4  0100               	movlb	0	; () banked
 17994  0122F6  EE20 F003          	lfsr	2,3
 17995  0122FA  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 17996  0122FC  26D9               	addwf	fsr2l,f,c
 17997  0122FE  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 17998  012300  22DA               	addwfc	fsr2h,f,c
 17999  012302  0100               	movlb	0	; () banked
 18000  012304  84DF               	bsf	indf2,2,c
 18001  012306                     l289:
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;My_header\My_button.h: 59: if (bt->cnt_sw == 16)bt->flag.long_holding_1 = 1;
 18005  012306  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18006  01230A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18007  01230E  0E10               	movlw	16
 18008  012310  18DE               	xorwf	postinc2,w,c
 18009  012312  10DE               	iorwf	postinc2,w,c
 18010  012314  A4D8               	btfss	status,2,c
 18011  012316  D009               	goto	l290
 18012                           
 18013                           ; BSR set to: 0
 18014  012318  0100               	movlb	0	; () banked
 18015  01231A  EE20 F003          	lfsr	2,3
 18016  01231E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18017  012320  26D9               	addwf	fsr2l,f,c
 18018  012322  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18019  012324  22DA               	addwfc	fsr2h,f,c
 18020  012326  0100               	movlb	0	; () banked
 18021  012328  82DF               	bsf	indf2,1,c
 18022  01232A                     l290:
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;My_header\My_button.h: 60: if (bt->cnt_sw == 2)bt->flag.pressing = 1;
 18026  01232A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18027  01232E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18028  012332  0E02               	movlw	2
 18029  012334  18DE               	xorwf	postinc2,w,c
 18030  012336  10DE               	iorwf	postinc2,w,c
 18031  012338  A4D8               	btfss	status,2,c
 18032  01233A  D009               	goto	l291
 18033                           
 18034                           ; BSR set to: 0
 18035  01233C  0100               	movlb	0	; () banked
 18036  01233E  EE20 F003          	lfsr	2,3
 18037  012342  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18038  012344  26D9               	addwf	fsr2l,f,c
 18039  012346  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18040  012348  22DA               	addwfc	fsr2h,f,c
 18041  01234A  0100               	movlb	0	; () banked
 18042  01234C  80DF               	bsf	indf2,0,c
 18043  01234E                     l291:
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;My_header\My_button.h: 61: if (bt->cnt_sw < 900 + 1) bt->cnt_sw++;
 18047  01234E  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18048  012352  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18049  012356  0E85               	movlw	133
 18050  012358  5CDE               	subwf	postinc2,w,c
 18051  01235A  0E03               	movlw	3
 18052  01235C  58DE               	subwfb	postinc2,w,c
 18053  01235E  B0D8               	btfsc	status,0,c
 18054  012360  0012               	return	
 18055                           
 18056                           ; BSR set to: 0
 18057  012362  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18058  012366  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18059  01236A  2ADE               	incf	postinc2,f,c
 18060  01236C  0E00               	movlw	0
 18061  01236E  22DD               	addwfc	postdec2,f,c
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;My_header\My_button.h: 62: } else {
 18065  012370  0012               	return	
 18066  012372                     l8086:
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;My_header\My_button.h: 63: if (bt->cnt_sw >= 900)bt->flag.long_hold_7 = 1;
 18070  012372  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18071  012376  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18072  01237A  0E84               	movlw	132
 18073  01237C  5CDE               	subwf	postinc2,w,c
 18074  01237E  0E03               	movlw	3
 18075  012380  58DE               	subwfb	postinc2,w,c
 18076  012382  A0D8               	btfss	status,0,c
 18077  012384  D00A               	goto	l8090
 18078                           
 18079                           ; BSR set to: 0
 18080  012386  0100               	movlb	0	; () banked
 18081  012388  EE20 F002          	lfsr	2,2
 18082  01238C  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18083  01238E  26D9               	addwf	fsr2l,f,c
 18084  012390  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18085  012392  22DA               	addwfc	fsr2h,f,c
 18086  012394  0100               	movlb	0	; () banked
 18087  012396  8EDF               	bsf	indf2,7,c
 18088  012398  D08F               	goto	l8118
 18089  01239A                     l8090:
 18090                           
 18091                           ; BSR set to: 0
 18092                           ;My_header\My_button.h: 64: else if (bt->cnt_sw >= 700)bt->flag.long_hold_6 = 1;
 18093  01239A  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18094  01239E  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18095  0123A2  0EBC               	movlw	188
 18096  0123A4  5CDE               	subwf	postinc2,w,c
 18097  0123A6  0E02               	movlw	2
 18098  0123A8  58DE               	subwfb	postinc2,w,c
 18099  0123AA  A0D8               	btfss	status,0,c
 18100  0123AC  D00A               	goto	l8094
 18101                           
 18102                           ; BSR set to: 0
 18103  0123AE  0100               	movlb	0	; () banked
 18104  0123B0  EE20 F002          	lfsr	2,2
 18105  0123B4  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18106  0123B6  26D9               	addwf	fsr2l,f,c
 18107  0123B8  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18108  0123BA  22DA               	addwfc	fsr2h,f,c
 18109  0123BC  0100               	movlb	0	; () banked
 18110  0123BE  8CDF               	bsf	indf2,6,c
 18111  0123C0  D07B               	goto	l8118
 18112  0123C2                     l8094:
 18113                           
 18114                           ; BSR set to: 0
 18115                           ;My_header\My_button.h: 65: else if (bt->cnt_sw >= 500)bt->flag.long_hold_5 = 1;
 18116  0123C2  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18117  0123C6  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18118  0123CA  0EF4               	movlw	244
 18119  0123CC  5CDE               	subwf	postinc2,w,c
 18120  0123CE  0E01               	movlw	1
 18121  0123D0  58DE               	subwfb	postinc2,w,c
 18122  0123D2  A0D8               	btfss	status,0,c
 18123  0123D4  D00A               	goto	l8098
 18124                           
 18125                           ; BSR set to: 0
 18126  0123D6  0100               	movlb	0	; () banked
 18127  0123D8  EE20 F002          	lfsr	2,2
 18128  0123DC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18129  0123DE  26D9               	addwf	fsr2l,f,c
 18130  0123E0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18131  0123E2  22DA               	addwfc	fsr2h,f,c
 18132  0123E4  0100               	movlb	0	; () banked
 18133  0123E6  8ADF               	bsf	indf2,5,c
 18134  0123E8  D067               	goto	l8118
 18135  0123EA                     l8098:
 18136                           
 18137                           ; BSR set to: 0
 18138                           ;My_header\My_button.h: 66: else if (bt->cnt_sw >= 300)bt->flag.long_hold_4 = 1;
 18139  0123EA  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18140  0123EE  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18141  0123F2  0E2C               	movlw	44
 18142  0123F4  5CDE               	subwf	postinc2,w,c
 18143  0123F6  0E01               	movlw	1
 18144  0123F8  58DE               	subwfb	postinc2,w,c
 18145  0123FA  A0D8               	btfss	status,0,c
 18146  0123FC  D00A               	goto	l8102
 18147                           
 18148                           ; BSR set to: 0
 18149  0123FE  0100               	movlb	0	; () banked
 18150  012400  EE20 F002          	lfsr	2,2
 18151  012404  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18152  012406  26D9               	addwf	fsr2l,f,c
 18153  012408  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18154  01240A  22DA               	addwfc	fsr2h,f,c
 18155  01240C  0100               	movlb	0	; () banked
 18156  01240E  88DF               	bsf	indf2,4,c
 18157  012410  D053               	goto	l8118
 18158  012412                     l8102:
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;My_header\My_button.h: 67: else if (bt->cnt_sw >= 150)bt->flag.long_hold_3 = 1;
 18162  012412  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18163  012416  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18164  01241A  0E01               	movlw	1
 18165  01241C  50DB               	movf	plusw2,w,c
 18166  01241E  E104               	bnz	u8300
 18167  012420  0E96               	movlw	150
 18168  012422  5CDE               	subwf	postinc2,w,c
 18169  012424  A0D8               	btfss	status,0,c
 18170  012426  D00A               	goto	l8106
 18171  012428                     u8300:
 18172                           
 18173                           ; BSR set to: 0
 18174  012428  0100               	movlb	0	; () banked
 18175  01242A  EE20 F002          	lfsr	2,2
 18176  01242E  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18177  012430  26D9               	addwf	fsr2l,f,c
 18178  012432  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18179  012434  22DA               	addwfc	fsr2h,f,c
 18180  012436  0100               	movlb	0	; () banked
 18181  012438  86DF               	bsf	indf2,3,c
 18182  01243A  D03E               	goto	l8118
 18183  01243C                     l8106:
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;My_header\My_button.h: 68: else if (bt->cnt_sw >= 60)bt->flag.long_hold_2 = 1;
 18187  01243C  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18188  012440  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18189  012444  0E01               	movlw	1
 18190  012446  50DB               	movf	plusw2,w,c
 18191  012448  E104               	bnz	u8310
 18192  01244A  0E3C               	movlw	60
 18193  01244C  5CDE               	subwf	postinc2,w,c
 18194  01244E  A0D8               	btfss	status,0,c
 18195  012450  D00A               	goto	l8110
 18196  012452                     u8310:
 18197                           
 18198                           ; BSR set to: 0
 18199  012452  0100               	movlb	0	; () banked
 18200  012454  EE20 F002          	lfsr	2,2
 18201  012458  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18202  01245A  26D9               	addwf	fsr2l,f,c
 18203  01245C  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18204  01245E  22DA               	addwfc	fsr2h,f,c
 18205  012460  0100               	movlb	0	; () banked
 18206  012462  84DF               	bsf	indf2,2,c
 18207  012464  D029               	goto	l8118
 18208  012466                     l8110:
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;My_header\My_button.h: 69: else if (bt->cnt_sw >= 16)bt->flag.long_hold_1 = 1;
 18212  012466  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18213  01246A  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18214  01246E  0E01               	movlw	1
 18215  012470  50DB               	movf	plusw2,w,c
 18216  012472  E104               	bnz	u8320
 18217  012474  0E10               	movlw	16
 18218  012476  5CDE               	subwf	postinc2,w,c
 18219  012478  A0D8               	btfss	status,0,c
 18220  01247A  D00A               	goto	l8114
 18221  01247C                     u8320:
 18222                           
 18223                           ; BSR set to: 0
 18224  01247C  0100               	movlb	0	; () banked
 18225  01247E  EE20 F002          	lfsr	2,2
 18226  012482  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18227  012484  26D9               	addwf	fsr2l,f,c
 18228  012486  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18229  012488  22DA               	addwfc	fsr2h,f,c
 18230  01248A  0100               	movlb	0	; () banked
 18231  01248C  82DF               	bsf	indf2,1,c
 18232  01248E  D014               	goto	l8118
 18233  012490                     l8114:
 18234                           
 18235                           ; BSR set to: 0
 18236                           ;My_header\My_button.h: 70: else if (bt->cnt_sw >= 2)bt->flag.press = 1;
 18237  012490  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18238  012494  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18239  012498  0E01               	movlw	1
 18240  01249A  50DB               	movf	plusw2,w,c
 18241  01249C  E104               	bnz	u8330
 18242  01249E  0E02               	movlw	2
 18243  0124A0  5CDE               	subwf	postinc2,w,c
 18244  0124A2  A0D8               	btfss	status,0,c
 18245  0124A4  D009               	goto	l8118
 18246  0124A6                     u8330:
 18247                           
 18248                           ; BSR set to: 0
 18249  0124A6  0100               	movlb	0	; () banked
 18250  0124A8  EE20 F002          	lfsr	2,2
 18251  0124AC  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18252  0124AE  26D9               	addwf	fsr2l,f,c
 18253  0124B0  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18254  0124B2  22DA               	addwfc	fsr2h,f,c
 18255  0124B4  0100               	movlb	0	; () banked
 18256  0124B6  80DF               	bsf	indf2,0,c
 18257  0124B8                     l8118:
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;My_header\My_button.h: 71: bt->cnt_sw = 0;
 18261  0124B8  C083  FFD9         	movff	button_timer_interrupt@bt,fsr2l
 18262  0124BC  C084  FFDA         	movff	button_timer_interrupt@bt+1,fsr2h
 18263  0124C0  0E00               	movlw	0
 18264  0124C2  6EDE               	movwf	postinc2,c
 18265  0124C4  0E00               	movlw	0
 18266  0124C6  6EDD               	movwf	postdec2,c
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;My_header\My_button.h: 72: bt->flags &= 0x00FF;
 18270  0124C8  0100               	movlb	0	; () banked
 18271  0124CA  EE20 F002          	lfsr	2,2
 18272  0124CE  5183               	movf	button_timer_interrupt@bt& (0+255),w,b
 18273  0124D0  26D9               	addwf	fsr2l,f,c
 18274  0124D2  5184               	movf	(button_timer_interrupt@bt+1)& (0+255),w,b
 18275  0124D4  22DA               	addwfc	fsr2h,f,c
 18276  0124D6  0EFF               	movlw	255
 18277  0124D8  16DE               	andwf	postinc2,f,c
 18278  0124DA  0E00               	movlw	0
 18279  0124DC  16DD               	andwf	postdec2,f,c
 18280  0124DE  0012               	return	
 18281  0124E0                     __end_of_button_timer_interrupt:
 18282                           	opt stack 0
 18283                           tblptru	equ	0xFF8
 18284                           tblptrh	equ	0xFF7
 18285                           tblptrl	equ	0xFF6
 18286                           tablat	equ	0xFF5
 18287                           prodh	equ	0xFF4
 18288                           prodl	equ	0xFF3
 18289                           intcon	equ	0xFF2
 18290                           intcon2	equ	0xFF1
 18291                           postinc0	equ	0xFEE
 18292                           wreg	equ	0xFE8
 18293                           indf1	equ	0xFE7
 18294                           postinc1	equ	0xFE6
 18295                           postdec1	equ	0xFE5
 18296                           fsr1h	equ	0xFE2
 18297                           fsr1l	equ	0xFE1
 18298                           indf2	equ	0xFDF
 18299                           postinc2	equ	0xFDE
 18300                           postdec2	equ	0xFDD
 18301                           plusw2	equ	0xFDB
 18302                           fsr2h	equ	0xFDA
 18303                           fsr2l	equ	0xFD9
 18304                           status	equ	0xFD8
 18305                           
 18306 ;; *************** function ___lwdiv *****************
 18307 ;; Defined at:
 18308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 18309 ;; Parameters:    Size  Location     Type
 18310 ;;  dividend        2   28[BANK0 ] unsigned int 
 18311 ;;  divisor         2   30[BANK0 ] unsigned int 
 18312 ;; Auto vars:     Size  Location     Type
 18313 ;;  quotient        2   33[BANK0 ] unsigned int 
 18314 ;;  counter         1   32[BANK0 ] unsigned char 
 18315 ;; Return value:  Size  Location     Type
 18316 ;;                  2   28[BANK0 ] unsigned int 
 18317 ;; Registers used:
 18318 ;;		wreg, status,2, status,0
 18319 ;; Tracked objects:
 18320 ;;		On entry : 0/0
 18321 ;;		On exit  : 0/0
 18322 ;;		Unchanged: 0/0
 18323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18325 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18327 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18328 ;;Total ram usage:        7 bytes
 18329 ;; Hardware stack levels used:    1
 18330 ;; Hardware stack levels required when called:   11
 18331 ;; This function calls:
 18332 ;;		Nothing
 18333 ;; This function is called by:
 18334 ;;		_ringbuf_put_num
 18335 ;;		_my_utoa
 18336 ;;		_display_LCD
 18337 ;;		_ctmu_set_ratio
 18338 ;;		_command_get_data
 18339 ;;		_ctmu_loop
 18340 ;;		_sprintf
 18341 ;;		_tx_sendn
 18342 ;; This function uses a non-reentrant model
 18343 ;;
 18344                           
 18345                           	psect	text71
 18346  015ECC                     __ptext71:
 18347                           	opt stack 0
 18348  015ECC                     ___lwdiv:
 18349                           	opt stack 16
 18350                           
 18351                           ; BSR set to: 0
 18352                           ;incstack = 0
 18353  015ECC  0E00               	movlw	0
 18354  015ECE  0100               	movlb	0	; () banked
 18355  015ED0  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 18356  015ED2  0E00               	movlw	0
 18357  015ED4  6F81               	movwf	___lwdiv@quotient& (0+255),b
 18358                           
 18359                           ; BSR set to: 0
 18360  015ED6  0100               	movlb	0	; () banked
 18361  015ED8  517E               	movf	___lwdiv@divisor& (0+255),w,b
 18362  015EDA  0100               	movlb	0	; () banked
 18363  015EDC  117F               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 18364  015EDE  B4D8               	btfsc	status,2,c
 18365  015EE0  D02C               	goto	l1991
 18366                           
 18367                           ; BSR set to: 0
 18368  015EE2  0E01               	movlw	1
 18369  015EE4  0100               	movlb	0	; () banked
 18370  015EE6  6F80               	movwf	___lwdiv@counter& (0+255),b
 18371  015EE8  D006               	goto	l9732
 18372  015EEA                     l9730:
 18373                           
 18374                           ; BSR set to: 0
 18375  015EEA  0100               	movlb	0	; () banked
 18376  015EEC  90D8               	bcf	status,0,c
 18377  015EEE  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 18378  015EF0  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 18379  015EF2  0100               	movlb	0	; () banked
 18380  015EF4  2B80               	incf	___lwdiv@counter& (0+255),f,b
 18381  015EF6                     l9732:
 18382                           
 18383                           ; BSR set to: 0
 18384  015EF6  0100               	movlb	0	; () banked
 18385  015EF8  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 18386  015EFA  D7F7               	goto	l9730
 18387  015EFC                     l9734:
 18388                           
 18389                           ; BSR set to: 0
 18390  015EFC  0100               	movlb	0	; () banked
 18391  015EFE  90D8               	bcf	status,0,c
 18392  015F00  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 18393  015F02  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 18394                           
 18395                           ; BSR set to: 0
 18396  015F04  0100               	movlb	0	; () banked
 18397  015F06  517E               	movf	___lwdiv@divisor& (0+255),w,b
 18398  015F08  0100               	movlb	0	; () banked
 18399  015F0A  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 18400  015F0C  0100               	movlb	0	; () banked
 18401  015F0E  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18402  015F10  0100               	movlb	0	; () banked
 18403  015F12  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 18404  015F14  A0D8               	btfss	status,0,c
 18405  015F16  D00A               	goto	l9742
 18406                           
 18407                           ; BSR set to: 0
 18408  015F18  0100               	movlb	0	; () banked
 18409  015F1A  517E               	movf	___lwdiv@divisor& (0+255),w,b
 18410  015F1C  0100               	movlb	0	; () banked
 18411  015F1E  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 18412  015F20  0100               	movlb	0	; () banked
 18413  015F22  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18414  015F24  0100               	movlb	0	; () banked
 18415  015F26  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 18416                           
 18417                           ; BSR set to: 0
 18418  015F28  0100               	movlb	0	; () banked
 18419  015F2A  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 18420  015F2C                     l9742:
 18421                           
 18422                           ; BSR set to: 0
 18423  015F2C  0100               	movlb	0	; () banked
 18424  015F2E  90D8               	bcf	status,0,c
 18425  015F30  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 18426  015F32  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 18427                           
 18428                           ; BSR set to: 0
 18429  015F34  0100               	movlb	0	; () banked
 18430  015F36  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 18431  015F38  D7E1               	goto	l9734
 18432  015F3A                     l1991:
 18433                           
 18434                           ; BSR set to: 0
 18435  015F3A  C081  F07C         	movff	___lwdiv@quotient,?___lwdiv
 18436  015F3E  C082  F07D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18437                           
 18438                           ; BSR set to: 0
 18439  015F42  0012               	return		;funcret
 18440  015F44                     __end_of___lwdiv:
 18441                           	opt stack 0
 18442                           tblptru	equ	0xFF8
 18443                           tblptrh	equ	0xFF7
 18444                           tblptrl	equ	0xFF6
 18445                           tablat	equ	0xFF5
 18446                           prodh	equ	0xFF4
 18447                           prodl	equ	0xFF3
 18448                           intcon	equ	0xFF2
 18449                           intcon2	equ	0xFF1
 18450                           postinc0	equ	0xFEE
 18451                           wreg	equ	0xFE8
 18452                           indf1	equ	0xFE7
 18453                           postinc1	equ	0xFE6
 18454                           postdec1	equ	0xFE5
 18455                           fsr1h	equ	0xFE2
 18456                           fsr1l	equ	0xFE1
 18457                           indf2	equ	0xFDF
 18458                           postinc2	equ	0xFDE
 18459                           postdec2	equ	0xFDD
 18460                           plusw2	equ	0xFDB
 18461                           fsr2h	equ	0xFDA
 18462                           fsr2l	equ	0xFD9
 18463                           status	equ	0xFD8
 18464                           
 18465 ;; *************** function _CTMU_read *****************
 18466 ;; Defined at:
 18467 ;;		line 304 in file "../My_header\My_header.h"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;  ch              1    wreg     unsigned char 
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;  ch              1   16[BANK0 ] unsigned char 
 18472 ;;  i               1   21[BANK0 ] unsigned char 
 18473 ;;  sum             4   17[BANK0 ] unsigned long 
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  2   13[BANK0 ] unsigned int 
 18476 ;; Registers used:
 18477 ;;		wreg, status,2, status,0, cstack
 18478 ;; Tracked objects:
 18479 ;;		On entry : 0/0
 18480 ;;		On exit  : 0/0
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18484 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18486 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18487 ;;Total ram usage:        9 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; Hardware stack levels required when called:   12
 18490 ;; This function calls:
 18491 ;;		___lldiv
 18492 ;; This function is called by:
 18493 ;;		_ctmu_set_ratio
 18494 ;;		_ctmu_loop
 18495 ;; This function uses a non-reentrant model
 18496 ;;
 18497                           
 18498                           	psect	text72
 18499  014E84                     __ptext72:
 18500                           	opt stack 0
 18501  014E84                     _CTMU_read:
 18502                           	opt stack 15
 18503                           
 18504                           ; BSR set to: 0
 18505                           ;incstack = 0
 18506                           ;CTMU_read@ch stored from wreg
 18507  014E84  0100               	movlb	0	; () banked
 18508  014E86  6F70               	movwf	CTMU_read@ch& (0+255),b
 18509                           
 18510                           ;My_header\My_header.h: 305: uint32_t sum = 0;
 18511  014E88  0E00               	movlw	0
 18512  014E8A  0100               	movlb	0	; () banked
 18513  014E8C  6F71               	movwf	CTMU_read@sum& (0+255),b
 18514  014E8E  0E00               	movlw	0
 18515  014E90  6F72               	movwf	(CTMU_read@sum+1)& (0+255),b
 18516  014E92  0E00               	movlw	0
 18517  014E94  6F73               	movwf	(CTMU_read@sum+2)& (0+255),b
 18518  014E96  0E00               	movlw	0
 18519  014E98  6F74               	movwf	(CTMU_read@sum+3)& (0+255),b
 18520                           
 18521                           ;My_header\My_header.h: 306: for (uint8_t i = 0; i < 10; i++) {
 18522  014E9A  0E00               	movlw	0
 18523  014E9C  0100               	movlb	0	; () banked
 18524  014E9E  6F75               	movwf	CTMU_read@i& (0+255),b
 18525  014EA0                     l10096:
 18526                           
 18527                           ; BSR set to: 0
 18528  014EA0  0E09               	movlw	9
 18529  014EA2  0100               	movlb	0	; () banked
 18530  014EA4  6575               	cpfsgt	CTMU_read@i& (0+255),b
 18531  014EA6  D001               	goto	l10100
 18532  014EA8  D02B               	goto	l10128
 18533  014EAA                     l10100:
 18534                           
 18535                           ; BSR set to: 0
 18536                           ;My_header\My_header.h: 307: ADCON0bits.CHS = ch;
 18537  014EAA  C070  F06F         	movff	CTMU_read@ch,??_CTMU_read
 18538  014EAE  0100               	movlb	0	; () banked
 18539  014EB0  476F               	rlncf	??_CTMU_read& (0+255),f,b
 18540  014EB2  476F               	rlncf	??_CTMU_read& (0+255),f,b
 18541  014EB4  50C2               	movf	4034,w,c	;volatile
 18542  014EB6  0100               	movlb	0	; () banked
 18543  014EB8  196F               	xorwf	??_CTMU_read& (0+255),w,b
 18544  014EBA  0BC3               	andlw	-61
 18545  014EBC  196F               	xorwf	??_CTMU_read& (0+255),w,b
 18546  014EBE  6EC2               	movwf	4034,c	;volatile
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;My_header\My_header.h: 308: CTMUCONHbits.CTMUEN = 1;
 18550  014EC0  8EB3               	bsf	4019,7,c	;volatile
 18551                           
 18552                           ; BSR set to: 0
 18553                           ;My_header\My_header.h: 309: CTMUCONLbits.EDG1STAT = 0;
 18554  014EC2  90B2               	bcf	4018,0,c	;volatile
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;My_header\My_header.h: 310: CTMUCONLbits.EDG2STAT = 0;
 18558  014EC4  92B2               	bcf	4018,1,c	;volatile
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;My_header\My_header.h: 313: CTMUCONHbits.IDISSEN = 1;
 18562  014EC6  82B3               	bsf	4019,1,c	;volatile
 18563                           
 18564                           ; BSR set to: 0
 18565                           ;My_header\My_header.h: 314: _delay((unsigned long)((20)*(48000000/4000000.0)));
 18566  014EC8  0E50               	movlw	80
 18567  014ECA                     u13737:
 18568  014ECA  2EE8               	decfsz	wreg,f,c
 18569  014ECC  D7FE               	goto	u13737
 18570                           
 18571                           ;My_header\My_header.h: 315: CTMUCONHbits.IDISSEN = 0;
 18572  014ECE  92B3               	bcf	4019,1,c	;volatile
 18573                           
 18574                           ;My_header\My_header.h: 317: CTMUCONLbits.EDG1STAT = 1;
 18575  014ED0  80B2               	bsf	4018,0,c	;volatile
 18576                           
 18577                           ;My_header\My_header.h: 318: _delay((unsigned long)((5)*(48000000/4000000.0)));
 18578  014ED2  0E14               	movlw	20
 18579  014ED4                     u13747:
 18580  014ED4  2EE8               	decfsz	wreg,f,c
 18581  014ED6  D7FE               	goto	u13747
 18582                           
 18583                           ;My_header\My_header.h: 319: CTMUCONLbits.EDG1STAT = 0;
 18584  014ED8  90B2               	bcf	4018,0,c	;volatile
 18585                           
 18586                           ;My_header\My_header.h: 321: PIR1bits.ADIF = 0;
 18587  014EDA  9C9E               	bcf	3998,6,c	;volatile
 18588                           
 18589                           ;My_header\My_header.h: 322: ADCON0bits.GO = 1;
 18590  014EDC  82C2               	bsf	4034,1,c	;volatile
 18591  014EDE                     l249:
 18592  014EDE  AC9E               	btfss	3998,6,c	;volatile
 18593  014EE0  D7FE               	goto	l249
 18594                           
 18595                           ;My_header\My_header.h: 324: sum += ADRES;
 18596  014EE2  50C3               	movf	4035,w,c	;volatile
 18597  014EE4  0100               	movlb	0	; () banked
 18598  014EE6  2771               	addwf	CTMU_read@sum& (0+255),f,b
 18599  014EE8  50C4               	movf	4036,w,c	;volatile
 18600  014EEA  0100               	movlb	0	; () banked
 18601  014EEC  2372               	addwfc	(CTMU_read@sum+1)& (0+255),f,b
 18602  014EEE  0E00               	movlw	0
 18603  014EF0  0100               	movlb	0	; () banked
 18604  014EF2  2373               	addwfc	(CTMU_read@sum+2)& (0+255),f,b
 18605  014EF4  0E00               	movlw	0
 18606  014EF6  0100               	movlb	0	; () banked
 18607  014EF8  2374               	addwfc	(CTMU_read@sum+3)& (0+255),f,b
 18608  014EFA  0100               	movlb	0	; () banked
 18609  014EFC  2B75               	incf	CTMU_read@i& (0+255),f,b
 18610  014EFE  D7D0               	goto	l10096
 18611  014F00                     l10128:
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;My_header\My_header.h: 325: }
 18615                           ;My_header\My_header.h: 326: return sum / 10 / 4;
 18616  014F00  C071  F060         	movff	CTMU_read@sum,___lldiv@dividend
 18617  014F04  C072  F061         	movff	CTMU_read@sum+1,___lldiv@dividend+1
 18618  014F08  C073  F062         	movff	CTMU_read@sum+2,___lldiv@dividend+2
 18619  014F0C  C074  F063         	movff	CTMU_read@sum+3,___lldiv@dividend+3
 18620  014F10  0E0A               	movlw	10
 18621  014F12  0100               	movlb	0	; () banked
 18622  014F14  6F64               	movwf	___lldiv@divisor& (0+255),b
 18623  014F16  0E00               	movlw	0
 18624  014F18  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 18625  014F1A  0E00               	movlw	0
 18626  014F1C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 18627  014F1E  0E00               	movlw	0
 18628  014F20  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 18629  014F22  EC02  F0A8         	call	___lldiv	;wreg free
 18630  014F26  0E03               	movlw	3
 18631  014F28  D007               	goto	u11240
 18632  014F2A                     u11245:
 18633  014F2A  0100               	movlb	0	; () banked
 18634  014F2C  90D8               	bcf	status,0,c
 18635  014F2E  3363               	rrcf	(?___lldiv+3)& (0+255),f,b
 18636  014F30  3362               	rrcf	(?___lldiv+2)& (0+255),f,b
 18637  014F32  0100               	movlb	0	; () banked
 18638  014F34  3361               	rrcf	(?___lldiv+1)& (0+255),f,b
 18639  014F36  3360               	rrcf	?___lldiv& (0+255),f,b
 18640  014F38                     u11240:
 18641  014F38  2EE8               	decfsz	wreg,f,c
 18642  014F3A  D7F7               	goto	u11245
 18643  014F3C  C060  F06D         	movff	?___lldiv,?_CTMU_read
 18644  014F40  C061  F06E         	movff	?___lldiv+1,?_CTMU_read+1
 18645  014F44  0012               	return	
 18646  014F46                     __end_of_CTMU_read:
 18647                           	opt stack 0
 18648                           tblptru	equ	0xFF8
 18649                           tblptrh	equ	0xFF7
 18650                           tblptrl	equ	0xFF6
 18651                           tablat	equ	0xFF5
 18652                           prodh	equ	0xFF4
 18653                           prodl	equ	0xFF3
 18654                           intcon	equ	0xFF2
 18655                           intcon2	equ	0xFF1
 18656                           postinc0	equ	0xFEE
 18657                           wreg	equ	0xFE8
 18658                           indf1	equ	0xFE7
 18659                           postinc1	equ	0xFE6
 18660                           postdec1	equ	0xFE5
 18661                           fsr1h	equ	0xFE2
 18662                           fsr1l	equ	0xFE1
 18663                           indf2	equ	0xFDF
 18664                           postinc2	equ	0xFDE
 18665                           postdec2	equ	0xFDD
 18666                           plusw2	equ	0xFDB
 18667                           fsr2h	equ	0xFDA
 18668                           fsr2l	equ	0xFD9
 18669                           status	equ	0xFD8
 18670                           
 18671 ;; *************** function ___lldiv *****************
 18672 ;; Defined at:
 18673 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 18674 ;; Parameters:    Size  Location     Type
 18675 ;;  dividend        4    0[BANK0 ] unsigned long 
 18676 ;;  divisor         4    4[BANK0 ] unsigned long 
 18677 ;; Auto vars:     Size  Location     Type
 18678 ;;  quotient        4    8[BANK0 ] unsigned long 
 18679 ;;  counter         1   12[BANK0 ] unsigned char 
 18680 ;; Return value:  Size  Location     Type
 18681 ;;                  4    0[BANK0 ] unsigned long 
 18682 ;; Registers used:
 18683 ;;		wreg, status,2, status,0
 18684 ;; Tracked objects:
 18685 ;;		On entry : 0/0
 18686 ;;		On exit  : 0/0
 18687 ;;		Unchanged: 0/0
 18688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18689 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18690 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18692 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18693 ;;Total ram usage:       13 bytes
 18694 ;; Hardware stack levels used:    1
 18695 ;; Hardware stack levels required when called:   11
 18696 ;; This function calls:
 18697 ;;		Nothing
 18698 ;; This function is called by:
 18699 ;;		_CTMU_read
 18700 ;;		_get_quot_rem
 18701 ;;		_display_LCD
 18702 ;;		_command_get_data
 18703 ;;		_my_utoa32
 18704 ;; This function uses a non-reentrant model
 18705 ;;
 18706                           
 18707                           	psect	text73
 18708  015004                     __ptext73:
 18709                           	opt stack 0
 18710  015004                     ___lldiv:
 18711                           	opt stack 17
 18712                           
 18713                           ; BSR set to: 0
 18714                           ;incstack = 0
 18715  015004  0E00               	movlw	0
 18716  015006  0100               	movlb	0	; () banked
 18717  015008  6F68               	movwf	___lldiv@quotient& (0+255),b
 18718  01500A  0E00               	movlw	0
 18719  01500C  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 18720  01500E  0E00               	movlw	0
 18721  015010  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 18722  015012  0E00               	movlw	0
 18723  015014  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 18724                           
 18725                           ; BSR set to: 0
 18726  015016  0100               	movlb	0	; () banked
 18727  015018  5164               	movf	___lldiv@divisor& (0+255),w,b
 18728  01501A  0100               	movlb	0	; () banked
 18729  01501C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 18730  01501E  0100               	movlb	0	; () banked
 18731  015020  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 18732  015022  0100               	movlb	0	; () banked
 18733  015024  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 18734  015026  B4D8               	btfsc	status,2,c
 18735  015028  D042               	goto	l1938
 18736                           
 18737                           ; BSR set to: 0
 18738  01502A  0E01               	movlw	1
 18739  01502C  0100               	movlb	0	; () banked
 18740  01502E  6F6C               	movwf	___lldiv@counter& (0+255),b
 18741  015030  D008               	goto	l9630
 18742  015032                     l9628:
 18743                           
 18744                           ; BSR set to: 0
 18745  015032  0100               	movlb	0	; () banked
 18746  015034  90D8               	bcf	status,0,c
 18747  015036  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 18748  015038  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 18749  01503A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 18750  01503C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 18751  01503E  0100               	movlb	0	; () banked
 18752  015040  2B6C               	incf	___lldiv@counter& (0+255),f,b
 18753  015042                     l9630:
 18754                           
 18755                           ; BSR set to: 0
 18756  015042  0100               	movlb	0	; () banked
 18757  015044  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 18758  015046  D7F5               	goto	l9628
 18759  015048                     l9632:
 18760                           
 18761                           ; BSR set to: 0
 18762  015048  0100               	movlb	0	; () banked
 18763  01504A  90D8               	bcf	status,0,c
 18764  01504C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 18765  01504E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 18766  015050  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 18767  015052  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 18768                           
 18769                           ; BSR set to: 0
 18770  015054  0100               	movlb	0	; () banked
 18771  015056  5164               	movf	___lldiv@divisor& (0+255),w,b
 18772  015058  0100               	movlb	0	; () banked
 18773  01505A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 18774  01505C  0100               	movlb	0	; () banked
 18775  01505E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18776  015060  0100               	movlb	0	; () banked
 18777  015062  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 18778  015064  0100               	movlb	0	; () banked
 18779  015066  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18780  015068  0100               	movlb	0	; () banked
 18781  01506A  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 18782  01506C  0100               	movlb	0	; () banked
 18783  01506E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18784  015070  0100               	movlb	0	; () banked
 18785  015072  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 18786  015074  A0D8               	btfss	status,0,c
 18787  015076  D012               	goto	l9640
 18788                           
 18789                           ; BSR set to: 0
 18790  015078  0100               	movlb	0	; () banked
 18791  01507A  5164               	movf	___lldiv@divisor& (0+255),w,b
 18792  01507C  0100               	movlb	0	; () banked
 18793  01507E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 18794  015080  0100               	movlb	0	; () banked
 18795  015082  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18796  015084  0100               	movlb	0	; () banked
 18797  015086  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 18798  015088  0100               	movlb	0	; () banked
 18799  01508A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18800  01508C  0100               	movlb	0	; () banked
 18801  01508E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 18802  015090  0100               	movlb	0	; () banked
 18803  015092  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18804  015094  0100               	movlb	0	; () banked
 18805  015096  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 18806                           
 18807                           ; BSR set to: 0
 18808  015098  0100               	movlb	0	; () banked
 18809  01509A  8168               	bsf	___lldiv@quotient& (0+255),0,b
 18810  01509C                     l9640:
 18811                           
 18812                           ; BSR set to: 0
 18813  01509C  0100               	movlb	0	; () banked
 18814  01509E  90D8               	bcf	status,0,c
 18815  0150A0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 18816  0150A2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 18817  0150A4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 18818  0150A6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 18819                           
 18820                           ; BSR set to: 0
 18821  0150A8  0100               	movlb	0	; () banked
 18822  0150AA  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 18823  0150AC  D7CD               	goto	l9632
 18824  0150AE                     l1938:
 18825                           
 18826                           ; BSR set to: 0
 18827  0150AE  C068  F060         	movff	___lldiv@quotient,?___lldiv
 18828  0150B2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 18829  0150B6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 18830  0150BA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 18831                           
 18832                           ; BSR set to: 0
 18833  0150BE  0012               	return		;funcret
 18834  0150C0                     __end_of___lldiv:
 18835                           	opt stack 0
 18836                           tblptru	equ	0xFF8
 18837                           tblptrh	equ	0xFF7
 18838                           tblptrl	equ	0xFF6
 18839                           tablat	equ	0xFF5
 18840                           prodh	equ	0xFF4
 18841                           prodl	equ	0xFF3
 18842                           intcon	equ	0xFF2
 18843                           intcon2	equ	0xFF1
 18844                           postinc0	equ	0xFEE
 18845                           wreg	equ	0xFE8
 18846                           indf1	equ	0xFE7
 18847                           postinc1	equ	0xFE6
 18848                           postdec1	equ	0xFE5
 18849                           fsr1h	equ	0xFE2
 18850                           fsr1l	equ	0xFE1
 18851                           indf2	equ	0xFDF
 18852                           postinc2	equ	0xFDE
 18853                           postdec2	equ	0xFDD
 18854                           plusw2	equ	0xFDB
 18855                           fsr2h	equ	0xFDA
 18856                           fsr2l	equ	0xFD9
 18857                           status	equ	0xFD8
 18858                           
 18859 ;; *************** function _USB_loop *****************
 18860 ;; Defined at:
 18861 ;;		line 620 in file "tasks.h"
 18862 ;; Parameters:    Size  Location     Type
 18863 ;;		None
 18864 ;; Auto vars:     Size  Location     Type
 18865 ;;  rx_len          2   42[BANK0 ] int 
 18866 ;;  data            1   44[BANK0 ] unsigned char 
 18867 ;; Return value:  Size  Location     Type
 18868 ;;		None               void
 18869 ;; Registers used:
 18870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18871 ;; Tracked objects:
 18872 ;;		On entry : 0/0
 18873 ;;		On exit  : 0/0
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;Total ram usage:        3 bytes
 18881 ;; Hardware stack levels used:    1
 18882 ;; Hardware stack levels required when called:   14
 18883 ;; This function calls:
 18884 ;;		_get_string_usb
 18885 ;;		_put_string_usb
 18886 ;;		_ringbuf_num
 18887 ;;		_ringbuf_pop
 18888 ;;		_ringbuf_put
 18889 ;; This function is called by:
 18890 ;;		_main
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894                           	psect	text74
 18895  0158C8                     __ptext74:
 18896                           	opt stack 0
 18897  0158C8                     _USB_loop:
 18898                           	opt stack 16
 18899                           
 18900                           ;tasks.h: 621: char data;
 18901                           ;tasks.h: 622: int rx_len;
 18902                           ;tasks.h: 623: rx_len = get_string_usb(&data, 1);
 18903                           
 18904                           ; BSR set to: 0
 18905                           ;incstack = 0
 18906  0158C8  0E8C               	movlw	low USB_loop@data
 18907  0158CA  0100               	movlb	0	; () banked
 18908  0158CC  6F6D               	movwf	get_string_usb@s& (0+255),b
 18909  0158CE  0E00               	movlw	high USB_loop@data
 18910  0158D0  0100               	movlb	0	; () banked
 18911  0158D2  6F6E               	movwf	(get_string_usb@s+1)& (0+255),b
 18912  0158D4  0E00               	movlw	0
 18913  0158D6  0100               	movlb	0	; () banked
 18914  0158D8  6F70               	movwf	(get_string_usb@len+1)& (0+255),b
 18915  0158DA  0E01               	movlw	1
 18916  0158DC  6F6F               	movwf	get_string_usb@len& (0+255),b
 18917  0158DE  ECAD  F0B2         	call	_get_string_usb	;wreg free
 18918  0158E2  C06D  F08A         	movff	?_get_string_usb,USB_loop@rx_len
 18919  0158E6  C06E  F08B         	movff	?_get_string_usb+1,USB_loop@rx_len+1
 18920                           
 18921                           ;tasks.h: 624: if (rx_len) {
 18922  0158EA  0100               	movlb	0	; () banked
 18923  0158EC  518A               	movf	USB_loop@rx_len& (0+255),w,b
 18924  0158EE  0100               	movlb	0	; () banked
 18925  0158F0  118B               	iorwf	(USB_loop@rx_len+1)& (0+255),w,b
 18926  0158F2  B4D8               	btfsc	status,2,c
 18927  0158F4  D00A               	goto	l894
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;tasks.h: 625: ringbuf_put(&usb_rx, data);
 18931  0158F6  0EEE               	movlw	low _usb_rx
 18932  0158F8  0100               	movlb	0	; () banked
 18933  0158FA  6F83               	movwf	ringbuf_put@rb& (0+255),b
 18934  0158FC  0E02               	movlw	high _usb_rx
 18935  0158FE  0100               	movlb	0	; () banked
 18936  015900  6F84               	movwf	(ringbuf_put@rb+1)& (0+255),b
 18937  015902  C08C  F085         	movff	USB_loop@data,ringbuf_put@asciicode
 18938  015906  EC77  F0A4         	call	_ringbuf_put	;wreg free
 18939  01590A                     l894:
 18940                           
 18941                           ;tasks.h: 626: }
 18942                           ;tasks.h: 627: if (ringbuf_num(&usb_tx)) {
 18943  01590A  0EF6               	movlw	low _usb_tx
 18944  01590C  0100               	movlb	0	; () banked
 18945  01590E  6F60               	movwf	ringbuf_num@rb& (0+255),b
 18946  015910  0E02               	movlw	high _usb_tx
 18947  015912  0100               	movlb	0	; () banked
 18948  015914  6F61               	movwf	(ringbuf_num@rb+1)& (0+255),b
 18949  015916  EC8C  F0A0         	call	_ringbuf_num	;wreg free
 18950  01591A  0100               	movlb	0	; () banked
 18951  01591C  5160               	movf	?_ringbuf_num& (0+255),w,b
 18952  01591E  0100               	movlb	0	; () banked
 18953  015920  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 18954  015922  B4D8               	btfsc	status,2,c
 18955  015924  0012               	return	
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;tasks.h: 628: data = ringbuf_pop(&usb_tx);
 18959  015926  0EF6               	movlw	low _usb_tx
 18960  015928  0100               	movlb	0	; () banked
 18961  01592A  6F68               	movwf	ringbuf_pop@rb& (0+255),b
 18962  01592C  0E02               	movlw	high _usb_tx
 18963  01592E  0100               	movlb	0	; () banked
 18964  015930  6F69               	movwf	(ringbuf_pop@rb+1)& (0+255),b
 18965  015932  EC18  F0A6         	call	_ringbuf_pop	;wreg free
 18966  015936  0100               	movlb	0	; () banked
 18967  015938  6F8C               	movwf	USB_loop@data& (0+255),b
 18968  01593A                     l11596:
 18969                           
 18970                           ; BSR set to: 0
 18971  01593A  0E8C               	movlw	low USB_loop@data
 18972  01593C  0100               	movlb	0	; () banked
 18973  01593E  6F6C               	movwf	put_string_usb@s& (0+255),b
 18974  015940  0E00               	movlw	high USB_loop@data
 18975  015942  0100               	movlb	0	; () banked
 18976  015944  6F6D               	movwf	(put_string_usb@s+1)& (0+255),b
 18977  015946  0E00               	movlw	0
 18978  015948  0100               	movlb	0	; () banked
 18979  01594A  6F6F               	movwf	(put_string_usb@len+1)& (0+255),b
 18980  01594C  0E01               	movlw	1
 18981  01594E  6F6E               	movwf	put_string_usb@len& (0+255),b
 18982  015950  EC3D  F0B3         	call	_put_string_usb	;wreg free
 18983  015954  0100               	movlb	0	; () banked
 18984  015956  516C               	movf	?_put_string_usb& (0+255),w,b
 18985  015958  0100               	movlb	0	; () banked
 18986  01595A  116D               	iorwf	(?_put_string_usb+1)& (0+255),w,b
 18987  01595C  B4D8               	btfsc	status,2,c
 18988  01595E  0012               	return	
 18989  015960  D7EC               	goto	l11596
 18990  015962                     __end_of_USB_loop:
 18991                           	opt stack 0
 18992                           tblptru	equ	0xFF8
 18993                           tblptrh	equ	0xFF7
 18994                           tblptrl	equ	0xFF6
 18995                           tablat	equ	0xFF5
 18996                           prodh	equ	0xFF4
 18997                           prodl	equ	0xFF3
 18998                           intcon	equ	0xFF2
 18999                           intcon2	equ	0xFF1
 19000                           postinc0	equ	0xFEE
 19001                           wreg	equ	0xFE8
 19002                           indf1	equ	0xFE7
 19003                           postinc1	equ	0xFE6
 19004                           postdec1	equ	0xFE5
 19005                           fsr1h	equ	0xFE2
 19006                           fsr1l	equ	0xFE1
 19007                           indf2	equ	0xFDF
 19008                           postinc2	equ	0xFDE
 19009                           postdec2	equ	0xFDD
 19010                           plusw2	equ	0xFDB
 19011                           fsr2h	equ	0xFDA
 19012                           fsr2l	equ	0xFD9
 19013                           status	equ	0xFD8
 19014                           
 19015 ;; *************** function _ringbuf_put *****************
 19016 ;; Defined at:
 19017 ;;		line 39 in file "../My_header\My_ringbuf.h"
 19018 ;; Parameters:    Size  Location     Type
 19019 ;;  rb              2   35[BANK0 ] PTR struct ringbuf
 19020 ;;		 -> usb_tx(8), usb_rx(8), my_terminal_loop@command(8), rx_buf(8), 
 19021 ;;		 -> tx_buf(8), 
 19022 ;;  asciicode       1   37[BANK0 ] unsigned char 
 19023 ;; Auto vars:     Size  Location     Type
 19024 ;;		None
 19025 ;; Return value:  Size  Location     Type
 19026 ;;		None               void
 19027 ;; Registers used:
 19028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19029 ;; Tracked objects:
 19030 ;;		On entry : 0/0
 19031 ;;		On exit  : 0/0
 19032 ;;		Unchanged: 0/0
 19033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19036 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19037 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19038 ;;Total ram usage:        7 bytes
 19039 ;; Hardware stack levels used:    1
 19040 ;; Hardware stack levels required when called:   12
 19041 ;; This function calls:
 19042 ;;		_ringbuf_num
 19043 ;; This function is called by:
 19044 ;;		_ringbuf_put_num
 19045 ;;		_ringbuf_put_str
 19046 ;;		_my_terminal_loop
 19047 ;;		_command_get_data
 19048 ;;		_USB_loop
 19049 ;;		_UART_ISR
 19050 ;;		_tx_send
 19051 ;;		_tx_sends
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           	psect	text75
 19056  0148EE                     __ptext75:
 19057                           	opt stack 0
 19058  0148EE                     _ringbuf_put:
 19059                           	opt stack 16
 19060                           
 19061                           ;My_header\My_ringbuf.h: 40: if (ringbuf_num(rb) < rb->size) {
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;incstack = 0
 19065  0148EE  C083  F060         	movff	ringbuf_put@rb,ringbuf_num@rb
 19066  0148F2  C084  F061         	movff	ringbuf_put@rb+1,ringbuf_num@rb+1
 19067  0148F6  EC8C  F0A0         	call	_ringbuf_num	;wreg free
 19068  0148FA  0100               	movlb	0	; () banked
 19069  0148FC  EE20 F002          	lfsr	2,2
 19070  014900  5183               	movf	ringbuf_put@rb& (0+255),w,b
 19071  014902  26D9               	addwf	fsr2l,f,c
 19072  014904  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 19073  014906  22DA               	addwfc	fsr2h,f,c
 19074  014908  50DE               	movf	postinc2,w,c
 19075  01490A  0100               	movlb	0	; () banked
 19076  01490C  5D60               	subwf	?_ringbuf_num& (0+255),w,b
 19077  01490E  50DE               	movf	postinc2,w,c
 19078  014910  0100               	movlb	0	; () banked
 19079  014912  5961               	subwfb	(?_ringbuf_num+1)& (0+255),w,b
 19080  014914  B0D8               	btfsc	status,0,c
 19081  014916  0012               	return	
 19082                           
 19083                           ; BSR set to: 0
 19084                           ;My_header\My_ringbuf.h: 41: rb->buf[rb->head] = asciicode;
 19085  014918  0100               	movlb	0	; () banked
 19086  01491A  EE20 F004          	lfsr	2,4
 19087  01491E  5183               	movf	ringbuf_put@rb& (0+255),w,b
 19088  014920  26D9               	addwf	fsr2l,f,c
 19089  014922  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 19090  014924  22DA               	addwfc	fsr2h,f,c
 19091  014926  CFDE F086          	movff	postinc2,??_ringbuf_put
 19092  01492A  CFDD F087          	movff	postdec2,??_ringbuf_put+1
 19093  01492E  C083  FFD9         	movff	ringbuf_put@rb,fsr2l
 19094  014932  C084  FFDA         	movff	ringbuf_put@rb+1,fsr2h
 19095  014936  CFDE F088          	movff	postinc2,??_ringbuf_put+2
 19096  01493A  CFDD F089          	movff	postdec2,??_ringbuf_put+3
 19097  01493E  0100               	movlb	0	; () banked
 19098  014940  5186               	movf	??_ringbuf_put& (0+255),w,b
 19099  014942  0100               	movlb	0	; () banked
 19100  014944  2588               	addwf	(??_ringbuf_put+2)& (0+255),w,b
 19101  014946  6ED9               	movwf	fsr2l,c
 19102  014948  0100               	movlb	0	; () banked
 19103  01494A  5187               	movf	(??_ringbuf_put+1)& (0+255),w,b
 19104  01494C  0100               	movlb	0	; () banked
 19105  01494E  2189               	addwfc	(??_ringbuf_put+3)& (0+255),w,b
 19106  014950  6EDA               	movwf	fsr2h,c
 19107  014952  C085  FFDF         	movff	ringbuf_put@asciicode,indf2
 19108                           
 19109                           ; BSR set to: 0
 19110                           ;My_header\My_ringbuf.h: 42: if (rb->head + 1 < rb->size) rb->head++;
 19111  014956  0100               	movlb	0	; () banked
 19112  014958  EE20 F002          	lfsr	2,2
 19113  01495C  5183               	movf	ringbuf_put@rb& (0+255),w,b
 19114  01495E  26D9               	addwf	fsr2l,f,c
 19115  014960  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 19116  014962  22DA               	addwfc	fsr2h,f,c
 19117  014964  0100               	movlb	0	; () banked
 19118  014966  EE10 F004          	lfsr	1,4
 19119  01496A  5183               	movf	ringbuf_put@rb& (0+255),w,b
 19120  01496C  26E1               	addwf	fsr1l,f,c
 19121  01496E  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 19122  014970  22E2               	addwfc	fsr1h,f,c
 19123  014972  CFE6 F088          	movff	postinc1,??_ringbuf_put+2
 19124  014976  CFE5 F089          	movff	postdec1,??_ringbuf_put+3
 19125  01497A  0E01               	movlw	1
 19126  01497C  0100               	movlb	0	; () banked
 19127  01497E  2788               	addwf	(??_ringbuf_put+2)& (0+255),f,b
 19128  014980  0E00               	movlw	0
 19129  014982  2389               	addwfc	(??_ringbuf_put+3)& (0+255),f,b
 19130  014984  50DE               	movf	postinc2,w,c
 19131  014986  0100               	movlb	0	; () banked
 19132  014988  5D88               	subwf	(??_ringbuf_put+2)& (0+255),w,b
 19133  01498A  50DE               	movf	postinc2,w,c
 19134  01498C  0100               	movlb	0	; () banked
 19135  01498E  5989               	subwfb	(??_ringbuf_put+3)& (0+255),w,b
 19136  014990  B0D8               	btfsc	status,0,c
 19137  014992  D00B               	goto	l9652
 19138                           
 19139                           ; BSR set to: 0
 19140  014994  0100               	movlb	0	; () banked
 19141  014996  EE20 F004          	lfsr	2,4
 19142  01499A  5183               	movf	ringbuf_put@rb& (0+255),w,b
 19143  01499C  26D9               	addwf	fsr2l,f,c
 19144  01499E  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 19145  0149A0  22DA               	addwfc	fsr2h,f,c
 19146  0149A2  2ADE               	incf	postinc2,f,c
 19147  0149A4  0E00               	movlw	0
 19148  0149A6  22DD               	addwfc	postdec2,f,c
 19149  0149A8  0012               	return	
 19150  0149AA                     l9652:
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;My_header\My_ringbuf.h: 43: else rb->head = 0;
 19154  0149AA  0100               	movlb	0	; () banked
 19155  0149AC  EE20 F004          	lfsr	2,4
 19156  0149B0  5183               	movf	ringbuf_put@rb& (0+255),w,b
 19157  0149B2  26D9               	addwf	fsr2l,f,c
 19158  0149B4  5184               	movf	(ringbuf_put@rb+1)& (0+255),w,b
 19159  0149B6  22DA               	addwfc	fsr2h,f,c
 19160  0149B8  0E00               	movlw	0
 19161  0149BA  6EDE               	movwf	postinc2,c
 19162  0149BC  0E00               	movlw	0
 19163  0149BE  6EDD               	movwf	postdec2,c
 19164                           
 19165                           ; BSR set to: 0
 19166  0149C0  0012               	return	
 19167  0149C2                     __end_of_ringbuf_put:
 19168                           	opt stack 0
 19169                           tblptru	equ	0xFF8
 19170                           tblptrh	equ	0xFF7
 19171                           tblptrl	equ	0xFF6
 19172                           tablat	equ	0xFF5
 19173                           prodh	equ	0xFF4
 19174                           prodl	equ	0xFF3
 19175                           intcon	equ	0xFF2
 19176                           intcon2	equ	0xFF1
 19177                           postinc0	equ	0xFEE
 19178                           wreg	equ	0xFE8
 19179                           indf1	equ	0xFE7
 19180                           postinc1	equ	0xFE6
 19181                           postdec1	equ	0xFE5
 19182                           fsr1h	equ	0xFE2
 19183                           fsr1l	equ	0xFE1
 19184                           indf2	equ	0xFDF
 19185                           postinc2	equ	0xFDE
 19186                           postdec2	equ	0xFDD
 19187                           plusw2	equ	0xFDB
 19188                           fsr2h	equ	0xFDA
 19189                           fsr2l	equ	0xFD9
 19190                           status	equ	0xFD8
 19191                           
 19192 ;; *************** function _ringbuf_pop *****************
 19193 ;; Defined at:
 19194 ;;		line 64 in file "../My_header\My_ringbuf.h"
 19195 ;; Parameters:    Size  Location     Type
 19196 ;;  rb              2    8[BANK0 ] PTR struct ringbuf
 19197 ;;		 -> usb_tx(8), usb_rx(8), my_terminal_loop@command(8), tx_buf(8), 
 19198 ;; Auto vars:     Size  Location     Type
 19199 ;;  ret             1   14[BANK0 ] unsigned char 
 19200 ;; Return value:  Size  Location     Type
 19201 ;;                  1    wreg      unsigned char 
 19202 ;; Registers used:
 19203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19204 ;; Tracked objects:
 19205 ;;		On entry : 0/0
 19206 ;;		On exit  : 0/0
 19207 ;;		Unchanged: 0/0
 19208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19211 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19212 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19213 ;;Total ram usage:        7 bytes
 19214 ;; Hardware stack levels used:    1
 19215 ;; Hardware stack levels required when called:   12
 19216 ;; This function calls:
 19217 ;;		_ringbuf_num
 19218 ;; This function is called by:
 19219 ;;		_my_terminal_loop
 19220 ;;		_USB_loop
 19221 ;;		_UART_ISR
 19222 ;; This function uses a non-reentrant model
 19223 ;;
 19224                           
 19225                           	psect	text76
 19226  014C30                     __ptext76:
 19227                           	opt stack 0
 19228  014C30                     _ringbuf_pop:
 19229                           	opt stack 17
 19230                           
 19231                           ;My_header\My_ringbuf.h: 65: if (ringbuf_num(rb)) {
 19232                           
 19233                           ; BSR set to: 0
 19234                           ;incstack = 0
 19235  014C30  C068  F060         	movff	ringbuf_pop@rb,ringbuf_num@rb
 19236  014C34  C069  F061         	movff	ringbuf_pop@rb+1,ringbuf_num@rb+1
 19237  014C38  EC8C  F0A0         	call	_ringbuf_num	;wreg free
 19238  014C3C  0100               	movlb	0	; () banked
 19239  014C3E  5160               	movf	?_ringbuf_num& (0+255),w,b
 19240  014C40  0100               	movlb	0	; () banked
 19241  014C42  1161               	iorwf	(?_ringbuf_num+1)& (0+255),w,b
 19242  014C44  B4D8               	btfsc	status,2,c
 19243  014C46  D058               	goto	l10892
 19244                           
 19245                           ; BSR set to: 0
 19246                           ;My_header\My_ringbuf.h: 66: char ret = rb->buf[rb->tail];
 19247  014C48  0100               	movlb	0	; () banked
 19248  014C4A  EE20 F006          	lfsr	2,6
 19249  014C4E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19250  014C50  26D9               	addwf	fsr2l,f,c
 19251  014C52  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19252  014C54  22DA               	addwfc	fsr2h,f,c
 19253  014C56  CFDE F06A          	movff	postinc2,??_ringbuf_pop
 19254  014C5A  CFDD F06B          	movff	postdec2,??_ringbuf_pop+1
 19255  014C5E  C068  FFD9         	movff	ringbuf_pop@rb,fsr2l
 19256  014C62  C069  FFDA         	movff	ringbuf_pop@rb+1,fsr2h
 19257  014C66  CFDE F06C          	movff	postinc2,??_ringbuf_pop+2
 19258  014C6A  CFDD F06D          	movff	postdec2,??_ringbuf_pop+3
 19259  014C6E  0100               	movlb	0	; () banked
 19260  014C70  516A               	movf	??_ringbuf_pop& (0+255),w,b
 19261  014C72  0100               	movlb	0	; () banked
 19262  014C74  256C               	addwf	(??_ringbuf_pop+2)& (0+255),w,b
 19263  014C76  6ED9               	movwf	fsr2l,c
 19264  014C78  0100               	movlb	0	; () banked
 19265  014C7A  516B               	movf	(??_ringbuf_pop+1)& (0+255),w,b
 19266  014C7C  0100               	movlb	0	; () banked
 19267  014C7E  216D               	addwfc	(??_ringbuf_pop+3)& (0+255),w,b
 19268  014C80  6EDA               	movwf	fsr2h,c
 19269  014C82  50DF               	movf	indf2,w,c
 19270  014C84  0100               	movlb	0	; () banked
 19271  014C86  6F6E               	movwf	ringbuf_pop@ret& (0+255),b
 19272                           
 19273                           ; BSR set to: 0
 19274                           ;My_header\My_ringbuf.h: 67: if (rb->tail + 1 < rb->size) {
 19275  014C88  0100               	movlb	0	; () banked
 19276  014C8A  EE20 F002          	lfsr	2,2
 19277  014C8E  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19278  014C90  26D9               	addwf	fsr2l,f,c
 19279  014C92  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19280  014C94  22DA               	addwfc	fsr2h,f,c
 19281  014C96  0100               	movlb	0	; () banked
 19282  014C98  EE10 F006          	lfsr	1,6
 19283  014C9C  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19284  014C9E  26E1               	addwf	fsr1l,f,c
 19285  014CA0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19286  014CA2  22E2               	addwfc	fsr1h,f,c
 19287  014CA4  CFE6 F06C          	movff	postinc1,??_ringbuf_pop+2
 19288  014CA8  CFE5 F06D          	movff	postdec1,??_ringbuf_pop+3
 19289  014CAC  0E01               	movlw	1
 19290  014CAE  0100               	movlb	0	; () banked
 19291  014CB0  276C               	addwf	(??_ringbuf_pop+2)& (0+255),f,b
 19292  014CB2  0E00               	movlw	0
 19293  014CB4  236D               	addwfc	(??_ringbuf_pop+3)& (0+255),f,b
 19294  014CB6  50DE               	movf	postinc2,w,c
 19295  014CB8  0100               	movlb	0	; () banked
 19296  014CBA  5D6C               	subwf	(??_ringbuf_pop+2)& (0+255),w,b
 19297  014CBC  50DE               	movf	postinc2,w,c
 19298  014CBE  0100               	movlb	0	; () banked
 19299  014CC0  596D               	subwfb	(??_ringbuf_pop+3)& (0+255),w,b
 19300  014CC2  B0D8               	btfsc	status,0,c
 19301  014CC4  D00B               	goto	l10884
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;My_header\My_ringbuf.h: 68: rb->tail++;
 19305  014CC6  0100               	movlb	0	; () banked
 19306  014CC8  EE20 F006          	lfsr	2,6
 19307  014CCC  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19308  014CCE  26D9               	addwf	fsr2l,f,c
 19309  014CD0  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19310  014CD2  22DA               	addwfc	fsr2h,f,c
 19311  014CD4  2ADE               	incf	postinc2,f,c
 19312  014CD6  0E00               	movlw	0
 19313  014CD8  22DD               	addwfc	postdec2,f,c
 19314                           
 19315                           ;My_header\My_ringbuf.h: 69: } else {
 19316  014CDA  D00B               	goto	l10886
 19317  014CDC                     l10884:
 19318                           
 19319                           ; BSR set to: 0
 19320                           ;My_header\My_ringbuf.h: 70: rb->tail = 0;
 19321  014CDC  0100               	movlb	0	; () banked
 19322  014CDE  EE20 F006          	lfsr	2,6
 19323  014CE2  5168               	movf	ringbuf_pop@rb& (0+255),w,b
 19324  014CE4  26D9               	addwf	fsr2l,f,c
 19325  014CE6  5169               	movf	(ringbuf_pop@rb+1)& (0+255),w,b
 19326  014CE8  22DA               	addwfc	fsr2h,f,c
 19327  014CEA  0E00               	movlw	0
 19328  014CEC  6EDE               	movwf	postinc2,c
 19329  014CEE  0E00               	movlw	0
 19330  014CF0  6EDD               	movwf	postdec2,c
 19331  014CF2                     l10886:
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;My_header\My_ringbuf.h: 71: }
 19335                           ;My_header\My_ringbuf.h: 72: return ret;
 19336  014CF2  0100               	movlb	0	; () banked
 19337  014CF4  516E               	movf	ringbuf_pop@ret& (0+255),w,b
 19338                           
 19339                           ; BSR set to: 0
 19340                           ;My_header\My_ringbuf.h: 73: } else {
 19341                           
 19342                           ; BSR set to: 0
 19343  014CF6  0012               	return	
 19344  014CF8                     l10892:
 19345                           
 19346                           ; BSR set to: 0
 19347                           ;My_header\My_ringbuf.h: 74: return 0;
 19348  014CF8  0E00               	movlw	0
 19349                           
 19350                           ; BSR set to: 0
 19351  014CFA  0012               	return	
 19352  014CFC                     __end_of_ringbuf_pop:
 19353                           	opt stack 0
 19354                           tblptru	equ	0xFF8
 19355                           tblptrh	equ	0xFF7
 19356                           tblptrl	equ	0xFF6
 19357                           tablat	equ	0xFF5
 19358                           prodh	equ	0xFF4
 19359                           prodl	equ	0xFF3
 19360                           intcon	equ	0xFF2
 19361                           intcon2	equ	0xFF1
 19362                           postinc0	equ	0xFEE
 19363                           wreg	equ	0xFE8
 19364                           indf1	equ	0xFE7
 19365                           postinc1	equ	0xFE6
 19366                           postdec1	equ	0xFE5
 19367                           fsr1h	equ	0xFE2
 19368                           fsr1l	equ	0xFE1
 19369                           indf2	equ	0xFDF
 19370                           postinc2	equ	0xFDE
 19371                           postdec2	equ	0xFDD
 19372                           plusw2	equ	0xFDB
 19373                           fsr2h	equ	0xFDA
 19374                           fsr2l	equ	0xFD9
 19375                           status	equ	0xFD8
 19376                           
 19377 ;; *************** function _ringbuf_num *****************
 19378 ;; Defined at:
 19379 ;;		line 31 in file "../My_header\My_ringbuf.h"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;  rb              2    0[BANK0 ] PTR struct ringbuf
 19382 ;;		 -> usb_tx(8), usb_rx(8), my_terminal_loop@command(8), rx_buf(8), 
 19383 ;;		 -> tx_buf(8), 
 19384 ;; Auto vars:     Size  Location     Type
 19385 ;;		None
 19386 ;; Return value:  Size  Location     Type
 19387 ;;                  2    0[BANK0 ] unsigned int 
 19388 ;; Registers used:
 19389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19390 ;; Tracked objects:
 19391 ;;		On entry : 0/0
 19392 ;;		On exit  : 0/0
 19393 ;;		Unchanged: 0/0
 19394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19397 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19398 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19399 ;;Total ram usage:        8 bytes
 19400 ;; Hardware stack levels used:    1
 19401 ;; Hardware stack levels required when called:   11
 19402 ;; This function calls:
 19403 ;;		Nothing
 19404 ;; This function is called by:
 19405 ;;		_ringbuf_put
 19406 ;;		_ringbuf_pop
 19407 ;;		_ringbuf_backspace
 19408 ;;		_my_terminal_loop
 19409 ;;		_USB_loop
 19410 ;;		_UART_ISR
 19411 ;; This function uses a non-reentrant model
 19412 ;;
 19413                           
 19414                           	psect	text77
 19415  014118                     __ptext77:
 19416                           	opt stack 0
 19417  014118                     _ringbuf_num:
 19418                           	opt stack 16
 19419                           
 19420                           ;My_header\My_ringbuf.h: 32: if (rb->head >= rb->tail) {
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;incstack = 0
 19424  014118  0100               	movlb	0	; () banked
 19425  01411A  EE20 F006          	lfsr	2,6
 19426  01411E  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19427  014120  26D9               	addwf	fsr2l,f,c
 19428  014122  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19429  014124  22DA               	addwfc	fsr2h,f,c
 19430  014126  0100               	movlb	0	; () banked
 19431  014128  EE10 F004          	lfsr	1,4
 19432  01412C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19433  01412E  26E1               	addwf	fsr1l,f,c
 19434  014130  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19435  014132  22E2               	addwfc	fsr1h,f,c
 19436  014134  50DE               	movf	postinc2,w,c
 19437  014136  5CE6               	subwf	postinc1,w,c
 19438  014138  50DE               	movf	postinc2,w,c
 19439  01413A  58E6               	subwfb	postinc1,w,c
 19440  01413C  A0D8               	btfss	status,0,c
 19441  01413E  D028               	goto	l9548
 19442                           
 19443                           ; BSR set to: 0
 19444                           ;My_header\My_ringbuf.h: 33: return (rb->head - rb->tail);
 19445  014140  0100               	movlb	0	; () banked
 19446  014142  EE20 F004          	lfsr	2,4
 19447  014146  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19448  014148  26D9               	addwf	fsr2l,f,c
 19449  01414A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19450  01414C  22DA               	addwfc	fsr2h,f,c
 19451  01414E  CFDE F062          	movff	postinc2,??_ringbuf_num
 19452  014152  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 19453  014156  0100               	movlb	0	; () banked
 19454  014158  EE20 F006          	lfsr	2,6
 19455  01415C  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19456  01415E  26D9               	addwf	fsr2l,f,c
 19457  014160  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19458  014162  22DA               	addwfc	fsr2h,f,c
 19459  014164  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 19460  014168  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 19461  01416C  0100               	movlb	0	; () banked
 19462  01416E  1F64               	comf	(??_ringbuf_num+2)& (0+255),f,b
 19463  014170  1F65               	comf	(??_ringbuf_num+3)& (0+255),f,b
 19464  014172  4B64               	infsnz	(??_ringbuf_num+2)& (0+255),f,b
 19465  014174  2B65               	incf	(??_ringbuf_num+3)& (0+255),f,b
 19466  014176  0100               	movlb	0	; () banked
 19467  014178  5162               	movf	??_ringbuf_num& (0+255),w,b
 19468  01417A  0100               	movlb	0	; () banked
 19469  01417C  2564               	addwf	(??_ringbuf_num+2)& (0+255),w,b
 19470  01417E  0100               	movlb	0	; () banked
 19471  014180  6F60               	movwf	?_ringbuf_num& (0+255),b
 19472  014182  0100               	movlb	0	; () banked
 19473  014184  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 19474  014186  0100               	movlb	0	; () banked
 19475  014188  2165               	addwfc	(??_ringbuf_num+3)& (0+255),w,b
 19476  01418A  0100               	movlb	0	; () banked
 19477  01418C  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;My_header\My_ringbuf.h: 34: } else {
 19481                           
 19482                           ; BSR set to: 0
 19483  01418E  0012               	return	
 19484  014190                     l9548:
 19485                           
 19486                           ; BSR set to: 0
 19487                           ;My_header\My_ringbuf.h: 35: return (rb->size + rb->head - rb->tail);
 19488  014190  0100               	movlb	0	; () banked
 19489  014192  EE20 F004          	lfsr	2,4
 19490  014196  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19491  014198  26D9               	addwf	fsr2l,f,c
 19492  01419A  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19493  01419C  22DA               	addwfc	fsr2h,f,c
 19494  01419E  CFDE F062          	movff	postinc2,??_ringbuf_num
 19495  0141A2  CFDD F063          	movff	postdec2,??_ringbuf_num+1
 19496  0141A6  0100               	movlb	0	; () banked
 19497  0141A8  EE20 F002          	lfsr	2,2
 19498  0141AC  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19499  0141AE  26D9               	addwf	fsr2l,f,c
 19500  0141B0  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19501  0141B2  22DA               	addwfc	fsr2h,f,c
 19502  0141B4  CFDE F064          	movff	postinc2,??_ringbuf_num+2
 19503  0141B8  CFDD F065          	movff	postdec2,??_ringbuf_num+3
 19504  0141BC  0100               	movlb	0	; () banked
 19505  0141BE  EE20 F006          	lfsr	2,6
 19506  0141C2  5160               	movf	ringbuf_num@rb& (0+255),w,b
 19507  0141C4  26D9               	addwf	fsr2l,f,c
 19508  0141C6  5161               	movf	(ringbuf_num@rb+1)& (0+255),w,b
 19509  0141C8  22DA               	addwfc	fsr2h,f,c
 19510  0141CA  CFDE F066          	movff	postinc2,??_ringbuf_num+4
 19511  0141CE  CFDD F067          	movff	postdec2,??_ringbuf_num+5
 19512  0141D2  0100               	movlb	0	; () banked
 19513  0141D4  1F66               	comf	(??_ringbuf_num+4)& (0+255),f,b
 19514  0141D6  1F67               	comf	(??_ringbuf_num+5)& (0+255),f,b
 19515  0141D8  4B66               	infsnz	(??_ringbuf_num+4)& (0+255),f,b
 19516  0141DA  2B67               	incf	(??_ringbuf_num+5)& (0+255),f,b
 19517  0141DC  0100               	movlb	0	; () banked
 19518  0141DE  5164               	movf	(??_ringbuf_num+2)& (0+255),w,b
 19519  0141E0  0100               	movlb	0	; () banked
 19520  0141E2  2766               	addwf	(??_ringbuf_num+4)& (0+255),f,b
 19521  0141E4  0100               	movlb	0	; () banked
 19522  0141E6  5165               	movf	(??_ringbuf_num+3)& (0+255),w,b
 19523  0141E8  0100               	movlb	0	; () banked
 19524  0141EA  2367               	addwfc	(??_ringbuf_num+5)& (0+255),f,b
 19525  0141EC  0100               	movlb	0	; () banked
 19526  0141EE  5162               	movf	??_ringbuf_num& (0+255),w,b
 19527  0141F0  0100               	movlb	0	; () banked
 19528  0141F2  2566               	addwf	(??_ringbuf_num+4)& (0+255),w,b
 19529  0141F4  0100               	movlb	0	; () banked
 19530  0141F6  6F60               	movwf	?_ringbuf_num& (0+255),b
 19531  0141F8  0100               	movlb	0	; () banked
 19532  0141FA  5163               	movf	(??_ringbuf_num+1)& (0+255),w,b
 19533  0141FC  0100               	movlb	0	; () banked
 19534  0141FE  2167               	addwfc	(??_ringbuf_num+5)& (0+255),w,b
 19535  014200  0100               	movlb	0	; () banked
 19536  014202  6F61               	movwf	(?_ringbuf_num+1)& (0+255),b
 19537                           
 19538                           ; BSR set to: 0
 19539  014204  0012               	return	
 19540  014206                     __end_of_ringbuf_num:
 19541                           	opt stack 0
 19542                           tblptru	equ	0xFF8
 19543                           tblptrh	equ	0xFF7
 19544                           tblptrl	equ	0xFF6
 19545                           tablat	equ	0xFF5
 19546                           prodh	equ	0xFF4
 19547                           prodl	equ	0xFF3
 19548                           intcon	equ	0xFF2
 19549                           intcon2	equ	0xFF1
 19550                           postinc0	equ	0xFEE
 19551                           wreg	equ	0xFE8
 19552                           indf1	equ	0xFE7
 19553                           postinc1	equ	0xFE6
 19554                           postdec1	equ	0xFE5
 19555                           fsr1h	equ	0xFE2
 19556                           fsr1l	equ	0xFE1
 19557                           indf2	equ	0xFDF
 19558                           postinc2	equ	0xFDE
 19559                           postdec2	equ	0xFDD
 19560                           plusw2	equ	0xFDB
 19561                           fsr2h	equ	0xFDA
 19562                           fsr2l	equ	0xFD9
 19563                           status	equ	0xFD8
 19564                           
 19565 ;; *************** function _put_string_usb *****************
 19566 ;; Defined at:
 19567 ;;		line 16 in file "../My_header/usb_cdc/My_usb_cdc.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;  s               2   12[BANK0 ] PTR unsigned char 
 19570 ;;		 -> USB_loop@data(1), 
 19571 ;;  len             2   14[BANK0 ] int 
 19572 ;; Auto vars:     Size  Location     Type
 19573 ;;		None
 19574 ;; Return value:  Size  Location     Type
 19575 ;;                  2   12[BANK0 ] int 
 19576 ;; Registers used:
 19577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19578 ;; Tracked objects:
 19579 ;;		On entry : 0/0
 19580 ;;		On exit  : 0/0
 19581 ;;		Unchanged: 0/0
 19582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19583 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19586 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19587 ;;Total ram usage:        4 bytes
 19588 ;; Hardware stack levels used:    1
 19589 ;; Hardware stack levels required when called:   13
 19590 ;; This function calls:
 19591 ;;		_CDCTxService
 19592 ;;		_is_usb_available
 19593 ;;		_putUSBUSART
 19594 ;; This function is called by:
 19595 ;;		_USB_loop
 19596 ;; This function uses a non-reentrant model
 19597 ;;
 19598                           
 19599                           	psect	text78
 19600  01667A                     __ptext78:
 19601                           	opt stack 0
 19602  01667A                     _put_string_usb:
 19603                           	opt stack 16
 19604                           
 19605                           ;My_usb_cdc.c: 17: if (!is_usb_available()) {
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;incstack = 0
 19609  01667A  ECFC  F0B5         	call	_is_usb_available	;wreg free
 19610  01667E  0900               	iorlw	0
 19611  016680  A4D8               	btfss	status,2,c
 19612  016682  D008               	goto	l11432
 19613                           
 19614                           ;My_usb_cdc.c: 19: return 1;
 19615  016684  0E00               	movlw	0
 19616  016686  0100               	movlb	0	; () banked
 19617  016688  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 19618  01668A  0E01               	movlw	1
 19619  01668C  6F6C               	movwf	?_put_string_usb& (0+255),b
 19620                           
 19621                           ; BSR set to: 0
 19622  01668E  0012               	return	
 19623  016690                     l11430:
 19624                           
 19625                           ; BSR set to: 0
 19626  016690  EC4E  F098         	call	_CDCTxService	;wreg free
 19627  016694                     l11432:
 19628  016694  0100               	movlb	0	; () banked
 19629  016696  51F7               	movf	_cdc_trf_state& (0+255),w,b
 19630  016698  A4D8               	btfss	status,2,c
 19631  01669A  D7FA               	goto	l11430
 19632                           
 19633                           ; BSR set to: 0
 19634                           ;My_usb_cdc.c: 22: putUSBUSART(s, len);
 19635                           
 19636                           ; BSR set to: 0
 19637  01669C  C06C  F060         	movff	put_string_usb@s,putUSBUSART@data
 19638  0166A0  C06D  F061         	movff	put_string_usb@s+1,putUSBUSART@data+1
 19639  0166A4  C06E  F062         	movff	put_string_usb@len,putUSBUSART@length
 19640  0166A8  EC99  F0B5         	call	_putUSBUSART	;wreg free
 19641                           
 19642                           ;My_usb_cdc.c: 23: CDCTxService();
 19643  0166AC  EC4E  F098         	call	_CDCTxService	;wreg free
 19644                           
 19645                           ;My_usb_cdc.c: 24: return 0;
 19646  0166B0  0E00               	movlw	0
 19647  0166B2  0100               	movlb	0	; () banked
 19648  0166B4  6F6D               	movwf	(?_put_string_usb+1)& (0+255),b
 19649  0166B6  0E00               	movlw	0
 19650  0166B8  6F6C               	movwf	?_put_string_usb& (0+255),b
 19651  0166BA  0012               	return	
 19652  0166BC                     __end_of_put_string_usb:
 19653                           	opt stack 0
 19654                           tblptru	equ	0xFF8
 19655                           tblptrh	equ	0xFF7
 19656                           tblptrl	equ	0xFF6
 19657                           tablat	equ	0xFF5
 19658                           prodh	equ	0xFF4
 19659                           prodl	equ	0xFF3
 19660                           intcon	equ	0xFF2
 19661                           intcon2	equ	0xFF1
 19662                           postinc0	equ	0xFEE
 19663                           wreg	equ	0xFE8
 19664                           indf1	equ	0xFE7
 19665                           postinc1	equ	0xFE6
 19666                           postdec1	equ	0xFE5
 19667                           fsr1h	equ	0xFE2
 19668                           fsr1l	equ	0xFE1
 19669                           indf2	equ	0xFDF
 19670                           postinc2	equ	0xFDE
 19671                           postdec2	equ	0xFDD
 19672                           plusw2	equ	0xFDB
 19673                           fsr2h	equ	0xFDA
 19674                           fsr2l	equ	0xFD9
 19675                           status	equ	0xFD8
 19676                           
 19677 ;; *************** function _putUSBUSART *****************
 19678 ;; Defined at:
 19679 ;;		line 613 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 19680 ;; Parameters:    Size  Location     Type
 19681 ;;  data            2    0[BANK0 ] PTR unsigned char 
 19682 ;;		 -> USB_loop@data(1), 
 19683 ;;  length          1    2[BANK0 ] unsigned char 
 19684 ;; Auto vars:     Size  Location     Type
 19685 ;;		None
 19686 ;; Return value:  Size  Location     Type
 19687 ;;		None               void
 19688 ;; Registers used:
 19689 ;;		wreg, status,2, status,0
 19690 ;; Tracked objects:
 19691 ;;		On entry : 0/0
 19692 ;;		On exit  : 0/0
 19693 ;;		Unchanged: 0/0
 19694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19695 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19698 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19699 ;;Total ram usage:        3 bytes
 19700 ;; Hardware stack levels used:    1
 19701 ;; Hardware stack levels required when called:   11
 19702 ;; This function calls:
 19703 ;;		Nothing
 19704 ;; This function is called by:
 19705 ;;		_put_string_usb
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text79
 19710  016B32                     __ptext79:
 19711                           	opt stack 0
 19712  016B32                     _putUSBUSART:
 19713                           	opt stack 17
 19714                           
 19715                           ;usb_device_cdc.c: 638: {PIE2bits.USBIE = 0;};
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;incstack = 0
 19719  016B32  98A0               	bcf	4000,4,c	;volatile
 19720                           
 19721                           ;usb_device_cdc.c: 639: if(cdc_trf_state == 0)
 19722  016B34  0100               	movlb	0	; () banked
 19723  016B36  51F7               	movf	_cdc_trf_state& (0+255),w,b
 19724  016B38  A4D8               	btfss	status,2,c
 19725  016B3A  D00B               	goto	l10774
 19726                           
 19727                           ; BSR set to: 0
 19728                           ;usb_device_cdc.c: 640: {
 19729                           ;usb_device_cdc.c: 641: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 19730  016B3C  C060  F116         	movff	putUSBUSART@data,_pCDCSrc
 19731  016B40  C061  F117         	movff	putUSBUSART@data+1,_pCDCSrc+1
 19732                           
 19733                           ; BSR set to: 0
 19734  016B44  C062  F045         	movff	putUSBUSART@length,_cdc_tx_len
 19735                           
 19736                           ; BSR set to: 0
 19737  016B48  0E01               	movlw	1
 19738  016B4A  6E44               	movwf	_cdc_mem_type,c
 19739                           
 19740                           ; BSR set to: 0
 19741  016B4C  0E01               	movlw	1
 19742  016B4E  0100               	movlb	0	; () banked
 19743  016B50  6FF7               	movwf	_cdc_trf_state& (0+255),b
 19744  016B52                     l10774:
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;usb_device_cdc.c: 642: }
 19748                           ;usb_device_cdc.c: 643: {PIE2bits.USBIE = 1;};
 19749  016B52  88A0               	bsf	4000,4,c	;volatile
 19750                           
 19751                           ; BSR set to: 0
 19752  016B54  0012               	return		;funcret
 19753  016B56                     __end_of_putUSBUSART:
 19754                           	opt stack 0
 19755                           tblptru	equ	0xFF8
 19756                           tblptrh	equ	0xFF7
 19757                           tblptrl	equ	0xFF6
 19758                           tablat	equ	0xFF5
 19759                           prodh	equ	0xFF4
 19760                           prodl	equ	0xFF3
 19761                           intcon	equ	0xFF2
 19762                           intcon2	equ	0xFF1
 19763                           postinc0	equ	0xFEE
 19764                           wreg	equ	0xFE8
 19765                           indf1	equ	0xFE7
 19766                           postinc1	equ	0xFE6
 19767                           postdec1	equ	0xFE5
 19768                           fsr1h	equ	0xFE2
 19769                           fsr1l	equ	0xFE1
 19770                           indf2	equ	0xFDF
 19771                           postinc2	equ	0xFDE
 19772                           postdec2	equ	0xFDD
 19773                           plusw2	equ	0xFDB
 19774                           fsr2h	equ	0xFDA
 19775                           fsr2l	equ	0xFD9
 19776                           status	equ	0xFD8
 19777                           
 19778 ;; *************** function _get_string_usb *****************
 19779 ;; Defined at:
 19780 ;;		line 27 in file "../My_header/usb_cdc/My_usb_cdc.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;  s               2   13[BANK0 ] PTR unsigned char 
 19783 ;;		 -> USB_loop@data(1), 
 19784 ;;  len             2   15[BANK0 ] int 
 19785 ;; Auto vars:     Size  Location     Type
 19786 ;;  rx_len          2   18[BANK0 ] int 
 19787 ;; Return value:  Size  Location     Type
 19788 ;;                  2   13[BANK0 ] int 
 19789 ;; Registers used:
 19790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19791 ;; Tracked objects:
 19792 ;;		On entry : 0/0
 19793 ;;		On exit  : 0/0
 19794 ;;		Unchanged: 0/0
 19795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19796 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19797 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19799 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19800 ;;Total ram usage:        7 bytes
 19801 ;; Hardware stack levels used:    1
 19802 ;; Hardware stack levels required when called:   13
 19803 ;; This function calls:
 19804 ;;		_CDCTxService
 19805 ;;		_getsUSBUSART
 19806 ;;		_is_usb_available
 19807 ;; This function is called by:
 19808 ;;		_USB_loop
 19809 ;; This function uses a non-reentrant model
 19810 ;;
 19811                           
 19812                           	psect	text80
 19813  01655A                     __ptext80:
 19814                           	opt stack 0
 19815  01655A                     _get_string_usb:
 19816                           	opt stack 16
 19817                           
 19818                           ;My_usb_cdc.c: 28: int rx_len;
 19819                           ;My_usb_cdc.c: 29: if (!is_usb_available()) {
 19820                           
 19821                           ; BSR set to: 0
 19822                           ;incstack = 0
 19823  01655A  ECFC  F0B5         	call	_is_usb_available	;wreg free
 19824  01655E  0900               	iorlw	0
 19825  016560  A4D8               	btfss	status,2,c
 19826  016562  D008               	goto	l11416
 19827                           
 19828                           ;My_usb_cdc.c: 31: return 0;
 19829  016564  0E00               	movlw	0
 19830  016566  0100               	movlb	0	; () banked
 19831  016568  6F6E               	movwf	(?_get_string_usb+1)& (0+255),b
 19832  01656A  0E00               	movlw	0
 19833  01656C  6F6D               	movwf	?_get_string_usb& (0+255),b
 19834                           
 19835                           ; BSR set to: 0
 19836  01656E  0012               	return	
 19837  016570                     l11414:
 19838                           
 19839                           ; BSR set to: 0
 19840  016570  EC4E  F098         	call	_CDCTxService	;wreg free
 19841  016574                     l11416:
 19842  016574  0100               	movlb	0	; () banked
 19843  016576  51F7               	movf	_cdc_trf_state& (0+255),w,b
 19844  016578  A4D8               	btfss	status,2,c
 19845  01657A  D7FA               	goto	l11414
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;My_usb_cdc.c: 34: rx_len = getsUSBUSART(s, len);
 19849                           
 19850                           ; BSR set to: 0
 19851  01657C  C06D  F067         	movff	get_string_usb@s,getsUSBUSART@buffer
 19852  016580  C06E  F068         	movff	get_string_usb@s+1,getsUSBUSART@buffer+1
 19853  016584  C06F  F069         	movff	get_string_usb@len,getsUSBUSART@len
 19854  016588  ECE7  F0A1         	call	_getsUSBUSART	;wreg free
 19855  01658C  0100               	movlb	0	; () banked
 19856  01658E  6F71               	movwf	??_get_string_usb& (0+255),b
 19857  016590  0100               	movlb	0	; () banked
 19858  016592  5171               	movf	??_get_string_usb& (0+255),w,b
 19859  016594  0100               	movlb	0	; () banked
 19860  016596  6F72               	movwf	get_string_usb@rx_len& (0+255),b
 19861  016598  6B73               	clrf	(get_string_usb@rx_len+1)& (0+255),b
 19862                           
 19863                           ;My_usb_cdc.c: 35: CDCTxService();
 19864  01659A  EC4E  F098         	call	_CDCTxService	;wreg free
 19865                           
 19866                           ;My_usb_cdc.c: 36: return rx_len;
 19867  01659E  C072  F06D         	movff	get_string_usb@rx_len,?_get_string_usb
 19868  0165A2  C073  F06E         	movff	get_string_usb@rx_len+1,?_get_string_usb+1
 19869  0165A6  0012               	return	
 19870  0165A8                     __end_of_get_string_usb:
 19871                           	opt stack 0
 19872                           tblptru	equ	0xFF8
 19873                           tblptrh	equ	0xFF7
 19874                           tblptrl	equ	0xFF6
 19875                           tablat	equ	0xFF5
 19876                           prodh	equ	0xFF4
 19877                           prodl	equ	0xFF3
 19878                           intcon	equ	0xFF2
 19879                           intcon2	equ	0xFF1
 19880                           postinc0	equ	0xFEE
 19881                           wreg	equ	0xFE8
 19882                           indf1	equ	0xFE7
 19883                           postinc1	equ	0xFE6
 19884                           postdec1	equ	0xFE5
 19885                           fsr1h	equ	0xFE2
 19886                           fsr1l	equ	0xFE1
 19887                           indf2	equ	0xFDF
 19888                           postinc2	equ	0xFDE
 19889                           postdec2	equ	0xFDD
 19890                           plusw2	equ	0xFDB
 19891                           fsr2h	equ	0xFDA
 19892                           fsr2l	equ	0xFD9
 19893                           status	equ	0xFD8
 19894                           
 19895 ;; *************** function _is_usb_available *****************
 19896 ;; Defined at:
 19897 ;;		line 12 in file "../My_header/usb_cdc/My_usb_cdc.c"
 19898 ;; Parameters:    Size  Location     Type
 19899 ;;		None
 19900 ;; Auto vars:     Size  Location     Type
 19901 ;;		None
 19902 ;; Return value:  Size  Location     Type
 19903 ;;                  1    wreg      unsigned char 
 19904 ;; Registers used:
 19905 ;;		wreg, status,2, status,0
 19906 ;; Tracked objects:
 19907 ;;		On entry : 0/0
 19908 ;;		On exit  : 0/0
 19909 ;;		Unchanged: 0/0
 19910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19914 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19915 ;;Total ram usage:        1 bytes
 19916 ;; Hardware stack levels used:    1
 19917 ;; Hardware stack levels required when called:   11
 19918 ;; This function calls:
 19919 ;;		Nothing
 19920 ;; This function is called by:
 19921 ;;		_put_string_usb
 19922 ;;		_get_string_usb
 19923 ;; This function uses a non-reentrant model
 19924 ;;
 19925                           
 19926                           	psect	text81
 19927  016BF8                     __ptext81:
 19928                           	opt stack 0
 19929  016BF8                     _is_usb_available:
 19930                           	opt stack 17
 19931                           
 19932                           ;My_usb_cdc.c: 13: return !(USBDeviceState < CONFIGURED_STATE || UCONbits.SUSPND == 1);
 19933                           
 19934                           ;incstack = 0
 19935  016BF8  0E00               	movlw	0
 19936  016BFA  0100               	movlb	0	; () banked
 19937  016BFC  6F60               	movwf	_is_usb_available$2609& (0+255),b
 19938                           
 19939                           ; BSR set to: 0
 19940  016BFE  0E1F               	movlw	31
 19941  016C00  6440               	cpfsgt	_USBDeviceState,c	;volatile
 19942  016C02  D005               	goto	l969
 19943                           
 19944                           ; BSR set to: 0
 19945  016C04  B265               	btfsc	3941,1,c	;volatile
 19946  016C06  D003               	goto	l969
 19947                           
 19948                           ; BSR set to: 0
 19949  016C08  0E01               	movlw	1
 19950  016C0A  0100               	movlb	0	; () banked
 19951  016C0C  6F60               	movwf	_is_usb_available$2609& (0+255),b
 19952  016C0E                     l969:
 19953                           
 19954                           ; BSR set to: 0
 19955  016C0E  0100               	movlb	0	; () banked
 19956  016C10  5160               	movf	_is_usb_available$2609& (0+255),w,b
 19957  016C12  0012               	return	
 19958  016C14                     __end_of_is_usb_available:
 19959                           	opt stack 0
 19960                           tblptru	equ	0xFF8
 19961                           tblptrh	equ	0xFF7
 19962                           tblptrl	equ	0xFF6
 19963                           tablat	equ	0xFF5
 19964                           prodh	equ	0xFF4
 19965                           prodl	equ	0xFF3
 19966                           intcon	equ	0xFF2
 19967                           intcon2	equ	0xFF1
 19968                           postinc0	equ	0xFEE
 19969                           wreg	equ	0xFE8
 19970                           indf1	equ	0xFE7
 19971                           postinc1	equ	0xFE6
 19972                           postdec1	equ	0xFE5
 19973                           fsr1h	equ	0xFE2
 19974                           fsr1l	equ	0xFE1
 19975                           indf2	equ	0xFDF
 19976                           postinc2	equ	0xFDE
 19977                           postdec2	equ	0xFDD
 19978                           plusw2	equ	0xFDB
 19979                           fsr2h	equ	0xFDA
 19980                           fsr2l	equ	0xFD9
 19981                           status	equ	0xFD8
 19982                           
 19983 ;; *************** function _getsUSBUSART *****************
 19984 ;; Defined at:
 19985 ;;		line 542 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 19986 ;; Parameters:    Size  Location     Type
 19987 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 19988 ;;		 -> USB_loop@data(1), 
 19989 ;;  len             1    9[BANK0 ] unsigned char 
 19990 ;; Auto vars:     Size  Location     Type
 19991 ;;		None
 19992 ;; Return value:  Size  Location     Type
 19993 ;;                  1    wreg      unsigned char 
 19994 ;; Registers used:
 19995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19996 ;; Tracked objects:
 19997 ;;		On entry : 0/0
 19998 ;;		On exit  : 0/0
 19999 ;;		Unchanged: 0/0
 20000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20001 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20002 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20003 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20004 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20005 ;;Total ram usage:        6 bytes
 20006 ;; Hardware stack levels used:    1
 20007 ;; Hardware stack levels required when called:   12
 20008 ;; This function calls:
 20009 ;;		_USBTransferOnePacket
 20010 ;; This function is called by:
 20011 ;;		_get_string_usb
 20012 ;; This function uses a non-reentrant model
 20013 ;;
 20014                           
 20015                           	psect	text82
 20016  0143CE                     __ptext82:
 20017                           	opt stack 0
 20018  0143CE                     _getsUSBUSART:
 20019                           	opt stack 16
 20020                           
 20021                           ;usb_device_cdc.c: 544: cdc_rx_len = 0;
 20022                           
 20023                           ; BSR set to: 0
 20024                           ;incstack = 0
 20025  0143CE  0E00               	movlw	0
 20026  0143D0  0100               	movlb	0	; () banked
 20027  0143D2  6FF6               	movwf	_cdc_rx_len& (0+255),b
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;usb_device_cdc.c: 546: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 20031  0143D4  5033               	movf	_CDCDataOutHandle,w,c
 20032  0143D6  1034               	iorwf	_CDCDataOutHandle+1,w,c
 20033  0143D8  B4D8               	btfsc	status,2,c
 20034  0143DA  D012               	goto	l10782
 20035                           
 20036                           ; BSR set to: 0
 20037  0143DC  C033  FFD9         	movff	_CDCDataOutHandle,fsr2l
 20038  0143E0  C034  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 20039  0143E4  AEDF               	btfss	indf2,7,c
 20040  0143E6  D004               	goto	u12300
 20041  0143E8  0100               	movlb	0	; () banked
 20042  0143EA  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20043  0143EC  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 20044  0143EE  D002               	goto	u12308
 20045  0143F0                     u12300:
 20046  0143F0  0100               	movlb	0	; () banked
 20047  0143F2  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 20048  0143F4                     u12308:
 20049  0143F4  0100               	movlb	0	; () banked
 20050  0143F6  516A               	movf	??_getsUSBUSART& (0+255),w,b
 20051  0143F8  0100               	movlb	0	; () banked
 20052  0143FA  6F6B               	movwf	_getsUSBUSART$4361& (0+255),b
 20053  0143FC  6B6C               	clrf	(_getsUSBUSART$4361+1)& (0+255),b
 20054  0143FE  D005               	goto	l10784
 20055  014400                     l10782:
 20056                           
 20057                           ; BSR set to: 0
 20058  014400  0E00               	movlw	0
 20059  014402  0100               	movlb	0	; () banked
 20060  014404  6F6C               	movwf	(_getsUSBUSART$4361+1)& (0+255),b
 20061  014406  0E00               	movlw	0
 20062  014408  6F6B               	movwf	_getsUSBUSART$4361& (0+255),b
 20063  01440A                     l10784:
 20064                           
 20065                           ; BSR set to: 0
 20066  01440A  0100               	movlb	0	; () banked
 20067  01440C  516B               	movf	_getsUSBUSART$4361& (0+255),w,b
 20068  01440E  0100               	movlb	0	; () banked
 20069  014410  116C               	iorwf	(_getsUSBUSART$4361+1)& (0+255),w,b
 20070  014412  A4D8               	btfss	status,2,c
 20071  014414  D049               	goto	l10800
 20072                           
 20073                           ; BSR set to: 0
 20074                           ;usb_device_cdc.c: 547: {
 20075                           ;usb_device_cdc.c: 552: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 20076  014416  EE20 F001          	lfsr	2,1
 20077  01441A  5033               	movf	_CDCDataOutHandle,w,c
 20078  01441C  26D9               	addwf	fsr2l,f,c
 20079  01441E  5034               	movf	_CDCDataOutHandle+1,w,c
 20080  014420  22DA               	addwfc	fsr2h,f,c
 20081  014422  0100               	movlb	0	; () banked
 20082  014424  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20083  014426  5CDE               	subwf	postinc2,w,c
 20084  014428  B0D8               	btfsc	status,0,c
 20085  01442A  D009               	goto	l10790
 20086                           
 20087                           ; BSR set to: 0
 20088                           ;usb_device_cdc.c: 553: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 20089  01442C  EE20 F001          	lfsr	2,1
 20090  014430  5033               	movf	_CDCDataOutHandle,w,c
 20091  014432  26D9               	addwf	fsr2l,f,c
 20092  014434  5034               	movf	_CDCDataOutHandle+1,w,c
 20093  014436  22DA               	addwfc	fsr2h,f,c
 20094  014438  50DF               	movf	indf2,w,c
 20095  01443A  0100               	movlb	0	; () banked
 20096  01443C  6F69               	movwf	getsUSBUSART@len& (0+255),b
 20097  01443E                     l10790:
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;usb_device_cdc.c: 558: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 20101  01443E  0E00               	movlw	0
 20102  014440  0100               	movlb	0	; () banked
 20103  014442  6FF6               	movwf	_cdc_rx_len& (0+255),b
 20104  014444  D018               	goto	l10796
 20105  014446                     l10792:
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;usb_device_cdc.c: 559: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 20109  014446  0100               	movlb	0	; () banked
 20110  014448  51F6               	movf	_cdc_rx_len& (0+255),w,b
 20111  01444A  0D01               	mullw	1
 20112  01444C  0E0E               	movlw	low _cdc_data_rx
 20113  01444E  24F3               	addwf	prodl,w,c
 20114  014450  6ED9               	movwf	fsr2l,c
 20115  014452  0E02               	movlw	high _cdc_data_rx
 20116  014454  20F4               	addwfc	prodh,w,c
 20117  014456  6EDA               	movwf	fsr2h,c
 20118  014458  0100               	movlb	0	; () banked
 20119  01445A  51F6               	movf	_cdc_rx_len& (0+255),w,b
 20120  01445C  0D01               	mullw	1
 20121  01445E  50F3               	movf	prodl,w,c
 20122  014460  0100               	movlb	0	; () banked
 20123  014462  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 20124  014464  6EE1               	movwf	fsr1l,c
 20125  014466  50F4               	movf	prodh,w,c
 20126  014468  0100               	movlb	0	; () banked
 20127  01446A  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 20128  01446C  6EE2               	movwf	fsr1h,c
 20129  01446E  CFDF FFE7          	movff	indf2,indf1
 20130                           
 20131                           ; BSR set to: 0
 20132  014472  0100               	movlb	0	; () banked
 20133  014474  2BF6               	incf	_cdc_rx_len& (0+255),f,b
 20134  014476                     l10796:
 20135                           
 20136                           ; BSR set to: 0
 20137  014476  0100               	movlb	0	; () banked
 20138  014478  5169               	movf	getsUSBUSART@len& (0+255),w,b
 20139  01447A  0100               	movlb	0	; () banked
 20140  01447C  5DF6               	subwf	_cdc_rx_len& (0+255),w,b
 20141  01447E  A0D8               	btfss	status,0,c
 20142  014480  D7E2               	goto	l10792
 20143                           
 20144                           ; BSR set to: 0
 20145                           ;usb_device_cdc.c: 565: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 20146                           
 20147                           ; BSR set to: 0
 20148  014482  0E00               	movlw	0
 20149  014484  0100               	movlb	0	; () banked
 20150  014486  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20151  014488  0E0E               	movlw	low _cdc_data_rx
 20152  01448A  0100               	movlb	0	; () banked
 20153  01448C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20154  01448E  0E02               	movlw	high _cdc_data_rx
 20155  014490  0100               	movlb	0	; () banked
 20156  014492  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20157  014494  0E40               	movlw	64
 20158  014496  0100               	movlb	0	; () banked
 20159  014498  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20160  01449A  0E02               	movlw	2
 20161  01449C  EC36  F0A3         	call	_USBTransferOnePacket
 20162  0144A0  C060  F033         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 20163  0144A4  C061  F034         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 20164  0144A8                     l10800:
 20165                           
 20166                           ;usb_device_cdc.c: 567: }
 20167                           ;usb_device_cdc.c: 569: return cdc_rx_len;
 20168  0144A8  0100               	movlb	0	; () banked
 20169  0144AA  51F6               	movf	_cdc_rx_len& (0+255),w,b
 20170  0144AC  0012               	return	
 20171  0144AE                     __end_of_getsUSBUSART:
 20172                           	opt stack 0
 20173                           tblptru	equ	0xFF8
 20174                           tblptrh	equ	0xFF7
 20175                           tblptrl	equ	0xFF6
 20176                           tablat	equ	0xFF5
 20177                           prodh	equ	0xFF4
 20178                           prodl	equ	0xFF3
 20179                           intcon	equ	0xFF2
 20180                           intcon2	equ	0xFF1
 20181                           postinc0	equ	0xFEE
 20182                           wreg	equ	0xFE8
 20183                           indf1	equ	0xFE7
 20184                           postinc1	equ	0xFE6
 20185                           postdec1	equ	0xFE5
 20186                           fsr1h	equ	0xFE2
 20187                           fsr1l	equ	0xFE1
 20188                           indf2	equ	0xFDF
 20189                           postinc2	equ	0xFDE
 20190                           postdec2	equ	0xFDD
 20191                           plusw2	equ	0xFDB
 20192                           fsr2h	equ	0xFDA
 20193                           fsr2l	equ	0xFD9
 20194                           status	equ	0xFD8
 20195                           
 20196 ;; *************** function _CDCTxService *****************
 20197 ;; Defined at:
 20198 ;;		line 893 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 20199 ;; Parameters:    Size  Location     Type
 20200 ;;		None
 20201 ;; Auto vars:     Size  Location     Type
 20202 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 20203 ;;  i               1   10[BANK0 ] unsigned char 
 20204 ;; Return value:  Size  Location     Type
 20205 ;;		None               void
 20206 ;; Registers used:
 20207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20208 ;; Tracked objects:
 20209 ;;		On entry : 0/0
 20210 ;;		On exit  : 0/0
 20211 ;;		Unchanged: 0/0
 20212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20214 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20216 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20217 ;;Total ram usage:        5 bytes
 20218 ;; Hardware stack levels used:    1
 20219 ;; Hardware stack levels required when called:   12
 20220 ;; This function calls:
 20221 ;;		_USBTransferOnePacket
 20222 ;; This function is called by:
 20223 ;;		_put_string_usb
 20224 ;;		_get_string_usb
 20225 ;; This function uses a non-reentrant model
 20226 ;;
 20227                           
 20228                           	psect	text83
 20229  01309C                     __ptext83:
 20230                           	opt stack 0
 20231  01309C                     _CDCTxService:
 20232                           	opt stack 16
 20233                           
 20234                           ;usb_device_cdc.c: 895: uint8_t byte_to_send;
 20235                           ;usb_device_cdc.c: 896: uint8_t i;
 20236                           ;usb_device_cdc.c: 898: {PIE2bits.USBIE = 0;};
 20237                           
 20238                           ; BSR set to: 0
 20239                           ;incstack = 0
 20240  01309C  98A0               	bcf	4000,4,c	;volatile
 20241                           
 20242                           ;usb_device_cdc.c: 900: {};
 20243                           ;usb_device_cdc.c: 902: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 20244  01309E  0101               	movlb	1	; () banked
 20245  0130A0  511D               	movf	_CDCDataInHandle& (0+255),w,b
 20246  0130A2  0101               	movlb	1	; () banked
 20247  0130A4  111E               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 20248  0130A6  B4D8               	btfsc	status,2,c
 20249  0130A8  D013               	goto	l10698
 20250                           
 20251                           ; BSR set to: 1
 20252  0130AA  C11D  FFD9         	movff	_CDCDataInHandle,fsr2l
 20253  0130AE  C11E  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 20254  0130B2  0101               	movlb	1	; () banked
 20255  0130B4  AEDF               	btfss	indf2,7,c
 20256  0130B6  D004               	goto	u12160
 20257  0130B8  0100               	movlb	0	; () banked
 20258  0130BA  6B67               	clrf	??_CDCTxService& (0+255),b
 20259  0130BC  2B67               	incf	??_CDCTxService& (0+255),f,b
 20260  0130BE  D002               	goto	u12168
 20261  0130C0                     u12160:
 20262  0130C0  0100               	movlb	0	; () banked
 20263  0130C2  6B67               	clrf	??_CDCTxService& (0+255),b
 20264  0130C4                     u12168:
 20265  0130C4  0100               	movlb	0	; () banked
 20266  0130C6  5167               	movf	??_CDCTxService& (0+255),w,b
 20267  0130C8  0100               	movlb	0	; () banked
 20268  0130CA  6F68               	movwf	_CDCTxService$4409& (0+255),b
 20269  0130CC  6B69               	clrf	(_CDCTxService$4409+1)& (0+255),b
 20270  0130CE  D005               	goto	l10700
 20271  0130D0                     l10698:
 20272  0130D0  0E00               	movlw	0
 20273  0130D2  0100               	movlb	0	; () banked
 20274  0130D4  6F69               	movwf	(_CDCTxService$4409+1)& (0+255),b
 20275  0130D6  0E00               	movlw	0
 20276  0130D8  6F68               	movwf	_CDCTxService$4409& (0+255),b
 20277  0130DA                     l10700:
 20278                           
 20279                           ; BSR set to: 0
 20280  0130DA  0100               	movlb	0	; () banked
 20281  0130DC  5168               	movf	_CDCTxService$4409& (0+255),w,b
 20282  0130DE  0100               	movlb	0	; () banked
 20283  0130E0  1169               	iorwf	(_CDCTxService$4409+1)& (0+255),w,b
 20284  0130E2  B4D8               	btfsc	status,2,c
 20285  0130E4  D002               	goto	l10704
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;usb_device_cdc.c: 903: {
 20289                           ;usb_device_cdc.c: 904: {PIE2bits.USBIE = 1;};
 20290  0130E6  88A0               	bsf	4000,4,c	;volatile
 20291                           
 20292                           ;usb_device_cdc.c: 905: return;
 20293  0130E8  0012               	return	
 20294  0130EA                     l10704:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;usb_device_cdc.c: 906: }
 20298                           ;usb_device_cdc.c: 913: if(cdc_trf_state == 3)
 20299  0130EA  0E03               	movlw	3
 20300  0130EC  0100               	movlb	0	; () banked
 20301  0130EE  19F7               	xorwf	_cdc_trf_state& (0+255),w,b
 20302  0130F0  A4D8               	btfss	status,2,c
 20303  0130F2  D003               	goto	l1488
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;usb_device_cdc.c: 914: cdc_trf_state = 0;
 20307  0130F4  0E00               	movlw	0
 20308  0130F6  0100               	movlb	0	; () banked
 20309  0130F8  6FF7               	movwf	_cdc_trf_state& (0+255),b
 20310  0130FA                     l1488:
 20311                           
 20312                           ; BSR set to: 0
 20313                           ;usb_device_cdc.c: 919: if(cdc_trf_state == 0)
 20314  0130FA  0100               	movlb	0	; () banked
 20315  0130FC  51F7               	movf	_cdc_trf_state& (0+255),w,b
 20316  0130FE  A4D8               	btfss	status,2,c
 20317  013100  D002               	goto	l10710
 20318                           
 20319                           ; BSR set to: 0
 20320                           ;usb_device_cdc.c: 920: {
 20321                           ;usb_device_cdc.c: 921: {PIE2bits.USBIE = 1;};
 20322  013102  88A0               	bsf	4000,4,c	;volatile
 20323                           
 20324                           ;usb_device_cdc.c: 922: return;
 20325  013104  0012               	return	
 20326  013106                     l10710:
 20327                           
 20328                           ; BSR set to: 0
 20329                           ;usb_device_cdc.c: 923: }
 20330                           ;usb_device_cdc.c: 928: if(cdc_trf_state == 2)
 20331  013106  0E02               	movlw	2
 20332  013108  0100               	movlb	0	; () banked
 20333  01310A  19F7               	xorwf	_cdc_trf_state& (0+255),w,b
 20334  01310C  A4D8               	btfss	status,2,c
 20335  01310E  D017               	goto	l10716
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;usb_device_cdc.c: 929: {
 20339                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 20340  013110  0E01               	movlw	1
 20341  013112  0100               	movlb	0	; () banked
 20342  013114  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20343  013116  0E00               	movlw	0
 20344  013118  0100               	movlb	0	; () banked
 20345  01311A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20346  01311C  0E00               	movlw	0
 20347  01311E  0100               	movlb	0	; () banked
 20348  013120  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20349  013122  0E00               	movlw	0
 20350  013124  0100               	movlb	0	; () banked
 20351  013126  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 20352  013128  0E02               	movlw	2
 20353  01312A  EC36  F0A3         	call	_USBTransferOnePacket
 20354  01312E  C060  F11D         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 20355  013132  C061  F11E         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 20356                           
 20357                           ;usb_device_cdc.c: 932: cdc_trf_state = 3;
 20358  013136  0E03               	movlw	3
 20359  013138  0100               	movlb	0	; () banked
 20360  01313A  6FF7               	movwf	_cdc_trf_state& (0+255),b
 20361                           
 20362                           ;usb_device_cdc.c: 933: }
 20363  01313C  D06C               	goto	l10760
 20364  01313E                     l10716:
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;usb_device_cdc.c: 934: else if(cdc_trf_state == 1)
 20368  01313E  0100               	movlb	0	; () banked
 20369  013140  05F7               	decf	_cdc_trf_state& (0+255),w,b
 20370  013142  A4D8               	btfss	status,2,c
 20371  013144  D068               	goto	l10760
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;usb_device_cdc.c: 935: {
 20375                           ;usb_device_cdc.c: 939: if(cdc_tx_len > sizeof(cdc_data_tx))
 20376  013146  0E40               	movlw	64
 20377  013148  6445               	cpfsgt	_cdc_tx_len,c
 20378  01314A  D004               	goto	l1493
 20379                           
 20380                           ; BSR set to: 0
 20381                           ;usb_device_cdc.c: 940: byte_to_send = sizeof(cdc_data_tx);
 20382  01314C  0E40               	movlw	64
 20383  01314E  0100               	movlb	0	; () banked
 20384  013150  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 20385  013152  D002               	goto	l10722
 20386  013154                     l1493:
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;usb_device_cdc.c: 941: else
 20390                           ;usb_device_cdc.c: 942: byte_to_send = cdc_tx_len;
 20391  013154  C045  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 20392  013158                     l10722:
 20393                           
 20394                           ; BSR set to: 0
 20395                           ;usb_device_cdc.c: 947: cdc_tx_len = cdc_tx_len - byte_to_send;
 20396  013158  0100               	movlb	0	; () banked
 20397  01315A  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 20398  01315C  0800               	sublw	0
 20399  01315E  2445               	addwf	_cdc_tx_len,w,c
 20400  013160  6E45               	movwf	_cdc_tx_len,c
 20401                           
 20402                           ;usb_device_cdc.c: 949: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 20403  013162  0E4E               	movlw	low _cdc_data_tx
 20404  013164  0101               	movlb	1	; () banked
 20405  013166  6F13               	movwf	_pCDCDst& (0+255),b
 20406  013168  0E02               	movlw	high _cdc_data_tx
 20407  01316A  0101               	movlb	1	; () banked
 20408  01316C  6F14               	movwf	(_pCDCDst+1)& (0+255),b
 20409                           
 20410                           ; BSR set to: 1
 20411                           ;usb_device_cdc.c: 951: i = byte_to_send;
 20412  01316E  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 20413                           
 20414                           ; BSR set to: 1
 20415                           ;usb_device_cdc.c: 952: if(cdc_mem_type == 0x00)
 20416  013172  5044               	movf	_cdc_mem_type,w,c
 20417  013174  B4D8               	btfsc	status,2,c
 20418  013176  D013               	goto	l10738
 20419  013178  D02A               	goto	l10748
 20420  01317A                     l10730:
 20421                           
 20422                           ;usb_device_cdc.c: 955: {
 20423                           ;usb_device_cdc.c: 956: *pCDCDst.bRam = *pCDCSrc.bRom;
 20424  01317A  C116  FFD9         	movff	_pCDCSrc,fsr2l
 20425  01317E  C117  FFDA         	movff	_pCDCSrc+1,fsr2h
 20426  013182  C113  FFE1         	movff	_pCDCDst,fsr1l
 20427  013186  C114  FFE2         	movff	_pCDCDst+1,fsr1h
 20428  01318A  CFDF FFE7          	movff	indf2,indf1
 20429                           
 20430                           ;usb_device_cdc.c: 957: pCDCDst.bRam++;
 20431  01318E  0101               	movlb	1	; () banked
 20432  013190  4B13               	infsnz	_pCDCDst& (0+255),f,b
 20433  013192  2B14               	incf	(_pCDCDst+1)& (0+255),f,b
 20434                           
 20435                           ; BSR set to: 1
 20436                           ;usb_device_cdc.c: 958: pCDCSrc.bRom++;
 20437  013194  0101               	movlb	1	; () banked
 20438  013196  4B16               	infsnz	_pCDCSrc& (0+255),f,b
 20439  013198  2B17               	incf	(_pCDCSrc+1)& (0+255),f,b
 20440                           
 20441                           ; BSR set to: 1
 20442                           ;usb_device_cdc.c: 959: i--;
 20443  01319A  0100               	movlb	0	; () banked
 20444  01319C  076A               	decf	CDCTxService@i& (0+255),f,b
 20445  01319E                     l10738:
 20446  01319E  0100               	movlb	0	; () banked
 20447  0131A0  516A               	movf	CDCTxService@i& (0+255),w,b
 20448  0131A2  0100               	movlb	0	; () banked
 20449  0131A4  B4D8               	btfsc	status,2,c
 20450  0131A6  D018               	goto	l10750
 20451  0131A8  D7E8               	goto	l10730
 20452  0131AA                     l10740:
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;usb_device_cdc.c: 965: {
 20456                           ;usb_device_cdc.c: 966: *pCDCDst.bRam = *pCDCSrc.bRam;
 20457  0131AA  C116  FFD9         	movff	_pCDCSrc,fsr2l
 20458  0131AE  C117  FFDA         	movff	_pCDCSrc+1,fsr2h
 20459  0131B2  C113  FFE1         	movff	_pCDCDst,fsr1l
 20460  0131B6  C114  FFE2         	movff	_pCDCDst+1,fsr1h
 20461  0131BA  CFDF FFE7          	movff	indf2,indf1
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;usb_device_cdc.c: 967: pCDCDst.bRam++;
 20465  0131BE  0101               	movlb	1	; () banked
 20466  0131C0  4B13               	infsnz	_pCDCDst& (0+255),f,b
 20467  0131C2  2B14               	incf	(_pCDCDst+1)& (0+255),f,b
 20468                           
 20469                           ; BSR set to: 1
 20470                           ;usb_device_cdc.c: 968: pCDCSrc.bRam++;
 20471  0131C4  0101               	movlb	1	; () banked
 20472  0131C6  4B16               	infsnz	_pCDCSrc& (0+255),f,b
 20473  0131C8  2B17               	incf	(_pCDCSrc+1)& (0+255),f,b
 20474                           
 20475                           ; BSR set to: 1
 20476                           ;usb_device_cdc.c: 969: i--;
 20477  0131CA  0100               	movlb	0	; () banked
 20478  0131CC  076A               	decf	CDCTxService@i& (0+255),f,b
 20479  0131CE                     l10748:
 20480  0131CE  0100               	movlb	0	; () banked
 20481  0131D0  516A               	movf	CDCTxService@i& (0+255),w,b
 20482  0131D2  0100               	movlb	0	; () banked
 20483  0131D4  A4D8               	btfss	status,2,c
 20484  0131D6  D7E9               	goto	l10740
 20485  0131D8                     l10750:
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;usb_device_cdc.c: 970: }
 20489                           ;usb_device_cdc.c: 971: }
 20490                           ;usb_device_cdc.c: 977: if(cdc_tx_len == 0)
 20491  0131D8  5045               	movf	_cdc_tx_len,w,c
 20492  0131DA  A4D8               	btfss	status,2,c
 20493  0131DC  D00A               	goto	l10758
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;usb_device_cdc.c: 978: {
 20497                           ;usb_device_cdc.c: 979: if(byte_to_send == 64)
 20498  0131DE  0E40               	movlw	64
 20499  0131E0  0100               	movlb	0	; () banked
 20500  0131E2  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 20501  0131E4  A4D8               	btfss	status,2,c
 20502  0131E6  D002               	goto	l10756
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;usb_device_cdc.c: 980: cdc_trf_state = 2;
 20506  0131E8  0E02               	movlw	2
 20507  0131EA  D001               	goto	L5
 20508  0131EC                     l10756:
 20509                           
 20510                           ; BSR set to: 0
 20511                           ;usb_device_cdc.c: 981: else
 20512                           ;usb_device_cdc.c: 982: cdc_trf_state = 3;
 20513  0131EC  0E03               	movlw	3
 20514  0131EE                     L5:
 20515  0131EE  0100               	movlb	0	; () banked
 20516  0131F0  6FF7               	movwf	_cdc_trf_state& (0+255),b
 20517  0131F2                     l10758:
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;usb_device_cdc.c: 983: }
 20521                           ;usb_device_cdc.c: 984: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 20522  0131F2  0E01               	movlw	1
 20523  0131F4  0100               	movlb	0	; () banked
 20524  0131F6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 20525  0131F8  0E4E               	movlw	low _cdc_data_tx
 20526  0131FA  0100               	movlb	0	; () banked
 20527  0131FC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 20528  0131FE  0E02               	movlw	high _cdc_data_tx
 20529  013200  0100               	movlb	0	; () banked
 20530  013202  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 20531  013204  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 20532  013208  0E02               	movlw	2
 20533  01320A  EC36  F0A3         	call	_USBTransferOnePacket
 20534  01320E  C060  F11D         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 20535  013212  C061  F11E         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 20536  013216                     l10760:
 20537                           
 20538                           ;usb_device_cdc.c: 986: }
 20539                           ;usb_device_cdc.c: 988: {PIE2bits.USBIE = 1;};
 20540  013216  88A0               	bsf	4000,4,c	;volatile
 20541  013218  0012               	return		;funcret
 20542  01321A                     __end_of_CDCTxService:
 20543                           	opt stack 0
 20544                           tblptru	equ	0xFF8
 20545                           tblptrh	equ	0xFF7
 20546                           tblptrl	equ	0xFF6
 20547                           tablat	equ	0xFF5
 20548                           prodh	equ	0xFF4
 20549                           prodl	equ	0xFF3
 20550                           intcon	equ	0xFF2
 20551                           intcon2	equ	0xFF1
 20552                           postinc0	equ	0xFEE
 20553                           wreg	equ	0xFE8
 20554                           indf1	equ	0xFE7
 20555                           postinc1	equ	0xFE6
 20556                           postdec1	equ	0xFE5
 20557                           fsr1h	equ	0xFE2
 20558                           fsr1l	equ	0xFE1
 20559                           indf2	equ	0xFDF
 20560                           postinc2	equ	0xFDE
 20561                           postdec2	equ	0xFDD
 20562                           plusw2	equ	0xFDB
 20563                           fsr2h	equ	0xFDA
 20564                           fsr2l	equ	0xFD9
 20565                           status	equ	0xFD8
 20566                           
 20567 ;; *************** function _USBTransferOnePacket *****************
 20568 ;; Defined at:
 20569 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 20570 ;; Parameters:    Size  Location     Type
 20571 ;;  ep              1    wreg     unsigned char 
 20572 ;;  dir             1    0[BANK0 ] unsigned char 
 20573 ;;  data            2    1[BANK0 ] PTR unsigned char 
 20574 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 20575 ;;  len             1    3[BANK0 ] unsigned char 
 20576 ;; Auto vars:     Size  Location     Type
 20577 ;;  ep              1    4[BANK0 ] unsigned char 
 20578 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 20579 ;;		 -> NULL(0), BDT(48), 
 20580 ;; Return value:  Size  Location     Type
 20581 ;;                  2    0[BANK0 ] PTR void 
 20582 ;; Registers used:
 20583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20584 ;; Tracked objects:
 20585 ;;		On entry : 0/0
 20586 ;;		On exit  : 0/0
 20587 ;;		Unchanged: 0/0
 20588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20590 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20592 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20593 ;;Total ram usage:        7 bytes
 20594 ;; Hardware stack levels used:    1
 20595 ;; Hardware stack levels required when called:   11
 20596 ;; This function calls:
 20597 ;;		Nothing
 20598 ;; This function is called by:
 20599 ;;		_getsUSBUSART
 20600 ;;		_CDCTxService
 20601 ;;		_USBCDCEventHandler
 20602 ;; This function uses a non-reentrant model
 20603 ;;
 20604                           
 20605                           	psect	text84
 20606  01466C                     __ptext84:
 20607                           	opt stack 0
 20608  01466C                     _USBTransferOnePacket:
 20609                           	opt stack 16
 20610                           
 20611                           ;incstack = 0
 20612                           ;USBTransferOnePacket@ep stored from wreg
 20613  01466C  0100               	movlb	0	; () banked
 20614  01466E  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 20615                           
 20616                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 20617                           ;usb_device.c: 1000: if(dir != 0)
 20618  014670  0100               	movlb	0	; () banked
 20619  014672  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 20620  014674  0100               	movlb	0	; () banked
 20621  014676  B4D8               	btfsc	status,2,c
 20622  014678  D008               	goto	l10216
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;usb_device.c: 1001: {
 20626                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 20627  01467A  0100               	movlb	0	; () banked
 20628  01467C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20629  01467E  0D02               	mullw	2
 20630  014680  0EF0               	movlw	low _pBDTEntryIn
 20631  014682  24F3               	addwf	prodl,w,c
 20632  014684  6ED9               	movwf	fsr2l,c
 20633  014686  0E00               	movlw	high _pBDTEntryIn
 20634  014688  D007               	goto	L6
 20635  01468A                     l10216:
 20636                           
 20637                           ; BSR set to: 0
 20638                           ;usb_device.c: 1005: else
 20639                           ;usb_device.c: 1006: {
 20640                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 20641  01468A  0100               	movlb	0	; () banked
 20642  01468C  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20643  01468E  0D02               	mullw	2
 20644  014690  0E00               	movlw	low _pBDTEntryOut
 20645  014692  24F3               	addwf	prodl,w,c
 20646  014694  6ED9               	movwf	fsr2l,c
 20647  014696  0E01               	movlw	high _pBDTEntryOut
 20648  014698                     L6:
 20649  014698  20F4               	addwfc	prodh,w,c
 20650  01469A  6EDA               	movwf	fsr2h,c
 20651  01469C  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 20652  0146A0  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;usb_device.c: 1009: }
 20656                           ;usb_device.c: 1013: if(handle == 0)
 20657                           
 20658                           ; BSR set to: 0
 20659  0146A4  0100               	movlb	0	; () banked
 20660  0146A6  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20661  0146A8  0100               	movlb	0	; () banked
 20662  0146AA  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20663  0146AC  A4D8               	btfss	status,2,c
 20664  0146AE  D007               	goto	l10224
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;usb_device.c: 1014: {
 20668                           ;usb_device.c: 1015: return 0;
 20669  0146B0  0E00               	movlw	0
 20670  0146B2  0100               	movlb	0	; () banked
 20671  0146B4  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 20672  0146B6  0E00               	movlw	0
 20673  0146B8  0100               	movlb	0	; () banked
 20674  0146BA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 20675                           
 20676                           ; BSR set to: 0
 20677  0146BC  0012               	return	
 20678  0146BE                     l10224:
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;usb_device.c: 1016: }
 20682                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 20683  0146BE  0100               	movlb	0	; () banked
 20684  0146C0  EE20 F002          	lfsr	2,2
 20685  0146C4  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20686  0146C6  26D9               	addwf	fsr2l,f,c
 20687  0146C8  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20688  0146CA  22DA               	addwfc	fsr2h,f,c
 20689  0146CC  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 20690  0146D0  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 20691                           
 20692                           ;usb_device.c: 1030: handle->CNT = len;
 20693  0146D4  0100               	movlb	0	; () banked
 20694  0146D6  EE20 F001          	lfsr	2,1
 20695  0146DA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 20696  0146DC  26D9               	addwf	fsr2l,f,c
 20697  0146DE  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 20698  0146E0  22DA               	addwfc	fsr2h,f,c
 20699  0146E2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 20703  0146E6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20704  0146EA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20705  0146EE  0E40               	movlw	64
 20706  0146F0  16DF               	andwf	indf2,f,c
 20707                           
 20708                           ; BSR set to: 0
 20709                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 20710  0146F2  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20711  0146F6  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20712  0146FA  0E00               	movlw	0
 20713  0146FC  86DB               	bsf	plusw2,3,c
 20714                           
 20715                           ; BSR set to: 0
 20716                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 20717  0146FE  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 20718  014702  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 20719  014706  0E00               	movlw	0
 20720  014708  8EDB               	bsf	plusw2,7,c
 20721                           
 20722                           ; BSR set to: 0
 20723                           ;usb_device.c: 1036: if(dir != 0)
 20724  01470A  0100               	movlb	0	; () banked
 20725  01470C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 20726  01470E  0100               	movlb	0	; () banked
 20727  014710  B4D8               	btfsc	status,2,c
 20728  014712  D008               	goto	l10236
 20729                           
 20730                           ; BSR set to: 0
 20731                           ;usb_device.c: 1037: {
 20732                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 20733  014714  0100               	movlb	0	; () banked
 20734  014716  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20735  014718  0D02               	mullw	2
 20736  01471A  0EF0               	movlw	low _pBDTEntryIn
 20737  01471C  24F3               	addwf	prodl,w,c
 20738  01471E  6ED9               	movwf	fsr2l,c
 20739  014720  0E00               	movlw	high _pBDTEntryIn
 20740  014722  D007               	goto	L7
 20741  014724                     l10236:
 20742                           
 20743                           ; BSR set to: 0
 20744                           ;usb_device.c: 1041: else
 20745                           ;usb_device.c: 1042: {
 20746                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 20747  014724  0100               	movlb	0	; () banked
 20748  014726  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 20749  014728  0D02               	mullw	2
 20750  01472A  0E00               	movlw	low _pBDTEntryOut
 20751  01472C  24F3               	addwf	prodl,w,c
 20752  01472E  6ED9               	movwf	fsr2l,c
 20753  014730  0E01               	movlw	high _pBDTEntryOut
 20754  014732                     L7:
 20755  014732  20F4               	addwfc	prodh,w,c
 20756  014734  6EDA               	movwf	fsr2h,c
 20757  014736  0E04               	movlw	4
 20758  014738  1ADF               	xorwf	indf2,f,c
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;usb_device.c: 1045: }
 20762                           ;usb_device.c: 1046: return (void*)handle;
 20763                           
 20764                           ; BSR set to: 0
 20765  01473A  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 20766  01473E  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 20767  014742  0012               	return	
 20768  014744                     __end_of_USBTransferOnePacket:
 20769                           	opt stack 0
 20770                           tblptru	equ	0xFF8
 20771                           tblptrh	equ	0xFF7
 20772                           tblptrl	equ	0xFF6
 20773                           tablat	equ	0xFF5
 20774                           prodh	equ	0xFF4
 20775                           prodl	equ	0xFF3
 20776                           intcon	equ	0xFF2
 20777                           intcon2	equ	0xFF1
 20778                           postinc0	equ	0xFEE
 20779                           wreg	equ	0xFE8
 20780                           indf1	equ	0xFE7
 20781                           postinc1	equ	0xFE6
 20782                           postdec1	equ	0xFE5
 20783                           fsr1h	equ	0xFE2
 20784                           fsr1l	equ	0xFE1
 20785                           indf2	equ	0xFDF
 20786                           postinc2	equ	0xFDE
 20787                           postdec2	equ	0xFDD
 20788                           plusw2	equ	0xFDB
 20789                           fsr2h	equ	0xFDA
 20790                           fsr2l	equ	0xFD9
 20791                           status	equ	0xFD8
 20792                           
 20793 ;; *************** function _RTCC_loop *****************
 20794 ;; Defined at:
 20795 ;;		line 387 in file "../My_header\My_RTCC.h"
 20796 ;; Parameters:    Size  Location     Type
 20797 ;;		None
 20798 ;; Auto vars:     Size  Location     Type
 20799 ;;		None
 20800 ;; Return value:  Size  Location     Type
 20801 ;;		None               void
 20802 ;; Registers used:
 20803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20804 ;; Tracked objects:
 20805 ;;		On entry : 0/0
 20806 ;;		On exit  : 0/0
 20807 ;;		Unchanged: 0/0
 20808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20813 ;;Total ram usage:        0 bytes
 20814 ;; Hardware stack levels used:    1
 20815 ;; Hardware stack levels required when called:   15
 20816 ;; This function calls:
 20817 ;;		_RTCC_from_RTCC
 20818 ;; This function is called by:
 20819 ;;		_main
 20820 ;; This function uses a non-reentrant model
 20821 ;;
 20822                           
 20823                           	psect	text85
 20824  016636                     __ptext85:
 20825                           	opt stack 0
 20826  016636                     _RTCC_loop:
 20827                           	opt stack 15
 20828  016636                     l565:
 20829  016636  010F               	movlb	15	; () banked
 20830  016638  B93F               	btfsc	63,4,b	;volatile
 20831  01663A  D7FD               	goto	l565
 20832                           
 20833                           ; BSR set to: 15
 20834                           ;My_header\My_RTCC.h: 390: halfsec = RTCCFGbits.HALFSEC;
 20835                           
 20836                           ; BSR set to: 15
 20837  01663C  0E00               	movlw	0
 20838  01663E  B73F               	btfsc	63,3,b	;volatile
 20839  016640  0E01               	movlw	1
 20840  016642  0100               	movlb	0	; () banked
 20841  016644  6FF9               	movwf	_halfsec& (0+255),b
 20842                           
 20843                           ; BSR set to: 0
 20844                           ;My_header\My_RTCC.h: 391: if (prev_halfsec != halfsec) {
 20845  016646  0100               	movlb	0	; () banked
 20846  016648  51F9               	movf	_halfsec& (0+255),w,b
 20847  01664A  183A               	xorwf	RTCC_loop@prev_halfsec,w,c
 20848  01664C  B4D8               	btfsc	status,2,c
 20849  01664E  0012               	return	
 20850                           
 20851                           ; BSR set to: 0
 20852                           ;My_header\My_RTCC.h: 392: prev_halfsec = halfsec;
 20853  016650  C0F9  F03A         	movff	_halfsec,RTCC_loop@prev_halfsec
 20854                           
 20855                           ;My_header\My_RTCC.h: 393: colon = halfsec;
 20856  016654  C0F9  F046         	movff	_halfsec,_colon
 20857                           
 20858                           ; BSR set to: 0
 20859                           ;My_header\My_RTCC.h: 394: time_change_flag = 1;
 20860  016658  0E01               	movlw	1
 20861  01665A  6E50               	movwf	_time_change_flag,c
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;My_header\My_RTCC.h: 395: RTCC_from_RTCC(&caltime_now, &epoch_now);
 20865  01665C  0E80               	movlw	low _caltime_now
 20866  01665E  0100               	movlb	0	; () banked
 20867  016660  6F88               	movwf	RTCC_from_RTCC@ct& (0+255),b
 20868  016662  0E01               	movlw	high _caltime_now
 20869  016664  0100               	movlb	0	; () banked
 20870  016666  6F89               	movwf	(RTCC_from_RTCC@ct+1)& (0+255),b
 20871  016668  0EFC               	movlw	low _epoch_now
 20872  01666A  0100               	movlb	0	; () banked
 20873  01666C  6F8A               	movwf	RTCC_from_RTCC@ep& (0+255),b
 20874  01666E  0E00               	movlw	high _epoch_now
 20875  016670  0100               	movlb	0	; () banked
 20876  016672  6F8B               	movwf	(RTCC_from_RTCC@ep+1)& (0+255),b
 20877  016674  ECBC  F0B5         	call	_RTCC_from_RTCC	;wreg free
 20878  016678  0012               	return	
 20879  01667A                     __end_of_RTCC_loop:
 20880                           	opt stack 0
 20881                           tblptru	equ	0xFF8
 20882                           tblptrh	equ	0xFF7
 20883                           tblptrl	equ	0xFF6
 20884                           tablat	equ	0xFF5
 20885                           prodh	equ	0xFF4
 20886                           prodl	equ	0xFF3
 20887                           intcon	equ	0xFF2
 20888                           intcon2	equ	0xFF1
 20889                           postinc0	equ	0xFEE
 20890                           wreg	equ	0xFE8
 20891                           indf1	equ	0xFE7
 20892                           postinc1	equ	0xFE6
 20893                           postdec1	equ	0xFE5
 20894                           fsr1h	equ	0xFE2
 20895                           fsr1l	equ	0xFE1
 20896                           indf2	equ	0xFDF
 20897                           postinc2	equ	0xFDE
 20898                           postdec2	equ	0xFDD
 20899                           plusw2	equ	0xFDB
 20900                           fsr2h	equ	0xFDA
 20901                           fsr2l	equ	0xFD9
 20902                           status	equ	0xFD8
 20903                           
 20904 ;; *************** function _RTCC_from_RTCC *****************
 20905 ;; Defined at:
 20906 ;;		line 231 in file "../My_header\My_RTCC.h"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;  ct              2   40[BANK0 ] PTR struct .
 20909 ;;		 -> caltime_now(7), 
 20910 ;;  ep              2   42[BANK0 ] PTR unsigned long 
 20911 ;;		 -> epoch_now(4), 
 20912 ;; Auto vars:     Size  Location     Type
 20913 ;;		None
 20914 ;; Return value:  Size  Location     Type
 20915 ;;		None               void
 20916 ;; Registers used:
 20917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20918 ;; Tracked objects:
 20919 ;;		On entry : 0/0
 20920 ;;		On exit  : 0/0
 20921 ;;		Unchanged: 0/0
 20922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20923 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20927 ;;Total ram usage:        4 bytes
 20928 ;; Hardware stack levels used:    1
 20929 ;; Hardware stack levels required when called:   14
 20930 ;; This function calls:
 20931 ;;		_RTCC_to_caltime
 20932 ;;		_caltime_to_epoch
 20933 ;; This function is called by:
 20934 ;;		_display_time_1602
 20935 ;;		_RTCC_adjust_time_inc
 20936 ;;		_RTCC_adjust_time_dec
 20937 ;;		_RTCC_loop
 20938 ;;		_print_time
 20939 ;;		_main
 20940 ;;		_display_time_0802
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           	psect	text86
 20945  016B78                     __ptext86:
 20946                           	opt stack 0
 20947  016B78                     _RTCC_from_RTCC:
 20948                           	opt stack 13
 20949                           
 20950                           ;My_header\My_RTCC.h: 232: RTCC_to_caltime(ct);
 20951                           
 20952                           ;incstack = 0
 20953  016B78  C088  F062         	movff	RTCC_from_RTCC@ct,RTCC_to_caltime@ct
 20954  016B7C  C089  F063         	movff	RTCC_from_RTCC@ct+1,RTCC_to_caltime@ct+1
 20955  016B80  ECD3  F0A9         	call	_RTCC_to_caltime	;wreg free
 20956                           
 20957                           ;My_header\My_RTCC.h: 233: caltime_to_epoch(ct, ep);
 20958  016B84  C088  F079         	movff	RTCC_from_RTCC@ct,caltime_to_epoch@ct
 20959  016B88  C089  F07A         	movff	RTCC_from_RTCC@ct+1,caltime_to_epoch@ct+1
 20960  016B8C  C08A  F07B         	movff	RTCC_from_RTCC@ep,caltime_to_epoch@ep
 20961  016B90  C08B  F07C         	movff	RTCC_from_RTCC@ep+1,caltime_to_epoch@ep+1
 20962  016B94  EC70  F092         	call	_caltime_to_epoch	;wreg free
 20963  016B98  0012               	return		;funcret
 20964  016B9A                     __end_of_RTCC_from_RTCC:
 20965                           	opt stack 0
 20966                           tblptru	equ	0xFF8
 20967                           tblptrh	equ	0xFF7
 20968                           tblptrl	equ	0xFF6
 20969                           tablat	equ	0xFF5
 20970                           prodh	equ	0xFF4
 20971                           prodl	equ	0xFF3
 20972                           intcon	equ	0xFF2
 20973                           intcon2	equ	0xFF1
 20974                           postinc0	equ	0xFEE
 20975                           wreg	equ	0xFE8
 20976                           indf1	equ	0xFE7
 20977                           postinc1	equ	0xFE6
 20978                           postdec1	equ	0xFE5
 20979                           fsr1h	equ	0xFE2
 20980                           fsr1l	equ	0xFE1
 20981                           indf2	equ	0xFDF
 20982                           postinc2	equ	0xFDE
 20983                           postdec2	equ	0xFDD
 20984                           plusw2	equ	0xFDB
 20985                           fsr2h	equ	0xFDA
 20986                           fsr2l	equ	0xFD9
 20987                           status	equ	0xFD8
 20988                           
 20989 ;; *************** function _caltime_to_epoch *****************
 20990 ;; Defined at:
 20991 ;;		line 211 in file "../My_header\My_RTCC.h"
 20992 ;; Parameters:    Size  Location     Type
 20993 ;;  ct              2   25[BANK0 ] PTR struct .
 20994 ;;		 -> caltime_now(7), 
 20995 ;;  ep              2   27[BANK0 ] PTR unsigned long 
 20996 ;;		 -> epoch_now(4), 
 20997 ;; Auto vars:     Size  Location     Type
 20998 ;;  month           1   39[BANK0 ] unsigned char 
 20999 ;;  month           1   34[BANK0 ] unsigned char 
 21000 ;;  year            1   33[BANK0 ] unsigned char 
 21001 ;;  epoch           4   35[BANK0 ] unsigned long 
 21002 ;; Return value:  Size  Location     Type
 21003 ;;		None               void
 21004 ;; Registers used:
 21005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21006 ;; Tracked objects:
 21007 ;;		On entry : 0/0
 21008 ;;		On exit  : 0/0
 21009 ;;		Unchanged: 0/0
 21010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21012 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21014 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21015 ;;Total ram usage:       15 bytes
 21016 ;; Hardware stack levels used:    1
 21017 ;; Hardware stack levels required when called:   13
 21018 ;; This function calls:
 21019 ;;		___lmul
 21020 ;;		_month_length
 21021 ;; This function is called by:
 21022 ;;		_RTCC_from_RTCC
 21023 ;;		_RTCC_from_caltime
 21024 ;; This function uses a non-reentrant model
 21025 ;;
 21026                           
 21027                           	psect	text87
 21028  0124E0                     __ptext87:
 21029                           	opt stack 0
 21030  0124E0                     _caltime_to_epoch:
 21031                           	opt stack 13
 21032                           
 21033                           ;My_header\My_RTCC.h: 212: epoch_t epoch = 0;
 21034                           
 21035                           ;incstack = 0
 21036  0124E0  0E00               	movlw	0
 21037  0124E2  0100               	movlb	0	; () banked
 21038  0124E4  6F83               	movwf	caltime_to_epoch@epoch& (0+255),b
 21039  0124E6  0E00               	movlw	0
 21040  0124E8  6F84               	movwf	(caltime_to_epoch@epoch+1)& (0+255),b
 21041  0124EA  0E00               	movlw	0
 21042  0124EC  6F85               	movwf	(caltime_to_epoch@epoch+2)& (0+255),b
 21043  0124EE  0E00               	movlw	0
 21044  0124F0  6F86               	movwf	(caltime_to_epoch@epoch+3)& (0+255),b
 21045                           
 21046                           ;My_header\My_RTCC.h: 213: for (uint8_t year = 0; year < ct->YY; year++) {
 21047  0124F2  0E00               	movlw	0
 21048  0124F4  0100               	movlb	0	; () banked
 21049  0124F6  6F81               	movwf	caltime_to_epoch@year& (0+255),b
 21050  0124F8  D037               	goto	l9690
 21051  0124FA                     l9676:
 21052                           
 21053                           ; BSR set to: 0
 21054                           ;My_header\My_RTCC.h: 214: for (uint8_t month = 1; month <= 12; month++) {
 21055  0124FA  0E01               	movlw	1
 21056  0124FC  0100               	movlb	0	; () banked
 21057  0124FE  6F87               	movwf	caltime_to_epoch@month& (0+255),b
 21058  012500                     l9678:
 21059                           
 21060                           ; BSR set to: 0
 21061  012500  0E0C               	movlw	12
 21062  012502  0100               	movlb	0	; () banked
 21063  012504  6587               	cpfsgt	caltime_to_epoch@month& (0+255),b
 21064  012506  D001               	goto	l9682
 21065  012508  D02D               	goto	l9688
 21066  01250A                     l9682:
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;My_header\My_RTCC.h: 215: epoch += ((epoch_t)60*60*24) * month_length(year, month);
 21070  01250A  C087  F066         	movff	caltime_to_epoch@month,month_length@month
 21071  01250E  0100               	movlb	0	; () banked
 21072  012510  5181               	movf	caltime_to_epoch@year& (0+255),w,b
 21073  012512  ECC7  F0A2         	call	_month_length
 21074  012516  0100               	movlb	0	; () banked
 21075  012518  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 21076  01251A  0100               	movlb	0	; () banked
 21077  01251C  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 21078  01251E  0100               	movlb	0	; () banked
 21079  012520  6F6D               	movwf	___lmul@multiplier& (0+255),b
 21080  012522  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 21081  012524  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 21082  012526  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 21083  012528  0E80               	movlw	128
 21084  01252A  0100               	movlb	0	; () banked
 21085  01252C  6F71               	movwf	___lmul@multiplicand& (0+255),b
 21086  01252E  0E51               	movlw	81
 21087  012530  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21088  012532  0E01               	movlw	1
 21089  012534  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21090  012536  0E00               	movlw	0
 21091  012538  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21092  01253A  ECA2  F0AF         	call	___lmul	;wreg free
 21093  01253E  0100               	movlb	0	; () banked
 21094  012540  516D               	movf	?___lmul& (0+255),w,b
 21095  012542  0100               	movlb	0	; () banked
 21096  012544  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 21097  012546  0100               	movlb	0	; () banked
 21098  012548  516E               	movf	(?___lmul+1)& (0+255),w,b
 21099  01254A  0100               	movlb	0	; () banked
 21100  01254C  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 21101  01254E  0100               	movlb	0	; () banked
 21102  012550  516F               	movf	(?___lmul+2)& (0+255),w,b
 21103  012552  0100               	movlb	0	; () banked
 21104  012554  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 21105  012556  0100               	movlb	0	; () banked
 21106  012558  5170               	movf	(?___lmul+3)& (0+255),w,b
 21107  01255A  0100               	movlb	0	; () banked
 21108  01255C  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 0
 21111  01255E  0100               	movlb	0	; () banked
 21112  012560  2B87               	incf	caltime_to_epoch@month& (0+255),f,b
 21113  012562  D7CE               	goto	l9678
 21114  012564                     l9688:
 21115                           
 21116                           ; BSR set to: 0
 21117  012564  0100               	movlb	0	; () banked
 21118  012566  2B81               	incf	caltime_to_epoch@year& (0+255),f,b
 21119  012568                     l9690:
 21120                           
 21121                           ; BSR set to: 0
 21122  012568  0100               	movlb	0	; () banked
 21123  01256A  EE20 F006          	lfsr	2,6
 21124  01256E  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 21125  012570  26D9               	addwf	fsr2l,f,c
 21126  012572  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 21127  012574  22DA               	addwfc	fsr2h,f,c
 21128  012576  50DE               	movf	postinc2,w,c
 21129  012578  0100               	movlb	0	; () banked
 21130  01257A  5D81               	subwf	caltime_to_epoch@year& (0+255),w,b
 21131  01257C  A0D8               	btfss	status,0,c
 21132  01257E  D7BD               	goto	l9676
 21133                           
 21134                           ; BSR set to: 0
 21135                           ;My_header\My_RTCC.h: 216: }
 21136                           ;My_header\My_RTCC.h: 217: }
 21137                           ;My_header\My_RTCC.h: 218: for (uint8_t month = 1; month < ct->MM; month++) {
 21138                           
 21139                           ; BSR set to: 0
 21140  012580  0E01               	movlw	1
 21141  012582  0100               	movlb	0	; () banked
 21142  012584  6F82               	movwf	caltime_to_epoch@month_1936& (0+255),b
 21143  012586  D032               	goto	l9698
 21144  012588                     l9694:
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;My_header\My_RTCC.h: 219: epoch += ((epoch_t)60*60*24) * month_length(ct->YY, month);
 21148  012588  C082  F066         	movff	caltime_to_epoch@month_1936,month_length@month
 21149  01258C  0100               	movlb	0	; () banked
 21150  01258E  EE20 F006          	lfsr	2,6
 21151  012592  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 21152  012594  26D9               	addwf	fsr2l,f,c
 21153  012596  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 21154  012598  22DA               	addwfc	fsr2h,f,c
 21155  01259A  50DF               	movf	indf2,w,c
 21156  01259C  ECC7  F0A2         	call	_month_length
 21157  0125A0  0100               	movlb	0	; () banked
 21158  0125A2  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 21159  0125A4  0100               	movlb	0	; () banked
 21160  0125A6  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 21161  0125A8  0100               	movlb	0	; () banked
 21162  0125AA  6F6D               	movwf	___lmul@multiplier& (0+255),b
 21163  0125AC  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 21164  0125AE  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 21165  0125B0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 21166  0125B2  0E80               	movlw	128
 21167  0125B4  0100               	movlb	0	; () banked
 21168  0125B6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 21169  0125B8  0E51               	movlw	81
 21170  0125BA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21171  0125BC  0E01               	movlw	1
 21172  0125BE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21173  0125C0  0E00               	movlw	0
 21174  0125C2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21175  0125C4  ECA2  F0AF         	call	___lmul	;wreg free
 21176  0125C8  0100               	movlb	0	; () banked
 21177  0125CA  516D               	movf	?___lmul& (0+255),w,b
 21178  0125CC  0100               	movlb	0	; () banked
 21179  0125CE  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 21180  0125D0  0100               	movlb	0	; () banked
 21181  0125D2  516E               	movf	(?___lmul+1)& (0+255),w,b
 21182  0125D4  0100               	movlb	0	; () banked
 21183  0125D6  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 21184  0125D8  0100               	movlb	0	; () banked
 21185  0125DA  516F               	movf	(?___lmul+2)& (0+255),w,b
 21186  0125DC  0100               	movlb	0	; () banked
 21187  0125DE  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 21188  0125E0  0100               	movlb	0	; () banked
 21189  0125E2  5170               	movf	(?___lmul+3)& (0+255),w,b
 21190  0125E4  0100               	movlb	0	; () banked
 21191  0125E6  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 21192                           
 21193                           ; BSR set to: 0
 21194  0125E8  0100               	movlb	0	; () banked
 21195  0125EA  2B82               	incf	caltime_to_epoch@month_1936& (0+255),f,b
 21196  0125EC                     l9698:
 21197                           
 21198                           ; BSR set to: 0
 21199  0125EC  0100               	movlb	0	; () banked
 21200  0125EE  EE20 F005          	lfsr	2,5
 21201  0125F2  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 21202  0125F4  26D9               	addwf	fsr2l,f,c
 21203  0125F6  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 21204  0125F8  22DA               	addwfc	fsr2h,f,c
 21205  0125FA  50DE               	movf	postinc2,w,c
 21206  0125FC  0100               	movlb	0	; () banked
 21207  0125FE  5D82               	subwf	caltime_to_epoch@month_1936& (0+255),w,b
 21208  012600  A0D8               	btfss	status,0,c
 21209  012602  D7C2               	goto	l9694
 21210                           
 21211                           ; BSR set to: 0
 21212                           ;My_header\My_RTCC.h: 220: }
 21213                           ;My_header\My_RTCC.h: 221: epoch += ((epoch_t)60*60*24) * (ct->DD - 1);
 21214                           
 21215                           ; BSR set to: 0
 21216  012604  0EFF               	movlw	255
 21217  012606  0100               	movlb	0	; () banked
 21218  012608  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 21219  01260A  0EFF               	movlw	255
 21220  01260C  0100               	movlb	0	; () banked
 21221  01260E  6F7E               	movwf	(??_caltime_to_epoch+1)& (0+255),b
 21222  012610  0100               	movlb	0	; () banked
 21223  012612  EE20 F004          	lfsr	2,4
 21224  012616  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 21225  012618  26D9               	addwf	fsr2l,f,c
 21226  01261A  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 21227  01261C  22DA               	addwfc	fsr2h,f,c
 21228  01261E  50DF               	movf	indf2,w,c
 21229  012620  0100               	movlb	0	; () banked
 21230  012622  6F7F               	movwf	(??_caltime_to_epoch+2)& (0+255),b
 21231  012624  6B80               	clrf	(??_caltime_to_epoch+3)& (0+255),b
 21232  012626  0100               	movlb	0	; () banked
 21233  012628  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 21234  01262A  0100               	movlb	0	; () banked
 21235  01262C  277F               	addwf	(??_caltime_to_epoch+2)& (0+255),f,b
 21236  01262E  0100               	movlb	0	; () banked
 21237  012630  517E               	movf	(??_caltime_to_epoch+1)& (0+255),w,b
 21238  012632  0100               	movlb	0	; () banked
 21239  012634  2380               	addwfc	(??_caltime_to_epoch+3)& (0+255),f,b
 21240  012636  C07F  F06D         	movff	??_caltime_to_epoch+2,___lmul@multiplier
 21241  01263A  C080  F06E         	movff	??_caltime_to_epoch+3,___lmul@multiplier+1
 21242  01263E  0100               	movlb	0	; () banked
 21243  012640  0E00               	movlw	0
 21244  012642  BF6E               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 21245  012644  0EFF               	movlw	-1
 21246  012646  6F6F               	movwf	(___lmul@multiplier+2)& (0+255),b
 21247  012648  6F70               	movwf	(___lmul@multiplier+3)& (0+255),b
 21248  01264A  0E80               	movlw	128
 21249  01264C  0100               	movlb	0	; () banked
 21250  01264E  6F71               	movwf	___lmul@multiplicand& (0+255),b
 21251  012650  0E51               	movlw	81
 21252  012652  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21253  012654  0E01               	movlw	1
 21254  012656  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21255  012658  0E00               	movlw	0
 21256  01265A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21257  01265C  ECA2  F0AF         	call	___lmul	;wreg free
 21258  012660  0100               	movlb	0	; () banked
 21259  012662  516D               	movf	?___lmul& (0+255),w,b
 21260  012664  0100               	movlb	0	; () banked
 21261  012666  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 21262  012668  0100               	movlb	0	; () banked
 21263  01266A  516E               	movf	(?___lmul+1)& (0+255),w,b
 21264  01266C  0100               	movlb	0	; () banked
 21265  01266E  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 21266  012670  0100               	movlb	0	; () banked
 21267  012672  516F               	movf	(?___lmul+2)& (0+255),w,b
 21268  012674  0100               	movlb	0	; () banked
 21269  012676  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 21270  012678  0100               	movlb	0	; () banked
 21271  01267A  5170               	movf	(?___lmul+3)& (0+255),w,b
 21272  01267C  0100               	movlb	0	; () banked
 21273  01267E  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 21274                           
 21275                           ;My_header\My_RTCC.h: 222: epoch += ((epoch_t)60*60) * ct->hh;
 21276  012680  0100               	movlb	0	; () banked
 21277  012682  EE20 F002          	lfsr	2,2
 21278  012686  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 21279  012688  26D9               	addwf	fsr2l,f,c
 21280  01268A  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 21281  01268C  22DA               	addwfc	fsr2h,f,c
 21282  01268E  50DF               	movf	indf2,w,c
 21283  012690  0100               	movlb	0	; () banked
 21284  012692  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 21285  012694  0100               	movlb	0	; () banked
 21286  012696  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 21287  012698  0100               	movlb	0	; () banked
 21288  01269A  6F6D               	movwf	___lmul@multiplier& (0+255),b
 21289  01269C  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 21290  01269E  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 21291  0126A0  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 21292  0126A2  0E10               	movlw	16
 21293  0126A4  0100               	movlb	0	; () banked
 21294  0126A6  6F71               	movwf	___lmul@multiplicand& (0+255),b
 21295  0126A8  0E0E               	movlw	14
 21296  0126AA  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21297  0126AC  0E00               	movlw	0
 21298  0126AE  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21299  0126B0  0E00               	movlw	0
 21300  0126B2  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21301  0126B4  ECA2  F0AF         	call	___lmul	;wreg free
 21302  0126B8  0100               	movlb	0	; () banked
 21303  0126BA  516D               	movf	?___lmul& (0+255),w,b
 21304  0126BC  0100               	movlb	0	; () banked
 21305  0126BE  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 21306  0126C0  0100               	movlb	0	; () banked
 21307  0126C2  516E               	movf	(?___lmul+1)& (0+255),w,b
 21308  0126C4  0100               	movlb	0	; () banked
 21309  0126C6  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 21310  0126C8  0100               	movlb	0	; () banked
 21311  0126CA  516F               	movf	(?___lmul+2)& (0+255),w,b
 21312  0126CC  0100               	movlb	0	; () banked
 21313  0126CE  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 21314  0126D0  0100               	movlb	0	; () banked
 21315  0126D2  5170               	movf	(?___lmul+3)& (0+255),w,b
 21316  0126D4  0100               	movlb	0	; () banked
 21317  0126D6  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 21318                           
 21319                           ;My_header\My_RTCC.h: 223: epoch += ((epoch_t)60) * ct->mm;
 21320  0126D8  0100               	movlb	0	; () banked
 21321  0126DA  EE20 F001          	lfsr	2,1
 21322  0126DE  5179               	movf	caltime_to_epoch@ct& (0+255),w,b
 21323  0126E0  26D9               	addwf	fsr2l,f,c
 21324  0126E2  517A               	movf	(caltime_to_epoch@ct+1)& (0+255),w,b
 21325  0126E4  22DA               	addwfc	fsr2h,f,c
 21326  0126E6  50DF               	movf	indf2,w,c
 21327  0126E8  0100               	movlb	0	; () banked
 21328  0126EA  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 21329  0126EC  0100               	movlb	0	; () banked
 21330  0126EE  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 21331  0126F0  0100               	movlb	0	; () banked
 21332  0126F2  6F6D               	movwf	___lmul@multiplier& (0+255),b
 21333  0126F4  6B6E               	clrf	(___lmul@multiplier+1)& (0+255),b
 21334  0126F6  6B6F               	clrf	(___lmul@multiplier+2)& (0+255),b
 21335  0126F8  6B70               	clrf	(___lmul@multiplier+3)& (0+255),b
 21336  0126FA  0E3C               	movlw	60
 21337  0126FC  0100               	movlb	0	; () banked
 21338  0126FE  6F71               	movwf	___lmul@multiplicand& (0+255),b
 21339  012700  0E00               	movlw	0
 21340  012702  6F72               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21341  012704  0E00               	movlw	0
 21342  012706  6F73               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21343  012708  0E00               	movlw	0
 21344  01270A  6F74               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21345  01270C  ECA2  F0AF         	call	___lmul	;wreg free
 21346  012710  0100               	movlb	0	; () banked
 21347  012712  516D               	movf	?___lmul& (0+255),w,b
 21348  012714  0100               	movlb	0	; () banked
 21349  012716  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 21350  012718  0100               	movlb	0	; () banked
 21351  01271A  516E               	movf	(?___lmul+1)& (0+255),w,b
 21352  01271C  0100               	movlb	0	; () banked
 21353  01271E  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 21354  012720  0100               	movlb	0	; () banked
 21355  012722  516F               	movf	(?___lmul+2)& (0+255),w,b
 21356  012724  0100               	movlb	0	; () banked
 21357  012726  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 21358  012728  0100               	movlb	0	; () banked
 21359  01272A  5170               	movf	(?___lmul+3)& (0+255),w,b
 21360  01272C  0100               	movlb	0	; () banked
 21361  01272E  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 21362                           
 21363                           ; BSR set to: 0
 21364                           ;My_header\My_RTCC.h: 224: epoch += ct->ss;
 21365  012730  C079  FFD9         	movff	caltime_to_epoch@ct,fsr2l
 21366  012734  C07A  FFDA         	movff	caltime_to_epoch@ct+1,fsr2h
 21367  012738  50DF               	movf	indf2,w,c
 21368  01273A  0100               	movlb	0	; () banked
 21369  01273C  6F7D               	movwf	??_caltime_to_epoch& (0+255),b
 21370  01273E  0100               	movlb	0	; () banked
 21371  012740  517D               	movf	??_caltime_to_epoch& (0+255),w,b
 21372  012742  0100               	movlb	0	; () banked
 21373  012744  2783               	addwf	caltime_to_epoch@epoch& (0+255),f,b
 21374  012746  0E00               	movlw	0
 21375  012748  2384               	addwfc	(caltime_to_epoch@epoch+1)& (0+255),f,b
 21376  01274A  2385               	addwfc	(caltime_to_epoch@epoch+2)& (0+255),f,b
 21377  01274C  2386               	addwfc	(caltime_to_epoch@epoch+3)& (0+255),f,b
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;My_header\My_RTCC.h: 226: *ep = epoch;
 21381  01274E  C07B  FFD9         	movff	caltime_to_epoch@ep,fsr2l
 21382  012752  C07C  FFDA         	movff	caltime_to_epoch@ep+1,fsr2h
 21383  012756  C083  FFDE         	movff	caltime_to_epoch@epoch,postinc2
 21384  01275A  C084  FFDE         	movff	caltime_to_epoch@epoch+1,postinc2
 21385  01275E  C085  FFDE         	movff	caltime_to_epoch@epoch+2,postinc2
 21386  012762  C086  FFDE         	movff	caltime_to_epoch@epoch+3,postinc2
 21387                           
 21388                           ; BSR set to: 0
 21389  012766  0012               	return		;funcret
 21390  012768                     __end_of_caltime_to_epoch:
 21391                           	opt stack 0
 21392                           tblptru	equ	0xFF8
 21393                           tblptrh	equ	0xFF7
 21394                           tblptrl	equ	0xFF6
 21395                           tablat	equ	0xFF5
 21396                           prodh	equ	0xFF4
 21397                           prodl	equ	0xFF3
 21398                           intcon	equ	0xFF2
 21399                           intcon2	equ	0xFF1
 21400                           postinc0	equ	0xFEE
 21401                           wreg	equ	0xFE8
 21402                           indf1	equ	0xFE7
 21403                           postinc1	equ	0xFE6
 21404                           postdec1	equ	0xFE5
 21405                           fsr1h	equ	0xFE2
 21406                           fsr1l	equ	0xFE1
 21407                           indf2	equ	0xFDF
 21408                           postinc2	equ	0xFDE
 21409                           postdec2	equ	0xFDD
 21410                           plusw2	equ	0xFDB
 21411                           fsr2h	equ	0xFDA
 21412                           fsr2l	equ	0xFD9
 21413                           status	equ	0xFD8
 21414                           
 21415 ;; *************** function _month_length *****************
 21416 ;; Defined at:
 21417 ;;		line 87 in file "../My_header\My_RTCC.h"
 21418 ;; Parameters:    Size  Location     Type
 21419 ;;  year            1    wreg     unsigned char 
 21420 ;;  month           1    6[BANK0 ] unsigned char 
 21421 ;; Auto vars:     Size  Location     Type
 21422 ;;  year            1   11[BANK0 ] unsigned char 
 21423 ;; Return value:  Size  Location     Type
 21424 ;;                  1    wreg      unsigned char 
 21425 ;; Registers used:
 21426 ;;		wreg, status,2, status,0, cstack
 21427 ;; Tracked objects:
 21428 ;;		On entry : 0/0
 21429 ;;		On exit  : 0/0
 21430 ;;		Unchanged: 0/0
 21431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21432 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21433 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21435 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21436 ;;Total ram usage:        6 bytes
 21437 ;; Hardware stack levels used:    1
 21438 ;; Hardware stack levels required when called:   12
 21439 ;; This function calls:
 21440 ;;		___awmod
 21441 ;; This function is called by:
 21442 ;;		_epoch_to_caltime
 21443 ;;		_caltime_to_epoch
 21444 ;;		_RTCC_adjust_time_inc
 21445 ;;		_RTCC_adjust_time_dec
 21446 ;;		_command_time
 21447 ;; This function uses a non-reentrant model
 21448 ;;
 21449                           
 21450                           	psect	text88
 21451  01458E                     __ptext88:
 21452                           	opt stack 0
 21453  01458E                     _month_length:
 21454                           	opt stack 13
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;incstack = 0
 21458                           ;month_length@year stored from wreg
 21459  01458E  0100               	movlb	0	; () banked
 21460  014590  6F6B               	movwf	month_length@year& (0+255),b
 21461                           
 21462                           ;My_header\My_RTCC.h: 88: if (month == 2) return 28 + !(year & 3)-!(year % 100)+!(year %
      +                           400);
 21463  014592  0E02               	movlw	2
 21464  014594  0100               	movlb	0	; () banked
 21465  014596  1966               	xorwf	month_length@month& (0+255),w,b
 21466  014598  A4D8               	btfss	status,2,c
 21467  01459A  D03E               	goto	l9564
 21468                           
 21469                           ; BSR set to: 0
 21470  01459C  C06B  F060         	movff	month_length@year,___awmod@dividend
 21471  0145A0  0100               	movlb	0	; () banked
 21472  0145A2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 21473  0145A4  0E00               	movlw	0
 21474  0145A6  0100               	movlb	0	; () banked
 21475  0145A8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 21476  0145AA  0E64               	movlw	100
 21477  0145AC  6F62               	movwf	___awmod@divisor& (0+255),b
 21478  0145AE  EC27  F0AB         	call	___awmod	;wreg free
 21479  0145B2  0100               	movlb	0	; () banked
 21480  0145B4  5160               	movf	?___awmod& (0+255),w,b
 21481  0145B6  0100               	movlb	0	; () banked
 21482  0145B8  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 21483  0145BA  A4D8               	btfss	status,2,c
 21484  0145BC  D002               	goto	u10430
 21485  0145BE  0E01               	movlw	1
 21486  0145C0  D001               	goto	u10440
 21487  0145C2                     u10430:
 21488  0145C2  0E00               	movlw	0
 21489  0145C4                     u10440:
 21490  0145C4  0800               	sublw	0
 21491  0145C6  0100               	movlb	0	; () banked
 21492  0145C8  6F67               	movwf	??_month_length& (0+255),b
 21493  0145CA  C06B  F060         	movff	month_length@year,___awmod@dividend
 21494  0145CE  0100               	movlb	0	; () banked
 21495  0145D0  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 21496  0145D2  0E01               	movlw	1
 21497  0145D4  0100               	movlb	0	; () banked
 21498  0145D6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 21499  0145D8  0E90               	movlw	144
 21500  0145DA  6F62               	movwf	___awmod@divisor& (0+255),b
 21501  0145DC  EC27  F0AB         	call	___awmod	;wreg free
 21502  0145E0  0100               	movlb	0	; () banked
 21503  0145E2  5160               	movf	?___awmod& (0+255),w,b
 21504  0145E4  0100               	movlb	0	; () banked
 21505  0145E6  1161               	iorwf	(?___awmod+1)& (0+255),w,b
 21506  0145E8  A4D8               	btfss	status,2,c
 21507  0145EA  D004               	goto	u10450
 21508  0145EC  0100               	movlb	0	; () banked
 21509  0145EE  6B68               	clrf	(??_month_length+1)& (0+255),b
 21510  0145F0  2B68               	incf	(??_month_length+1)& (0+255),f,b
 21511  0145F2  D002               	goto	u10468
 21512  0145F4                     u10450:
 21513  0145F4  0100               	movlb	0	; () banked
 21514  0145F6  6B68               	clrf	(??_month_length+1)& (0+255),b
 21515  0145F8                     u10468:
 21516  0145F8  C06B  F069         	movff	month_length@year,??_month_length+2
 21517  0145FC  0E03               	movlw	3
 21518  0145FE  0100               	movlb	0	; () banked
 21519  014600  1769               	andwf	(??_month_length+2)& (0+255),f,b
 21520  014602  A4D8               	btfss	status,2,c
 21521  014604  D002               	goto	u10470
 21522  014606  0E01               	movlw	1
 21523  014608  D001               	goto	u10480
 21524  01460A                     u10470:
 21525  01460A  0E00               	movlw	0
 21526  01460C                     u10480:
 21527  01460C  0100               	movlb	0	; () banked
 21528  01460E  2568               	addwf	(??_month_length+1)& (0+255),w,b
 21529  014610  0100               	movlb	0	; () banked
 21530  014612  2567               	addwf	??_month_length& (0+255),w,b
 21531  014614  0F1C               	addlw	28
 21532                           
 21533                           ; BSR set to: 0
 21534                           
 21535                           ; BSR set to: 0
 21536  014616  0012               	return	
 21537  014618                     l9564:
 21538                           
 21539                           ; BSR set to: 0
 21540                           ;My_header\My_RTCC.h: 89: else return 31 - (((-(month & 1)^month)&13) == 4);
 21541  014618  0100               	movlb	0	; () banked
 21542  01461A  5166               	movf	month_length@month& (0+255),w,b
 21543  01461C  0B01               	andlw	1
 21544  01461E  0100               	movlb	0	; () banked
 21545  014620  6F67               	movwf	??_month_length& (0+255),b
 21546  014622  6B68               	clrf	(??_month_length+1)& (0+255),b
 21547  014624  0100               	movlb	0	; () banked
 21548  014626  1F67               	comf	??_month_length& (0+255),f,b
 21549  014628  1F68               	comf	(??_month_length+1)& (0+255),f,b
 21550  01462A  4B67               	infsnz	??_month_length& (0+255),f,b
 21551  01462C  2B68               	incf	(??_month_length+1)& (0+255),f,b
 21552  01462E  0100               	movlb	0	; () banked
 21553  014630  5166               	movf	month_length@month& (0+255),w,b
 21554  014632  0100               	movlb	0	; () banked
 21555  014634  6F69               	movwf	(??_month_length+2)& (0+255),b
 21556  014636  6B6A               	clrf	(??_month_length+3)& (0+255),b
 21557  014638  0100               	movlb	0	; () banked
 21558  01463A  5167               	movf	??_month_length& (0+255),w,b
 21559  01463C  0100               	movlb	0	; () banked
 21560  01463E  1B69               	xorwf	(??_month_length+2)& (0+255),f,b
 21561  014640  0100               	movlb	0	; () banked
 21562  014642  5168               	movf	(??_month_length+1)& (0+255),w,b
 21563  014644  0100               	movlb	0	; () banked
 21564  014646  1B6A               	xorwf	(??_month_length+3)& (0+255),f,b
 21565  014648  0E0D               	movlw	13
 21566  01464A  0100               	movlb	0	; () banked
 21567  01464C  1769               	andwf	(??_month_length+2)& (0+255),f,b
 21568  01464E  0E00               	movlw	0
 21569  014650  176A               	andwf	(??_month_length+3)& (0+255),f,b
 21570  014652  0E04               	movlw	4
 21571  014654  0100               	movlb	0	; () banked
 21572  014656  1969               	xorwf	(??_month_length+2)& (0+255),w,b
 21573  014658  0100               	movlb	0	; () banked
 21574  01465A  116A               	iorwf	(??_month_length+3)& (0+255),w,b
 21575  01465C  A4D8               	btfss	status,2,c
 21576  01465E  D002               	goto	u10490
 21577  014660  0E01               	movlw	1
 21578  014662  D001               	goto	u10500
 21579  014664                     u10490:
 21580  014664  0E00               	movlw	0
 21581  014666                     u10500:
 21582  014666  0800               	sublw	0
 21583  014668  0F1F               	addlw	31
 21584                           
 21585                           ; BSR set to: 0
 21586  01466A  0012               	return	
 21587  01466C                     __end_of_month_length:
 21588                           	opt stack 0
 21589                           tblptru	equ	0xFF8
 21590                           tblptrh	equ	0xFF7
 21591                           tblptrl	equ	0xFF6
 21592                           tablat	equ	0xFF5
 21593                           prodh	equ	0xFF4
 21594                           prodl	equ	0xFF3
 21595                           intcon	equ	0xFF2
 21596                           intcon2	equ	0xFF1
 21597                           postinc0	equ	0xFEE
 21598                           wreg	equ	0xFE8
 21599                           indf1	equ	0xFE7
 21600                           postinc1	equ	0xFE6
 21601                           postdec1	equ	0xFE5
 21602                           fsr1h	equ	0xFE2
 21603                           fsr1l	equ	0xFE1
 21604                           indf2	equ	0xFDF
 21605                           postinc2	equ	0xFDE
 21606                           postdec2	equ	0xFDD
 21607                           plusw2	equ	0xFDB
 21608                           fsr2h	equ	0xFDA
 21609                           fsr2l	equ	0xFD9
 21610                           status	equ	0xFD8
 21611                           
 21612 ;; *************** function ___awmod *****************
 21613 ;; Defined at:
 21614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 21615 ;; Parameters:    Size  Location     Type
 21616 ;;  dividend        2    0[BANK0 ] int 
 21617 ;;  divisor         2    2[BANK0 ] int 
 21618 ;; Auto vars:     Size  Location     Type
 21619 ;;  sign            1    5[BANK0 ] unsigned char 
 21620 ;;  counter         1    4[BANK0 ] unsigned char 
 21621 ;; Return value:  Size  Location     Type
 21622 ;;                  2    0[BANK0 ] int 
 21623 ;; Registers used:
 21624 ;;		wreg, status,2, status,0
 21625 ;; Tracked objects:
 21626 ;;		On entry : 0/0
 21627 ;;		On exit  : 0/0
 21628 ;;		Unchanged: 0/0
 21629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21631 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21633 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21634 ;;Total ram usage:        6 bytes
 21635 ;; Hardware stack levels used:    1
 21636 ;; Hardware stack levels required when called:   11
 21637 ;; This function calls:
 21638 ;;		Nothing
 21639 ;; This function is called by:
 21640 ;;		_month_length
 21641 ;; This function uses a non-reentrant model
 21642 ;;
 21643                           
 21644                           	psect	text89
 21645  01564E                     __ptext89:
 21646                           	opt stack 0
 21647  01564E                     ___awmod:
 21648                           	opt stack 13
 21649                           
 21650                           ; BSR set to: 0
 21651                           ;incstack = 0
 21652  01564E  0E00               	movlw	0
 21653  015650  0100               	movlb	0	; () banked
 21654  015652  6F65               	movwf	___awmod@sign& (0+255),b
 21655                           
 21656                           ; BSR set to: 0
 21657  015654  0100               	movlb	0	; () banked
 21658  015656  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 21659  015658  D008               	goto	l9512
 21660                           
 21661                           ; BSR set to: 0
 21662  01565A  0100               	movlb	0	; () banked
 21663  01565C  6D60               	negf	___awmod@dividend& (0+255),b
 21664  01565E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 21665  015660  B0D8               	btfsc	status,0,c
 21666  015662  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 21667                           
 21668                           ; BSR set to: 0
 21669  015664  0E01               	movlw	1
 21670  015666  0100               	movlb	0	; () banked
 21671  015668  6F65               	movwf	___awmod@sign& (0+255),b
 21672  01566A                     l9512:
 21673                           
 21674                           ; BSR set to: 0
 21675  01566A  0100               	movlb	0	; () banked
 21676  01566C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 21677  01566E  D005               	goto	l9516
 21678                           
 21679                           ; BSR set to: 0
 21680  015670  0100               	movlb	0	; () banked
 21681  015672  6D62               	negf	___awmod@divisor& (0+255),b
 21682  015674  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 21683  015676  B0D8               	btfsc	status,0,c
 21684  015678  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 21685  01567A                     l9516:
 21686                           
 21687                           ; BSR set to: 0
 21688  01567A  0100               	movlb	0	; () banked
 21689  01567C  5162               	movf	___awmod@divisor& (0+255),w,b
 21690  01567E  0100               	movlb	0	; () banked
 21691  015680  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 21692  015682  B4D8               	btfsc	status,2,c
 21693  015684  D026               	goto	l9532
 21694                           
 21695                           ; BSR set to: 0
 21696  015686  0E01               	movlw	1
 21697  015688  0100               	movlb	0	; () banked
 21698  01568A  6F64               	movwf	___awmod@counter& (0+255),b
 21699  01568C  D006               	goto	l9522
 21700  01568E                     l9520:
 21701                           
 21702                           ; BSR set to: 0
 21703  01568E  0100               	movlb	0	; () banked
 21704  015690  90D8               	bcf	status,0,c
 21705  015692  3762               	rlcf	___awmod@divisor& (0+255),f,b
 21706  015694  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 21707  015696  0100               	movlb	0	; () banked
 21708  015698  2B64               	incf	___awmod@counter& (0+255),f,b
 21709  01569A                     l9522:
 21710                           
 21711                           ; BSR set to: 0
 21712  01569A  0100               	movlb	0	; () banked
 21713  01569C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 21714  01569E  D7F7               	goto	l9520
 21715  0156A0                     l9524:
 21716                           
 21717                           ; BSR set to: 0
 21718  0156A0  0100               	movlb	0	; () banked
 21719  0156A2  5162               	movf	___awmod@divisor& (0+255),w,b
 21720  0156A4  0100               	movlb	0	; () banked
 21721  0156A6  5D60               	subwf	___awmod@dividend& (0+255),w,b
 21722  0156A8  0100               	movlb	0	; () banked
 21723  0156AA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 21724  0156AC  0100               	movlb	0	; () banked
 21725  0156AE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 21726  0156B0  A0D8               	btfss	status,0,c
 21727  0156B2  D008               	goto	l9528
 21728                           
 21729                           ; BSR set to: 0
 21730  0156B4  0100               	movlb	0	; () banked
 21731  0156B6  5162               	movf	___awmod@divisor& (0+255),w,b
 21732  0156B8  0100               	movlb	0	; () banked
 21733  0156BA  5F60               	subwf	___awmod@dividend& (0+255),f,b
 21734  0156BC  0100               	movlb	0	; () banked
 21735  0156BE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 21736  0156C0  0100               	movlb	0	; () banked
 21737  0156C2  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 21738  0156C4                     l9528:
 21739                           
 21740                           ; BSR set to: 0
 21741  0156C4  0100               	movlb	0	; () banked
 21742  0156C6  90D8               	bcf	status,0,c
 21743  0156C8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 21744  0156CA  3362               	rrcf	___awmod@divisor& (0+255),f,b
 21745                           
 21746                           ; BSR set to: 0
 21747  0156CC  0100               	movlb	0	; () banked
 21748  0156CE  2F64               	decfsz	___awmod@counter& (0+255),f,b
 21749  0156D0  D7E7               	goto	l9524
 21750  0156D2                     l9532:
 21751                           
 21752                           ; BSR set to: 0
 21753  0156D2  0100               	movlb	0	; () banked
 21754  0156D4  5165               	movf	___awmod@sign& (0+255),w,b
 21755  0156D6  0100               	movlb	0	; () banked
 21756  0156D8  B4D8               	btfsc	status,2,c
 21757  0156DA  D005               	goto	l9536
 21758                           
 21759                           ; BSR set to: 0
 21760  0156DC  0100               	movlb	0	; () banked
 21761  0156DE  6D60               	negf	___awmod@dividend& (0+255),b
 21762  0156E0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 21763  0156E2  B0D8               	btfsc	status,0,c
 21764  0156E4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 21765  0156E6                     l9536:
 21766                           
 21767                           ; BSR set to: 0
 21768  0156E6  C060  F060         	movff	___awmod@dividend,?___awmod
 21769  0156EA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 21770  0156EE  0012               	return	
 21771  0156F0                     __end_of___awmod:
 21772                           	opt stack 0
 21773                           tblptru	equ	0xFF8
 21774                           tblptrh	equ	0xFF7
 21775                           tblptrl	equ	0xFF6
 21776                           tablat	equ	0xFF5
 21777                           prodh	equ	0xFF4
 21778                           prodl	equ	0xFF3
 21779                           intcon	equ	0xFF2
 21780                           intcon2	equ	0xFF1
 21781                           postinc0	equ	0xFEE
 21782                           wreg	equ	0xFE8
 21783                           indf1	equ	0xFE7
 21784                           postinc1	equ	0xFE6
 21785                           postdec1	equ	0xFE5
 21786                           fsr1h	equ	0xFE2
 21787                           fsr1l	equ	0xFE1
 21788                           indf2	equ	0xFDF
 21789                           postinc2	equ	0xFDE
 21790                           postdec2	equ	0xFDD
 21791                           plusw2	equ	0xFDB
 21792                           fsr2h	equ	0xFDA
 21793                           fsr2l	equ	0xFD9
 21794                           status	equ	0xFD8
 21795                           
 21796 ;; *************** function ___lmul *****************
 21797 ;; Defined at:
 21798 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
 21799 ;; Parameters:    Size  Location     Type
 21800 ;;  multiplier      4   13[BANK0 ] unsigned long 
 21801 ;;  multiplicand    4   17[BANK0 ] unsigned long 
 21802 ;; Auto vars:     Size  Location     Type
 21803 ;;  product         4   21[BANK0 ] unsigned long 
 21804 ;; Return value:  Size  Location     Type
 21805 ;;                  4   13[BANK0 ] unsigned long 
 21806 ;; Registers used:
 21807 ;;		wreg, status,2, status,0
 21808 ;; Tracked objects:
 21809 ;;		On entry : 0/0
 21810 ;;		On exit  : 0/0
 21811 ;;		Unchanged: 0/0
 21812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21813 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21814 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21816 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21817 ;;Total ram usage:       12 bytes
 21818 ;; Hardware stack levels used:    1
 21819 ;; Hardware stack levels required when called:   11
 21820 ;; This function calls:
 21821 ;;		Nothing
 21822 ;; This function is called by:
 21823 ;;		_get_quot_rem
 21824 ;;		_caltime_to_epoch
 21825 ;;		_RTCC_adjust_time_inc
 21826 ;;		_RTCC_adjust_time_dec
 21827 ;; This function uses a non-reentrant model
 21828 ;;
 21829                           
 21830                           	psect	text90
 21831  015F44                     __ptext90:
 21832                           	opt stack 0
 21833  015F44                     ___lmul:
 21834                           	opt stack 14
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;incstack = 0
 21838  015F44  0E00               	movlw	0
 21839  015F46  0100               	movlb	0	; () banked
 21840  015F48  6F75               	movwf	___lmul@product& (0+255),b
 21841  015F4A  0E00               	movlw	0
 21842  015F4C  6F76               	movwf	(___lmul@product+1)& (0+255),b
 21843  015F4E  0E00               	movlw	0
 21844  015F50  6F77               	movwf	(___lmul@product+2)& (0+255),b
 21845  015F52  0E00               	movlw	0
 21846  015F54  6F78               	movwf	(___lmul@product+3)& (0+255),b
 21847  015F56                     l9570:
 21848                           
 21849                           ; BSR set to: 0
 21850  015F56  0100               	movlb	0	; () banked
 21851  015F58  A16D               	btfss	___lmul@multiplier& (0+255),0,b
 21852  015F5A  D010               	goto	l9574
 21853                           
 21854                           ; BSR set to: 0
 21855  015F5C  0100               	movlb	0	; () banked
 21856  015F5E  5171               	movf	___lmul@multiplicand& (0+255),w,b
 21857  015F60  0100               	movlb	0	; () banked
 21858  015F62  2775               	addwf	___lmul@product& (0+255),f,b
 21859  015F64  0100               	movlb	0	; () banked
 21860  015F66  5172               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 21861  015F68  0100               	movlb	0	; () banked
 21862  015F6A  2376               	addwfc	(___lmul@product+1)& (0+255),f,b
 21863  015F6C  0100               	movlb	0	; () banked
 21864  015F6E  5173               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 21865  015F70  0100               	movlb	0	; () banked
 21866  015F72  2377               	addwfc	(___lmul@product+2)& (0+255),f,b
 21867  015F74  0100               	movlb	0	; () banked
 21868  015F76  5174               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 21869  015F78  0100               	movlb	0	; () banked
 21870  015F7A  2378               	addwfc	(___lmul@product+3)& (0+255),f,b
 21871  015F7C                     l9574:
 21872                           
 21873                           ; BSR set to: 0
 21874  015F7C  0100               	movlb	0	; () banked
 21875  015F7E  90D8               	bcf	status,0,c
 21876  015F80  3771               	rlcf	___lmul@multiplicand& (0+255),f,b
 21877  015F82  3772               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 21878  015F84  3773               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 21879  015F86  3774               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 21880                           
 21881                           ; BSR set to: 0
 21882  015F88  0100               	movlb	0	; () banked
 21883  015F8A  90D8               	bcf	status,0,c
 21884  015F8C  3370               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 21885  015F8E  336F               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 21886  015F90  336E               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 21887  015F92  336D               	rrcf	___lmul@multiplier& (0+255),f,b
 21888  015F94  0100               	movlb	0	; () banked
 21889  015F96  516D               	movf	___lmul@multiplier& (0+255),w,b
 21890  015F98  0100               	movlb	0	; () banked
 21891  015F9A  116E               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 21892  015F9C  0100               	movlb	0	; () banked
 21893  015F9E  116F               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 21894  015FA0  0100               	movlb	0	; () banked
 21895  015FA2  1170               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 21896  015FA4  A4D8               	btfss	status,2,c
 21897  015FA6  D7D7               	goto	l9570
 21898                           
 21899                           ; BSR set to: 0
 21900  015FA8  C075  F06D         	movff	___lmul@product,?___lmul
 21901  015FAC  C076  F06E         	movff	___lmul@product+1,?___lmul+1
 21902  015FB0  C077  F06F         	movff	___lmul@product+2,?___lmul+2
 21903  015FB4  C078  F070         	movff	___lmul@product+3,?___lmul+3
 21904                           
 21905                           ; BSR set to: 0
 21906  015FB8  0012               	return		;funcret
 21907  015FBA                     __end_of___lmul:
 21908                           	opt stack 0
 21909                           tblptru	equ	0xFF8
 21910                           tblptrh	equ	0xFF7
 21911                           tblptrl	equ	0xFF6
 21912                           tablat	equ	0xFF5
 21913                           prodh	equ	0xFF4
 21914                           prodl	equ	0xFF3
 21915                           intcon	equ	0xFF2
 21916                           intcon2	equ	0xFF1
 21917                           postinc0	equ	0xFEE
 21918                           wreg	equ	0xFE8
 21919                           indf1	equ	0xFE7
 21920                           postinc1	equ	0xFE6
 21921                           postdec1	equ	0xFE5
 21922                           fsr1h	equ	0xFE2
 21923                           fsr1l	equ	0xFE1
 21924                           indf2	equ	0xFDF
 21925                           postinc2	equ	0xFDE
 21926                           postdec2	equ	0xFDD
 21927                           plusw2	equ	0xFDB
 21928                           fsr2h	equ	0xFDA
 21929                           fsr2l	equ	0xFD9
 21930                           status	equ	0xFD8
 21931                           
 21932 ;; *************** function _RTCC_to_caltime *****************
 21933 ;; Defined at:
 21934 ;;		line 121 in file "../My_header\My_RTCC.h"
 21935 ;; Parameters:    Size  Location     Type
 21936 ;;  ct              2    2[BANK0 ] PTR struct .
 21937 ;;		 -> caltime_now(7), 
 21938 ;; Auto vars:     Size  Location     Type
 21939 ;;  dumy            1    4[BANK0 ] unsigned char 
 21940 ;; Return value:  Size  Location     Type
 21941 ;;		None               void
 21942 ;; Registers used:
 21943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21944 ;; Tracked objects:
 21945 ;;		On entry : 0/0
 21946 ;;		On exit  : 0/0
 21947 ;;		Unchanged: 0/0
 21948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21952 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21953 ;;Total ram usage:        3 bytes
 21954 ;; Hardware stack levels used:    1
 21955 ;; Hardware stack levels required when called:   12
 21956 ;; This function calls:
 21957 ;;		_x_to_d
 21958 ;; This function is called by:
 21959 ;;		_RTCC_from_RTCC
 21960 ;; This function uses a non-reentrant model
 21961 ;;
 21962                           
 21963                           	psect	text91
 21964  0153A6                     __ptext91:
 21965                           	opt stack 0
 21966  0153A6                     _RTCC_to_caltime:
 21967                           	opt stack 14
 21968  0153A6                     l409:
 21969  0153A6  010F               	movlb	15	; () banked
 21970  0153A8  B93F               	btfsc	63,4,b	;volatile
 21971  0153AA  D7FD               	goto	l409
 21972                           
 21973                           ; BSR set to: 15
 21974                           ;My_header\My_RTCC.h: 124: RTCCFGbits.RTCPTR0 = 1;
 21975  0153AC  010F               	movlb	15	; () banked
 21976  0153AE  813F               	bsf	63,0,b	;volatile
 21977                           
 21978                           ;My_header\My_RTCC.h: 125: RTCCFGbits.RTCPTR1 = 1;
 21979  0153B0  010F               	movlb	15	; () banked
 21980  0153B2  833F               	bsf	63,1,b	;volatile
 21981                           
 21982                           ; BSR set to: 15
 21983                           ;My_header\My_RTCC.h: 127: ct->YY = x_to_d(RTCVALL);
 21984  0153B4  0100               	movlb	0	; () banked
 21985  0153B6  EE20 F006          	lfsr	2,6
 21986  0153BA  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 21987  0153BC  26D9               	addwf	fsr2l,f,c
 21988  0153BE  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 21989  0153C0  22DA               	addwfc	fsr2h,f,c
 21990  0153C2  010F               	movlb	15	; () banked
 21991  0153C4  513A               	movf	58,w,b	;volatile
 21992  0153C6  ECDD  F0B5         	call	_x_to_d
 21993  0153CA  6EDF               	movwf	indf2,c
 21994                           
 21995                           ;My_header\My_RTCC.h: 128: uint8_t dumy = RTCVALH;
 21996  0153CC  CF3B F064          	movff	3899,RTCC_to_caltime@dumy	;volatile
 21997                           
 21998                           ;My_header\My_RTCC.h: 129: ct->DD = x_to_d(RTCVALL);
 21999  0153D0  0100               	movlb	0	; () banked
 22000  0153D2  EE20 F004          	lfsr	2,4
 22001  0153D6  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 22002  0153D8  26D9               	addwf	fsr2l,f,c
 22003  0153DA  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 22004  0153DC  22DA               	addwfc	fsr2h,f,c
 22005  0153DE  010F               	movlb	15	; () banked
 22006  0153E0  513A               	movf	58,w,b	;volatile
 22007  0153E2  ECDD  F0B5         	call	_x_to_d
 22008  0153E6  6EDF               	movwf	indf2,c
 22009                           
 22010                           ;My_header\My_RTCC.h: 130: ct->MM = x_to_d(RTCVALH);
 22011  0153E8  0100               	movlb	0	; () banked
 22012  0153EA  EE20 F005          	lfsr	2,5
 22013  0153EE  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 22014  0153F0  26D9               	addwf	fsr2l,f,c
 22015  0153F2  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 22016  0153F4  22DA               	addwfc	fsr2h,f,c
 22017  0153F6  010F               	movlb	15	; () banked
 22018  0153F8  513B               	movf	59,w,b	;volatile
 22019  0153FA  ECDD  F0B5         	call	_x_to_d
 22020  0153FE  6EDF               	movwf	indf2,c
 22021                           
 22022                           ;My_header\My_RTCC.h: 131: ct->hh = x_to_d(RTCVALL);
 22023  015400  0100               	movlb	0	; () banked
 22024  015402  EE20 F002          	lfsr	2,2
 22025  015406  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 22026  015408  26D9               	addwf	fsr2l,f,c
 22027  01540A  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 22028  01540C  22DA               	addwfc	fsr2h,f,c
 22029  01540E  010F               	movlb	15	; () banked
 22030  015410  513A               	movf	58,w,b	;volatile
 22031  015412  ECDD  F0B5         	call	_x_to_d
 22032  015416  6EDF               	movwf	indf2,c
 22033                           
 22034                           ;My_header\My_RTCC.h: 132: ct->EE = x_to_d(RTCVALH);
 22035  015418  0100               	movlb	0	; () banked
 22036  01541A  EE20 F003          	lfsr	2,3
 22037  01541E  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 22038  015420  26D9               	addwf	fsr2l,f,c
 22039  015422  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 22040  015424  22DA               	addwfc	fsr2h,f,c
 22041  015426  010F               	movlb	15	; () banked
 22042  015428  513B               	movf	59,w,b	;volatile
 22043  01542A  ECDD  F0B5         	call	_x_to_d
 22044  01542E  6EDF               	movwf	indf2,c
 22045                           
 22046                           ;My_header\My_RTCC.h: 133: ct->ss = x_to_d(RTCVALL);
 22047  015430  010F               	movlb	15	; () banked
 22048  015432  513A               	movf	58,w,b	;volatile
 22049  015434  ECDD  F0B5         	call	_x_to_d
 22050  015438  C062  FFD9         	movff	RTCC_to_caltime@ct,fsr2l
 22051  01543C  C063  FFDA         	movff	RTCC_to_caltime@ct+1,fsr2h
 22052  015440  6EDF               	movwf	indf2,c
 22053                           
 22054                           ;My_header\My_RTCC.h: 134: ct->mm = x_to_d(RTCVALH);
 22055  015442  0100               	movlb	0	; () banked
 22056  015444  EE20 F001          	lfsr	2,1
 22057  015448  5162               	movf	RTCC_to_caltime@ct& (0+255),w,b
 22058  01544A  26D9               	addwf	fsr2l,f,c
 22059  01544C  5163               	movf	(RTCC_to_caltime@ct+1)& (0+255),w,b
 22060  01544E  22DA               	addwfc	fsr2h,f,c
 22061  015450  010F               	movlb	15	; () banked
 22062  015452  513B               	movf	59,w,b	;volatile
 22063  015454  ECDD  F0B5         	call	_x_to_d
 22064  015458  6EDF               	movwf	indf2,c
 22065  01545A  0012               	return		;funcret
 22066  01545C                     __end_of_RTCC_to_caltime:
 22067                           	opt stack 0
 22068                           tblptru	equ	0xFF8
 22069                           tblptrh	equ	0xFF7
 22070                           tblptrl	equ	0xFF6
 22071                           tablat	equ	0xFF5
 22072                           prodh	equ	0xFF4
 22073                           prodl	equ	0xFF3
 22074                           intcon	equ	0xFF2
 22075                           intcon2	equ	0xFF1
 22076                           postinc0	equ	0xFEE
 22077                           wreg	equ	0xFE8
 22078                           indf1	equ	0xFE7
 22079                           postinc1	equ	0xFE6
 22080                           postdec1	equ	0xFE5
 22081                           fsr1h	equ	0xFE2
 22082                           fsr1l	equ	0xFE1
 22083                           indf2	equ	0xFDF
 22084                           postinc2	equ	0xFDE
 22085                           postdec2	equ	0xFDD
 22086                           plusw2	equ	0xFDB
 22087                           fsr2h	equ	0xFDA
 22088                           fsr2l	equ	0xFD9
 22089                           status	equ	0xFD8
 22090                           
 22091 ;; *************** function _x_to_d *****************
 22092 ;; Defined at:
 22093 ;;		line 81 in file "../My_header\My_RTCC.h"
 22094 ;; Parameters:    Size  Location     Type
 22095 ;;  hex             1    wreg     unsigned char 
 22096 ;; Auto vars:     Size  Location     Type
 22097 ;;  hex             1    1[BANK0 ] unsigned char 
 22098 ;; Return value:  Size  Location     Type
 22099 ;;                  1    wreg      unsigned char 
 22100 ;; Registers used:
 22101 ;;		wreg, status,2, status,0, prodl, prodh
 22102 ;; Tracked objects:
 22103 ;;		On entry : 0/0
 22104 ;;		On exit  : 0/0
 22105 ;;		Unchanged: 0/0
 22106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22109 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22110 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22111 ;;Total ram usage:        2 bytes
 22112 ;; Hardware stack levels used:    1
 22113 ;; Hardware stack levels required when called:   11
 22114 ;; This function calls:
 22115 ;;		Nothing
 22116 ;; This function is called by:
 22117 ;;		_RTCC_to_caltime
 22118 ;; This function uses a non-reentrant model
 22119 ;;
 22120                           
 22121                           	psect	text92
 22122  016BBA                     __ptext92:
 22123                           	opt stack 0
 22124  016BBA                     _x_to_d:
 22125                           	opt stack 14
 22126                           
 22127                           ;incstack = 0
 22128                           ;x_to_d@hex stored from wreg
 22129  016BBA  0100               	movlb	0	; () banked
 22130  016BBC  6F61               	movwf	x_to_d@hex& (0+255),b
 22131                           
 22132                           ;My_header\My_RTCC.h: 82: return 10 * (0x0F & (hex >> 4)) + (0x0F & hex);
 22133  016BBE  C061  F060         	movff	x_to_d@hex,??_x_to_d
 22134  016BC2  0E0F               	movlw	15
 22135  016BC4  0100               	movlb	0	; () banked
 22136  016BC6  1760               	andwf	??_x_to_d& (0+255),f,b
 22137  016BC8  0100               	movlb	0	; () banked
 22138  016BCA  3961               	swapf	x_to_d@hex& (0+255),w,b
 22139  016BCC  0B0F               	andlw	15
 22140  016BCE  0B0F               	andlw	15
 22141  016BD0  0D0A               	mullw	10
 22142  016BD2  50F3               	movf	prodl,w,c
 22143  016BD4  0100               	movlb	0	; () banked
 22144  016BD6  2560               	addwf	??_x_to_d& (0+255),w,b
 22145  016BD8  0012               	return	
 22146  016BDA                     __end_of_x_to_d:
 22147                           	opt stack 0
 22148                           tblptru	equ	0xFF8
 22149                           tblptrh	equ	0xFF7
 22150                           tblptrl	equ	0xFF6
 22151                           tablat	equ	0xFF5
 22152                           prodh	equ	0xFF4
 22153                           prodl	equ	0xFF3
 22154                           intcon	equ	0xFF2
 22155                           intcon2	equ	0xFF1
 22156                           postinc0	equ	0xFEE
 22157                           wreg	equ	0xFE8
 22158                           indf1	equ	0xFE7
 22159                           postinc1	equ	0xFE6
 22160                           postdec1	equ	0xFE5
 22161                           fsr1h	equ	0xFE2
 22162                           fsr1l	equ	0xFE1
 22163                           indf2	equ	0xFDF
 22164                           postinc2	equ	0xFDE
 22165                           postdec2	equ	0xFDD
 22166                           plusw2	equ	0xFDB
 22167                           fsr2h	equ	0xFDA
 22168                           fsr2l	equ	0xFD9
 22169                           status	equ	0xFD8
 22170                           
 22171 ;; *************** function _ISR *****************
 22172 ;; Defined at:
 22173 ;;		line 48 in file "main.c"
 22174 ;; Parameters:    Size  Location     Type
 22175 ;;		None
 22176 ;; Auto vars:     Size  Location     Type
 22177 ;;		None
 22178 ;; Return value:  Size  Location     Type
 22179 ;;		None               void
 22180 ;; Registers used:
 22181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22182 ;; Tracked objects:
 22183 ;;		On entry : 0/0
 22184 ;;		On exit  : 0/0
 22185 ;;		Unchanged: 0/0
 22186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22189 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22190 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22191 ;;Total ram usage:       14 bytes
 22192 ;; Hardware stack levels used:    1
 22193 ;; Hardware stack levels required when called:   10
 22194 ;; This function calls:
 22195 ;;		_LED_indicator
 22196 ;;		_USB_ISR
 22197 ;;		_charge_time_count
 22198 ;;		_delay_timer_interrupt
 22199 ;;		_integrating
 22200 ;; This function is called by:
 22201 ;;		Interrupt level 2
 22202 ;; This function uses a non-reentrant model
 22203 ;;
 22204                           
 22205                           	psect	intcode
 22206  000008                     __pintcode:
 22207                           	opt stack 0
 22208  000008                     _ISR:
 22209                           	opt stack 11
 22210                           
 22211                           ; BSR set to: 0
 22212                           ;incstack = 0
 22213  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 22214  00000A  CFFA F01F          	movff	pclath,??_ISR
 22215  00000E  CFFB F020          	movff	pclatu,??_ISR+1
 22216  000012  CFE9 F021          	movff	fsr0l,??_ISR+2
 22217  000016  CFEA F022          	movff	fsr0h,??_ISR+3
 22218  00001A  CFE1 F023          	movff	fsr1l,??_ISR+4
 22219  00001E  CFE2 F024          	movff	fsr1h,??_ISR+5
 22220  000022  CFD9 F025          	movff	fsr2l,??_ISR+6
 22221  000026  CFDA F026          	movff	fsr2h,??_ISR+7
 22222  00002A  CFF3 F027          	movff	prodl,??_ISR+8
 22223  00002E  CFF4 F028          	movff	prodh,??_ISR+9
 22224  000032  CFF6 F029          	movff	tblptrl,??_ISR+10
 22225  000036  CFF7 F02A          	movff	tblptrh,??_ISR+11
 22226  00003A  CFF8 F02B          	movff	tblptru,??_ISR+12
 22227  00003E  CFF5 F02C          	movff	tablat,??_ISR+13
 22228                           
 22229                           ;main.c: 50: USB_ISR();
 22230  000042  EC41  F0B6         	call	_USB_ISR	;wreg free
 22231                           
 22232                           ;main.c: 51: if (INTCONbits.T0IF && INTCONbits.T0IE) {
 22233  000046  B4F2               	btfsc	intcon,2,c	;volatile
 22234  000048  AAF2               	btfss	intcon,5,c	;volatile
 22235  00004A  D013               	goto	i2l9292
 22236                           
 22237                           ;main.c: 52: INTCONbits.T0IF = 0;
 22238  00004C  94F2               	bcf	intcon,2,c	;volatile
 22239                           
 22240                           ;main.c: 53: static uint16_t cnt_t0;
 22241                           ;main.c: 54: if (cnt_t0) {
 22242  00004E  0101               	movlb	1	; () banked
 22243  000050  5119               	movf	ISR@cnt_t0& (0+255),w,b
 22244  000052  0101               	movlb	1	; () banked
 22245  000054  111A               	iorwf	(ISR@cnt_t0+1)& (0+255),w,b
 22246  000056  B4D8               	btfsc	status,2,c
 22247  000058  D005               	goto	i2l9288
 22248                           
 22249                           ; BSR set to: 1
 22250                           ;main.c: 55: cnt_t0--;
 22251  00005A  0101               	movlb	1	; () banked
 22252  00005C  0719               	decf	ISR@cnt_t0& (0+255),f,b
 22253  00005E  A0D8               	btfss	status,0,c
 22254  000060  071A               	decf	(ISR@cnt_t0+1)& (0+255),f,b
 22255                           
 22256                           ;main.c: 56: } else {
 22257  000062  D007               	goto	i2l9292
 22258  000064                     i2l9288:
 22259                           
 22260                           ; BSR set to: 1
 22261                           ;main.c: 57: cnt_t0 = 120;
 22262  000064  0E00               	movlw	0
 22263  000066  0101               	movlb	1	; () banked
 22264  000068  6F1A               	movwf	(ISR@cnt_t0+1)& (0+255),b
 22265  00006A  0E78               	movlw	120
 22266  00006C  6F19               	movwf	ISR@cnt_t0& (0+255),b
 22267                           
 22268                           ; BSR set to: 1
 22269                           ;main.c: 58: LED_indicator();
 22270  00006E  ECE9  F09C         	call	_LED_indicator	;wreg free
 22271  000072                     i2l9292:
 22272                           
 22273                           ;main.c: 59: }
 22274                           ;main.c: 60: }
 22275                           ;main.c: 61: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE) {
 22276  000072  B09E               	btfsc	3998,0,c	;volatile
 22277  000074  A09D               	btfss	3997,0,c	;volatile
 22278  000076  D013               	goto	i2l9308
 22279                           
 22280                           ;main.c: 62: PIR1bits.TMR1IF = 0;
 22281  000078  909E               	bcf	3998,0,c	;volatile
 22282                           
 22283                           ;main.c: 63: TMR1H = 0xC0;
 22284  00007A  0EC0               	movlw	192
 22285  00007C  6ECF               	movwf	4047,c	;volatile
 22286                           
 22287                           ;main.c: 64: cut_time_flag = 1;
 22288  00007E  0E01               	movlw	1
 22289  000080  6E4A               	movwf	_cut_time_flag,c
 22290                           
 22291                           ;main.c: 65: static uint8_t cnt_t1 = 0;
 22292                           ;main.c: 66: if (cnt_t1) {
 22293  000082  5039               	movf	ISR@cnt_t1,w,c
 22294  000084  B4D8               	btfsc	status,2,c
 22295  000086  D003               	goto	i2l9302
 22296                           
 22297                           ;main.c: 67: cnt_t1 = 0;
 22298  000088  0E00               	movlw	0
 22299  00008A  6E39               	movwf	ISR@cnt_t1,c
 22300                           
 22301                           ;main.c: 68: } else {
 22302  00008C  D008               	goto	i2l9308
 22303  00008E                     i2l9302:
 22304                           
 22305                           ;main.c: 69: cnt_t1 = 1;
 22306  00008E  0E01               	movlw	1
 22307  000090  6E39               	movwf	ISR@cnt_t1,c
 22308                           
 22309                           ;main.c: 70: integrating();
 22310  000092  EC60  F0A8         	call	_integrating	;wreg free
 22311                           
 22312                           ;main.c: 71: charge_time_count();
 22313  000096  EC06  F0B2         	call	_charge_time_count	;wreg free
 22314                           
 22315                           ;main.c: 72: display_flag = 1;
 22316  00009A  0E01               	movlw	1
 22317  00009C  6E4B               	movwf	_display_flag,c
 22318  00009E                     i2l9308:
 22319                           
 22320                           ;main.c: 73: }
 22321                           ;main.c: 74: }
 22322                           ;main.c: 75: if (PIR2bits.TMR3IF && PIE2bits.TMR3IE) {
 22323  00009E  B2A1               	btfsc	4001,1,c	;volatile
 22324  0000A0  A2A0               	btfss	4000,1,c	;volatile
 22325  0000A2  D009               	goto	i2l923
 22326                           
 22327                           ;main.c: 76: PIR2bits.TMR3IF = 0;
 22328  0000A4  92A1               	bcf	4001,1,c	;volatile
 22329                           
 22330                           ;main.c: 77: ctmu_flag = 1;
 22331  0000A6  0E01               	movlw	1
 22332  0000A8  6E48               	movwf	_ctmu_flag,c
 22333                           
 22334                           ;main.c: 78: delay_timer_interrupt(&delay_display);
 22335  0000AA  0E51               	movlw	low _delay_display
 22336  0000AC  6E01               	movwf	delay_timer_interrupt@d,c
 22337  0000AE  0E00               	movlw	high _delay_display
 22338  0000B0  6E02               	movwf	delay_timer_interrupt@d+1,c
 22339  0000B2  ECD4  F0B2         	call	_delay_timer_interrupt	;wreg free
 22340  0000B6                     i2l923:
 22341  0000B6  C02C  FFF5         	movff	??_ISR+13,tablat
 22342  0000BA  C02B  FFF8         	movff	??_ISR+12,tblptru
 22343  0000BE  C02A  FFF7         	movff	??_ISR+11,tblptrh
 22344  0000C2  C029  FFF6         	movff	??_ISR+10,tblptrl
 22345  0000C6  C028  FFF4         	movff	??_ISR+9,prodh
 22346  0000CA  C027  FFF3         	movff	??_ISR+8,prodl
 22347  0000CE  C026  FFDA         	movff	??_ISR+7,fsr2h
 22348  0000D2  C025  FFD9         	movff	??_ISR+6,fsr2l
 22349  0000D6  C024  FFE2         	movff	??_ISR+5,fsr1h
 22350  0000DA  C023  FFE1         	movff	??_ISR+4,fsr1l
 22351  0000DE  C022  FFEA         	movff	??_ISR+3,fsr0h
 22352  0000E2  C021  FFE9         	movff	??_ISR+2,fsr0l
 22353  0000E6  C020  FFFB         	movff	??_ISR+1,pclatu
 22354  0000EA  C01F  FFFA         	movff	??_ISR,pclath
 22355  0000EE  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22356  0000F0  0011               	retfie		f
 22357  0000F2                     __end_of_ISR:
 22358                           	opt stack 0
 22359                           pclatu	equ	0xFFB
 22360                           pclath	equ	0xFFA
 22361                           tblptru	equ	0xFF8
 22362                           tblptrh	equ	0xFF7
 22363                           tblptrl	equ	0xFF6
 22364                           tablat	equ	0xFF5
 22365                           prodh	equ	0xFF4
 22366                           prodl	equ	0xFF3
 22367                           intcon	equ	0xFF2
 22368                           intcon2	equ	0xFF1
 22369                           postinc0	equ	0xFEE
 22370                           fsr0h	equ	0xFEA
 22371                           fsr0l	equ	0xFE9
 22372                           wreg	equ	0xFE8
 22373                           indf1	equ	0xFE7
 22374                           postinc1	equ	0xFE6
 22375                           postdec1	equ	0xFE5
 22376                           fsr1h	equ	0xFE2
 22377                           fsr1l	equ	0xFE1
 22378                           indf2	equ	0xFDF
 22379                           postinc2	equ	0xFDE
 22380                           postdec2	equ	0xFDD
 22381                           plusw2	equ	0xFDB
 22382                           fsr2h	equ	0xFDA
 22383                           fsr2l	equ	0xFD9
 22384                           status	equ	0xFD8
 22385                           
 22386 ;; *************** function _integrating *****************
 22387 ;; Defined at:
 22388 ;;		line 187 in file "tasks.h"
 22389 ;; Parameters:    Size  Location     Type
 22390 ;;		None
 22391 ;; Auto vars:     Size  Location     Type
 22392 ;;  i               1   15[COMRAM] unsigned char 
 22393 ;; Return value:  Size  Location     Type
 22394 ;;		None               void
 22395 ;; Registers used:
 22396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22397 ;; Tracked objects:
 22398 ;;		On entry : 0/0
 22399 ;;		On exit  : 0/0
 22400 ;;		Unchanged: 0/0
 22401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22405 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22406 ;;Total ram usage:        3 bytes
 22407 ;; Hardware stack levels used:    1
 22408 ;; Hardware stack levels required when called:    1
 22409 ;; This function calls:
 22410 ;;		i2___lldiv
 22411 ;; This function is called by:
 22412 ;;		_ISR
 22413 ;; This function uses a non-reentrant model
 22414 ;;
 22415                           
 22416                           	psect	text94
 22417  0150C0                     __ptext94:
 22418                           	opt stack 0
 22419  0150C0                     _integrating:
 22420                           	opt stack 19
 22421                           
 22422                           ;tasks.h: 188: for (uint8_t i = 0; i < 3; i++) {
 22423                           
 22424                           ;incstack = 0
 22425  0150C0  0E00               	movlw	0
 22426  0150C2  6E10               	movwf	integrating@i,c
 22427  0150C4                     i2l8974:
 22428  0150C4  0E02               	movlw	2
 22429  0150C6  6410               	cpfsgt	integrating@i,c
 22430  0150C8  D001               	goto	i2l8978
 22431  0150CA  0012               	return	
 22432  0150CC                     i2l8978:
 22433                           
 22434                           ;tasks.h: 189: port[i].integrated_current_sec += port[i].current;
 22435  0150CC  5010               	movf	integrating@i,w,c
 22436  0150CE  0D17               	mullw	23
 22437  0150D0  0E06               	movlw	6
 22438  0150D2  26F3               	addwf	prodl,f,c
 22439  0150D4  0E00               	movlw	0
 22440  0150D6  22F4               	addwfc	prodh,f,c
 22441  0150D8  0E2B               	movlw	low _port
 22442  0150DA  24F3               	addwf	prodl,w,c
 22443  0150DC  6ED9               	movwf	fsr2l,c
 22444  0150DE  0E01               	movlw	high _port
 22445  0150E0  20F4               	addwfc	prodh,w,c
 22446  0150E2  6EDA               	movwf	fsr2h,c
 22447  0150E4  CFDE F00E          	movff	postinc2,??_integrating
 22448  0150E8  CFDD F00F          	movff	postdec2,??_integrating+1
 22449  0150EC  5010               	movf	integrating@i,w,c
 22450  0150EE  0D17               	mullw	23
 22451  0150F0  0E0C               	movlw	12
 22452  0150F2  26F3               	addwf	prodl,f,c
 22453  0150F4  0E00               	movlw	0
 22454  0150F6  22F4               	addwfc	prodh,f,c
 22455  0150F8  0E2B               	movlw	low _port
 22456  0150FA  24F3               	addwf	prodl,w,c
 22457  0150FC  6ED9               	movwf	fsr2l,c
 22458  0150FE  0E01               	movlw	high _port
 22459  015100  20F4               	addwfc	prodh,w,c
 22460  015102  6EDA               	movwf	fsr2h,c
 22461  015104  500E               	movf	??_integrating,w,c
 22462  015106  26DE               	addwf	postinc2,f,c
 22463  015108  500F               	movf	??_integrating+1,w,c
 22464  01510A  22DE               	addwfc	postinc2,f,c
 22465  01510C  0E00               	movlw	0
 22466  01510E  22DE               	addwfc	postinc2,f,c
 22467  015110  22DE               	addwfc	postinc2,f,c
 22468                           
 22469                           ;tasks.h: 190: port[i].integrated_current = port[i].integrated_current_sec / 3600;
 22470  015112  5010               	movf	integrating@i,w,c
 22471  015114  0D17               	mullw	23
 22472  015116  0E0C               	movlw	12
 22473  015118  26F3               	addwf	prodl,f,c
 22474  01511A  0E00               	movlw	0
 22475  01511C  22F4               	addwfc	prodh,f,c
 22476  01511E  0E2B               	movlw	low _port
 22477  015120  24F3               	addwf	prodl,w,c
 22478  015122  6ED9               	movwf	fsr2l,c
 22479  015124  0E01               	movlw	high _port
 22480  015126  20F4               	addwfc	prodh,w,c
 22481  015128  6EDA               	movwf	fsr2h,c
 22482  01512A  CFDE F001          	movff	postinc2,i2___lldiv@dividend
 22483  01512E  CFDE F002          	movff	postinc2,i2___lldiv@dividend+1
 22484  015132  CFDE F003          	movff	postinc2,i2___lldiv@dividend+2
 22485  015136  CFDE F004          	movff	postinc2,i2___lldiv@dividend+3
 22486  01513A  0E10               	movlw	16
 22487  01513C  6E05               	movwf	i2___lldiv@divisor,c
 22488  01513E  0E0E               	movlw	14
 22489  015140  6E06               	movwf	i2___lldiv@divisor+1,c
 22490  015142  0E00               	movlw	0
 22491  015144  6E07               	movwf	i2___lldiv@divisor+2,c
 22492  015146  0E00               	movlw	0
 22493  015148  6E08               	movwf	i2___lldiv@divisor+3,c
 22494  01514A  EC25  F0AF         	call	i2___lldiv	;wreg free
 22495  01514E  5010               	movf	integrating@i,w,c
 22496  015150  0D17               	mullw	23
 22497  015152  0E08               	movlw	8
 22498  015154  26F3               	addwf	prodl,f,c
 22499  015156  0E00               	movlw	0
 22500  015158  22F4               	addwfc	prodh,f,c
 22501  01515A  0E2B               	movlw	low _port
 22502  01515C  24F3               	addwf	prodl,w,c
 22503  01515E  6ED9               	movwf	fsr2l,c
 22504  015160  0E01               	movlw	high _port
 22505  015162  20F4               	addwfc	prodh,w,c
 22506  015164  6EDA               	movwf	fsr2h,c
 22507  015166  C001  FFDE         	movff	?i2___lldiv,postinc2
 22508  01516A  C002  FFDE         	movff	?i2___lldiv+1,postinc2
 22509  01516E  C003  FFDE         	movff	?i2___lldiv+2,postinc2
 22510  015172  C004  FFDE         	movff	?i2___lldiv+3,postinc2
 22511  015176  2A10               	incf	integrating@i,f,c
 22512  015178  D7A5               	goto	i2l8974
 22513  01517A                     __end_of_integrating:
 22514                           	opt stack 0
 22515                           pclatu	equ	0xFFB
 22516                           pclath	equ	0xFFA
 22517                           tblptru	equ	0xFF8
 22518                           tblptrh	equ	0xFF7
 22519                           tblptrl	equ	0xFF6
 22520                           tablat	equ	0xFF5
 22521                           prodh	equ	0xFF4
 22522                           prodl	equ	0xFF3
 22523                           intcon	equ	0xFF2
 22524                           intcon2	equ	0xFF1
 22525                           postinc0	equ	0xFEE
 22526                           fsr0h	equ	0xFEA
 22527                           fsr0l	equ	0xFE9
 22528                           wreg	equ	0xFE8
 22529                           indf1	equ	0xFE7
 22530                           postinc1	equ	0xFE6
 22531                           postdec1	equ	0xFE5
 22532                           fsr1h	equ	0xFE2
 22533                           fsr1l	equ	0xFE1
 22534                           indf2	equ	0xFDF
 22535                           postinc2	equ	0xFDE
 22536                           postdec2	equ	0xFDD
 22537                           plusw2	equ	0xFDB
 22538                           fsr2h	equ	0xFDA
 22539                           fsr2l	equ	0xFD9
 22540                           status	equ	0xFD8
 22541                           
 22542 ;; *************** function i2___lldiv *****************
 22543 ;; Defined at:
 22544 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 22545 ;; Parameters:    Size  Location     Type
 22546 ;;  dividend        4    0[COMRAM] unsigned long 
 22547 ;;  divisor         4    4[COMRAM] unsigned long 
 22548 ;; Auto vars:     Size  Location     Type
 22549 ;;  __lldiv         4    8[COMRAM] unsigned long 
 22550 ;;  __lldiv         1   12[COMRAM] unsigned char 
 22551 ;; Return value:  Size  Location     Type
 22552 ;;                  4    0[COMRAM] unsigned long 
 22553 ;; Registers used:
 22554 ;;		wreg, status,2, status,0
 22555 ;; Tracked objects:
 22556 ;;		On entry : 0/0
 22557 ;;		On exit  : 0/0
 22558 ;;		Unchanged: 0/0
 22559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22560 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22561 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22563 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22564 ;;Total ram usage:       13 bytes
 22565 ;; Hardware stack levels used:    1
 22566 ;; This function calls:
 22567 ;;		Nothing
 22568 ;; This function is called by:
 22569 ;;		_integrating
 22570 ;; This function uses a non-reentrant model
 22571 ;;
 22572                           
 22573                           	psect	text95
 22574  015E4A                     __ptext95:
 22575                           	opt stack 0
 22576  015E4A                     i2___lldiv:
 22577                           	opt stack 19
 22578                           
 22579                           ;incstack = 0
 22580  015E4A  0E00               	movlw	0
 22581  015E4C  6E09               	movwf	i2___lldiv@quotient,c
 22582  015E4E  0E00               	movlw	0
 22583  015E50  6E0A               	movwf	i2___lldiv@quotient+1,c
 22584  015E52  0E00               	movlw	0
 22585  015E54  6E0B               	movwf	i2___lldiv@quotient+2,c
 22586  015E56  0E00               	movlw	0
 22587  015E58  6E0C               	movwf	i2___lldiv@quotient+3,c
 22588  015E5A  5005               	movf	i2___lldiv@divisor,w,c
 22589  015E5C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 22590  015E5E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 22591  015E60  1008               	iorwf	i2___lldiv@divisor+3,w,c
 22592  015E62  B4D8               	btfsc	status,2,c
 22593  015E64  D02A               	goto	i2l1938
 22594  015E66  0E01               	movlw	1
 22595  015E68  6E0D               	movwf	i2___lldiv@counter,c
 22596  015E6A  D006               	goto	i2l8810
 22597  015E6C                     i2l8808:
 22598  015E6C  90D8               	bcf	status,0,c
 22599  015E6E  3605               	rlcf	i2___lldiv@divisor,f,c
 22600  015E70  3606               	rlcf	i2___lldiv@divisor+1,f,c
 22601  015E72  3607               	rlcf	i2___lldiv@divisor+2,f,c
 22602  015E74  3608               	rlcf	i2___lldiv@divisor+3,f,c
 22603  015E76  2A0D               	incf	i2___lldiv@counter,f,c
 22604  015E78                     i2l8810:
 22605  015E78  AE08               	btfss	i2___lldiv@divisor+3,7,c
 22606  015E7A  D7F8               	goto	i2l8808
 22607  015E7C                     i2l8812:
 22608  015E7C  90D8               	bcf	status,0,c
 22609  015E7E  3609               	rlcf	i2___lldiv@quotient,f,c
 22610  015E80  360A               	rlcf	i2___lldiv@quotient+1,f,c
 22611  015E82  360B               	rlcf	i2___lldiv@quotient+2,f,c
 22612  015E84  360C               	rlcf	i2___lldiv@quotient+3,f,c
 22613  015E86  5005               	movf	i2___lldiv@divisor,w,c
 22614  015E88  5C01               	subwf	i2___lldiv@dividend,w,c
 22615  015E8A  5006               	movf	i2___lldiv@divisor+1,w,c
 22616  015E8C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 22617  015E8E  5007               	movf	i2___lldiv@divisor+2,w,c
 22618  015E90  5803               	subwfb	i2___lldiv@dividend+2,w,c
 22619  015E92  5008               	movf	i2___lldiv@divisor+3,w,c
 22620  015E94  5804               	subwfb	i2___lldiv@dividend+3,w,c
 22621  015E96  A0D8               	btfss	status,0,c
 22622  015E98  D009               	goto	i2l8820
 22623  015E9A  5005               	movf	i2___lldiv@divisor,w,c
 22624  015E9C  5E01               	subwf	i2___lldiv@dividend,f,c
 22625  015E9E  5006               	movf	i2___lldiv@divisor+1,w,c
 22626  015EA0  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 22627  015EA2  5007               	movf	i2___lldiv@divisor+2,w,c
 22628  015EA4  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 22629  015EA6  5008               	movf	i2___lldiv@divisor+3,w,c
 22630  015EA8  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 22631  015EAA  8009               	bsf	i2___lldiv@quotient,0,c
 22632  015EAC                     i2l8820:
 22633  015EAC  90D8               	bcf	status,0,c
 22634  015EAE  3208               	rrcf	i2___lldiv@divisor+3,f,c
 22635  015EB0  3207               	rrcf	i2___lldiv@divisor+2,f,c
 22636  015EB2  3206               	rrcf	i2___lldiv@divisor+1,f,c
 22637  015EB4  3205               	rrcf	i2___lldiv@divisor,f,c
 22638  015EB6  2E0D               	decfsz	i2___lldiv@counter,f,c
 22639  015EB8  D7E1               	goto	i2l8812
 22640  015EBA                     i2l1938:
 22641  015EBA  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 22642  015EBE  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 22643  015EC2  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 22644  015EC6  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 22645  015ECA  0012               	return		;funcret
 22646  015ECC                     __end_ofi2___lldiv:
 22647                           	opt stack 0
 22648                           pclatu	equ	0xFFB
 22649                           pclath	equ	0xFFA
 22650                           tblptru	equ	0xFF8
 22651                           tblptrh	equ	0xFF7
 22652                           tblptrl	equ	0xFF6
 22653                           tablat	equ	0xFF5
 22654                           prodh	equ	0xFF4
 22655                           prodl	equ	0xFF3
 22656                           intcon	equ	0xFF2
 22657                           intcon2	equ	0xFF1
 22658                           postinc0	equ	0xFEE
 22659                           fsr0h	equ	0xFEA
 22660                           fsr0l	equ	0xFE9
 22661                           wreg	equ	0xFE8
 22662                           indf1	equ	0xFE7
 22663                           postinc1	equ	0xFE6
 22664                           postdec1	equ	0xFE5
 22665                           fsr1h	equ	0xFE2
 22666                           fsr1l	equ	0xFE1
 22667                           indf2	equ	0xFDF
 22668                           postinc2	equ	0xFDE
 22669                           postdec2	equ	0xFDD
 22670                           plusw2	equ	0xFDB
 22671                           fsr2h	equ	0xFDA
 22672                           fsr2l	equ	0xFD9
 22673                           status	equ	0xFD8
 22674                           
 22675 ;; *************** function _delay_timer_interrupt *****************
 22676 ;; Defined at:
 22677 ;;		line 344 in file "../My_header\My_header.h"
 22678 ;; Parameters:    Size  Location     Type
 22679 ;;  d               2    0[COMRAM] PTR struct Delay
 22680 ;;		 -> delay_display(3), 
 22681 ;; Auto vars:     Size  Location     Type
 22682 ;;		None
 22683 ;; Return value:  Size  Location     Type
 22684 ;;		None               void
 22685 ;; Registers used:
 22686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22687 ;; Tracked objects:
 22688 ;;		On entry : 0/0
 22689 ;;		On exit  : 0/0
 22690 ;;		Unchanged: 0/0
 22691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22696 ;;Total ram usage:        4 bytes
 22697 ;; Hardware stack levels used:    1
 22698 ;; This function calls:
 22699 ;;		Nothing
 22700 ;; This function is called by:
 22701 ;;		_ISR
 22702 ;; This function uses a non-reentrant model
 22703 ;;
 22704                           
 22705                           	psect	text96
 22706  0165A8                     __ptext96:
 22707                           	opt stack 0
 22708  0165A8                     _delay_timer_interrupt:
 22709                           	opt stack 20
 22710                           
 22711                           ;My_header\My_header.h: 345: if (d->cnt == 1)d->flag = 1;
 22712                           
 22713                           ;incstack = 0
 22714  0165A8  EE20 F001          	lfsr	2,1
 22715  0165AC  5001               	movf	delay_timer_interrupt@d,w,c
 22716  0165AE  26D9               	addwf	fsr2l,f,c
 22717  0165B0  5002               	movf	delay_timer_interrupt@d+1,w,c
 22718  0165B2  22DA               	addwfc	fsr2h,f,c
 22719  0165B4  04DE               	decf	postinc2,w,c
 22720  0165B6  10DE               	iorwf	postinc2,w,c
 22721  0165B8  A4D8               	btfss	status,2,c
 22722  0165BA  D006               	goto	i2l8854
 22723  0165BC  C001  FFD9         	movff	delay_timer_interrupt@d,fsr2l
 22724  0165C0  C002  FFDA         	movff	delay_timer_interrupt@d+1,fsr2h
 22725  0165C4  0E01               	movlw	1
 22726  0165C6  6EDF               	movwf	indf2,c
 22727  0165C8                     i2l8854:
 22728                           
 22729                           ;My_header\My_header.h: 346: if (d->cnt)d->cnt--;
 22730  0165C8  EE20 F001          	lfsr	2,1
 22731  0165CC  5001               	movf	delay_timer_interrupt@d,w,c
 22732  0165CE  26D9               	addwf	fsr2l,f,c
 22733  0165D0  5002               	movf	delay_timer_interrupt@d+1,w,c
 22734  0165D2  22DA               	addwfc	fsr2h,f,c
 22735  0165D4  50DE               	movf	postinc2,w,c
 22736  0165D6  10DE               	iorwf	postinc2,w,c
 22737  0165D8  B4D8               	btfsc	status,2,c
 22738  0165DA  0012               	return	
 22739  0165DC  EE20 F001          	lfsr	2,1
 22740  0165E0  5001               	movf	delay_timer_interrupt@d,w,c
 22741  0165E2  26D9               	addwf	fsr2l,f,c
 22742  0165E4  5002               	movf	delay_timer_interrupt@d+1,w,c
 22743  0165E6  22DA               	addwfc	fsr2h,f,c
 22744  0165E8  06DE               	decf	postinc2,f,c
 22745  0165EA  0E00               	movlw	0
 22746  0165EC  5ADD               	subwfb	postdec2,f,c
 22747  0165EE  0012               	return	
 22748  0165F0                     __end_of_delay_timer_interrupt:
 22749                           	opt stack 0
 22750                           pclatu	equ	0xFFB
 22751                           pclath	equ	0xFFA
 22752                           tblptru	equ	0xFF8
 22753                           tblptrh	equ	0xFF7
 22754                           tblptrl	equ	0xFF6
 22755                           tablat	equ	0xFF5
 22756                           prodh	equ	0xFF4
 22757                           prodl	equ	0xFF3
 22758                           intcon	equ	0xFF2
 22759                           intcon2	equ	0xFF1
 22760                           postinc0	equ	0xFEE
 22761                           fsr0h	equ	0xFEA
 22762                           fsr0l	equ	0xFE9
 22763                           wreg	equ	0xFE8
 22764                           indf1	equ	0xFE7
 22765                           postinc1	equ	0xFE6
 22766                           postdec1	equ	0xFE5
 22767                           fsr1h	equ	0xFE2
 22768                           fsr1l	equ	0xFE1
 22769                           indf2	equ	0xFDF
 22770                           postinc2	equ	0xFDE
 22771                           postdec2	equ	0xFDD
 22772                           plusw2	equ	0xFDB
 22773                           fsr2h	equ	0xFDA
 22774                           fsr2l	equ	0xFD9
 22775                           status	equ	0xFD8
 22776                           
 22777 ;; *************** function _charge_time_count *****************
 22778 ;; Defined at:
 22779 ;;		line 194 in file "tasks.h"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;		None
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;  i               1    2[COMRAM] unsigned char 
 22784 ;; Return value:  Size  Location     Type
 22785 ;;		None               void
 22786 ;; Registers used:
 22787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/0
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22796 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22797 ;;Total ram usage:        3 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; This function calls:
 22800 ;;		Nothing
 22801 ;; This function is called by:
 22802 ;;		_ISR
 22803 ;; This function uses a non-reentrant model
 22804 ;;
 22805                           
 22806                           	psect	text97
 22807  01640C                     __ptext97:
 22808                           	opt stack 0
 22809  01640C                     _charge_time_count:
 22810                           	opt stack 20
 22811                           
 22812                           ;tasks.h: 195: uint8_t i;
 22813                           ;tasks.h: 196: for (i = 0; i < 3; i++) {
 22814                           
 22815                           ;incstack = 0
 22816  01640C  0E00               	movlw	0
 22817  01640E  6E03               	movwf	charge_time_count@i,c
 22818  016410                     i2l8988:
 22819  016410  0E02               	movlw	2
 22820  016412  6403               	cpfsgt	charge_time_count@i,c
 22821  016414  D001               	goto	i2l8992
 22822  016416  0012               	return	
 22823  016418                     i2l8992:
 22824                           
 22825                           ;tasks.h: 197: if (port[i].current > 100)port[i].integrated_time++;
 22826  016418  5003               	movf	charge_time_count@i,w,c
 22827  01641A  0D17               	mullw	23
 22828  01641C  0E06               	movlw	6
 22829  01641E  26F3               	addwf	prodl,f,c
 22830  016420  0E00               	movlw	0
 22831  016422  22F4               	addwfc	prodh,f,c
 22832  016424  0E2B               	movlw	low _port
 22833  016426  24F3               	addwf	prodl,w,c
 22834  016428  6ED9               	movwf	fsr2l,c
 22835  01642A  0E01               	movlw	high _port
 22836  01642C  20F4               	addwfc	prodh,w,c
 22837  01642E  6EDA               	movwf	fsr2h,c
 22838  016430  0E01               	movlw	1
 22839  016432  50DB               	movf	plusw2,w,c
 22840  016434  E104               	bnz	i2u970_40
 22841  016436  0E65               	movlw	101
 22842  016438  5CDE               	subwf	postinc2,w,c
 22843  01643A  A0D8               	btfss	status,0,c
 22844  01643C  D011               	goto	i2l8996
 22845  01643E                     i2u970_40:
 22846  01643E  5003               	movf	charge_time_count@i,w,c
 22847  016440  0D17               	mullw	23
 22848  016442  0E10               	movlw	16
 22849  016444  26F3               	addwf	prodl,f,c
 22850  016446  0E00               	movlw	0
 22851  016448  22F4               	addwfc	prodh,f,c
 22852  01644A  0E2B               	movlw	low _port
 22853  01644C  24F3               	addwf	prodl,w,c
 22854  01644E  6ED9               	movwf	fsr2l,c
 22855  016450  0E01               	movlw	high _port
 22856  016452  20F4               	addwfc	prodh,w,c
 22857  016454  6EDA               	movwf	fsr2h,c
 22858  016456  2ADE               	incf	postinc2,f,c
 22859  016458  0E00               	movlw	0
 22860  01645A  22DE               	addwfc	postinc2,f,c
 22861  01645C  22DE               	addwfc	postinc2,f,c
 22862  01645E  22DE               	addwfc	postinc2,f,c
 22863  016460                     i2l8996:
 22864  016460  2A03               	incf	charge_time_count@i,f,c
 22865  016462  D7D6               	goto	i2l8988
 22866  016464                     __end_of_charge_time_count:
 22867                           	opt stack 0
 22868                           pclatu	equ	0xFFB
 22869                           pclath	equ	0xFFA
 22870                           tblptru	equ	0xFF8
 22871                           tblptrh	equ	0xFF7
 22872                           tblptrl	equ	0xFF6
 22873                           tablat	equ	0xFF5
 22874                           prodh	equ	0xFF4
 22875                           prodl	equ	0xFF3
 22876                           intcon	equ	0xFF2
 22877                           intcon2	equ	0xFF1
 22878                           postinc0	equ	0xFEE
 22879                           fsr0h	equ	0xFEA
 22880                           fsr0l	equ	0xFE9
 22881                           wreg	equ	0xFE8
 22882                           indf1	equ	0xFE7
 22883                           postinc1	equ	0xFE6
 22884                           postdec1	equ	0xFE5
 22885                           fsr1h	equ	0xFE2
 22886                           fsr1l	equ	0xFE1
 22887                           indf2	equ	0xFDF
 22888                           postinc2	equ	0xFDE
 22889                           postdec2	equ	0xFDD
 22890                           plusw2	equ	0xFDB
 22891                           fsr2h	equ	0xFDA
 22892                           fsr2l	equ	0xFD9
 22893                           status	equ	0xFD8
 22894                           
 22895 ;; *************** function _USB_ISR *****************
 22896 ;; Defined at:
 22897 ;;		line 3 in file "../My_header/usb_cdc/My_usb_cdc.c"
 22898 ;; Parameters:    Size  Location     Type
 22899 ;;		None
 22900 ;; Auto vars:     Size  Location     Type
 22901 ;;		None
 22902 ;; Return value:  Size  Location     Type
 22903 ;;		None               void
 22904 ;; Registers used:
 22905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22906 ;; Tracked objects:
 22907 ;;		On entry : 0/0
 22908 ;;		On exit  : 0/0
 22909 ;;		Unchanged: 0/0
 22910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22915 ;;Total ram usage:        0 bytes
 22916 ;; Hardware stack levels used:    1
 22917 ;; Hardware stack levels required when called:    9
 22918 ;; This function calls:
 22919 ;;		_USBDeviceTasks
 22920 ;; This function is called by:
 22921 ;;		_ISR
 22922 ;; This function uses a non-reentrant model
 22923 ;;
 22924                           
 22925                           	psect	text98
 22926  016C82                     __ptext98:
 22927                           	opt stack 0
 22928  016C82                     _USB_ISR:
 22929                           	opt stack 11
 22930                           
 22931                           ;My_usb_cdc.c: 4: USBDeviceTasks();
 22932                           
 22933                           ;incstack = 0
 22934  016C82  EC0B  F09B         	call	_USBDeviceTasks	;wreg free
 22935  016C86  0012               	return		;funcret
 22936  016C88                     __end_of_USB_ISR:
 22937                           	opt stack 0
 22938                           pclatu	equ	0xFFB
 22939                           pclath	equ	0xFFA
 22940                           tblptru	equ	0xFF8
 22941                           tblptrh	equ	0xFF7
 22942                           tblptrl	equ	0xFF6
 22943                           tablat	equ	0xFF5
 22944                           prodh	equ	0xFF4
 22945                           prodl	equ	0xFF3
 22946                           intcon	equ	0xFF2
 22947                           intcon2	equ	0xFF1
 22948                           postinc0	equ	0xFEE
 22949                           fsr0h	equ	0xFEA
 22950                           fsr0l	equ	0xFE9
 22951                           wreg	equ	0xFE8
 22952                           indf1	equ	0xFE7
 22953                           postinc1	equ	0xFE6
 22954                           postdec1	equ	0xFE5
 22955                           fsr1h	equ	0xFE2
 22956                           fsr1l	equ	0xFE1
 22957                           indf2	equ	0xFDF
 22958                           postinc2	equ	0xFDE
 22959                           postdec2	equ	0xFDD
 22960                           plusw2	equ	0xFDB
 22961                           fsr2h	equ	0xFDA
 22962                           fsr2l	equ	0xFD9
 22963                           status	equ	0xFD8
 22964                           
 22965 ;; *************** function _USBDeviceTasks *****************
 22966 ;; Defined at:
 22967 ;;		line 489 in file "../My_header/usb_cdc/usb/usb_device.c"
 22968 ;; Parameters:    Size  Location     Type
 22969 ;;		None
 22970 ;; Auto vars:     Size  Location     Type
 22971 ;;  i               1   29[COMRAM] unsigned char 
 22972 ;; Return value:  Size  Location     Type
 22973 ;;		None               void
 22974 ;; Registers used:
 22975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22976 ;; Tracked objects:
 22977 ;;		On entry : 0/0
 22978 ;;		On exit  : 0/0
 22979 ;;		Unchanged: 0/0
 22980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22985 ;;Total ram usage:        1 bytes
 22986 ;; Hardware stack levels used:    1
 22987 ;; Hardware stack levels required when called:    8
 22988 ;; This function calls:
 22989 ;;		_USBCtrlEPAllowStatusStage
 22990 ;;		_USBCtrlEPService
 22991 ;;		_USBStallHandler
 22992 ;;		_USBSuspend
 22993 ;;		_USBWakeFromSuspend
 22994 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22995 ;;		i2_USBDeviceInit
 22996 ;; This function is called by:
 22997 ;;		_USB_ISR
 22998 ;; This function uses a non-reentrant model
 22999 ;;
 23000                           
 23001                           	psect	text99
 23002  013616                     __ptext99:
 23003                           	opt stack 0
 23004  013616                     _USBDeviceTasks:
 23005                           	opt stack 11
 23006                           
 23007                           ;usb_device.c: 491: uint8_t i;
 23008                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 23009                           
 23010                           ;incstack = 0
 23011  013616  0440               	decf	_USBDeviceState,w,c	;volatile
 23012  013618  B4D8               	btfsc	status,2,c
 23013                           
 23014                           ;usb_device.c: 603: {
 23015                           ;usb_device.c: 613: if(!UCONbits.SE0)
 23016  01361A  BA65               	btfsc	3941,5,c	;volatile
 23017  01361C  D008               	goto	i2l8660
 23018                           
 23019                           ;usb_device.c: 614: {
 23020                           ;usb_device.c: 615: {UIR = 0;};
 23021  01361E  0E00               	movlw	0
 23022  013620  6E62               	movwf	3938,c	;volatile
 23023                           
 23024                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 23025  013622  010F               	movlb	15	; () banked
 23026  013624  8136               	bsf	54,0,b	;volatile
 23027                           
 23028                           ; BSR set to: 15
 23029                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 23030  013626  010F               	movlb	15	; () banked
 23031  013628  8936               	bsf	54,4,b	;volatile
 23032                           
 23033                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 23034  01362A  0E02               	movlw	2
 23035  01362C  6E40               	movwf	_USBDeviceState,c	;volatile
 23036  01362E                     i2l8660:
 23037                           
 23038                           ;usb_device.c: 622: }
 23039                           ;usb_device.c: 623: }
 23040                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 23041  01362E  A462               	btfss	3938,2,c	;volatile
 23042  013630  D006               	goto	i2l8668
 23043  013632  010F               	movlb	15	; () banked
 23044  013634  A536               	btfss	54,2,b	;volatile
 23045  013636  D003               	goto	i2l8668
 23046                           
 23047                           ; BSR set to: 15
 23048                           ;usb_device.c: 640: {
 23049                           ;usb_device.c: 641: (UIR &= 0xFB);
 23050  013638  9462               	bcf	3938,2,c	;volatile
 23051                           
 23052                           ; BSR set to: 15
 23053                           ;usb_device.c: 645: USBWakeFromSuspend();
 23054  01363A  EC3D  F0B4         	call	_USBWakeFromSuspend	;wreg free
 23055  01363E                     i2l8668:
 23056                           
 23057                           ;usb_device.c: 647: }
 23058                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 23059  01363E  A265               	btfss	3941,1,c	;volatile
 23060  013640  D002               	goto	i2l1142
 23061                           
 23062                           ;usb_device.c: 653: {
 23063                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 23064  013642  98A1               	bcf	4001,4,c	;volatile
 23065                           
 23066                           ;usb_device.c: 655: return;
 23067  013644  0012               	return	
 23068  013646                     i2l1142:
 23069                           
 23070                           ;usb_device.c: 656: }
 23071                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 23072  013646  A062               	btfss	3938,0,c	;volatile
 23073  013648  D009               	goto	i2l8682
 23074  01364A  010F               	movlb	15	; () banked
 23075  01364C  A136               	btfss	54,0,b	;volatile
 23076  01364E  D006               	goto	i2l8682
 23077                           
 23078                           ; BSR set to: 15
 23079                           ;usb_device.c: 669: {
 23080                           ;usb_device.c: 670: USBDeviceInit();
 23081  013650  ECAD  F09B         	call	i2_USBDeviceInit	;wreg free
 23082                           
 23083                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 23084  013654  88A0               	bsf	4000,4,c	;volatile
 23085                           
 23086                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 23087  013656  0E04               	movlw	4
 23088  013658  6E40               	movwf	_USBDeviceState,c	;volatile
 23089                           
 23090                           ;usb_device.c: 686: (UIR &= 0xFE);
 23091  01365A  9062               	bcf	3938,0,c	;volatile
 23092  01365C                     i2l8682:
 23093                           
 23094                           ;usb_device.c: 687: }
 23095                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 23096  01365C  A862               	btfss	3938,4,c	;volatile
 23097  01365E  D006               	goto	i2l8690
 23098  013660  010F               	movlb	15	; () banked
 23099  013662  A936               	btfss	54,4,b	;volatile
 23100  013664  D003               	goto	i2l8690
 23101                           
 23102                           ; BSR set to: 15
 23103                           ;usb_device.c: 693: {
 23104                           ;usb_device.c: 698: USBSuspend();
 23105  013666  EC0B  F0B5         	call	_USBSuspend	;wreg free
 23106                           
 23107                           ;usb_device.c: 701: (UIR &= 0xEF);
 23108  01366A  9862               	bcf	3938,4,c	;volatile
 23109  01366C                     i2l8690:
 23110                           
 23111                           ;usb_device.c: 702: }
 23112                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 23113  01366C  AC62               	btfss	3938,6,c	;volatile
 23114  01366E  D019               	goto	i2l8706
 23115                           
 23116                           ;usb_device.c: 705: {
 23117                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 23118  013670  010F               	movlb	15	; () banked
 23119  013672  AD36               	btfss	54,6,b	;volatile
 23120  013674  D00E               	goto	i2l8696
 23121                           
 23122                           ; BSR set to: 15
 23123                           ;usb_device.c: 707: {
 23124                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 23125  013676  0E00               	movlw	0
 23126  013678  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23127  01367A  0E73               	movlw	115
 23128  01367C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23129  01367E  0E00               	movlw	0
 23130  013680  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23131  013682  0E00               	movlw	0
 23132  013684  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23133  013686  0E00               	movlw	0
 23134  013688  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23135  01368A  0E01               	movlw	1
 23136  01368C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23137  01368E  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23138  013692                     i2l8696:
 23139                           
 23140                           ;usb_device.c: 709: }
 23141                           ;usb_device.c: 710: (UIR &= 0xBF);
 23142  013692  9C62               	bcf	3938,6,c	;volatile
 23143                           
 23144                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 23145  013694  5043               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23146  013696  A4D8               	btfss	status,2,c
 23147                           
 23148                           ;usb_device.c: 736: {
 23149                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 23150  013698  0643               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 23151                           
 23152                           ;usb_device.c: 738: }
 23153                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 23154  01369A  5043               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 23155  01369C  B4D8               	btfsc	status,2,c
 23156                           
 23157                           ;usb_device.c: 745: {
 23158                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 23159  01369E  EC7E  F0A6         	call	_USBCtrlEPAllowStatusStage	;wreg free
 23160  0136A2                     i2l8706:
 23161                           
 23162                           ;usb_device.c: 747: }
 23163                           ;usb_device.c: 749: }
 23164                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 23165  0136A2  AA62               	btfss	3938,5,c	;volatile
 23166  0136A4  D004               	goto	i2l8712
 23167  0136A6  010F               	movlb	15	; () banked
 23168  0136A8  BB36               	btfsc	54,5,b	;volatile
 23169                           
 23170                           ; BSR set to: 15
 23171                           ;usb_device.c: 752: {
 23172                           ;usb_device.c: 753: USBStallHandler();
 23173  0136AA  ECF8  F0B2         	call	_USBStallHandler	;wreg free
 23174  0136AE                     i2l8712:
 23175                           
 23176                           ;usb_device.c: 754: }
 23177                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 23178  0136AE  A262               	btfss	3938,1,c	;volatile
 23179  0136B0  D012               	goto	i2l8720
 23180  0136B2  010F               	movlb	15	; () banked
 23181  0136B4  A336               	btfss	54,1,b	;volatile
 23182  0136B6  D00F               	goto	i2l8720
 23183                           
 23184                           ; BSR set to: 15
 23185                           ;usb_device.c: 757: {
 23186                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 23187  0136B8  0E7F               	movlw	127
 23188  0136BA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23189  0136BC  680D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23190  0136BE  0E00               	movlw	0
 23191  0136C0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23192  0136C2  0E00               	movlw	0
 23193  0136C4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23194  0136C6  0E00               	movlw	0
 23195  0136C8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23196  0136CA  0E01               	movlw	1
 23197  0136CC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23198  0136CE  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23199                           
 23200                           ;usb_device.c: 759: {UEIR = 0;};
 23201  0136D2  0E00               	movlw	0
 23202  0136D4  6E63               	movwf	3939,c	;volatile
 23203  0136D6                     i2l8720:
 23204                           
 23205                           ;usb_device.c: 767: }
 23206                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 23207  0136D6  0E04               	movlw	4
 23208  0136D8  6040               	cpfslt	_USBDeviceState,c	;volatile
 23209  0136DA  D002               	goto	i2l1152
 23210                           
 23211                           ;usb_device.c: 775: {
 23212                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 23213  0136DC  98A1               	bcf	4001,4,c	;volatile
 23214                           
 23215                           ;usb_device.c: 777: return;
 23216  0136DE  0012               	return	
 23217  0136E0                     i2l1152:
 23218                           
 23219                           ;usb_device.c: 778: }
 23220                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 23221  0136E0  010F               	movlb	15	; () banked
 23222  0136E2  A736               	btfss	54,3,b	;volatile
 23223  0136E4  D038               	goto	i2l1153
 23224                           
 23225                           ; BSR set to: 15
 23226                           ;usb_device.c: 784: {
 23227                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 23228  0136E6  0E00               	movlw	0
 23229  0136E8  6E1E               	movwf	USBDeviceTasks@i,c
 23230  0136EA                     i2l8726:
 23231                           
 23232                           ; BSR set to: 15
 23233  0136EA  0E03               	movlw	3
 23234  0136EC  641E               	cpfsgt	USBDeviceTasks@i,c
 23235  0136EE  D001               	goto	i2l1154
 23236  0136F0  D032               	goto	i2l1153
 23237  0136F2                     i2l1154:
 23238                           
 23239                           ;usb_device.c: 786: {
 23240                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 23241  0136F2  A662               	btfss	3938,3,c	;volatile
 23242  0136F4  D030               	goto	i2l1153
 23243                           
 23244                           ;usb_device.c: 788: {
 23245                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 23246  0136F6  CF64 F057          	movff	3940,_USTATcopy	;volatile
 23247                           
 23248                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 23249  0136FA  3057               	rrcf	_USTATcopy,w,c	;volatile
 23250  0136FC  32E8               	rrcf	wreg,f,c
 23251  0136FE  32E8               	rrcf	wreg,f,c
 23252  013700  0B0F               	andlw	15
 23253  013702  6E4C               	movwf	_endpoint_number,c	;volatile
 23254                           
 23255                           ;usb_device.c: 793: (UIR &= 0xF7);
 23256  013704  9662               	bcf	3938,3,c	;volatile
 23257                           
 23258                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 23259  013706  B457               	btfsc	_USTATcopy,2,c	;volatile
 23260  013708  D007               	goto	i2l8740
 23261                           
 23262                           ;usb_device.c: 799: {
 23263                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 23264  01370A  504C               	movf	_endpoint_number,w,c	;volatile
 23265  01370C  0D01               	mullw	1
 23266  01370E  0E30               	movlw	low _ep_data_out
 23267  013710  24F3               	addwf	prodl,w,c
 23268  013712  6ED9               	movwf	fsr2l,c
 23269  013714  0E00               	movlw	high _ep_data_out
 23270  013716  D006               	goto	L8
 23271  013718                     i2l8740:
 23272                           
 23273                           ;usb_device.c: 802: else
 23274                           ;usb_device.c: 803: {
 23275                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 23276  013718  504C               	movf	_endpoint_number,w,c	;volatile
 23277  01371A  0D01               	mullw	1
 23278  01371C  0E2D               	movlw	low _ep_data_in
 23279  01371E  24F3               	addwf	prodl,w,c
 23280  013720  6ED9               	movwf	fsr2l,c
 23281  013722  0E00               	movlw	high _ep_data_in
 23282  013724                     L8:
 23283  013724  20F4               	addwfc	prodh,w,c
 23284  013726  6EDA               	movwf	fsr2h,c
 23285  013728  70DF               	btg	indf2,0,c
 23286                           
 23287                           ;usb_device.c: 805: }
 23288                           ;usb_device.c: 810: if(endpoint_number == 0)
 23289  01372A  504C               	movf	_endpoint_number,w,c	;volatile
 23290  01372C  A4D8               	btfss	status,2,c
 23291  01372E  D003               	goto	i2l8746
 23292                           
 23293                           ;usb_device.c: 811: {
 23294                           ;usb_device.c: 812: USBCtrlEPService();
 23295  013730  ECB1  F0A5         	call	_USBCtrlEPService	;wreg free
 23296                           
 23297                           ;usb_device.c: 813: }
 23298  013734  D00E               	goto	i2l8748
 23299  013736                     i2l8746:
 23300                           
 23301                           ;usb_device.c: 814: else
 23302                           ;usb_device.c: 815: {
 23303                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 23304  013736  0E00               	movlw	0
 23305  013738  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23306  01373A  0E72               	movlw	114
 23307  01373C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23308  01373E  0E57               	movlw	low _USTATcopy
 23309  013740  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23310  013742  0E00               	movlw	high _USTATcopy
 23311  013744  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23312  013746  0E00               	movlw	0
 23313  013748  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23314  01374A  0E00               	movlw	0
 23315  01374C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23316  01374E  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23317  013752                     i2l8748:
 23318  013752  2A1E               	incf	USBDeviceTasks@i,f,c
 23319  013754  D7CA               	goto	i2l8726
 23320  013756                     i2l1153:
 23321                           
 23322                           ;usb_device.c: 822: }
 23323                           ;usb_device.c: 823: }
 23324                           ;usb_device.c: 824: }
 23325                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 23326  013756  98A1               	bcf	4001,4,c	;volatile
 23327  013758  0012               	return		;funcret
 23328  01375A                     __end_of_USBDeviceTasks:
 23329                           	opt stack 0
 23330                           pclatu	equ	0xFFB
 23331                           pclath	equ	0xFFA
 23332                           tblptru	equ	0xFF8
 23333                           tblptrh	equ	0xFF7
 23334                           tblptrl	equ	0xFF6
 23335                           tablat	equ	0xFF5
 23336                           prodh	equ	0xFF4
 23337                           prodl	equ	0xFF3
 23338                           intcon	equ	0xFF2
 23339                           intcon2	equ	0xFF1
 23340                           postinc0	equ	0xFEE
 23341                           fsr0h	equ	0xFEA
 23342                           fsr0l	equ	0xFE9
 23343                           wreg	equ	0xFE8
 23344                           indf1	equ	0xFE7
 23345                           postinc1	equ	0xFE6
 23346                           postdec1	equ	0xFE5
 23347                           fsr1h	equ	0xFE2
 23348                           fsr1l	equ	0xFE1
 23349                           indf2	equ	0xFDF
 23350                           postinc2	equ	0xFDE
 23351                           postdec2	equ	0xFDD
 23352                           plusw2	equ	0xFDB
 23353                           fsr2h	equ	0xFDA
 23354                           fsr2l	equ	0xFD9
 23355                           status	equ	0xFD8
 23356                           
 23357 ;; *************** function i2_USBDeviceInit *****************
 23358 ;; Defined at:
 23359 ;;		line 298 in file "../My_header/usb_cdc/usb/usb_device.c"
 23360 ;; Parameters:    Size  Location     Type
 23361 ;;		None
 23362 ;; Auto vars:     Size  Location     Type
 23363 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 23364 ;; Return value:  Size  Location     Type
 23365 ;;		None               void
 23366 ;; Registers used:
 23367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23368 ;; Tracked objects:
 23369 ;;		On entry : 0/0
 23370 ;;		On exit  : 0/0
 23371 ;;		Unchanged: 0/0
 23372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;Total ram usage:        1 bytes
 23378 ;; Hardware stack levels used:    1
 23379 ;; Hardware stack levels required when called:    1
 23380 ;; This function calls:
 23381 ;;		i2_memset
 23382 ;; This function is called by:
 23383 ;;		_USBDeviceTasks
 23384 ;; This function uses a non-reentrant model
 23385 ;;
 23386                           
 23387                           	psect	text100
 23388  01375A                     __ptext100:
 23389                           	opt stack 0
 23390  01375A                     i2_USBDeviceInit:
 23391                           	opt stack 17
 23392                           
 23393                           ;usb_device.c: 300: uint8_t i;
 23394                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 23395                           
 23396                           ;incstack = 0
 23397  01375A  98A0               	bcf	4000,4,c	;volatile
 23398                           
 23399                           ;usb_device.c: 305: {UEIR = 0;};
 23400  01375C  0E00               	movlw	0
 23401  01375E  6E63               	movwf	3939,c	;volatile
 23402                           
 23403                           ;usb_device.c: 308: {UIR = 0;};
 23404  013760  0E00               	movlw	0
 23405  013762  6E62               	movwf	3938,c	;volatile
 23406                           
 23407                           ;usb_device.c: 311: UEP0 = 0;
 23408  013764  0E00               	movlw	0
 23409  013766  010F               	movlb	15	; () banked
 23410  013768  6F26               	movwf	38,b	;volatile
 23411                           
 23412                           ; BSR set to: 15
 23413                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 23414  01376A  0E27               	movlw	39
 23415  01376C  6E01               	movwf	i2memset@p1,c
 23416  01376E  0E0F               	movlw	15
 23417  013770  6E02               	movwf	i2memset@p1+1,c
 23418  013772  0E00               	movlw	0
 23419  013774  6E04               	movwf	i2memset@c+1,c
 23420  013776  0E00               	movlw	0
 23421  013778  6E03               	movwf	i2memset@c,c
 23422  01377A  0E00               	movlw	0
 23423  01377C  6E06               	movwf	i2memset@n+1,c
 23424  01377E  0E02               	movlw	2
 23425  013780  6E05               	movwf	i2memset@n,c
 23426  013782  EC21  F0B5         	call	i2_memset	;wreg free
 23427                           
 23428                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 23429  013786  0E16               	movlw	22
 23430  013788  010F               	movlb	15	; () banked
 23431  01378A  6F39               	movwf	57,b	;volatile
 23432                           
 23433                           ; BSR set to: 15
 23434  01378C  0E9F               	movlw	159
 23435  01378E  010F               	movlb	15	; () banked
 23436  013790  6F37               	movwf	55,b	;volatile
 23437                           
 23438                           ; BSR set to: 15
 23439  013792  0E7B               	movlw	123
 23440  013794  010F               	movlb	15	; () banked
 23441  013796  6F36               	movwf	54,b	;volatile
 23442                           
 23443                           ; BSR set to: 15
 23444                           ;usb_device.c: 318: ;
 23445                           ;usb_device.c: 321: ;
 23446                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 23447  013798  0E00               	movlw	0
 23448  01379A  6E09               	movwf	i2USBDeviceInit@i,c
 23449  01379C                     i2l7896:
 23450                           
 23451                           ; BSR set to: 15
 23452  01379C  0E0B               	movlw	11
 23453  01379E  6409               	cpfsgt	i2USBDeviceInit@i,c
 23454  0137A0  D001               	goto	i2l7900
 23455  0137A2  D00E               	goto	i2l1130
 23456  0137A4                     i2l7900:
 23457                           
 23458                           ;usb_device.c: 325: {
 23459                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 23460  0137A4  5009               	movf	i2USBDeviceInit@i,w,c
 23461  0137A6  0D04               	mullw	4
 23462  0137A8  0E00               	movlw	0
 23463  0137AA  24F3               	addwf	prodl,w,c
 23464  0137AC  6ED9               	movwf	fsr2l,c
 23465  0137AE  0E0D               	movlw	13
 23466  0137B0  20F4               	addwfc	prodh,w,c
 23467  0137B2  6EDA               	movwf	fsr2h,c
 23468  0137B4  6ADE               	clrf	postinc2,c
 23469  0137B6  6ADE               	clrf	postinc2,c
 23470  0137B8  6ADE               	clrf	postinc2,c
 23471  0137BA  6ADD               	clrf	postdec2,c
 23472  0137BC  2A09               	incf	i2USBDeviceInit@i,f,c
 23473  0137BE  D7EE               	goto	i2l7896
 23474  0137C0                     i2l1130:
 23475                           
 23476                           ;usb_device.c: 327: }
 23477                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 23478  0137C0  8C65               	bsf	3941,6,c	;volatile
 23479                           
 23480                           ;usb_device.c: 333: UADDR = 0x00;
 23481  0137C2  0E00               	movlw	0
 23482  0137C4  010F               	movlb	15	; () banked
 23483  0137C6  6F38               	movwf	56,b	;volatile
 23484                           
 23485                           ; BSR set to: 15
 23486                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 23487  0137C8  9865               	bcf	3941,4,c	;volatile
 23488                           
 23489                           ; BSR set to: 15
 23490                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 23491  0137CA  9C65               	bcf	3941,6,c	;volatile
 23492                           
 23493                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 23494  0137CC  D00C               	goto	i2l7920
 23495  0137CE                     i2l7912:
 23496                           
 23497                           ;usb_device.c: 343: {
 23498                           ;usb_device.c: 344: (UIR &= 0xF7);
 23499  0137CE  9662               	bcf	3938,3,c	;volatile
 23500                           
 23501                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 23502  0137D0  0E00               	movlw	0
 23503  0137D2  0100               	movlb	0	; () banked
 23504  0137D4  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 23505                           
 23506                           ; BSR set to: 0
 23507                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 23508  0137D6  0E00               	movlw	0
 23509  0137D8  0100               	movlb	0	; () banked
 23510  0137DA  6FE4               	movwf	(_outPipes+3)& (0+255),b	;volatile
 23511                           
 23512                           ; BSR set to: 0
 23513                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 23514  0137DC  0E00               	movlw	0
 23515  0137DE  0100               	movlb	0	; () banked
 23516  0137E0  6FE6               	movwf	(_outPipes+5)& (0+255),b	;volatile
 23517  0137E2  0E00               	movlw	0
 23518  0137E4  6FE5               	movwf	(_outPipes+4)& (0+255),b	;volatile
 23519  0137E6                     i2l7920:
 23520  0137E6  B662               	btfsc	3938,3,c	;volatile
 23521  0137E8  D7F2               	goto	i2l7912
 23522                           
 23523                           ;usb_device.c: 349: }
 23524                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 23525  0137EA  0E01               	movlw	1
 23526  0137EC  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 23527                           
 23528                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 23529  0137EE  0E01               	movlw	1
 23530  0137F0  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 23531                           
 23532                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 23533  0137F2  0E00               	movlw	0
 23534  0137F4  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 23535                           
 23536                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 23537  0137F6  0E00               	movlw	0
 23538  0137F8  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 23539                           
 23540                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 23541  0137FA  0E00               	movlw	0
 23542  0137FC  0101               	movlb	1	; () banked
 23543  0137FE  6F27               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 23544                           
 23545                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 23546  013800  0E00               	movlw	0
 23547  013802  6E09               	movwf	i2USBDeviceInit@i,c
 23548  013804                     i2l7924:
 23549                           
 23550                           ; BSR set to: 1
 23551  013804  0E02               	movlw	2
 23552  013806  6409               	cpfsgt	i2USBDeviceInit@i,c
 23553  013808  D001               	goto	i2l7928
 23554  01380A  D02E               	goto	i2l7934
 23555  01380C                     i2l7928:
 23556                           
 23557                           ;usb_device.c: 363: {
 23558                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 23559  01380C  5009               	movf	i2USBDeviceInit@i,w,c
 23560  01380E  0D02               	mullw	2
 23561  013810  0EF0               	movlw	low _pBDTEntryIn
 23562  013812  24F3               	addwf	prodl,w,c
 23563  013814  6ED9               	movwf	fsr2l,c
 23564  013816  0E00               	movlw	high _pBDTEntryIn
 23565  013818  20F4               	addwfc	prodh,w,c
 23566  01381A  6EDA               	movwf	fsr2h,c
 23567  01381C  0E00               	movlw	0
 23568  01381E  6EDE               	movwf	postinc2,c
 23569  013820  0E00               	movlw	0
 23570  013822  6EDD               	movwf	postdec2,c
 23571                           
 23572                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 23573  013824  5009               	movf	i2USBDeviceInit@i,w,c
 23574  013826  0D02               	mullw	2
 23575  013828  0E00               	movlw	low _pBDTEntryOut
 23576  01382A  24F3               	addwf	prodl,w,c
 23577  01382C  6ED9               	movwf	fsr2l,c
 23578  01382E  0E01               	movlw	high _pBDTEntryOut
 23579  013830  20F4               	addwfc	prodh,w,c
 23580  013832  6EDA               	movwf	fsr2h,c
 23581  013834  0E00               	movlw	0
 23582  013836  6EDE               	movwf	postinc2,c
 23583  013838  0E00               	movlw	0
 23584  01383A  6EDD               	movwf	postdec2,c
 23585                           
 23586                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 23587  01383C  5009               	movf	i2USBDeviceInit@i,w,c
 23588  01383E  0D01               	mullw	1
 23589  013840  0E2D               	movlw	low _ep_data_in
 23590  013842  24F3               	addwf	prodl,w,c
 23591  013844  6ED9               	movwf	fsr2l,c
 23592  013846  0E00               	movlw	high _ep_data_in
 23593  013848  20F4               	addwfc	prodh,w,c
 23594  01384A  6EDA               	movwf	fsr2h,c
 23595  01384C  0E00               	movlw	0
 23596  01384E  6EDF               	movwf	indf2,c
 23597                           
 23598                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 23599  013850  5009               	movf	i2USBDeviceInit@i,w,c
 23600  013852  0D01               	mullw	1
 23601  013854  0E30               	movlw	low _ep_data_out
 23602  013856  24F3               	addwf	prodl,w,c
 23603  013858  6ED9               	movwf	fsr2l,c
 23604  01385A  0E00               	movlw	high _ep_data_out
 23605  01385C  20F4               	addwfc	prodh,w,c
 23606  01385E  6EDA               	movwf	fsr2h,c
 23607  013860  0E00               	movlw	0
 23608  013862  6EDF               	movwf	indf2,c
 23609  013864  2A09               	incf	i2USBDeviceInit@i,f,c
 23610  013866  D7CE               	goto	i2l7924
 23611  013868                     i2l7934:
 23612                           
 23613                           ;usb_device.c: 368: }
 23614                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 23615  013868  0E08               	movlw	8
 23616  01386A  0100               	movlb	0	; () banked
 23617  01386C  6FF0               	movwf	_pBDTEntryIn& (0+255),b
 23618  01386E  0E0D               	movlw	13
 23619  013870  0100               	movlb	0	; () banked
 23620  013872  6FF1               	movwf	(_pBDTEntryIn+1)& (0+255),b
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 23624  013874  0E16               	movlw	22
 23625  013876  010F               	movlb	15	; () banked
 23626  013878  6F26               	movwf	38,b	;volatile
 23627                           
 23628                           ; BSR set to: 15
 23629                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 23630  01387A  0E0D               	movlw	13
 23631  01387C  010D               	movlb	13	; () banked
 23632  01387E  6F03               	movwf	3,b	;volatile
 23633  013880  0E30               	movlw	48
 23634  013882  6F02               	movwf	2,b	;volatile
 23635                           
 23636                           ; BSR set to: 13
 23637                           ;usb_device.c: 376: BDT[0].CNT = 8;
 23638  013884  0E08               	movlw	8
 23639  013886  010D               	movlb	13	; () banked
 23640  013888  6F01               	movwf	1,b	;volatile
 23641                           
 23642                           ; BSR set to: 13
 23643                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 23644  01388A  0E04               	movlw	4
 23645  01388C  010D               	movlb	13	; () banked
 23646  01388E  6F00               	movwf	0,b	;volatile
 23647                           
 23648                           ; BSR set to: 13
 23649                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 23650  013890  010D               	movlb	13	; () banked
 23651  013892  8F00               	bsf	0,7,b	;volatile
 23652                           
 23653                           ; BSR set to: 13
 23654                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 23655  013894  0E00               	movlw	0
 23656  013896  6E56               	movwf	_USBActiveConfiguration,c	;volatile
 23657                           
 23658                           ; BSR set to: 13
 23659                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 23660  013898  0E00               	movlw	0
 23661  01389A  6E40               	movwf	_USBDeviceState,c	;volatile
 23662                           
 23663                           ; BSR set to: 13
 23664  01389C  0012               	return		;funcret
 23665  01389E                     __end_ofi2_USBDeviceInit:
 23666                           	opt stack 0
 23667                           pclatu	equ	0xFFB
 23668                           pclath	equ	0xFFA
 23669                           tblptru	equ	0xFF8
 23670                           tblptrh	equ	0xFF7
 23671                           tblptrl	equ	0xFF6
 23672                           tablat	equ	0xFF5
 23673                           prodh	equ	0xFF4
 23674                           prodl	equ	0xFF3
 23675                           intcon	equ	0xFF2
 23676                           intcon2	equ	0xFF1
 23677                           postinc0	equ	0xFEE
 23678                           fsr0h	equ	0xFEA
 23679                           fsr0l	equ	0xFE9
 23680                           wreg	equ	0xFE8
 23681                           indf1	equ	0xFE7
 23682                           postinc1	equ	0xFE6
 23683                           postdec1	equ	0xFE5
 23684                           fsr1h	equ	0xFE2
 23685                           fsr1l	equ	0xFE1
 23686                           indf2	equ	0xFDF
 23687                           postinc2	equ	0xFDE
 23688                           postdec2	equ	0xFDD
 23689                           plusw2	equ	0xFDB
 23690                           fsr2h	equ	0xFDA
 23691                           fsr2l	equ	0xFD9
 23692                           status	equ	0xFD8
 23693                           
 23694 ;; *************** function _USBWakeFromSuspend *****************
 23695 ;; Defined at:
 23696 ;;		line 2302 in file "../My_header/usb_cdc/usb/usb_device.c"
 23697 ;; Parameters:    Size  Location     Type
 23698 ;;		None
 23699 ;; Auto vars:     Size  Location     Type
 23700 ;;		None
 23701 ;; Return value:  Size  Location     Type
 23702 ;;		None               void
 23703 ;; Registers used:
 23704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23705 ;; Tracked objects:
 23706 ;;		On entry : 0/0
 23707 ;;		On exit  : 0/0
 23708 ;;		Unchanged: 0/0
 23709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23714 ;;Total ram usage:        0 bytes
 23715 ;; Hardware stack levels used:    1
 23716 ;; Hardware stack levels required when called:    4
 23717 ;; This function calls:
 23718 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23719 ;; This function is called by:
 23720 ;;		_USBDeviceTasks
 23721 ;; This function uses a non-reentrant model
 23722 ;;
 23723                           
 23724                           	psect	text101
 23725  01687A                     __ptext101:
 23726                           	opt stack 0
 23727  01687A                     _USBWakeFromSuspend:
 23728                           	opt stack 14
 23729                           
 23730                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 23731                           
 23732                           ; BSR set to: 13
 23733                           ;incstack = 0
 23734  01687A  0E00               	movlw	0
 23735  01687C  0101               	movlb	1	; () banked
 23736  01687E  6F27               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 23737                           
 23738                           ; BSR set to: 1
 23739                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 23740  016880  0E00               	movlw	0
 23741  016882  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23742  016884  0E74               	movlw	116
 23743  016886  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23744  016888  0E00               	movlw	0
 23745  01688A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23746  01688C  0E00               	movlw	0
 23747  01688E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23748  016890  0E00               	movlw	0
 23749  016892  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23750  016894  0E00               	movlw	0
 23751  016896  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23752  016898  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23753                           
 23754                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 23755  01689C  9265               	bcf	3941,1,c	;volatile
 23756                           
 23757                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 23758  01689E  010F               	movlb	15	; () banked
 23759  0168A0  9536               	bcf	54,2,b	;volatile
 23760                           
 23761                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 23762  0168A2  D001               	goto	i2l7822
 23763  0168A4                     i2l7820:
 23764                           
 23765                           ;usb_device.c: 2342: {
 23766                           ;usb_device.c: 2343: (UIR &= 0xFB);
 23767  0168A4  9462               	bcf	3938,2,c	;volatile
 23768  0168A6                     i2l7822:
 23769  0168A6  A462               	btfss	3938,2,c	;volatile
 23770  0168A8  0012               	return	
 23771  0168AA  D7FC               	goto	i2l7820
 23772  0168AC                     __end_of_USBWakeFromSuspend:
 23773                           	opt stack 0
 23774                           pclatu	equ	0xFFB
 23775                           pclath	equ	0xFFA
 23776                           tblptru	equ	0xFF8
 23777                           tblptrh	equ	0xFF7
 23778                           tblptrl	equ	0xFF6
 23779                           tablat	equ	0xFF5
 23780                           prodh	equ	0xFF4
 23781                           prodl	equ	0xFF3
 23782                           intcon	equ	0xFF2
 23783                           intcon2	equ	0xFF1
 23784                           postinc0	equ	0xFEE
 23785                           fsr0h	equ	0xFEA
 23786                           fsr0l	equ	0xFE9
 23787                           wreg	equ	0xFE8
 23788                           indf1	equ	0xFE7
 23789                           postinc1	equ	0xFE6
 23790                           postdec1	equ	0xFE5
 23791                           fsr1h	equ	0xFE2
 23792                           fsr1l	equ	0xFE1
 23793                           indf2	equ	0xFDF
 23794                           postinc2	equ	0xFDE
 23795                           postdec2	equ	0xFDD
 23796                           plusw2	equ	0xFDB
 23797                           fsr2h	equ	0xFDA
 23798                           fsr2l	equ	0xFD9
 23799                           status	equ	0xFD8
 23800                           
 23801 ;; *************** function _USBSuspend *****************
 23802 ;; Defined at:
 23803 ;;		line 2245 in file "../My_header/usb_cdc/usb/usb_device.c"
 23804 ;; Parameters:    Size  Location     Type
 23805 ;;		None
 23806 ;; Auto vars:     Size  Location     Type
 23807 ;;		None
 23808 ;; Return value:  Size  Location     Type
 23809 ;;		None               void
 23810 ;; Registers used:
 23811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23812 ;; Tracked objects:
 23813 ;;		On entry : 0/0
 23814 ;;		On exit  : 0/0
 23815 ;;		Unchanged: 0/0
 23816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23821 ;;Total ram usage:        0 bytes
 23822 ;; Hardware stack levels used:    1
 23823 ;; Hardware stack levels required when called:    4
 23824 ;; This function calls:
 23825 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23826 ;; This function is called by:
 23827 ;;		_USBDeviceTasks
 23828 ;; This function uses a non-reentrant model
 23829 ;;
 23830                           
 23831                           	psect	text102
 23832  016A16                     __ptext102:
 23833                           	opt stack 0
 23834  016A16                     _USBSuspend:
 23835                           	opt stack 14
 23836                           
 23837                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 23838                           
 23839                           ;incstack = 0
 23840  016A16  010F               	movlb	15	; () banked
 23841  016A18  8536               	bsf	54,2,b	;volatile
 23842                           
 23843                           ; BSR set to: 15
 23844                           ;usb_device.c: 2271: (UIR &= 0xEF);
 23845  016A1A  9862               	bcf	3938,4,c	;volatile
 23846                           
 23847                           ; BSR set to: 15
 23848                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 23849  016A1C  8265               	bsf	3941,1,c	;volatile
 23850                           
 23851                           ; BSR set to: 15
 23852                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 23853  016A1E  0E01               	movlw	1
 23854  016A20  0101               	movlb	1	; () banked
 23855  016A22  6F27               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 23856                           
 23857                           ; BSR set to: 1
 23858                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 23859  016A24  0E00               	movlw	0
 23860  016A26  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23861  016A28  0E75               	movlw	117
 23862  016A2A  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23863  016A2C  0E00               	movlw	0
 23864  016A2E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 23865  016A30  0E00               	movlw	0
 23866  016A32  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 23867  016A34  0E00               	movlw	0
 23868  016A36  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23869  016A38  0E00               	movlw	0
 23870  016A3A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23871  016A3C  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23872  016A40  0012               	return		;funcret
 23873  016A42                     __end_of_USBSuspend:
 23874                           	opt stack 0
 23875                           pclatu	equ	0xFFB
 23876                           pclath	equ	0xFFA
 23877                           tblptru	equ	0xFF8
 23878                           tblptrh	equ	0xFF7
 23879                           tblptrl	equ	0xFF6
 23880                           tablat	equ	0xFF5
 23881                           prodh	equ	0xFF4
 23882                           prodl	equ	0xFF3
 23883                           intcon	equ	0xFF2
 23884                           intcon2	equ	0xFF1
 23885                           postinc0	equ	0xFEE
 23886                           fsr0h	equ	0xFEA
 23887                           fsr0l	equ	0xFE9
 23888                           wreg	equ	0xFE8
 23889                           indf1	equ	0xFE7
 23890                           postinc1	equ	0xFE6
 23891                           postdec1	equ	0xFE5
 23892                           fsr1h	equ	0xFE2
 23893                           fsr1l	equ	0xFE1
 23894                           indf2	equ	0xFDF
 23895                           postinc2	equ	0xFDE
 23896                           postdec2	equ	0xFDD
 23897                           plusw2	equ	0xFDB
 23898                           fsr2h	equ	0xFDA
 23899                           fsr2l	equ	0xFD9
 23900                           status	equ	0xFD8
 23901                           
 23902 ;; *************** function _USBStallHandler *****************
 23903 ;; Defined at:
 23904 ;;		line 2202 in file "../My_header/usb_cdc/usb/usb_device.c"
 23905 ;; Parameters:    Size  Location     Type
 23906 ;;		None
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;		None
 23909 ;; Return value:  Size  Location     Type
 23910 ;;		None               void
 23911 ;; Registers used:
 23912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23913 ;; Tracked objects:
 23914 ;;		On entry : 0/0
 23915 ;;		On exit  : 0/0
 23916 ;;		Unchanged: 0/0
 23917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23920 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23922 ;;Total ram usage:        1 bytes
 23923 ;; Hardware stack levels used:    1
 23924 ;; This function calls:
 23925 ;;		Nothing
 23926 ;; This function is called by:
 23927 ;;		_USBDeviceTasks
 23928 ;; This function uses a non-reentrant model
 23929 ;;
 23930                           
 23931                           	psect	text103
 23932  0165F0                     __ptext103:
 23933                           	opt stack 0
 23934  0165F0                     _USBStallHandler:
 23935                           	opt stack 18
 23936                           
 23937                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 23938                           
 23939                           ;incstack = 0
 23940  0165F0  010F               	movlb	15	; () banked
 23941  0165F2  A126               	btfss	38,0,b	;volatile
 23942  0165F4  D01E               	goto	i2l1292
 23943                           
 23944                           ; BSR set to: 15
 23945                           ;usb_device.c: 2215: {
 23946                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 23947  0165F6  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23948  0165FA  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23949  0165FE  0E80               	movlw	128
 23950  016600  18DE               	xorwf	postinc2,w,c
 23951  016602  A4D8               	btfss	status,2,c
 23952  016604  D014               	goto	i2l7844
 23953                           
 23954                           ; BSR set to: 15
 23955  016606  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 23956  01660A  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 23957  01660E  0E84               	movlw	132
 23958  016610  18DE               	xorwf	postinc2,w,c
 23959  016612  A4D8               	btfss	status,2,c
 23960  016614  D00C               	goto	i2l7844
 23961                           
 23962                           ; BSR set to: 15
 23963                           ;usb_device.c: 2218: {
 23964                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 23965  016616  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23966  01661A  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23967  01661E  0E0C               	movlw	12
 23968  016620  6EDF               	movwf	indf2,c
 23969                           
 23970                           ; BSR set to: 15
 23971                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 23972  016622  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 23973  016626  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 23974  01662A  0E00               	movlw	0
 23975  01662C  8EDB               	bsf	plusw2,7,c
 23976  01662E                     i2l7844:
 23977                           
 23978                           ; BSR set to: 15
 23979                           ;usb_device.c: 2222: }
 23980                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 23981  01662E  010F               	movlb	15	; () banked
 23982  016630  9126               	bcf	38,0,b	;volatile
 23983  016632                     i2l1292:
 23984                           
 23985                           ; BSR set to: 15
 23986                           ;usb_device.c: 2224: }
 23987                           ;usb_device.c: 2226: (UIR &= 0xDF);
 23988  016632  9A62               	bcf	3938,5,c	;volatile
 23989                           
 23990                           ; BSR set to: 15
 23991  016634  0012               	return		;funcret
 23992  016636                     __end_of_USBStallHandler:
 23993                           	opt stack 0
 23994                           pclatu	equ	0xFFB
 23995                           pclath	equ	0xFFA
 23996                           tblptru	equ	0xFF8
 23997                           tblptrh	equ	0xFF7
 23998                           tblptrl	equ	0xFF6
 23999                           tablat	equ	0xFF5
 24000                           prodh	equ	0xFF4
 24001                           prodl	equ	0xFF3
 24002                           intcon	equ	0xFF2
 24003                           intcon2	equ	0xFF1
 24004                           postinc0	equ	0xFEE
 24005                           fsr0h	equ	0xFEA
 24006                           fsr0l	equ	0xFE9
 24007                           wreg	equ	0xFE8
 24008                           indf1	equ	0xFE7
 24009                           postinc1	equ	0xFE6
 24010                           postdec1	equ	0xFE5
 24011                           fsr1h	equ	0xFE2
 24012                           fsr1l	equ	0xFE1
 24013                           indf2	equ	0xFDF
 24014                           postinc2	equ	0xFDE
 24015                           postdec2	equ	0xFDD
 24016                           plusw2	equ	0xFDB
 24017                           fsr2h	equ	0xFDA
 24018                           fsr2l	equ	0xFD9
 24019                           status	equ	0xFD8
 24020                           
 24021 ;; *************** function _USBCtrlEPService *****************
 24022 ;; Defined at:
 24023 ;;		line 2369 in file "../My_header/usb_cdc/usb/usb_device.c"
 24024 ;; Parameters:    Size  Location     Type
 24025 ;;		None
 24026 ;; Auto vars:     Size  Location     Type
 24027 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 24028 ;; Return value:  Size  Location     Type
 24029 ;;		None               void
 24030 ;; Registers used:
 24031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24032 ;; Tracked objects:
 24033 ;;		On entry : 0/0
 24034 ;;		On exit  : 0/0
 24035 ;;		Unchanged: 0/0
 24036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24040 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24041 ;;Total ram usage:        3 bytes
 24042 ;; Hardware stack levels used:    1
 24043 ;; Hardware stack levels required when called:    7
 24044 ;; This function calls:
 24045 ;;		_USBCtrlTrfInHandler
 24046 ;;		_USBCtrlTrfOutHandler
 24047 ;;		_USBCtrlTrfSetupHandler
 24048 ;; This function is called by:
 24049 ;;		_USBDeviceTasks
 24050 ;; This function uses a non-reentrant model
 24051 ;;
 24052                           
 24053                           	psect	text104
 24054  014B62                     __ptext104:
 24055                           	opt stack 0
 24056  014B62                     _USBCtrlEPService:
 24057                           	opt stack 11
 24058                           
 24059                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 24060                           
 24061                           ; BSR set to: 15
 24062                           ;incstack = 0
 24063  014B62  0E2D               	movlw	45
 24064  014B64  6E43               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 24065                           
 24066                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 24067  014B66  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24068  014B6A  0EFD               	movlw	253
 24069  014B6C  161B               	andwf	??_USBCtrlEPService,f,c
 24070  014B6E  A4D8               	btfss	status,2,c
 24071  014B70  D057               	goto	i2l7878
 24072                           
 24073                           ;usb_device.c: 2380: {
 24074                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 24075  014B72  C057  F01B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 24076  014B76  90D8               	bcf	status,0,c
 24077  014B78  321B               	rrcf	??_USBCtrlEPService,f,c
 24078  014B7A  0E3F               	movlw	63
 24079  014B7C  161B               	andwf	??_USBCtrlEPService,f,c
 24080  014B7E  501B               	movf	??_USBCtrlEPService,w,c
 24081  014B80  0D04               	mullw	4
 24082  014B82  0E00               	movlw	0
 24083  014B84  24F3               	addwf	prodl,w,c
 24084  014B86  6E35               	movwf	_pBDTEntryEP0OutCurrent,c
 24085  014B88  0E0D               	movlw	13
 24086  014B8A  20F4               	addwfc	prodh,w,c
 24087  014B8C  6E36               	movwf	_pBDTEntryEP0OutCurrent+1,c
 24088                           
 24089                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 24090  014B8E  C035  F037         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 24091  014B92  C036  F038         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 24092                           
 24093                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 24094  014B96  0E04               	movlw	4
 24095  014B98  1A37               	xorwf	_pBDTEntryEP0OutNext,f,c
 24096                           
 24097                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 24098  014B9A  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24099  014B9E  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24100  014BA2  30DF               	rrcf	indf2,w,c
 24101  014BA4  32E8               	rrcf	wreg,f,c
 24102  014BA6  0B0F               	andlw	15
 24103  014BA8  0A0D               	xorlw	13
 24104  014BAA  A4D8               	btfss	status,2,c
 24105  014BAC  D036               	goto	i2l7876
 24106                           
 24107                           ;usb_device.c: 2397: {
 24108                           ;usb_device.c: 2398: unsigned char setup_cnt;
 24109                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 24110  014BAE  0E00               	movlw	0
 24111  014BB0  6E1D               	movwf	USBCtrlEPService@setup_cnt,c
 24112  014BB2                     i2l7860:
 24113  014BB2  0E07               	movlw	7
 24114  014BB4  641D               	cpfsgt	USBCtrlEPService@setup_cnt,c
 24115  014BB6  D001               	goto	i2l7864
 24116  014BB8  D023               	goto	i2l7872
 24117  014BBA                     i2l7864:
 24118                           
 24119                           ;usb_device.c: 2405: {
 24120                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 24121  014BBA  EE20 F002          	lfsr	2,2
 24122  014BBE  5035               	movf	_pBDTEntryEP0OutCurrent,w,c
 24123  014BC0  26D9               	addwf	fsr2l,f,c
 24124  014BC2  5036               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24125  014BC4  22DA               	addwfc	fsr2h,f,c
 24126  014BC6  CFDE F01B          	movff	postinc2,??_USBCtrlEPService
 24127  014BCA  CFDD F01C          	movff	postdec2,??_USBCtrlEPService+1
 24128  014BCE  C01B  FFD9         	movff	??_USBCtrlEPService,fsr2l
 24129  014BD2  C01C  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 24130  014BD6  501D               	movf	USBCtrlEPService@setup_cnt,w,c
 24131  014BD8  0D01               	mullw	1
 24132  014BDA  0E30               	movlw	48
 24133  014BDC  24F3               	addwf	prodl,w,c
 24134  014BDE  6EE1               	movwf	fsr1l,c
 24135  014BE0  0E0D               	movlw	13
 24136  014BE2  20F4               	addwfc	prodh,w,c
 24137  014BE4  6EE2               	movwf	fsr1h,c
 24138  014BE6  CFDF FFE7          	movff	indf2,indf1
 24139                           
 24140                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 24141  014BEA  EE20 F002          	lfsr	2,2
 24142  014BEE  5035               	movf	_pBDTEntryEP0OutCurrent,w,c
 24143  014BF0  26D9               	addwf	fsr2l,f,c
 24144  014BF2  5036               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24145  014BF4  22DA               	addwfc	fsr2h,f,c
 24146  014BF6  2ADE               	incf	postinc2,f,c
 24147  014BF8  0E00               	movlw	0
 24148  014BFA  22DD               	addwfc	postdec2,f,c
 24149  014BFC  2A1D               	incf	USBCtrlEPService@setup_cnt,f,c
 24150  014BFE  D7D9               	goto	i2l7860
 24151  014C00                     i2l7872:
 24152                           
 24153                           ;usb_device.c: 2408: }
 24154                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 24155  014C00  EE20 F002          	lfsr	2,2
 24156  014C04  5035               	movf	_pBDTEntryEP0OutCurrent,w,c
 24157  014C06  26D9               	addwf	fsr2l,f,c
 24158  014C08  5036               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24159  014C0A  22DA               	addwfc	fsr2h,f,c
 24160  014C0C  0E30               	movlw	48
 24161  014C0E  6EDE               	movwf	postinc2,c
 24162  014C10  0E0D               	movlw	13
 24163  014C12  6EDD               	movwf	postdec2,c
 24164                           
 24165                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 24166  014C14  ECD5  F0AD         	call	_USBCtrlTrfSetupHandler	;wreg free
 24167                           
 24168                           ;usb_device.c: 2413: }
 24169  014C18  0012               	return	
 24170  014C1A                     i2l7876:
 24171                           
 24172                           ;usb_device.c: 2414: else
 24173                           ;usb_device.c: 2415: {
 24174                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 24175  014C1A  EC80  F0B1         	call	_USBCtrlTrfOutHandler	;wreg free
 24176                           
 24177                           ;usb_device.c: 2418: }
 24178                           ;usb_device.c: 2419: }
 24179  014C1E  0012               	return	
 24180  014C20                     i2l7878:
 24181                           
 24182                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 24183  014C20  5057               	movf	_USTATcopy,w,c	;volatile
 24184  014C22  0BFD               	andlw	253
 24185  014C24  0A04               	xorlw	4
 24186  014C26  A4D8               	btfss	status,2,c
 24187  014C28  0012               	return	
 24188                           
 24189                           ;usb_device.c: 2421: {
 24190                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 24191  014C2A  ECE0  F0A6         	call	_USBCtrlTrfInHandler	;wreg free
 24192  014C2E  0012               	return	
 24193  014C30                     __end_of_USBCtrlEPService:
 24194                           	opt stack 0
 24195                           pclatu	equ	0xFFB
 24196                           pclath	equ	0xFFA
 24197                           tblptru	equ	0xFF8
 24198                           tblptrh	equ	0xFF7
 24199                           tblptrl	equ	0xFF6
 24200                           tablat	equ	0xFF5
 24201                           prodh	equ	0xFF4
 24202                           prodl	equ	0xFF3
 24203                           intcon	equ	0xFF2
 24204                           intcon2	equ	0xFF1
 24205                           postinc0	equ	0xFEE
 24206                           fsr0h	equ	0xFEA
 24207                           fsr0l	equ	0xFE9
 24208                           wreg	equ	0xFE8
 24209                           indf1	equ	0xFE7
 24210                           postinc1	equ	0xFE6
 24211                           postdec1	equ	0xFE5
 24212                           fsr1h	equ	0xFE2
 24213                           fsr1l	equ	0xFE1
 24214                           indf2	equ	0xFDF
 24215                           postinc2	equ	0xFDE
 24216                           postdec2	equ	0xFDD
 24217                           plusw2	equ	0xFDB
 24218                           fsr2h	equ	0xFDA
 24219                           fsr2l	equ	0xFD9
 24220                           status	equ	0xFD8
 24221                           
 24222 ;; *************** function _USBCtrlTrfSetupHandler *****************
 24223 ;; Defined at:
 24224 ;;		line 2469 in file "../My_header/usb_cdc/usb/usb_device.c"
 24225 ;; Parameters:    Size  Location     Type
 24226 ;;		None
 24227 ;; Auto vars:     Size  Location     Type
 24228 ;;		None
 24229 ;; Return value:  Size  Location     Type
 24230 ;;		None               void
 24231 ;; Registers used:
 24232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24233 ;; Tracked objects:
 24234 ;;		On entry : 0/0
 24235 ;;		On exit  : 0/0
 24236 ;;		Unchanged: 0/0
 24237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24242 ;;Total ram usage:        0 bytes
 24243 ;; Hardware stack levels used:    1
 24244 ;; Hardware stack levels required when called:    6
 24245 ;; This function calls:
 24246 ;;		_USBCheckStdRequest
 24247 ;;		_USBCtrlEPServiceComplete
 24248 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24249 ;; This function is called by:
 24250 ;;		_USBCtrlEPService
 24251 ;; This function uses a non-reentrant model
 24252 ;;
 24253                           
 24254                           	psect	text105
 24255  015BAA                     __ptext105:
 24256                           	opt stack 0
 24257  015BAA                     _USBCtrlTrfSetupHandler:
 24258                           	opt stack 11
 24259                           
 24260                           ;usb_device.c: 2474: shortPacketStatus = 0;
 24261                           
 24262                           ;incstack = 0
 24263  015BAA  0E00               	movlw	0
 24264  015BAC  6E4E               	movwf	_shortPacketStatus,c	;volatile
 24265                           
 24266                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 24267  015BAE  0E00               	movlw	0
 24268  015BB0  6E3F               	movwf	_USBDeferStatusStagePacket,c	;volatile
 24269                           
 24270                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 24271  015BB2  0E00               	movlw	0
 24272  015BB4  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24273                           
 24274                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 24275  015BB6  0E00               	movlw	0
 24276  015BB8  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24277                           
 24278                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 24279  015BBA  0E00               	movlw	0
 24280  015BBC  6E3B               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 24281                           
 24282                           ;usb_device.c: 2479: controlTransferState = 0;
 24283  015BBE  0E00               	movlw	0
 24284  015BC0  6E47               	movwf	_controlTransferState,c	;volatile
 24285                           
 24286                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 24287  015BC2  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 24288  015BC6  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24289  015BCA  0E7F               	movlw	127
 24290  015BCC  16DF               	andwf	indf2,f,c
 24291                           
 24292                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 24293  015BCE  0E04               	movlw	4
 24294  015BD0  0100               	movlb	0	; () banked
 24295  015BD2  1BF0               	xorwf	_pBDTEntryIn& (0+255),f,b
 24296                           
 24297                           ; BSR set to: 0
 24298                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 24299  015BD4  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 24300  015BD8  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24301  015BDC  0E7F               	movlw	127
 24302  015BDE  16DF               	andwf	indf2,f,c
 24303                           
 24304                           ; BSR set to: 0
 24305                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 24306  015BE0  0E04               	movlw	4
 24307  015BE2  0100               	movlb	0	; () banked
 24308  015BE4  1BF0               	xorwf	_pBDTEntryIn& (0+255),f,b
 24309                           
 24310                           ; BSR set to: 0
 24311                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 24312  015BE6  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24313  015BEA  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24314  015BEE  0E7F               	movlw	127
 24315  015BF0  16DF               	andwf	indf2,f,c
 24316                           
 24317                           ; BSR set to: 0
 24318                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 24319  015BF2  0E00               	movlw	0
 24320  015BF4  0100               	movlb	0	; () banked
 24321  015BF6  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 24322                           
 24323                           ; BSR set to: 0
 24324                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 24325  015BF8  0E00               	movlw	0
 24326  015BFA  0100               	movlb	0	; () banked
 24327  015BFC  6FEF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 24328  015BFE  0E00               	movlw	0
 24329  015C00  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24330                           
 24331                           ; BSR set to: 0
 24332                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 24333  015C02  0E00               	movlw	0
 24334  015C04  0100               	movlb	0	; () banked
 24335  015C06  6FE4               	movwf	(_outPipes+3)& (0+255),b	;volatile
 24336                           
 24337                           ; BSR set to: 0
 24338                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 24339  015C08  0E00               	movlw	0
 24340  015C0A  0100               	movlb	0	; () banked
 24341  015C0C  6FE6               	movwf	(_outPipes+5)& (0+255),b	;volatile
 24342  015C0E  0E00               	movlw	0
 24343  015C10  6FE5               	movwf	(_outPipes+4)& (0+255),b	;volatile
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;usb_device.c: 2503: USBCheckStdRequest();
 24347  015C12  EC13  F0A0         	call	_USBCheckStdRequest	;wreg free
 24348                           
 24349                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 24350  015C16  0E00               	movlw	0
 24351  015C18  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 24352  015C1A  0E03               	movlw	3
 24353  015C1C  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 24354  015C1E  0E00               	movlw	0
 24355  015C20  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 24356  015C22  0E00               	movlw	0
 24357  015C24  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 24358  015C26  0E00               	movlw	0
 24359  015C28  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 24360  015C2A  0E00               	movlw	0
 24361  015C2C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 24362  015C2E  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24363                           
 24364                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 24365  015C32  EC20  F09F         	call	_USBCtrlEPServiceComplete	;wreg free
 24366  015C36  0012               	return		;funcret
 24367  015C38                     __end_of_USBCtrlTrfSetupHandler:
 24368                           	opt stack 0
 24369                           pclatu	equ	0xFFB
 24370                           pclath	equ	0xFFA
 24371                           tblptru	equ	0xFF8
 24372                           tblptrh	equ	0xFF7
 24373                           tblptrl	equ	0xFF6
 24374                           tablat	equ	0xFF5
 24375                           prodh	equ	0xFF4
 24376                           prodl	equ	0xFF3
 24377                           intcon	equ	0xFF2
 24378                           intcon2	equ	0xFF1
 24379                           postinc0	equ	0xFEE
 24380                           fsr0h	equ	0xFEA
 24381                           fsr0l	equ	0xFE9
 24382                           wreg	equ	0xFE8
 24383                           indf1	equ	0xFE7
 24384                           postinc1	equ	0xFE6
 24385                           postdec1	equ	0xFE5
 24386                           fsr1h	equ	0xFE2
 24387                           fsr1l	equ	0xFE1
 24388                           indf2	equ	0xFDF
 24389                           postinc2	equ	0xFDE
 24390                           postdec2	equ	0xFDD
 24391                           plusw2	equ	0xFDB
 24392                           fsr2h	equ	0xFDA
 24393                           fsr2l	equ	0xFD9
 24394                           status	equ	0xFD8
 24395                           
 24396 ;; *************** function _USBCtrlEPServiceComplete *****************
 24397 ;; Defined at:
 24398 ;;		line 1616 in file "../My_header/usb_cdc/usb/usb_device.c"
 24399 ;; Parameters:    Size  Location     Type
 24400 ;;		None
 24401 ;; Auto vars:     Size  Location     Type
 24402 ;;		None
 24403 ;; Return value:  Size  Location     Type
 24404 ;;		None               void
 24405 ;; Registers used:
 24406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24407 ;; Tracked objects:
 24408 ;;		On entry : 0/0
 24409 ;;		On exit  : 0/0
 24410 ;;		Unchanged: 0/0
 24411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24416 ;;Total ram usage:        0 bytes
 24417 ;; Hardware stack levels used:    1
 24418 ;; Hardware stack levels required when called:    2
 24419 ;; This function calls:
 24420 ;;		_USBCtrlEPAllowDataStage
 24421 ;;		_USBCtrlEPAllowStatusStage
 24422 ;; This function is called by:
 24423 ;;		_USBCtrlTrfSetupHandler
 24424 ;; This function uses a non-reentrant model
 24425 ;;
 24426                           
 24427                           	psect	text106
 24428  013E40                     __ptext106:
 24429                           	opt stack 0
 24430  013E40                     _USBCtrlEPServiceComplete:
 24431                           	opt stack 14
 24432                           
 24433                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 24434                           
 24435                           ;incstack = 0
 24436  013E40  9865               	bcf	3941,4,c	;volatile
 24437                           
 24438                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 24439  013E42  0100               	movlb	0	; () banked
 24440  013E44  BFED               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 24441  013E46  D039               	goto	i2l1216
 24442                           
 24443                           ; BSR set to: 0
 24444                           ;usb_device.c: 1629: {
 24445                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 24446  013E48  0100               	movlb	0	; () banked
 24447  013E4A  AFE4               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 24448  013E4C  D00B               	goto	i2l6886
 24449                           
 24450                           ; BSR set to: 0
 24451                           ;usb_device.c: 1631: {
 24452                           ;usb_device.c: 1632: controlTransferState = 2;
 24453  013E4E  0E02               	movlw	2
 24454  013E50  6E47               	movwf	_controlTransferState,c	;volatile
 24455                           
 24456                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 24457  013E52  503E               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 24458  013E54  B4D8               	btfsc	status,2,c
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;usb_device.c: 1644: {
 24462                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 24463  013E56  ECC8  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 24464                           
 24465                           ;usb_device.c: 1646: }
 24466                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 24467  013E5A  0E00               	movlw	0
 24468  013E5C  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24469                           
 24470                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 24471  013E5E  0E00               	movlw	0
 24472  013E60  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24473                           
 24474                           ;usb_device.c: 1652: }
 24475  013E62  0012               	return	
 24476  013E64                     i2l6886:
 24477                           
 24478                           ;usb_device.c: 1653: else
 24479                           ;usb_device.c: 1654: {
 24480                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 24481  013E64  EE20 F001          	lfsr	2,1
 24482  013E68  5037               	movf	_pBDTEntryEP0OutNext,w,c
 24483  013E6A  26D9               	addwf	fsr2l,f,c
 24484  013E6C  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 24485  013E6E  22DA               	addwfc	fsr2h,f,c
 24486  013E70  0E08               	movlw	8
 24487  013E72  6EDF               	movwf	indf2,c
 24488                           
 24489                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24490  013E74  EE20 F002          	lfsr	2,2
 24491  013E78  5037               	movf	_pBDTEntryEP0OutNext,w,c
 24492  013E7A  26D9               	addwf	fsr2l,f,c
 24493  013E7C  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 24494  013E7E  22DA               	addwfc	fsr2h,f,c
 24495  013E80  0E30               	movlw	48
 24496  013E82  6EDE               	movwf	postinc2,c
 24497  013E84  0E0D               	movlw	13
 24498  013E86  6EDD               	movwf	postdec2,c
 24499                           
 24500                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24501  013E88  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24502  013E8C  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24503  013E90  0E0C               	movlw	12
 24504  013E92  6EDF               	movwf	indf2,c
 24505                           
 24506                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24507  013E94  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24508  013E98  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24509  013E9C  0E00               	movlw	0
 24510  013E9E  8EDB               	bsf	plusw2,7,c
 24511                           
 24512                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 24513  013EA0  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 24514  013EA4  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24515  013EA8  0E04               	movlw	4
 24516  013EAA  6EDF               	movwf	indf2,c
 24517                           
 24518                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24519  013EAC  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 24520  013EB0  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24521  013EB4  0E00               	movlw	0
 24522  013EB6  8EDB               	bsf	plusw2,7,c
 24523                           
 24524                           ;usb_device.c: 1665: }
 24525                           ;usb_device.c: 1666: }
 24526  013EB8  0012               	return	
 24527  013EBA                     i2l1216:
 24528                           
 24529                           ; BSR set to: 0
 24530                           ;usb_device.c: 1667: else
 24531                           ;usb_device.c: 1668: {
 24532                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 24533  013EBA  010D               	movlb	13	; () banked
 24534  013EBC  AF30               	btfss	48,7,b	;volatile
 24535  013EBE  D010               	goto	i2l6906
 24536                           
 24537                           ; BSR set to: 13
 24538                           ;usb_device.c: 1670: {
 24539                           ;usb_device.c: 1671: controlTransferState = 1;
 24540  013EC0  0E01               	movlw	1
 24541  013EC2  6E47               	movwf	_controlTransferState,c	;volatile
 24542                           
 24543                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 24544  013EC4  503D               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 24545  013EC6  B4D8               	btfsc	status,2,c
 24546                           
 24547                           ; BSR set to: 13
 24548                           ;usb_device.c: 1686: {
 24549                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 24550  013EC8  ECC8  F0AB         	call	_USBCtrlEPAllowDataStage	;wreg free
 24551                           
 24552                           ;usb_device.c: 1688: }
 24553                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 24554  013ECC  0E00               	movlw	0
 24555  013ECE  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24556                           
 24557                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 24558  013ED0  0E00               	movlw	0
 24559  013ED2  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24560                           
 24561                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 24562  013ED4  503F               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 24563  013ED6  A4D8               	btfss	status,2,c
 24564  013ED8  0012               	return	
 24565                           
 24566                           ;usb_device.c: 1713: {
 24567                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 24568  013EDA  EC7E  F0A6         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24569                           
 24570                           ;usb_device.c: 1715: }
 24571                           ;usb_device.c: 1716: }
 24572  013EDE  0012               	return	
 24573  013EE0                     i2l6906:
 24574                           
 24575                           ;usb_device.c: 1717: else
 24576                           ;usb_device.c: 1718: {
 24577                           ;usb_device.c: 1729: controlTransferState = 2;
 24578  013EE0  0E02               	movlw	2
 24579  013EE2  6E47               	movwf	_controlTransferState,c	;volatile
 24580                           
 24581                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 24582  013EE4  EE20 F001          	lfsr	2,1
 24583  013EE8  5037               	movf	_pBDTEntryEP0OutNext,w,c
 24584  013EEA  26D9               	addwf	fsr2l,f,c
 24585  013EEC  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 24586  013EEE  22DA               	addwfc	fsr2h,f,c
 24587  013EF0  0E08               	movlw	8
 24588  013EF2  6EDF               	movwf	indf2,c
 24589                           
 24590                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24591  013EF4  EE20 F002          	lfsr	2,2
 24592  013EF8  5037               	movf	_pBDTEntryEP0OutNext,w,c
 24593  013EFA  26D9               	addwf	fsr2l,f,c
 24594  013EFC  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 24595  013EFE  22DA               	addwfc	fsr2h,f,c
 24596  013F00  0E30               	movlw	48
 24597  013F02  6EDE               	movwf	postinc2,c
 24598  013F04  0E0D               	movlw	13
 24599  013F06  6EDD               	movwf	postdec2,c
 24600                           
 24601                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 24602  013F08  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24603  013F0C  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24604  013F10  0E04               	movlw	4
 24605  013F12  6EDF               	movwf	indf2,c
 24606                           
 24607                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24608  013F14  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24609  013F18  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24610  013F1C  0E00               	movlw	0
 24611  013F1E  8EDB               	bsf	plusw2,7,c
 24612                           
 24613                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 24614  013F20  0E00               	movlw	0
 24615  013F22  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 24616                           
 24617                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 24618  013F24  0E00               	movlw	0
 24619  013F26  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 24620                           
 24621                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 24622  013F28  503F               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 24623  013F2A  A4D8               	btfss	status,2,c
 24624  013F2C  0012               	return	
 24625                           
 24626                           ;usb_device.c: 1741: {
 24627                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 24628  013F2E  EC7E  F0A6         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24629  013F32  0012               	return	
 24630  013F34                     __end_of_USBCtrlEPServiceComplete:
 24631                           	opt stack 0
 24632                           pclatu	equ	0xFFB
 24633                           pclath	equ	0xFFA
 24634                           tblptru	equ	0xFF8
 24635                           tblptrh	equ	0xFF7
 24636                           tblptrl	equ	0xFF6
 24637                           tablat	equ	0xFF5
 24638                           prodh	equ	0xFF4
 24639                           prodl	equ	0xFF3
 24640                           intcon	equ	0xFF2
 24641                           intcon2	equ	0xFF1
 24642                           postinc0	equ	0xFEE
 24643                           fsr0h	equ	0xFEA
 24644                           fsr0l	equ	0xFE9
 24645                           wreg	equ	0xFE8
 24646                           indf1	equ	0xFE7
 24647                           postinc1	equ	0xFE6
 24648                           postdec1	equ	0xFE5
 24649                           fsr1h	equ	0xFE2
 24650                           fsr1l	equ	0xFE1
 24651                           indf2	equ	0xFDF
 24652                           postinc2	equ	0xFDE
 24653                           postdec2	equ	0xFDD
 24654                           plusw2	equ	0xFDB
 24655                           fsr2h	equ	0xFDA
 24656                           fsr2l	equ	0xFD9
 24657                           status	equ	0xFD8
 24658                           
 24659 ;; *************** function _USBCtrlEPAllowDataStage *****************
 24660 ;; Defined at:
 24661 ;;		line 1488 in file "../My_header/usb_cdc/usb/usb_device.c"
 24662 ;; Parameters:    Size  Location     Type
 24663 ;;		None
 24664 ;; Auto vars:     Size  Location     Type
 24665 ;;		None
 24666 ;; Return value:  Size  Location     Type
 24667 ;;		None               void
 24668 ;; Registers used:
 24669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24670 ;; Tracked objects:
 24671 ;;		On entry : 0/0
 24672 ;;		On exit  : 0/0
 24673 ;;		Unchanged: 0/0
 24674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24679 ;;Total ram usage:        0 bytes
 24680 ;; Hardware stack levels used:    1
 24681 ;; Hardware stack levels required when called:    1
 24682 ;; This function calls:
 24683 ;;		_USBCtrlTrfTxService
 24684 ;; This function is called by:
 24685 ;;		_USBCtrlEPServiceComplete
 24686 ;; This function uses a non-reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text107
 24690  015790                     __ptext107:
 24691                           	opt stack 0
 24692  015790                     _USBCtrlEPAllowDataStage:
 24693                           	opt stack 14
 24694                           
 24695                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 24696                           
 24697                           ;incstack = 0
 24698  015790  0E00               	movlw	0
 24699  015792  6E3D               	movwf	_USBDeferINDataStagePackets,c	;volatile
 24700                           
 24701                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 24702  015794  0E00               	movlw	0
 24703  015796  6E3E               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 24704                           
 24705                           ;usb_device.c: 1493: if(controlTransferState == 2)
 24706  015798  0E02               	movlw	2
 24707  01579A  1847               	xorwf	_controlTransferState,w,c	;volatile
 24708  01579C  A4D8               	btfss	status,2,c
 24709  01579E  D01F               	goto	i2l6630
 24710                           
 24711                           ;usb_device.c: 1494: {
 24712                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 24713  0157A0  EE20 F001          	lfsr	2,1
 24714  0157A4  5037               	movf	_pBDTEntryEP0OutNext,w,c
 24715  0157A6  26D9               	addwf	fsr2l,f,c
 24716  0157A8  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 24717  0157AA  22DA               	addwfc	fsr2h,f,c
 24718  0157AC  0E08               	movlw	8
 24719  0157AE  6EDF               	movwf	indf2,c
 24720                           
 24721                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 24722  0157B0  EE20 F002          	lfsr	2,2
 24723  0157B4  5037               	movf	_pBDTEntryEP0OutNext,w,c
 24724  0157B6  26D9               	addwf	fsr2l,f,c
 24725  0157B8  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 24726  0157BA  22DA               	addwfc	fsr2h,f,c
 24727  0157BC  0E38               	movlw	56
 24728  0157BE  6EDE               	movwf	postinc2,c
 24729  0157C0  0E0D               	movlw	13
 24730  0157C2  6EDD               	movwf	postdec2,c
 24731                           
 24732                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 24733  0157C4  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24734  0157C8  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24735  0157CC  0E48               	movlw	72
 24736  0157CE  6EDF               	movwf	indf2,c
 24737                           
 24738                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24739  0157D0  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24740  0157D4  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24741  0157D8  0E00               	movlw	0
 24742  0157DA  8EDB               	bsf	plusw2,7,c
 24743                           
 24744                           ;usb_device.c: 1500: }
 24745  0157DC  0012               	return	
 24746  0157DE                     i2l6630:
 24747                           
 24748                           ;usb_device.c: 1501: else
 24749                           ;usb_device.c: 1502: {
 24750                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 24751  0157DE  0100               	movlb	0	; () banked
 24752  0157E0  51EE               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 24753  0157E2  010D               	movlb	13	; () banked
 24754  0157E4  5D36               	subwf	54,w,b	;volatile
 24755  0157E6  0100               	movlb	0	; () banked
 24756  0157E8  51EF               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 24757  0157EA  010D               	movlb	13	; () banked
 24758  0157EC  5937               	subwfb	55,w,b	;volatile
 24759  0157EE  B0D8               	btfsc	status,0,c
 24760  0157F0  D004               	goto	i2l6634
 24761                           
 24762                           ; BSR set to: 13
 24763                           ;usb_device.c: 1506: {
 24764                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 24765  0157F2  CD36 F0EE          	movff	3382,_inPipes+4	;volatile
 24766  0157F6  CD37 F0EF          	movff	3383,_inPipes+5	;volatile
 24767  0157FA                     i2l6634:
 24768                           
 24769                           ; BSR set to: 13
 24770                           ;usb_device.c: 1508: }
 24771                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 24772  0157FA  EC57  F0A2         	call	_USBCtrlTrfTxService	;wreg free
 24773                           
 24774                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 24775  0157FE  0100               	movlb	0	; () banked
 24776  015800  EE20 F002          	lfsr	2,2
 24777  015804  51F0               	movf	_pBDTEntryIn& (0+255),w,b
 24778  015806  26D9               	addwf	fsr2l,f,c
 24779  015808  51F1               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 24780  01580A  22DA               	addwfc	fsr2h,f,c
 24781  01580C  0E38               	movlw	56
 24782  01580E  6EDE               	movwf	postinc2,c
 24783  015810  0E0D               	movlw	13
 24784  015812  6EDD               	movwf	postdec2,c
 24785                           
 24786                           ; BSR set to: 0
 24787                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 24788  015814  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 24789  015818  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24790  01581C  0E48               	movlw	72
 24791  01581E  6EDF               	movwf	indf2,c
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24795  015820  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 24796  015824  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24797  015828  0E00               	movlw	0
 24798  01582A  8EDB               	bsf	plusw2,7,c
 24799  01582C  0012               	return	
 24800  01582E                     __end_of_USBCtrlEPAllowDataStage:
 24801                           	opt stack 0
 24802                           pclatu	equ	0xFFB
 24803                           pclath	equ	0xFFA
 24804                           tblptru	equ	0xFF8
 24805                           tblptrh	equ	0xFF7
 24806                           tblptrl	equ	0xFF6
 24807                           tablat	equ	0xFF5
 24808                           prodh	equ	0xFF4
 24809                           prodl	equ	0xFF3
 24810                           intcon	equ	0xFF2
 24811                           intcon2	equ	0xFF1
 24812                           postinc0	equ	0xFEE
 24813                           fsr0h	equ	0xFEA
 24814                           fsr0l	equ	0xFE9
 24815                           wreg	equ	0xFE8
 24816                           indf1	equ	0xFE7
 24817                           postinc1	equ	0xFE6
 24818                           postdec1	equ	0xFE5
 24819                           fsr1h	equ	0xFE2
 24820                           fsr1l	equ	0xFE1
 24821                           indf2	equ	0xFDF
 24822                           postinc2	equ	0xFDE
 24823                           postdec2	equ	0xFDD
 24824                           plusw2	equ	0xFDB
 24825                           fsr2h	equ	0xFDA
 24826                           fsr2l	equ	0xFD9
 24827                           status	equ	0xFD8
 24828                           
 24829 ;; *************** function _USBCheckStdRequest *****************
 24830 ;; Defined at:
 24831 ;;		line 2689 in file "../My_header/usb_cdc/usb/usb_device.c"
 24832 ;; Parameters:    Size  Location     Type
 24833 ;;		None
 24834 ;; Auto vars:     Size  Location     Type
 24835 ;;		None
 24836 ;; Return value:  Size  Location     Type
 24837 ;;		None               void
 24838 ;; Registers used:
 24839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24840 ;; Tracked objects:
 24841 ;;		On entry : 0/0
 24842 ;;		On exit  : 0/0
 24843 ;;		Unchanged: 0/0
 24844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24849 ;;Total ram usage:        0 bytes
 24850 ;; Hardware stack levels used:    1
 24851 ;; Hardware stack levels required when called:    5
 24852 ;; This function calls:
 24853 ;;		_USBStdFeatureReqHandler
 24854 ;;		_USBStdGetDscHandler
 24855 ;;		_USBStdGetStatusHandler
 24856 ;;		_USBStdSetCfgHandler
 24857 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24858 ;; This function is called by:
 24859 ;;		_USBCtrlTrfSetupHandler
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text108
 24864  014026                     __ptext108:
 24865                           	opt stack 0
 24866  014026                     _USBCheckStdRequest:
 24867                           	opt stack 11
 24868                           
 24869                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 24870                           
 24871                           ;incstack = 0
 24872  014026  010D               	movlb	13	; () banked
 24873  014028  3930               	swapf	48,w,b	;volatile
 24874  01402A  32E8               	rrcf	wreg,f,c
 24875  01402C  0B03               	andlw	3
 24876  01402E  0900               	iorlw	0
 24877  014030  A4D8               	btfss	status,2,c
 24878  014032  0012               	return	
 24879  014034  D04F               	goto	i2l7004
 24880  014036                     i2l1343:
 24881                           
 24882                           ; BSR set to: 13
 24883                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 24884  014036  0100               	movlb	0	; () banked
 24885  014038  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24886                           
 24887                           ; BSR set to: 0
 24888                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 24889  01403A  0E08               	movlw	8
 24890  01403C  6E40               	movwf	_USBDeviceState,c	;volatile
 24891                           
 24892                           ;usb_device.c: 2699: break;
 24893  01403E  0012               	return	
 24894  014040                     i2l6974:
 24895                           
 24896                           ;usb_device.c: 2701: USBStdGetDscHandler();
 24897  014040  ECBE  F099         	call	_USBStdGetDscHandler	;wreg free
 24898                           
 24899                           ;usb_device.c: 2702: break;
 24900  014044  0012               	return	
 24901  014046                     i2l6976:
 24902                           
 24903                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 24904  014046  EC76  F0A1         	call	_USBStdSetCfgHandler	;wreg free
 24905                           
 24906                           ;usb_device.c: 2705: break;
 24907  01404A  0012               	return	
 24908  01404C                     i2l6978:
 24909                           
 24910                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 24911  01404C  0E56               	movlw	low _USBActiveConfiguration
 24912  01404E  0100               	movlb	0	; () banked
 24913  014050  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 24914  014052  0E00               	movlw	high _USBActiveConfiguration
 24915  014054  0100               	movlb	0	; () banked
 24916  014056  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24917                           
 24918                           ; BSR set to: 0
 24919                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24920  014058  0100               	movlb	0	; () banked
 24921  01405A  81ED               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 24922                           
 24923                           ; BSR set to: 0
 24924                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 24925  01405C  0E01               	movlw	1
 24926  01405E  0100               	movlb	0	; () banked
 24927  014060  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24928                           
 24929                           ; BSR set to: 0
 24930                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 24931  014062  0100               	movlb	0	; () banked
 24932  014064  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24933                           
 24934                           ;usb_device.c: 2711: break;
 24935  014066  0012               	return	
 24936  014068                     i2l6986:
 24937                           
 24938                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 24939  014068  ECBD  F0A8         	call	_USBStdGetStatusHandler	;wreg free
 24940                           
 24941                           ;usb_device.c: 2714: break;
 24942  01406C  0012               	return	
 24943  01406E                     i2l6988:
 24944                           
 24945                           ;usb_device.c: 2716: case 3:
 24946                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 24947  01406E  ECB4  F093         	call	_USBStdFeatureReqHandler	;wreg free
 24948                           
 24949                           ;usb_device.c: 2718: break;
 24950  014072  0012               	return	
 24951  014074                     i2l6990:
 24952                           
 24953                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 24954  014074  010D               	movlb	13	; () banked
 24955  014076  5134               	movf	52,w,b	;volatile
 24956  014078  0D01               	mullw	1
 24957  01407A  0E54               	movlw	low _USBAlternateInterface
 24958  01407C  24F3               	addwf	prodl,w,c
 24959  01407E  0100               	movlb	0	; () banked
 24960  014080  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 24961  014082  0E00               	movlw	high _USBAlternateInterface
 24962  014084  20F4               	addwfc	prodh,w,c
 24963  014086  0100               	movlb	0	; () banked
 24964  014088  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 24965                           
 24966                           ; BSR set to: 0
 24967                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 24968  01408A  0100               	movlb	0	; () banked
 24969  01408C  81ED               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 24970                           
 24971                           ; BSR set to: 0
 24972                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 24973  01408E  0E01               	movlw	1
 24974  014090  0100               	movlb	0	; () banked
 24975  014092  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 24979  014094  0100               	movlb	0	; () banked
 24980  014096  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24981                           
 24982                           ;usb_device.c: 2724: break;
 24983  014098  0012               	return	
 24984  01409A                     i2l1352:
 24985                           
 24986                           ; BSR set to: 13
 24987                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 24988  01409A  0100               	movlb	0	; () banked
 24989  01409C  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 24990                           
 24991                           ; BSR set to: 0
 24992                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 24993  01409E  010D               	movlb	13	; () banked
 24994  0140A0  5134               	movf	52,w,b	;volatile
 24995  0140A2  0D01               	mullw	1
 24996  0140A4  0E54               	movlw	low _USBAlternateInterface
 24997  0140A6  24F3               	addwf	prodl,w,c
 24998  0140A8  6ED9               	movwf	fsr2l,c
 24999  0140AA  0E00               	movlw	high _USBAlternateInterface
 25000  0140AC  20F4               	addwfc	prodh,w,c
 25001  0140AE  6EDA               	movwf	fsr2h,c
 25002  0140B0  CD32 FFDF          	movff	3378,indf2	;volatile
 25003                           
 25004                           ;usb_device.c: 2728: break;
 25005  0140B4  0012               	return	
 25006  0140B6                     i2l7000:
 25007                           
 25008                           ; BSR set to: 13
 25009                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 25010  0140B6  0E00               	movlw	0
 25011  0140B8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25012  0140BA  0E02               	movlw	2
 25013  0140BC  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25014  0140BE  0E00               	movlw	0
 25015  0140C0  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25016  0140C2  0E00               	movlw	0
 25017  0140C4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25018  0140C6  0E00               	movlw	0
 25019  0140C8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25020  0140CA  0E00               	movlw	0
 25021  0140CC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25022  0140CE  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25023                           
 25024                           ;usb_device.c: 2735: }
 25025                           
 25026                           ;usb_device.c: 2734: break;
 25027                           
 25028                           ;usb_device.c: 2733: default:
 25029                           
 25030                           ;usb_device.c: 2732: case 12:
 25031                           
 25032                           ;usb_device.c: 2731: break;
 25033  0140D2  0012               	return	
 25034  0140D4                     i2l7004:
 25035  0140D4  010D               	movlb	13	; () banked
 25036  0140D6  5131               	movf	49,w,b	;volatile
 25037                           
 25038                           ; Switch size 1, requested type "space"
 25039                           ; Number of cases is 11, Range of values is 0 to 12
 25040                           ; switch strategies available:
 25041                           ; Name         Instructions Cycles
 25042                           ; simple_byte           34    18 (average)
 25043                           ;	Chosen strategy is simple_byte
 25044  0140D8  0A00               	xorlw	0	; case 0
 25045  0140DA  B4D8               	btfsc	status,2,c
 25046  0140DC  D7C5               	goto	i2l6986
 25047  0140DE  0A01               	xorlw	1	; case 1
 25048  0140E0  B4D8               	btfsc	status,2,c
 25049  0140E2  D7C5               	goto	i2l6988
 25050  0140E4  0A02               	xorlw	2	; case 3
 25051  0140E6  B4D8               	btfsc	status,2,c
 25052  0140E8  D7C2               	goto	i2l6988
 25053  0140EA  0A06               	xorlw	6	; case 5
 25054  0140EC  B4D8               	btfsc	status,2,c
 25055  0140EE  D7A3               	goto	i2l1343
 25056  0140F0  0A03               	xorlw	3	; case 6
 25057  0140F2  B4D8               	btfsc	status,2,c
 25058  0140F4  D7A5               	goto	i2l6974
 25059  0140F6  0A01               	xorlw	1	; case 7
 25060  0140F8  B4D8               	btfsc	status,2,c
 25061  0140FA  D7DD               	goto	i2l7000
 25062  0140FC  0A0F               	xorlw	15	; case 8
 25063  0140FE  B4D8               	btfsc	status,2,c
 25064  014100  D7A5               	goto	i2l6978
 25065  014102  0A01               	xorlw	1	; case 9
 25066  014104  B4D8               	btfsc	status,2,c
 25067  014106  D79F               	goto	i2l6976
 25068  014108  0A03               	xorlw	3	; case 10
 25069  01410A  B4D8               	btfsc	status,2,c
 25070  01410C  D7B3               	goto	i2l6990
 25071  01410E  0A01               	xorlw	1	; case 11
 25072  014110  B4D8               	btfsc	status,2,c
 25073  014112  D7C3               	goto	i2l1352
 25074  014114  0A07               	xorlw	7	; case 12
 25075  014116  0012               	return	
 25076  014118                     __end_of_USBCheckStdRequest:
 25077                           	opt stack 0
 25078                           pclatu	equ	0xFFB
 25079                           pclath	equ	0xFFA
 25080                           tblptru	equ	0xFF8
 25081                           tblptrh	equ	0xFF7
 25082                           tblptrl	equ	0xFF6
 25083                           tablat	equ	0xFF5
 25084                           prodh	equ	0xFF4
 25085                           prodl	equ	0xFF3
 25086                           intcon	equ	0xFF2
 25087                           intcon2	equ	0xFF1
 25088                           postinc0	equ	0xFEE
 25089                           fsr0h	equ	0xFEA
 25090                           fsr0l	equ	0xFE9
 25091                           wreg	equ	0xFE8
 25092                           indf1	equ	0xFE7
 25093                           postinc1	equ	0xFE6
 25094                           postdec1	equ	0xFE5
 25095                           fsr1h	equ	0xFE2
 25096                           fsr1l	equ	0xFE1
 25097                           indf2	equ	0xFDF
 25098                           postinc2	equ	0xFDE
 25099                           postdec2	equ	0xFDD
 25100                           plusw2	equ	0xFDB
 25101                           fsr2h	equ	0xFDA
 25102                           fsr2l	equ	0xFD9
 25103                           status	equ	0xFD8
 25104                           
 25105 ;; *************** function _USBStdSetCfgHandler *****************
 25106 ;; Defined at:
 25107 ;;		line 1968 in file "../My_header/usb_cdc/usb/usb_device.c"
 25108 ;; Parameters:    Size  Location     Type
 25109 ;;		None
 25110 ;; Auto vars:     Size  Location     Type
 25111 ;;  i               1   20[COMRAM] unsigned char 
 25112 ;; Return value:  Size  Location     Type
 25113 ;;		None               void
 25114 ;; Registers used:
 25115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25116 ;; Tracked objects:
 25117 ;;		On entry : 0/0
 25118 ;;		On exit  : 0/0
 25119 ;;		Unchanged: 0/0
 25120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25125 ;;Total ram usage:        1 bytes
 25126 ;; Hardware stack levels used:    1
 25127 ;; Hardware stack levels required when called:    4
 25128 ;; This function calls:
 25129 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25130 ;;		i2_memset
 25131 ;; This function is called by:
 25132 ;;		_USBCheckStdRequest
 25133 ;; This function uses a non-reentrant model
 25134 ;;
 25135                           
 25136                           	psect	text109
 25137  0142EC                     __ptext109:
 25138                           	opt stack 0
 25139  0142EC                     _USBStdSetCfgHandler:
 25140                           	opt stack 11
 25141                           
 25142                           ;usb_device.c: 1970: uint8_t i;
 25143                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 25144                           
 25145                           ;incstack = 0
 25146  0142EC  0100               	movlb	0	; () banked
 25147  0142EE  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25148                           
 25149                           ; BSR set to: 0
 25150                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 25151  0142F0  0E27               	movlw	39
 25152  0142F2  6E01               	movwf	i2memset@p1,c
 25153  0142F4  0E0F               	movlw	15
 25154  0142F6  6E02               	movwf	i2memset@p1+1,c
 25155  0142F8  0E00               	movlw	0
 25156  0142FA  6E04               	movwf	i2memset@c+1,c
 25157  0142FC  0E00               	movlw	0
 25158  0142FE  6E03               	movwf	i2memset@c,c
 25159  014300  0E00               	movlw	0
 25160  014302  6E06               	movwf	i2memset@n+1,c
 25161  014304  0E02               	movlw	2
 25162  014306  6E05               	movwf	i2memset@n,c
 25163  014308  EC21  F0B5         	call	i2_memset	;wreg free
 25164                           
 25165                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 25166  01430C  0E00               	movlw	0
 25167  01430E  6E01               	movwf	i2memset@p1,c
 25168  014310  0E0D               	movlw	13
 25169  014312  6E02               	movwf	i2memset@p1+1,c
 25170  014314  0E00               	movlw	0
 25171  014316  6E04               	movwf	i2memset@c+1,c
 25172  014318  0E00               	movlw	0
 25173  01431A  6E03               	movwf	i2memset@c,c
 25174  01431C  0E00               	movlw	0
 25175  01431E  6E06               	movwf	i2memset@n+1,c
 25176  014320  0E30               	movlw	48
 25177  014322  6E05               	movwf	i2memset@n,c
 25178  014324  EC21  F0B5         	call	i2_memset	;wreg free
 25179                           
 25180                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 25181  014328  8C65               	bsf	3941,6,c	;volatile
 25182                           
 25183                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 25184  01432A  0E00               	movlw	0
 25185  01432C  6E15               	movwf	USBStdSetCfgHandler@i,c
 25186  01432E                     i2l6650:
 25187  01432E  0E02               	movlw	2
 25188  014330  6415               	cpfsgt	USBStdSetCfgHandler@i,c
 25189  014332  D001               	goto	i2l6654
 25190  014334  D016               	goto	i2l6660
 25191  014336                     i2l6654:
 25192                           
 25193                           ;usb_device.c: 1988: {
 25194                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 25195  014336  5015               	movf	USBStdSetCfgHandler@i,w,c
 25196  014338  0D01               	mullw	1
 25197  01433A  0E2D               	movlw	low _ep_data_in
 25198  01433C  24F3               	addwf	prodl,w,c
 25199  01433E  6ED9               	movwf	fsr2l,c
 25200  014340  0E00               	movlw	high _ep_data_in
 25201  014342  20F4               	addwfc	prodh,w,c
 25202  014344  6EDA               	movwf	fsr2h,c
 25203  014346  0E00               	movlw	0
 25204  014348  6EDF               	movwf	indf2,c
 25205                           
 25206                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 25207  01434A  5015               	movf	USBStdSetCfgHandler@i,w,c
 25208  01434C  0D01               	mullw	1
 25209  01434E  0E30               	movlw	low _ep_data_out
 25210  014350  24F3               	addwf	prodl,w,c
 25211  014352  6ED9               	movwf	fsr2l,c
 25212  014354  0E00               	movlw	high _ep_data_out
 25213  014356  20F4               	addwfc	prodh,w,c
 25214  014358  6EDA               	movwf	fsr2h,c
 25215  01435A  0E00               	movlw	0
 25216  01435C  6EDF               	movwf	indf2,c
 25217  01435E  2A15               	incf	USBStdSetCfgHandler@i,f,c
 25218  014360  D7E6               	goto	i2l6650
 25219  014362                     i2l6660:
 25220                           
 25221                           ;usb_device.c: 1991: }
 25222                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 25223  014362  0E54               	movlw	low _USBAlternateInterface
 25224  014364  6E01               	movwf	i2memset@p1,c
 25225  014366  0E00               	movlw	high _USBAlternateInterface
 25226  014368  6E02               	movwf	i2memset@p1+1,c
 25227  01436A  0E00               	movlw	0
 25228  01436C  6E04               	movwf	i2memset@c+1,c
 25229  01436E  0E00               	movlw	0
 25230  014370  6E03               	movwf	i2memset@c,c
 25231  014372  0E00               	movlw	0
 25232  014374  6E06               	movwf	i2memset@n+1,c
 25233  014376  0E02               	movlw	2
 25234  014378  6E05               	movwf	i2memset@n,c
 25235  01437A  EC21  F0B5         	call	i2_memset	;wreg free
 25236                           
 25237                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 25238  01437E  9C65               	bcf	3941,6,c	;volatile
 25239                           
 25240                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25241  014380  0E08               	movlw	8
 25242  014382  0100               	movlb	0	; () banked
 25243  014384  6FF0               	movwf	_pBDTEntryIn& (0+255),b
 25244  014386  0E0D               	movlw	13
 25245  014388  0100               	movlb	0	; () banked
 25246  01438A  6FF1               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25247                           
 25248                           ; BSR set to: 0
 25249                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 25250  01438C  0E00               	movlw	0
 25251  01438E  6E35               	movwf	_pBDTEntryEP0OutCurrent,c
 25252  014390  0E0D               	movlw	13
 25253  014392  6E36               	movwf	_pBDTEntryEP0OutCurrent+1,c
 25254                           
 25255                           ; BSR set to: 0
 25256                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25257  014394  C035  F037         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25258  014398  C036  F038         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25259                           
 25260                           ; BSR set to: 0
 25261                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 25262  01439C  CD32 F056          	movff	3378,_USBActiveConfiguration	;volatile
 25263                           
 25264                           ; BSR set to: 0
 25265                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 25266  0143A0  5056               	movf	_USBActiveConfiguration,w,c	;volatile
 25267  0143A2  A4D8               	btfss	status,2,c
 25268  0143A4  D003               	goto	i2l6676
 25269                           
 25270                           ; BSR set to: 0
 25271                           ;usb_device.c: 2010: {
 25272                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 25273  0143A6  0E10               	movlw	16
 25274  0143A8  6E40               	movwf	_USBDeviceState,c	;volatile
 25275                           
 25276                           ;usb_device.c: 2013: }
 25277  0143AA  0012               	return	
 25278  0143AC                     i2l6676:
 25279                           
 25280                           ; BSR set to: 0
 25281                           ;usb_device.c: 2014: else
 25282                           ;usb_device.c: 2015: {
 25283                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 25284  0143AC  0E00               	movlw	0
 25285  0143AE  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 25286  0143B0  0E01               	movlw	1
 25287  0143B2  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 25288  0143B4  0E56               	movlw	low _USBActiveConfiguration
 25289  0143B6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 25290  0143B8  0E00               	movlw	high _USBActiveConfiguration
 25291  0143BA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 25292  0143BC  0E00               	movlw	0
 25293  0143BE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 25294  0143C0  0E01               	movlw	1
 25295  0143C2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 25296  0143C4  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25297                           
 25298                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 25299  0143C8  0E20               	movlw	32
 25300  0143CA  6E40               	movwf	_USBDeviceState,c	;volatile
 25301  0143CC  0012               	return	
 25302  0143CE                     __end_of_USBStdSetCfgHandler:
 25303                           	opt stack 0
 25304                           pclatu	equ	0xFFB
 25305                           pclath	equ	0xFFA
 25306                           tblptru	equ	0xFF8
 25307                           tblptrh	equ	0xFF7
 25308                           tblptrl	equ	0xFF6
 25309                           tablat	equ	0xFF5
 25310                           prodh	equ	0xFF4
 25311                           prodl	equ	0xFF3
 25312                           intcon	equ	0xFF2
 25313                           intcon2	equ	0xFF1
 25314                           postinc0	equ	0xFEE
 25315                           fsr0h	equ	0xFEA
 25316                           fsr0l	equ	0xFE9
 25317                           wreg	equ	0xFE8
 25318                           indf1	equ	0xFE7
 25319                           postinc1	equ	0xFE6
 25320                           postdec1	equ	0xFE5
 25321                           fsr1h	equ	0xFE2
 25322                           fsr1l	equ	0xFE1
 25323                           indf2	equ	0xFDF
 25324                           postinc2	equ	0xFDE
 25325                           postdec2	equ	0xFDD
 25326                           plusw2	equ	0xFDB
 25327                           fsr2h	equ	0xFDA
 25328                           fsr2l	equ	0xFD9
 25329                           status	equ	0xFD8
 25330                           
 25331 ;; *************** function i2_memset *****************
 25332 ;; Defined at:
 25333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 25334 ;; Parameters:    Size  Location     Type
 25335 ;;  p1              2    0[COMRAM] PTR void 
 25336 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25337 ;;  c               2    2[COMRAM] int 
 25338 ;;  n               2    4[COMRAM] unsigned int 
 25339 ;; Auto vars:     Size  Location     Type
 25340 ;;  memset          2    6[COMRAM] PTR unsigned char 
 25341 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 25342 ;; Return value:  Size  Location     Type
 25343 ;;                  2    0[COMRAM] PTR void 
 25344 ;; Registers used:
 25345 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25346 ;; Tracked objects:
 25347 ;;		On entry : 0/0
 25348 ;;		On exit  : 0/0
 25349 ;;		Unchanged: 0/0
 25350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25351 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25354 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25355 ;;Total ram usage:        8 bytes
 25356 ;; Hardware stack levels used:    1
 25357 ;; This function calls:
 25358 ;;		Nothing
 25359 ;; This function is called by:
 25360 ;;		_USBStdSetCfgHandler
 25361 ;;		i2_USBDeviceInit
 25362 ;; This function uses a non-reentrant model
 25363 ;;
 25364                           
 25365                           	psect	text110
 25366  016A42                     __ptext110:
 25367                           	opt stack 0
 25368  016A42                     i2_memset:
 25369                           	opt stack 17
 25370                           
 25371                           ;incstack = 0
 25372  016A42  C001  F007         	movff	i2memset@p1,i2memset@p
 25373  016A46  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 25374  016A4A  D008               	goto	i2l6318
 25375  016A4C                     i2l6314:
 25376  016A4C  C007  FFD9         	movff	i2memset@p,fsr2l
 25377  016A50  C008  FFDA         	movff	i2memset@p+1,fsr2h
 25378  016A54  C003  FFDF         	movff	i2memset@c,indf2
 25379  016A58  4A07               	infsnz	i2memset@p,f,c
 25380  016A5A  2A08               	incf	i2memset@p+1,f,c
 25381  016A5C                     i2l6318:
 25382  016A5C  0605               	decf	i2memset@n,f,c
 25383  016A5E  A0D8               	btfss	status,0,c
 25384  016A60  0606               	decf	i2memset@n+1,f,c
 25385  016A62  2805               	incf	i2memset@n,w,c
 25386  016A64  E1F3               	bnz	i2l6314
 25387  016A66  2806               	incf	i2memset@n+1,w,c
 25388  016A68  B4D8               	btfsc	status,2,c
 25389  016A6A  0012               	return	
 25390  016A6C  D7EF               	goto	i2l6314
 25391  016A6E                     __end_ofi2_memset:
 25392                           	opt stack 0
 25393                           pclatu	equ	0xFFB
 25394                           pclath	equ	0xFFA
 25395                           tblptru	equ	0xFF8
 25396                           tblptrh	equ	0xFF7
 25397                           tblptrl	equ	0xFF6
 25398                           tablat	equ	0xFF5
 25399                           prodh	equ	0xFF4
 25400                           prodl	equ	0xFF3
 25401                           intcon	equ	0xFF2
 25402                           intcon2	equ	0xFF1
 25403                           postinc0	equ	0xFEE
 25404                           fsr0h	equ	0xFEA
 25405                           fsr0l	equ	0xFE9
 25406                           wreg	equ	0xFE8
 25407                           indf1	equ	0xFE7
 25408                           postinc1	equ	0xFE6
 25409                           postdec1	equ	0xFE5
 25410                           fsr1h	equ	0xFE2
 25411                           fsr1l	equ	0xFE1
 25412                           indf2	equ	0xFDF
 25413                           postinc2	equ	0xFDE
 25414                           postdec2	equ	0xFDD
 25415                           plusw2	equ	0xFDB
 25416                           fsr2h	equ	0xFDA
 25417                           fsr2l	equ	0xFD9
 25418                           status	equ	0xFD8
 25419                           
 25420 ;; *************** function _USBStdGetStatusHandler *****************
 25421 ;; Defined at:
 25422 ;;		line 2129 in file "../My_header/usb_cdc/usb/usb_device.c"
 25423 ;; Parameters:    Size  Location     Type
 25424 ;;		None
 25425 ;; Auto vars:     Size  Location     Type
 25426 ;;  p               2    1[COMRAM] PTR struct __BDT
 25427 ;;		 -> NULL(0), BDT(48), 
 25428 ;; Return value:  Size  Location     Type
 25429 ;;		None               void
 25430 ;; Registers used:
 25431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25432 ;; Tracked objects:
 25433 ;;		On entry : 0/0
 25434 ;;		On exit  : 0/0
 25435 ;;		Unchanged: 0/0
 25436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25440 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25441 ;;Total ram usage:        3 bytes
 25442 ;; Hardware stack levels used:    1
 25443 ;; This function calls:
 25444 ;;		Nothing
 25445 ;; This function is called by:
 25446 ;;		_USBCheckStdRequest
 25447 ;; This function uses a non-reentrant model
 25448 ;;
 25449                           
 25450                           	psect	text111
 25451  01517A                     __ptext111:
 25452                           	opt stack 0
 25453  01517A                     _USBStdGetStatusHandler:
 25454                           	opt stack 15
 25455                           
 25456                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 25457                           
 25458                           ;incstack = 0
 25459  01517A  0E00               	movlw	0
 25460  01517C  010D               	movlb	13	; () banked
 25461  01517E  6F38               	movwf	56,b	;volatile
 25462                           
 25463                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 25464  015180  0E00               	movlw	0
 25465  015182  010D               	movlb	13	; () banked
 25466  015184  6F39               	movwf	57,b	;volatile
 25467                           
 25468                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 25469  015186  D03B               	goto	i2l6732
 25470  015188                     i2l1279:
 25471                           
 25472                           ; BSR set to: 13
 25473                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 25474  015188  0100               	movlb	0	; () banked
 25475  01518A  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25476                           
 25477                           ;usb_device.c: 2145: }
 25478                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 25479                           
 25480                           ; BSR set to: 13
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;usb_device.c: 2143: {
 25484                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 25485                           
 25486                           ;usb_device.c: 2142: if(0 == 1)
 25487  01518C  043C               	decf	_RemoteWakeup,w,c	;volatile
 25488  01518E  A4D8               	btfss	status,2,c
 25489  015190  D042               	goto	i2l1282
 25490                           
 25491                           ;usb_device.c: 2148: {
 25492                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 25493  015192  010D               	movlb	13	; () banked
 25494  015194  8338               	bsf	56,1,b	;volatile
 25495                           
 25496                           ; BSR set to: 13
 25497                           ;usb_device.c: 2150: }
 25498                           ;usb_device.c: 2151: break;
 25499  015196  D03F               	goto	i2l1282
 25500  015198                     i2l1283:
 25501                           
 25502                           ; BSR set to: 13
 25503                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 25504  015198  0100               	movlb	0	; () banked
 25505  01519A  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25506                           
 25507                           ;usb_device.c: 2154: break;
 25508  01519C  D03C               	goto	i2l1282
 25509  01519E                     i2l1284:
 25510                           
 25511                           ; BSR set to: 13
 25512                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 25513  01519E  0100               	movlb	0	; () banked
 25514  0151A0  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 25515                           
 25516                           ;usb_device.c: 2160: {
 25517                           ;usb_device.c: 2161: BDT_ENTRY *p;
 25518                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 25519  0151A2  010D               	movlb	13	; () banked
 25520  0151A4  BF34               	btfsc	52,7,b	;volatile
 25521  0151A6  D00B               	goto	i2l6722
 25522                           
 25523                           ; BSR set to: 13
 25524                           ;usb_device.c: 2164: {
 25525                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 25526  0151A8  010D               	movlb	13	; () banked
 25527  0151AA  5134               	movf	52,w,b	;volatile
 25528  0151AC  0B0F               	andlw	15
 25529  0151AE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 25530  0151B0  5001               	movf	??_USBStdGetStatusHandler,w,c
 25531  0151B2  0D02               	mullw	2
 25532  0151B4  0E00               	movlw	low _pBDTEntryOut
 25533  0151B6  24F3               	addwf	prodl,w,c
 25534  0151B8  6ED9               	movwf	fsr2l,c
 25535  0151BA  0E01               	movlw	high _pBDTEntryOut
 25536  0151BC  D00A               	goto	L9
 25537  0151BE                     i2l6722:
 25538                           
 25539                           ; BSR set to: 13
 25540                           ;usb_device.c: 2167: else
 25541                           ;usb_device.c: 2168: {
 25542                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 25543  0151BE  010D               	movlb	13	; () banked
 25544  0151C0  5134               	movf	52,w,b	;volatile
 25545  0151C2  0B0F               	andlw	15
 25546  0151C4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 25547  0151C6  5001               	movf	??_USBStdGetStatusHandler,w,c
 25548  0151C8  0D02               	mullw	2
 25549  0151CA  0EF0               	movlw	low _pBDTEntryIn
 25550  0151CC  24F3               	addwf	prodl,w,c
 25551  0151CE  6ED9               	movwf	fsr2l,c
 25552  0151D0  0E00               	movlw	high _pBDTEntryIn
 25553  0151D2                     L9:
 25554  0151D2  20F4               	addwfc	prodh,w,c
 25555  0151D4  6EDA               	movwf	fsr2h,c
 25556  0151D6  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 25557  0151DA  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 25558                           
 25559                           ; BSR set to: 13
 25560                           ;usb_device.c: 2170: }
 25561                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 25562                           
 25563                           ; BSR set to: 13
 25564  0151DE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 25565  0151E2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 25566  0151E6  AEDF               	btfss	indf2,7,c
 25567  0151E8  D016               	goto	i2l1282
 25568                           
 25569                           ; BSR set to: 13
 25570  0151EA  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 25571  0151EE  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 25572  0151F2  A4DF               	btfss	indf2,2,c
 25573  0151F4  D010               	goto	i2l1282
 25574                           
 25575                           ; BSR set to: 13
 25576                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 25577  0151F6  0E01               	movlw	1
 25578  0151F8  010D               	movlb	13	; () banked
 25579  0151FA  6F38               	movwf	56,b	;volatile
 25580                           
 25581                           ; BSR set to: 13
 25582                           ;usb_device.c: 2175: }
 25583                           ;usb_device.c: 2176: }
 25584                           
 25585                           ; BSR set to: 13
 25586                           ;usb_device.c: 2174: break;
 25587  0151FC  D00C               	goto	i2l1282
 25588  0151FE                     i2l6732:
 25589                           
 25590                           ; BSR set to: 13
 25591  0151FE  010D               	movlb	13	; () banked
 25592  015200  5130               	movf	48,w,b	;volatile
 25593  015202  0B1F               	andlw	31
 25594                           
 25595                           ; Switch size 1, requested type "space"
 25596                           ; Number of cases is 3, Range of values is 0 to 2
 25597                           ; switch strategies available:
 25598                           ; Name         Instructions Cycles
 25599                           ; simple_byte           10     6 (average)
 25600                           ;	Chosen strategy is simple_byte
 25601  015204  0A00               	xorlw	0	; case 0
 25602  015206  B4D8               	btfsc	status,2,c
 25603  015208  D7BF               	goto	i2l1279
 25604  01520A  0A01               	xorlw	1	; case 1
 25605  01520C  B4D8               	btfsc	status,2,c
 25606  01520E  D7C4               	goto	i2l1283
 25607  015210  0A03               	xorlw	3	; case 2
 25608  015212  B4D8               	btfsc	status,2,c
 25609  015214  D7C4               	goto	i2l1284
 25610  015216                     i2l1282:
 25611                           
 25612                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 25613  015216  0100               	movlb	0	; () banked
 25614  015218  AFED               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 25615  01521A  0012               	return	
 25616                           
 25617                           ; BSR set to: 0
 25618                           ;usb_device.c: 2179: {
 25619                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 25620  01521C  0E38               	movlw	56
 25621  01521E  0100               	movlb	0	; () banked
 25622  015220  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 25623  015222  0E0D               	movlw	13
 25624  015224  0100               	movlb	0	; () banked
 25625  015226  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25626                           
 25627                           ; BSR set to: 0
 25628                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 25629  015228  0100               	movlb	0	; () banked
 25630  01522A  81ED               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 25631                           
 25632                           ; BSR set to: 0
 25633                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 25634  01522C  0E02               	movlw	2
 25635  01522E  0100               	movlb	0	; () banked
 25636  015230  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25637  015232  0012               	return	
 25638  015234                     __end_of_USBStdGetStatusHandler:
 25639                           	opt stack 0
 25640                           pclatu	equ	0xFFB
 25641                           pclath	equ	0xFFA
 25642                           tblptru	equ	0xFF8
 25643                           tblptrh	equ	0xFF7
 25644                           tblptrl	equ	0xFF6
 25645                           tablat	equ	0xFF5
 25646                           prodh	equ	0xFF4
 25647                           prodl	equ	0xFF3
 25648                           intcon	equ	0xFF2
 25649                           intcon2	equ	0xFF1
 25650                           postinc0	equ	0xFEE
 25651                           fsr0h	equ	0xFEA
 25652                           fsr0l	equ	0xFE9
 25653                           wreg	equ	0xFE8
 25654                           indf1	equ	0xFE7
 25655                           postinc1	equ	0xFE6
 25656                           postdec1	equ	0xFE5
 25657                           fsr1h	equ	0xFE2
 25658                           fsr1l	equ	0xFE1
 25659                           indf2	equ	0xFDF
 25660                           postinc2	equ	0xFDE
 25661                           postdec2	equ	0xFDD
 25662                           plusw2	equ	0xFDB
 25663                           fsr2h	equ	0xFDA
 25664                           fsr2l	equ	0xFD9
 25665                           status	equ	0xFD8
 25666                           
 25667 ;; *************** function _USBStdGetDscHandler *****************
 25668 ;; Defined at:
 25669 ;;		line 2043 in file "../My_header/usb_cdc/usb/usb_device.c"
 25670 ;; Parameters:    Size  Location     Type
 25671 ;;		None
 25672 ;; Auto vars:     Size  Location     Type
 25673 ;;		None
 25674 ;; Return value:  Size  Location     Type
 25675 ;;		None               void
 25676 ;; Registers used:
 25677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 25678 ;; Tracked objects:
 25679 ;;		On entry : 0/0
 25680 ;;		On exit  : 0/0
 25681 ;;		Unchanged: 0/0
 25682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25687 ;;Total ram usage:        2 bytes
 25688 ;; Hardware stack levels used:    1
 25689 ;; This function calls:
 25690 ;;		Nothing
 25691 ;; This function is called by:
 25692 ;;		_USBCheckStdRequest
 25693 ;; This function uses a non-reentrant model
 25694 ;;
 25695                           
 25696                           	psect	text112
 25697  01337C                     __ptext112:
 25698                           	opt stack 0
 25699  01337C                     _USBStdGetDscHandler:
 25700                           	opt stack 15
 25701                           
 25702                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;incstack = 0
 25706  01337C  0E80               	movlw	128
 25707  01337E  010D               	movlb	13	; () banked
 25708  013380  1930               	xorwf	48,w,b	;volatile
 25709  013382  A4D8               	btfss	status,2,c
 25710  013384  0012               	return	
 25711                           
 25712                           ; BSR set to: 13
 25713                           ;usb_device.c: 2046: {
 25714                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 25715  013386  0EC0               	movlw	192
 25716  013388  0100               	movlb	0	; () banked
 25717  01338A  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25718                           
 25719                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 25720  01338C  D092               	goto	i2l6710
 25721  01338E                     i2l6684:
 25722                           
 25723                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 25724  01338E  0EA6               	movlw	low _device_dsc
 25725  013390  0100               	movlb	0	; () banked
 25726  013392  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 25727  013394  0EFB               	movlw	high _device_dsc
 25728  013396  0100               	movlb	0	; () banked
 25729  013398  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 25730                           
 25731                           ; BSR set to: 0
 25732                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 25733  01339A  0E00               	movlw	0
 25734  01339C  0100               	movlb	0	; () banked
 25735  01339E  6FEF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25736  0133A0  0E12               	movlw	18
 25737  0133A2  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25738                           
 25739                           ;usb_device.c: 2058: break;
 25740  0133A4  0012               	return	
 25741  0133A6                     i2l6688:
 25742                           
 25743                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 25744  0133A6  010D               	movlb	13	; () banked
 25745  0133A8  5132               	movf	50,w,b	;volatile
 25746  0133AA  A4D8               	btfss	status,2,c
 25747  0133AC  D049               	goto	i2l6696
 25748                           
 25749                           ; BSR set to: 13
 25750                           ;usb_device.c: 2064: {
 25751                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 25752  0133AE  010D               	movlb	13	; () banked
 25753  0133B0  5132               	movf	50,w,b	;volatile
 25754  0133B2  0D02               	mullw	2
 25755  0133B4  0EDD               	movlw	low _USB_CD_Ptr
 25756  0133B6  24F3               	addwf	prodl,w,c
 25757  0133B8  6EF6               	movwf	tblptrl,c
 25758  0133BA  0EFA               	movlw	high _USB_CD_Ptr
 25759  0133BC  20F4               	addwfc	prodh,w,c
 25760  0133BE  6EF7               	movwf	tblptrh,c
 25761  0133C0                     	if	1	;There are 3 active tblptr bytes
 25762  0133C0  6AF8               	clrf	tblptru,c
 25763  0133C2  0E00               	movlw	low (__mediumconst shr (0+16))
 25764  0133C4  22F8               	addwfc	tblptru,f,c
 25765  0133C6                     	endif
 25766  0133C6  0009               	tblrd		*+
 25767  0133C8  CFF5 F0EA          	movff	tablat,_inPipes	;volatile
 25768  0133CC  000A               	tblrd		*-
 25769  0133CE  CFF5 F0EB          	movff	tablat,_inPipes+1	;volatile
 25770                           
 25771                           ; BSR set to: 13
 25772                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 25773  0133D2  0E02               	movlw	2
 25774  0133D4  0100               	movlb	0	; () banked
 25775  0133D6  25EA               	addwf	_inPipes& (0+255),w,b	;volatile
 25776  0133D8  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 25777  0133DA  0E00               	movlw	0
 25778  0133DC  0100               	movlb	0	; () banked
 25779  0133DE  21EB               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 25780  0133E0  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 25781  0133E2  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 25782  0133E6  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 25783  0133EA  0E00               	movlw	low (__mediumconst shr (0+16))
 25784  0133EC  6EF8               	movwf	tblptru,c
 25785  0133EE  0E0E               	movlw	(high __ramtop+-1)
 25786  0133F0  64F7               	cpfsgt	tblptrh,c
 25787  0133F2  D003               	bra	i2u625_47
 25788  0133F4  0008               	tblrd		*
 25789  0133F6  50F5               	movf	tablat,w,c
 25790  0133F8  D005               	bra	i2u625_40
 25791  0133FA                     i2u625_47:
 25792  0133FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 25793  0133FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 25794  013402  50E7               	movf	indf1,w,c
 25795  013404                     i2u625_40:
 25796  013404  0100               	movlb	0	; () banked
 25797  013406  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25798                           
 25799                           ; BSR set to: 0
 25800                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 25801  013408  0E03               	movlw	3
 25802  01340A  0100               	movlb	0	; () banked
 25803  01340C  25EA               	addwf	_inPipes& (0+255),w,b	;volatile
 25804  01340E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 25805  013410  0E00               	movlw	0
 25806  013412  0100               	movlb	0	; () banked
 25807  013414  21EB               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 25808  013416  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 25809  013418  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 25810  01341C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 25811  013420  0E00               	movlw	low (__mediumconst shr (0+16))
 25812  013422  6EF8               	movwf	tblptru,c
 25813  013424  0E0E               	movlw	(high __ramtop+-1)
 25814  013426  64F7               	cpfsgt	tblptrh,c
 25815  013428  D003               	bra	i2u626_47
 25816  01342A  0008               	tblrd		*
 25817  01342C  50F5               	movf	tablat,w,c
 25818  01342E  D005               	bra	i2u626_40
 25819  013430                     i2u626_47:
 25820  013430  CFF6 FFE1          	movff	tblptrl,fsr1l
 25821  013434  CFF7 FFE2          	movff	tblptrh,fsr1h
 25822  013438  50E7               	movf	indf1,w,c
 25823  01343A                     i2u626_40:
 25824  01343A  0100               	movlb	0	; () banked
 25825  01343C  6FEF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 25826                           
 25827                           ;usb_device.c: 2076: }
 25828  01343E  0012               	return	
 25829  013440                     i2l6696:
 25830                           
 25831                           ;usb_device.c: 2077: else
 25832                           ;usb_device.c: 2078: {
 25833                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 25834  013440  0E00               	movlw	0
 25835  013442  0100               	movlb	0	; () banked
 25836  013444  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25837                           
 25838                           ; BSR set to: 0
 25839                           ;usb_device.c: 2080: }
 25840                           ;usb_device.c: 2081: break;
 25841  013446  0012               	return	
 25842  013448                     i2l6698:
 25843                           
 25844                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 25845  013448  0E03               	movlw	3
 25846  01344A  010D               	movlb	13	; () banked
 25847  01344C  6132               	cpfslt	50,b	;volatile
 25848  01344E  D029               	goto	i2l6704
 25849                           
 25850                           ; BSR set to: 13
 25851                           ;usb_device.c: 2087: {
 25852                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 25853  013450  010D               	movlb	13	; () banked
 25854  013452  5132               	movf	50,w,b	;volatile
 25855  013454  0D02               	mullw	2
 25856  013456  0ED7               	movlw	low _USB_SD_Ptr
 25857  013458  24F3               	addwf	prodl,w,c
 25858  01345A  6EF6               	movwf	tblptrl,c
 25859  01345C  0EFA               	movlw	high _USB_SD_Ptr
 25860  01345E  20F4               	addwfc	prodh,w,c
 25861  013460  6EF7               	movwf	tblptrh,c
 25862  013462                     	if	1	;There are 3 active tblptr bytes
 25863  013462  6AF8               	clrf	tblptru,c
 25864  013464  0E00               	movlw	low (__mediumconst shr (0+16))
 25865  013466  22F8               	addwfc	tblptru,f,c
 25866  013468                     	endif
 25867  013468  0009               	tblrd		*+
 25868  01346A  CFF5 F0EA          	movff	tablat,_inPipes	;volatile
 25869  01346E  000A               	tblrd		*-
 25870  013470  CFF5 F0EB          	movff	tablat,_inPipes+1	;volatile
 25871                           
 25872                           ; BSR set to: 13
 25873                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 25874  013474  C0EA  FFF6         	movff	_inPipes,tblptrl	;volatile
 25875  013478  C0EB  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 25876  01347C  0E00               	movlw	low (__mediumconst shr (0+16))
 25877  01347E  6EF8               	movwf	tblptru,c
 25878  013480  0E0E               	movlw	(high __ramtop+-1)
 25879  013482  64F7               	cpfsgt	tblptrh,c
 25880  013484  D003               	bra	i2u628_47
 25881  013486  0008               	tblrd		*
 25882  013488  50F5               	movf	tablat,w,c
 25883  01348A  D005               	bra	i2u628_40
 25884  01348C                     i2u628_47:
 25885  01348C  CFF6 FFE1          	movff	tblptrl,fsr1l
 25886  013490  CFF7 FFE2          	movff	tblptrh,fsr1h
 25887  013494  50E7               	movf	indf1,w,c
 25888  013496                     i2u628_40:
 25889  013496  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 25890  013498  5001               	movf	??_USBStdGetDscHandler,w,c
 25891  01349A  0100               	movlb	0	; () banked
 25892  01349C  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 25893  01349E  6BEF               	clrf	(_inPipes+5)& (0+255),b	;volatile
 25894                           
 25895                           ;usb_device.c: 2092: }
 25896  0134A0  0012               	return	
 25897  0134A2                     i2l6704:
 25898                           
 25899                           ;usb_device.c: 2102: else
 25900                           ;usb_device.c: 2103: {
 25901                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 25902  0134A2  0E00               	movlw	0
 25903  0134A4  0100               	movlb	0	; () banked
 25904  0134A6  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25905                           
 25906                           ; BSR set to: 0
 25907                           ;usb_device.c: 2105: }
 25908                           ;usb_device.c: 2106: break;
 25909  0134A8  0012               	return	
 25910  0134AA                     i2l6706:
 25911                           
 25912                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 25913  0134AA  0E00               	movlw	0
 25914  0134AC  0100               	movlb	0	; () banked
 25915  0134AE  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 25916                           
 25917                           ; BSR set to: 0
 25918                           ;usb_device.c: 2110: }
 25919                           
 25920                           ;usb_device.c: 2109: break;
 25921  0134B0  0012               	return	
 25922  0134B2                     i2l6710:
 25923                           
 25924                           ; BSR set to: 0
 25925  0134B2  010D               	movlb	13	; () banked
 25926  0134B4  5133               	movf	51,w,b	;volatile
 25927                           
 25928                           ; Switch size 1, requested type "space"
 25929                           ; Number of cases is 3, Range of values is 1 to 3
 25930                           ; switch strategies available:
 25931                           ; Name         Instructions Cycles
 25932                           ; simple_byte           10     6 (average)
 25933                           ;	Chosen strategy is simple_byte
 25934  0134B6  0A01               	xorlw	1	; case 1
 25935  0134B8  B4D8               	btfsc	status,2,c
 25936  0134BA  D769               	goto	i2l6684
 25937  0134BC  0A03               	xorlw	3	; case 2
 25938  0134BE  B4D8               	btfsc	status,2,c
 25939  0134C0  D772               	goto	i2l6688
 25940  0134C2  0A01               	xorlw	1	; case 3
 25941  0134C4  B4D8               	btfsc	status,2,c
 25942  0134C6  D7C0               	goto	i2l6698
 25943  0134C8  D7F0               	goto	i2l6706
 25944  0134CA                     __end_of_USBStdGetDscHandler:
 25945                           	opt stack 0
 25946                           pclatu	equ	0xFFB
 25947                           pclath	equ	0xFFA
 25948                           tblptru	equ	0xFF8
 25949                           tblptrh	equ	0xFF7
 25950                           tblptrl	equ	0xFF6
 25951                           tablat	equ	0xFF5
 25952                           prodh	equ	0xFF4
 25953                           prodl	equ	0xFF3
 25954                           intcon	equ	0xFF2
 25955                           intcon2	equ	0xFF1
 25956                           postinc0	equ	0xFEE
 25957                           fsr0h	equ	0xFEA
 25958                           fsr0l	equ	0xFE9
 25959                           wreg	equ	0xFE8
 25960                           indf1	equ	0xFE7
 25961                           postinc1	equ	0xFE6
 25962                           postdec1	equ	0xFE5
 25963                           fsr1h	equ	0xFE2
 25964                           fsr1l	equ	0xFE1
 25965                           indf2	equ	0xFDF
 25966                           postinc2	equ	0xFDE
 25967                           postdec2	equ	0xFDD
 25968                           plusw2	equ	0xFDB
 25969                           fsr2h	equ	0xFDA
 25970                           fsr2l	equ	0xFD9
 25971                           status	equ	0xFD8
 25972                           
 25973 ;; *************** function _USBStdFeatureReqHandler *****************
 25974 ;; Defined at:
 25975 ;;		line 2757 in file "../My_header/usb_cdc/usb/usb_device.c"
 25976 ;; Parameters:    Size  Location     Type
 25977 ;;		None
 25978 ;; Auto vars:     Size  Location     Type
 25979 ;;  p               2   24[COMRAM] PTR struct __BDT
 25980 ;;		 -> NULL(0), BDT(48), 
 25981 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 25982 ;;		 -> UEP0(1), 
 25983 ;;  current_ep_d    1   23[COMRAM] struct .
 25984 ;; Return value:  Size  Location     Type
 25985 ;;		None               void
 25986 ;; Registers used:
 25987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25988 ;; Tracked objects:
 25989 ;;		On entry : 0/0
 25990 ;;		On exit  : 0/0
 25991 ;;		Unchanged: 0/0
 25992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25994 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25996 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25997 ;;Total ram usage:        6 bytes
 25998 ;; Hardware stack levels used:    1
 25999 ;; Hardware stack levels required when called:    4
 26000 ;; This function calls:
 26001 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26002 ;; This function is called by:
 26003 ;;		_USBCheckStdRequest
 26004 ;; This function uses a non-reentrant model
 26005 ;;
 26006                           
 26007                           	psect	text113
 26008  012768                     __ptext113:
 26009                           	opt stack 0
 26010  012768                     _USBStdFeatureReqHandler:
 26011                           	opt stack 11
 26012                           
 26013                           ;usb_device.c: 2759: BDT_ENTRY *p;
 26014                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 26015                           ;usb_device.c: 2764: unsigned char* pUEP;
 26016                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 26017                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 26018                           
 26019                           ;incstack = 0
 26020  012768  010D               	movlb	13	; () banked
 26021  01276A  0532               	decf	50,w,b	;volatile
 26022  01276C  A4D8               	btfss	status,2,c
 26023  01276E  D011               	goto	i2l1358
 26024                           
 26025                           ; BSR set to: 13
 26026  012770  010D               	movlb	13	; () banked
 26027  012772  5130               	movf	48,w,b	;volatile
 26028  012774  0B1F               	andlw	31
 26029  012776  0900               	iorlw	0
 26030  012778  A4D8               	btfss	status,2,c
 26031  01277A  D00B               	goto	i2l1358
 26032                           
 26033                           ; BSR set to: 13
 26034                           ;usb_device.c: 2804: {
 26035                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 26036  01277C  0100               	movlb	0	; () banked
 26037  01277E  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 26041  012780  0E03               	movlw	3
 26042  012782  010D               	movlb	13	; () banked
 26043  012784  1931               	xorwf	49,w,b	;volatile
 26044  012786  A4D8               	btfss	status,2,c
 26045  012788  D002               	goto	i2l6750
 26046                           
 26047                           ; BSR set to: 13
 26048                           ;usb_device.c: 2807: RemoteWakeup = 1;
 26049  01278A  0E01               	movlw	1
 26050  01278C  D001               	goto	L10
 26051  01278E                     i2l6750:
 26052                           
 26053                           ; BSR set to: 13
 26054                           ;usb_device.c: 2808: else
 26055                           ;usb_device.c: 2809: RemoteWakeup = 0;
 26056  01278E  0E00               	movlw	0
 26057  012790                     L10:
 26058  012790  6E3C               	movwf	_RemoteWakeup,c	;volatile
 26059  012792                     i2l1358:
 26060                           
 26061                           ; BSR set to: 13
 26062                           ;usb_device.c: 2810: }
 26063                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 26064                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 26065                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 26066                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 26067  012792  010D               	movlb	13	; () banked
 26068  012794  5132               	movf	50,w,b	;volatile
 26069  012796  A4D8               	btfss	status,2,c
 26070  012798  0012               	return	
 26071                           
 26072                           ; BSR set to: 13
 26073  01279A  010D               	movlb	13	; () banked
 26074  01279C  5130               	movf	48,w,b	;volatile
 26075  01279E  0B1F               	andlw	31
 26076  0127A0  0A02               	xorlw	2
 26077  0127A2  A4D8               	btfss	status,2,c
 26078  0127A4  0012               	return	
 26079                           
 26080                           ; BSR set to: 13
 26081  0127A6  010D               	movlb	13	; () banked
 26082  0127A8  5134               	movf	52,w,b	;volatile
 26083  0127AA  0B0F               	andlw	15
 26084  0127AC  0900               	iorlw	0
 26085  0127AE  B4D8               	btfsc	status,2,c
 26086  0127B0  0012               	return	
 26087                           
 26088                           ; BSR set to: 13
 26089  0127B2  010D               	movlb	13	; () banked
 26090  0127B4  5134               	movf	52,w,b	;volatile
 26091  0127B6  0B0F               	andlw	15
 26092  0127B8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26093  0127BA  0E03               	movlw	3
 26094  0127BC  6015               	cpfslt	??_USBStdFeatureReqHandler,c
 26095  0127BE  0012               	return	
 26096                           
 26097                           ; BSR set to: 13
 26098  0127C0  0E20               	movlw	32
 26099  0127C2  1840               	xorwf	_USBDeviceState,w,c	;volatile
 26100  0127C4  A4D8               	btfss	status,2,c
 26101  0127C6  0012               	return	
 26102                           
 26103                           ; BSR set to: 13
 26104                           ;usb_device.c: 2817: {
 26105                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 26106  0127C8  0100               	movlb	0	; () banked
 26107  0127CA  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26108                           
 26109                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 26110  0127CC  010D               	movlb	13	; () banked
 26111  0127CE  BF34               	btfsc	52,7,b	;volatile
 26112  0127D0  D01B               	goto	i2l6764
 26113                           
 26114                           ; BSR set to: 13
 26115                           ;usb_device.c: 2824: {
 26116                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26117  0127D2  010D               	movlb	13	; () banked
 26118  0127D4  5134               	movf	52,w,b	;volatile
 26119  0127D6  0B0F               	andlw	15
 26120  0127D8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26121  0127DA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26122  0127DC  0D02               	mullw	2
 26123  0127DE  0E00               	movlw	low _pBDTEntryOut
 26124  0127E0  24F3               	addwf	prodl,w,c
 26125  0127E2  6ED9               	movwf	fsr2l,c
 26126  0127E4  0E01               	movlw	high _pBDTEntryOut
 26127  0127E6  20F4               	addwfc	prodh,w,c
 26128  0127E8  6EDA               	movwf	fsr2h,c
 26129  0127EA  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 26130  0127EE  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26131                           
 26132                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 26133  0127F2  010D               	movlb	13	; () banked
 26134  0127F4  5134               	movf	52,w,b	;volatile
 26135  0127F6  0B0F               	andlw	15
 26136  0127F8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26137  0127FA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26138  0127FC  0D01               	mullw	1
 26139  0127FE  0E30               	movlw	low _ep_data_out
 26140  012800  24F3               	addwf	prodl,w,c
 26141  012802  6ED9               	movwf	fsr2l,c
 26142  012804  0E00               	movlw	high _ep_data_out
 26143  012806  D01A               	goto	L11
 26144  012808                     i2l6764:
 26145                           
 26146                           ; BSR set to: 13
 26147                           ;usb_device.c: 2828: else
 26148                           ;usb_device.c: 2829: {
 26149                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 26150  012808  010D               	movlb	13	; () banked
 26151  01280A  5134               	movf	52,w,b	;volatile
 26152  01280C  0B0F               	andlw	15
 26153  01280E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26154  012810  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26155  012812  0D02               	mullw	2
 26156  012814  0EF0               	movlw	low _pBDTEntryIn
 26157  012816  24F3               	addwf	prodl,w,c
 26158  012818  6ED9               	movwf	fsr2l,c
 26159  01281A  0E00               	movlw	high _pBDTEntryIn
 26160  01281C  20F4               	addwfc	prodh,w,c
 26161  01281E  6EDA               	movwf	fsr2h,c
 26162  012820  CFDE F019          	movff	postinc2,USBStdFeatureReqHandler@p
 26163  012824  CFDD F01A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 26164                           
 26165                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 26166  012828  010D               	movlb	13	; () banked
 26167  01282A  5134               	movf	52,w,b	;volatile
 26168  01282C  0B0F               	andlw	15
 26169  01282E  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26170  012830  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26171  012832  0D01               	mullw	1
 26172  012834  0E2D               	movlw	low _ep_data_in
 26173  012836  24F3               	addwf	prodl,w,c
 26174  012838  6ED9               	movwf	fsr2l,c
 26175  01283A  0E00               	movlw	high _ep_data_in
 26176  01283C                     L11:
 26177  01283C  20F4               	addwfc	prodh,w,c
 26178  01283E  6EDA               	movwf	fsr2h,c
 26179  012840  50DF               	movf	indf2,w,c
 26180  012842  6E18               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 26181                           
 26182                           ; BSR set to: 13
 26183                           ;usb_device.c: 2832: }
 26184                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 26185                           
 26186                           ; BSR set to: 13
 26187  012844  B018               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 26188  012846  D002               	goto	i2l6770
 26189                           
 26190                           ; BSR set to: 13
 26191                           ;usb_device.c: 2839: {
 26192                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 26193  012848  9419               	bcf	USBStdFeatureReqHandler@p,2,c
 26194                           
 26195                           ;usb_device.c: 2841: }
 26196  01284A  D001               	goto	i2l6772
 26197  01284C                     i2l6770:
 26198                           
 26199                           ; BSR set to: 13
 26200                           ;usb_device.c: 2842: else
 26201                           ;usb_device.c: 2843: {
 26202                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 26203  01284C  8419               	bsf	USBStdFeatureReqHandler@p,2,c
 26204  01284E                     i2l6772:
 26205                           
 26206                           ; BSR set to: 13
 26207                           ;usb_device.c: 2845: }
 26208                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 26209  01284E  010D               	movlb	13	; () banked
 26210  012850  BF34               	btfsc	52,7,b	;volatile
 26211  012852  D00B               	goto	i2l6776
 26212                           
 26213                           ; BSR set to: 13
 26214                           ;usb_device.c: 2851: {
 26215                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 26216  012854  010D               	movlb	13	; () banked
 26217  012856  5134               	movf	52,w,b	;volatile
 26218  012858  0B0F               	andlw	15
 26219  01285A  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26220  01285C  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26221  01285E  0D02               	mullw	2
 26222  012860  0E00               	movlw	low _pBDTEntryOut
 26223  012862  24F3               	addwf	prodl,w,c
 26224  012864  6ED9               	movwf	fsr2l,c
 26225  012866  0E01               	movlw	high _pBDTEntryOut
 26226  012868  D00A               	goto	L12
 26227  01286A                     i2l6776:
 26228                           
 26229                           ; BSR set to: 13
 26230                           ;usb_device.c: 2854: else
 26231                           ;usb_device.c: 2855: {
 26232                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 26233  01286A  010D               	movlb	13	; () banked
 26234  01286C  5134               	movf	52,w,b	;volatile
 26235  01286E  0B0F               	andlw	15
 26236  012870  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26237  012872  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26238  012874  0D02               	mullw	2
 26239  012876  0EF0               	movlw	low _pBDTEntryIn
 26240  012878  24F3               	addwf	prodl,w,c
 26241  01287A  6ED9               	movwf	fsr2l,c
 26242  01287C  0E00               	movlw	high _pBDTEntryIn
 26243  01287E                     L12:
 26244  01287E  20F4               	addwfc	prodh,w,c
 26245  012880  6EDA               	movwf	fsr2h,c
 26246  012882  C019  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 26247  012886  C01A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 26248                           
 26249                           ; BSR set to: 13
 26250                           ;usb_device.c: 2857: }
 26251                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 26252                           
 26253                           ; BSR set to: 13
 26254  01288A  0E03               	movlw	3
 26255  01288C  010D               	movlb	13	; () banked
 26256  01288E  1931               	xorwf	49,w,b	;volatile
 26257  012890  A4D8               	btfss	status,2,c
 26258  012892  D02E               	goto	i2l6792
 26259                           
 26260                           ; BSR set to: 13
 26261                           ;usb_device.c: 2861: {
 26262                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 26263  012894  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26264  012898  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26265  01289C  AEDF               	btfss	indf2,7,c
 26266  01289E  D01B               	goto	i2l6788
 26267                           
 26268                           ; BSR set to: 13
 26269                           ;usb_device.c: 2863: {
 26270                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 26271  0128A0  010D               	movlb	13	; () banked
 26272  0128A2  BF34               	btfsc	52,7,b	;volatile
 26273  0128A4  D00B               	goto	i2l6786
 26274                           
 26275                           ; BSR set to: 13
 26276                           ;usb_device.c: 2867: {
 26277                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 26278  0128A6  010D               	movlb	13	; () banked
 26279  0128A8  5134               	movf	52,w,b	;volatile
 26280  0128AA  0B0F               	andlw	15
 26281  0128AC  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26282  0128AE  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26283  0128B0  0D01               	mullw	1
 26284  0128B2  0E30               	movlw	low _ep_data_out
 26285  0128B4  24F3               	addwf	prodl,w,c
 26286  0128B6  6ED9               	movwf	fsr2l,c
 26287  0128B8  0E00               	movlw	high _ep_data_out
 26288  0128BA  D00A               	goto	L13
 26289  0128BC                     i2l6786:
 26290                           
 26291                           ; BSR set to: 13
 26292                           ;usb_device.c: 2870: else
 26293                           ;usb_device.c: 2871: {
 26294                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 26295  0128BC  010D               	movlb	13	; () banked
 26296  0128BE  5134               	movf	52,w,b	;volatile
 26297  0128C0  0B0F               	andlw	15
 26298  0128C2  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26299  0128C4  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26300  0128C6  0D01               	mullw	1
 26301  0128C8  0E2D               	movlw	low _ep_data_in
 26302  0128CA  24F3               	addwf	prodl,w,c
 26303  0128CC  6ED9               	movwf	fsr2l,c
 26304  0128CE  0E00               	movlw	high _ep_data_in
 26305  0128D0                     L13:
 26306  0128D0  20F4               	addwfc	prodh,w,c
 26307  0128D2  6EDA               	movwf	fsr2h,c
 26308  0128D4  82DF               	bsf	indf2,1,c
 26309  0128D6                     i2l6788:
 26310                           
 26311                           ; BSR set to: 13
 26312                           ;usb_device.c: 2873: }
 26313                           ;usb_device.c: 2874: }
 26314                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 26315  0128D6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26316  0128DA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26317  0128DE  0E00               	movlw	0
 26318  0128E0  84DB               	bsf	plusw2,2,c
 26319                           
 26320                           ; BSR set to: 13
 26321                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 26322  0128E2  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26323  0128E6  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26324  0128EA  0E00               	movlw	0
 26325  0128EC  8EDB               	bsf	plusw2,7,c
 26326                           
 26327                           ;usb_device.c: 2879: }
 26328  0128EE  0012               	return	
 26329  0128F0                     i2l6792:
 26330                           
 26331                           ; BSR set to: 13
 26332                           ;usb_device.c: 2880: else
 26333                           ;usb_device.c: 2881: {
 26334                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 26335  0128F0  0E04               	movlw	4
 26336  0128F2  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 26337                           
 26338                           ; BSR set to: 13
 26339                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 26340  0128F4  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26341  0128F8  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26342  0128FC  AEDF               	btfss	indf2,7,c
 26343  0128FE  D01B               	goto	i2l6802
 26344                           
 26345                           ; BSR set to: 13
 26346                           ;usb_device.c: 2888: {
 26347                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 26348  012900  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26349  012904  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26350  012908  0E7F               	movlw	127
 26351  01290A  16DF               	andwf	indf2,f,c
 26352                           
 26353                           ; BSR set to: 13
 26354                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 26355  01290C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26356  012910  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26357  012914  0E00               	movlw	0
 26358  012916  8CDB               	bsf	plusw2,6,c
 26359                           
 26360                           ; BSR set to: 13
 26361                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 26362  012918  0E00               	movlw	0
 26363  01291A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26364  01291C  0E05               	movlw	5
 26365  01291E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26366  012920  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 26367  012924  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 26368  012928  0E00               	movlw	0
 26369  01292A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26370  01292C  0E02               	movlw	2
 26371  01292E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26372  012930  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26373                           
 26374                           ;usb_device.c: 2894: }
 26375  012934  D006               	goto	i2l6804
 26376  012936                     i2l6802:
 26377                           
 26378                           ;usb_device.c: 2895: else
 26379                           ;usb_device.c: 2896: {
 26380                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 26381  012936  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26382  01293A  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26383  01293E  0E00               	movlw	0
 26384  012940  8CDB               	bsf	plusw2,6,c
 26385  012942                     i2l6804:
 26386                           
 26387                           ;usb_device.c: 2899: }
 26388                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 26389  012942  0E04               	movlw	4
 26390  012944  1A19               	xorwf	USBStdFeatureReqHandler@p,f,c
 26391                           
 26392                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 26393  012946  B218               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 26394  012948  D006               	goto	i2l1377
 26395  01294A  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26396  01294E  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26397  012952  AEDF               	btfss	indf2,7,c
 26398  012954  D030               	goto	i2l6818
 26399  012956                     i2l1377:
 26400                           
 26401                           ;usb_device.c: 2910: {
 26402                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 26403  012956  010D               	movlb	13	; () banked
 26404  012958  BF34               	btfsc	52,7,b	;volatile
 26405  01295A  D00B               	goto	i2l6812
 26406                           
 26407                           ; BSR set to: 13
 26408                           ;usb_device.c: 2912: {
 26409                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 26410  01295C  010D               	movlb	13	; () banked
 26411  01295E  5134               	movf	52,w,b	;volatile
 26412  012960  0B0F               	andlw	15
 26413  012962  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26414  012964  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26415  012966  0D01               	mullw	1
 26416  012968  0E30               	movlw	low _ep_data_out
 26417  01296A  24F3               	addwf	prodl,w,c
 26418  01296C  6ED9               	movwf	fsr2l,c
 26419  01296E  0E00               	movlw	high _ep_data_out
 26420  012970  D00A               	goto	L14
 26421  012972                     i2l6812:
 26422                           
 26423                           ; BSR set to: 13
 26424                           ;usb_device.c: 2915: else
 26425                           ;usb_device.c: 2916: {
 26426                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 26427  012972  010D               	movlb	13	; () banked
 26428  012974  5134               	movf	52,w,b	;volatile
 26429  012976  0B0F               	andlw	15
 26430  012978  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26431  01297A  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26432  01297C  0D01               	mullw	1
 26433  01297E  0E2D               	movlw	low _ep_data_in
 26434  012980  24F3               	addwf	prodl,w,c
 26435  012982  6ED9               	movwf	fsr2l,c
 26436  012984  0E00               	movlw	high _ep_data_in
 26437  012986                     L14:
 26438  012986  20F4               	addwfc	prodh,w,c
 26439  012988  6EDA               	movwf	fsr2h,c
 26440  01298A  92DF               	bcf	indf2,1,c
 26441                           
 26442                           ; BSR set to: 13
 26443                           ;usb_device.c: 2918: }
 26444                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 26445                           
 26446                           ; BSR set to: 13
 26447  01298C  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26448  012990  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26449  012994  0E3B               	movlw	59
 26450  012996  16DF               	andwf	indf2,f,c
 26451                           
 26452                           ; BSR set to: 13
 26453                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 26454  012998  0E00               	movlw	0
 26455  01299A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26456  01299C  0E05               	movlw	5
 26457  01299E  6E0D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26458  0129A0  C019  F00F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 26459  0129A4  C01A  F010         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 26460  0129A8  0E00               	movlw	0
 26461  0129AA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26462  0129AC  0E02               	movlw	2
 26463  0129AE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26464  0129B0  EC9C  F0B4         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26465                           
 26466                           ;usb_device.c: 2924: }
 26467  0129B4  D006               	goto	i2l6820
 26468  0129B6                     i2l6818:
 26469                           
 26470                           ;usb_device.c: 2925: else
 26471                           ;usb_device.c: 2926: {
 26472                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 26473  0129B6  C019  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 26474  0129BA  C01A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 26475  0129BE  0E3B               	movlw	59
 26476  0129C0  16DF               	andwf	indf2,f,c
 26477  0129C2                     i2l6820:
 26478                           
 26479                           ;usb_device.c: 2929: }
 26480                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 26481  0129C2  010D               	movlb	13	; () banked
 26482  0129C4  5134               	movf	52,w,b	;volatile
 26483  0129C6  0B0F               	andlw	15
 26484  0129C8  6E15               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 26485  0129CA  5015               	movf	??_USBStdFeatureReqHandler,w,c
 26486  0129CC  0D01               	mullw	1
 26487  0129CE  0E26               	movlw	38
 26488  0129D0  24F3               	addwf	prodl,w,c
 26489  0129D2  6E16               	movwf	USBStdFeatureReqHandler@pUEP,c
 26490  0129D4  0E0F               	movlw	15
 26491  0129D6  20F4               	addwfc	prodh,w,c
 26492  0129D8  6E17               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 26493                           
 26494                           ; BSR set to: 13
 26495                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 26496  0129DA  C016  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 26497  0129DE  C017  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 26498  0129E2  0EFE               	movlw	254
 26499  0129E4  16DF               	andwf	indf2,f,c
 26500                           
 26501                           ; BSR set to: 13
 26502  0129E6  0012               	return	
 26503  0129E8                     __end_of_USBStdFeatureReqHandler:
 26504                           	opt stack 0
 26505                           pclatu	equ	0xFFB
 26506                           pclath	equ	0xFFA
 26507                           tblptru	equ	0xFF8
 26508                           tblptrh	equ	0xFF7
 26509                           tblptrl	equ	0xFF6
 26510                           tablat	equ	0xFF5
 26511                           prodh	equ	0xFF4
 26512                           prodl	equ	0xFF3
 26513                           intcon	equ	0xFF2
 26514                           intcon2	equ	0xFF1
 26515                           postinc0	equ	0xFEE
 26516                           fsr0h	equ	0xFEA
 26517                           fsr0l	equ	0xFE9
 26518                           wreg	equ	0xFE8
 26519                           indf1	equ	0xFE7
 26520                           postinc1	equ	0xFE6
 26521                           postdec1	equ	0xFE5
 26522                           fsr1h	equ	0xFE2
 26523                           fsr1l	equ	0xFE1
 26524                           indf2	equ	0xFDF
 26525                           postinc2	equ	0xFDE
 26526                           postdec2	equ	0xFDD
 26527                           plusw2	equ	0xFDB
 26528                           fsr2h	equ	0xFDA
 26529                           fsr2l	equ	0xFD9
 26530                           status	equ	0xFD8
 26531                           
 26532 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 26533 ;; Defined at:
 26534 ;;		line 39 in file "../My_header/usb_cdc/My_usb_cdc.c"
 26535 ;; Parameters:    Size  Location     Type
 26536 ;;  event           2   12[COMRAM] enum E8545
 26537 ;;  pdata           2   14[COMRAM] PTR void 
 26538 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 26539 ;;  size            2   16[COMRAM] unsigned int 
 26540 ;; Auto vars:     Size  Location     Type
 26541 ;;		None
 26542 ;; Return value:  Size  Location     Type
 26543 ;;                  1    wreg      unsigned char 
 26544 ;; Registers used:
 26545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26546 ;; Tracked objects:
 26547 ;;		On entry : 0/0
 26548 ;;		On exit  : 0/0
 26549 ;;		Unchanged: 0/0
 26550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26551 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26554 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26555 ;;Total ram usage:        8 bytes
 26556 ;; Hardware stack levels used:    1
 26557 ;; Hardware stack levels required when called:    3
 26558 ;; This function calls:
 26559 ;;		_CDCInitEP
 26560 ;;		_USBCheckCDCRequest
 26561 ;; This function is called by:
 26562 ;;		_USBDeviceTasks
 26563 ;;		_USBStdSetCfgHandler
 26564 ;;		_USBSuspend
 26565 ;;		_USBWakeFromSuspend
 26566 ;;		_USBCtrlTrfSetupHandler
 26567 ;;		_USBCheckStdRequest
 26568 ;;		_USBStdFeatureReqHandler
 26569 ;; This function uses a non-reentrant model
 26570 ;;
 26571                           
 26572                           	psect	text114
 26573  016938                     __ptext114:
 26574                           	opt stack 0
 26575  016938                     _USER_USB_CALLBACK_EVENT_HANDLER:
 26576                           	opt stack 15
 26577                           
 26578                           ;My_usb_cdc.c: 40: switch ((int) event) {
 26579                           
 26580                           ; BSR set to: 13
 26581                           ;incstack = 0
 26582  016938  D006               	goto	i2l6206
 26583  01693A                     i2l6200:
 26584                           
 26585                           ;My_usb_cdc.c: 42: CDCInitEP();
 26586  01693A  EC4F  F0B0         	call	_CDCInitEP	;wreg free
 26587                           
 26588                           ;My_usb_cdc.c: 43: break;
 26589  01693E  0012               	return	
 26590  016940                     i2l6202:
 26591                           
 26592                           ;My_usb_cdc.c: 45: USBCheckCDCRequest();
 26593  016940  ECA2  F0A3         	call	_USBCheckCDCRequest	;wreg free
 26594                           
 26595                           ;My_usb_cdc.c: 47: }
 26596                           
 26597                           ;My_usb_cdc.c: 46: break;
 26598  016944  0012               	return	
 26599  016946                     i2l6206:
 26600  016946  C00D  F013         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 26601  01694A  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 26602                           
 26603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26604                           ; Switch size 1, requested type "space"
 26605                           ; Number of cases is 1, Range of values is 0 to 0
 26606                           ; switch strategies available:
 26607                           ; Name         Instructions Cycles
 26608                           ; simple_byte            4     3 (average)
 26609                           ;	Chosen strategy is simple_byte
 26610  01694E  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 26611  016950  0A00               	xorlw	0	; case 0
 26612  016952  A4D8               	btfss	status,2,c
 26613  016954  0012               	return	
 26614                           
 26615                           ; Switch size 1, requested type "space"
 26616                           ; Number of cases is 2, Range of values is 1 to 3
 26617                           ; switch strategies available:
 26618                           ; Name         Instructions Cycles
 26619                           ; simple_byte            7     4 (average)
 26620                           ;	Chosen strategy is simple_byte
 26621  016956  5013               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 26622  016958  0A01               	xorlw	1	; case 1
 26623  01695A  B4D8               	btfsc	status,2,c
 26624  01695C  D7EE               	goto	i2l6200
 26625  01695E  0A02               	xorlw	2	; case 3
 26626  016960  A4D8               	btfss	status,2,c
 26627  016962  0012               	return	
 26628  016964  D7ED               	goto	i2l6202
 26629  016966                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 26630                           	opt stack 0
 26631                           pclatu	equ	0xFFB
 26632                           pclath	equ	0xFFA
 26633                           tblptru	equ	0xFF8
 26634                           tblptrh	equ	0xFF7
 26635                           tblptrl	equ	0xFF6
 26636                           tablat	equ	0xFF5
 26637                           prodh	equ	0xFF4
 26638                           prodl	equ	0xFF3
 26639                           intcon	equ	0xFF2
 26640                           intcon2	equ	0xFF1
 26641                           postinc0	equ	0xFEE
 26642                           fsr0h	equ	0xFEA
 26643                           fsr0l	equ	0xFE9
 26644                           wreg	equ	0xFE8
 26645                           indf1	equ	0xFE7
 26646                           postinc1	equ	0xFE6
 26647                           postdec1	equ	0xFE5
 26648                           fsr1h	equ	0xFE2
 26649                           fsr1l	equ	0xFE1
 26650                           indf2	equ	0xFDF
 26651                           postinc2	equ	0xFDE
 26652                           postdec2	equ	0xFDD
 26653                           plusw2	equ	0xFDB
 26654                           fsr2h	equ	0xFDA
 26655                           fsr2l	equ	0xFD9
 26656                           status	equ	0xFD8
 26657                           
 26658 ;; *************** function _USBCheckCDCRequest *****************
 26659 ;; Defined at:
 26660 ;;		line 204 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 26661 ;; Parameters:    Size  Location     Type
 26662 ;;		None
 26663 ;; Auto vars:     Size  Location     Type
 26664 ;;		None
 26665 ;; Return value:  Size  Location     Type
 26666 ;;		None               void
 26667 ;; Registers used:
 26668 ;;		wreg, status,2, status,0
 26669 ;; Tracked objects:
 26670 ;;		On entry : 0/0
 26671 ;;		On exit  : 0/0
 26672 ;;		Unchanged: 0/0
 26673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26678 ;;Total ram usage:        0 bytes
 26679 ;; Hardware stack levels used:    1
 26680 ;; This function calls:
 26681 ;;		Nothing
 26682 ;; This function is called by:
 26683 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26684 ;; This function uses a non-reentrant model
 26685 ;;
 26686                           
 26687                           	psect	text115
 26688  014744                     __ptext115:
 26689                           	opt stack 0
 26690  014744                     _USBCheckCDCRequest:
 26691                           	opt stack 17
 26692                           
 26693                           ;usb_device_cdc.c: 209: if(SetupPkt.Recipient != (0x01)) return;
 26694                           
 26695                           ;incstack = 0
 26696  014744  010D               	movlb	13	; () banked
 26697  014746  5130               	movf	48,w,b	;volatile
 26698  014748  0B1F               	andlw	31
 26699  01474A  06E8               	decf	wreg,f,c
 26700  01474C  A4D8               	btfss	status,2,c
 26701  01474E  0012               	return	
 26702                           
 26703                           ; BSR set to: 13
 26704                           ;usb_device_cdc.c: 214: if(SetupPkt.RequestType != (0x20>>5)) return;
 26705                           
 26706                           ; BSR set to: 13
 26707                           
 26708                           ; BSR set to: 13
 26709  014750  010D               	movlb	13	; () banked
 26710  014752  3930               	swapf	48,w,b	;volatile
 26711  014754  32E8               	rrcf	wreg,f,c
 26712  014756  0B03               	andlw	3
 26713  014758  06E8               	decf	wreg,f,c
 26714  01475A  A4D8               	btfss	status,2,c
 26715  01475C  0012               	return	
 26716                           
 26717                           ; BSR set to: 13
 26718                           ;usb_device_cdc.c: 220: if((SetupPkt.bIntfID != 0x0)&&
 26719                           ;usb_device_cdc.c: 221: (SetupPkt.bIntfID != 0x01)) return;
 26720                           
 26721                           ; BSR set to: 13
 26722                           
 26723                           ; BSR set to: 13
 26724  01475E  010D               	movlb	13	; () banked
 26725  014760  5134               	movf	52,w,b	;volatile
 26726  014762  B4D8               	btfsc	status,2,c
 26727  014764  D048               	goto	i2l6058
 26728                           
 26729                           ; BSR set to: 13
 26730  014766  010D               	movlb	13	; () banked
 26731  014768  0534               	decf	52,w,b	;volatile
 26732  01476A  A4D8               	btfss	status,2,c
 26733  01476C  0012               	return	
 26734  01476E  D043               	goto	i2l6058
 26735  014770                     i2l6034:
 26736                           
 26737                           ; BSR set to: 13
 26738                           ;usb_device_cdc.c: 228: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 26739  014770  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 26740  014772  0100               	movlb	0	; () banked
 26741  014774  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 26742  014776  0E02               	movlw	high _dummy_encapsulated_cmd_response
 26743  014778  0100               	movlb	0	; () banked
 26744  01477A  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26745                           
 26746                           ; BSR set to: 0
 26747                           ;usb_device_cdc.c: 229: inPipes[0].wCount.Val = 0x08;
 26748  01477C  0E00               	movlw	0
 26749  01477E  0100               	movlb	0	; () banked
 26750  014780  6FEF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26751  014782  0E08               	movlw	8
 26752  014784  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26753                           
 26754                           ; BSR set to: 0
 26755                           ;usb_device_cdc.c: 230: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26756  014786  0100               	movlb	0	; () banked
 26757  014788  81ED               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 26758                           
 26759                           ; BSR set to: 0
 26760                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 26761  01478A  0100               	movlb	0	; () banked
 26762  01478C  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26763                           
 26764                           ;usb_device_cdc.c: 232: break;
 26765  01478E  0012               	return	
 26766  014790                     i2l6042:
 26767                           
 26768                           ;usb_device_cdc.c: 235: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 26769  014790  0EDE               	movlw	low _dummy_encapsulated_cmd_response
 26770  014792  0100               	movlb	0	; () banked
 26771  014794  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 26772  014796  0E02               	movlw	high _dummy_encapsulated_cmd_response
 26773  014798  0100               	movlb	0	; () banked
 26774  01479A  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26775                           
 26776                           ; BSR set to: 0
 26777                           ;usb_device_cdc.c: 236: inPipes[0].info.bits.busy = 1;
 26778  01479C  0100               	movlb	0	; () banked
 26779  01479E  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26780                           
 26781                           ;usb_device_cdc.c: 237: break;
 26782  0147A0  0012               	return	
 26783  0147A2                     i2l1434:
 26784                           
 26785                           ; BSR set to: 13
 26786                           ;usb_device_cdc.c: 242: outPipes[0].wCount.Val = SetupPkt.wLength;
 26787  0147A2  CD36 F0E5          	movff	3382,_outPipes+4	;volatile
 26788  0147A6  CD37 F0E6          	movff	3383,_outPipes+5	;volatile
 26789                           
 26790                           ; BSR set to: 13
 26791                           ;usb_device_cdc.c: 243: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 26792  0147AA  0E87               	movlw	low _line_coding
 26793  0147AC  0100               	movlb	0	; () banked
 26794  0147AE  6FE1               	movwf	_outPipes& (0+255),b	;volatile
 26795  0147B0  0E01               	movlw	high _line_coding
 26796  0147B2  0100               	movlb	0	; () banked
 26797  0147B4  6FE2               	movwf	(_outPipes+1)& (0+255),b	;volatile
 26798                           
 26799                           ;usb_device_cdc.c: 244: outPipes[0].pFunc = (0);
 26800  0147B6  0E00               	movlw	0
 26801  0147B8  0100               	movlb	0	; () banked
 26802  0147BA  6FE7               	movwf	(_outPipes+6)& (0+255),b	;volatile
 26803  0147BC  0E00               	movlw	0
 26804  0147BE  0100               	movlb	0	; () banked
 26805  0147C0  6FE8               	movwf	(_outPipes+7)& (0+255),b	;volatile
 26806  0147C2  0E00               	movlw	0
 26807  0147C4  0100               	movlb	0	; () banked
 26808  0147C6  6FE9               	movwf	(_outPipes+8)& (0+255),b	;volatile
 26809                           
 26810                           ; BSR set to: 0
 26811                           ;usb_device_cdc.c: 245: outPipes[0].info.bits.busy = 1;
 26812  0147C8  0100               	movlb	0	; () banked
 26813  0147CA  8FE4               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 26814                           
 26815                           ;usb_device_cdc.c: 246: break;
 26816  0147CC  0012               	return	
 26817  0147CE                     i2l6050:
 26818                           
 26819                           ;usb_device_cdc.c: 249: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 26820  0147CE  0E87               	movlw	low _line_coding
 26821  0147D0  0100               	movlb	0	; () banked
 26822  0147D2  6FEA               	movwf	_inPipes& (0+255),b	;volatile
 26823  0147D4  0E01               	movlw	high _line_coding
 26824  0147D6  0100               	movlb	0	; () banked
 26825  0147D8  6FEB               	movwf	(_inPipes+1)& (0+255),b	;volatile
 26826                           
 26827                           ; BSR set to: 0
 26828  0147DA  0E00               	movlw	0
 26829  0147DC  0100               	movlb	0	; () banked
 26830  0147DE  6FEF               	movwf	(_inPipes+5)& (0+255),b	;volatile
 26831  0147E0  0E07               	movlw	7
 26832  0147E2  6FEE               	movwf	(_inPipes+4)& (0+255),b	;volatile
 26833                           
 26834                           ; BSR set to: 0
 26835  0147E4  0EC1               	movlw	193
 26836  0147E6  0100               	movlb	0	; () banked
 26837  0147E8  6FED               	movwf	(_inPipes+3)& (0+255),b	;volatile
 26838                           
 26839                           ;usb_device_cdc.c: 253: break;
 26840  0147EA  0012               	return	
 26841  0147EC                     i2l1436:
 26842                           
 26843                           ; BSR set to: 13
 26844                           ;usb_device_cdc.c: 256: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 26845  0147EC  CD32 F128          	movff	3378,_control_signal_bitmap	;volatile
 26846                           
 26847                           ;usb_device_cdc.c: 288: inPipes[0].info.bits.busy = 1;
 26848  0147F0  0100               	movlb	0	; () banked
 26849  0147F2  8FED               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 26850                           
 26851                           ; BSR set to: 0
 26852                           ;usb_device_cdc.c: 315: }
 26853                           
 26854                           ; BSR set to: 0
 26855                           ;usb_device_cdc.c: 314: break;
 26856                           
 26857                           ;usb_device_cdc.c: 313: default:
 26858                           
 26859                           ;usb_device_cdc.c: 289: break;
 26860  0147F4  0012               	return	
 26861  0147F6                     i2l6058:
 26862  0147F6  010D               	movlb	13	; () banked
 26863  0147F8  5131               	movf	49,w,b	;volatile
 26864                           
 26865                           ; Switch size 1, requested type "space"
 26866                           ; Number of cases is 5, Range of values is 0 to 34
 26867                           ; switch strategies available:
 26868                           ; Name         Instructions Cycles
 26869                           ; simple_byte           16     9 (average)
 26870                           ;	Chosen strategy is simple_byte
 26871  0147FA  0A00               	xorlw	0	; case 0
 26872  0147FC  B4D8               	btfsc	status,2,c
 26873  0147FE  D7B8               	goto	i2l6034
 26874  014800  0A01               	xorlw	1	; case 1
 26875  014802  B4D8               	btfsc	status,2,c
 26876  014804  D7C5               	goto	i2l6042
 26877  014806  0A21               	xorlw	33	; case 32
 26878  014808  B4D8               	btfsc	status,2,c
 26879  01480A  D7CB               	goto	i2l1434
 26880  01480C  0A01               	xorlw	1	; case 33
 26881  01480E  B4D8               	btfsc	status,2,c
 26882  014810  D7DE               	goto	i2l6050
 26883  014812  0A03               	xorlw	3	; case 34
 26884  014814  A4D8               	btfss	status,2,c
 26885  014816  0012               	return	
 26886  014818  D7E9               	goto	i2l1436
 26887  01481A                     __end_of_USBCheckCDCRequest:
 26888                           	opt stack 0
 26889                           pclatu	equ	0xFFB
 26890                           pclath	equ	0xFFA
 26891                           tblptru	equ	0xFF8
 26892                           tblptrh	equ	0xFF7
 26893                           tblptrl	equ	0xFF6
 26894                           tablat	equ	0xFF5
 26895                           prodh	equ	0xFF4
 26896                           prodl	equ	0xFF3
 26897                           intcon	equ	0xFF2
 26898                           intcon2	equ	0xFF1
 26899                           postinc0	equ	0xFEE
 26900                           fsr0h	equ	0xFEA
 26901                           fsr0l	equ	0xFE9
 26902                           wreg	equ	0xFE8
 26903                           indf1	equ	0xFE7
 26904                           postinc1	equ	0xFE6
 26905                           postdec1	equ	0xFE5
 26906                           fsr1h	equ	0xFE2
 26907                           fsr1l	equ	0xFE1
 26908                           indf2	equ	0xFDF
 26909                           postinc2	equ	0xFDE
 26910                           postdec2	equ	0xFDD
 26911                           plusw2	equ	0xFDB
 26912                           fsr2h	equ	0xFDA
 26913                           fsr2l	equ	0xFD9
 26914                           status	equ	0xFD8
 26915                           
 26916 ;; *************** function _CDCInitEP *****************
 26917 ;; Defined at:
 26918 ;;		line 351 in file "../My_header/usb_cdc/usb/usb_device_cdc.c"
 26919 ;; Parameters:    Size  Location     Type
 26920 ;;		None
 26921 ;; Auto vars:     Size  Location     Type
 26922 ;;		None
 26923 ;; Return value:  Size  Location     Type
 26924 ;;		None               void
 26925 ;; Registers used:
 26926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26927 ;; Tracked objects:
 26928 ;;		On entry : 0/0
 26929 ;;		On exit  : 0/0
 26930 ;;		Unchanged: 0/0
 26931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26936 ;;Total ram usage:        0 bytes
 26937 ;; Hardware stack levels used:    1
 26938 ;; Hardware stack levels required when called:    2
 26939 ;; This function calls:
 26940 ;;		_USBEnableEndpoint
 26941 ;;		i2_USBTransferOnePacket
 26942 ;; This function is called by:
 26943 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26944 ;; This function uses a non-reentrant model
 26945 ;;
 26946                           
 26947                           	psect	text116
 26948  01609E                     __ptext116:
 26949                           	opt stack 0
 26950  01609E                     _CDCInitEP:
 26951                           	opt stack 15
 26952                           
 26953                           ;usb_device_cdc.c: 354: line_coding.dwDTERate = 19200;
 26954                           
 26955                           ;incstack = 0
 26956  01609E  0E00               	movlw	0
 26957  0160A0  0101               	movlb	1	; () banked
 26958  0160A2  6F87               	movwf	_line_coding& (0+255),b
 26959  0160A4  0E4B               	movlw	75
 26960  0160A6  6F88               	movwf	(_line_coding+1)& (0+255),b
 26961  0160A8  0E00               	movlw	0
 26962  0160AA  6F89               	movwf	(_line_coding+2)& (0+255),b
 26963  0160AC  0E00               	movlw	0
 26964  0160AE  6F8A               	movwf	(_line_coding+3)& (0+255),b
 26965                           
 26966                           ;usb_device_cdc.c: 355: line_coding.bCharFormat = 0x00;
 26967  0160B0  0E00               	movlw	0
 26968  0160B2  0101               	movlb	1	; () banked
 26969  0160B4  6F8B               	movwf	(_line_coding+4)& (0+255),b
 26970                           
 26971                           ;usb_device_cdc.c: 356: line_coding.bParityType = 0x00;
 26972  0160B6  0E00               	movlw	0
 26973  0160B8  0101               	movlb	1	; () banked
 26974  0160BA  6F8C               	movwf	(_line_coding+5)& (0+255),b
 26975                           
 26976                           ;usb_device_cdc.c: 357: line_coding.bDataBits = 0x08;
 26977  0160BC  0E08               	movlw	8
 26978  0160BE  0101               	movlb	1	; () banked
 26979  0160C0  6F8D               	movwf	(_line_coding+6)& (0+255),b
 26980                           
 26981                           ;usb_device_cdc.c: 359: cdc_rx_len = 0;
 26982  0160C2  0E00               	movlw	0
 26983  0160C4  0100               	movlb	0	; () banked
 26984  0160C6  6FF6               	movwf	_cdc_rx_len& (0+255),b
 26985                           
 26986                           ; BSR set to: 0
 26987                           ;usb_device_cdc.c: 372: USBEnableEndpoint(1,0x02|0x10|0x08);
 26988  0160C8  0E1A               	movlw	26
 26989  0160CA  6E09               	movwf	USBEnableEndpoint@options,c
 26990  0160CC  0E01               	movlw	1
 26991  0160CE  EC5E  F0B3         	call	_USBEnableEndpoint
 26992                           
 26993                           ;usb_device_cdc.c: 373: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 26994  0160D2  0E1E               	movlw	30
 26995  0160D4  6E09               	movwf	USBEnableEndpoint@options,c
 26996  0160D6  0E02               	movlw	2
 26997  0160D8  EC5E  F0B3         	call	_USBEnableEndpoint
 26998                           
 26999                           ;usb_device_cdc.c: 375: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 27000  0160DC  0E00               	movlw	0
 27001  0160DE  6E01               	movwf	i2USBTransferOnePacket@dir,c
 27002  0160E0  0E0E               	movlw	low _cdc_data_rx
 27003  0160E2  6E02               	movwf	i2USBTransferOnePacket@data,c
 27004  0160E4  0E02               	movlw	high _cdc_data_rx
 27005  0160E6  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 27006  0160E8  0E40               	movlw	64
 27007  0160EA  6E04               	movwf	i2USBTransferOnePacket@len,c
 27008  0160EC  0E02               	movlw	2
 27009  0160EE  EC1A  F0A9         	call	i2_USBTransferOnePacket
 27010  0160F2  C001  F033         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 27011  0160F6  C002  F034         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 27012                           
 27013                           ;usb_device_cdc.c: 376: CDCDataInHandle = (0);
 27014  0160FA  0E00               	movlw	0
 27015  0160FC  0101               	movlb	1	; () banked
 27016  0160FE  6F1D               	movwf	_CDCDataInHandle& (0+255),b
 27017  016100  0E00               	movlw	0
 27018  016102  0101               	movlb	1	; () banked
 27019  016104  6F1E               	movwf	(_CDCDataInHandle+1)& (0+255),b
 27020                           
 27021                           ; BSR set to: 1
 27022                           ;usb_device_cdc.c: 403: cdc_trf_state = 0;
 27023  016106  0E00               	movlw	0
 27024  016108  0100               	movlb	0	; () banked
 27025  01610A  6FF7               	movwf	_cdc_trf_state& (0+255),b
 27026                           
 27027                           ; BSR set to: 0
 27028  01610C  0012               	return		;funcret
 27029  01610E                     __end_of_CDCInitEP:
 27030                           	opt stack 0
 27031                           pclatu	equ	0xFFB
 27032                           pclath	equ	0xFFA
 27033                           tblptru	equ	0xFF8
 27034                           tblptrh	equ	0xFF7
 27035                           tblptrl	equ	0xFF6
 27036                           tablat	equ	0xFF5
 27037                           prodh	equ	0xFF4
 27038                           prodl	equ	0xFF3
 27039                           intcon	equ	0xFF2
 27040                           intcon2	equ	0xFF1
 27041                           postinc0	equ	0xFEE
 27042                           fsr0h	equ	0xFEA
 27043                           fsr0l	equ	0xFE9
 27044                           wreg	equ	0xFE8
 27045                           indf1	equ	0xFE7
 27046                           postinc1	equ	0xFE6
 27047                           postdec1	equ	0xFE5
 27048                           fsr1h	equ	0xFE2
 27049                           fsr1l	equ	0xFE1
 27050                           indf2	equ	0xFDF
 27051                           postinc2	equ	0xFDE
 27052                           postdec2	equ	0xFDD
 27053                           plusw2	equ	0xFDB
 27054                           fsr2h	equ	0xFDA
 27055                           fsr2l	equ	0xFD9
 27056                           status	equ	0xFD8
 27057                           
 27058 ;; *************** function i2_USBTransferOnePacket *****************
 27059 ;; Defined at:
 27060 ;;		line 995 in file "../My_header/usb_cdc/usb/usb_device.c"
 27061 ;; Parameters:    Size  Location     Type
 27062 ;;  ep              1    wreg     unsigned char 
 27063 ;;  dir             1    0[COMRAM] unsigned char 
 27064 ;;  data            2    1[COMRAM] PTR unsigned char 
 27065 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 27066 ;;  len             1    3[COMRAM] unsigned char 
 27067 ;; Auto vars:     Size  Location     Type
 27068 ;;  ep              1    4[COMRAM] unsigned char 
 27069 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 27070 ;;		 -> NULL(0), BDT(48), 
 27071 ;; Return value:  Size  Location     Type
 27072 ;;                  2    0[COMRAM] PTR void 
 27073 ;; Registers used:
 27074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27075 ;; Tracked objects:
 27076 ;;		On entry : 0/0
 27077 ;;		On exit  : 0/0
 27078 ;;		Unchanged: 0/0
 27079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27081 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27083 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27084 ;;Total ram usage:        7 bytes
 27085 ;; Hardware stack levels used:    1
 27086 ;; This function calls:
 27087 ;;		Nothing
 27088 ;; This function is called by:
 27089 ;;		_CDCInitEP
 27090 ;; This function uses a non-reentrant model
 27091 ;;
 27092                           
 27093                           	psect	text117
 27094  015234                     __ptext117:
 27095                           	opt stack 0
 27096  015234                     i2_USBTransferOnePacket:
 27097                           	opt stack 16
 27098                           
 27099                           ; BSR set to: 0
 27100                           ;incstack = 0
 27101                           ;i2USBTransferOnePacket@ep stored from wreg
 27102  015234  6E05               	movwf	i2USBTransferOnePacket@ep,c
 27103                           
 27104                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 27105                           ;usb_device.c: 1000: if(dir != 0)
 27106  015236  5001               	movf	i2USBTransferOnePacket@dir,w,c
 27107  015238  B4D8               	btfsc	status,2,c
 27108  01523A  D007               	goto	i2l5954
 27109                           
 27110                           ;usb_device.c: 1001: {
 27111                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 27112  01523C  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27113  01523E  0D02               	mullw	2
 27114  015240  0EF0               	movlw	low _pBDTEntryIn
 27115  015242  24F3               	addwf	prodl,w,c
 27116  015244  6ED9               	movwf	fsr2l,c
 27117  015246  0E00               	movlw	high _pBDTEntryIn
 27118  015248  D006               	goto	L15
 27119  01524A                     i2l5954:
 27120                           
 27121                           ;usb_device.c: 1005: else
 27122                           ;usb_device.c: 1006: {
 27123                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 27124  01524A  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27125  01524C  0D02               	mullw	2
 27126  01524E  0E00               	movlw	low _pBDTEntryOut
 27127  015250  24F3               	addwf	prodl,w,c
 27128  015252  6ED9               	movwf	fsr2l,c
 27129  015254  0E01               	movlw	high _pBDTEntryOut
 27130  015256                     L15:
 27131  015256  20F4               	addwfc	prodh,w,c
 27132  015258  6EDA               	movwf	fsr2h,c
 27133  01525A  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 27134  01525E  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 27135                           
 27136                           ;usb_device.c: 1009: }
 27137                           ;usb_device.c: 1013: if(handle == 0)
 27138  015262  5006               	movf	i2USBTransferOnePacket@handle,w,c
 27139  015264  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 27140  015266  A4D8               	btfss	status,2,c
 27141  015268  D005               	goto	i2l5962
 27142                           
 27143                           ;usb_device.c: 1014: {
 27144                           ;usb_device.c: 1015: return 0;
 27145  01526A  0E00               	movlw	0
 27146  01526C  6E01               	movwf	?i2_USBTransferOnePacket,c
 27147  01526E  0E00               	movlw	0
 27148  015270  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 27149  015272  0012               	return	
 27150  015274                     i2l5962:
 27151                           
 27152                           ;usb_device.c: 1016: }
 27153                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 27154  015274  EE20 F002          	lfsr	2,2
 27155  015278  5006               	movf	i2USBTransferOnePacket@handle,w,c
 27156  01527A  26D9               	addwf	fsr2l,f,c
 27157  01527C  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 27158  01527E  22DA               	addwfc	fsr2h,f,c
 27159  015280  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 27160  015284  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 27161                           
 27162                           ;usb_device.c: 1030: handle->CNT = len;
 27163  015288  EE20 F001          	lfsr	2,1
 27164  01528C  5006               	movf	i2USBTransferOnePacket@handle,w,c
 27165  01528E  26D9               	addwf	fsr2l,f,c
 27166  015290  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 27167  015292  22DA               	addwfc	fsr2h,f,c
 27168  015294  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 27169                           
 27170                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 27171  015298  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27172  01529C  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27173  0152A0  0E40               	movlw	64
 27174  0152A2  16DF               	andwf	indf2,f,c
 27175                           
 27176                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 27177  0152A4  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27178  0152A8  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27179  0152AC  0E00               	movlw	0
 27180  0152AE  86DB               	bsf	plusw2,3,c
 27181                           
 27182                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 27183  0152B0  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 27184  0152B4  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 27185  0152B8  0E00               	movlw	0
 27186  0152BA  8EDB               	bsf	plusw2,7,c
 27187                           
 27188                           ;usb_device.c: 1036: if(dir != 0)
 27189  0152BC  5001               	movf	i2USBTransferOnePacket@dir,w,c
 27190  0152BE  B4D8               	btfsc	status,2,c
 27191  0152C0  D007               	goto	i2l5974
 27192                           
 27193                           ;usb_device.c: 1037: {
 27194                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 27195  0152C2  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27196  0152C4  0D02               	mullw	2
 27197  0152C6  0EF0               	movlw	low _pBDTEntryIn
 27198  0152C8  24F3               	addwf	prodl,w,c
 27199  0152CA  6ED9               	movwf	fsr2l,c
 27200  0152CC  0E00               	movlw	high _pBDTEntryIn
 27201  0152CE  D006               	goto	L16
 27202  0152D0                     i2l5974:
 27203                           
 27204                           ;usb_device.c: 1041: else
 27205                           ;usb_device.c: 1042: {
 27206                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 27207  0152D0  5005               	movf	i2USBTransferOnePacket@ep,w,c
 27208  0152D2  0D02               	mullw	2
 27209  0152D4  0E00               	movlw	low _pBDTEntryOut
 27210  0152D6  24F3               	addwf	prodl,w,c
 27211  0152D8  6ED9               	movwf	fsr2l,c
 27212  0152DA  0E01               	movlw	high _pBDTEntryOut
 27213  0152DC                     L16:
 27214  0152DC  20F4               	addwfc	prodh,w,c
 27215  0152DE  6EDA               	movwf	fsr2h,c
 27216  0152E0  0E04               	movlw	4
 27217  0152E2  1ADF               	xorwf	indf2,f,c
 27218                           
 27219                           ;usb_device.c: 1045: }
 27220                           ;usb_device.c: 1046: return (void*)handle;
 27221  0152E4  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 27222  0152E8  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 27223  0152EC  0012               	return	
 27224  0152EE                     __end_ofi2_USBTransferOnePacket:
 27225                           	opt stack 0
 27226                           pclatu	equ	0xFFB
 27227                           pclath	equ	0xFFA
 27228                           tblptru	equ	0xFF8
 27229                           tblptrh	equ	0xFF7
 27230                           tblptrl	equ	0xFF6
 27231                           tablat	equ	0xFF5
 27232                           prodh	equ	0xFF4
 27233                           prodl	equ	0xFF3
 27234                           intcon	equ	0xFF2
 27235                           intcon2	equ	0xFF1
 27236                           postinc0	equ	0xFEE
 27237                           fsr0h	equ	0xFEA
 27238                           fsr0l	equ	0xFE9
 27239                           wreg	equ	0xFE8
 27240                           indf1	equ	0xFE7
 27241                           postinc1	equ	0xFE6
 27242                           postdec1	equ	0xFE5
 27243                           fsr1h	equ	0xFE2
 27244                           fsr1l	equ	0xFE1
 27245                           indf2	equ	0xFDF
 27246                           postinc2	equ	0xFDE
 27247                           postdec2	equ	0xFDD
 27248                           plusw2	equ	0xFDB
 27249                           fsr2h	equ	0xFDA
 27250                           fsr2l	equ	0xFD9
 27251                           status	equ	0xFD8
 27252                           
 27253 ;; *************** function _USBEnableEndpoint *****************
 27254 ;; Defined at:
 27255 ;;		line 878 in file "../My_header/usb_cdc/usb/usb_device.c"
 27256 ;; Parameters:    Size  Location     Type
 27257 ;;  ep              1    wreg     unsigned char 
 27258 ;;  options         1    8[COMRAM] unsigned char 
 27259 ;; Auto vars:     Size  Location     Type
 27260 ;;  ep              1   11[COMRAM] unsigned char 
 27261 ;;  p               2    9[COMRAM] PTR unsigned char 
 27262 ;;		 -> UEP0(1), 
 27263 ;; Return value:  Size  Location     Type
 27264 ;;		None               void
 27265 ;; Registers used:
 27266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27267 ;; Tracked objects:
 27268 ;;		On entry : 0/0
 27269 ;;		On exit  : 0/0
 27270 ;;		Unchanged: 0/0
 27271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27272 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27273 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27276 ;;Total ram usage:        4 bytes
 27277 ;; Hardware stack levels used:    1
 27278 ;; Hardware stack levels required when called:    1
 27279 ;; This function calls:
 27280 ;;		_USBConfigureEndpoint
 27281 ;; This function is called by:
 27282 ;;		_CDCInitEP
 27283 ;; This function uses a non-reentrant model
 27284 ;;
 27285                           
 27286                           	psect	text118
 27287  0166BC                     __ptext118:
 27288                           	opt stack 0
 27289  0166BC                     _USBEnableEndpoint:
 27290                           	opt stack 15
 27291                           
 27292                           ;incstack = 0
 27293                           ;USBEnableEndpoint@ep stored from wreg
 27294  0166BC  6E0C               	movwf	USBEnableEndpoint@ep,c
 27295                           
 27296                           ;usb_device.c: 880: unsigned char* p;
 27297                           ;usb_device.c: 884: if(options & 0x04)
 27298  0166BE  A409               	btfss	USBEnableEndpoint@options,2,c
 27299  0166C0  D005               	goto	i2l5906
 27300                           
 27301                           ;usb_device.c: 885: {
 27302                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 27303  0166C2  0E00               	movlw	0
 27304  0166C4  6E01               	movwf	USBConfigureEndpoint@direction,c
 27305  0166C6  500C               	movf	USBEnableEndpoint@ep,w,c
 27306  0166C8  ECFD  F0AC         	call	_USBConfigureEndpoint
 27307  0166CC                     i2l5906:
 27308                           
 27309                           ;usb_device.c: 887: }
 27310                           ;usb_device.c: 888: if(options & 0x02)
 27311  0166CC  A209               	btfss	USBEnableEndpoint@options,1,c
 27312  0166CE  D005               	goto	i2l5910
 27313                           
 27314                           ;usb_device.c: 889: {
 27315                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 27316  0166D0  0E01               	movlw	1
 27317  0166D2  6E01               	movwf	USBConfigureEndpoint@direction,c
 27318  0166D4  500C               	movf	USBEnableEndpoint@ep,w,c
 27319  0166D6  ECFD  F0AC         	call	_USBConfigureEndpoint
 27320  0166DA                     i2l5910:
 27321                           
 27322                           ;usb_device.c: 891: }
 27323                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 27324  0166DA  500C               	movf	USBEnableEndpoint@ep,w,c
 27325  0166DC  0D01               	mullw	1
 27326  0166DE  0E26               	movlw	38
 27327  0166E0  24F3               	addwf	prodl,w,c
 27328  0166E2  6E0A               	movwf	USBEnableEndpoint@p,c
 27329  0166E4  0E0F               	movlw	15
 27330  0166E6  20F4               	addwfc	prodh,w,c
 27331  0166E8  6E0B               	movwf	USBEnableEndpoint@p+1,c
 27332                           
 27333                           ;usb_device.c: 901: *p = options;
 27334  0166EA  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 27335  0166EE  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 27336  0166F2  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 27337  0166F6  0012               	return		;funcret
 27338  0166F8                     __end_of_USBEnableEndpoint:
 27339                           	opt stack 0
 27340                           pclatu	equ	0xFFB
 27341                           pclath	equ	0xFFA
 27342                           tblptru	equ	0xFF8
 27343                           tblptrh	equ	0xFF7
 27344                           tblptrl	equ	0xFF6
 27345                           tablat	equ	0xFF5
 27346                           prodh	equ	0xFF4
 27347                           prodl	equ	0xFF3
 27348                           intcon	equ	0xFF2
 27349                           intcon2	equ	0xFF1
 27350                           postinc0	equ	0xFEE
 27351                           fsr0h	equ	0xFEA
 27352                           fsr0l	equ	0xFE9
 27353                           wreg	equ	0xFE8
 27354                           indf1	equ	0xFE7
 27355                           postinc1	equ	0xFE6
 27356                           postdec1	equ	0xFE5
 27357                           fsr1h	equ	0xFE2
 27358                           fsr1l	equ	0xFE1
 27359                           indf2	equ	0xFDF
 27360                           postinc2	equ	0xFDE
 27361                           postdec2	equ	0xFDD
 27362                           plusw2	equ	0xFDB
 27363                           fsr2h	equ	0xFDA
 27364                           fsr2l	equ	0xFD9
 27365                           status	equ	0xFD8
 27366                           
 27367 ;; *************** function _USBConfigureEndpoint *****************
 27368 ;; Defined at:
 27369 ;;		line 1543 in file "../My_header/usb_cdc/usb/usb_device.c"
 27370 ;; Parameters:    Size  Location     Type
 27371 ;;  EPNum           1    wreg     unsigned char 
 27372 ;;  direction       1    0[COMRAM] unsigned char 
 27373 ;; Auto vars:     Size  Location     Type
 27374 ;;  EPNum           1    5[COMRAM] unsigned char 
 27375 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 27376 ;;		 -> BDT(48), 
 27377 ;; Return value:  Size  Location     Type
 27378 ;;		None               void
 27379 ;; Registers used:
 27380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27381 ;; Tracked objects:
 27382 ;;		On entry : 0/0
 27383 ;;		On exit  : 0/0
 27384 ;;		Unchanged: 0/0
 27385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27386 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27387 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27390 ;;Total ram usage:        8 bytes
 27391 ;; Hardware stack levels used:    1
 27392 ;; This function calls:
 27393 ;;		Nothing
 27394 ;; This function is called by:
 27395 ;;		_USBEnableEndpoint
 27396 ;; This function uses a non-reentrant model
 27397 ;;
 27398                           
 27399                           	psect	text119
 27400  0159FA                     __ptext119:
 27401                           	opt stack 0
 27402  0159FA                     _USBConfigureEndpoint:
 27403                           	opt stack 15
 27404                           
 27405                           ;incstack = 0
 27406                           ;USBConfigureEndpoint@EPNum stored from wreg
 27407  0159FA  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 27408                           
 27409                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 27410                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 27411  0159FC  0E00               	movlw	0
 27412  0159FE  6E07               	movwf	USBConfigureEndpoint@handle,c
 27413  015A00  0E0D               	movlw	13
 27414  015A02  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 27415                           
 27416                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 27417  015A04  5001               	movf	USBConfigureEndpoint@direction,w,c
 27418  015A06  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 27419  015A08  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 27420  015A0A  90D8               	bcf	status,0,c
 27421  015A0C  3602               	rlcf	??_USBConfigureEndpoint,f,c
 27422  015A0E  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 27423  015A10  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 27424  015A12  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 27425  015A14  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 27426  015A16  90D8               	bcf	status,0,c
 27427  015A18  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27428  015A1A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27429  015A1C  90D8               	bcf	status,0,c
 27430  015A1E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27431  015A20  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27432  015A22  5002               	movf	??_USBConfigureEndpoint,w,c
 27433  015A24  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 27434  015A26  5003               	movf	??_USBConfigureEndpoint+1,w,c
 27435  015A28  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 27436  015A2A  90D8               	bcf	status,0,c
 27437  015A2C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27438  015A2E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27439  015A30  90D8               	bcf	status,0,c
 27440  015A32  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 27441  015A34  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 27442  015A36  5004               	movf	??_USBConfigureEndpoint+2,w,c
 27443  015A38  2607               	addwf	USBConfigureEndpoint@handle,f,c
 27444  015A3A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 27445  015A3C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 27446                           
 27447                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 27448  015A3E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 27449  015A42  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 27450  015A46  9EDF               	bcf	indf2,7,c
 27451                           
 27452                           ;usb_device.c: 1557: if(direction == 0)
 27453  015A48  5001               	movf	USBConfigureEndpoint@direction,w,c
 27454  015A4A  A4D8               	btfss	status,2,c
 27455  015A4C  D007               	goto	i2l5896
 27456                           
 27457                           ;usb_device.c: 1558: {
 27458                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 27459  015A4E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 27460  015A50  0D02               	mullw	2
 27461  015A52  0E00               	movlw	low _pBDTEntryOut
 27462  015A54  24F3               	addwf	prodl,w,c
 27463  015A56  6ED9               	movwf	fsr2l,c
 27464  015A58  0E01               	movlw	high _pBDTEntryOut
 27465  015A5A  D006               	goto	L17
 27466  015A5C                     i2l5896:
 27467                           
 27468                           ;usb_device.c: 1561: else
 27469                           ;usb_device.c: 1562: {
 27470                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 27471  015A5C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 27472  015A5E  0D02               	mullw	2
 27473  015A60  0EF0               	movlw	low _pBDTEntryIn
 27474  015A62  24F3               	addwf	prodl,w,c
 27475  015A64  6ED9               	movwf	fsr2l,c
 27476  015A66  0E00               	movlw	high _pBDTEntryIn
 27477  015A68                     L17:
 27478  015A68  20F4               	addwfc	prodh,w,c
 27479  015A6A  6EDA               	movwf	fsr2h,c
 27480  015A6C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 27481  015A70  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 27482                           
 27483                           ;usb_device.c: 1564: }
 27484                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 27485  015A74  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 27486  015A78  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 27487  015A7C  9CDF               	bcf	indf2,6,c
 27488                           
 27489                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 27490  015A7E  EE20 F004          	lfsr	2,4
 27491  015A82  5007               	movf	USBConfigureEndpoint@handle,w,c
 27492  015A84  26D9               	addwf	fsr2l,f,c
 27493  015A86  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 27494  015A88  22DA               	addwfc	fsr2h,f,c
 27495  015A8A  8CDF               	bsf	indf2,6,c
 27496  015A8C  0012               	return		;funcret
 27497  015A8E                     __end_of_USBConfigureEndpoint:
 27498                           	opt stack 0
 27499                           pclatu	equ	0xFFB
 27500                           pclath	equ	0xFFA
 27501                           tblptru	equ	0xFF8
 27502                           tblptrh	equ	0xFF7
 27503                           tblptrl	equ	0xFF6
 27504                           tablat	equ	0xFF5
 27505                           prodh	equ	0xFF4
 27506                           prodl	equ	0xFF3
 27507                           intcon	equ	0xFF2
 27508                           intcon2	equ	0xFF1
 27509                           postinc0	equ	0xFEE
 27510                           fsr0h	equ	0xFEA
 27511                           fsr0l	equ	0xFE9
 27512                           wreg	equ	0xFE8
 27513                           indf1	equ	0xFE7
 27514                           postinc1	equ	0xFE6
 27515                           postdec1	equ	0xFE5
 27516                           fsr1h	equ	0xFE2
 27517                           fsr1l	equ	0xFE1
 27518                           indf2	equ	0xFDF
 27519                           postinc2	equ	0xFDE
 27520                           postdec2	equ	0xFDD
 27521                           plusw2	equ	0xFDB
 27522                           fsr2h	equ	0xFDA
 27523                           fsr2l	equ	0xFD9
 27524                           status	equ	0xFD8
 27525                           
 27526 ;; *************** function _USBCtrlTrfOutHandler *****************
 27527 ;; Defined at:
 27528 ;;		line 2541 in file "../My_header/usb_cdc/usb/usb_device.c"
 27529 ;; Parameters:    Size  Location     Type
 27530 ;;		None
 27531 ;; Auto vars:     Size  Location     Type
 27532 ;;		None
 27533 ;; Return value:  Size  Location     Type
 27534 ;;		None               void
 27535 ;; Registers used:
 27536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27537 ;; Tracked objects:
 27538 ;;		On entry : 0/0
 27539 ;;		On exit  : 0/0
 27540 ;;		Unchanged: 0/0
 27541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27546 ;;Total ram usage:        0 bytes
 27547 ;; Hardware stack levels used:    1
 27548 ;; Hardware stack levels required when called:    2
 27549 ;; This function calls:
 27550 ;;		_USBCtrlTrfRxService
 27551 ;; This function is called by:
 27552 ;;		_USBCtrlEPService
 27553 ;; This function uses a non-reentrant model
 27554 ;;
 27555                           
 27556                           	psect	text120
 27557  016300                     __ptext120:
 27558                           	opt stack 0
 27559  016300                     _USBCtrlTrfOutHandler:
 27560                           	opt stack 15
 27561                           
 27562                           ;usb_device.c: 2543: if(controlTransferState == 2)
 27563                           
 27564                           ;incstack = 0
 27565  016300  0E02               	movlw	2
 27566  016302  1847               	xorwf	_controlTransferState,w,c	;volatile
 27567  016304  A4D8               	btfss	status,2,c
 27568  016306  D003               	goto	i2l7200
 27569                           
 27570                           ;usb_device.c: 2544: {
 27571                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 27572  016308  EC0E  F09E         	call	_USBCtrlTrfRxService	;wreg free
 27573                           
 27574                           ;usb_device.c: 2546: }
 27575  01630C  0012               	return	
 27576  01630E                     i2l7200:
 27577                           
 27578                           ;usb_device.c: 2547: else
 27579                           ;usb_device.c: 2548: {
 27580                           ;usb_device.c: 2551: controlTransferState = 0;
 27581  01630E  0E00               	movlw	0
 27582  016310  6E47               	movwf	_controlTransferState,c	;volatile
 27583                           
 27584                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 27585  016312  503B               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 27586  016314  A4D8               	btfss	status,2,c
 27587  016316  D01F               	goto	i2l7208
 27588                           
 27589                           ;usb_device.c: 2559: {
 27590                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 27591  016318  EE20 F001          	lfsr	2,1
 27592  01631C  5037               	movf	_pBDTEntryEP0OutNext,w,c
 27593  01631E  26D9               	addwf	fsr2l,f,c
 27594  016320  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 27595  016322  22DA               	addwfc	fsr2h,f,c
 27596  016324  0E08               	movlw	8
 27597  016326  6EDF               	movwf	indf2,c
 27598                           
 27599                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27600  016328  EE20 F002          	lfsr	2,2
 27601  01632C  5037               	movf	_pBDTEntryEP0OutNext,w,c
 27602  01632E  26D9               	addwf	fsr2l,f,c
 27603  016330  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 27604  016332  22DA               	addwfc	fsr2h,f,c
 27605  016334  0E30               	movlw	48
 27606  016336  6EDE               	movwf	postinc2,c
 27607  016338  0E0D               	movlw	13
 27608  01633A  6EDD               	movwf	postdec2,c
 27609                           
 27610                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27611  01633C  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27612  016340  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27613  016344  0E0C               	movlw	12
 27614  016346  6EDF               	movwf	indf2,c
 27615                           
 27616                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27617  016348  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27618  01634C  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27619  016350  0E00               	movlw	0
 27620  016352  8EDB               	bsf	plusw2,7,c
 27621                           
 27622                           ;usb_device.c: 2564: }
 27623  016354  0012               	return	
 27624  016356                     i2l7208:
 27625                           
 27626                           ;usb_device.c: 2565: else
 27627                           ;usb_device.c: 2566: {
 27628                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 27629  016356  0E00               	movlw	0
 27630  016358  6E3B               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 27631  01635A  0012               	return	
 27632  01635C                     __end_of_USBCtrlTrfOutHandler:
 27633                           	opt stack 0
 27634                           pclatu	equ	0xFFB
 27635                           pclath	equ	0xFFA
 27636                           tblptru	equ	0xFF8
 27637                           tblptrh	equ	0xFF7
 27638                           tblptrl	equ	0xFF6
 27639                           tablat	equ	0xFF5
 27640                           prodh	equ	0xFF4
 27641                           prodl	equ	0xFF3
 27642                           intcon	equ	0xFF2
 27643                           intcon2	equ	0xFF1
 27644                           postinc0	equ	0xFEE
 27645                           fsr0h	equ	0xFEA
 27646                           fsr0l	equ	0xFE9
 27647                           wreg	equ	0xFE8
 27648                           indf1	equ	0xFE7
 27649                           postinc1	equ	0xFE6
 27650                           postdec1	equ	0xFE5
 27651                           fsr1h	equ	0xFE2
 27652                           fsr1l	equ	0xFE1
 27653                           indf2	equ	0xFDF
 27654                           postinc2	equ	0xFDE
 27655                           postdec2	equ	0xFDD
 27656                           plusw2	equ	0xFDB
 27657                           fsr2h	equ	0xFDA
 27658                           fsr2l	equ	0xFD9
 27659                           status	equ	0xFD8
 27660                           
 27661 ;; *************** function _USBCtrlTrfRxService *****************
 27662 ;; Defined at:
 27663 ;;		line 1852 in file "../My_header/usb_cdc/usb/usb_device.c"
 27664 ;; Parameters:    Size  Location     Type
 27665 ;;		None
 27666 ;; Auto vars:     Size  Location     Type
 27667 ;;  byteToRead      1    1[COMRAM] unsigned char 
 27668 ;;  i               1    0[COMRAM] unsigned char 
 27669 ;; Return value:  Size  Location     Type
 27670 ;;		None               void
 27671 ;; Registers used:
 27672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27673 ;; Tracked objects:
 27674 ;;		On entry : 0/0
 27675 ;;		On exit  : 0/0
 27676 ;;		Unchanged: 0/0
 27677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27682 ;;Total ram usage:        2 bytes
 27683 ;; Hardware stack levels used:    1
 27684 ;; Hardware stack levels required when called:    1
 27685 ;; This function calls:
 27686 ;;		_USBCtrlEPAllowStatusStage
 27687 ;; This function is called by:
 27688 ;;		_USBCtrlTrfOutHandler
 27689 ;; This function uses a non-reentrant model
 27690 ;;
 27691                           
 27692                           	psect	text121
 27693  013C1C                     __ptext121:
 27694                           	opt stack 0
 27695  013C1C                     _USBCtrlTrfRxService:
 27696                           	opt stack 15
 27697                           
 27698                           ;usb_device.c: 1854: uint8_t byteToRead;
 27699                           ;usb_device.c: 1855: uint8_t i;
 27700                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 27701                           
 27702                           ;incstack = 0
 27703  013C1C  EE20 F001          	lfsr	2,1
 27704  013C20  5035               	movf	_pBDTEntryEP0OutCurrent,w,c
 27705  013C22  26D9               	addwf	fsr2l,f,c
 27706  013C24  5036               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27707  013C26  22DA               	addwfc	fsr2h,f,c
 27708  013C28  50DF               	movf	indf2,w,c
 27709  013C2A  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 27710                           
 27711                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 27712  013C2C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 27713  013C2E  0100               	movlb	0	; () banked
 27714  013C30  5DE5               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 27715  013C32  0E00               	movlw	0
 27716  013C34  59E6               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 27717  013C36  A0D8               	btfss	status,0,c
 27718                           
 27719                           ; BSR set to: 0
 27720                           ;usb_device.c: 1866: {
 27721                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 27722  013C38  C0E5  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 27723                           
 27724                           ; BSR set to: 0
 27725                           ;usb_device.c: 1868: }
 27726                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 27727                           
 27728                           ; BSR set to: 0
 27729  013C3C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 27730  013C3E  0100               	movlb	0	; () banked
 27731  013C40  5FE5               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 27732  013C42  0E00               	movlw	0
 27733  013C44  5BE6               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 27737  013C46  0E00               	movlw	0
 27738  013C48  6E01               	movwf	USBCtrlTrfRxService@i,c
 27739  013C4A  D012               	goto	i2l6940
 27740  013C4C                     i2l6934:
 27741                           
 27742                           ; BSR set to: 0
 27743                           ;usb_device.c: 1875: {
 27744                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 27745  013C4C  5001               	movf	USBCtrlTrfRxService@i,w,c
 27746  013C4E  0D01               	mullw	1
 27747  013C50  0E38               	movlw	56
 27748  013C52  24F3               	addwf	prodl,w,c
 27749  013C54  6ED9               	movwf	fsr2l,c
 27750  013C56  0E0D               	movlw	13
 27751  013C58  20F4               	addwfc	prodh,w,c
 27752  013C5A  6EDA               	movwf	fsr2h,c
 27753  013C5C  C0E1  FFE1         	movff	_outPipes,fsr1l	;volatile
 27754  013C60  C0E2  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 27755  013C64  CFDF FFE7          	movff	indf2,indf1
 27756                           
 27757                           ; BSR set to: 0
 27758  013C68  0100               	movlb	0	; () banked
 27759  013C6A  4BE1               	infsnz	_outPipes& (0+255),f,b	;volatile
 27760  013C6C  2BE2               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 27761                           
 27762                           ; BSR set to: 0
 27763  013C6E  2A01               	incf	USBCtrlTrfRxService@i,f,c
 27764  013C70                     i2l6940:
 27765                           
 27766                           ; BSR set to: 0
 27767  013C70  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 27768  013C72  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 27769  013C74  A0D8               	btfss	status,0,c
 27770  013C76  D7EA               	goto	i2l6934
 27771                           
 27772                           ; BSR set to: 0
 27773                           ;usb_device.c: 1877: }
 27774                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 27775                           
 27776                           ; BSR set to: 0
 27777  013C78  0100               	movlb	0	; () banked
 27778  013C7A  51E5               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 27779  013C7C  0100               	movlb	0	; () banked
 27780  013C7E  11E6               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 27781  013C80  B4D8               	btfsc	status,2,c
 27782  013C82  D032               	goto	i2l6956
 27783                           
 27784                           ; BSR set to: 0
 27785                           ;usb_device.c: 1882: {
 27786                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 27787  013C84  EE20 F001          	lfsr	2,1
 27788  013C88  5037               	movf	_pBDTEntryEP0OutNext,w,c
 27789  013C8A  26D9               	addwf	fsr2l,f,c
 27790  013C8C  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 27791  013C8E  22DA               	addwfc	fsr2h,f,c
 27792  013C90  0E08               	movlw	8
 27793  013C92  6EDF               	movwf	indf2,c
 27794                           
 27795                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 27796  013C94  EE20 F002          	lfsr	2,2
 27797  013C98  5037               	movf	_pBDTEntryEP0OutNext,w,c
 27798  013C9A  26D9               	addwf	fsr2l,f,c
 27799  013C9C  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 27800  013C9E  22DA               	addwfc	fsr2h,f,c
 27801  013CA0  0E38               	movlw	56
 27802  013CA2  6EDE               	movwf	postinc2,c
 27803  013CA4  0E0D               	movlw	13
 27804  013CA6  6EDD               	movwf	postdec2,c
 27805                           
 27806                           ; BSR set to: 0
 27807                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 27808  013CA8  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27809  013CAC  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27810  013CB0  BCDF               	btfsc	indf2,6,c
 27811  013CB2  D00D               	goto	i2l6952
 27812                           
 27813                           ; BSR set to: 0
 27814                           ;usb_device.c: 1886: {
 27815                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 27816  013CB4  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27817  013CB8  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27818  013CBC  0E48               	movlw	72
 27819  013CBE  6EDF               	movwf	indf2,c
 27820                           
 27821                           ; BSR set to: 0
 27822                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27823  013CC0  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27824  013CC4  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27825  013CC8  0E00               	movlw	0
 27826  013CCA  8EDB               	bsf	plusw2,7,c
 27827                           
 27828                           ;usb_device.c: 1889: }
 27829  013CCC  0012               	return	
 27830  013CCE                     i2l6952:
 27831                           
 27832                           ; BSR set to: 0
 27833                           ;usb_device.c: 1890: else
 27834                           ;usb_device.c: 1891: {
 27835                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 27836  013CCE  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27837  013CD2  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27838  013CD6  0E08               	movlw	8
 27839  013CD8  6EDF               	movwf	indf2,c
 27840                           
 27841                           ; BSR set to: 0
 27842                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27843  013CDA  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27844  013CDE  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27845  013CE2  0E00               	movlw	0
 27846  013CE4  8EDB               	bsf	plusw2,7,c
 27847                           
 27848                           ; BSR set to: 0
 27849                           ;usb_device.c: 1894: }
 27850                           ;usb_device.c: 1895: }
 27851  013CE6  0012               	return	
 27852  013CE8                     i2l6956:
 27853                           
 27854                           ; BSR set to: 0
 27855                           ;usb_device.c: 1896: else
 27856                           ;usb_device.c: 1897: {
 27857                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 27858  013CE8  EE20 F001          	lfsr	2,1
 27859  013CEC  5037               	movf	_pBDTEntryEP0OutNext,w,c
 27860  013CEE  26D9               	addwf	fsr2l,f,c
 27861  013CF0  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 27862  013CF2  22DA               	addwfc	fsr2h,f,c
 27863  013CF4  0E08               	movlw	8
 27864  013CF6  6EDF               	movwf	indf2,c
 27865                           
 27866                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27867  013CF8  EE20 F002          	lfsr	2,2
 27868  013CFC  5037               	movf	_pBDTEntryEP0OutNext,w,c
 27869  013CFE  26D9               	addwf	fsr2l,f,c
 27870  013D00  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 27871  013D02  22DA               	addwfc	fsr2h,f,c
 27872  013D04  0E30               	movlw	48
 27873  013D06  6EDE               	movwf	postinc2,c
 27874  013D08  0E0D               	movlw	13
 27875  013D0A  6EDD               	movwf	postdec2,c
 27876                           
 27877                           ; BSR set to: 0
 27878                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 27879  013D0C  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27880  013D10  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27881  013D14  0E04               	movlw	4
 27882  013D16  6EDF               	movwf	indf2,c
 27883                           
 27884                           ; BSR set to: 0
 27885                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27886  013D18  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27887  013D1C  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27888  013D20  0E00               	movlw	0
 27889  013D22  8EDB               	bsf	plusw2,7,c
 27890                           
 27891                           ; BSR set to: 0
 27892                           ;usb_device.c: 1926: }
 27893                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 27894                           
 27895                           ; BSR set to: 0
 27896                           ;usb_device.c: 1915: {
 27897                           ;usb_device.c: 1921: outPipes[0].pFunc();
 27898  013D24  0100               	movlb	0	; () banked
 27899  013D26  9FE4               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 27900                           
 27901                           ; BSR set to: 0
 27902                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 27903  013D28  503F               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 27904  013D2A  A4D8               	btfss	status,2,c
 27905  013D2C  0012               	return	
 27906                           
 27907                           ; BSR set to: 0
 27908                           ;usb_device.c: 1942: {
 27909                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 27910  013D2E  EC7E  F0A6         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27911  013D32  0012               	return	
 27912  013D34                     __end_of_USBCtrlTrfRxService:
 27913                           	opt stack 0
 27914                           pclatu	equ	0xFFB
 27915                           pclath	equ	0xFFA
 27916                           tblptru	equ	0xFF8
 27917                           tblptrh	equ	0xFF7
 27918                           tblptrl	equ	0xFF6
 27919                           tablat	equ	0xFF5
 27920                           prodh	equ	0xFF4
 27921                           prodl	equ	0xFF3
 27922                           intcon	equ	0xFF2
 27923                           intcon2	equ	0xFF1
 27924                           postinc0	equ	0xFEE
 27925                           fsr0h	equ	0xFEA
 27926                           fsr0l	equ	0xFE9
 27927                           wreg	equ	0xFE8
 27928                           indf1	equ	0xFE7
 27929                           postinc1	equ	0xFE6
 27930                           postdec1	equ	0xFE5
 27931                           fsr1h	equ	0xFE2
 27932                           fsr1l	equ	0xFE1
 27933                           indf2	equ	0xFDF
 27934                           postinc2	equ	0xFDE
 27935                           postdec2	equ	0xFDD
 27936                           plusw2	equ	0xFDB
 27937                           fsr2h	equ	0xFDA
 27938                           fsr2l	equ	0xFD9
 27939                           status	equ	0xFD8
 27940                           
 27941 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 27942 ;; Defined at:
 27943 ;;		line 1416 in file "../My_header/usb_cdc/usb/usb_device.c"
 27944 ;; Parameters:    Size  Location     Type
 27945 ;;		None
 27946 ;; Auto vars:     Size  Location     Type
 27947 ;;		None
 27948 ;; Return value:  Size  Location     Type
 27949 ;;		None               void
 27950 ;; Registers used:
 27951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27952 ;; Tracked objects:
 27953 ;;		On entry : 0/0
 27954 ;;		On exit  : 0/0
 27955 ;;		Unchanged: 0/0
 27956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;Total ram usage:        0 bytes
 27962 ;; Hardware stack levels used:    1
 27963 ;; This function calls:
 27964 ;;		Nothing
 27965 ;; This function is called by:
 27966 ;;		_USBDeviceTasks
 27967 ;;		_USBCtrlEPServiceComplete
 27968 ;;		_USBCtrlTrfRxService
 27969 ;; This function uses a non-reentrant model
 27970 ;;
 27971                           
 27972                           	psect	text122
 27973  014CFC                     __ptext122:
 27974                           	opt stack 0
 27975  014CFC                     _USBCtrlEPAllowStatusStage:
 27976                           	opt stack 15
 27977                           
 27978                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 27979                           
 27980                           ;incstack = 0
 27981  014CFC  5041               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 27982  014CFE  A4D8               	btfss	status,2,c
 27983  014D00  0012               	return	
 27984                           
 27985                           ;usb_device.c: 1424: {
 27986                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 27987  014D02  0E01               	movlw	1
 27988  014D04  6E41               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 27989                           
 27990                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 27991  014D06  5042               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 27992  014D08  A4D8               	btfss	status,2,c
 27993  014D0A  0012               	return	
 27994                           
 27995                           ;usb_device.c: 1427: {
 27996                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 27997  014D0C  0E01               	movlw	1
 27998  014D0E  6E42               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 27999                           
 28000                           ;usb_device.c: 1432: if(controlTransferState == 2)
 28001  014D10  0E02               	movlw	2
 28002  014D12  1847               	xorwf	_controlTransferState,w,c	;volatile
 28003  014D14  A4D8               	btfss	status,2,c
 28004  014D16  D016               	goto	i2l6600
 28005                           
 28006                           ;usb_device.c: 1433: {
 28007                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 28008  014D18  0100               	movlb	0	; () banked
 28009  014D1A  EE20 F001          	lfsr	2,1
 28010  014D1E  51F0               	movf	_pBDTEntryIn& (0+255),w,b
 28011  014D20  26D9               	addwf	fsr2l,f,c
 28012  014D22  51F1               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28013  014D24  22DA               	addwfc	fsr2h,f,c
 28014  014D26  0E00               	movlw	0
 28015  014D28  6EDF               	movwf	indf2,c
 28016                           
 28017                           ; BSR set to: 0
 28018                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28019  014D2A  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28020  014D2E  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28021  014D32  0E48               	movlw	72
 28022  014D34  6EDF               	movwf	indf2,c
 28023                           
 28024                           ; BSR set to: 0
 28025                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28026  014D36  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28027  014D3A  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28028  014D3E  0E00               	movlw	0
 28029  014D40  8EDB               	bsf	plusw2,7,c
 28030                           
 28031                           ;usb_device.c: 1437: }
 28032  014D42  0012               	return	
 28033  014D44                     i2l6600:
 28034                           
 28035                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 28036  014D44  0447               	decf	_controlTransferState,w,c	;volatile
 28037  014D46  A4D8               	btfss	status,2,c
 28038  014D48  0012               	return	
 28039                           
 28040                           ;usb_device.c: 1439: {
 28041                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 28042  014D4A  0E00               	movlw	0
 28043  014D4C  6E3B               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28044                           
 28045                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 28046  014D4E  EE20 F001          	lfsr	2,1
 28047  014D52  5035               	movf	_pBDTEntryEP0OutCurrent,w,c
 28048  014D54  26D9               	addwf	fsr2l,f,c
 28049  014D56  5036               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28050  014D58  22DA               	addwfc	fsr2h,f,c
 28051  014D5A  0E08               	movlw	8
 28052  014D5C  6EDF               	movwf	indf2,c
 28053                           
 28054                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 28055  014D5E  EE20 F002          	lfsr	2,2
 28056  014D62  5035               	movf	_pBDTEntryEP0OutCurrent,w,c
 28057  014D64  26D9               	addwf	fsr2l,f,c
 28058  014D66  5036               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 28059  014D68  22DA               	addwfc	fsr2h,f,c
 28060  014D6A  0E30               	movlw	48
 28061  014D6C  6EDE               	movwf	postinc2,c
 28062  014D6E  0E0D               	movlw	13
 28063  014D70  6EDD               	movwf	postdec2,c
 28064                           
 28065                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 28066  014D72  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28067  014D76  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28068  014D7A  0E04               	movlw	4
 28069  014D7C  6EDF               	movwf	indf2,c
 28070                           
 28071                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 28072  014D7E  C035  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28073  014D82  C036  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28074  014D86  0E00               	movlw	0
 28075  014D88  8EDB               	bsf	plusw2,7,c
 28076                           
 28077                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 28078  014D8A  0E01               	movlw	1
 28079  014D8C  6E3B               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 28080                           
 28081                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 28082  014D8E  EE20 F001          	lfsr	2,1
 28083  014D92  5037               	movf	_pBDTEntryEP0OutNext,w,c
 28084  014D94  26D9               	addwf	fsr2l,f,c
 28085  014D96  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 28086  014D98  22DA               	addwfc	fsr2h,f,c
 28087  014D9A  0E08               	movlw	8
 28088  014D9C  6EDF               	movwf	indf2,c
 28089                           
 28090                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28091  014D9E  EE20 F002          	lfsr	2,2
 28092  014DA2  5037               	movf	_pBDTEntryEP0OutNext,w,c
 28093  014DA4  26D9               	addwf	fsr2l,f,c
 28094  014DA6  5038               	movf	_pBDTEntryEP0OutNext+1,w,c
 28095  014DA8  22DA               	addwfc	fsr2h,f,c
 28096  014DAA  0E30               	movlw	48
 28097  014DAC  6EDE               	movwf	postinc2,c
 28098  014DAE  0E0D               	movlw	13
 28099  014DB0  6EDD               	movwf	postdec2,c
 28100                           
 28101                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 28102  014DB2  C037  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28103  014DB6  C038  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28104  014DBA  0E80               	movlw	128
 28105  014DBC  6EDF               	movwf	indf2,c
 28106  014DBE  0012               	return	
 28107  014DC0                     __end_of_USBCtrlEPAllowStatusStage:
 28108                           	opt stack 0
 28109                           pclatu	equ	0xFFB
 28110                           pclath	equ	0xFFA
 28111                           tblptru	equ	0xFF8
 28112                           tblptrh	equ	0xFF7
 28113                           tblptrl	equ	0xFF6
 28114                           tablat	equ	0xFF5
 28115                           prodh	equ	0xFF4
 28116                           prodl	equ	0xFF3
 28117                           intcon	equ	0xFF2
 28118                           intcon2	equ	0xFF1
 28119                           postinc0	equ	0xFEE
 28120                           fsr0h	equ	0xFEA
 28121                           fsr0l	equ	0xFE9
 28122                           wreg	equ	0xFE8
 28123                           indf1	equ	0xFE7
 28124                           postinc1	equ	0xFE6
 28125                           postdec1	equ	0xFE5
 28126                           fsr1h	equ	0xFE2
 28127                           fsr1l	equ	0xFE1
 28128                           indf2	equ	0xFDF
 28129                           postinc2	equ	0xFDE
 28130                           postdec2	equ	0xFDD
 28131                           plusw2	equ	0xFDB
 28132                           fsr2h	equ	0xFDA
 28133                           fsr2l	equ	0xFD9
 28134                           status	equ	0xFD8
 28135                           
 28136 ;; *************** function _USBCtrlTrfInHandler *****************
 28137 ;; Defined at:
 28138 ;;		line 2595 in file "../My_header/usb_cdc/usb/usb_device.c"
 28139 ;; Parameters:    Size  Location     Type
 28140 ;;		None
 28141 ;; Auto vars:     Size  Location     Type
 28142 ;;  lastDTS         1    1[COMRAM] unsigned char 
 28143 ;; Return value:  Size  Location     Type
 28144 ;;		None               void
 28145 ;; Registers used:
 28146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28147 ;; Tracked objects:
 28148 ;;		On entry : 0/0
 28149 ;;		On exit  : 0/0
 28150 ;;		Unchanged: 0/0
 28151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28156 ;;Total ram usage:        1 bytes
 28157 ;; Hardware stack levels used:    1
 28158 ;; Hardware stack levels required when called:    1
 28159 ;; This function calls:
 28160 ;;		_USBCtrlTrfTxService
 28161 ;; This function is called by:
 28162 ;;		_USBCtrlEPService
 28163 ;; This function uses a non-reentrant model
 28164 ;;
 28165                           
 28166                           	psect	text123
 28167  014DC0                     __ptext123:
 28168                           	opt stack 0
 28169  014DC0                     _USBCtrlTrfInHandler:
 28170                           	opt stack 16
 28171                           
 28172                           ;usb_device.c: 2597: uint8_t lastDTS;
 28173                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 28174                           
 28175                           ;incstack = 0
 28176  014DC0  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28177  014DC4  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28178  014DC8  0E00               	movlw	0
 28179  014DCA  BCDF               	btfsc	indf2,6,c
 28180  014DCC  0E01               	movlw	1
 28181  014DCE  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 28182                           
 28183                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 28184  014DD0  0E04               	movlw	4
 28185  014DD2  0100               	movlb	0	; () banked
 28186  014DD4  1BF0               	xorwf	_pBDTEntryIn& (0+255),f,b
 28187                           
 28188                           ; BSR set to: 0
 28189                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 28190  014DD6  0E08               	movlw	8
 28191  014DD8  1840               	xorwf	_USBDeviceState,w,c	;volatile
 28192  014DDA  A4D8               	btfss	status,2,c
 28193  014DDC  D00D               	goto	i2l7224
 28194                           
 28195                           ; BSR set to: 0
 28196                           ;usb_device.c: 2608: {
 28197                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 28198  014DDE  010D               	movlb	13	; () banked
 28199  014DE0  5132               	movf	50,w,b	;volatile
 28200  014DE2  0B7F               	andlw	127
 28201  014DE4  010F               	movlb	15	; () banked
 28202  014DE6  6F38               	movwf	56,b	;volatile
 28203                           
 28204                           ; BSR set to: 15
 28205                           ;usb_device.c: 2610: if(UADDR != 0u)
 28206  014DE8  010F               	movlb	15	; () banked
 28207  014DEA  5138               	movf	56,w,b	;volatile
 28208  014DEC  B4D8               	btfsc	status,2,c
 28209  014DEE  D002               	goto	i2l7222
 28210                           
 28211                           ; BSR set to: 15
 28212                           ;usb_device.c: 2611: {
 28213                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 28214  014DF0  0E10               	movlw	16
 28215  014DF2  D001               	goto	L18
 28216  014DF4                     i2l7222:
 28217                           
 28218                           ; BSR set to: 15
 28219                           ;usb_device.c: 2614: else
 28220                           ;usb_device.c: 2615: {
 28221                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 28222  014DF4  0E04               	movlw	4
 28223  014DF6                     L18:
 28224  014DF6  6E40               	movwf	_USBDeviceState,c	;volatile
 28225  014DF8                     i2l7224:
 28226                           
 28227                           ;usb_device.c: 2617: }
 28228                           ;usb_device.c: 2618: }
 28229                           ;usb_device.c: 2621: if(controlTransferState == 1)
 28230  014DF8  0447               	decf	_controlTransferState,w,c	;volatile
 28231  014DFA  A4D8               	btfss	status,2,c
 28232  014DFC  D03B               	goto	i2l1329
 28233                           
 28234                           ;usb_device.c: 2622: {
 28235                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 28236  014DFE  0100               	movlb	0	; () banked
 28237  014E00  EE20 F002          	lfsr	2,2
 28238  014E04  51F0               	movf	_pBDTEntryIn& (0+255),w,b
 28239  014E06  26D9               	addwf	fsr2l,f,c
 28240  014E08  51F1               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28241  014E0A  22DA               	addwfc	fsr2h,f,c
 28242  014E0C  0E38               	movlw	56
 28243  014E0E  6EDE               	movwf	postinc2,c
 28244  014E10  0E0D               	movlw	13
 28245  014E12  6EDD               	movwf	postdec2,c
 28246                           
 28247                           ; BSR set to: 0
 28248                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 28249  014E14  EC57  F0A2         	call	_USBCtrlTrfTxService	;wreg free
 28250                           
 28251                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 28252  014E18  0E02               	movlw	2
 28253  014E1A  184E               	xorwf	_shortPacketStatus,w,c	;volatile
 28254  014E1C  A4D8               	btfss	status,2,c
 28255  014E1E  D00D               	goto	i2l7236
 28256                           
 28257                           ;usb_device.c: 2631: {
 28258                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 28259  014E20  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28260  014E24  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28261  014E28  0E04               	movlw	4
 28262  014E2A  6EDF               	movwf	indf2,c
 28263                           
 28264                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28265  014E2C  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28266  014E30  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28267  014E34  0E00               	movlw	0
 28268  014E36  8EDB               	bsf	plusw2,7,c
 28269                           
 28270                           ;usb_device.c: 2636: }
 28271  014E38  0012               	return	
 28272  014E3A                     i2l7236:
 28273                           
 28274                           ;usb_device.c: 2637: else
 28275                           ;usb_device.c: 2638: {
 28276                           ;usb_device.c: 2639: if(lastDTS == 0)
 28277  014E3A  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 28278  014E3C  A4D8               	btfss	status,2,c
 28279  014E3E  D00D               	goto	i2l7242
 28280                           
 28281                           ;usb_device.c: 2640: {
 28282                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28283  014E40  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28284  014E44  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28285  014E48  0E48               	movlw	72
 28286  014E4A  6EDF               	movwf	indf2,c
 28287                           
 28288                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28289  014E4C  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28290  014E50  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28291  014E54  0E00               	movlw	0
 28292  014E56  8EDB               	bsf	plusw2,7,c
 28293                           
 28294                           ;usb_device.c: 2643: }
 28295  014E58  0012               	return	
 28296  014E5A                     i2l7242:
 28297                           
 28298                           ;usb_device.c: 2644: else
 28299                           ;usb_device.c: 2645: {
 28300                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 28301  014E5A  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28302  014E5E  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28303  014E62  0E08               	movlw	8
 28304  014E64  6EDF               	movwf	indf2,c
 28305                           
 28306                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28307  014E66  C0F0  FFD9         	movff	_pBDTEntryIn,fsr2l
 28308  014E6A  C0F1  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28309  014E6E  0E00               	movlw	0
 28310  014E70  8EDB               	bsf	plusw2,7,c
 28311                           
 28312                           ;usb_device.c: 2648: }
 28313                           ;usb_device.c: 2649: }
 28314                           ;usb_device.c: 2650: }
 28315  014E72  0012               	return	
 28316  014E74                     i2l1329:
 28317                           
 28318                           ;usb_device.c: 2651: else
 28319                           ;usb_device.c: 2652: {
 28320                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 28321  014E74  0100               	movlb	0	; () banked
 28322  014E76  AFE4               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 28323  014E78  D002               	goto	i2l7248
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;usb_device.c: 2661: }
 28327                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 28328                           
 28329                           ; BSR set to: 0
 28330                           ;usb_device.c: 2659: {
 28331                           ;usb_device.c: 2660: outPipes[0].pFunc();
 28332  014E7A  0100               	movlb	0	; () banked
 28333  014E7C  9FE4               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 28334  014E7E                     i2l7248:
 28335                           
 28336                           ; BSR set to: 0
 28337                           ;usb_device.c: 2663: }
 28338                           ;usb_device.c: 2665: controlTransferState = 0;
 28339  014E7E  0E00               	movlw	0
 28340  014E80  6E47               	movwf	_controlTransferState,c	;volatile
 28341  014E82  0012               	return	
 28342  014E84                     __end_of_USBCtrlTrfInHandler:
 28343                           	opt stack 0
 28344                           pclatu	equ	0xFFB
 28345                           pclath	equ	0xFFA
 28346                           tblptru	equ	0xFF8
 28347                           tblptrh	equ	0xFF7
 28348                           tblptrl	equ	0xFF6
 28349                           tablat	equ	0xFF5
 28350                           prodh	equ	0xFF4
 28351                           prodl	equ	0xFF3
 28352                           intcon	equ	0xFF2
 28353                           intcon2	equ	0xFF1
 28354                           postinc0	equ	0xFEE
 28355                           fsr0h	equ	0xFEA
 28356                           fsr0l	equ	0xFE9
 28357                           wreg	equ	0xFE8
 28358                           indf1	equ	0xFE7
 28359                           postinc1	equ	0xFE6
 28360                           postdec1	equ	0xFE5
 28361                           fsr1h	equ	0xFE2
 28362                           fsr1l	equ	0xFE1
 28363                           indf2	equ	0xFDF
 28364                           postinc2	equ	0xFDE
 28365                           postdec2	equ	0xFDD
 28366                           plusw2	equ	0xFDB
 28367                           fsr2h	equ	0xFDA
 28368                           fsr2l	equ	0xFD9
 28369                           status	equ	0xFD8
 28370                           
 28371 ;; *************** function _USBCtrlTrfTxService *****************
 28372 ;; Defined at:
 28373 ;;		line 1771 in file "../My_header/usb_cdc/usb/usb_device.c"
 28374 ;; Parameters:    Size  Location     Type
 28375 ;;		None
 28376 ;; Auto vars:     Size  Location     Type
 28377 ;;  byteToSend      1    0[COMRAM] unsigned char 
 28378 ;; Return value:  Size  Location     Type
 28379 ;;		None               void
 28380 ;; Registers used:
 28381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28382 ;; Tracked objects:
 28383 ;;		On entry : 0/0
 28384 ;;		On exit  : 0/0
 28385 ;;		Unchanged: 0/0
 28386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28391 ;;Total ram usage:        1 bytes
 28392 ;; Hardware stack levels used:    1
 28393 ;; This function calls:
 28394 ;;		Nothing
 28395 ;; This function is called by:
 28396 ;;		_USBCtrlEPAllowDataStage
 28397 ;;		_USBCtrlTrfInHandler
 28398 ;; This function uses a non-reentrant model
 28399 ;;
 28400                           
 28401                           	psect	text124
 28402  0144AE                     __ptext124:
 28403                           	opt stack 0
 28404  0144AE                     _USBCtrlTrfTxService:
 28405                           	opt stack 14
 28406                           
 28407                           ;usb_device.c: 1773: uint8_t byteToSend;
 28408                           ;usb_device.c: 1777: byteToSend = 8;
 28409                           
 28410                           ;incstack = 0
 28411  0144AE  0E08               	movlw	8
 28412  0144B0  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 28413                           
 28414                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 28415  0144B2  0100               	movlb	0	; () banked
 28416  0144B4  51EF               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 28417  0144B6  E111               	bnz	i2l6226
 28418  0144B8  0E08               	movlw	8
 28419  0144BA  0100               	movlb	0	; () banked
 28420  0144BC  5DEE               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 28421  0144BE  B0D8               	btfsc	status,0,c
 28422  0144C0  D00C               	goto	i2l6226
 28423                           
 28424                           ; BSR set to: 0
 28425                           ;usb_device.c: 1779: {
 28426                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 28427  0144C2  C0EE  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 28428                           
 28429                           ; BSR set to: 0
 28430                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 28431  0144C6  504E               	movf	_shortPacketStatus,w,c	;volatile
 28432  0144C8  A4D8               	btfss	status,2,c
 28433  0144CA  D002               	goto	i2l6222
 28434                           
 28435                           ; BSR set to: 0
 28436                           ;usb_device.c: 1788: {
 28437                           ;usb_device.c: 1789: shortPacketStatus = 1;
 28438  0144CC  0E01               	movlw	1
 28439  0144CE  D004               	goto	L19
 28440  0144D0                     i2l6222:
 28441                           
 28442                           ; BSR set to: 0
 28443                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 28444  0144D0  044E               	decf	_shortPacketStatus,w,c	;volatile
 28445  0144D2  A4D8               	btfss	status,2,c
 28446  0144D4  D002               	goto	i2l6226
 28447                           
 28448                           ; BSR set to: 0
 28449                           ;usb_device.c: 1792: {
 28450                           ;usb_device.c: 1793: shortPacketStatus = 2;
 28451  0144D6  0E02               	movlw	2
 28452  0144D8                     L19:
 28453  0144D8  6E4E               	movwf	_shortPacketStatus,c	;volatile
 28454  0144DA                     i2l6226:
 28455                           
 28456                           ; BSR set to: 0
 28457                           ;usb_device.c: 1794: }
 28458                           ;usb_device.c: 1795: }
 28459                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 28460  0144DA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 28461  0144DC  0100               	movlb	0	; () banked
 28462  0144DE  5FEE               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 28463  0144E0  0E00               	movlw	0
 28464  0144E2  5BEF               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 28465                           
 28466                           ; BSR set to: 0
 28467                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 28468  0144E4  0100               	movlb	0	; () banked
 28469  0144E6  EE20 F001          	lfsr	2,1
 28470  0144EA  51F0               	movf	_pBDTEntryIn& (0+255),w,b
 28471  0144EC  26D9               	addwf	fsr2l,f,c
 28472  0144EE  51F1               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28473  0144F0  22DA               	addwfc	fsr2h,f,c
 28474  0144F2  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 28478  0144F6  0E38               	movlw	56
 28479  0144F8  0101               	movlb	1	; () banked
 28480  0144FA  6F21               	movwf	_pDst& (0+255),b
 28481  0144FC  0E0D               	movlw	13
 28482  0144FE  0101               	movlb	1	; () banked
 28483  014500  6F22               	movwf	(_pDst+1)& (0+255),b
 28484                           
 28485                           ; BSR set to: 1
 28486                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 28487  014502  0100               	movlb	0	; () banked
 28488  014504  A1ED               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 28489  014506  D01E               	goto	i2l6244
 28490  014508  D03E               	goto	i2l6254
 28491  01450A                     i2l6236:
 28492                           
 28493                           ;usb_device.c: 1812: {
 28494                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 28495  01450A  C0EA  FFF6         	movff	_inPipes,tblptrl	;volatile
 28496  01450E  C0EB  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28497  014512  0E00               	movlw	low (__mediumconst shr (0+16))
 28498  014514  6EF8               	movwf	tblptru,c
 28499  014516  C121  FFD9         	movff	_pDst,fsr2l
 28500  01451A  C122  FFDA         	movff	_pDst+1,fsr2h
 28501  01451E  0E0E               	movlw	(high __ramtop+-1)
 28502  014520  64F7               	cpfsgt	tblptrh,c
 28503  014522  D003               	bra	i2u567_47
 28504  014524  0008               	tblrd		*
 28505  014526  50F5               	movf	tablat,w,c
 28506  014528  D005               	bra	i2u567_40
 28507  01452A                     i2u567_47:
 28508  01452A  CFF6 FFE1          	movff	tblptrl,fsr1l
 28509  01452E  CFF7 FFE2          	movff	tblptrh,fsr1h
 28510  014532  50E7               	movf	indf1,w,c
 28511  014534                     i2u567_40:
 28512  014534  6EDF               	movwf	indf2,c
 28513  014536  0100               	movlb	0	; () banked
 28514  014538  4BEA               	infsnz	_inPipes& (0+255),f,b	;volatile
 28515  01453A  2BEB               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 28516                           
 28517                           ; BSR set to: 0
 28518  01453C  0101               	movlb	1	; () banked
 28519  01453E  4B21               	infsnz	_pDst& (0+255),f,b
 28520  014540  2B22               	incf	(_pDst+1)& (0+255),f,b
 28521                           
 28522                           ; BSR set to: 1
 28523                           ;usb_device.c: 1814: byteToSend--;
 28524  014542  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 28525  014544                     i2l6244:
 28526  014544  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 28527  014546  B4D8               	btfsc	status,2,c
 28528  014548  0012               	return	
 28529  01454A  D7DF               	goto	i2l6236
 28530  01454C                     i2l6246:
 28531                           
 28532                           ;usb_device.c: 1820: {
 28533                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 28534  01454C  C0EA  FFF6         	movff	_inPipes,tblptrl	;volatile
 28535  014550  C0EB  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28536  014554  0E00               	movlw	low (__mediumconst shr (0+16))
 28537  014556  6EF8               	movwf	tblptru,c
 28538  014558  C121  FFD9         	movff	_pDst,fsr2l
 28539  01455C  C122  FFDA         	movff	_pDst+1,fsr2h
 28540  014560  0E0E               	movlw	(high __ramtop+-1)
 28541  014562  64F7               	cpfsgt	tblptrh,c
 28542  014564  D003               	bra	i2u569_47
 28543  014566  0008               	tblrd		*
 28544  014568  50F5               	movf	tablat,w,c
 28545  01456A  D005               	bra	i2u569_40
 28546  01456C                     i2u569_47:
 28547  01456C  CFF6 FFE1          	movff	tblptrl,fsr1l
 28548  014570  CFF7 FFE2          	movff	tblptrh,fsr1h
 28549  014574  50E7               	movf	indf1,w,c
 28550  014576                     i2u569_40:
 28551  014576  6EDF               	movwf	indf2,c
 28552  014578  0100               	movlb	0	; () banked
 28553  01457A  4BEA               	infsnz	_inPipes& (0+255),f,b	;volatile
 28554  01457C  2BEB               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 28555                           
 28556                           ; BSR set to: 0
 28557  01457E  0101               	movlb	1	; () banked
 28558  014580  4B21               	infsnz	_pDst& (0+255),f,b
 28559  014582  2B22               	incf	(_pDst+1)& (0+255),f,b
 28560                           
 28561                           ; BSR set to: 1
 28562                           ;usb_device.c: 1822: byteToSend--;
 28563  014584  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 28564  014586                     i2l6254:
 28565  014586  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 28566  014588  B4D8               	btfsc	status,2,c
 28567  01458A  0012               	return	
 28568  01458C  D7DF               	goto	i2l6246
 28569  01458E                     __end_of_USBCtrlTrfTxService:
 28570                           	opt stack 0
 28571                           pclatu	equ	0xFFB
 28572                           pclath	equ	0xFFA
 28573                           tblptru	equ	0xFF8
 28574                           tblptrh	equ	0xFF7
 28575                           tblptrl	equ	0xFF6
 28576                           tablat	equ	0xFF5
 28577                           prodh	equ	0xFF4
 28578                           prodl	equ	0xFF3
 28579                           intcon	equ	0xFF2
 28580                           intcon2	equ	0xFF1
 28581                           postinc0	equ	0xFEE
 28582                           fsr0h	equ	0xFEA
 28583                           fsr0l	equ	0xFE9
 28584                           wreg	equ	0xFE8
 28585                           indf1	equ	0xFE7
 28586                           postinc1	equ	0xFE6
 28587                           postdec1	equ	0xFE5
 28588                           fsr1h	equ	0xFE2
 28589                           fsr1l	equ	0xFE1
 28590                           indf2	equ	0xFDF
 28591                           postinc2	equ	0xFDE
 28592                           postdec2	equ	0xFDD
 28593                           plusw2	equ	0xFDB
 28594                           fsr2h	equ	0xFDA
 28595                           fsr2l	equ	0xFD9
 28596                           status	equ	0xFD8
 28597                           
 28598 ;; *************** function _LED_indicator *****************
 28599 ;; Defined at:
 28600 ;;		line 145 in file "tasks.h"
 28601 ;; Parameters:    Size  Location     Type
 28602 ;;		None
 28603 ;; Auto vars:     Size  Location     Type
 28604 ;;  i               1   11[COMRAM] unsigned char 
 28605 ;; Return value:  Size  Location     Type
 28606 ;;		None               void
 28607 ;; Registers used:
 28608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28609 ;; Tracked objects:
 28610 ;;		On entry : 0/0
 28611 ;;		On exit  : 0/0
 28612 ;;		Unchanged: 0/0
 28613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28616 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28618 ;;Total ram usage:        4 bytes
 28619 ;; Hardware stack levels used:    1
 28620 ;; Hardware stack levels required when called:    1
 28621 ;; This function calls:
 28622 ;;		i2_LED_OUT
 28623 ;;		i2___awdiv
 28624 ;;		i2___lwdiv
 28625 ;; This function is called by:
 28626 ;;		_ISR
 28627 ;; This function uses a non-reentrant model
 28628 ;;
 28629                           
 28630                           	psect	text125
 28631  0139D2                     __ptext125:
 28632                           	opt stack 0
 28633  0139D2                     _LED_indicator:
 28634                           	opt stack 19
 28635                           
 28636                           ;tasks.h: 146: uint8_t i;
 28637                           ;tasks.h: 147: static uint8_t cnt[3];
 28638                           ;tasks.h: 148: static uint8_t cntf[3];
 28639                           ;tasks.h: 149: for (i = 0; i < 3; i++) {
 28640                           
 28641                           ;incstack = 0
 28642  0139D2  0E00               	movlw	0
 28643  0139D4  6E0C               	movwf	LED_indicator@i,c
 28644  0139D6                     i2l8944:
 28645  0139D6  0E02               	movlw	2
 28646  0139D8  640C               	cpfsgt	LED_indicator@i,c
 28647  0139DA  D001               	goto	i2l8948
 28648  0139DC  0012               	return	
 28649  0139DE                     i2l8948:
 28650                           
 28651                           ;tasks.h: 151: if (port[i].flag.led_indicator_ON) {
 28652  0139DE  500C               	movf	LED_indicator@i,w,c
 28653  0139E0  0D17               	mullw	23
 28654  0139E2  0E16               	movlw	22
 28655  0139E4  26F3               	addwf	prodl,f,c
 28656  0139E6  0E00               	movlw	0
 28657  0139E8  22F4               	addwfc	prodh,f,c
 28658  0139EA  0E2B               	movlw	low _port
 28659  0139EC  24F3               	addwf	prodl,w,c
 28660  0139EE  6ED9               	movwf	fsr2l,c
 28661  0139F0  0E01               	movlw	high _port
 28662  0139F2  20F4               	addwfc	prodh,w,c
 28663  0139F4  6EDA               	movwf	fsr2h,c
 28664  0139F6  0101               	movlb	1	; () banked
 28665  0139F8  A2DF               	btfss	indf2,1,c
 28666  0139FA  D07C               	goto	i2l8968
 28667                           
 28668                           ; BSR set to: 1
 28669                           ;tasks.h: 152: cnt[i]++;
 28670  0139FC  500C               	movf	LED_indicator@i,w,c
 28671  0139FE  0D01               	mullw	1
 28672  013A00  0E0A               	movlw	low LED_indicator@cnt
 28673  013A02  24F3               	addwf	prodl,w,c
 28674  013A04  6ED9               	movwf	fsr2l,c
 28675  013A06  0E01               	movlw	high LED_indicator@cnt
 28676  013A08  20F4               	addwfc	prodh,w,c
 28677  013A0A  6EDA               	movwf	fsr2h,c
 28678  013A0C  2ADF               	incf	indf2,f,c
 28679                           
 28680                           ;tasks.h: 153: if (cnt[i] % 2 == 1) {
 28681  013A0E  500C               	movf	LED_indicator@i,w,c
 28682  013A10  0D01               	mullw	1
 28683  013A12  0E0A               	movlw	low LED_indicator@cnt
 28684  013A14  24F3               	addwf	prodl,w,c
 28685  013A16  6ED9               	movwf	fsr2l,c
 28686  013A18  0E01               	movlw	high LED_indicator@cnt
 28687  013A1A  20F4               	addwfc	prodh,w,c
 28688  013A1C  6EDA               	movwf	fsr2h,c
 28689  013A1E  0101               	movlb	1	; () banked
 28690  013A20  A0DF               	btfss	indf2,0,c
 28691  013A22  D006               	goto	i2l8954
 28692                           
 28693                           ; BSR set to: 1
 28694                           ;tasks.h: 154: LED_OUT(i, 0);
 28695  013A24  0E00               	movlw	0
 28696  013A26  6E01               	movwf	i2LED_OUT@value,c
 28697  013A28  500C               	movf	LED_indicator@i,w,c
 28698  013A2A  ECEF  F0B0         	call	i2_LED_OUT
 28699                           
 28700                           ;tasks.h: 155: } else {
 28701  013A2E  D062               	goto	i2l8968
 28702  013A30                     i2l8954:
 28703                           
 28704                           ;tasks.h: 156: if (cnt[i] / 2 <= port[i].current / 100) {
 28705  013A30  500C               	movf	LED_indicator@i,w,c
 28706  013A32  0D17               	mullw	23
 28707  013A34  0E06               	movlw	6
 28708  013A36  26F3               	addwf	prodl,f,c
 28709  013A38  0E00               	movlw	0
 28710  013A3A  22F4               	addwfc	prodh,f,c
 28711  013A3C  0E2B               	movlw	low _port
 28712  013A3E  24F3               	addwf	prodl,w,c
 28713  013A40  6ED9               	movwf	fsr2l,c
 28714  013A42  0E01               	movlw	high _port
 28715  013A44  20F4               	addwfc	prodh,w,c
 28716  013A46  6EDA               	movwf	fsr2h,c
 28717  013A48  CFDE F001          	movff	postinc2,i2___lwdiv@dividend
 28718  013A4C  CFDD F002          	movff	postdec2,i2___lwdiv@dividend+1
 28719  013A50  0E00               	movlw	0
 28720  013A52  6E04               	movwf	i2___lwdiv@divisor+1,c
 28721  013A54  0E64               	movlw	100
 28722  013A56  6E03               	movwf	i2___lwdiv@divisor,c
 28723  013A58  EC5C  F0B2         	call	i2___lwdiv	;wreg free
 28724  013A5C  C001  F009         	movff	?i2___lwdiv,??_LED_indicator
 28725  013A60  C002  F00A         	movff	?i2___lwdiv+1,??_LED_indicator+1
 28726  013A64  500C               	movf	LED_indicator@i,w,c
 28727  013A66  0D01               	mullw	1
 28728  013A68  0E0A               	movlw	low LED_indicator@cnt
 28729  013A6A  24F3               	addwf	prodl,w,c
 28730  013A6C  6ED9               	movwf	fsr2l,c
 28731  013A6E  0E01               	movlw	high LED_indicator@cnt
 28732  013A70  20F4               	addwfc	prodh,w,c
 28733  013A72  6EDA               	movwf	fsr2h,c
 28734  013A74  50DF               	movf	indf2,w,c
 28735  013A76  6E0B               	movwf	(??_LED_indicator+2)& (0+255),c
 28736  013A78  500B               	movf	??_LED_indicator+2,w,c
 28737  013A7A  6E01               	movwf	i2___awdiv@dividend,c
 28738  013A7C  6A02               	clrf	i2___awdiv@dividend+1,c
 28739  013A7E  0E00               	movlw	0
 28740  013A80  6E04               	movwf	i2___awdiv@divisor+1,c
 28741  013A82  0E02               	movlw	2
 28742  013A84  6E03               	movwf	i2___awdiv@divisor,c
 28743  013A86  ECA2  F0AE         	call	i2___awdiv	;wreg free
 28744  013A8A  5001               	movf	?i2___awdiv,w,c
 28745  013A8C  5C09               	subwf	??_LED_indicator,w,c
 28746  013A8E  5002               	movf	?i2___awdiv+1,w,c
 28747  013A90  580A               	subwfb	??_LED_indicator+1,w,c
 28748  013A92  A0D8               	btfss	status,0,c
 28749  013A94  D00C               	goto	i2l8960
 28750                           
 28751                           ;tasks.h: 157: LED_OUT(i, 1);
 28752  013A96  0E01               	movlw	1
 28753  013A98  6E01               	movwf	i2LED_OUT@value,c
 28754  013A9A  500C               	movf	LED_indicator@i,w,c
 28755  013A9C  ECEF  F0B0         	call	i2_LED_OUT
 28756                           
 28757                           ;tasks.h: 158: cntf[i] = 0;
 28758  013AA0  500C               	movf	LED_indicator@i,w,c
 28759  013AA2  0D01               	mullw	1
 28760  013AA4  0E0D               	movlw	low LED_indicator@cntf
 28761  013AA6  24F3               	addwf	prodl,w,c
 28762  013AA8  6ED9               	movwf	fsr2l,c
 28763  013AAA  0E01               	movlw	high LED_indicator@cntf
 28764  013AAC  D01F               	goto	L20
 28765  013AAE                     i2l8960:
 28766                           
 28767                           ;tasks.h: 160: cntf[i]++;
 28768  013AAE  500C               	movf	LED_indicator@i,w,c
 28769  013AB0  0D01               	mullw	1
 28770  013AB2  0E0D               	movlw	low LED_indicator@cntf
 28771  013AB4  24F3               	addwf	prodl,w,c
 28772  013AB6  6ED9               	movwf	fsr2l,c
 28773  013AB8  0E01               	movlw	high LED_indicator@cntf
 28774  013ABA  20F4               	addwfc	prodh,w,c
 28775  013ABC  6EDA               	movwf	fsr2h,c
 28776  013ABE  2ADF               	incf	indf2,f,c
 28777                           
 28778                           ;tasks.h: 161: LED_OUT(i, 0);
 28779  013AC0  0E00               	movlw	0
 28780  013AC2  6E01               	movwf	i2LED_OUT@value,c
 28781  013AC4  500C               	movf	LED_indicator@i,w,c
 28782  013AC6  ECEF  F0B0         	call	i2_LED_OUT
 28783                           
 28784                           ;tasks.h: 162: if (cntf[i] >= 2) {
 28785  013ACA  500C               	movf	LED_indicator@i,w,c
 28786  013ACC  0D01               	mullw	1
 28787  013ACE  0E0D               	movlw	low LED_indicator@cntf
 28788  013AD0  24F3               	addwf	prodl,w,c
 28789  013AD2  6ED9               	movwf	fsr2l,c
 28790  013AD4  0E01               	movlw	high LED_indicator@cntf
 28791  013AD6  20F4               	addwfc	prodh,w,c
 28792  013AD8  6EDA               	movwf	fsr2h,c
 28793  013ADA  0E01               	movlw	1
 28794  013ADC  64DF               	cpfsgt	indf2,c
 28795  013ADE  D00A               	goto	i2l8968
 28796                           
 28797                           ;tasks.h: 163: cnt[i] = 0;
 28798  013AE0  500C               	movf	LED_indicator@i,w,c
 28799  013AE2  0D01               	mullw	1
 28800  013AE4  0E0A               	movlw	low LED_indicator@cnt
 28801  013AE6  24F3               	addwf	prodl,w,c
 28802  013AE8  6ED9               	movwf	fsr2l,c
 28803  013AEA  0E01               	movlw	high LED_indicator@cnt
 28804  013AEC                     L20:
 28805  013AEC  20F4               	addwfc	prodh,w,c
 28806  013AEE  6EDA               	movwf	fsr2h,c
 28807  013AF0  0E00               	movlw	0
 28808  013AF2  6EDF               	movwf	indf2,c
 28809  013AF4                     i2l8968:
 28810  013AF4  2A0C               	incf	LED_indicator@i,f,c
 28811  013AF6  D76F               	goto	i2l8944
 28812  013AF8                     __end_of_LED_indicator:
 28813                           	opt stack 0
 28814                           pclatu	equ	0xFFB
 28815                           pclath	equ	0xFFA
 28816                           tblptru	equ	0xFF8
 28817                           tblptrh	equ	0xFF7
 28818                           tblptrl	equ	0xFF6
 28819                           tablat	equ	0xFF5
 28820                           prodh	equ	0xFF4
 28821                           prodl	equ	0xFF3
 28822                           intcon	equ	0xFF2
 28823                           intcon2	equ	0xFF1
 28824                           postinc0	equ	0xFEE
 28825                           fsr0h	equ	0xFEA
 28826                           fsr0l	equ	0xFE9
 28827                           wreg	equ	0xFE8
 28828                           indf1	equ	0xFE7
 28829                           postinc1	equ	0xFE6
 28830                           postdec1	equ	0xFE5
 28831                           fsr1h	equ	0xFE2
 28832                           fsr1l	equ	0xFE1
 28833                           indf2	equ	0xFDF
 28834                           postinc2	equ	0xFDE
 28835                           postdec2	equ	0xFDD
 28836                           plusw2	equ	0xFDB
 28837                           fsr2h	equ	0xFDA
 28838                           fsr2l	equ	0xFD9
 28839                           status	equ	0xFD8
 28840                           
 28841 ;; *************** function i2___lwdiv *****************
 28842 ;; Defined at:
 28843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 28844 ;; Parameters:    Size  Location     Type
 28845 ;;  dividend        2    0[COMRAM] unsigned int 
 28846 ;;  divisor         2    2[COMRAM] unsigned int 
 28847 ;; Auto vars:     Size  Location     Type
 28848 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 28849 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 28850 ;; Return value:  Size  Location     Type
 28851 ;;                  2    0[COMRAM] unsigned int 
 28852 ;; Registers used:
 28853 ;;		wreg, status,2, status,0
 28854 ;; Tracked objects:
 28855 ;;		On entry : 0/0
 28856 ;;		On exit  : 0/0
 28857 ;;		Unchanged: 0/0
 28858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28860 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28862 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28863 ;;Total ram usage:        7 bytes
 28864 ;; Hardware stack levels used:    1
 28865 ;; This function calls:
 28866 ;;		Nothing
 28867 ;; This function is called by:
 28868 ;;		_LED_indicator
 28869 ;; This function uses a non-reentrant model
 28870 ;;
 28871                           
 28872                           	psect	text126
 28873  0164B8                     __ptext126:
 28874                           	opt stack 0
 28875  0164B8                     i2___lwdiv:
 28876                           	opt stack 19
 28877                           
 28878                           ;incstack = 0
 28879  0164B8  0E00               	movlw	0
 28880  0164BA  6E06               	movwf	i2___lwdiv@quotient+1,c
 28881  0164BC  0E00               	movlw	0
 28882  0164BE  6E05               	movwf	i2___lwdiv@quotient,c
 28883  0164C0  5003               	movf	i2___lwdiv@divisor,w,c
 28884  0164C2  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 28885  0164C4  B4D8               	btfsc	status,2,c
 28886  0164C6  D01C               	goto	i2l1991
 28887  0164C8  0E01               	movlw	1
 28888  0164CA  6E07               	movwf	i2___lwdiv@counter,c
 28889  0164CC  D004               	goto	i2l8832
 28890  0164CE                     i2l8830:
 28891  0164CE  90D8               	bcf	status,0,c
 28892  0164D0  3603               	rlcf	i2___lwdiv@divisor,f,c
 28893  0164D2  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 28894  0164D4  2A07               	incf	i2___lwdiv@counter,f,c
 28895  0164D6                     i2l8832:
 28896  0164D6  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 28897  0164D8  D7FA               	goto	i2l8830
 28898  0164DA                     i2l8834:
 28899  0164DA  90D8               	bcf	status,0,c
 28900  0164DC  3605               	rlcf	i2___lwdiv@quotient,f,c
 28901  0164DE  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 28902  0164E0  5003               	movf	i2___lwdiv@divisor,w,c
 28903  0164E2  5C01               	subwf	i2___lwdiv@dividend,w,c
 28904  0164E4  5004               	movf	i2___lwdiv@divisor+1,w,c
 28905  0164E6  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 28906  0164E8  A0D8               	btfss	status,0,c
 28907  0164EA  D005               	goto	i2l8842
 28908  0164EC  5003               	movf	i2___lwdiv@divisor,w,c
 28909  0164EE  5E01               	subwf	i2___lwdiv@dividend,f,c
 28910  0164F0  5004               	movf	i2___lwdiv@divisor+1,w,c
 28911  0164F2  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 28912  0164F4  8005               	bsf	i2___lwdiv@quotient,0,c
 28913  0164F6                     i2l8842:
 28914  0164F6  90D8               	bcf	status,0,c
 28915  0164F8  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 28916  0164FA  3203               	rrcf	i2___lwdiv@divisor,f,c
 28917  0164FC  2E07               	decfsz	i2___lwdiv@counter,f,c
 28918  0164FE  D7ED               	goto	i2l8834
 28919  016500                     i2l1991:
 28920  016500  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 28921  016504  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 28922  016508  0012               	return		;funcret
 28923  01650A                     __end_ofi2___lwdiv:
 28924                           	opt stack 0
 28925                           pclatu	equ	0xFFB
 28926                           pclath	equ	0xFFA
 28927                           tblptru	equ	0xFF8
 28928                           tblptrh	equ	0xFF7
 28929                           tblptrl	equ	0xFF6
 28930                           tablat	equ	0xFF5
 28931                           prodh	equ	0xFF4
 28932                           prodl	equ	0xFF3
 28933                           intcon	equ	0xFF2
 28934                           intcon2	equ	0xFF1
 28935                           postinc0	equ	0xFEE
 28936                           fsr0h	equ	0xFEA
 28937                           fsr0l	equ	0xFE9
 28938                           wreg	equ	0xFE8
 28939                           indf1	equ	0xFE7
 28940                           postinc1	equ	0xFE6
 28941                           postdec1	equ	0xFE5
 28942                           fsr1h	equ	0xFE2
 28943                           fsr1l	equ	0xFE1
 28944                           indf2	equ	0xFDF
 28945                           postinc2	equ	0xFDE
 28946                           postdec2	equ	0xFDD
 28947                           plusw2	equ	0xFDB
 28948                           fsr2h	equ	0xFDA
 28949                           fsr2l	equ	0xFD9
 28950                           status	equ	0xFD8
 28951                           
 28952 ;; *************** function i2___awdiv *****************
 28953 ;; Defined at:
 28954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 28955 ;; Parameters:    Size  Location     Type
 28956 ;;  dividend        2    0[COMRAM] int 
 28957 ;;  divisor         2    2[COMRAM] int 
 28958 ;; Auto vars:     Size  Location     Type
 28959 ;;  __awdiv         2    6[COMRAM] int 
 28960 ;;  __awdiv         1    5[COMRAM] unsigned char 
 28961 ;;  __awdiv         1    4[COMRAM] unsigned char 
 28962 ;; Return value:  Size  Location     Type
 28963 ;;                  2    0[COMRAM] int 
 28964 ;; Registers used:
 28965 ;;		wreg, status,2, status,0
 28966 ;; Tracked objects:
 28967 ;;		On entry : 0/0
 28968 ;;		On exit  : 0/0
 28969 ;;		Unchanged: 0/0
 28970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28975 ;;Total ram usage:        8 bytes
 28976 ;; Hardware stack levels used:    1
 28977 ;; This function calls:
 28978 ;;		Nothing
 28979 ;; This function is called by:
 28980 ;;		_LED_indicator
 28981 ;; This function uses a non-reentrant model
 28982 ;;
 28983                           
 28984                           	psect	text127
 28985  015D44                     __ptext127:
 28986                           	opt stack 0
 28987  015D44                     i2___awdiv:
 28988                           	opt stack 19
 28989                           
 28990                           ;incstack = 0
 28991  015D44  0E00               	movlw	0
 28992  015D46  6E06               	movwf	i2___awdiv@sign,c
 28993  015D48  AE04               	btfss	i2___awdiv@divisor+1,7,c
 28994  015D4A  D006               	goto	i2l8766
 28995  015D4C  6C03               	negf	i2___awdiv@divisor,c
 28996  015D4E  1E04               	comf	i2___awdiv@divisor+1,f,c
 28997  015D50  B0D8               	btfsc	status,0,c
 28998  015D52  2A04               	incf	i2___awdiv@divisor+1,f,c
 28999  015D54  0E01               	movlw	1
 29000  015D56  6E06               	movwf	i2___awdiv@sign,c
 29001  015D58                     i2l8766:
 29002  015D58  AE02               	btfss	i2___awdiv@dividend+1,7,c
 29003  015D5A  D006               	goto	i2l8772
 29004  015D5C  6C01               	negf	i2___awdiv@dividend,c
 29005  015D5E  1E02               	comf	i2___awdiv@dividend+1,f,c
 29006  015D60  B0D8               	btfsc	status,0,c
 29007  015D62  2A02               	incf	i2___awdiv@dividend+1,f,c
 29008  015D64  0E01               	movlw	1
 29009  015D66  1A06               	xorwf	i2___awdiv@sign,f,c
 29010  015D68                     i2l8772:
 29011  015D68  0E00               	movlw	0
 29012  015D6A  6E08               	movwf	i2___awdiv@quotient+1,c
 29013  015D6C  0E00               	movlw	0
 29014  015D6E  6E07               	movwf	i2___awdiv@quotient,c
 29015  015D70  5003               	movf	i2___awdiv@divisor,w,c
 29016  015D72  1004               	iorwf	i2___awdiv@divisor+1,w,c
 29017  015D74  B4D8               	btfsc	status,2,c
 29018  015D76  D01C               	goto	i2l8794
 29019  015D78  0E01               	movlw	1
 29020  015D7A  6E05               	movwf	i2___awdiv@counter,c
 29021  015D7C  D004               	goto	i2l8780
 29022  015D7E                     i2l8778:
 29023  015D7E  90D8               	bcf	status,0,c
 29024  015D80  3603               	rlcf	i2___awdiv@divisor,f,c
 29025  015D82  3604               	rlcf	i2___awdiv@divisor+1,f,c
 29026  015D84  2A05               	incf	i2___awdiv@counter,f,c
 29027  015D86                     i2l8780:
 29028  015D86  AE04               	btfss	i2___awdiv@divisor+1,7,c
 29029  015D88  D7FA               	goto	i2l8778
 29030  015D8A                     i2l8782:
 29031  015D8A  90D8               	bcf	status,0,c
 29032  015D8C  3607               	rlcf	i2___awdiv@quotient,f,c
 29033  015D8E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 29034  015D90  5003               	movf	i2___awdiv@divisor,w,c
 29035  015D92  5C01               	subwf	i2___awdiv@dividend,w,c
 29036  015D94  5004               	movf	i2___awdiv@divisor+1,w,c
 29037  015D96  5802               	subwfb	i2___awdiv@dividend+1,w,c
 29038  015D98  A0D8               	btfss	status,0,c
 29039  015D9A  D005               	goto	i2l8790
 29040  015D9C  5003               	movf	i2___awdiv@divisor,w,c
 29041  015D9E  5E01               	subwf	i2___awdiv@dividend,f,c
 29042  015DA0  5004               	movf	i2___awdiv@divisor+1,w,c
 29043  015DA2  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 29044  015DA4  8007               	bsf	i2___awdiv@quotient,0,c
 29045  015DA6                     i2l8790:
 29046  015DA6  90D8               	bcf	status,0,c
 29047  015DA8  3204               	rrcf	i2___awdiv@divisor+1,f,c
 29048  015DAA  3203               	rrcf	i2___awdiv@divisor,f,c
 29049  015DAC  2E05               	decfsz	i2___awdiv@counter,f,c
 29050  015DAE  D7ED               	goto	i2l8782
 29051  015DB0                     i2l8794:
 29052  015DB0  5006               	movf	i2___awdiv@sign,w,c
 29053  015DB2  B4D8               	btfsc	status,2,c
 29054  015DB4  D004               	goto	i2l8798
 29055  015DB6  6C07               	negf	i2___awdiv@quotient,c
 29056  015DB8  1E08               	comf	i2___awdiv@quotient+1,f,c
 29057  015DBA  B0D8               	btfsc	status,0,c
 29058  015DBC  2A08               	incf	i2___awdiv@quotient+1,f,c
 29059  015DBE                     i2l8798:
 29060  015DBE  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 29061  015DC2  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 29062  015DC6  0012               	return	
 29063  015DC8                     __end_ofi2___awdiv:
 29064                           	opt stack 0
 29065                           pclatu	equ	0xFFB
 29066                           pclath	equ	0xFFA
 29067                           tblptru	equ	0xFF8
 29068                           tblptrh	equ	0xFF7
 29069                           tblptrl	equ	0xFF6
 29070                           tablat	equ	0xFF5
 29071                           prodh	equ	0xFF4
 29072                           prodl	equ	0xFF3
 29073                           intcon	equ	0xFF2
 29074                           intcon2	equ	0xFF1
 29075                           postinc0	equ	0xFEE
 29076                           fsr0h	equ	0xFEA
 29077                           fsr0l	equ	0xFE9
 29078                           wreg	equ	0xFE8
 29079                           indf1	equ	0xFE7
 29080                           postinc1	equ	0xFE6
 29081                           postdec1	equ	0xFE5
 29082                           fsr1h	equ	0xFE2
 29083                           fsr1l	equ	0xFE1
 29084                           indf2	equ	0xFDF
 29085                           postinc2	equ	0xFDE
 29086                           postdec2	equ	0xFDD
 29087                           plusw2	equ	0xFDB
 29088                           fsr2h	equ	0xFDA
 29089                           fsr2l	equ	0xFD9
 29090                           status	equ	0xFD8
 29091                           
 29092 ;; *************** function i2_LED_OUT *****************
 29093 ;; Defined at:
 29094 ;;		line 129 in file "tasks.h"
 29095 ;; Parameters:    Size  Location     Type
 29096 ;;  b               1    wreg     unsigned char 
 29097 ;;  value           1    0[COMRAM] unsigned char 
 29098 ;; Auto vars:     Size  Location     Type
 29099 ;;  b               1    1[COMRAM] unsigned char 
 29100 ;; Return value:  Size  Location     Type
 29101 ;;		None               void
 29102 ;; Registers used:
 29103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29104 ;; Tracked objects:
 29105 ;;		On entry : 0/0
 29106 ;;		On exit  : 0/0
 29107 ;;		Unchanged: 0/0
 29108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29113 ;;Total ram usage:        2 bytes
 29114 ;; Hardware stack levels used:    1
 29115 ;; This function calls:
 29116 ;;		Nothing
 29117 ;; This function is called by:
 29118 ;;		_LED_indicator
 29119 ;; This function uses a non-reentrant model
 29120 ;;
 29121                           
 29122                           	psect	text128
 29123  0161DE                     __ptext128:
 29124                           	opt stack 0
 29125  0161DE                     i2_LED_OUT:
 29126                           	opt stack 19
 29127                           
 29128                           ;incstack = 0
 29129                           ;i2LED_OUT@b stored from wreg
 29130  0161DE  6E02               	movwf	i2LED_OUT@b,c
 29131                           
 29132                           ;tasks.h: 130: port[b].flag.led_flag = value;
 29133  0161E0  5002               	movf	i2LED_OUT@b,w,c
 29134  0161E2  0D17               	mullw	23
 29135  0161E4  0E16               	movlw	22
 29136  0161E6  26F3               	addwf	prodl,f,c
 29137  0161E8  0E00               	movlw	0
 29138  0161EA  22F4               	addwfc	prodh,f,c
 29139  0161EC  0E2B               	movlw	low _port
 29140  0161EE  24F3               	addwf	prodl,w,c
 29141  0161F0  6ED9               	movwf	fsr2l,c
 29142  0161F2  0E01               	movlw	high _port
 29143  0161F4  20F4               	addwfc	prodh,w,c
 29144  0161F6  6EDA               	movwf	fsr2h,c
 29145  0161F8  B001               	btfsc	i2LED_OUT@value,0,c
 29146  0161FA  D003               	bra	i2u929_45
 29147  0161FC  0101               	movlb	1	; () banked
 29148  0161FE  96DF               	bcf	indf2,3,c
 29149  016200  D002               	bra	i2u929_46
 29150  016202                     i2u929_45:
 29151  016202  0101               	movlb	1	; () banked
 29152  016204  86DF               	bsf	indf2,3,c
 29153  016206                     i2u929_46:
 29154                           
 29155                           ;tasks.h: 131: switch (b) {
 29156  016206  D012               	goto	i2l8756
 29157  016208                     i2l697:
 29158                           
 29159                           ;tasks.h: 133: LATB7 = value;
 29160  016208  A001               	btfss	i2LED_OUT@value,0,c
 29161  01620A  D002               	goto	i2u930_40
 29162  01620C  8E8A               	bsf	3978,7,c	;volatile
 29163  01620E  0012               	return	
 29164  016210                     i2u930_40:
 29165  016210  9E8A               	bcf	3978,7,c	;volatile
 29166                           
 29167                           ;tasks.h: 134: break;
 29168  016212  0012               	return	
 29169  016214                     i2l699:
 29170                           
 29171                           ;tasks.h: 136: LATB6 = value;
 29172  016214  A001               	btfss	i2LED_OUT@value,0,c
 29173  016216  D002               	goto	i2u932_40
 29174  016218  8C8A               	bsf	3978,6,c	;volatile
 29175  01621A  0012               	return	
 29176  01621C                     i2u932_40:
 29177  01621C  9C8A               	bcf	3978,6,c	;volatile
 29178                           
 29179                           ;tasks.h: 137: break;
 29180  01621E  0012               	return	
 29181  016220                     i2l700:
 29182                           
 29183                           ;tasks.h: 139: LATC2 = value;
 29184  016220  A001               	btfss	i2LED_OUT@value,0,c
 29185  016222  D002               	goto	i2u934_40
 29186  016224  848B               	bsf	3979,2,c	;volatile
 29187  016226  0012               	return	
 29188  016228                     i2u934_40:
 29189  016228  948B               	bcf	3979,2,c	;volatile
 29190                           
 29191                           ;tasks.h: 141: }
 29192                           
 29193                           ;tasks.h: 140: break;
 29194  01622A  0012               	return	
 29195  01622C                     i2l8756:
 29196  01622C  5002               	movf	i2LED_OUT@b,w,c
 29197                           
 29198                           ; Switch size 1, requested type "space"
 29199                           ; Number of cases is 3, Range of values is 0 to 2
 29200                           ; switch strategies available:
 29201                           ; Name         Instructions Cycles
 29202                           ; simple_byte           10     6 (average)
 29203                           ;	Chosen strategy is simple_byte
 29204  01622E  0A00               	xorlw	0	; case 0
 29205  016230  B4D8               	btfsc	status,2,c
 29206  016232  D7EA               	goto	i2l697
 29207  016234  0A01               	xorlw	1	; case 1
 29208  016236  B4D8               	btfsc	status,2,c
 29209  016238  D7ED               	goto	i2l699
 29210  01623A  0A03               	xorlw	3	; case 2
 29211  01623C  A4D8               	btfss	status,2,c
 29212  01623E  0012               	return	
 29213  016240  D7EF               	goto	i2l700
 29214  016242                     __end_ofi2_LED_OUT:
 29215                           	opt stack 0
 29216                           pclatu	equ	0xFFB
 29217                           pclath	equ	0xFFA
 29218                           tblptru	equ	0xFF8
 29219                           tblptrh	equ	0xFF7
 29220                           tblptrl	equ	0xFF6
 29221                           tablat	equ	0xFF5
 29222                           prodh	equ	0xFF4
 29223                           prodl	equ	0xFF3
 29224                           intcon	equ	0xFF2
 29225                           intcon2	equ	0xFF1
 29226                           postinc0	equ	0xFEE
 29227                           fsr0h	equ	0xFEA
 29228                           fsr0l	equ	0xFE9
 29229                           wreg	equ	0xFE8
 29230                           indf1	equ	0xFE7
 29231                           postinc1	equ	0xFE6
 29232                           postdec1	equ	0xFE5
 29233                           fsr1h	equ	0xFE2
 29234                           fsr1l	equ	0xFE1
 29235                           indf2	equ	0xFDF
 29236                           postinc2	equ	0xFDE
 29237                           postdec2	equ	0xFDD
 29238                           plusw2	equ	0xFDB
 29239                           fsr2h	equ	0xFDA
 29240                           fsr2l	equ	0xFD9
 29241                           status	equ	0xFD8
 29242                           pclatu	equ	0xFFB
 29243                           pclath	equ	0xFFA
 29244                           tblptru	equ	0xFF8
 29245                           tblptrh	equ	0xFF7
 29246                           tblptrl	equ	0xFF6
 29247                           tablat	equ	0xFF5
 29248                           prodh	equ	0xFF4
 29249                           prodl	equ	0xFF3
 29250                           intcon	equ	0xFF2
 29251                           intcon2	equ	0xFF1
 29252                           postinc0	equ	0xFEE
 29253                           fsr0h	equ	0xFEA
 29254                           fsr0l	equ	0xFE9
 29255                           wreg	equ	0xFE8
 29256                           indf1	equ	0xFE7
 29257                           postinc1	equ	0xFE6
 29258                           postdec1	equ	0xFE5
 29259                           fsr1h	equ	0xFE2
 29260                           fsr1l	equ	0xFE1
 29261                           indf2	equ	0xFDF
 29262                           postinc2	equ	0xFDE
 29263                           postdec2	equ	0xFDD
 29264                           plusw2	equ	0xFDB
 29265                           fsr2h	equ	0xFDA
 29266                           fsr2l	equ	0xFD9
 29267                           status	equ	0xFD8
 29268                           
 29269                           	psect	rparam
 29270  0000                     pclatu	equ	0xFFB
 29271                           pclath	equ	0xFFA
 29272                           tblptru	equ	0xFF8
 29273                           tblptrh	equ	0xFF7
 29274                           tblptrl	equ	0xFF6
 29275                           tablat	equ	0xFF5
 29276                           prodh	equ	0xFF4
 29277                           prodl	equ	0xFF3
 29278                           intcon	equ	0xFF2
 29279                           intcon2	equ	0xFF1
 29280                           postinc0	equ	0xFEE
 29281                           fsr0h	equ	0xFEA
 29282                           fsr0l	equ	0xFE9
 29283                           wreg	equ	0xFE8
 29284                           indf1	equ	0xFE7
 29285                           postinc1	equ	0xFE6
 29286                           postdec1	equ	0xFE5
 29287                           fsr1h	equ	0xFE2
 29288                           fsr1l	equ	0xFE1
 29289                           indf2	equ	0xFDF
 29290                           postinc2	equ	0xFDE
 29291                           postdec2	equ	0xFDD
 29292                           plusw2	equ	0xFDB
 29293                           fsr2h	equ	0xFDA
 29294                           fsr2l	equ	0xFD9
 29295                           status	equ	0xFD8
 29296                           
 29297                           	psect	temp
 29298  000059                     btemp:
 29299                           	opt stack 0
 29300  000059                     	ds	1
 29301  0000                     int$flags	set	btemp
 29302                           pclatu	equ	0xFFB
 29303                           pclath	equ	0xFFA
 29304                           tblptru	equ	0xFF8
 29305                           tblptrh	equ	0xFF7
 29306                           tblptrl	equ	0xFF6
 29307                           tablat	equ	0xFF5
 29308                           prodh	equ	0xFF4
 29309                           prodl	equ	0xFF3
 29310                           intcon	equ	0xFF2
 29311                           intcon2	equ	0xFF1
 29312                           postinc0	equ	0xFEE
 29313                           fsr0h	equ	0xFEA
 29314                           fsr0l	equ	0xFE9
 29315                           wreg	equ	0xFE8
 29316                           indf1	equ	0xFE7
 29317                           postinc1	equ	0xFE6
 29318                           postdec1	equ	0xFE5
 29319                           fsr1h	equ	0xFE2
 29320                           fsr1l	equ	0xFE1
 29321                           indf2	equ	0xFDF
 29322                           postinc2	equ	0xFDE
 29323                           postdec2	equ	0xFDD
 29324                           plusw2	equ	0xFDB
 29325                           fsr2h	equ	0xFDA
 29326                           fsr2l	equ	0xFD9
 29327                           status	equ	0xFD8


Data Sizes:
    Strings     1090
    Constant    239
    Data        3
    BSS         2574
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160    129     160
    BANK1           256      6     154
    BANK2           256      0     254
    BANK3           256    105     205
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          192      0       0
    BANK14          176      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    command_operation@op3	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op3(BANK2[20]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_101(CODE[7]), weekday_3char(CODE[28]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_5(CODE[37]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 30
		 -> print_time@str(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3972_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3972_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3972_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3972_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK2[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2705$pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0
		 -> Absolute function(), 

    S2695$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2695$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2671$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2671$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2671$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2671$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    get_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    put_string_usb@s	PTR unsigned char  size(2) Largest target is 1
		 -> USB_loop@data(BANK0[1]), 

    command_operation@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_operation@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_operation@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    command_operation@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_get_data@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    usb_rx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    usb_tx.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    command_time@op2	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    command_time@op1	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op1(BANK2[20]), 

    command_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    command_time@op0	PTR unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op0(BANK2[20]), 

    command_at_hand@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    command_at_hand@hand	PTR unsigned char  size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    print_time@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    my_terminal_loop@tx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    my_terminal_loop@rx	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_rx(BANK2[8]), 

    F9615.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    RTCC_adjust_time_button@cnt_dec	PTR struct button size(2) Largest target is 69
		 -> port(BANK1[69]), 

    RTCC_adjust_time_button@cnt_inc	PTR struct button size(2) Largest target is 69
		 -> port(BANK1[69]), 

    RTCC_adjust_time_button@mode	PTR struct button size(2) Largest target is 4
		 -> ctmu_m(BANK1[4]), 

    RTCC_adjust_time_dec@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_dec@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_adjust_time_inc@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_adjust_time_inc@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    display_time_1602@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    display_time_1602@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    my_strcmp@str2	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_98(CODE[2]), STR_97(CODE[11]), STR_96(CODE[3]), STR_95(CODE[16]), 
		 -> STR_94(CODE[3]), STR_93(CODE[19]), STR_92(CODE[2]), STR_91(CODE[8]), 
		 -> STR_90(CODE[2]), STR_89(CODE[6]), STR_88(CODE[3]), STR_87(CODE[16]), 
		 -> STR_86(CODE[3]), STR_85(CODE[19]), STR_84(CODE[2]), STR_83(CODE[8]), 
		 -> STR_82(CODE[2]), STR_81(CODE[7]), STR_80(CODE[3]), STR_79(CODE[16]), 
		 -> STR_78(CODE[3]), STR_77(CODE[19]), STR_76(CODE[2]), STR_75(CODE[8]), 
		 -> STR_74(CODE[2]), STR_73(CODE[5]), STR_72(CODE[2]), STR_71(CODE[8]), 
		 -> STR_69(CODE[2]), STR_68(CODE[6]), STR_65(CODE[5]), STR_64(CODE[11]), 
		 -> STR_63(CODE[6]), STR_62(CODE[9]), STR_61(CODE[9]), STR_60(CODE[10]), 
		 -> STR_59(CODE[4]), STR_58(CODE[9]), STR_56(CODE[2]), STR_55(CODE[5]), 
		 -> STR_22(CODE[7]), STR_21(CODE[2]), STR_20(CODE[7]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[2]), STR_16(CODE[4]), STR_15(CODE[2]), 
		 -> STR_14(CODE[6]), STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[12]), STR_9(CODE[3]), STR_8(CODE[2]), STR_7(CODE[11]), 

    my_strcmp@str1	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), my_terminal_loop@op1(BANK2[20]), my_terminal_loop@op0(BANK2[20]), 

    my_atoi@str	PTR const unsigned char  size(2) Largest target is 20
		 -> my_terminal_loop@op2(BANK2[20]), 

    my_utoa@str	PTR unsigned char  size(2) Largest target is 10
		 -> command_get_data@str(BANK0[10]), display_LCD@str(BANK0[10]), print_time_dec@str(COMRAM[10]), display_dec@str(BANK0[10]), 

    RTCC_from_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_from_RTCC@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    RTCC_from_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    caltime_to_epoch@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_epoch@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    epoch_to_caltime@ep	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_now(BANK0[4]), 

    caltime_to_RTCC@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    RTCC_to_caltime@ct	PTR struct . size(2) Largest target is 7
		 -> caltime_now(BANK1[7]), 

    get_quot_rem@quot	PTR unsigned long  size(2) Largest target is 4
		 -> epoch_to_caltime@num(BANK0[4]), 

    I2C_LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_100(CODE[9]), STR_99(CODE[17]), STR_45(CODE[14]), STR_44(CODE[8]), 
		 -> STR_43(CODE[7]), STR_42(CODE[12]), STR_41(CODE[13]), STR_40(CODE[16]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), STR_37(CODE[16]), STR_36(CODE[2]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[4]), 
		 -> display_LCD@str(BANK0[10]), STR_31(CODE[15]), STR_30(CODE[13]), STR_29(CODE[17]), 
		 -> STR_28(CODE[11]), STR_27(CODE[11]), STR_26(CODE[12]), STR_25(CODE[12]), 
		 -> STR_24(CODE[10]), STR_23(CODE[10]), weekday_3char(CODE[28]), STR_1(CODE[3]), 
		 -> display_dec@str(BANK0[10]), 

    button_timer_interrupt@bt	PTR struct button size(2) Largest target is 69
		 -> ctmu_m(BANK1[4]), port(BANK1[69]), 

    delay_set@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    delay_timer_interrupt@d	PTR struct Delay size(2) Largest target is 3
		 -> delay_display(COMRAM[3]), 

    rx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    tx_buf.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_delete@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_delete@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_backspace@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_backspace@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> my_terminal_loop@command(BANK1[8]), 

    ringbuf_pop@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_pop@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), my_terminal_loop@command(BANK1[8]), tx_buf(BANK1[8]), 

    ringbuf_put_str@str	PTR const unsigned char  size(2) Largest target is 490
		 -> STR_70(CODE[18]), STR_67(CODE[36]), STR_66(CODE[24]), STR_57(CODE[490]), 
		 -> STR_54(CODE[2]), STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[3]), 
		 -> command_get_data@str(BANK0[10]), STR_50(CODE[2]), STR_49(CODE[5]), STR_48(CODE[2]), 
		 -> STR_47(CODE[3]), STR_46(CODE[2]), STR_6(CODE[8]), print_time@str(BANK0[30]), 
		 -> STR_4(CODE[3]), print_time_dec@str(COMRAM[10]), STR_3(CODE[4]), STR_2(CODE[4]), 

    ringbuf_put_str@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), 

    ringbuf_put@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_put@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK1[8]), 

    ringbuf_num@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_num@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), my_terminal_loop@command(BANK1[8]), rx_buf(BANK2[8]), 
		 -> tx_buf(BANK1[8]), 

    S790ringbuf$buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_init@rb.buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_init@internal_buf	PTR unsigned char  size(2) Largest target is 2000
		 -> main_init@usbrx(BANK3[100]), main_init@usbtx(BIGRAMl[2000]), my_terminal_loop@buf(BANK3[100]), 

    ringbuf_init@rb	PTR struct ringbuf size(2) Largest target is 9
		 -> usb_tx(BANK2[8]), usb_rx(BANK2[8]), my_terminal_loop@command(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _integrating->i2___lldiv
    _USB_ISR->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _LED_indicator->i2___awdiv

Critical Paths under _main in BANK0

    _sleep_loop->_I2C_LCD_SetCursor
    _normal_mode_loop->_display_LCD
    _port_loop->_delay_set
    _display_LCD->_display_time_1602
    _display_time_1602->_display_dec
    _display_dec->_my_utoa
    _I2C_LCD_Putc->_I2C_Start
    _display_port->_I2C_LCD_SetCursor
    _I2C_LCD_SetCursor->_I2C_LCD_Command
    _I2C_LCD_Puts->_I2C_Start
    _RTCC_adjust_time_button->_RTCC_adjust_time_dec
    _RTCC_adjust_time_button->_RTCC_adjust_time_inc
    _RTCC_adjust_time_inc->_RTCC_from_epoch
    _RTCC_adjust_time_dec->_RTCC_from_epoch
    _RTCC_from_epoch->_epoch_to_caltime
    _Auto_cut->___wmul
    _my_terminal_loop->_command_operation
    _ringbuf_backspace->_ringbuf_num
    _command_operation->_command_time
    _ctmu_set_ratio->___lwdiv
    _command_time->_command_at_hand
    _my_atoi->___wmul
    _command_at_hand->_print_time
    _print_time->_sprintf
    _sprintf->___lwdiv
    ___wmul->_CTMU_read
    _RTCC_from_caltime->_epoch_to_caltime
    _epoch_to_caltime->_get_quot_rem
    _get_quot_rem->___lmul
    _caltime_to_RTCC->_d_to_x
    _d_to_x->___awdiv
    _command_get_data->_ringbuf_put_num
    _ringbuf_put_str->_ringbuf_put
    _ringbuf_put_num->_ringbuf_put
    _my_utoa->___lwdiv
    ___llmod->___lldiv
    _USB_init->_USBDeviceInit
    _USBDeviceInit->_memset
    _I2C_LCD_init->_I2C_LCD_Clear
    _I2C_LCD_Clear->_I2C_LCD_Command
    _I2C_LCD_Command->_I2C_Start
    _I2C_Stop->_I2C_IdleCheck
    _I2C_Start->_I2C_IdleCheck
    _I2C_Send->_I2C_IdleCheck
    _ctmu_loop->_button_timer_interrupt
    _button_timer_interrupt->___lwdiv
    ___lwdiv->___wmul
    _CTMU_read->___lldiv
    _USB_loop->_ringbuf_put
    _ringbuf_put->___lwdiv
    _ringbuf_pop->_ringbuf_num
    _put_string_usb->_CDCTxService
    _get_string_usb->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _RTCC_loop->_RTCC_from_RTCC
    _RTCC_from_RTCC->_caltime_to_epoch
    _caltime_to_epoch->___lmul
    _month_length->___awmod
    ___lmul->___lldiv
    _RTCC_to_caltime->_x_to_d

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_my_terminal_loop

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  506866
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                          _RTCC_loop
                           _USB_loop
                          _ctmu_loop
                     _ctmu_set_ratio
                          _delay_set
                          _main_init
                   _my_terminal_loop
                   _normal_mode_loop
                         _sleep_loop
 ---------------------------------------------------------------------------------
 (1) _sleep_loop                                           1     1      0    9842
                                             10 BANK0      1     1      0
                                _ADC
                      _I2C_LCD_Clear
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            _LED_OUT
                                _OUT
 ---------------------------------------------------------------------------------
 (1) _normal_mode_loop                                     0     0      0  131072
                           _Auto_cut
            _RTCC_adjust_time_button
                        _display_LCD
                          _port_loop
 ---------------------------------------------------------------------------------
 (2) _port_loop                                            1     1      0    4726
                                              4 BANK0      1     1      0
                            _LED_OUT
                                _OUT
                          _delay_set
 ---------------------------------------------------------------------------------
 (3) _delay_set                                            4     0      4    1757
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LED_OUT                                              2     1      1    1121
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _display_LCD                                         14    14      0   69839
                                             60 BANK0     14    14      0
                      _I2C_LCD_Clear
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                       _display_port
                  _display_time_1602
                            _my_utoa
 ---------------------------------------------------------------------------------
 (3) _display_time_1602                                    5     1      4   31778
                                             55 BANK0      5     1      4
                       _I2C_LCD_Putc
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
                     _RTCC_from_RTCC
                        _display_dec
 ---------------------------------------------------------------------------------
 (4) _display_dec                                         12    11      1   16308
                                             43 BANK0     12    11      1
                       _I2C_LCD_Puts
                            _my_utoa
 ---------------------------------------------------------------------------------
 (4) _I2C_LCD_Putc                                         2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _display_port                                         0     0      0    7291
                       _I2C_LCD_Puts
                  _I2C_LCD_SetCursor
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_SetCursor                                    4     3      1    3054
                                              6 BANK0      4     3      1
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Puts                                         5     3      2    4237
                                              4 BANK0      5     3      2
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _RTCC_adjust_time_button                              6     0      6   47211
                                             63 BANK0      6     0      6
            _RTCC_adjust_time_cursor
               _RTCC_adjust_time_dec
               _RTCC_adjust_time_inc
            _RTCC_adjust_time_toggle
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_toggle                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_inc                                10     6      4   23279
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_dec                                10     6      4   23279
                                             53 BANK0     10     6      4
                     _RTCC_from_RTCC
                    _RTCC_from_epoch
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_epoch                                      4     0      4   11213
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (3) _RTCC_adjust_time_cursor                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Auto_cut                                             3     3      0    9296
                                             28 BANK0      3     3      0
                                _ADC
                                 _IN
                                _OUT
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OUT                                                  2     1      1     602
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _IN                                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  4     2      2      31
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _my_terminal_loop                                   111   107      4  294933
                                              0 BANK1      6     2      4
                                              0 BANK3    105   105      0
                  _command_operation
                  _ringbuf_backspace
                     _ringbuf_delete
                       _ringbuf_init
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_delete                                       2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ringbuf_backspace                                    6     4      2    1308
                                              8 BANK0      6     4      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _command_operation                                   11     1     10  260367
                                            118 BANK0     11     1     10
                   _command_get_data
                       _command_time
                     _ctmu_set_ratio
                            _my_atoi
                          _my_strcmp
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (3) _ctmu_set_ratio                                       1     1      0   15366
                                             35 BANK0      1     1      0
                          _CTMU_read
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _command_time                                         9     1      8  123225
                                            109 BANK0      9     1      8
                    _command_at_hand
                       _month_length
                            _my_atoi
                          _my_strcmp
                         _print_time
 ---------------------------------------------------------------------------------
 (3) _my_strcmp                                            5     1      4   11902
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _my_atoi                                              8     6      2    9242
                                             28 BANK0      8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _command_at_hand                                      7     0      7   63911
                                            102 BANK0      7     0      7
                  _RTCC_from_caltime
                            _my_atoi (ARG)
                         _print_time
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (3) _print_time                                          32    30      2   34642
                                             70 BANK0     32    30      2
                     _RTCC_from_RTCC
                    _ringbuf_put_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             39    21     18   17200
                                             35 BANK0     35    17     18
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    8316
                                             22 BANK0      6     2      4
                                _ADC (ARG)
                          _CTMU_read (ARG)
                                 _IN (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_from_caltime                                    4     0      4   15949
                                             49 BANK0      4     0      4
                    _caltime_to_RTCC
                   _caltime_to_epoch
                   _epoch_to_caltime
 ---------------------------------------------------------------------------------
 (5) _epoch_to_caltime                                    16    12      4    9218
                                             33 BANK0     16    12      4
                       _get_quot_rem
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _get_quot_rem                                         8     4      4    5648
                                             25 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _caltime_to_RTCC                                      2     0      2    1278
                                              9 BANK0      2     0      2
                             _d_to_x
 ---------------------------------------------------------------------------------
 (6) _d_to_x                                               1     1      0     853
                                              8 BANK0      1     1      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     791
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _command_get_data                                    18    14      4   53624
                                             50 BANK0     18    14      4
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                            _my_utoa
                        _ringbuf_put
                    _ringbuf_put_num
                    _ringbuf_put_str
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_str                                      4     0      4    9952
                                             42 BANK0      4     0      4
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (2) _ringbuf_put_num                                      8     3      5   12810
                                             42 BANK0      8     3      5
                            ___lwdiv
                            ___lwmod
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _my_utoa                                              8     3      5   10577
                                             35 BANK0      8     3      5
                            ___lldiv (ARG)
                            ___llmod (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    2728
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1688
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _main_init                                            0     0      0    4377
                           _ADC_init
                          _CTMU_init
                       _I2C_LCD_init
                           _I2C_init
                          _RTCC_init
                           _USB_init
                       _ringbuf_init
                        _timer0_init
                        _timer1_init
                        _timer3_init
 ---------------------------------------------------------------------------------
 (2) _timer3_init                                          2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          3     2      1     197
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _timer0_init                                          2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ringbuf_init                                         6     0      6    1122
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _USB_init                                             0     0      0    1361
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (3) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RTCC_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_init                                         0     0      0    1573
                           _Delay_ms
                      _I2C_LCD_Clear
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_Clear                                        1     1      0     667
                                              6 BANK0      1     1      0
                    _I2C_LCD_Command
 ---------------------------------------------------------------------------------
 (3) _I2C_LCD_Command                                      2     2      0     667
                                              4 BANK0      2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0      31
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            2     1      1     509
                                              2 BANK0      2     1      1
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      62
                                              2 BANK0      1     1      0
                      _I2C_IdleCheck
 ---------------------------------------------------------------------------------
 (5) _I2C_IdleCheck                                        2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             3     1      2     239
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _CTMU_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ctmu_loop                                            0     0      0    8452
                          _CTMU_read
                            ___lwdiv
             _button_timer_interrupt
 ---------------------------------------------------------------------------------
 (2) _button_timer_interrupt                               5     2      3    1526
                                             35 BANK0      5     2      3
                          _CTMU_read (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    4123
                                             28 BANK0      7     3      4
                          _CTMU_read (ARG)
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _CTMU_read                                            9     7      2    2803
                                             13 BANK0      9     7      2
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    2667
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _USB_loop                                             3     3      0   15804
                                             42 BANK0      3     3      0
                     _get_string_usb
                     _put_string_usb
                        _ringbuf_num
                        _ringbuf_pop
                        _ringbuf_put
 ---------------------------------------------------------------------------------
 (3) _ringbuf_put                                          7     4      3    5072
                                             35 BANK0      7     4      3
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (2) _ringbuf_pop                                          7     5      2    2028
                                              8 BANK0      7     5      2
                        _ringbuf_num
 ---------------------------------------------------------------------------------
 (4) _ringbuf_num                                          8     6      2    1049
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _put_string_usb                                       4     0      4    2741
                                             12 BANK0      4     0      4
                       _CDCTxService
                   _is_usb_available
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_string_usb                                       7     3      4    4772
                                             13 BANK0      7     3      4
                       _CDCTxService
                       _getsUSBUSART
                   _is_usb_available
 ---------------------------------------------------------------------------------
 (3) _is_usb_available                                     1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _RTCC_loop                                            0     0      0    7025
                     _RTCC_from_RTCC
 ---------------------------------------------------------------------------------
 (4) _RTCC_from_RTCC                                       4     0      4    7025
                                             40 BANK0      4     0      4
                    _RTCC_to_caltime
                   _caltime_to_epoch
 ---------------------------------------------------------------------------------
 (5) _caltime_to_epoch                                    15    11      4    5090
                                             25 BANK0     15    11      4
                             ___lmul
                       _month_length
 ---------------------------------------------------------------------------------
 (6) _month_length                                         6     5      1    2179
                                              6 BANK0      6     5      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     849
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1960
                                             13 BANK0     12     4      8
                            ___lldiv (ARG)
                       _month_length (ARG)
 ---------------------------------------------------------------------------------
 (5) _RTCC_to_caltime                                      3     1      2     386
                                              2 BANK0      3     1      2
                             _x_to_d
 ---------------------------------------------------------------------------------
 (6) _x_to_d                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                14    14      0   30518
                                             30 COMRAM    14    14      0
                      _LED_indicator
                            _USB_ISR
                  _charge_time_count
              _delay_timer_interrupt
                        _integrating
 ---------------------------------------------------------------------------------
 (11) _integrating                                         3     3      0     348
                                             13 COMRAM     3     3      0
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (12) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _delay_timer_interrupt                               4     2      2     177
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _charge_time_count                                   3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USB_ISR                                             0     0      0   28817
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (12) _USBDeviceTasks                                      1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (13) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) _USBWakeFromSuspend                                  0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBSuspend                                          0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlEPService                                    3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfSetupHandler                              0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (15) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (16) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (14) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (16) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (16) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (13) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3835
                                             12 COMRAM     8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (14) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (15) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (16) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LED_indicator                                       4     4      0    1086
                                              8 COMRAM     4     4      0
                          i2_LED_OUT
                          i2___awdiv
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (12) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) i2_LED_OUT                                           2     1      1     210
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RTCC_from_RTCC
     _RTCC_to_caltime
       _x_to_d
     _caltime_to_epoch
       ___lmul
         ___lldiv (ARG)
         _month_length (ARG)
           ___awmod
       _month_length
         ___awmod
   _RTCC_from_epoch
     _caltime_to_RTCC
       _d_to_x
         ___awdiv
     _epoch_to_caltime
       _get_quot_rem
         ___lldiv
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
       _month_length
         ___awmod
   _RTCC_loop
     _RTCC_from_RTCC
       _RTCC_to_caltime
         _x_to_d
       _caltime_to_epoch
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
   _USB_loop
     _get_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _getsUSBUSART
         _USBTransferOnePacket
       _is_usb_available
     _put_string_usb
       _CDCTxService
         _USBTransferOnePacket
       _is_usb_available
       _putUSBUSART
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod (ARG)
       _ringbuf_num (ARG)
   _ctmu_loop
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _button_timer_interrupt
       _CTMU_read (ARG)
         ___lldiv
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
   _ctmu_set_ratio
     _CTMU_read
       ___lldiv
     ___lwdiv
       _CTMU_read (ARG)
         ___lldiv
       ___lwmod (ARG)
       ___wmul (ARG)
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     ___wmul
       _ADC (ARG)
       _CTMU_read (ARG)
         ___lldiv
       _IN (ARG)
   _delay_set
   _main_init
     _ADC_init
     _CTMU_init
     _I2C_LCD_init
       _Delay_ms
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_init
     _RTCC_init
     _USB_init
       _USBDeviceAttach
       _USBDeviceInit
         _memset
     _ringbuf_init
     _timer0_init
     _timer1_init
     _timer3_init
   _my_terminal_loop
     _command_operation
       _command_get_data
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod
         _my_utoa
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod (ARG)
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod (ARG)
           _ringbuf_num (ARG)
         _ringbuf_put_num
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
             _ringbuf_num (ARG)
         _ringbuf_put_str
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
             _ringbuf_num (ARG)
       _command_time
         _command_at_hand
           _RTCC_from_caltime
             _caltime_to_RTCC
               _d_to_x
                 ___awdiv
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
             _epoch_to_caltime
               _get_quot_rem
                 ___lldiv
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
               _month_length
                 ___awmod
           _my_atoi (ARG)
             ___wmul
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           _print_time (ARG)
             _RTCC_from_RTCC
               _RTCC_to_caltime
                 _x_to_d
               _caltime_to_epoch
                 ___lmul
                   ___lldiv (ARG)
                   _month_length (ARG)
                     ___awmod
                 _month_length
                   ___awmod
             _ringbuf_put_str
               _ringbuf_put
                 ___lwdiv (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   ___lwmod (ARG)
                   ___wmul (ARG)
                     _ADC (ARG)
                     _CTMU_read (ARG)
                       ___lldiv
                     _IN (ARG)
                 ___lwmod (ARG)
                 _ringbuf_num (ARG)
             _sprintf
               ___lwdiv
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   _IN (ARG)
               ___lwmod
               ___wmul
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
               _isdigit
           _ringbuf_put_str (ARG)
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   _IN (ARG)
               ___lwmod (ARG)
               _ringbuf_num (ARG)
         _month_length
           ___awmod
         _my_atoi
           ___wmul
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         _my_strcmp
         _print_time
           _RTCC_from_RTCC
             _RTCC_to_caltime
               _x_to_d
             _caltime_to_epoch
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
               _month_length
                 ___awmod
           _ringbuf_put_str
             _ringbuf_put
               ___lwdiv (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 ___lwmod (ARG)
                 ___wmul (ARG)
                   _ADC (ARG)
                   _CTMU_read (ARG)
                     ___lldiv
                   _IN (ARG)
               ___lwmod (ARG)
               _ringbuf_num (ARG)
           _sprintf
             ___lwdiv
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod
             ___wmul
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
             _isdigit
       _ctmu_set_ratio
         _CTMU_read
           ___lldiv
         ___lwdiv
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _my_atoi
         ___wmul
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       _my_strcmp
       _print_time
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _ringbuf_put_str
           _ringbuf_put
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
             _ringbuf_num (ARG)
         _sprintf
           ___lwdiv
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod
           ___wmul
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
           _isdigit
       _ringbuf_put_str
         _ringbuf_put
           ___lwdiv (ARG)
             _CTMU_read (ARG)
               ___lldiv
             ___lwmod (ARG)
             ___wmul (ARG)
               _ADC (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               _IN (ARG)
           ___lwmod (ARG)
           _ringbuf_num (ARG)
     _ringbuf_backspace
       _ringbuf_num
     _ringbuf_delete
     _ringbuf_init
     _ringbuf_num
     _ringbuf_pop
       _ringbuf_num
     _ringbuf_put
       ___lwdiv (ARG)
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod (ARG)
       _ringbuf_num (ARG)
     _ringbuf_put_num
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod (ARG)
         _ringbuf_num (ARG)
     _ringbuf_put_str
       _ringbuf_put
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod (ARG)
         _ringbuf_num (ARG)
   _normal_mode_loop
     _Auto_cut
       _ADC
       _IN
       _OUT
       ___wmul
         _ADC (ARG)
         _CTMU_read (ARG)
           ___lldiv
         _IN (ARG)
     _RTCC_adjust_time_button
       _RTCC_adjust_time_cursor
       _RTCC_adjust_time_dec
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_inc
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _RTCC_from_epoch
           _caltime_to_RTCC
             _d_to_x
               ___awdiv
           _epoch_to_caltime
             _get_quot_rem
               ___lldiv
               ___lmul
                 ___lldiv (ARG)
                 _month_length (ARG)
                   ___awmod
             _month_length
               ___awmod
         ___lmul
           ___lldiv (ARG)
           _month_length (ARG)
             ___awmod
         _month_length
           ___awmod
       _RTCC_adjust_time_toggle
     _display_LCD
       _I2C_LCD_Clear
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       _I2C_LCD_Putc
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_Puts
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
       _I2C_LCD_SetCursor
         _I2C_LCD_Command
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lwdiv
         _CTMU_read (ARG)
           ___lldiv
         ___lwmod (ARG)
         ___wmul (ARG)
           _ADC (ARG)
           _CTMU_read (ARG)
             ___lldiv
           _IN (ARG)
       ___lwmod
       _display_port
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
       _display_time_1602
         _I2C_LCD_Putc
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_Puts
           _I2C_Send
             _I2C_IdleCheck
           _I2C_Start
             _I2C_IdleCheck
           _I2C_Stop
             _I2C_IdleCheck
         _I2C_LCD_SetCursor
           _I2C_LCD_Command
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
         _RTCC_from_RTCC
           _RTCC_to_caltime
             _x_to_d
           _caltime_to_epoch
             ___lmul
               ___lldiv (ARG)
               _month_length (ARG)
                 ___awmod
             _month_length
               ___awmod
         _display_dec
           _I2C_LCD_Puts
             _I2C_Send
               _I2C_IdleCheck
             _I2C_Start
               _I2C_IdleCheck
             _I2C_Stop
               _I2C_IdleCheck
           _my_utoa
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lwdiv (ARG)
               _CTMU_read (ARG)
                 ___lldiv
               ___lwmod (ARG)
               ___wmul (ARG)
                 _ADC (ARG)
                 _CTMU_read (ARG)
                   ___lldiv
                 _IN (ARG)
             ___lwmod (ARG)
       _my_utoa
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___lwdiv (ARG)
           _CTMU_read (ARG)
             ___lldiv
           ___lwmod (ARG)
           ___wmul (ARG)
             _ADC (ARG)
             _CTMU_read (ARG)
               ___lldiv
             _IN (ARG)
         ___lwmod (ARG)
     _port_loop
       _LED_OUT
       _OUT
       _delay_set
   _sleep_loop
     _ADC
     _I2C_LCD_Clear
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _I2C_LCD_Puts
       _I2C_Send
         _I2C_IdleCheck
       _I2C_Start
         _I2C_IdleCheck
       _I2C_Stop
         _I2C_IdleCheck
     _I2C_LCD_SetCursor
       _I2C_LCD_Command
         _I2C_Send
           _I2C_IdleCheck
         _I2C_Start
           _I2C_IdleCheck
         _I2C_Stop
           _I2C_IdleCheck
     _LED_OUT
     _OUT

 _ISR (ROOT)
   _LED_indicator
     i2_LED_OUT
     i2___awdiv
     i2___lwdiv
   _USB_ISR
     _USBDeviceTasks
       _USBCtrlEPAllowStatusStage
       _USBCtrlEPService
         _USBCtrlTrfInHandler
           _USBCtrlTrfTxService
         _USBCtrlTrfOutHandler
           _USBCtrlTrfRxService
             _USBCtrlEPAllowStatusStage
         _USBCtrlTrfSetupHandler
           _USBCheckStdRequest
             _USBStdFeatureReqHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
             _USBStdGetDscHandler
             _USBStdGetStatusHandler
             _USBStdSetCfgHandler
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 _USBCheckCDCRequest
               i2_memset
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBCtrlEPServiceComplete
             _USBCtrlEPAllowDataStage
               _USBCtrlTrfTxService
             _USBCtrlEPAllowStatusStage
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _USBCheckCDCRequest
       _USBStallHandler
       _USBSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USBWakeFromSuspend
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _USBCheckCDCRequest
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _USBCheckCDCRequest
       i2_USBDeviceInit
         i2_memset
   _charge_time_count
   _delay_timer_interrupt
   _integrating
     i2___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            CFF      0     7D0      36       60.1%
BIGRAMh            170      0       0      35        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100     69      CD      12       80.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FE      10       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      9A       7       60.2%
BITBANK13           C0      0       0      31        0.0%
BANK13              C0      0       0      32        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     81      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     35D       8        0.0%
DATA                 0      0     B2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Nov 10 22:35:59 2015

                         get_string_usb@s 006D                                _USB_SD_Ptr FAD7  
                            ?_display_LCD 0001                             ?_command_time 00CD  
                       _charge_time_count 640C                        __size_of_I2C_Start 0030  
                         _ringbuf_put_num 5DC8                              ?_display_dec 008B  
                         _ringbuf_put_str 617A                             my_strcmp@str1 0060  
                           my_strcmp@str2 0062                                        _IN 6992  
                                      _d1 0110                              ___awdiv@sign 0065  
               __size_of_normal_mode_loop 00B8                                        _ms 0106  
                           _USBDeviceInit 321A                       ___wmul@multiplicand 0078  
                      i2___lwdiv@dividend 0001                         ??_RTCC_from_epoch 0095  
                      __size_of_CDCInitEP 0070                        ?_charge_time_count 0001  
                            __CFG_CP0$OFF 000000                                       ?_IN 0001  
                                     IN@b 0060      USER_USB_CALLBACK_EVENT_HANDLER@event 000D  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 000F                                       l144 6534  
                                     l321 68CC                                       l161 68FC  
                                     l139 6710               __end_of_USBStdGetDscHandler 34CA  
                                     l182 5DCA                                       l510 62B2  
                                     l415 4A92                                       _ADC 68DC  
                                     l336 6C3E                                       l512 62C0  
                                     l409 53A6                                       l249 4EDE  
                                     l345 67CE                                       l505 6C56  
                                     l290 232A                                       l514 62CE  
                                     l291 234E                                       l284 224A  
                                     l428 2F96                                       l516 62DC  
                                     l700 6006                                       l285 2272  
                                     l357 675E                                       l286 2298  
                                     l518 62EA                                       l287 22BE  
                                     l288 22E2                                       l289 2306  
                                     l457 5C3A                                       l565 6636  
                                     l904 54A4                                       l681 605C  
                                     l683 606A                                       l851 0D54  
                                     l684 6078                                       l860 0E20  
                                     _BDT 000D00                                       l862 0F4A  
                                     l697 5FEA                                       l866 109E  
                                     l699 5FF8                                       l894 590A  
                                     l888 5384                                       l969 6C0E  
                                     l889 5396                                       _ISR 0008  
                                     _UIE 000F36                                       _UIR 000F62  
                                     _OUT 602C                         get_string_usb@len 006F  
                           ?_get_quot_rem 0079                             ?_display_port 0001  
                      caltime_to_epoch@ep 007B                        caltime_to_epoch@ct 0079  
                              _USBSuspend 6A16                         _RTCC_from_caltime 6810  
                            ___awmod@sign 0065                      USBStdSetCfgHandler@i 0015  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 3616                                _TXSTA1bits 000FAD  
                          _USBDeviceState 0040               RTCC_adjust_time_button@mode 009F  
                     ??_charge_time_count 0001                   _RTCC_adjust_time_button 3AF8  
                 _RTCC_adjust_time_cursor 62A4                        ?_RTCC_from_caltime 0091  
                                    ??_IN 0060                     ??_USBCtrlTrfRxService 0001  
                            _I2C_LCD_Putc 6732                              _I2C_LCD_Puts 5A8E  
                __size_ofi2_USBDeviceInit 0144                            ??_getsUSBUSART 006A  
                                    ?_ADC 0060                  USBEnableEndpoint@options 0009  
                 _RTCC_adjust_time_toggle 6C46                         ??_I2C_LCD_Command 0064  
                         __end_of_LED_OUT 602C                                      ?_ISR 0001  
                     command_operation@tx 00D6                    __end_of_get_string_usb 65A8  
                                    ?_OUT 0060                              _I2C_LCD_init 63B4  
                        ?_command_at_hand 00C6                                      l2001 629A  
                                    l1130 3290                                      l1191 6798  
                                    l1192 6796                USBConfigureEndpoint@handle 0007  
                                    l1493 3154                                      l1488 30FA  
                                    l1938 50AE                                      OUT@b 0061  
                                    l1948 58B6                                      l1991 5F3A  
                                    l8110 2466                                      l8102 2412  
                                    l8114 2490                                      l8106 243C  
                                    l8118 24B8                        __CFG_WPFP$PAGE_127 000000  
                                    l8090 239A                                      l8094 23C2  
                                    l8086 2372                                      l8098 23EA  
                                    l9520 568E                                      l9512 566A  
                                    l9600 4FA2                                      l9522 569A  
                                    l9610 4FD8                                      l9602 4FA8  
                                    l9524 56A0                                      l9532 56D2  
                                    l9516 567A                                      l9630 5042  
                                    l9614 4FE6                                      l9536 56E6  
                                    l9528 56C4                                      l9640 509C  
                                    l9632 5048                                      l9570 5F56  
                                    l9730 5EEA                                      l9618 4FFA  
                                    l9714 6A8E                                      l9564 4618  
                                    l9548 4190                                      l9652 49AA  
                                    l9628 5032                                      l9732 5EF6  
                                    l9900 1788                                      l9574 5F7C  
                                    l9742 5F2C                                      l9734 5EFC  
                                    l9750 6256                                      l9656 6BDE  
                                    l9752 6262                                      l9592 4F78  
                                    l9920 184C                                      l9682 250A  
                                    l9690 2568                                      l9754 6268  
                                    l9586 4F62                                      l9676 24FA  
                                    l9764 617C                                      l9860 300C  
                                    l9940 18FC                                      l9932 18BE  
                                    l9916 183A                                      l9908 1808  
                                    l9694 2588                                      l9678 2500  
                                    l9758 628C                                      l9598 4F96  
                                    l9934 18D6                                      l9926 18A0  
                                    l9918 1846                                      STR_1 FFE4  
                                    l9688 2564                                      l9768 61B4  
                                    l9864 3014                                      l9928 18AC  
                                    l9944 1914                                      STR_2 FFD5  
                                    STR_3 FFD5                                      l9698 25EC  
                                    l9858 3008                                      l9970 19BC  
                                    l9946 194A                                      l9890 1746  
                                    l9882 1716                                      STR_5 FDA6  
                                    l9980 1A16                                      l9956 197A  
                                    STR_6 FF64                                      STR_7 FF01  
                                    l9990 1A46                                      l9982 1A20  
                                    l9958 1980                                      l9894 1750  
                                    STR_8 FFF4                                      STR_9 FFF3  
                                    l9976 19DE                                      l9888 1734  
                                    l9998 1A6E                      command_at_hand@value 00CC  
                                    u8300 2428                                      u8310 2452  
                   ??_USBCtrlTrfTxService 0001                                      u8320 247C  
                                    u8330 24A6                                      _UCFG 000F39  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    _UEIE 000F37                                      _UEIR 000F63  
                                    _UCON 000F65                           _CDCDataInHandle 011D  
                     ??_RTCC_from_caltime 0095    USBStdFeatureReqHandler@current_ep_data 0018  
                                    _pDst 0121                                      _main 49C2  
                ??i2_USBTransferOnePacket 0005                  button_timer_interrupt@bt 0083  
                                    _port 012B                                      fsr0h 000FEA  
                                    fsr1h 000FE2                        i2___lwdiv@quotient 0005  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 020A  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                          __end_of_I2C_Send 6C46  
                         _USBDeviceAttach 676A                                      btemp 0059  
                  __CFG_DSWDTOSC$T1OSCREF 000000                           __end_of_USB_ISR 6C88  
                        __end_of_I2C_Stop 6C82                                      pclat 000FFA  
                        __end_of_I2C_init 6C6E                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00F2  
                        __end_of_ADC_init 6BBA                             __CFG_IESO$OFF 000000  
              RTCC_adjust_time_dec@i_2031 009D                        __size_of_CTMU_init 0028  
                      __size_of_CTMU_read 00C2                __end_of_USBCheckStdRequest 4118  
                  ??_USBCtrlTrfOutHandler 0003                 __end_of_charge_time_count 6464  
                            ___param_bank 000010                 ??_USBStdFeatureReqHandler 0015  
                           _I2C_LCD_Clear 6C14                            ??_command_time 00D5  
                                   ??_ADC 0062                                     ADC@ch 0063  
                           ADC_init@p_ref 0060                                     ??_ISR 001F  
                  __size_of_I2C_IdleCheck 001E                                     ??_OUT 0061  
                ??_USBStdGetStatusHandler 0001                              print_time@tx 00A6  
                          ?_USBDeviceInit 0001                      command_operation@op0 00D8  
                    command_operation@op1 00DA                      command_operation@op2 00DC  
                    command_operation@op3 00DE                        __size_ofi2_LED_OUT 0064  
                       ??_RTCC_to_caltime 0064                             __CFG_PLLDIV$2 000000  
                            _BAUDCON1bits 000F7E                                     l10000 1A7A  
                                   l10100 4EAA                                     l10020 1B28  
                                   l10012 1AC0                                     l10014 1AC6  
                                   l10006 1AA0                                     l10022 1B34  
                                   l10024 1B54                                     l11000 07B4  
                                   l10210 6862                                     l10202 6160  
                                   l11010 07F4                                     l10042 5ABC  
                                   l10050 5B16                                     l10060 5C66  
                                   l11012 080C                                     l11020 0866  
                                   l10206 6850                                     l10150 56FC  
                                   l11102 38AE                                     l10310 35D8  
                                   l10224 46BE                                     l10216 468A  
                                   l10128 4F00                                     l10160 5778  
                                   l11040 0986                                     l11032 091A  
                                   l11024 08A2                                     l11016 0848  
                                   l11112 39AA                                     l10400 2CB0  
                                   l10048 5AEE                                     l11120 0006  
                                   l10250 5860                                     l10058 5C48  
                                   l10082 5DDA                                     l10170 55F8  
                                   l11050 0A16                                     l11034 0932  
                                   l11114 39CC                                     l11202 0502  
                                   l10236 4724                                     l10068 5CA6  
                                   l10092 5E3C                                     l10164 55AC  
                                   l10172 5604                                     l11060 0AA6  
                                   l11044 09C2                                     l11028 08DE  
                                   l10332 62F8                                     l10412 2D5E  
                                   l10404 2CCE                                     l10340 2A14  
                                   l10308 35D2                                     l11220 0568  
                                   l10270 69FE                                     l10254 58A4  
                                   l10246 584A                                     l10086 5DFC  
                                   l10158 5772                                     l11062 0ABE  
                                   l11054 0A52                                     l11038 096E  
                                   l11046 09DA                                     l10502 69A0  
                                   l10422 2DCE                                     l10430 2E5A  
                                   l11214 0546                                     l11150 01C8  
                                   l11134 0080                                     l11126 0040  
                                   l10096 4EA0                                     l10248 585A  
                                   l10176 5628                                     l11072 0B4E  
                                   l11056 0A6A                                     l10424 2DD6  
                                   l10408 2D44                                     l10360 2AFA  
                                   l10352 2A6A                                     l10344 2A2E  
                                   l11232 05AC                                     l11208 0524  
                                   l11160 0232                                     l11128 005E  
                                   l11320 0EFE                                     l10442 1F08  
                                   l11082 0BDE                                     l11066 0AFA  
                                   l11090 0C4A                                     l10434 2E8E  
                                   l10370 2B6A                                     l10522 3F42  
                                   l11226 058A                                     l11250 0C9A  
                                   l10700 30DA                                     l10268 69EC  
                                   l10460 2038                                     l10452 1F8C  
                                   l10444 1F14                                     l11084 0BF6  
                                   l11076 0B8A                                     l11068 0B12  
                                   l11500 1D38                                     l10508 69A4  
                                   l10428 2E42                                     l10372 2B72  
                                   l10364 2B04                                     l10356 2AE0  
                                   l10348 2A4C                                     l10532 3FB8  
                                   l10188 63A2                                     l11404 1210  
                                   l10710 3106                                     l11414 6570  
                                   l11430 6690                                     l10630 329E  
                                   l10614 3266                                     l10454 1FC4  
                                   l11094 0C86                                     l11078 0BA2  
                                   l11510 1DEA                                     l11502 1D3C  
                                   l10382 2C2A                                     l10534 3FCA  
                                   l10526 3F74                                     l10542 400E  
                                   l11238 05CE                                     l11190 04BE  
                                   l11246 05F0                                     l10518 6014  
                                   l11270 0D34                                     l11254 0CA4  
                                   l10704 30EA                                     l10800 44A8  
                                   l11416 6574                                     l11432 6694  
                                   l10480 21A2                                     l10472 20F6  
                                   l10464 2074                                     l10448 1F50  
                                   l11088 0C32                                     l11520 1E38  
                                   l10392 2C78                                     l10376 2BDE  
                                   l10528 3F86                                     l11280 0D58  
                                   l10730 317A                                     l10722 3158  
                                   l10642 32D6                                     l10618 3270  
                                   l10562 13B6                                     l10474 212E  
                                   l10458 2000                                     l11514 1E14  
                                   l10490 6086                                     l11098 38A4  
                                   l10378 2BF6                                     l10538 3FFC  
                                   l11354 104E                                     l11346 100C  
                                   l11274 0D3C                                     l11258 0CD2  
                                   l10740 31AA                                     l10716 313E  
                                   l10652 3346                                     l10812 6728  
                                   l10548 1218                                     l10484 21DE  
                                   l10468 20BA                                     l11524 1E78  
                                   l11516 1E1C                                     l11508 1DC0  
                                   l11532 1EAE                                     l10396 2C92  
                                   l11196 04E0                                     l11380 1152  
                                   l11356 1052                                     l11268 0D30  
                                   l11604 5478                                     l10750 31D8  
                                   l10646 32E0                                     l10638 32B6  
                                   l10478 216A                                     l10902 5B60  
                                   l10494 6998                                     l11390 1198  
                                   l11278 0D40                                     l11294 0DD4  
                                   l10760 3216                                     l10824 6536  
                                   l10568 141C                                     l11472 1BC2  
                                   l11288 0DA0                                     l11560 531C  
                                   l11624 54E4                                     l11608 5482  
                                   l10738 319E                                     l10498 699C  
                                   l11570 5368                                     l11554 5310  
                                   l10756 31EC                                     l10748 31CE  
                                   l10932 6920                                     l11492 1CE6  
                                   l11484 1C94                                     l11476 1C42  
                                   l11468 1B98                                     l11388 1194  
                                   l11556 5314                                     l11564 5320  
                                   l11628 54FC                                     l10758 31F2  
                                   l10790 443E                                     l10782 4400  
                                   l10774 6B52                                     l10598 16F0  
                                   l11494 1CEA                                     l11486 1C98  
                                   l11478 1C46                                     l11566 5338  
                                   l11822 4A48                                     l11814 4A22  
                                   l10792 4446                                     l10784 440A  
                                   l10960 3B96                                     l10952 3B64  
                                   l11576 5376                                     l10698 30D0  
                                   l10796 4476                                     l10884 4CDC  
                                   l10892 4CF8                                     l11596 593A  
                                   l10886 4CF2                                     l10982 06E0  
                                   l10966 3BD8                                     l10984 06F8  
                                   l10976 068C                                     l11856 4A8E  
                                   l10978 06A4                 __end_of_RTCC_from_caltime 6846  
                                   ?_main 0001                   __size_of_put_string_usb 0042  
                          ??_get_quot_rem 007D                            ??_display_port 006A  
                         __end_of___awdiv 5004                                     _ADRES 000FC3  
                       ?_command_get_data 0092                                     STR_10 FEDE  
                                   STR_11 FFDF                                     STR_12 FFC1  
                                   STR_20 FF91                                     STR_21 FF62  
                                   STR_13 FFF8                                     STR_14 FFA5  
                                   STR_22 FF8A                                     STR_30 FEAC  
                                   STR_15 FF59                                     STR_23 FF36  
                                   STR_31 FE8F                                     STR_16 FFDD  
                                   STR_32 FFD9                                     STR_24 FF22  
                                   STR_40 FE7F                                     STR_17 FFDB  
                                   STR_33 FFE7                                     STR_25 FEEA  
                                   STR_41 FEB9                                     STR_50 FFF6  
                                   STR_34 FFEA                                     STR_18 FFC6  
                                   STR_26 FED2                                     STR_42 FEC6  
                                   STR_51 FFE7                                     STR_19 FFFC  
                                   STR_35 FFED                                     STR_43 FF83  
                                   STR_27 FF17                                     STR_52 FFEA  
                                   STR_36 FF62                                     STR_44 FF6C  
                                   STR_60 FF2C                                     STR_28 FEF6  
                         __end_of___awmod 56F0                                     STR_53 FFED  
                                   STR_61 FF40                                     STR_45 FE9E  
                                   STR_37 FE5F                                     STR_29 FE2C  
                                   STR_54 FF62                                     STR_46 FFF6  
                                   STR_62 FF52                                     STR_38 FE4E  
                                   STR_70 FE1A                                     STR_47 FFE1  
                                   STR_55 FFBC                                     STR_63 FF9F  
                                   STR_71 FF74                                     STR_39 FE3D  
                                   STR_48 FFF6                                     STR_56 FED0  
                                   STR_72 FF59                                     STR_80 FFD2  
                                   STR_64 FF0C                                     STR_65 FFD0  
                                   STR_73 FFCB                                     STR_49 FFB7  
                                   STR_81 FF98                                     STR_57 FBBC  
                                   STR_82 FFF1                                     STR_90 FFC4  
                                   STR_74 FFFA                                     STR_58 FF5B  
                                   STR_66 FDEF                                     STR_59 FFAD  
                                   STR_91 FE12                                     STR_83 FE12  
                                   STR_75 FE12                                     STR_67 FDCB  
                                   STR_92 FFF1                                     STR_84 FFF1  
                                   STR_76 FFF1                                     STR_68 FFAB  
                                   STR_69 FFC4                                     STR_93 FE07  
                                   STR_85 FE07                                     STR_77 FE07  
                                   STR_94 FFF0                                     STR_86 FFF0  
                                   STR_78 FFF0                                     STR_95 FE6F  
                                   STR_87 FE6F                                     STR_79 FE6F  
                                   STR_96 FFD2                                     STR_88 FFD2  
                                   STR_97 FF01                                     STR_89 FFB1  
                                   STR_98 FFF4                                     STR_99 FE2C  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___lldiv 50C0  
                                   u12010 6010                                     u10500 4666  
                                   u11140 5ADE                                     u10430 45C2  
                                   u11150 5B10                                     u10440 45C4  
                                   u11240 4F38                                     u10450 45F4  
                                   u11147 5AD4                                     u12300 43F0  
                         ___awdiv@divisor 0062                                     u11245 4F2A  
                                   u11157 5B06                                     u10470 460A  
                                   u10480 460C                                     u12160 30C0  
                         __end_of___llmod 58C8                    __end_of_USBDeviceTasks 375A  
                                   u10490 4664                                     u10468 45F8  
                                   u12308 43F4                                     u13300 3E34  
                                   u10820 68D8                                     u13310 3E36  
                                   u12168 30C4                                     u13240 3D74  
                                   u13250 3D76                                     u13260 3DB4  
                                   u10780 61A6                                     u11900 6066  
                                   u12365 6BAA                                     u13270 3DB6  
                                   u12366 6BAC                                     u10790 61D6  
                                   _LATB2 007C52                                     _LATA5 007C4D  
                                   u13280 3DF4                                     u11920 6074  
                                   _LATC2 007C5A                                     _LATA6 007C4E  
                                   _LATA7 007C4F                                     u13290 3DF6  
                                   _LATB6 007C56                                     u10787 619C  
                                   _LATB7 007C57                                     u11940 6082  
                                   u10797 61CC                                     u12910 399A  
                                   u11970 5FF4                 ?_USBCtrlEPServiceComplete 0001  
                                   u13707 6C22                                     u13717 67D4  
                                   u11965 5FE4                                     u11990 6002  
                                   u11966 5FE8                                     u13727 69F4  
                                   u11895 6056                                     u11896 605A  
                                   u13737 4ECA                                     u13747 4ED4  
                                   u12885 38D6                                     u13687 6764  
                                   u13697 5AEA                           __end_of___lwdiv 5F44  
                         __end_of___lwmod 62A4                                     i2l700 6220  
                                   i2l923 00B6                                     i2l697 6208  
                                   _UADDR 000F38                                     i2l699 6214  
                         ___awdiv@counter 0064                                     _TMR1H 000FCF  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _USTAT 000F64  
                      ??_command_get_data 0096                    __size_of_LED_indicator 0126  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0071  
                          __CFG_FCMEN$OFF 000000           __end_of_USBCtrlEPAllowDataStage 582E  
                                   _sd000 FBB8                                     _sd001 FB22  
                                   _sd002 FB56                      caltime_to_epoch@year 0081  
                              i2memset@p1 0001                           __end_of_dpowers FAD7  
                                   _colon 0046                           __end_of_isdigit 6A98  
                      __size_of_RTCC_init 002E                           ?_get_string_usb 006D  
                      __size_of_RTCC_loop 0044                          ringbuf_delete@rb 0060  
                       __end_of_I2C_Start 68DC                           __end_of_my_atoi 5790  
                                   tablat 000FF5                           __end_of_my_utoa 5CC0  
                                   plusw2 000FDB                         __end_of_CDCInitEP 610E  
                  ?_delay_timer_interrupt 0001                          __end_of_USB_init 6C78  
                        __end_of_USB_loop 5962                __size_of_ringbuf_backspace 008E  
                            ?_integrating 0001                                     status 000FD8  
                         __end_of_sprintf 1B62                         ?_my_terminal_loop 0192  
                        __end_ofi2_memset 6A6E                          __end_of_Delay_ms 6A16  
                          delay_set@value 0062                        __size_ofi2___awdiv 0084  
                       month_length@month 0066                               CTMU_read@ch 0070  
                 __end_of_ringbuf_put_num 5E4A                        __size_ofi2___lldiv 0082  
                 __end_of_ringbuf_put_str 61DE                        ??_my_terminal_loop 0196  
                      __size_ofi2___lwdiv 0052                           putUSBUSART@data 0060  
            __size_of_USBStdSetCfgHandler 00E2                              LED_OUT@value 0060  
                          ?_I2C_LCD_Clear 0001                           __initialization 5CC0  
                       i2___lldiv@divisor 0005                              __end_of_main 4A92  
                       i2___lldiv@counter 000D                     _control_signal_bitmap 0128  
                        __end_of_Auto_cut 39D2                       ringbuf_init@bufsize 0064  
                        RTCC_from_RTCC@ep 008A                          RTCC_from_RTCC@ct 0088  
              RTCC_adjust_time_inc@i_2018 009D                  ctmu_set_ratio@percentage 0083  
                     my_terminal_loop@op0 028E                       my_terminal_loop@op1 02A2  
                     my_terminal_loop@op2 02B6                       my_terminal_loop@op3 02CA  
                     my_terminal_loop@buf 0300                 __size_of_USBCtrlEPService 00CE  
                           print_time@str 00A8                                    ??_main 00E1  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
               ??_RTCC_adjust_time_button 00A5                 ??_RTCC_adjust_time_cursor 0060  
                               ??_LED_OUT 0061                               ?_USBSuspend 0001  
               ??_RTCC_adjust_time_toggle 0060                    my_terminal_loop@i_2171 0366  
                       __end_of_CTMU_init 6AE8                         __end_of_CTMU_read 4F46  
                            _cdc_mem_type 0044                                    _BCL1IF 007D0B  
                           _I2C_IdleCheck 6BDA                   __end_of_USBDeviceAttach 67A2  
                        _CDCDataOutHandle 0033                         _getsUSBUSART$4361 006B  
                        ___llmod@dividend 006D                                    STR_100 FF49  
                                  STR_101 FF7C                         _I2C_LCD_SetCursor 6966  
                     display_time_1602@ep 0099                       display_time_1602@ct 0097  
                                  _EECON2 000FA7                                    _ANCON0 000F48  
                                  _ANCON1 000F49                          ___awdiv@dividend 0060  
                               ??_USB_ISR 001F                        I2C_LCD_Command@ans 0065  
                         getsUSBUSART@len 0069                     __size_of_CDCTxService 017E  
                                  i2l1130 37C0                                    i2l1142 3646  
                                  i2l1216 3EBA                                    i2l1152 36E0  
                                  i2l1153 3756                                    i2l1154 36F2  
                                  i2l1343 4036                                    i2l1352 409A  
                                  i2l1329 4E74                                    i2l1434 47A2  
                                  i2l1282 5216                                    i2l1283 5198  
                                  i2l1436 47EC                                    i2l1284 519E  
                                  i2l1292 6632                                    i2l1358 2792  
                                  i2l1279 5188                                    i2l1377 2956  
                       __end_ofi2_LED_OUT 6242                            __CFG_WDTEN$OFF 000000  
                                  i2l6200 693A                                    i2l7000 40B6  
                                  i2l6050 47CE                                    i2l6042 4790  
                                  i2l6034 4770                                    i2l6202 6940  
                                  i2l1938 5EBA                                    i2l7004 40D4  
                                  i2l6222 44D0                                    i2l6206 6946  
                                  i2l1991 6500                                    i2l7200 630E  
                                  i2l6226 44DA                                    i2l6058 47F6  
                                  i2l6314 6A4C                                    i2l6236 450A  
                                  i2l6244 4544                                    i2l6246 454C  
                                  i2l6254 4586                                    i2l7222 4DF4  
                                  i2l6318 6A5C                                    i2l7224 4DF8  
                                  i2l6600 4D44                                    i2l7208 6356  
                                  i2l7242 4E5A                                    i2l7236 4E3A  
                                  i2l5910 66DA                                    i2l6710 34B2  
                                  i2l6630 57DE                                    i2l7248 4E7E  
                                  i2l6704 34A2                                    i2l5906 66CC  
                                  i2l6802 2936                                    i2l6706 34AA  
                                  i2l6722 51BE                                    i2l6650 432E  
                                  i2l6634 57FA                                    i2l6820 29C2  
                                  i2l6812 2972                                    i2l6804 2942  
                                  i2l6732 51FE                                    i2l6660 4362  
                                  i2l6750 278E                                    i2l6654 4336  
                                  i2l9302 008E                                    i2l5962 5274  
                                  i2l5954 524A                                    i2l6818 29B6  
                                  i2l6770 284C                                    i2l6906 3EE0  
                                  i2l6940 3C70                                    i2l6772 284E  
                                  i2l6764 2808                                    i2l6684 338E  
                                  i2l6676 43AC                                    i2l7820 68A4  
                                  i2l7900 37A4                                    i2l9308 009E  
                                  i2l6934 3C4C                                    i2l5974 52D0  
                                  i2l7822 68A6                                    i2l6952 3CCE  
                                  i2l5896 5A5C                                    i2l6792 28F0  
                                  i2l6776 286A                                    i2l6696 3440  
                                  i2l6688 33A6                                    i2l7912 37CE  
                                  i2l7920 37E6                                    i2l8720 36D6  
                                  i2l8712 36AE                                    i2l6786 28BC  
                                  i2l6698 3448                                    i2l8706 36A2  
                                  i2l8810 5E78                                    i2l6956 3CE8  
                                  i2l6788 28D6                                    i2l7860 4BB2  
                                  i2l7844 662E                                    i2l7924 3804  
                                  i2l8740 3718                                    i2l8660 362E  
                                  i2l8820 5EAC                                    i2l8812 5E7C  
                                  i2l9292 0072                                    i2l8830 64CE  
                                  i2l6990 4074                                    i2l6974 4040  
                                  i2l6886 3E64                                    i2l7934 3868  
                                  i2l8726 36EA                                    i2l8832 64D6  
                                  i2l6976 4046                                    i2l7872 4C00  
                                  i2l7864 4BBA                                    i2l7928 380C  
                                  i2l8808 5E6C                                    i2l9288 0064  
                                  i2l8842 64F6                                    i2l8834 64DA  
                                  i2l6986 4068                                    i2l6978 404C  
                                  i2l8746 3736                                    i2l8690 366C  
                                  i2l8682 365C                                    i2l8756 622C  
                                  i2l8780 5D86                                    i2l8772 5D68  
                                  i2l6988 406E                                    i2l7876 4C1A  
                                  i2l8748 3752                                    i2l8668 363E  
                                  i2l8790 5DA6                                    i2l8782 5D8A  
                                  i2l8766 5D58                                    i2l7878 4C20  
                                  i2l8854 65C8                                    i2l8960 3AAE  
                                  i2l8944 39D6                                    i2l7896 379C  
                                  i2l8696 3692                                    i2l8778 5D7E  
                                  i2l8794 5DB0                                    i2l8954 3A30  
                                  i2l8948 39DE                                    i2l8798 5DBE  
                                  i2l8974 50C4                                    i2l8968 3AF4  
                                  i2l8992 6418                                    i2l8978 50CC  
                                  i2l8996 6460                                    i2l8988 6410  
                      ?_I2C_LCD_SetCursor 0066                                    _RCREG1 000FAF  
                           CDCTxService@i 006A                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SSP1IF 007CF3  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                i2USBTransferOnePacket@ep 0005                         ??i2_USBDeviceInit 0009  
         __size_ofi2_USBTransferOnePacket 00BA                            __CFG_WPDIS$OFF 000000  
                __end_of_is_usb_available 6C14                             _LED_indicator 39D2  
                      epoch_to_caltime@ep 0083                        epoch_to_caltime@ct 0081  
                    get_string_usb@rx_len 0072                         _command_time$5281 00D5  
                       _shortPacketStatus 004E                       ??_I2C_LCD_SetCursor 0067  
                          __CFG_XINST$OFF 000000                         ?_epoch_to_caltime 0081  
                 __size_of_ctmu_set_ratio 00E6                __size_of_charge_time_count 0058  
                        ringbuf_put_num@i 008F                           USBDeviceTasks@i 001E  
                   caltime_to_epoch@epoch 0083               USBStdFeatureReqHandler@pUEP 0016  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0002  
                         ??_USBDeviceInit 0068                              ?_ringbuf_pop 0068  
                            ?_ringbuf_num 0060                              ?_ringbuf_put 0083  
                   caltime_to_epoch@month 0087                                    ___lmul 5F44  
                            ?_putUSBUSART 0060                           _caltime_to_RTCC 4A92  
                                  ___wmul 67DA                        ??_epoch_to_caltime 0085  
                               ??___awdiv 0064                                 ??___awmod 0064  
            __end_of_RTCC_adjust_time_dec 2EB0              __end_of_RTCC_adjust_time_inc 2C4C  
                                  _d_to_x 6A98                                 ??___lldiv 0068  
                    __end_of_getsUSBUSART 44AE                      ringbuf_put_num@value 008C  
                            ?_timer0_init 0001                                 ??___llmod 0075  
                       __end_of_RTCC_init 6938                              ?_timer1_init 0060  
                               ??___lwdiv 0080                         __end_of_RTCC_loop 667A  
                               ??___lwmod 0064                              ?_timer3_init 0001  
                       _USBEnableEndpoint 66BC           __size_of_USBStdGetStatusHandler 00BA  
                        _normal_mode_loop 52EE                                    _ctmu_m 018E  
                                  _memset 6846                                    clear_0 5CC8  
                                  clear_1 5CDA                                    clear_2 5CE6  
                         put_string_usb@s 006C                                    clear_3 5CF2  
                                  clear_4 5CFE                                    clear_5 5D0A  
                         __CFG_CLKOEC$OFF 000000                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0062                      __size_of_display_LCD 0650  
                         ___awmod@counter 0064                                    _x_to_d 6BBA  
                      ?_USBEnableEndpoint 0009                                    _rx_buf 02E6  
              __size_of_RTCC_from_caltime 0036                                    _usb_rx 02EE  
                                  _usb_tx 02F6                         _command_operation 0650  
                                  _tx_buf 0170                      __size_of_display_dec 0058  
                          i2___awdiv@sign 0006             __size_of_USBTransferOnePacket 00D8  
               __size_of_caltime_to_epoch 0288                              __pdataCOMRAM 0058  
                               ??_isdigit 0060                        ?_command_operation 00D6  
                       __end_ofi2___awdiv 5DC8                                 ?_I2C_Send 0001  
                            _CDCTxService 309C                                 ?_I2C_Stop 0001  
                       __end_ofi2___lldiv 5ECC                         __end_ofi2___lwdiv 650A  
                            __mediumconst FACC                             _cut_time_flag 004A  
                               ?_I2C_init 0001                 __end_of_I2C_LCD_SetCursor 6992  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                               ??_my_atoi 007E                                    tblptru 000FF8  
                               ?_ADC_init 0001                       ??_USBEnableEndpoint 000A  
                          ?_I2C_IdleCheck 0001                                 ??_my_utoa 0088  
                  delay_timer_interrupt@d 0001                                 ??_sprintf 0095  
                    __end_of_command_time 2218                               _CtrlTrfData 000D38  
                     ??_command_operation 00E0                      _controlTransferState 0047  
            my_terminal_loop@command_init 012A            RTCC_adjust_time_button@cnt_dec 00A3  
                    __CFG_LS48MHZ$SYS48X8 000000            RTCC_adjust_time_button@cnt_inc 00A1  
                              __accesstop 0060                   __end_of__initialization 5D3A  
                            __pbssBIGRAMl 03CD                              CTMU_read@sum 0071  
                    __end_of_get_quot_rem 48EE                      __end_of_display_port 4026  
                          ?_LED_indicator 0001                             ___rparam_used 000001  
                         ??_I2C_LCD_Clear 0066                           _RTCC_from_epoch 6B56  
                __size_of_USBStallHandler 0046                        command_at_hand@max 00CB  
                      command_at_hand@min 00CA                          ?_ringbuf_put_num 008A  
                        ?_ringbuf_put_str 008A                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 002C                          LED_indicator@cnt 010A  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 66F8  
                      i2___lldiv@dividend 0001                             __end_of_sd000 FBBC  
                           __end_of_sd001 FB56                             __end_of_sd002 FB8A  
                            __pidataBANK1 6C88          __size_of_USBCtrlEPAllowDataStage 009E  
               __end_of_command_operation 0C94             __size_of_USBConfigureEndpoint 0094  
             __end_of_USBCtrlTrfInHandler 4E84                           __CFG_DSWDTPS$G2 000000  
                              __end_of_IN 69BE                           _I2C_LCD_Command 67A2  
                          _put_string_usb 667A                        __size_of_delay_set 0024  
                  i2_USBTransferOnePacket 5234                                 ?_USB_init 0001  
                               ?_USB_loop 0001                          I2C_LCD_Command@c 0064  
                              ??_I2C_Send 0062                         _CDCTxService$4409 0068  
                              ??_I2C_Stop 0062                                _cdc_notice 0200  
                 __size_of_ringbuf_delete 0026                                 ?i2_memset 0001  
                              _cdc_rx_len 00F6                                ??_I2C_init 0060  
                               ?_Delay_ms 0060                                _cdc_tx_len 0045  
                              ??_ADC_init 0060                caltime_to_epoch@month_1936 0082  
                ??_USBCtrlTrfSetupHandler 001B                    RTCC_adjust_time_dec@ep 0097  
                  RTCC_adjust_time_dec@ct 0095                          ?_USBDeviceAttach 0001  
                      command_get_data@tx 0092                    _USBStdGetStatusHandler 517A  
                            sprintf@width 00A4                        i2___lldiv@quotient 0009  
                  RTCC_adjust_time_inc@ep 0097                    RTCC_adjust_time_inc@ct 0095  
                      __size_of_main_init 00A6                                __pbssBANK0 00E1  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0369                                 ?_Auto_cut 0001  
                          LED_indicator@i 000C                        __size_of_ctmu_loop 010C  
                               ISR@cnt_t0 0119                                 ISR@cnt_t1 0039  
                 __end_of_caltime_to_RTCC 4B62                           _RTCC_to_caltime 53A6  
             __size_of_USBWakeFromSuspend 0032                               _pBDTEntryIn 00F0  
                    __size_of_integrating 00BA          __end_of_USBCtrlEPServiceComplete 3F34  
             __size_of_USBCheckCDCRequest 00D6                     __end_of_weekday_3char FBA6  
                    USBCtrlTrfRxService@i 0001                                   ?___lmul 006D  
                                 ?___wmul 0076                                   ?_d_to_x 0001  
                          i2LED_OUT@value 0001                    __end_of_put_string_usb 66BC  
                          command_time@tx 00CD                                   ?_memset 0060  
                    I2C_LCD_SetCursor@col 0069                            ___lmul@product 0075  
                              _device_dsc FBA6                      I2C_LCD_SetCursor@row 0066  
                        _USBCtrlEPService 4B62                                   ?_x_to_d 0001  
                            I2C_Send@data 0062                                _ep_data_in 002D  
             __end_of_USBCtrlTrfRxService 3D34                        _USBCheckStdRequest 4026  
                              ??_USB_init 0069                         _configDescriptor1 FADF  
                              ??_USB_loop 008A                                   _LED_OUT 5FBA  
                        ??_get_string_usb 0071                        __CFG_OSC$INTOSCPLL 000000  
                         ??_I2C_IdleCheck 0060                        __size_of_my_strcmp 00A4  
                 my_terminal_loop@command 0178                                ??i2_memset 0007  
             __end_of_USBCtrlTrfTxService 458E                                ??_Delay_ms 0062  
                     _USBStdSetCfgHandler 42EC                __size_of_I2C_LCD_SetCursor 002C  
                      __size_of_port_loop 0582                    I2C_LCD_SetCursor@F8672 0198  
                         __CFG_WDTPS$1024 000000                                   _SPBRGH1 000F7F  
                                 _SSP1ADD 000FC8                                   _SSP1BUF 000FC9  
                                 _RTCVALH 000F3B                                   _RTCVALL 000F3A  
                 ??_delay_timer_interrupt 0003                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 014E                                   _UIEbits 000F36  
                                 _USB_ISR 6C82                   __end_of_RTCC_from_epoch 6B78  
                    timer1_init@prescaler 0062                      _RTCC_adjust_time_dec 2C4C  
                                 _UIRbits 000F62                      _RTCC_adjust_time_inc 29E8  
                              ??_Auto_cut 007C                          __CFG_CFGPLLEN$ON 000000  
                ??_button_timer_interrupt 0086                             _cdc_trf_state 00F7  
                         ??_LED_indicator 0009                 __size_of_command_get_data 04F2  
                       __end_of_delay_set 6B32                             ?_month_length 0066  
                     epoch_to_caltime@day 0089                         RTCC_from_epoch@ep 0093  
                       RTCC_from_epoch@ct 0091                       epoch_to_caltime@num 008D  
                               _I2C_Start 68AC                                   _pCDCDst 0113  
                __size_of_command_at_hand 006C                                   _pCDCSrc 0116  
                   __size_of_getsUSBUSART 00E0                                   __Hparam 0000  
                          _ctmu_set_ratio 4206                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 609E                                   __Lparam 0000  
                            USB_loop@data 008C                                _ctmu_ratio 0049  
                 __end_of_I2C_LCD_Command 67DA                         ringbuf_put_num@rb 008A  
                          display_LCD@str 009C                __size_of_USBEnableEndpoint 003C  
                       ringbuf_put_str@rb 008A                      ??_USBCheckStdRequest 001B  
           __size_of_USBCtrlTrfOutHandler 005C                             ?_ringbuf_init 0060  
                                 ___awdiv 4F46                           __size_of___lmul 0076  
                                 ___awmod 564E                                   ___lldiv 5004  
                        ??_USBDeviceTasks 001E                           __size_of___wmul 0036  
                                 ___llmod 582E                     ringbuf_put_num@digits 008E  
                                 ___lwdiv 5ECC                           ?_put_string_usb 006C  
                       ??_USBStallHandler 0001                                   ___lwmod 6242  
                         __size_of_d_to_x 0028                __size_of_command_operation 0644  
                    __size_of_ringbuf_pop 00CC                      __size_of_ringbuf_num 00EE  
                    __size_of_ringbuf_put 00D4                           __CFG_STVREN$OFF 000000  
                       __end_of_main_init 55AA                      __size_of_putUSBUSART 0024  
             epoch_to_caltime@month_cache 0058                                   __pcinit 5CC0  
                      getsUSBUSART@buffer 0067                           __size_of_memset 0034  
               __end_of_configDescriptor1 FB22                                   __ramtop 0F00  
               __size_of_my_terminal_loop 036A                      __size_of_timer0_init 003A  
                                 _halfsec 00F9                      __size_of_timer1_init 0050  
                                 __ptext0 49C2                                   __ptext1 545C  
                                 __ptext2 52EE                                   __ptext3 0C94  
                                 __ptext4 6B0E                                   __ptext5 5FBA  
                                 __ptext6 0000                                   __ptext7 34CA  
                                 __ptext8 635C                                   __ptext9 6732  
                           I2C_LCD_Putc@c 0064                                   _inPipes 00EA  
                    __size_of_timer3_init 002C                         __end_of_ctmu_loop 3E40  
                         __size_of_x_to_d 0020                             I2C_LCD_Puts@s 0064  
             _USBDeferOUTDataStagePackets 003E                                 _T0CONbits 000FD5  
                            __size_of_ADC 002E                          _time_change_flag 0050  
                        _caltime_to_epoch 24E0                              __size_of_ISR 00EA  
                               _T1CONbits 000FCD                              __size_of_OUT 0072  
                                 _dpowers FACD                              ??_USBSuspend 0015  
                 __size_of_RTCC_from_RTCC 0022                     __size_of_command_time 034C  
                                 _isdigit 6A6E                                 _T3CONbits 000F79  
                        ___awmod@dividend 0060                                 _T5CONbits 000F22  
                                 _my_atoi 56F0                           i2_USBDeviceInit 375A  
                        i2USBDeviceInit@i 0009                                   _my_utoa 5C38  
                      __end_of_USB_CD_Ptr FADF                                   _sprintf 1708  
         __size_of_USBCtrlTrfSetupHandler 008E                   __end_of_RTCC_to_caltime 545C  
                   ?_RTCC_adjust_time_dec 0095                     ?_RTCC_adjust_time_inc 0095  
                   __size_of_get_quot_rem 00D4                     __size_of_display_port 00F2  
                    end_of_initialization 5D3A                              _getsUSBUSART 43CE  
                              delay_set@d 0060                                 _CTMU_init 6AC0  
                               _CTMU_read 4E84                  __end_of_normal_mode_loop 53A6  
                            _CTMUCONHbits 000FB3                        __end_of_USB_SD_Ptr FADD  
                            _CTMUCONLbits 000FB2                       _pBDTEntryEP0OutNext 0037  
                          ??_month_length 0067                            display_dec@dec 0096  
                                 memset@c 0062                                   memset@n 0064  
                                 memset@p 0066                            display_dec@str 008C  
         _dummy_encapsulated_cmd_response 02DE                    __end_of_ctmu_set_ratio 42EC  
                             sleep_loop@i 006A                  ?_USBStdFeatureReqHandler 0001  
                        ?_caltime_to_RTCC 0069                                ?_I2C_Start 0062  
                               i2_LED_OUT 61DE                     ??_USBStdSetCfgHandler 0015  
                         ___lldiv@divisor 0064                      timer3_init@prescaler 0061  
                       __end_of_my_strcmp 564E                                ?_CDCInitEP 0001  
                         ___lldiv@counter 006C                         ?_is_usb_available 0001  
                      __end_of_USBSuspend 6A42                            ??_ringbuf_init 0066  
                 _USBCtrlEPAllowDataStage 5790                         __end_of_port_loop 1216  
                              _sleep_flag 004F                        ??_is_usb_available 0060  
                                 postdec1 000FE5                                   postdec2 000FDD  
                              _sleep_loop 545C                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                            _command_time 1ECC                  _USBCtrlEPServiceComplete 3E40  
              _USBStatusStageEnabledFlag1 0041                _USBStatusStageEnabledFlag2 0042  
                      USBEnableEndpoint@p 000A                          __CFG_DSBOREN$OFF 000000  
                               _RTCC_init 690A                                 _RTCC_loop 6636  
                            _display_flag 004B                 epoch_to_caltime@day_cache 0123  
                            _get_quot_rem 481A                              _display_port 3F34  
                              _print_time 5962                                _print_port 00FB  
                          _ringbuf_delete 6AE8                 __size_of_epoch_to_caltime 01EC  
                        __CFG_CPUDIV$OSC1 000000                       RTCC_from_caltime@ep 0093  
                     RTCC_from_caltime@ct 0091                        _BothEP0OutUOWNsSet 003B  
                       __size_of_I2C_Send 0018                         __size_of_I2C_Stop 000A  
                               i2___awdiv 5D44                         __size_of_I2C_init 0012  
               USBConfigureEndpoint@EPNum 0006                         i2___lwdiv@divisor 0003  
                               i2___lldiv 5E4A                         __size_of_ADC_init 0020  
              ?_USBCtrlEPAllowStatusStage 0001                                 i2___lwdiv 64B8  
                       i2___lwdiv@counter 0007                          ?_RTCC_from_epoch 0091  
                              ?_CTMU_init 0001                                ?_CTMU_read 006D  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0011                                 _USTATcopy 0057  
                               Auto_cut@i 007E           __size_of_button_timer_interrupt 02C8  
                 timer1_init@clock_select 0060              __end_of_USBTransferOnePacket 4744  
                     command_at_hand@hand 00C8                           ?_ctmu_set_ratio 0001  
                        __CFG_IOL1WAY$OFF 000000                        i2___awdiv@dividend 0001  
                              ?i2_LED_OUT 0001                         putUSBUSART@length 0062  
                     __CFG_MSSP7B_EN$MSK7 000000                         LED_indicator@cntf 010D  
                        ?_I2C_LCD_Command 0001                            ringbuf_init@rb 0060  
                  _USBCtrlTrfSetupHandler 5BAA                             ??_display_LCD 009C  
                          ringbuf_pop@ret 006E                             ??_display_dec 008C  
                 ?i2_USBTransferOnePacket 0001                     __end_of_USBDeviceInit 337C  
                          __end_of___lmul 5FBA                         ??_command_at_hand 00CD  
                ?_RTCC_adjust_time_button 009F                  ?_RTCC_adjust_time_cursor 0001  
                          __end_of___wmul 6810                              integrating@i 0010  
                          __end_of_d_to_x 6AC0                             __pidataCOMRAM 6C8A  
                ?_RTCC_adjust_time_toggle 0001                   __end_ofi2_USBDeviceInit 389E  
                  __end_of_ringbuf_delete 6B0E                                 i2memset@c 0003  
                               i2memset@n 0005                                 i2memset@p 0007  
                          __end_of_memset 687A                                ?_RTCC_init 0001  
                              ?_RTCC_loop 0001                          __CFG_DSWDTEN$OFF 000000  
                       _USBBusIsSuspended 0127                            __end_of_x_to_d 6BDA  
                   epoch_to_caltime@month 008C                       start_initialization 5CC0  
                              CTMU_read@i 0075                          month_length@year 006B  
                 ?_USBStdGetStatusHandler 0001                               __end_of_ADC 690A  
                      i2___awdiv@quotient 0007                               __end_of_ISR 00F2  
           USBCtrlTrfRxService@byteToRead 0002                               __end_of_OUT 609E  
                       __size_of_USB_init 000A                         __size_of_USB_loop 009A  
                           ?_I2C_LCD_Putc 0001                             ?_I2C_LCD_Puts 0064  
                  ??_RTCC_adjust_time_dec 0099                    ??_RTCC_adjust_time_inc 0099  
                           ?_I2C_LCD_init 0001                               _cdc_data_rx 020E  
                             _cdc_data_tx 024E                         __size_ofi2_memset 002C  
                              ?i2___awdiv 0001              __end_of_USBConfigureEndpoint 5A8E  
                      my_terminal_loop@rx 0194                        my_terminal_loop@tx 0192  
                       __size_of_Delay_ms 002C                                ?i2___lldiv 0001  
                        ?_RTCC_to_caltime 0062                                ?i2___lwdiv 0001  
         __end_of_USBStdFeatureReqHandler 29E8         __end_of_USBCtrlEPAllowStatusStage 4DC0  
                        _command_get_data 1216                  __end_of_USBCtrlEPService 4C30  
                         ___llmod@divisor 0071                     my_terminal_loop@ascii 0367  
                       __size_of_Auto_cut 0134                               ??_I2C_Start 0063  
                         ___llmod@counter 0075                 ??_USBCtrlEPAllowDataStage 0002  
                             ??_CDCInitEP 000D                            USBDeviceInit@i 0068  
                   __end_of_I2C_LCD_Clear 6C2E                    _pBDTEntryEP0OutCurrent 0035  
                            _ctmu_value_m 011F                   USBTransferOnePacket@dir 0060  
                 USBTransferOnePacket@len 0063            __end_ofi2_USBTransferOnePacket 52EE  
                     ringbuf_put_num@temp 0090                                  ??___lmul 0075  
                             ?_sleep_loop 0001                                  ??___wmul 007A  
                          USB_loop@rx_len 008A                       _USBStdGetDscHandler 337C  
                                ??_d_to_x 0068                         __CFG_ADCSEL$BIT12 000000  
                             __pdataBANK1 0198                                  ??_memset 0066  
                     command_get_data@str 0096                  __size_of_ringbuf_put_num 0082  
                __size_of_ringbuf_put_str 0064                    _button_timer_interrupt 2218  
                        _my_terminal_loop 1B62                                  ??_x_to_d 0060  
                         ?_ringbuf_delete 0060                      __end_of_month_length 466C  
                          _RTCC_from_RTCC 6B78                       __end_of_display_LCD 0650  
                  _USBActiveConfiguration 0056            __end_of_USBStdGetStatusHandler 5234  
                             ?_print_time 00A6                                  ?_LED_OUT 0060  
                     __end_of_display_dec 63B4                               __pbssCOMRAM 002D  
                       command_at_hand@tx 00C6                       RTCC_to_caltime@dumy 0064  
                           __pcstackBANK0 0060                             __pcstackBANK1 0192  
                           __pcstackBANK3 0300              __size_of_USBCtrlTrfInHandler 00C4  
                          ??_I2C_LCD_Putc 0064                            ??_I2C_LCD_Puts 0066  
                                LED_OUT@b 0061                            ??_I2C_LCD_init 0067  
                   _command_get_data$5283 00A0                               _caltime_now 0180  
                           _delay_display 0051                      __end_of_ringbuf_init 64B8  
                            _isdigit$4728 0061                      ?_USBStdGetDscHandler 0001  
                                ?_USB_ISR 0001                               ??_CTMU_init 0060  
                             ??_CTMU_read 006F            __size_of_delay_timer_interrupt 0048  
           __end_of_delay_timer_interrupt 65F0                __end_of_USBWakeFromSuspend 68AC  
                           ??_integrating 000E                               sprintf@flag 00A2  
                   RTCC_adjust_time_dec@i 009E                         command_get_data@i 0095  
                             sprintf@prec 0099                           _USBStallHandler 65F0  
                            _pBDTEntryOut 0100                     RTCC_adjust_time_inc@i 009E  
              __end_of_USBCheckCDCRequest 481A                  __end_of_caltime_to_epoch 2768  
                             ??i2_LED_OUT 0002                           millis_timer@cnt 0125  
                __size_of_USBDeviceAttach 0038                          ??_put_string_usb 0070  
                        ___lwdiv@dividend 007C           __end_of_RTCC_adjust_time_button 3C1C  
         __end_of_RTCC_adjust_time_cursor 6300                                 _delay_set 6B0E  
                               _edit_flag 00F8                                 __pintcode 0008  
         __end_of_RTCC_adjust_time_toggle 6C5C                             __pmediumconst FACC  
                                ?___awdiv 0060                                 __ptext100 375A  
                               __ptext101 687A                                 __ptext110 6A42  
                               __ptext102 6A16                                 __ptext111 517A  
                               __ptext103 65F0                                 __ptext120 6300  
                               __ptext112 337C                                 __ptext104 4B62  
                               __ptext121 3C1C                                 __ptext113 2768  
                               __ptext105 5BAA                                 __ptext122 4CFC  
                               __ptext114 6938                                 __ptext106 3E40  
                               __ptext123 4DC0                                 __ptext115 4744  
                               __ptext107 5790                                 __ptext124 44AE  
                               __ptext116 609E                                 __ptext108 4026  
                               __ptext125 39D2                                 __ptext117 5234  
                               __ptext109 42EC                                 __ptext126 64B8  
                               __ptext118 66BC                                 __ptext127 5D44  
                               __ptext119 59FA                                 __ptext128 61DE  
                                ?___awmod 0060                                  ?___lldiv 0060  
                      charge_time_count@i 0003                                  ?___llmod 006D  
                                ?___lwdiv 007C                                  ?___lwmod 0060  
                   _is_usb_available$2609 0060                           I2C_LCD_Putc@ans 0065  
                  __end_of_RTCC_from_RTCC 6B9A                           I2C_LCD_Puts@ans 0067  
                        ?i2_USBDeviceInit 0001                USBCBSendResume@delay_count 011B  
                             ??_RTCC_init 0060                               ??_RTCC_loop 008C  
                         command_time@op0 00CF                           command_time@op1 00D1  
                         command_time@op2 00D3                      _USBTransferOnePacket 466C  
                               _epoch_now 00FC                                 _main_init 5504  
                             I2C_Start@rw 0062                                  ?_isdigit 0001  
                        _epoch_to_caltime 2EB0                                  _I2C_Send 6C2E  
                                OUT@value 0060                                  _I2C_Stop 6C78  
                    __CFG_RTCOSC$T1OSCREF 000000                                 _ctmu_flag 0048  
                                _I2C_init 6C5C                          _display_LCD$5282 00A6  
                               _ctmu_loop 3D34                                  ?_my_atoi 007C  
                                _ADC_init 6B9A                     __end_of_I2C_IdleCheck 6BF8  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 635C  
                                ?_my_utoa 0083                       ringbuf_backspace@rb 0068  
                   ??_USBStdGetDscHandler 0001                               _ep_data_out 0030  
                   _my_terminal_loop$5280 0364                          ___lwdiv@quotient 0081  
             command_operation@percentage 00E0                               ??i2___awdiv 0005  
                                ?_sprintf 0083                               ??i2___lldiv 0009  
            __size_of_USBCtrlTrfRxService 0118                                my_atoi@ret 0082  
           USBConfigureEndpoint@direction 0001                                my_atoi@str 007C  
                             ??i2___lwdiv 0005                       __size_of_sleep_loop 00A8  
                             __size_of_IN 002C                                 d_to_x@dec 0068  
                                _CTMUCONH 000FB3                                  _CTMUCONL 000FB2  
                                _CTMUICON 000FB1                         ?_normal_mode_loop 0001  
            __size_of_USBCtrlTrfTxService 00E0                  ringbuf_init@internal_buf 0062  
                          ___wmul@product 007A                ??_USBCtrlEPServiceComplete 0002  
                   __end_of_LED_indicator 3AF8                        ??_normal_mode_loop 00AA  
                                _IPR1bits 000F9F                                  _IPR2bits 000FA2  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _IPR5bits 000F99                                  _PIE5bits 000F91  
                     __size_of_print_time 0098                                ?_delay_set 0060  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u625_40 3404                                  _PIR5bits 000F98  
                                i2u625_47 33FA                                  i2u626_40 343A  
              epoch_to_caltime@year_cache 0129                                  i2u626_47 3430  
                                i2u628_40 3496                                  i2u628_47 348C  
                                i2u567_40 4534                                  i2u567_47 452A  
               USBCtrlEPService@setup_cnt 001D                                  i2u569_40 4576  
                                i2u569_47 456C                                  i2u930_40 6210  
                                i2u932_40 621C                                  i2u934_40 6228  
                           ??_ringbuf_pop 006A                             ??_ringbuf_num 0062  
                           ??_ringbuf_put 0086                                  i2u929_45 6202  
                                i2u929_46 6206                                  i2u970_40 643E  
                     __end_of_integrating 517A                                  _RCONbits 000FD0  
                       _display_time_1602 34CA                             ??_putUSBUSART 0063  
                                _UEP0bits 000F26                _USBDeferINDataStagePackets 003D  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                           ??_timer0_init 0060                             ??_timer1_init 0061  
             __size_of_USBCheckStdRequest 00F2                               _display_LCD 0000  
                           ??_timer3_init 0060                                 _my_strcmp 55AA  
                                _SSP1STAT 000FC7                                  _UCONbits 000F65  
                      ?_display_time_1602 0097                               _display_dec 635C  
                    _USBConfigureEndpoint 59FA                                 _port_loop 0C94  
                         ?_RTCC_from_RTCC 0088                                my_utoa@str 0083  
        __size_of_USBStdFeatureReqHandler 0280                                _ADCON0bits 000FC2  
                              _ADCON1bits 000FC1                         ___wmul@multiplier 0076  
                   ?_USBTransferOnePacket 0060                          __CFG_SOSCSEL$LOW 000000  
          button_timer_interrupt@sw_value 0085                                  _USB_init 6C6E  
                                _USB_loop 58C8                                ?_main_init 0001  
               __size_of_is_usb_available 001C                             ?_CDCTxService 0001  
                     ??_display_time_1602 009B                              _RemoteWakeup 003C  
                       i2___awdiv@divisor 0003                                  i2_memset 6A42  
                        __size_of_LED_OUT 0072                                  _Delay_ms 69EA  
                       i2___awdiv@counter 0005                                ?_ctmu_loop 0001  
                       ??_ringbuf_put_num 008F                         ??_ringbuf_put_str 008E  
                           ringbuf_pop@rb 0068                             ringbuf_num@rb 0060  
                 __end_of_USBStallHandler 6636                             I2C_Start@adrs 0063  
                           ringbuf_put@rb 0083                         ___lmul@multiplier 006D  
                        ??_ctmu_set_ratio 0083                               _INTCON2bits 000FF1  
                              port_loop@i 0064               ??_USBCtrlEPAllowStatusStage 0001  
             __end_of_USBStdSetCfgHandler 43CE                          __size_of_USB_ISR 0006  
                                _Auto_cut 389E                      epoch_to_caltime@year 008B  
                 __size_of_get_string_usb 004E                         my_terminal_loop@i 0368  
                      _next_print_content 004D                           _command_at_hand 610E  
                      __end_of_device_dsc FBB8                   ?_USBCtrlTrfSetupHandler 0001  
               __end_of_display_time_1602 3616                   USBStdGetStatusHandler@p 0002  
                                __Hrparam 0000                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                      __end_of_I2C_LCD_Putc 676A  
                    __end_of_I2C_LCD_Puts 5B1C                                  _SetupPkt 000D30  
                           _weekday_3char FB8A                      __end_of_I2C_LCD_init 640C  
                   __size_of_month_length 00DE                                ?_my_strcmp 0060  
                      ringbuf_put_str@str 008C                     ?_USBConfigureEndpoint 0001  
                __size_of_caltime_to_RTCC 00D0                         ??_USBDeviceAttach 0060  
                        __size_of___awdiv 00BE                          __size_of___awmod 00A2  
                       I2C_IdleCheck@mask 0061                          __size_of___lldiv 00BC  
                        __size_of___llmod 009A                          __size_of___lwdiv 0078  
                        __size_of___lwmod 0062                                ?_port_loop 0001  
                __end_of_command_get_data 1708                       __end_of_ringbuf_pop 4CFC  
                     __end_of_ringbuf_num 4206                       __end_of_ringbuf_put 49C2  
                     __end_of_putUSBUSART 6B56                               _line_coding 0187  
                          ??_CDCTxService 0067                   command_get_data@content 0094  
                     __end_of_timer0_init 6732                     __size_of_ringbuf_init 0054  
                     __end_of_timer1_init 655A                                sprintf@len 00A0  
                     __end_of_timer3_init 69EA                                sprintf@val 009E  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0144  
                              i2LED_OUT@b 0002                           ___lwdiv@divisor 007E  
                         ___lwdiv@counter 0080                      timer0_init@prescaler 0061  
                                __ptext10 3F34                                  __ptext11 6966  
                                __ptext20 602C                                  __ptext12 5A8E  
                                __ptext21 6992                                  __ptext13 3AF8  
                                __ptext30 56F0                                  __ptext22 68DC  
                                __ptext14 6C46                                  __ptext31 610E  
                                __ptext23 1B62                                  __ptext15 29E8  
                                __ptext40 6A98                                  __ptext32 5962  
                                __ptext24 6AE8                                  __ptext16 2C4C  
                                __ptext41 4F46                                  __ptext33 1708  
                                __ptext25 5B1C                                  __ptext17 6B56  
                                __ptext50 650A                                  __ptext42 1216  
                                __ptext34 6A6E                                  __ptext26 0650  
                                __ptext18 62A4                                  __ptext51 66F8  
                                __ptext43 617A                                  __ptext35 67DA  
                                __ptext27 4206                                  __ptext19 389E  
                                __ptext60 6C14                                  __ptext52 6464  
                                __ptext44 5DC8                                  __ptext36 6810  
                                __ptext28 1ECC                                  __ptext61 67A2  
                                __ptext53 6C6E                                  __ptext45 5C38  
                                __ptext37 2EB0                                  __ptext29 55AA  
                                __ptext70 2218                                  __ptext62 6C78  
                                __ptext54 321A                                  __ptext46 6242  
                                __ptext38 481A                                  __ptext71 5ECC  
                                __ptext63 68AC                                  __ptext55 6846  
                                __ptext47 582E                                  __ptext39 4A92  
                                __ptext80 655A                                  __ptext72 4E84  
                                __ptext64 6C2E                                  __ptext56 676A  
                                __ptext48 5504                                  __ptext81 6BF8  
                                __ptext73 5004                                  __ptext65 6BDA  
                                __ptext57 690A                                  __ptext49 69BE  
                                __ptext90 5F44                                  __ptext82 43CE  
                                __ptext74 58C8                                  __ptext66 69EA  
                                __ptext58 6C5C                                  __ptext91 53A6  
                                __ptext83 309C                                  __ptext75 48EE  
                                __ptext67 6AC0                                  __ptext59 63B4  
                                __ptext92 6BBA                                  __ptext84 466C  
                                __ptext76 4C30                                  __ptext68 6B9A  
                                __ptext85 6636                                  __ptext77 4118  
                                __ptext69 3D34                                  __ptext94 50C0  
                                __ptext86 6B78                                  __ptext78 667A  
                                __ptext95 5E4A                                  __ptext87 24E0  
                                __ptext79 6B32                                  __ptext96 65A8  
                                __ptext88 458E                                  __ptext97 640C  
                                __ptext89 564E                                  __ptext98 6C82  
                                __ptext99 3616                          __size_of_my_atoi 00A0  
                            _SSP1CON2bits 000FC5          __size_of_RTCC_adjust_time_button 0124  
        __size_of_RTCC_adjust_time_cursor 005C                          __size_of_my_utoa 0088  
        __size_of_RTCC_adjust_time_toggle 0016                          __size_of_sprintf 045A  
                   RTCC_loop@prev_halfsec 003A                  __end_of_my_terminal_loop 1ECC  
                             _integrating 50C0            __end_of_USBCtrlTrfSetupHandler 5C38  
                           __size_of_main 00D0                         ?_USBCtrlEPService 0001  
                            _month_length 458E                         put_string_usb@len 006E  
                      ??_USBCtrlEPService 001B                  __size_of_RTCC_from_epoch 0022  
                             ??_delay_set 0064                       _USBCtrlTrfInHandler 4DC0  
                            ??_sleep_loop 006A                                  _outPipes 00E1  
                        ??_ringbuf_delete 0062                   ?_button_timer_interrupt 0083  
                    _USBCtrlTrfOutHandler 6300                                  int$flags 0059  
                            _ringbuf_init 6464                 _USBCtrlEPAllowStatusStage 4CFC  
                               x_to_d@hex 0061                    ??_USBTransferOnePacket 0064  
                __size_of_I2C_LCD_Command 0038                 _USBDeferStatusStagePacket 003F  
                            ??_print_time 00A8                  CDCTxService@byte_to_send 006B  
                          main_init@usbrx 0369                            main_init@usbtx 03CD  
                             ??_main_init 0069                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                      ringbuf_put@asciicode 0085  
                    ?_USBCtrlTrfInHandler 0001                               ??_ctmu_loop 0088  
           USBCtrlTrfTxService@byteToSend 0001              I2C_LCD_SetCursor@row_offsets 0067  
                              Delay_ms@ms 0060                           display_dec@edit 008B  
                                isdigit@c 0062                                  memset@p1 0060  
                 __end_of_command_at_hand 617A                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0019                          get_quot_rem@quot 0079  
                       RTCC_to_caltime@ct 0062             __size_of_RTCC_adjust_time_dec 0264  
           __size_of_RTCC_adjust_time_inc 0264                                  intlevel2 0000  
                               sprintf@ap 009A                                 sprintf@cp 009C  
                      __end_of_sleep_loop 5504                                 sprintf@sp 0083  
                  __size_of_USBDeviceInit 0162   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6966  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 002E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0013  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 000D           _USER_USB_CALLBACK_EVENT_HANDLER 6938  
                        ___lwmod@dividend 0060              i2USBTransferOnePacket@handle 0006  
                        ___lldiv@dividend 0060                                _RCSTA1bits 000FAC  
                       ?_caltime_to_epoch 0079                         _ringbuf_backspace 5B1C  
              __size_of_display_time_1602 014C                  __end_of_epoch_to_caltime 309C  
                __size_of_RTCC_to_caltime 00B6                             _print_content 00FA  
                              _OSCCONbits 000FD3            __end_of_button_timer_interrupt 24E0  
                      __end_of_print_time 59FA                i2USBTransferOnePacket@data 0002  
                      ??_caltime_to_epoch 007D                        ?_ringbuf_backspace 0068  
                  ??_USBConfigureEndpoint 0002                                  my_utoa@d 0088  
                   ?_USBCtrlTrfOutHandler 0001                                  my_utoa@v 0089  
                             _ringbuf_pop 4C30                               _ringbuf_num 4118  
                             _ringbuf_put 48EE                               _putUSBUSART 6B32  
                             ??_my_strcmp 0064                       _USBCtrlTrfRxService 3C1C  
                             _timer0_init 66F8                        _USBWakeFromSuspend 687A  
                             _timer1_init 650A                               _timer3_init 69BE  
                 _USBStdFeatureReqHandler 2768                               ??_port_loop 0064  
                      _USBCheckCDCRequest 4744                       _USBCtrlTrfTxService 44AE  
                     ??_ringbuf_backspace 006A                           get_quot_rem@div 007B  
                         get_quot_rem@num 007D                                _RTCCFGbits 000F3F  
                                sprintf@c 00A3                                  sprintf@f 0085  
                     ?_USBWakeFromSuspend 0001                          _is_usb_available 6BF8  
                        ___lldiv@quotient 0068                         caltime_to_RTCC@ct 0069  
                         ___lwmod@divisor 0062                         ??_caltime_to_RTCC 006B  
                   ??_USBCtrlTrfInHandler 0002                     _USBAlternateInterface 0054  
                         ___lwmod@counter 0064                       ?_USBCheckCDCRequest 0001  
               i2USBTransferOnePacket@dir 0001                 i2USBTransferOnePacket@len 0004  
                     USBEnableEndpoint@ep 000C                           _endpoint_number 004C  
                  __size_of_I2C_LCD_Clear 001A                      ?_USBCtrlTrfRxService 0001  
         epoch_to_caltime@day_since_epoch 0087                             ?_getsUSBUSART 0067  
                ?_USBCtrlEPAllowDataStage 0001                            _get_string_usb 655A  
                    ?_USBCtrlTrfTxService 0001                             my_utoa@digits 0087  
               __end_of_ringbuf_backspace 5BAA              _USBStatusStageTimeoutCounter 0043  
                   __size_of_I2C_LCD_Putc 0038                     __size_of_I2C_LCD_Puts 008E  
                   _delay_timer_interrupt 65A8                     __size_of_I2C_LCD_init 0058  
                    ??_USBWakeFromSuspend 0015                USBTransferOnePacket@handle 0065  
                    __end_of_CDCTxService 321A                              my_utoa@value 0085  
                    ??_USBCheckCDCRequest 0001                                _USB_CD_Ptr FADD  
                        ??_RTCC_from_RTCC 008C  
